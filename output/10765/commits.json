[
  {
    "sha": "c5ebddd114ea7794ca0c12af735294dcae805216",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNWViZGRkMTE0ZWE3Nzk0Y2EwYzEyYWY3MzUyOTRkY2FlODA1MjE2",
    "commit": {
      "author": {
        "name": "Ren\u00e9 Nyffenegger",
        "email": "rene.nyffenegger@adp-gmbh.ch",
        "date": "2017-07-13T11:39:27Z"
      },
      "committer": {
        "name": "Ren\u00e9 Nyffenegger",
        "email": "mail@renenyffenegger.ch",
        "date": "2017-07-17T14:57:14Z"
      },
      "message": "Tests: address placement should be deterministic by default",
      "tree": {
        "sha": "f38f44ba31dbf619799fc857ec5bd3f4b02c9c4e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f38f44ba31dbf619799fc857ec5bd3f4b02c9c4e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c5ebddd114ea7794ca0c12af735294dcae805216",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5ebddd114ea7794ca0c12af735294dcae805216",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c5ebddd114ea7794ca0c12af735294dcae805216",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5ebddd114ea7794ca0c12af735294dcae805216/comments",
    "author": {
      "login": "ReneNyffenegger",
      "id": 1092660,
      "node_id": "MDQ6VXNlcjEwOTI2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1092660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ReneNyffenegger",
      "html_url": "https://github.com/ReneNyffenegger",
      "followers_url": "https://api.github.com/users/ReneNyffenegger/followers",
      "following_url": "https://api.github.com/users/ReneNyffenegger/following{/other_user}",
      "gists_url": "https://api.github.com/users/ReneNyffenegger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ReneNyffenegger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ReneNyffenegger/subscriptions",
      "organizations_url": "https://api.github.com/users/ReneNyffenegger/orgs",
      "repos_url": "https://api.github.com/users/ReneNyffenegger/repos",
      "events_url": "https://api.github.com/users/ReneNyffenegger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ReneNyffenegger/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ReneNyffenegger",
      "id": 1092660,
      "node_id": "MDQ6VXNlcjEwOTI2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1092660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ReneNyffenegger",
      "html_url": "https://github.com/ReneNyffenegger",
      "followers_url": "https://api.github.com/users/ReneNyffenegger/followers",
      "following_url": "https://api.github.com/users/ReneNyffenegger/following{/other_user}",
      "gists_url": "https://api.github.com/users/ReneNyffenegger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ReneNyffenegger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ReneNyffenegger/subscriptions",
      "organizations_url": "https://api.github.com/users/ReneNyffenegger/orgs",
      "repos_url": "https://api.github.com/users/ReneNyffenegger/repos",
      "events_url": "https://api.github.com/users/ReneNyffenegger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ReneNyffenegger/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "479afa0f8486146a35f1fb96be1826061ecbcf23",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/479afa0f8486146a35f1fb96be1826061ecbcf23",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/479afa0f8486146a35f1fb96be1826061ecbcf23"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 6,
      "deletions": 34
    },
    "files": [
      {
        "sha": "c53744b4951ffee3b4f97bae13bca67d638ec55f",
        "filename": "src/test/addrman_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 34,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5ebddd114ea7794ca0c12af735294dcae805216/src/test/addrman_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5ebddd114ea7794ca0c12af735294dcae805216/src/test/addrman_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/addrman_tests.cpp?ref=c5ebddd114ea7794ca0c12af735294dcae805216",
        "patch": "@@ -15,9 +15,14 @@ class CAddrManTest : public CAddrMan\n     uint64_t state;\n \n public:\n-    CAddrManTest()\n+    CAddrManTest(bool makeDeterministic = true)\n     {\n         state = 1;\n+\n+        if (makeDeterministic) {\n+            //  Set addrman addr placement to be deterministic.\n+            MakeDeterministic();\n+        }\n     }\n \n     //! Ensure that bucket placement is always the same for testing purposes.\n@@ -79,9 +84,6 @@ BOOST_AUTO_TEST_CASE(addrman_simple)\n {\n     CAddrManTest addrman;\n \n-    // Set addrman addr placement to be deterministic.\n-    addrman.MakeDeterministic();\n-\n     CNetAddr source = ResolveIP(\"252.2.2.2\");\n \n     // Test: Does Addrman respond correctly when empty.\n@@ -131,9 +133,6 @@ BOOST_AUTO_TEST_CASE(addrman_ports)\n {\n     CAddrManTest addrman;\n \n-    // Set addrman addr placement to be deterministic.\n-    addrman.MakeDeterministic();\n-\n     CNetAddr source = ResolveIP(\"252.2.2.2\");\n \n     BOOST_CHECK_EQUAL(addrman.size(), 0);\n@@ -163,9 +162,6 @@ BOOST_AUTO_TEST_CASE(addrman_select)\n {\n     CAddrManTest addrman;\n \n-    // Set addrman addr placement to be deterministic.\n-    addrman.MakeDeterministic();\n-\n     CNetAddr source = ResolveIP(\"252.2.2.2\");\n \n     // Test: Select from new with 1 addr in new.\n@@ -225,9 +221,6 @@ BOOST_AUTO_TEST_CASE(addrman_new_collisions)\n {\n     CAddrManTest addrman;\n \n-    // Set addrman addr placement to be deterministic.\n-    addrman.MakeDeterministic();\n-\n     CNetAddr source = ResolveIP(\"252.2.2.2\");\n \n     BOOST_CHECK_EQUAL(addrman.size(), 0);\n@@ -254,9 +247,6 @@ BOOST_AUTO_TEST_CASE(addrman_tried_collisions)\n {\n     CAddrManTest addrman;\n \n-    // Set addrman addr placement to be deterministic.\n-    addrman.MakeDeterministic();\n-\n     CNetAddr source = ResolveIP(\"252.2.2.2\");\n \n     BOOST_CHECK_EQUAL(addrman.size(), 0);\n@@ -284,9 +274,6 @@ BOOST_AUTO_TEST_CASE(addrman_find)\n {\n     CAddrManTest addrman;\n \n-    // Set addrman addr placement to be deterministic.\n-    addrman.MakeDeterministic();\n-\n     BOOST_CHECK_EQUAL(addrman.size(), 0);\n \n     CAddress addr1 = CAddress(ResolveService(\"250.1.2.1\", 8333), NODE_NONE);\n@@ -320,9 +307,6 @@ BOOST_AUTO_TEST_CASE(addrman_create)\n {\n     CAddrManTest addrman;\n \n-    // Set addrman addr placement to be deterministic.\n-    addrman.MakeDeterministic();\n-\n     BOOST_CHECK_EQUAL(addrman.size(), 0);\n \n     CAddress addr1 = CAddress(ResolveService(\"250.1.2.1\", 8333), NODE_NONE);\n@@ -343,9 +327,6 @@ BOOST_AUTO_TEST_CASE(addrman_delete)\n {\n     CAddrManTest addrman;\n \n-    // Set addrman addr placement to be deterministic.\n-    addrman.MakeDeterministic();\n-\n     BOOST_CHECK_EQUAL(addrman.size(), 0);\n \n     CAddress addr1 = CAddress(ResolveService(\"250.1.2.1\", 8333), NODE_NONE);\n@@ -366,9 +347,6 @@ BOOST_AUTO_TEST_CASE(addrman_getaddr)\n {\n     CAddrManTest addrman;\n \n-    // Set addrman addr placement to be deterministic.\n-    addrman.MakeDeterministic();\n-\n     // Test: Sanity check, GetAddr should never return anything if addrman\n     //  is empty.\n     BOOST_CHECK_EQUAL(addrman.size(), 0);\n@@ -430,9 +408,6 @@ BOOST_AUTO_TEST_CASE(caddrinfo_get_tried_bucket)\n {\n     CAddrManTest addrman;\n \n-    // Set addrman addr placement to be deterministic.\n-    addrman.MakeDeterministic();\n-\n     CAddress addr1 = CAddress(ResolveService(\"250.1.1.1\", 8333), NODE_NONE);\n     CAddress addr2 = CAddress(ResolveService(\"250.1.1.1\", 9999), NODE_NONE);\n \n@@ -487,9 +462,6 @@ BOOST_AUTO_TEST_CASE(caddrinfo_get_new_bucket)\n {\n     CAddrManTest addrman;\n \n-    // Set addrman addr placement to be deterministic.\n-    addrman.MakeDeterministic();\n-\n     CAddress addr1 = CAddress(ResolveService(\"250.1.2.1\", 8333), NODE_NONE);\n     CAddress addr2 = CAddress(ResolveService(\"250.1.2.1\", 9999), NODE_NONE);\n "
      }
    ]
  }
]