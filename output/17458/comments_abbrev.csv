DrahtBot,2019-11-13 02:01:14,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/17458#issuecomment-553202841,553202841,
instagibbs,2019-12-06 20:04:04,utACK https://github.com/bitcoin/bitcoin/pull/17458/commits/693cfa66d10c916d4554c7639dc772727248c9fd,https://github.com/bitcoin/bitcoin/pull/17458#issuecomment-562718496,562718496,
achow101,2020-05-26 20:02:11,There seems to be a random sigabrt in the BnBExhaustion benchmark.,https://github.com/bitcoin/bitcoin/pull/17458#issuecomment-634248868,634248868,
fjahr,2020-06-14 12:22:13,"ACK 6a6d19e0e5d91673a0d361ffa732b6dc43890034\n\nTests run fine for me locally.",https://github.com/bitcoin/bitcoin/pull/17458#issuecomment-643759427,643759427,
MarcoFalke,2020-06-19 15:59:18,re-run ci,https://github.com/bitcoin/bitcoin/pull/17458#issuecomment-646711891,646711891,
adamjonas,2020-06-19 16:50:27,"I thought it was a CI problem, but I'm able to reproduce the test failures from the last run.\n\n```\nwallet/test/coinselector_tests.cpp:176: error: in ""coinselector_tests/bnb_search_test"": check SelectCoinsBnB(GroupCoins(utxo_pool), 5 * CENT, 0.5 * CENT, selection, value_ret, not_input_fees) has failed\nwallet/test/coinselector_tests.cpp:177: error: in ""coinselector_tests/bnb_search_test"": ch",https://github.com/bitcoin/bitcoin/pull/17458#issuecomment-646748657,646748657,
achow101,2020-06-19 23:01:13,"I'm unable to reproduce the test failures. After rebasing, I also can't get the random sigabrt I was getting.",https://github.com/bitcoin/bitcoin/pull/17458#issuecomment-646889831,646889831,
adamjonas,2020-06-24 12:33:22,Confirming the test failures from 3ed30f4ee are passing in 410c8b1734bfd0d113b50f0728a20a7962b05449.,https://github.com/bitcoin/bitcoin/pull/17458#issuecomment-648791960,648791960,
instagibbs,2020-08-13 01:57:13,"reACK 9adc2f80fc14f11ee2b1f989ee7be71b58481e6f\n\n",https://github.com/bitcoin/bitcoin/pull/17458#issuecomment-673203458,673203458,
fanquake,2020-08-13 02:05:20,@Xekyo did you want to take another look here?,https://github.com/bitcoin/bitcoin/pull/17458#issuecomment-673205591,673205591,
fjahr,2020-08-13 14:35:58,"re-ACK 9adc2f80fc14f11ee2b1f989ee7be71b58481e6f\n\nper `git range-diff 4af01b37d40246cd1fdb54719855927e36a36b46..6a6d19e0e5d91673a0d361ffa732b6dc43890034 edec7f7c254294cd5c46ae5cf304353d458bb852..9adc2f80fc14f11ee2b1f989ee7be71b58481e6f`",https://github.com/bitcoin/bitcoin/pull/17458#issuecomment-673516249,673516249,
instagibbs,2019-12-06 19:02:14,"this only isn't a reachable ""bug"" because before this PR the values are the same, yes?",https://github.com/bitcoin/bitcoin/pull/17458#discussion_r354983896,354983896,src/wallet/coinselection.cpp
instagibbs,2019-12-06 19:10:43,This commit makes `effective_value` a bit ambiguous to the reader now that both short and long-range fees are being stored.,https://github.com/bitcoin/bitcoin/pull/17458#discussion_r354987133,354987133,src/wallet/coinselection.h
instagibbs,2019-12-06 19:37:29,"hmm actually no, this happens for any `OutputGroup`, which includes Bnb?",https://github.com/bitcoin/bitcoin/pull/17458#discussion_r354997799,354997799,src/wallet/coinselection.cpp
achow101,2019-12-06 19:57:25,it isn't reachable because the values are the same as the outputs' effective values aren't ever actually to their effective values.,https://github.com/bitcoin/bitcoin/pull/17458#discussion_r355005876,355005876,src/wallet/coinselection.cpp
achow101,2019-12-06 20:01:58,It makes everything easier to precompute and store these since they are used  in multiple places.,https://github.com/bitcoin/bitcoin/pull/17458#discussion_r355007695,355007695,src/wallet/coinselection.h
instagibbs,2019-12-06 20:03:05,"ah I see, it's being set externally in `SelectCoinsMinConf`. Ok, this set of changes makes it much easier to understand.",https://github.com/bitcoin/bitcoin/pull/17458#discussion_r355008088,355008088,src/wallet/coinselection.cpp
instagibbs,2019-12-06 20:04:43,"I understand the motivation, my nitting is about naming since we're expanding the ""scope"" of what is being cached.",https://github.com/bitcoin/bitcoin/pull/17458#discussion_r355008697,355008697,src/wallet/coinselection.h
fjahr,2020-03-09 15:02:50,Should the reverse not also be added to the `Insert` method above?,https://github.com/bitcoin/bitcoin/pull/17458#discussion_r389749045,389749045,src/wallet/coinselection.cpp
achow101,2020-03-09 15:26:25,"Yes, but no. The `OutputGroup`s are created (and `Insert` is called) before the fees are set. But `Discard` is called after the fees are set. So not incrementing `fee` and `long_term_fee` in `Insert` is safe because they are 0 at that time. I guess it still should for consistency.",https://github.com/bitcoin/bitcoin/pull/17458#discussion_r389765666,389765666,src/wallet/coinselection.cpp
fjahr,2020-05-23 19:29:37,"To me this method looks overly complicated and doesn't fit so well with the rest of the API. I would suggest simplifying it like this: https://github.com/fjahr/bitcoin/commit/404e7f2516778510f98b69a4651141d0a5944cbd\n\nTests passed for me with this change.",https://github.com/bitcoin/bitcoin/pull/17458#discussion_r429572035,429572035,src/wallet/coinselection.cpp
fjahr,2020-05-23 19:35:07,"Yeah, I think it would be better if it was added. Otherwise, bugs could be introduced if `Insert` is used differently in the future.",https://github.com/bitcoin/bitcoin/pull/17458#discussion_r429572421,429572421,src/wallet/coinselection.cpp
achow101,2020-05-26 18:18:26,My understanding was that this was not safe and could result in undefined behavior because we are actively iterating through the vector while also modifying at the same time (`Discard` erases from the vector). So the safe way to do this is to use iterators.,https://github.com/bitcoin/bitcoin/pull/17458#discussion_r430614504,430614504,src/wallet/coinselection.cpp
achow101,2020-05-26 18:29:23,I've added it to insert.,https://github.com/bitcoin/bitcoin/pull/17458#discussion_r430621004,430621004,src/wallet/coinselection.cpp
instagibbs,2020-05-26 18:55:58,Comment on what this is doing would be :ok_hand: ,https://github.com/bitcoin/bitcoin/pull/17458#discussion_r430636423,430636423,src/wallet/coinselection.h
instagibbs,2020-05-26 18:58:33,please annotate arg since you're throwing a special(weird) value at it,https://github.com/bitcoin/bitcoin/pull/17458#discussion_r430637875,430637875,src/wallet/wallet.cpp
fjahr,2020-05-26 20:15:25,You are right! I think this is still a bit of an improvement but only if you have to retouch https://github.com/fjahr/bitcoin/commit/a4388848b7ba409275bf1424dfd724ac1f3e15f9,https://github.com/bitcoin/bitcoin/pull/17458#discussion_r430681932,430681932,src/wallet/coinselection.cpp
Xekyo,2020-06-16 04:19:12,How would a UTXO's input size ever be smaller than 0? Shouldn't that be an exception?,https://github.com/bitcoin/bitcoin/pull/17458#discussion_r440576966,440576966,src/wallet/coinselection.cpp
Xekyo,2020-06-16 04:41:54,"My understanding from #17526 was that one instance of `OutputGroup` described a single UTXO with its ancestry, which seems consistent with the struct above.\nIt seems to me though, that the function `GetPositiveOnlyGroup()` operates on a set of OutputGroup in the above sense, though. Is that the case?",https://github.com/bitcoin/bitcoin/pull/17458#discussion_r440582379,440582379,src/wallet/coinselection.h
achow101,2020-06-16 21:20:39,`m_input_bytes` default is -1 to indicate it wasn't calculated.,https://github.com/bitcoin/bitcoin/pull/17458#discussion_r441149027,441149027,src/wallet/coinselection.cpp
achow101,2020-06-16 21:22:37,"No, `OutputGroup` is a group of UTXOs that we want to consider together. It doesn't include ancestry. IIRC this is used for avoid reuse and for some privacy stuff.",https://github.com/bitcoin/bitcoin/pull/17458#discussion_r441149910,441149910,src/wallet/coinselection.h
MarcoFalke,2020-06-20 11:27:46,"```\n node1 stderr wallet/coinselection.cpp:317:19: runtime error: signed integer overflow: 7389747844179034116 + 7389747844179034116 cannot be represented in type 'long'\n```\n\n```\n    #0 0x55cf4e900813 in OutputGroup::Insert(CInputCoin const&, int, bool, unsigned long, unsigned long) /tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/wallet/coinselection.cpp:317:19\n  ",https://github.com/bitcoin/bitcoin/pull/17458#discussion_r443123710,443123710,src/wallet/coinselection.cpp
achow101,2020-06-22 20:24:15,Added a comment,https://github.com/bitcoin/bitcoin/pull/17458#discussion_r443804838,443804838,src/wallet/coinselection.h
achow101,2020-06-22 20:24:18,Added a comment,https://github.com/bitcoin/bitcoin/pull/17458#discussion_r443804869,443804869,src/wallet/wallet.cpp
achow101,2020-06-22 20:24:35,Should be fixed now.,https://github.com/bitcoin/bitcoin/pull/17458#discussion_r443805029,443805029,src/wallet/coinselection.cpp
Xekyo,2020-08-14 07:10:42,I see thank you.,https://github.com/bitcoin/bitcoin/pull/17458#discussion_r470449586,470449586,src/wallet/coinselection.cpp
Xekyo,2020-08-14 07:12:02,"I see, thanks. I wasn't thinking about the bundling of all utxos associated with one address.",https://github.com/bitcoin/bitcoin/pull/17458#discussion_r470450054,470450054,src/wallet/coinselection.h
Xekyo,2020-08-14 07:30:29,"Actually, why is the `long_term_fee` tracked additionally to just the fee here? Is that just for calculating the waste metric? \n\nIf I understand that right, at this point the output group is already being cast into the context of the current transaction (i.e. the fee is specific to the transaction we are building). Since the waste metric is only dependent on the current fee rate and the long t",https://github.com/bitcoin/bitcoin/pull/17458#discussion_r470457712,470457712,src/wallet/coinselection.cpp
achow101,2020-08-14 16:08:23,"Indeed, I think it would be better to track the waste. I will do that in a followup as it is a slightly larger change which touches the actual coin selection algorithms.",https://github.com/bitcoin/bitcoin/pull/17458#discussion_r470718209,470718209,src/wallet/coinselection.cpp
