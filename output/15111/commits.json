[
  {
    "sha": "72c81f828b85aa1a1c0666cba9077dbd2c25b0a2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MmM4MWY4MjhiODVhYTFhMWMwNjY2Y2JhOTA3N2RiZDJjMjViMGEy",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-01-05T21:04:49Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-01-05T21:04:49Z"
      },
      "message": "Avoid UB (member call on nullptr) when failing to generate randomness in the startup process",
      "tree": {
        "sha": "9fc1aeda9acd216bf4e52b1191d30434e508b6a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9fc1aeda9acd216bf4e52b1191d30434e508b6a7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/72c81f828b85aa1a1c0666cba9077dbd2c25b0a2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72c81f828b85aa1a1c0666cba9077dbd2c25b0a2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/72c81f828b85aa1a1c0666cba9077dbd2c25b0a2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72c81f828b85aa1a1c0666cba9077dbd2c25b0a2/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9c719987718d9fcc3a689e50f5212acc7ead7606",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c719987718d9fcc3a689e50f5212acc7ead7606",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9c719987718d9fcc3a689e50f5212acc7ead7606"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 13,
      "deletions": 8
    },
    "files": [
      {
        "sha": "b701f4a431f1bf42aafab8407e78e3314712f697",
        "filename": "src/logging.h",
        "status": "modified",
        "additions": 13,
        "deletions": 8,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72c81f828b85aa1a1c0666cba9077dbd2c25b0a2/src/logging.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72c81f828b85aa1a1c0666cba9077dbd2c25b0a2/src/logging.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.h?ref=72c81f828b85aa1a1c0666cba9077dbd2c25b0a2",
        "patch": "@@ -132,15 +132,20 @@ bool GetLogCategory(BCLog::LogFlags& flag, const std::string& str);\n template <typename... Args>\n static inline void LogPrintf(const char* fmt, const Args&... args)\n {\n-    if (g_logger->Enabled()) {\n-        std::string log_msg;\n-        try {\n-            log_msg = tfm::format(fmt, args...);\n-        } catch (tinyformat::format_error& fmterr) {\n-            /* Original format string will have newline so don't add one here */\n-            log_msg = \"Error \\\"\" + std::string(fmterr.what()) + \"\\\" while formatting log message: \" + fmt;\n-        }\n+    if (g_logger && !g_logger->Enabled()) {\n+        return;\n+    }\n+    std::string log_msg;\n+    try {\n+        log_msg = tfm::format(fmt, args...);\n+    } catch (tinyformat::format_error& fmterr) {\n+        /* Original format string will have newline so don't add one here */\n+        log_msg = \"Error \\\"\" + std::string(fmterr.what()) + \"\\\" while formatting log message: \" + fmt;\n+    }\n+    if (g_logger) {\n         g_logger->LogPrintStr(log_msg);\n+    } else {\n+        fwrite(log_msg.data(), 1, log_msg.size(), stderr);\n     }\n }\n "
      }
    ]
  }
]