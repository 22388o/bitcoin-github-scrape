[
  {
    "sha": "7331ea404e2fef7994bc1e6676aa5b22fbb8aa77",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MzMxZWE0MDRlMmZlZjc5OTRiYzFlNjY3NmFhNWIyMmZiYjhhYTc3",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2017-07-31T21:36:27Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2017-08-03T20:52:29Z"
      },
      "message": "test: Add walletnotify functional test",
      "tree": {
        "sha": "34bda9fc33037061ad9a430500601a295c652ed0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/34bda9fc33037061ad9a430500601a295c652ed0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7331ea404e2fef7994bc1e6676aa5b22fbb8aa77",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7331ea404e2fef7994bc1e6676aa5b22fbb8aa77",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7331ea404e2fef7994bc1e6676aa5b22fbb8aa77",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7331ea404e2fef7994bc1e6676aa5b22fbb8aa77/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e222618a32a16cf0efae392e6349c10c38e57db6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e222618a32a16cf0efae392e6349c10c38e57db6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e222618a32a16cf0efae392e6349c10c38e57db6"
      }
    ],
    "stats": {
      "total": 63,
      "additions": 63,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f211d3a745b08e262930a9d1f3f5ebb99d4bd399",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7331ea404e2fef7994bc1e6676aa5b22fbb8aa77/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7331ea404e2fef7994bc1e6676aa5b22fbb8aa77/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=7331ea404e2fef7994bc1e6676aa5b22fbb8aa77",
        "patch": "@@ -149,6 +149,7 @@\n     'invalidateblock.py',\n     'p2p-acceptblock.py',\n     'replace-by-fee.py',\n+    'walletnotify.py',\n ]\n \n # Place EXTENDED_SCRIPTS first since it has the 3 longest running tests"
      },
      {
        "sha": "508a6dc223e91f22441dff740b05b4db6276b52a",
        "filename": "test/functional/walletnotify.py",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7331ea404e2fef7994bc1e6676aa5b22fbb8aa77/test/functional/walletnotify.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7331ea404e2fef7994bc1e6676aa5b22fbb8aa77/test/functional/walletnotify.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/walletnotify.py?ref=7331ea404e2fef7994bc1e6676aa5b22fbb8aa77",
        "patch": "@@ -0,0 +1,62 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"Test walletnotify.\n+\n+Verify that a bitcoind node calls the given command for each wallet transaction\n+\"\"\"\n+\n+import os\n+import time\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+class WalletNotifyTest(BitcoinTestFramework):\n+\n+    def __init__(self):\n+        super().__init__()\n+\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.block_count = 10\n+\n+    def setup_network(self):\n+        self.path = os.path.join(self.options.tmpdir, 'transactions.txt')\n+\n+        # the command will append the notified transaction hash to file\n+        self.extra_args = [['-walletnotify=echo %%s >> %s' % self.path]]\n+        super().setup_network()\n+\n+    def run_test(self):\n+        self.nodes[0].generate(self.block_count)\n+        self.test_file_content()\n+\n+        # prepare for next test\n+        os.remove(self.path)\n+\n+        # restart node with rescan to force wallet notifications\n+        self.stop_node(0)\n+        self.nodes[0] = self.start_node(0, self.options.tmpdir, ['-rescan', '-walletnotify=echo %%s >> %s' % self.path])\n+        self.test_file_content()\n+\n+    def test_file_content(self):\n+        txids_rpc = list(map(lambda t: t['txid'], self.nodes[0].listtransactions(\"*\", self.block_count)))\n+\n+        # wait at most 10 seconds for expected file size before reading the content\n+        attempts = 0\n+        while os.stat(self.path).st_size < (self.block_count * 65) and attempts < 100:\n+            time.sleep(0.1)\n+            attempts += 1\n+\n+        # file content should equal the generated transaction hashes\n+        with open(self.path, 'r') as f:\n+            txids_file = f.read().splitlines()\n+\n+            # txids are sorted because there is no order guarantee in notifications\n+            assert_equal(sorted(txids_rpc), sorted(txids_file))\n+\n+if __name__ == '__main__':\n+    WalletNotifyTest().main()"
      }
    ]
  }
]