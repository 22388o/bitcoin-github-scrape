[
  {
    "sha": "fab32557f25c93fecb7bb33f78fdf3e9160c89e5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWIzMjU1N2YyNWM5M2ZlY2I3YmIzM2Y3OGZkZjNlOTE2MGM4OWU1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-01T02:31:43Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-01T16:25:13Z"
      },
      "message": "rpc: Make rpc documentation not depend on rpc args",
      "tree": {
        "sha": "15db216b504a34abe6d41b4f3129cde81d1de874",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/15db216b504a34abe6d41b4f3129cde81d1de874"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fab32557f25c93fecb7bb33f78fdf3e9160c89e5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgNVQv/RhcfjzowSHd8B0YENNcr3NOiybuxiF8fyJwGQZQSQQWPsHgQ9Q4KpOpr\n67DZls0Mdrjqcr5A7h0alQi9oM3IbhxhRYFGM7GDHG4e8OExwsjNrUM1HPhaKh76\nut2W32Csz7mBeKmUtGz3Ps4bWnObrWt4zqUS1JCTAeMq95tK5lPwSnsupJ5TsA5d\nuneIA3a00NBjafBrKfsD9TtJ6f7HBbEAeBCgMHSEwEfH0BWm+B43VxbA/CxhFSzB\n3AIGVsD0+0t/nP1jItjHZuhD5/brGjjv6npc3/dyLh3Y0WFtd+vj/Yim3RGD+V7y\ncj+7PGPg0bvGoly2e7qVoRnRiQm5uBQEtglHBF0ofPkBuP6bbyiLC2epcHK4lXui\nnpYxmdjMbnt3RrjPZDxRW16f6lKwOSKhGRAgCrIZxV3fLMc80ptKWevZY7Jp9OQw\nfiLoUEddqtg5Y1cjRXfMFtz5E1ToUIfDq4cyfdDj7nkEMd8rc6zh6nMhHJ3DSIvv\nLV/NIHUt\n=ndkg\n-----END PGP SIGNATURE-----",
        "payload": "tree 15db216b504a34abe6d41b4f3129cde81d1de874\nparent 41fa2926d86a57c9623d34debef20746ee2f454a\nauthor MarcoFalke <falke.marco@gmail.com> 1585708303 +0800\ncommitter MarcoFalke <falke.marco@gmail.com> 1585758313 +0800\n\nrpc: Make rpc documentation not depend on rpc args\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab32557f25c93fecb7bb33f78fdf3e9160c89e5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fab32557f25c93fecb7bb33f78fdf3e9160c89e5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab32557f25c93fecb7bb33f78fdf3e9160c89e5/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "41fa2926d86a57c9623d34debef20746ee2f454a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41fa2926d86a57c9623d34debef20746ee2f454a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/41fa2926d86a57c9623d34debef20746ee2f454a"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 8,
      "deletions": 15
    },
    "files": [
      {
        "sha": "d8b3b57b618fb9d368bb35719eec1f51ebb84e0b",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 14,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab32557f25c93fecb7bb33f78fdf3e9160c89e5/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab32557f25c93fecb7bb33f78fdf3e9160c89e5/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=fab32557f25c93fecb7bb33f78fdf3e9160c89e5",
        "patch": "@@ -38,6 +38,7 @@\n \n \n static const std::string WALLET_ENDPOINT_BASE = \"/wallet/\";\n+static const std::string HELP_REQUIRING_PASSPHRASE{\"\\nRequires wallet passphrase to be set with walletpassphrase call if wallet is encrypted.\\n\"};\n \n static inline bool GetAvoidReuseFlag(const CWallet* const pwallet, const UniValue& param) {\n     bool can_avoid_reuse = pwallet->IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n@@ -98,13 +99,6 @@ std::shared_ptr<CWallet> GetWalletForJSONRPCRequest(const JSONRPCRequest& reques\n     return wallets.size() == 1 || (request.fHelp && wallets.size() > 0) ? wallets[0] : nullptr;\n }\n \n-std::string HelpRequiringPassphrase(const CWallet* pwallet)\n-{\n-    return pwallet && pwallet->IsCrypted()\n-        ? \"\\nRequires wallet passphrase to be set with walletpassphrase call.\"\n-        : \"\";\n-}\n-\n bool EnsureWalletIsAvailable(const CWallet* pwallet, bool avoidException)\n {\n     if (pwallet) return true;\n@@ -369,7 +363,7 @@ static UniValue sendtoaddress(const JSONRPCRequest& request)\n \n             RPCHelpMan{\"sendtoaddress\",\n                 \"\\nSend an amount to a given address.\" +\n-                    HelpRequiringPassphrase(pwallet) + \"\\n\",\n+        HELP_REQUIRING_PASSPHRASE,\n                 {\n                     {\"address\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The bitcoin address to send to.\"},\n                     {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The amount in \" + CURRENCY_UNIT + \" to send. eg 0.1\"},\n@@ -527,7 +521,7 @@ static UniValue signmessage(const JSONRPCRequest& request)\n \n             RPCHelpMan{\"signmessage\",\n                 \"\\nSign a message with the private key of an address\" +\n-                    HelpRequiringPassphrase(pwallet) + \"\\n\",\n+        HELP_REQUIRING_PASSPHRASE,\n                 {\n                     {\"address\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The bitcoin address to use for the private key.\"},\n                     {\"message\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The message to create a signature of.\"},\n@@ -810,7 +804,7 @@ static UniValue sendmany(const JSONRPCRequest& request)\n \n     RPCHelpMan{\"sendmany\",\n                 \"\\nSend multiple times. Amounts are double-precision floating point numbers.\" +\n-                    HelpRequiringPassphrase(pwallet) + \"\\n\",\n+        HELP_REQUIRING_PASSPHRASE,\n                 {\n                     {\"dummy\", RPCArg::Type::STR, RPCArg::Optional::NO, \"Must be set to \\\"\\\" for backwards compatibility.\", \"\\\"\\\"\"},\n                     {\"amounts\", RPCArg::Type::OBJ, RPCArg::Optional::NO, \"The addresses and amounts\",\n@@ -1851,7 +1845,7 @@ static UniValue keypoolrefill(const JSONRPCRequest& request)\n \n             RPCHelpMan{\"keypoolrefill\",\n                 \"\\nFills the keypool.\"+\n-                    HelpRequiringPassphrase(pwallet) + \"\\n\",\n+        HELP_REQUIRING_PASSPHRASE,\n                 {\n                     {\"newsize\", RPCArg::Type::NUM, /* default */ \"100\", \"The new keypool size\"},\n                 },\n@@ -3245,7 +3239,7 @@ UniValue signrawtransactionwithwallet(const JSONRPCRequest& request)\n                 \"\\nSign inputs for raw transaction (serialized, hex-encoded).\\n\"\n                 \"The second optional argument (may be null) is an array of previous transaction outputs that\\n\"\n                 \"this transaction depends on but may not yet be in the block chain.\" +\n-                    HelpRequiringPassphrase(pwallet) + \"\\n\",\n+        HELP_REQUIRING_PASSPHRASE,\n                 {\n                     {\"hexstring\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction hex string\"},\n                     {\"prevtxs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"The previous dependent transaction outputs\",\n@@ -3980,7 +3974,7 @@ UniValue sethdseed(const JSONRPCRequest& request)\n                 \"\\nSet or generate a new HD wallet seed. Non-HD wallets will not be upgraded to being a HD wallet. Wallets that are already\\n\"\n                 \"HD will have a new HD seed set so that new keys added to the keypool will be derived from this new seed.\\n\"\n                 \"\\nNote that you will need to MAKE A NEW BACKUP of your wallet after setting the HD wallet seed.\" +\n-                    HelpRequiringPassphrase(pwallet) + \"\\n\",\n+        HELP_REQUIRING_PASSPHRASE,\n                 {\n                     {\"newkeypool\", RPCArg::Type::BOOL, /* default */ \"true\", \"Whether to flush old unused addresses, including change addresses, from the keypool and regenerate it.\\n\"\n             \"                             If true, the next address from getnewaddress and change address from getrawchangeaddress will be from this new seed.\\n\"\n@@ -4057,7 +4051,7 @@ UniValue walletprocesspsbt(const JSONRPCRequest& request)\n             RPCHelpMan{\"walletprocesspsbt\",\n                 \"\\nUpdate a PSBT with input information from our wallet and then sign inputs\\n\"\n                 \"that we can sign for.\" +\n-                    HelpRequiringPassphrase(pwallet) + \"\\n\",\n+        HELP_REQUIRING_PASSPHRASE,\n                 {\n                     {\"psbt\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction base64 string\"},\n                     {\"sign\", RPCArg::Type::BOOL, /* default */ \"true\", \"Also sign the transaction when updating\"},"
      },
      {
        "sha": "a7a29de9c678a3910b66496bc113bf645f352438",
        "filename": "src/wallet/rpcwallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab32557f25c93fecb7bb33f78fdf3e9160c89e5/src/wallet/rpcwallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab32557f25c93fecb7bb33f78fdf3e9160c89e5/src/wallet/rpcwallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.h?ref=fab32557f25c93fecb7bb33f78fdf3e9160c89e5",
        "patch": "@@ -38,7 +38,6 @@ void RegisterWalletRPCCommands(interfaces::Chain& chain, std::vector<std::unique\n  */\n std::shared_ptr<CWallet> GetWalletForJSONRPCRequest(const JSONRPCRequest& request);\n \n-std::string HelpRequiringPassphrase(const CWallet*);\n void EnsureWalletIsUnlocked(const CWallet*);\n bool EnsureWalletIsAvailable(const CWallet*, bool avoidException);\n LegacyScriptPubKeyMan& EnsureLegacyScriptPubKeyMan(CWallet& wallet, bool also_create = false);"
      }
    ]
  }
]