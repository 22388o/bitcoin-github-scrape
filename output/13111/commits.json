[
  {
    "sha": "537efe19e696a97ca6a4f461b2c1b4cb7ab001b7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MzdlZmUxOWU2OTZhOTdjYTZhNGY0NjFiMmMxYjRjYjdhYjAwMWI3",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-06-12T13:40:52Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-06-12T15:11:28Z"
      },
      "message": "rpc: Extract GetWalletNameFromJSONRPCRequest from GetWalletForJSONRPCRequest",
      "tree": {
        "sha": "e45e2d5c7af24cfc3ec325af19e9065188f8ff4a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e45e2d5c7af24cfc3ec325af19e9065188f8ff4a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/537efe19e696a97ca6a4f461b2c1b4cb7ab001b7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/537efe19e696a97ca6a4f461b2c1b4cb7ab001b7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/537efe19e696a97ca6a4f461b2c1b4cb7ab001b7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/537efe19e696a97ca6a4f461b2c1b4cb7ab001b7/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e4082d59f53d25ccafb96fc829cadbdd13b25b16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4082d59f53d25ccafb96fc829cadbdd13b25b16",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e4082d59f53d25ccafb96fc829cadbdd13b25b16"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 12,
      "deletions": 3
    },
    "files": [
      {
        "sha": "d4c281b13ce1df1131e1f05cc90c5b659fda26a2",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 3,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/537efe19e696a97ca6a4f461b2c1b4cb7ab001b7/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/537efe19e696a97ca6a4f461b2c1b4cb7ab001b7/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=537efe19e696a97ca6a4f461b2c1b4cb7ab001b7",
        "patch": "@@ -40,12 +40,21 @@\n \n static const std::string WALLET_ENDPOINT_BASE = \"/wallet/\";\n \n-std::shared_ptr<CWallet> GetWalletForJSONRPCRequest(const JSONRPCRequest& request)\n+bool GetWalletNameFromJSONRPCRequest(const JSONRPCRequest& request, std::string& wallet_name)\n {\n     if (request.URI.substr(0, WALLET_ENDPOINT_BASE.size()) == WALLET_ENDPOINT_BASE) {\n         // wallet endpoint was used\n-        std::string requestedWallet = urlDecode(request.URI.substr(WALLET_ENDPOINT_BASE.size()));\n-        std::shared_ptr<CWallet> pwallet = GetWallet(requestedWallet);\n+        wallet_name = urlDecode(request.URI.substr(WALLET_ENDPOINT_BASE.size()));\n+        return true;\n+    }\n+    return false;\n+}\n+\n+std::shared_ptr<CWallet> GetWalletForJSONRPCRequest(const JSONRPCRequest& request)\n+{\n+    std::string wallet_name;\n+    if (GetWalletNameFromJSONRPCRequest(request, wallet_name)) {\n+        std::shared_ptr<CWallet> pwallet = GetWallet(wallet_name);\n         if (!pwallet) throw JSONRPCError(RPC_WALLET_NOT_FOUND, \"Requested wallet does not exist or is not loaded\");\n         return pwallet;\n     }"
      }
    ]
  },
  {
    "sha": "6608c369b1a6cfc1d5b4a7905c193baa999ba84c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NjA4YzM2OWIxYTZjZmMxZDViNGE3OTA1YzE5M2JhYTk5OWJhODRj",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-04-28T21:36:43Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-06-18T15:35:17Z"
      },
      "message": "rpc: Add unloadwallet RPC",
      "tree": {
        "sha": "41f90ff39615d55a3364a0fad8bed0d0980b525b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/41f90ff39615d55a3364a0fad8bed0d0980b525b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6608c369b1a6cfc1d5b4a7905c193baa999ba84c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6608c369b1a6cfc1d5b4a7905c193baa999ba84c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6608c369b1a6cfc1d5b4a7905c193baa999ba84c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6608c369b1a6cfc1d5b4a7905c193baa999ba84c/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "537efe19e696a97ca6a4f461b2c1b4cb7ab001b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/537efe19e696a97ca6a4f461b2c1b4cb7ab001b7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/537efe19e696a97ca6a4f461b2c1b4cb7ab001b7"
      }
    ],
    "stats": {
      "total": 72,
      "additions": 68,
      "deletions": 4
    },
    "files": [
      {
        "sha": "daef8473f1fd2f857e548fc7a9a8614b7abb47fb",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 52,
        "deletions": 2,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6608c369b1a6cfc1d5b4a7905c193baa999ba84c/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6608c369b1a6cfc1d5b4a7905c193baa999ba84c/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=6608c369b1a6cfc1d5b4a7905c193baa999ba84c",
        "patch": "@@ -3076,7 +3076,7 @@ static UniValue listwallets(const JSONRPCRequest& request)\n     return obj;\n }\n \n-UniValue loadwallet(const JSONRPCRequest& request)\n+static UniValue loadwallet(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n@@ -3123,7 +3123,7 @@ UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-UniValue createwallet(const JSONRPCRequest& request)\n+static UniValue createwallet(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1) {\n         throw std::runtime_error(\n@@ -3170,6 +3170,55 @@ UniValue createwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n+static UniValue unloadwallet(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 1) {\n+        throw std::runtime_error(\n+            \"unloadwallet ( \\\"wallet_name\\\" )\\n\"\n+            \"Unloads the wallet referenced by the request endpoint otherwise unloads the wallet specified in the argument.\\n\"\n+            \"Specifying the wallet name on a wallet endpoint is invalid.\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"wallet_name\\\"    (string, optional) The name of the wallet to unload.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"unloadwallet\", \"wallet_name\")\n+            + HelpExampleRpc(\"unloadwallet\", \"wallet_name\")\n+        );\n+    }\n+\n+    std::string wallet_name;\n+    if (GetWalletNameFromJSONRPCRequest(request, wallet_name)) {\n+        if (!request.params[0].isNull()) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot unload the requested wallet\");\n+        }\n+    } else {\n+        wallet_name = request.params[0].get_str();\n+    }\n+\n+    std::shared_ptr<CWallet> wallet = GetWallet(wallet_name);\n+    if (!wallet) {\n+        throw JSONRPCError(RPC_WALLET_NOT_FOUND, \"Requested wallet does not exist or is not loaded\");\n+    }\n+\n+    // Release the \"main\" shared pointer and prevent further notifications.\n+    // Note that any attempt to load the same wallet would fail until the wallet\n+    // is destroyed (see CheckUniqueFileid).\n+    if (!RemoveWallet(wallet)) {\n+        throw JSONRPCError(RPC_MISC_ERROR, \"Requested wallet already unloaded\");\n+    }\n+    UnregisterValidationInterface(wallet.get());\n+\n+    // The wallet can be in use so it's not possible to explicitly unload here.\n+    // Just notify the unload intent so that all shared pointers are released.\n+    // The wallet will be destroyed once the last shared pointer is released.\n+    wallet->NotifyUnload();\n+\n+    // There's no point in waiting for the wallet to unload.\n+    // At this point this method should never fail. The unloading could only\n+    // fail due to an unexpected error which would cause a process termination.\n+\n+    return NullUniValue;\n+}\n+\n static UniValue resendwallettransactions(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n@@ -4405,6 +4454,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"settxfee\",                         &settxfee,                      {\"amount\"} },\n     { \"wallet\",             \"signmessage\",                      &signmessage,                   {\"address\",\"message\"} },\n     { \"wallet\",             \"signrawtransactionwithwallet\",     &signrawtransactionwithwallet,  {\"hexstring\",\"prevtxs\",\"sighashtype\"} },\n+    { \"wallet\",             \"unloadwallet\",                     &unloadwallet,                  {\"wallet_name\"} },\n     { \"wallet\",             \"walletlock\",                       &walletlock,                    {} },\n     { \"wallet\",             \"walletpassphrasechange\",           &walletpassphrasechange,        {\"oldpassphrase\",\"newpassphrase\"} },\n     { \"wallet\",             \"walletpassphrase\",                 &walletpassphrase,              {\"passphrase\",\"timeout\"} },"
      },
      {
        "sha": "a3bda89468ae3f36c41d3f5ecd41cd7ee25bb7fc",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 2,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6608c369b1a6cfc1d5b4a7905c193baa999ba84c/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6608c369b1a6cfc1d5b4a7905c193baa999ba84c/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=6608c369b1a6cfc1d5b4a7905c193baa999ba84c",
        "patch": "@@ -79,6 +79,15 @@ std::shared_ptr<CWallet> GetWallet(const std::string& name)\n     return nullptr;\n }\n \n+// Custom deleter for shared_ptr<CWallet>.\n+static void ReleaseWallet(CWallet* wallet)\n+{\n+    LogPrintf(\"Releasing wallet %s\\n\", wallet->GetName());\n+    wallet->BlockUntilSyncedToCurrentChain();\n+    wallet->Flush();\n+    delete wallet;\n+}\n+\n const uint32_t BIP32_HARDENED_KEY_LIMIT = 0x80000000;\n \n const uint256 CMerkleTx::ABANDON_HASH(uint256S(\"0000000000000000000000000000000000000000000000000000000000000001\"));\n@@ -1294,7 +1303,7 @@ void CWallet::BlockUntilSyncedToCurrentChain() {\n         LOCK(cs_main);\n         const CBlockIndex* initialChainTip = chainActive.Tip();\n \n-        if (m_last_block_processed->GetAncestor(initialChainTip->nHeight) == initialChainTip) {\n+        if (m_last_block_processed && m_last_block_processed->GetAncestor(initialChainTip->nHeight) == initialChainTip) {\n             return;\n         }\n     }\n@@ -4057,7 +4066,9 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(const std::string& name,\n \n     int64_t nStart = GetTimeMillis();\n     bool fFirstRun = true;\n-    std::shared_ptr<CWallet> walletInstance = std::make_shared<CWallet>(name, WalletDatabase::Create(path));\n+    // TODO: Can't use std::make_shared because we need a custom deleter but\n+    // should be possible to use std::allocate_shared.\n+    std::shared_ptr<CWallet> walletInstance(new CWallet(name, WalletDatabase::Create(path)), ReleaseWallet);\n     DBErrors nLoadWalletRet = walletInstance->LoadWallet(fFirstRun);\n     if (nLoadWalletRet != DBErrors::LOAD_OK)\n     {"
      },
      {
        "sha": "825209c143eddf681495471c7ac997657dd8dc03",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6608c369b1a6cfc1d5b4a7905c193baa999ba84c/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6608c369b1a6cfc1d5b4a7905c193baa999ba84c/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=6608c369b1a6cfc1d5b4a7905c193baa999ba84c",
        "patch": "@@ -1097,6 +1097,9 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     //! Flush wallet (bitdb flush)\n     void Flush(bool shutdown=false);\n \n+    /** Wallet is about to be unloaded */\n+    boost::signals2::signal<void ()> NotifyUnload;\n+\n     /**\n      * Address book entry changed.\n      * @note called with lock cs_wallet held."
      }
    ]
  },
  {
    "sha": "4940a20a46685cd56ea045d8cc7fe058c6222431",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OTQwYTIwYTQ2Njg1Y2Q1NmVhMDQ1ZDhjYzdmZTA1OGM2MjIyNDMx",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-06-01T22:24:29Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-06-18T15:35:17Z"
      },
      "message": "test: Add functional tests for unloadwallet RPC",
      "tree": {
        "sha": "d241d3e2511cfd195c6515def4ae7b1af455d3e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d241d3e2511cfd195c6515def4ae7b1af455d3e1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4940a20a46685cd56ea045d8cc7fe058c6222431",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4940a20a46685cd56ea045d8cc7fe058c6222431",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4940a20a46685cd56ea045d8cc7fe058c6222431",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4940a20a46685cd56ea045d8cc7fe058c6222431/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6608c369b1a6cfc1d5b4a7905c193baa999ba84c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6608c369b1a6cfc1d5b4a7905c193baa999ba84c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6608c369b1a6cfc1d5b4a7905c193baa999ba84c"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 21,
      "deletions": 0
    },
    "files": [
      {
        "sha": "7f739a131611ecca11f3f44b3d63be77c15663bd",
        "filename": "test/functional/wallet_multiwallet.py",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4940a20a46685cd56ea045d8cc7fe058c6222431/test/functional/wallet_multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4940a20a46685cd56ea045d8cc7fe058c6222431/test/functional/wallet_multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_multiwallet.py?ref=4940a20a46685cd56ea045d8cc7fe058c6222431",
        "patch": "@@ -234,5 +234,26 @@ def run_test(self):\n \n         assert new_wallet_name in self.nodes[0].listwallets()\n \n+        self.log.info(\"Test dynamic wallet unloading\")\n+\n+        # Test `unloadwallet` errors\n+        assert_raises_rpc_error(-1, \"JSON value is not a string as expected\", self.nodes[0].unloadwallet)\n+        assert_raises_rpc_error(-18, \"Requested wallet does not exist or is not loaded\", self.nodes[0].unloadwallet, \"dummy\")\n+        assert_raises_rpc_error(-18, \"Requested wallet does not exist or is not loaded\", node.get_wallet_rpc(\"dummy\").unloadwallet)\n+        assert_raises_rpc_error(-8, \"Cannot unload the requested wallet\", w1.unloadwallet, \"w2\"),\n+\n+        # Successfully unload the specified wallet name\n+        self.nodes[0].unloadwallet(\"w1\")\n+        assert 'w1' not in self.nodes[0].listwallets()\n+\n+        # Successfully unload the wallet referenced by the request endpoint\n+        w2.unloadwallet()\n+        assert 'w2' not in self.nodes[0].listwallets()\n+\n+        # Successfully unload all wallets\n+        for wallet_name in self.nodes[0].listwallets():\n+            self.nodes[0].unloadwallet(wallet_name)\n+        assert_equal(self.nodes[0].listwallets(), [])\n+\n if __name__ == '__main__':\n     MultiWalletTest().main()"
      }
    ]
  },
  {
    "sha": "ccbf7ae7496fd13b4147aa13d7408712bd90c614",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjY2JmN2FlNzQ5NmZkMTNiNDE0N2FhMTNkNzQwODcxMmJkOTBjNjE0",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-06-12T14:30:32Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-06-18T15:35:17Z"
      },
      "message": "test: Wallet methods are disabled when no wallet is loaded",
      "tree": {
        "sha": "97f2669501cbbb53643a88773cc685f99cf16a5e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/97f2669501cbbb53643a88773cc685f99cf16a5e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ccbf7ae7496fd13b4147aa13d7408712bd90c614",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccbf7ae7496fd13b4147aa13d7408712bd90c614",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ccbf7ae7496fd13b4147aa13d7408712bd90c614",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccbf7ae7496fd13b4147aa13d7408712bd90c614/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4940a20a46685cd56ea045d8cc7fe058c6222431",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4940a20a46685cd56ea045d8cc7fe058c6222431",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4940a20a46685cd56ea045d8cc7fe058c6222431"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 1,
      "deletions": 5
    },
    "files": [
      {
        "sha": "5e9eb2b26ade73b14e43cc24391a6799dafbe3eb",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccbf7ae7496fd13b4147aa13d7408712bd90c614/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccbf7ae7496fd13b4147aa13d7408712bd90c614/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=ccbf7ae7496fd13b4147aa13d7408712bd90c614",
        "patch": "@@ -75,11 +75,6 @@ bool EnsureWalletIsAvailable(CWallet * const pwallet, bool avoidException)\n     if (pwallet) return true;\n     if (avoidException) return false;\n     if (!HasWallets()) {\n-        // Note: It isn't currently possible to trigger this error because\n-        // wallet RPC methods aren't registered unless a wallet is loaded. But\n-        // this error is being kept as a precaution, because it's possible in\n-        // the future that wallet RPC methods might get or remain registered\n-        // when no wallets are loaded.\n         throw JSONRPCError(\n             RPC_METHOD_NOT_FOUND, \"Method not found (wallet method is disabled because no wallet is loaded)\");\n     }"
      },
      {
        "sha": "8d15ef661b40098527856b52df7f1b07cf294afa",
        "filename": "test/functional/wallet_multiwallet.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccbf7ae7496fd13b4147aa13d7408712bd90c614/test/functional/wallet_multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccbf7ae7496fd13b4147aa13d7408712bd90c614/test/functional/wallet_multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_multiwallet.py?ref=ccbf7ae7496fd13b4147aa13d7408712bd90c614",
        "patch": "@@ -254,6 +254,7 @@ def run_test(self):\n         for wallet_name in self.nodes[0].listwallets():\n             self.nodes[0].unloadwallet(wallet_name)\n         assert_equal(self.nodes[0].listwallets(), [])\n+        assert_raises_rpc_error(-32601, \"Method not found (wallet method is disabled because no wallet is loaded)\", self.nodes[0].getwalletinfo)\n \n if __name__ == '__main__':\n     MultiWalletTest().main()"
      }
    ]
  },
  {
    "sha": "9f9b50d5feb1e604283c463e289e83b63a849a8c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZjliNTBkNWZlYjFlNjA0MjgzYzQ2M2UyODllODNiNjNhODQ5YThj",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-06-01T22:23:45Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-06-18T15:35:17Z"
      },
      "message": "doc: Add release notes for unloadwallet RPC",
      "tree": {
        "sha": "4b6b01f438191d63fecffd9dcd69139db7dfbbac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4b6b01f438191d63fecffd9dcd69139db7dfbbac"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9f9b50d5feb1e604283c463e289e83b63a849a8c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f9b50d5feb1e604283c463e289e83b63a849a8c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9f9b50d5feb1e604283c463e289e83b63a849a8c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f9b50d5feb1e604283c463e289e83b63a849a8c/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ccbf7ae7496fd13b4147aa13d7408712bd90c614",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccbf7ae7496fd13b4147aa13d7408712bd90c614",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ccbf7ae7496fd13b4147aa13d7408712bd90c614"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a2eb8cd83707ca5b27f5a0f98262d4785fa3becc",
        "filename": "doc/release-notes-pr10740.md",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f9b50d5feb1e604283c463e289e83b63a849a8c/doc/release-notes-pr10740.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f9b50d5feb1e604283c463e289e83b63a849a8c/doc/release-notes-pr10740.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-pr10740.md?ref=9f9b50d5feb1e604283c463e289e83b63a849a8c",
        "patch": "@@ -1,9 +1,10 @@\n Dynamic loading and creation of wallets\n ---------------------------------------\n \n-Previously, wallets could only be loaded or created at startup, by specifying `-wallet` parameters on the command line or in the bitcoin.conf file. It is now possible to load and create wallets dynamically at runtime:\n+Previously, wallets could only be loaded or created at startup, by specifying `-wallet` parameters on the command line or in the bitcoin.conf file. It is now possible to load, create and unload wallets dynamically at runtime:\n \n - Existing wallets can be loaded by calling the `loadwallet` RPC. The wallet can be specified as file/directory basename (which must be located in the `walletdir` directory), or as an absolute path to a file/directory.\n - New wallets can be created (and loaded) by calling the `createwallet` RPC. The provided name must not match a wallet file in the `walletdir` directory or the name of a wallet that is currently loaded.\n+- Loaded wallets can be unloaded by calling the `unloadwallet` RPC.\n \n This feature is currently only available through the RPC interface."
      }
    ]
  },
  {
    "sha": "0ee77b20771fe34f8dbde6b16d7e2637859baec3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZWU3N2IyMDc3MWZlMzRmOGRiZGU2YjE2ZDdlMjYzNzg1OWJhZWMz",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-06-05T10:17:28Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-06-18T15:35:29Z"
      },
      "message": "ui: Support wallets unloaded dynamically",
      "tree": {
        "sha": "a3f137f35a5d1361bea86273a047a53c1d793d10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a3f137f35a5d1361bea86273a047a53c1d793d10"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0ee77b20771fe34f8dbde6b16d7e2637859baec3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ee77b20771fe34f8dbde6b16d7e2637859baec3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0ee77b20771fe34f8dbde6b16d7e2637859baec3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ee77b20771fe34f8dbde6b16d7e2637859baec3/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9f9b50d5feb1e604283c463e289e83b63a849a8c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f9b50d5feb1e604283c463e289e83b63a849a8c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9f9b50d5feb1e604283c463e289e83b63a849a8c"
      }
    ],
    "stats": {
      "total": 88,
      "additions": 80,
      "deletions": 8
    },
    "files": [
      {
        "sha": "e98acba0df16e90f3378ab1cf727e8d21f8e0787",
        "filename": "src/interfaces/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ee77b20771fe34f8dbde6b16d7e2637859baec3/src/interfaces/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ee77b20771fe34f8dbde6b16d7e2637859baec3/src/interfaces/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.cpp?ref=0ee77b20771fe34f8dbde6b16d7e2637859baec3",
        "patch": "@@ -429,6 +429,10 @@ class WalletImpl : public Wallet\n     bool hdEnabled() override { return m_wallet.IsHDEnabled(); }\n     OutputType getDefaultAddressType() override { return m_wallet.m_default_address_type; }\n     OutputType getDefaultChangeType() override { return m_wallet.m_default_change_type; }\n+    std::unique_ptr<Handler> handleUnload(UnloadFn fn) override\n+    {\n+        return MakeHandler(m_wallet.NotifyUnload.connect(fn));\n+    }\n     std::unique_ptr<Handler> handleShowProgress(ShowProgressFn fn) override\n     {\n         return MakeHandler(m_wallet.ShowProgress.connect(fn));"
      },
      {
        "sha": "ce42e14eea8e7d8b52a878b554ef8d27fc0a2091",
        "filename": "src/interfaces/wallet.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ee77b20771fe34f8dbde6b16d7e2637859baec3/src/interfaces/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ee77b20771fe34f8dbde6b16d7e2637859baec3/src/interfaces/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.h?ref=0ee77b20771fe34f8dbde6b16d7e2637859baec3",
        "patch": "@@ -242,6 +242,10 @@ class Wallet\n     // Get default change type.\n     virtual OutputType getDefaultChangeType() = 0;\n \n+    //! Register handler for unload message.\n+    using UnloadFn = std::function<void()>;\n+    virtual std::unique_ptr<Handler> handleUnload(UnloadFn fn) = 0;\n+\n     //! Register handler for show progress messages.\n     using ShowProgressFn = std::function<void(const std::string& title, int progress)>;\n     virtual std::unique_ptr<Handler> handleShowProgress(ShowProgressFn fn) = 0;"
      },
      {
        "sha": "6ddc81911332011676287cb0c31c784f7a739344",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 2,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ee77b20771fe34f8dbde6b16d7e2637859baec3/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ee77b20771fe34f8dbde6b16d7e2637859baec3/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=0ee77b20771fe34f8dbde6b16d7e2637859baec3",
        "patch": "@@ -238,6 +238,7 @@ public Q_SLOTS:\n     /// Handle runaway exceptions. Shows a message box with the problem and quits the program.\n     void handleRunawayException(const QString &message);\n     void addWallet(WalletModel* walletModel);\n+    void removeWallet();\n \n Q_SIGNALS:\n     void requestedInitialize();\n@@ -467,11 +468,22 @@ void BitcoinApplication::addWallet(WalletModel* walletModel)\n \n     connect(walletModel, SIGNAL(coinsSent(WalletModel*, SendCoinsRecipient, QByteArray)),\n         paymentServer, SLOT(fetchPaymentACK(WalletModel*, const SendCoinsRecipient&, QByteArray)));\n+    connect(walletModel, SIGNAL(unload()), this, SLOT(removeWallet()));\n \n     m_wallet_models.push_back(walletModel);\n #endif\n }\n \n+void BitcoinApplication::removeWallet()\n+{\n+#ifdef ENABLE_WALLET\n+    WalletModel* walletModel = static_cast<WalletModel*>(sender());\n+    m_wallet_models.erase(std::find(m_wallet_models.begin(), m_wallet_models.end(), walletModel));\n+    window->removeWallet(walletModel);\n+    walletModel->deleteLater();\n+#endif\n+}\n+\n void BitcoinApplication::initializeResult(bool success)\n {\n     qDebug() << __func__ << \": Initialization result: \" << success;\n@@ -491,8 +503,10 @@ void BitcoinApplication::initializeResult(bool success)\n \n #ifdef ENABLE_WALLET\n         m_handler_load_wallet = m_node.handleLoadWallet([this](std::unique_ptr<interfaces::Wallet> wallet) {\n-            QMetaObject::invokeMethod(this, \"addWallet\", Qt::QueuedConnection,\n-                Q_ARG(WalletModel*, new WalletModel(std::move(wallet), m_node, platformStyle, optionsModel)));\n+            WalletModel* wallet_model = new WalletModel(std::move(wallet), m_node, platformStyle, optionsModel, nullptr);\n+            // Fix wallet model thread affinity.\n+            wallet_model->moveToThread(thread());\n+            QMetaObject::invokeMethod(this, \"addWallet\", Qt::QueuedConnection, Q_ARG(WalletModel*, wallet_model));\n         });\n \n         for (auto& wallet : m_node.getWallets()) {"
      },
      {
        "sha": "c6cc6312016f2d787f7da43acb906ee536609622",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 5,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ee77b20771fe34f8dbde6b16d7e2637859baec3/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ee77b20771fe34f8dbde6b16d7e2637859baec3/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=0ee77b20771fe34f8dbde6b16d7e2637859baec3",
        "patch": "@@ -120,6 +120,7 @@ BitcoinGUI::BitcoinGUI(interfaces::Node& node, const PlatformStyle *_platformSty\n     modalOverlay(0),\n     prevBlocks(0),\n     spinnerFrame(0),\n+    m_wallet_selector_label(nullptr),\n     platformStyle(_platformStyle)\n {\n     QSettings settings;\n@@ -477,6 +478,16 @@ void BitcoinGUI::createToolBars()\n \n         m_wallet_selector = new QComboBox();\n         connect(m_wallet_selector, SIGNAL(currentIndexChanged(int)), this, SLOT(setCurrentWalletBySelectorIndex(int)));\n+\n+        m_wallet_selector_label = new QLabel();\n+        m_wallet_selector_label->setText(tr(\"Wallet:\") + \" \");\n+        m_wallet_selector_label->setBuddy(m_wallet_selector);\n+\n+        m_wallet_selector_label_action = appToolBar->addWidget(m_wallet_selector_label);\n+        m_wallet_selector_action = appToolBar->addWidget(m_wallet_selector);\n+\n+        m_wallet_selector_label_action->setVisible(false);\n+        m_wallet_selector_action->setVisible(false);\n #endif\n     }\n }\n@@ -556,16 +567,29 @@ bool BitcoinGUI::addWallet(WalletModel *walletModel)\n     setWalletActionsEnabled(true);\n     m_wallet_selector->addItem(display_name, name);\n     if (m_wallet_selector->count() == 2) {\n-        m_wallet_selector_label = new QLabel();\n-        m_wallet_selector_label->setText(tr(\"Wallet:\") + \" \");\n-        m_wallet_selector_label->setBuddy(m_wallet_selector);\n-        appToolBar->addWidget(m_wallet_selector_label);\n-        appToolBar->addWidget(m_wallet_selector);\n+        m_wallet_selector_label_action->setVisible(true);\n+        m_wallet_selector_action->setVisible(true);\n     }\n     rpcConsole->addWallet(walletModel);\n     return walletFrame->addWallet(walletModel);\n }\n \n+bool BitcoinGUI::removeWallet(WalletModel* walletModel)\n+{\n+    if (!walletFrame) return false;\n+    QString name = walletModel->getWalletName();\n+    int index = m_wallet_selector->findData(name);\n+    m_wallet_selector->removeItem(index);\n+    if (m_wallet_selector->count() == 0) {\n+        setWalletActionsEnabled(false);\n+    } else if (m_wallet_selector->count() == 1) {\n+        m_wallet_selector_label_action->setVisible(false);\n+        m_wallet_selector_action->setVisible(false);\n+    }\n+    rpcConsole->removeWallet(walletModel);\n+    return walletFrame->removeWallet(name);\n+}\n+\n bool BitcoinGUI::setCurrentWallet(const QString& name)\n {\n     if(!walletFrame)"
      },
      {
        "sha": "68c35557cc5b3f800260b139dcbd873f1f7dcadb",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ee77b20771fe34f8dbde6b16d7e2637859baec3/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ee77b20771fe34f8dbde6b16d7e2637859baec3/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=0ee77b20771fe34f8dbde6b16d7e2637859baec3",
        "patch": "@@ -70,6 +70,7 @@ class BitcoinGUI : public QMainWindow\n         functionality.\n     */\n     bool addWallet(WalletModel *walletModel);\n+    bool removeWallet(WalletModel* walletModel);\n     void removeAllWallets();\n #endif // ENABLE_WALLET\n     bool enableWallet;\n@@ -122,8 +123,10 @@ class BitcoinGUI : public QMainWindow\n     QAction *openRPCConsoleAction;\n     QAction *openAction;\n     QAction *showHelpMessageAction;\n+    QAction *m_wallet_selector_label_action = nullptr;\n+    QAction *m_wallet_selector_action = nullptr;\n \n-    QLabel *m_wallet_selector_label;\n+    QLabel *m_wallet_selector_label = nullptr;\n     QComboBox *m_wallet_selector;\n \n     QSystemTrayIcon *trayIcon;"
      },
      {
        "sha": "e4e8d3535a0220861d3c7296b534e1af6a438517",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ee77b20771fe34f8dbde6b16d7e2637859baec3/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ee77b20771fe34f8dbde6b16d7e2637859baec3/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=0ee77b20771fe34f8dbde6b16d7e2637859baec3",
        "patch": "@@ -713,6 +713,16 @@ void RPCConsole::addWallet(WalletModel * const walletModel)\n         ui->WalletSelectorLabel->setVisible(true);\n     }\n }\n+\n+void RPCConsole::removeWallet(WalletModel * const walletModel)\n+{\n+    const QString name = walletModel->getWalletName();\n+    ui->WalletSelector->removeItem(ui->WalletSelector->findData(name));\n+    if (ui->WalletSelector->count() == 2) {\n+        ui->WalletSelector->setVisible(false);\n+        ui->WalletSelectorLabel->setVisible(false);\n+    }\n+}\n #endif\n \n static QString categoryClass(int category)"
      },
      {
        "sha": "0a1a469934128decfad627942e92ead5f335b724",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ee77b20771fe34f8dbde6b16d7e2637859baec3/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ee77b20771fe34f8dbde6b16d7e2637859baec3/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=0ee77b20771fe34f8dbde6b16d7e2637859baec3",
        "patch": "@@ -48,6 +48,7 @@ class RPCConsole: public QWidget\n \n     void setClientModel(ClientModel *model);\n     void addWallet(WalletModel * const walletModel);\n+    void removeWallet(WalletModel* const walletModel);\n \n     enum MessageClass {\n         MC_ERROR,"
      },
      {
        "sha": "389acf0a95a9d7ce7addc414916484d4fe67d0fd",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ee77b20771fe34f8dbde6b16d7e2637859baec3/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ee77b20771fe34f8dbde6b16d7e2637859baec3/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=0ee77b20771fe34f8dbde6b16d7e2637859baec3",
        "patch": "@@ -364,6 +364,12 @@ bool WalletModel::changePassphrase(const SecureString &oldPass, const SecureStri\n }\n \n // Handlers for core signals\n+static void NotifyUnload(WalletModel* walletModel)\n+{\n+    qDebug() << \"NotifyUnload\";\n+    QMetaObject::invokeMethod(walletModel, \"unload\", Qt::QueuedConnection);\n+}\n+\n static void NotifyKeyStoreStatusChanged(WalletModel *walletmodel)\n {\n     qDebug() << \"NotifyKeyStoreStatusChanged\";\n@@ -411,6 +417,7 @@ static void NotifyWatchonlyChanged(WalletModel *walletmodel, bool fHaveWatchonly\n void WalletModel::subscribeToCoreSignals()\n {\n     // Connect signals to wallet\n+    m_handler_unload = m_wallet->handleUnload(boost::bind(&NotifyUnload, this));\n     m_handler_status_changed = m_wallet->handleStatusChanged(boost::bind(&NotifyKeyStoreStatusChanged, this));\n     m_handler_address_book_changed = m_wallet->handleAddressBookChanged(boost::bind(NotifyAddressBookChanged, this, _1, _2, _3, _4, _5));\n     m_handler_transaction_changed = m_wallet->handleTransactionChanged(boost::bind(NotifyTransactionChanged, this, _1, _2));\n@@ -421,6 +428,7 @@ void WalletModel::subscribeToCoreSignals()\n void WalletModel::unsubscribeFromCoreSignals()\n {\n     // Disconnect signals from wallet\n+    m_handler_unload->disconnect();\n     m_handler_status_changed->disconnect();\n     m_handler_address_book_changed->disconnect();\n     m_handler_transaction_changed->disconnect();"
      },
      {
        "sha": "35ededb12103c42fff226be7b08c9c5d968077d3",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ee77b20771fe34f8dbde6b16d7e2637859baec3/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ee77b20771fe34f8dbde6b16d7e2637859baec3/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=0ee77b20771fe34f8dbde6b16d7e2637859baec3",
        "patch": "@@ -208,6 +208,7 @@ class WalletModel : public QObject\n     AddressTableModel* getAddressTableModel() const { return addressTableModel; }\n private:\n     std::unique_ptr<interfaces::Wallet> m_wallet;\n+    std::unique_ptr<interfaces::Handler> m_handler_unload;\n     std::unique_ptr<interfaces::Handler> m_handler_status_changed;\n     std::unique_ptr<interfaces::Handler> m_handler_address_book_changed;\n     std::unique_ptr<interfaces::Handler> m_handler_transaction_changed;\n@@ -261,6 +262,9 @@ class WalletModel : public QObject\n     // Watch-only address added\n     void notifyWatchonlyChanged(bool fHaveWatchonly);\n \n+    // Signal that wallet is about to be removed\n+    void unload();\n+\n public Q_SLOTS:\n     /* Wallet status might have changed */\n     void updateStatus();"
      }
    ]
  },
  {
    "sha": "0b82bac76d0f842bd2294a290388536951fbc576",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYjgyYmFjNzZkMGY4NDJiZDIyOTRhMjkwMzg4NTM2OTUxZmJjNTc2",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-06-04T22:15:03Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-06-18T15:35:39Z"
      },
      "message": "bugfix: Remove dangling wallet env instance",
      "tree": {
        "sha": "4806c11e461ddfd1e33ad64728a3b70b3a465339",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4806c11e461ddfd1e33ad64728a3b70b3a465339"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0b82bac76d0f842bd2294a290388536951fbc576",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b82bac76d0f842bd2294a290388536951fbc576",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0b82bac76d0f842bd2294a290388536951fbc576",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b82bac76d0f842bd2294a290388536951fbc576/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0ee77b20771fe34f8dbde6b16d7e2637859baec3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ee77b20771fe34f8dbde6b16d7e2637859baec3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0ee77b20771fe34f8dbde6b16d7e2637859baec3"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 9,
      "deletions": 1
    },
    "files": [
      {
        "sha": "01b8eacccb80fb22b9f61a215e99b857489daa58",
        "filename": "src/wallet/db.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b82bac76d0f842bd2294a290388536951fbc576/src/wallet/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b82bac76d0f842bd2294a290388536951fbc576/src/wallet/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.cpp?ref=0b82bac76d0f842bd2294a290388536951fbc576",
        "patch": "@@ -694,8 +694,10 @@ void BerkeleyEnvironment::Flush(bool fShutdown)\n             if (mapFileUseCount.empty()) {\n                 dbenv->log_archive(&listp, DB_ARCH_REMOVE);\n                 Close();\n-                if (!fMockDb)\n+                if (!fMockDb) {\n                     fs::remove_all(fs::path(strPath) / \"database\");\n+                }\n+                g_dbenvs.erase(strPath);\n             }\n         }\n     }\n@@ -794,5 +796,6 @@ void BerkeleyDatabase::Flush(bool shutdown)\n {\n     if (!IsDummy()) {\n         env->Flush(shutdown);\n+        if (shutdown) env = nullptr;\n     }\n }"
      },
      {
        "sha": "e6097b5d92ca2a6521ad96feaf32660b2dc91caf",
        "filename": "test/functional/wallet_multiwallet.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b82bac76d0f842bd2294a290388536951fbc576/test/functional/wallet_multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b82bac76d0f842bd2294a290388536951fbc576/test/functional/wallet_multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_multiwallet.py?ref=0b82bac76d0f842bd2294a290388536951fbc576",
        "patch": "@@ -256,5 +256,10 @@ def run_test(self):\n         assert_equal(self.nodes[0].listwallets(), [])\n         assert_raises_rpc_error(-32601, \"Method not found (wallet method is disabled because no wallet is loaded)\", self.nodes[0].getwalletinfo)\n \n+        # Successfully load a previously unloaded wallet\n+        self.nodes[0].loadwallet('w1')\n+        assert_equal(self.nodes[0].listwallets(), ['w1'])\n+        assert_equal(w1.getwalletinfo()['walletname'], 'w1')\n+\n if __name__ == '__main__':\n     MultiWalletTest().main()"
      }
    ]
  },
  {
    "sha": "fe65bdec237776dbe094339509dfd2e63329a832",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZTY1YmRlYzIzNzc3NmRiZTA5NDMzOTUwOWRmZDJlNjMzMjlhODMy",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-06-20T13:15:12Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-06-20T13:15:12Z"
      },
      "message": "bugfix: Delete walletView in WalletFrame::removeWallet",
      "tree": {
        "sha": "468c525f59f96f16520e3a44d77de19c59b48c23",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/468c525f59f96f16520e3a44d77de19c59b48c23"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fe65bdec237776dbe094339509dfd2e63329a832",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe65bdec237776dbe094339509dfd2e63329a832",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fe65bdec237776dbe094339509dfd2e63329a832",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe65bdec237776dbe094339509dfd2e63329a832/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0b82bac76d0f842bd2294a290388536951fbc576",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b82bac76d0f842bd2294a290388536951fbc576",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b82bac76d0f842bd2294a290388536951fbc576"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c5a13f61f4a25016dbf64200bce3b2c57e31d356",
        "filename": "src/qt/walletframe.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe65bdec237776dbe094339509dfd2e63329a832/src/qt/walletframe.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe65bdec237776dbe094339509dfd2e63329a832/src/qt/walletframe.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.cpp?ref=fe65bdec237776dbe094339509dfd2e63329a832",
        "patch": "@@ -94,6 +94,7 @@ bool WalletFrame::removeWallet(const QString &name)\n \n     WalletView *walletView = mapWalletViews.take(name);\n     walletStack->removeWidget(walletView);\n+    delete walletView;\n     return true;\n }\n "
      }
    ]
  }
]