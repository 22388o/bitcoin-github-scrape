MarcoFalke,2021-07-01 18:16:28,"From ci:\n\n```\nRan 1 test in 1.002s\nOK\nF\n======================================================================\nFAIL: test_ELF (__main__.TestSymbolChecks)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File ""./contrib/devtools/test-symbol-check.py"", line 82, in test_ELF\n    self.assertEqual(call_symbol_check(cc, sour",https://github.com/bitcoin/bitcoin/pull/22381#issuecomment-872453363,872453363,
DrahtBot,2021-07-02 01:46:19,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/22381#issuecomment-872653249,872653249,
fanquake,2021-07-07 12:42:38,"I've made a few changes here, including rebasing now that #22405 has been merged, fixing up the ELF test-symbol-check test to account for it being run in the new glibc environments, and re-ordered some commits. Note that I've also removed the test-security(symbol)-check target from being run for Linux in the CI, mainly due to these tests being somewhat fragile. We can look at running them again wh",https://github.com/bitcoin/bitcoin/pull/22381#issuecomment-875570540,875570540,
hebasto,2021-07-07 16:50:06,"#### Guix builds:\n```\n$ find guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\n71ed0c7a13a4726300779ffc87f7d271086a2744c36896fe6dc51fe3dc33df2e  guix-build-5b4703c6a70d/output/aarch64-linux-gnu/SHA256SUMS.part\n9273980a17052c8ec45b77579781c14ab5d189fa25aa29907d5115513dd302b1  guix-build-5b4703c6a70d/output/aarch64-linux-gnu/bitc",https://github.com/bitcoin/bitcoin/pull/22381#issuecomment-875763941,875763941,
dongcarl,2021-07-07 20:45:42,Concept ACK! ðŸ˜„ ,https://github.com/bitcoin/bitcoin/pull/22381#issuecomment-875920655,875920655,
achow101,2021-07-08 04:09:17,"```\n$ cat noncodesigned.SHA256SUMS \n9273980a17052c8ec45b77579781c14ab5d189fa25aa29907d5115513dd302b1  aarch64-linux-gnu/bitcoin-5b4703c6a70d-aarch64-linux-gnu-debug.tar.gz\n9c042179af43c8896eb95a34294df15d4910308dcdba40b2010cd36e192938b8  aarch64-linux-gnu/bitcoin-5b4703c6a70d-aarch64-linux-gnu.tar.gz\n759597c4e925e75db4a2381c06cda9b9f4e4674c23436148676b31c9be05c7aa  arm-linux-gnueabihf/bitc",https://github.com/bitcoin/bitcoin/pull/22381#issuecomment-876108430,876108430,
dongcarl,2021-07-08 18:06:26,"I seem to be getting matching results!\n```\n9273980a17052c8ec45b77579781c14ab5d189fa25aa29907d5115513dd302b1  aarch64-linux-gnu/bitcoin-5b4703c6a70d-aarch64-linux-gnu-debug.tar.gz\n9c042179af43c8896eb95a34294df15d4910308dcdba40b2010cd36e192938b8  aarch64-linux-gnu/bitcoin-5b4703c6a70d-aarch64-linux-gnu.tar.gz\n759597c4e925e75db4a2381c06cda9b9f4e4674c23436148676b31c9be05c7aa  arm-linux-gnueabi",https://github.com/bitcoin/bitcoin/pull/22381#issuecomment-876639623,876639623,
Emzy,2021-07-09 09:58:00,"Guix builds:\n```\n$ find guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\n71ed0c7a13a4726300779ffc87f7d271086a2744c36896fe6dc51fe3dc33df2e  guix-build-5b4703c6a70d/output/aarch64-linux-gnu/SHA256SUMS.part\n9273980a17052c8ec45b77579781c14ab5d189fa25aa29907d5115513dd302b1  guix-build-5b4703c6a70d/output/aarch64-linux-gnu/bitcoin-5",https://github.com/bitcoin/bitcoin/pull/22381#issuecomment-877066862,877066862,
DrahtBot,2021-07-10 08:23:59,<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit 4129134e844f78a89f8515cf30dad4b6074703c7<br>(master) | commit 53ff4d396e2253d1a45c2a9ffa981e4d6afbc94c<br>(master and this pull) |\n|--|--|--|\n| SHA256SUMS.part | [`c5cf1c6985c1c430...`](https://drahtbot.space/guix/bitcoin/bitcoin/4129134e844f78a89f8515cf30dad4b6074703c7/SHA256SUMS.part) | [`82bcd13e2b9964b0...`](https://,https://github.com/bitcoin/bitcoin/pull/22381#issuecomment-877595437,877595437,
fanquake,2021-07-09 02:11:00,"From https://github.com/bitcoin/bitcoin/pull/20980#discussion_r586965347\n\n> I think testing for this, and adding to our hardened ldflags when available is fine. It's enabled by default, however we like to be explicit. It's also available with the binutils (2.34) we are using for gitian builds.\n\n> Note that some of these flags also imply each other:\n--high-entropy-va implies --dynamic-bas",https://github.com/bitcoin/bitcoin/pull/22381#discussion_r666624672,666624672,configure.ac
fanquake,2021-07-09 02:11:42,"From https://github.com/bitcoin/bitcoin/pull/20980#discussion_r586973378\n\n> Checked that this matches https://salsa.debian.org/mingw-w64-team/binutils-mingw-w64/-/blob/master/debian/patches/disable-flags.patch bar whitespace changes.",https://github.com/bitcoin/bitcoin/pull/22381#discussion_r666624912,666624912,contrib/guix/patches/binutils-mingw-w64-disable-flags.patch
fanquake,2021-07-09 02:12:40,"From https://github.com/bitcoin/bitcoin/pull/20980#discussion_r586976252\n\n> At this stage we have already given in to not being able to run the test security check target for windows in gitian due to lack of --no options in ld, so adding --disable here to test --enable-reloc-section isn't making anything worse. If anything this speaks to the usefulness of Guix, given how easy it is to patch th",https://github.com/bitcoin/bitcoin/pull/22381#discussion_r666625162,666625162,contrib/devtools/test-security-check.py
