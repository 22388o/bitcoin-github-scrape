[
  {
    "sha": "d6ef3543ae16847d5a91fa9271acee9bd2164b32",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNmVmMzU0M2FlMTY4NDdkNWE5MWZhOTI3MWFjZWU5YmQyMTY0YjMy",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-02-02T18:35:45Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-07-07T11:30:47Z"
      },
      "message": "lint: Run mypy with --show-error-codes\n\nWhen using mypy ignore directives, the error code needs to be specified.\nSomehow mypy doesn't print it by default...",
      "tree": {
        "sha": "0987a2b0daabe0d730e85c2eb4d713fa80840fb5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0987a2b0daabe0d730e85c2eb4d713fa80840fb5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d6ef3543ae16847d5a91fa9271acee9bd2164b32",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmDlkGcACgkQLuufXMCV\nJsGHYw/9HkhY4f1zyNs402vwfAPLLpUMaFznHOrZ3VJGOoT/VXyRofkVo8tbZo6p\n5xhuT1gEaeDc0ONIylyKuKoKyWG4qo3d9PnL1SobPsdXtu0GzaDdPebLQJhPZydX\nymcrWx1RAhNKUjzkkDtiFUvCNPFsnulU9GOALAbvrsDaC501TBSxMu7G+DHj3PhH\nL7OYPh1WWs+3/WEm/Sn0ZI7YFF1Mcd0AJZMg0mCTpX7yNN7P3S29Hpycxuj3rxEQ\ntqYbUA/KhKQSs8T7l/U2NYbfEmo4NrGYTBGcYS6ElKYeVxlS/+U3FxXvr2yWK7Mp\nDHmZ6vdtwAjKNZ1YW62SKDmpZ4o+pGTtTeEL94z1DFN/NNECnr3v2n4Y7j2A38/Z\nB14347HesQNTzf4dBZPymp6pLhraFA/wY5NMbws0jV0aTOHlXk+j1gTFkV8GPJ8W\ncbzX0QG9fSo4B8Uq4abJHVjjmokXlrNf89exNzabGoch0msNXWgBCL9O9M4dAlzv\nZ//y+SMSMGc337oWzpR4Hr29zrulqDGJRIGKB8n+YLyppn2OXQh5Zsow5lyDO1VM\nqqs+epKm9HcQ4/r5Watsw9oz+/b8hq3aEK1ViiCCZYZgzZYT6VRL1/cKoCDFm9WU\nyXQORklmSwPNm2NzP+iPfiDZ+XEWVuWZ09JHCzG64gncq9dD7lo=\n=MOJw\n-----END PGP SIGNATURE-----",
        "payload": "tree 0987a2b0daabe0d730e85c2eb4d713fa80840fb5\nparent 137f3b9ba3857b879e934a93847520ed91bc4eb2\nauthor Carl Dong <contact@carldong.me> 1612290945 -0500\ncommitter fanquake <fanquake@gmail.com> 1625657447 +0800\n\nlint: Run mypy with --show-error-codes\n\nWhen using mypy ignore directives, the error code needs to be specified.\nSomehow mypy doesn't print it by default...\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6ef3543ae16847d5a91fa9271acee9bd2164b32",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d6ef3543ae16847d5a91fa9271acee9bd2164b32",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6ef3543ae16847d5a91fa9271acee9bd2164b32/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "137f3b9ba3857b879e934a93847520ed91bc4eb2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/137f3b9ba3857b879e934a93847520ed91bc4eb2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/137f3b9ba3857b879e934a93847520ed91bc4eb2"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "c448fa6f9a6fbb2fb0bd188e1da2faed96f4a010",
        "filename": "test/lint/lint-python.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6ef3543ae16847d5a91fa9271acee9bd2164b32/test/lint/lint-python.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6ef3543ae16847d5a91fa9271acee9bd2164b32/test/lint/lint-python.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-python.sh?ref=d6ef3543ae16847d5a91fa9271acee9bd2164b32",
        "patch": "@@ -102,7 +102,7 @@ if ! PYTHONWARNINGS=\"ignore\" flake8 --ignore=B,C,E,F,I,N,W --select=$(IFS=\",\"; e\n     EXIT_CODE=1\n fi\n \n-if ! mypy --ignore-missing-imports $(git ls-files \"test/functional/*.py\" \"contrib/devtools/*.py\"); then\n+if ! mypy --ignore-missing-imports --show-error-codes $(git ls-files \"test/functional/*.py\" \"contrib/devtools/*.py\"); then\n     EXIT_CODE=1\n fi\n "
      }
    ]
  },
  {
    "sha": "bda62eab38c5dd74e222eddedbca19ace9df6daa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZGE2MmVhYjM4YzVkZDc0ZTIyMmVkZGVkYmNhMTlhY2U5ZGY2ZGFh",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-07-07T06:35:38Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-07-07T11:31:37Z"
      },
      "message": "ci: skip running the Linux test-security-check target for now\n\nThe CI environment is a moving target, and these tests are somewhat\nfragile, so for now, disable them.",
      "tree": {
        "sha": "d763e80ec293462e0c01157032096e48baa34f7f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d763e80ec293462e0c01157032096e48baa34f7f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bda62eab38c5dd74e222eddedbca19ace9df6daa",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmDlkJkACgkQLuufXMCV\nJsHlZxAAhH/MtzLrwdgYtdbwwFQTAtqzUHSA1SysJ9grHpOkXd1/jZkfblQQfBVI\ngxPopvM1DbaMLzhp/fXXnVghoDhUdb6dn4na32hVgv5YSthrJLSfS3BxNhKqvF/z\ngD04m9xfmAkPJn1GkacObZC1U11Tye/XB4aIkpeKExOGdtOznpIeQTdV5EWAgJkH\nlytqosVAcW5qlMIyvUw9gEcSIcMdjwYeV/hL2OEgw2SIdrO2+Ln0cN0+c0g01nWc\nv0Sqi979Cnqch4X7fZE0rQxc3oGHBpjWWUALQcG6Naf1aBFx79QgBfG1CGmGGqyT\nt3WW+vAaUQ/s1E9JVYhXZy2W1olGA7q+SXOfwfEM5jEw1W7e3gFyyeMDdmLHK8Zf\n5Dcw11p4XE9WIgr8q97TEQUkDsu4oI8CzLwpYbBHDdg9KJgkgkATyy3+wS3sM+Vf\nJMbqQxcyROvqG0x4FQfo77V/nVbCHvmb+rF/QJqlMud2nA3T8EqSdUD4M+9bufW7\nR46J4H6C+65EGuOsMHd2dVPoRmVfxozdn9A+4j8xmW11qNzFXO57o06U7CrPBFA1\nsJyrMJ9LcDGCcJ8uU+XBCdkK+TWMJzZ/OOFICRRf9ZR6mFEJMO3odOygP+cvgbLt\nUq7aRk/UGC7jSXNDjcYta4Ki/mIYkjrSgYAZZfFhIbXlHF86hqI=\n=ZXSS\n-----END PGP SIGNATURE-----",
        "payload": "tree d763e80ec293462e0c01157032096e48baa34f7f\nparent d6ef3543ae16847d5a91fa9271acee9bd2164b32\nauthor fanquake <fanquake@gmail.com> 1625639738 +0800\ncommitter fanquake <fanquake@gmail.com> 1625657497 +0800\n\nci: skip running the Linux test-security-check target for now\n\nThe CI environment is a moving target, and these tests are somewhat\nfragile, so for now, disable them.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bda62eab38c5dd74e222eddedbca19ace9df6daa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bda62eab38c5dd74e222eddedbca19ace9df6daa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bda62eab38c5dd74e222eddedbca19ace9df6daa/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d6ef3543ae16847d5a91fa9271acee9bd2164b32",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6ef3543ae16847d5a91fa9271acee9bd2164b32",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d6ef3543ae16847d5a91fa9271acee9bd2164b32"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 0,
      "deletions": 1
    },
    "files": [
      {
        "sha": "8869b2a08396a24be4f67b1397cb7a8973f057c0",
        "filename": "ci/test/00_setup_env_native_multiprocess.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bda62eab38c5dd74e222eddedbca19ace9df6daa/ci/test/00_setup_env_native_multiprocess.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bda62eab38c5dd74e222eddedbca19ace9df6daa/ci/test/00_setup_env_native_multiprocess.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_multiprocess.sh?ref=bda62eab38c5dd74e222eddedbca19ace9df6daa",
        "patch": "@@ -13,5 +13,4 @@ export DEP_OPTS=\"DEBUG=1 MULTIPROCESS=1\"\n export GOAL=\"install\"\n export BITCOIN_CONFIG=\"--enable-debug CC=clang CXX=clang++\"  # Use clang to avoid OOM\n export TEST_RUNNER_ENV=\"BITCOIND=bitcoin-node\"\n-export RUN_SECURITY_TESTS=\"true\"\n export PIP_PACKAGES=\"lief\""
      }
    ]
  },
  {
    "sha": "9fdc8afe117b7b1ea845f8acae9e831922b8f92b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZmRjOGFmZTExN2I3YjFlYTg0NWY4YWNhZTllODMxOTIyYjhmOTJi",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-01-21T18:52:40Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-07-07T11:31:37Z"
      },
      "message": "devtools: Improve *-check.py tool detection\n\nThis is important to make sure that we're not testing tools different\nfrom the one we're building with.\n\nIntroduce determine_wellknown_cmd, which encapsulates how we\nshould handle well-known tools specification (IFS splitting, env\noverride, etc.).",
      "tree": {
        "sha": "a8add8f24a05ac933e831d16e1b798259eabfd8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a8add8f24a05ac933e831d16e1b798259eabfd8f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9fdc8afe117b7b1ea845f8acae9e831922b8f92b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmDlkJkACgkQLuufXMCV\nJsE9TQ//QHxfpGVZV4fVV3djLi8cD3bTwKnrFNJXWmlL+q0IhIx9JgRQOA6vCn5V\nj9zWcMaCAd4fax0wmQ/EVHTApYMoMSJMCh167D2C4hpwWEgZIn7EtbT5+dyPTYXY\nGDkbH23TrjNgbkj/MwQgns2t6hV8DAQ80N+U6HmGQYwB/u37tFWCUgGyBM/MAvIv\nsrZfhiwPQIDg4+NwtUzyyAMoTPaxV3vWmXIExeFnrlF3DnlCoibAa0tWlMM7vG0X\nw/q4s0eur6kZk4h26dq0pFc8cYtb2H0OvazEAKJVZbiuCk+BFNcQtJmlj/ckhzar\npllLUDLvUTW+afyfgZXS7hlN0CnYSjTu0rhKKJpmsmIcF/aszZOu0MfWWPiTYA2y\nUBkW3WYtf3hXJ5I2tBpvvt+7E7h9qZG98lqP2X1HSjQH71iHAUlCRn4TvkWV7kfA\nZ47/EwEnGU5DbnYJg+CWombc4/tULIcxTbisqgghGpw4+lsc5xZVpiZ21W/HoPtF\nbm0HuDtsSjcsxXdIbTlQBfhS0vwVZTixTnM2vFW0IlUYif64sNQtrXBr2GHgHss+\nqq8ViqNNjx/AhMwBx0QLBfUgiyuBA0l5zEfj+ME/0KmYa42z8apIiNfQ/Lf1VL8H\nSDjQsZ9YWSmiyKHYgtNlgy5adCSsIWBSbgloz2WhKaxXj/Whl9k=\n=H+0J\n-----END PGP SIGNATURE-----",
        "payload": "tree a8add8f24a05ac933e831d16e1b798259eabfd8f\nparent bda62eab38c5dd74e222eddedbca19ace9df6daa\nauthor Carl Dong <contact@carldong.me> 1611255160 -0500\ncommitter fanquake <fanquake@gmail.com> 1625657497 +0800\n\ndevtools: Improve *-check.py tool detection\n\nThis is important to make sure that we're not testing tools different\nfrom the one we're building with.\n\nIntroduce determine_wellknown_cmd, which encapsulates how we\nshould handle well-known tools specification (IFS splitting, env\noverride, etc.).\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fdc8afe117b7b1ea845f8acae9e831922b8f92b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9fdc8afe117b7b1ea845f8acae9e831922b8f92b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fdc8afe117b7b1ea845f8acae9e831922b8f92b/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bda62eab38c5dd74e222eddedbca19ace9df6daa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bda62eab38c5dd74e222eddedbca19ace9df6daa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bda62eab38c5dd74e222eddedbca19ace9df6daa"
      }
    ],
    "stats": {
      "total": 74,
      "additions": 50,
      "deletions": 24
    },
    "files": [
      {
        "sha": "3ac698b96f3fb73bb37b74299ad3aecf6e42ec16",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fdc8afe117b7b1ea845f8acae9e831922b8f92b/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fdc8afe117b7b1ea845f8acae9e831922b8f92b/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=9fdc8afe117b7b1ea845f8acae9e831922b8f92b",
        "patch": "@@ -58,6 +58,7 @@ DIST_SHARE = \\\n \n BIN_CHECKS=$(top_srcdir)/contrib/devtools/symbol-check.py \\\n            $(top_srcdir)/contrib/devtools/security-check.py \\\n+           $(top_srcdir)/contrib/devtools/utils.py \\\n            $(top_srcdir)/contrib/devtools/pixie.py\n \n WINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/bitcoin.ico \\\n@@ -366,14 +367,14 @@ clean-local: clean-docs\n \n test-security-check:\n if TARGET_DARWIN\n-\t$(AM_V_at) $(PYTHON) $(top_srcdir)/contrib/devtools/test-security-check.py TestSecurityChecks.test_MACHO\n-\t$(AM_V_at) $(PYTHON) $(top_srcdir)/contrib/devtools/test-symbol-check.py TestSymbolChecks.test_MACHO\n+\t$(AM_V_at) CC='$(CC)' $(PYTHON) $(top_srcdir)/contrib/devtools/test-security-check.py TestSecurityChecks.test_MACHO\n+\t$(AM_V_at) CC='$(CC)' $(PYTHON) $(top_srcdir)/contrib/devtools/test-symbol-check.py TestSymbolChecks.test_MACHO\n endif\n if TARGET_WINDOWS\n-\t$(AM_V_at) $(PYTHON) $(top_srcdir)/contrib/devtools/test-security-check.py TestSecurityChecks.test_PE\n-\t$(AM_V_at) $(PYTHON) $(top_srcdir)/contrib/devtools/test-symbol-check.py TestSymbolChecks.test_PE\n+\t$(AM_V_at) CC='$(CC)' $(PYTHON) $(top_srcdir)/contrib/devtools/test-security-check.py TestSecurityChecks.test_PE\n+\t$(AM_V_at) CC='$(CC)' $(PYTHON) $(top_srcdir)/contrib/devtools/test-symbol-check.py TestSymbolChecks.test_PE\n endif\n if TARGET_LINUX\n-\t$(AM_V_at) $(PYTHON) $(top_srcdir)/contrib/devtools/test-security-check.py TestSecurityChecks.test_ELF\n-\t$(AM_V_at) $(PYTHON) $(top_srcdir)/contrib/devtools/test-symbol-check.py TestSymbolChecks.test_ELF\n+\t$(AM_V_at) CC='$(CC)' $(PYTHON) $(top_srcdir)/contrib/devtools/test-security-check.py TestSecurityChecks.test_ELF\n+\t$(AM_V_at) CC='$(CC)' CPPFILT='$(CPPFILT)' $(PYTHON) $(top_srcdir)/contrib/devtools/test-symbol-check.py TestSymbolChecks.test_ELF\n endif"
      },
      {
        "sha": "61f727fa6342689775e2301c2d5736b59d906cce",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fdc8afe117b7b1ea845f8acae9e831922b8f92b/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fdc8afe117b7b1ea845f8acae9e831922b8f92b/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=9fdc8afe117b7b1ea845f8acae9e831922b8f92b",
        "patch": "@@ -12,12 +12,13 @@\n '''\n import subprocess\n import sys\n-import os\n from typing import List, Optional\n \n import lief\n import pixie\n \n+from utils import determine_wellknown_cmd\n+\n # Debian 8 (Jessie) EOL: 2020. https://wiki.debian.org/DebianReleases#Production_Releases\n #\n # - g++ version 4.9.2 (https://packages.debian.org/search?suite=jessie&arch=any&searchon=names&keywords=g%2B%2B)\n@@ -60,7 +61,6 @@\n '_edata', '_end', '__end__', '_init', '__bss_start', '__bss_start__', '_bss_end__', '__bss_end__', '_fini', '_IO_stdin_used', 'stdin', 'stdout', 'stderr',\n 'environ', '_environ', '__environ',\n }\n-CPPFILT_CMD = os.getenv('CPPFILT', '/usr/bin/c++filt')\n \n # Allowed NEEDED libraries\n ELF_ALLOWED_LIBRARIES = {\n@@ -140,7 +140,7 @@ class CPPFilt(object):\n     Use a pipe to the 'c++filt' command.\n     '''\n     def __init__(self):\n-        self.proc = subprocess.Popen(CPPFILT_CMD, stdin=subprocess.PIPE, stdout=subprocess.PIPE, universal_newlines=True)\n+        self.proc = subprocess.Popen(determine_wellknown_cmd('CPPFILT', 'c++filt'), stdin=subprocess.PIPE, stdout=subprocess.PIPE, universal_newlines=True)\n \n     def __call__(self, mangled):\n         self.proc.stdin.write(mangled + '\\n')"
      },
      {
        "sha": "73c8732bb6d3c2fcf4f8bc572add5f55132909fe",
        "filename": "contrib/devtools/test-security-check.py",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fdc8afe117b7b1ea845f8acae9e831922b8f92b/contrib/devtools/test-security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fdc8afe117b7b1ea845f8acae9e831922b8f92b/contrib/devtools/test-security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test-security-check.py?ref=9fdc8afe117b7b1ea845f8acae9e831922b8f92b",
        "patch": "@@ -9,6 +9,8 @@\n import subprocess\n import unittest\n \n+from utils import determine_wellknown_cmd\n+\n def write_testcode(filename):\n     with open(filename, 'w', encoding=\"utf8\") as f:\n         f.write('''\n@@ -25,15 +27,15 @@ def clean_files(source, executable):\n     os.remove(executable)\n \n def call_security_check(cc, source, executable, options):\n-    subprocess.run([cc,source,'-o',executable] + options, check=True)\n+    subprocess.run([*cc,source,'-o',executable] + options, check=True)\n     p = subprocess.run(['./contrib/devtools/security-check.py',executable], stdout=subprocess.PIPE, universal_newlines=True)\n     return (p.returncode, p.stdout.rstrip())\n \n class TestSecurityChecks(unittest.TestCase):\n     def test_ELF(self):\n         source = 'test1.c'\n         executable = 'test1'\n-        cc = 'gcc'\n+        cc = determine_wellknown_cmd('CC', 'gcc')\n         write_testcode(source)\n \n         self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-zexecstack','-fno-stack-protector','-Wl,-znorelro','-no-pie','-fno-PIE', '-Wl,-z,separate-code']),\n@@ -54,7 +56,7 @@ def test_ELF(self):\n     def test_PE(self):\n         source = 'test1.c'\n         executable = 'test1.exe'\n-        cc = 'x86_64-w64-mingw32-gcc'\n+        cc = determine_wellknown_cmd('CC', 'x86_64-w64-mingw32-gcc')\n         write_testcode(source)\n \n         self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--no-nxcompat','-Wl,--no-dynamicbase','-Wl,--no-high-entropy-va','-no-pie','-fno-PIE']),\n@@ -73,7 +75,7 @@ def test_PE(self):\n     def test_MACHO(self):\n         source = 'test1.c'\n         executable = 'test1'\n-        cc = 'clang'\n+        cc = determine_wellknown_cmd('CC', 'clang')\n         write_testcode(source)\n \n         self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-Wl,-flat_namespace','-Wl,-allow_stack_execute','-fno-stack-protector']),\n@@ -95,4 +97,3 @@ def test_MACHO(self):\n \n if __name__ == '__main__':\n     unittest.main()\n-"
      },
      {
        "sha": "56ea02719ddfa3efc1b4eaaf9e837d1967c06b97",
        "filename": "contrib/devtools/test-symbol-check.py",
        "status": "modified",
        "additions": 8,
        "deletions": 6,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fdc8afe117b7b1ea845f8acae9e831922b8f92b/contrib/devtools/test-symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fdc8afe117b7b1ea845f8acae9e831922b8f92b/contrib/devtools/test-symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test-symbol-check.py?ref=9fdc8afe117b7b1ea845f8acae9e831922b8f92b",
        "patch": "@@ -7,10 +7,13 @@\n '''\n import os\n import subprocess\n+from typing import List\n import unittest\n \n-def call_symbol_check(cc, source, executable, options):\n-    subprocess.run([cc,source,'-o',executable] + options, check=True)\n+from utils import determine_wellknown_cmd\n+\n+def call_symbol_check(cc: List[str], source, executable, options):\n+    subprocess.run([*cc,source,'-o',executable] + options, check=True)\n     p = subprocess.run(['./contrib/devtools/symbol-check.py',executable], stdout=subprocess.PIPE, universal_newlines=True)\n     os.remove(source)\n     os.remove(executable)\n@@ -20,7 +23,7 @@ class TestSymbolChecks(unittest.TestCase):\n     def test_ELF(self):\n         source = 'test1.c'\n         executable = 'test1'\n-        cc = 'gcc'\n+        cc = determine_wellknown_cmd('CC', 'gcc')\n \n         # renameat2 was introduced in GLIBC 2.28, so is newer than the upper limit\n         # of glibc for all platforms\n@@ -82,7 +85,7 @@ def test_ELF(self):\n     def test_MACHO(self):\n         source = 'test1.c'\n         executable = 'test1'\n-        cc = 'clang'\n+        cc = determine_wellknown_cmd('CC', 'clang')\n \n         with open(source, 'w', encoding=\"utf8\") as f:\n             f.write('''\n@@ -132,7 +135,7 @@ def test_MACHO(self):\n     def test_PE(self):\n         source = 'test1.c'\n         executable = 'test1.exe'\n-        cc = 'x86_64-w64-mingw32-gcc'\n+        cc = determine_wellknown_cmd('CC', 'x86_64-w64-mingw32-gcc')\n \n         with open(source, 'w', encoding=\"utf8\") as f:\n             f.write('''\n@@ -182,4 +185,3 @@ def test_PE(self):\n \n if __name__ == '__main__':\n     unittest.main()\n-"
      },
      {
        "sha": "68ad1c3aba1915fe44309f802a16e74be4f54e42",
        "filename": "contrib/devtools/utils.py",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fdc8afe117b7b1ea845f8acae9e831922b8f92b/contrib/devtools/utils.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fdc8afe117b7b1ea845f8acae9e831922b8f92b/contrib/devtools/utils.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/utils.py?ref=9fdc8afe117b7b1ea845f8acae9e831922b8f92b",
        "patch": "@@ -0,0 +1,22 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+Common utility functions\n+'''\n+import shutil\n+import sys\n+import os\n+from typing import List\n+\n+\n+def determine_wellknown_cmd(envvar, progname) -> List[str]:\n+    maybe_env = os.getenv(envvar)\n+    maybe_which = shutil.which(progname)\n+    if maybe_env:\n+        return maybe_env.split(' ')  # Well-known vars are often meant to be word-split\n+    elif maybe_which:\n+        return [ maybe_which ]\n+    else:\n+        sys.exit(f\"{progname} not found\")"
      },
      {
        "sha": "7de5fb36ed4789f15f027705726f8b48ed936ea3",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fdc8afe117b7b1ea845f8acae9e831922b8f92b/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fdc8afe117b7b1ea845f8acae9e831922b8f92b/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=9fdc8afe117b7b1ea845f8acae9e831922b8f92b",
        "patch": "@@ -814,23 +814,23 @@ clean-local:\n check-symbols: $(bin_PROGRAMS)\n if TARGET_DARWIN\n \t@echo \"Checking macOS dynamic libraries...\"\n-\t$(AM_V_at) OTOOL=$(OTOOL) $(PYTHON) $(top_srcdir)/contrib/devtools/symbol-check.py $(bin_PROGRAMS)\n+\t$(AM_V_at) $(PYTHON) $(top_srcdir)/contrib/devtools/symbol-check.py $(bin_PROGRAMS)\n endif\n \n if TARGET_WINDOWS\n \t@echo \"Checking Windows dynamic libraries...\"\n-\t$(AM_V_at) OBJDUMP=$(OBJDUMP) $(PYTHON) $(top_srcdir)/contrib/devtools/symbol-check.py $(bin_PROGRAMS)\n+\t$(AM_V_at) $(PYTHON) $(top_srcdir)/contrib/devtools/symbol-check.py $(bin_PROGRAMS)\n endif\n \n if TARGET_LINUX\n \t@echo \"Checking glibc back compat...\"\n-\t$(AM_V_at) CPPFILT=$(CPPFILT) $(PYTHON) $(top_srcdir)/contrib/devtools/symbol-check.py $(bin_PROGRAMS)\n+\t$(AM_V_at) CPPFILT='$(CPPFILT)' $(PYTHON) $(top_srcdir)/contrib/devtools/symbol-check.py $(bin_PROGRAMS)\n endif\n \n check-security: $(bin_PROGRAMS)\n if HARDEN\n \t@echo \"Checking binary security...\"\n-\t$(AM_V_at) OBJDUMP=$(OBJDUMP) OTOOL=$(OTOOL) $(PYTHON) $(top_srcdir)/contrib/devtools/security-check.py $(bin_PROGRAMS)\n+\t$(AM_V_at) $(PYTHON) $(top_srcdir)/contrib/devtools/security-check.py $(bin_PROGRAMS)\n endif\n \n libbitcoin_ipc_mpgen_input = \\"
      }
    ]
  },
  {
    "sha": "678348db515c770c4dddfac512cdd97be11d407d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NzgzNDhkYjUxNWM3NzBjNGRkZGZhYzUxMmNkZDk3YmUxMWQ0MDdk",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-12-11T01:46:05Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-07-07T11:31:37Z"
      },
      "message": "guix: Patch binutils to add security-related disable flags\n\nWe use these flags in our test-security-check make target, but they are\nonly available because debian patches them in.\n\nWe can patch them in for our Guix builds so that we can check the sanity\nof our security/symbol checking suite before running them.",
      "tree": {
        "sha": "18346f2db5394107adf5f828a29e1f9e41ee14d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/18346f2db5394107adf5f828a29e1f9e41ee14d5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/678348db515c770c4dddfac512cdd97be11d407d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmDlkJkACgkQLuufXMCV\nJsE1Eg//YP7Rj9N4SxpYZ8SBG+7ocAinzOzrVGS4U7zJdOPLS1szz1kLi0z9keCP\nllsXaO/smGCX+G3Z9qvIrHZqiLql7zcnXsVHFLkkgr6ER+h0MWb1BLB0Z7i1Hsyt\nDHsvv8o/AtBscKFLtcTHbk2CjeqKXl2u3NXU9DPQukuhJliB71JYOSYoDHBeIhKx\n3y50uJeFwk0ocJIIzSgRif3ExT2MB+d/hlu8CbAsKvRv4ZuPposwI/Wa8DZ/dA2O\nlTbzY1VlTm4D77nuIkTHZF+3wpjxeaQYAuBFLJ7isgFcvMfRrZU10xkgZWUz2wPJ\n7WWfGnuCjrwhduU3Kb+dh9uTR7n+8tAbiqINLJ0X/Pg1WReNZn4UOHyXYT3NjpBt\noSsN/8JZQL4TZGcxGuVZVdoqmmzmmTR/VNTp/QVZumTB49BtKxddmZ7iLHfRJXvI\nX+BgjEHZUQt3SL5Xf7FAaLILVldJ8wmnUXoXPXqLLgMYevg1//eSqGPOFjBkKrpI\ntgJYYimrkNFCaXOu4dJerpCqLILH7QfgFgR1JAXW+ETeYfLFq+1q+xxEif52/rRR\nLEb/r4k7xcfzDqKIvKmrQTGhblN8gkcwWmjLoypRg78ecr4r2NBb6rMgZClFHepf\nRohvYouUdkDVCa39lbHY2jR9fWHzx3sYf6sv2ND1IikS8SZlAWo=\n=Imm4\n-----END PGP SIGNATURE-----",
        "payload": "tree 18346f2db5394107adf5f828a29e1f9e41ee14d5\nparent 9fdc8afe117b7b1ea845f8acae9e831922b8f92b\nauthor Carl Dong <contact@carldong.me> 1607651165 -0500\ncommitter fanquake <fanquake@gmail.com> 1625657497 +0800\n\nguix: Patch binutils to add security-related disable flags\n\nWe use these flags in our test-security-check make target, but they are\nonly available because debian patches them in.\n\nWe can patch them in for our Guix builds so that we can check the sanity\nof our security/symbol checking suite before running them.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/678348db515c770c4dddfac512cdd97be11d407d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/678348db515c770c4dddfac512cdd97be11d407d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/678348db515c770c4dddfac512cdd97be11d407d/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9fdc8afe117b7b1ea845f8acae9e831922b8f92b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fdc8afe117b7b1ea845f8acae9e831922b8f92b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9fdc8afe117b7b1ea845f8acae9e831922b8f92b"
      }
    ],
    "stats": {
      "total": 177,
      "additions": 176,
      "deletions": 1
    },
    "files": [
      {
        "sha": "e71cf525332d7a3d6c330a13c1b2878178beaa0f",
        "filename": "contrib/guix/manifest.scm",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/678348db515c770c4dddfac512cdd97be11d407d/contrib/guix/manifest.scm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/678348db515c770c4dddfac512cdd97be11d407d/contrib/guix/manifest.scm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/manifest.scm?ref=678348db515c770c4dddfac512cdd97be11d407d",
        "patch": "@@ -80,6 +80,10 @@ http://www.linuxfromscratch.org/hlfs/view/development/chapter05/gcc-pass1.html\"\n                  ((\"-rpath=\") \"-rpath-link=\"))\n                #t))))))))\n \n+(define (make-binutils-with-mingw-w64-disable-flags xbinutils)\n+  (package-with-extra-patches xbinutils\n+    (search-our-patches \"binutils-mingw-w64-disable-flags.patch\")))\n+\n (define (make-cross-toolchain target\n                               base-gcc-for-libc\n                               base-kernel-headers\n@@ -168,7 +172,7 @@ desirable for building Bitcoin Core release binaries.\"\n \n (define (make-mingw-pthreads-cross-toolchain target)\n   \"Create a cross-compilation toolchain package for TARGET\"\n-  (let* ((xbinutils (cross-binutils target))\n+  (let* ((xbinutils (make-binutils-with-mingw-w64-disable-flags (cross-binutils target)))\n          (pthreads-xlibc mingw-w64-x86_64-winpthreads)\n          (pthreads-xgcc (make-gcc-with-pthreads\n                          (cross-gcc target"
      },
      {
        "sha": "8f88eb9dfd5926e6ef83066ccb8ca51a12a5e980",
        "filename": "contrib/guix/patches/binutils-mingw-w64-disable-flags.patch",
        "status": "added",
        "additions": 171,
        "deletions": 0,
        "changes": 171,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/678348db515c770c4dddfac512cdd97be11d407d/contrib/guix/patches/binutils-mingw-w64-disable-flags.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/678348db515c770c4dddfac512cdd97be11d407d/contrib/guix/patches/binutils-mingw-w64-disable-flags.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/patches/binutils-mingw-w64-disable-flags.patch?ref=678348db515c770c4dddfac512cdd97be11d407d",
        "patch": "@@ -0,0 +1,171 @@\n+Description: Add disable opposites to the security-related flags\n+Author: Stephen Kitt <skitt@debian.org>\n+\n+This patch adds \"no-\" variants to disable the various security flags:\n+\"no-dynamicbase\", \"no-nxcompat\", \"no-high-entropy-va\", \"disable-reloc-section\".\n+\n+--- a/ld/emultempl/pe.em\n++++ b/ld/emultempl/pe.em\n+@@ -259,9 +261,11 @@\n+ \t\t\t\t\t(OPTION_ENABLE_LONG_SECTION_NAMES + 1)\n+ /* DLLCharacteristics flags.  */\n+ #define OPTION_DYNAMIC_BASE\t\t(OPTION_DISABLE_LONG_SECTION_NAMES + 1)\n+-#define OPTION_FORCE_INTEGRITY\t\t(OPTION_DYNAMIC_BASE + 1)\n++#define OPTION_NO_DYNAMIC_BASE\t\t(OPTION_DYNAMIC_BASE + 1)\n++#define OPTION_FORCE_INTEGRITY\t\t(OPTION_NO_DYNAMIC_BASE + 1)\n+ #define OPTION_NX_COMPAT\t\t(OPTION_FORCE_INTEGRITY + 1)\n+-#define OPTION_NO_ISOLATION\t\t(OPTION_NX_COMPAT + 1)\n++#define OPTION_NO_NX_COMPAT\t\t(OPTION_NX_COMPAT + 1)\n++#define OPTION_NO_ISOLATION\t\t(OPTION_NO_NX_COMPAT + 1)\n+ #define OPTION_NO_SEH\t\t\t(OPTION_NO_ISOLATION + 1)\n+ #define OPTION_NO_BIND\t\t\t(OPTION_NO_SEH + 1)\n+ #define OPTION_WDM_DRIVER\t\t(OPTION_NO_BIND + 1)\n+@@ -271,6 +275,7 @@\n+ #define OPTION_NO_INSERT_TIMESTAMP\t(OPTION_INSERT_TIMESTAMP + 1)\n+ #define OPTION_BUILD_ID\t\t\t(OPTION_NO_INSERT_TIMESTAMP + 1)\n+ #define OPTION_ENABLE_RELOC_SECTION\t(OPTION_BUILD_ID + 1)\n++#define OPTION_DISABLE_RELOC_SECTION\t(OPTION_ENABLE_RELOC_SECTION + 1)\n+ \n+ static void\n+ gld${EMULATION_NAME}_add_options\n+@@ -342,8 +347,10 @@\n+     {\"enable-long-section-names\", no_argument, NULL, OPTION_ENABLE_LONG_SECTION_NAMES},\n+     {\"disable-long-section-names\", no_argument, NULL, OPTION_DISABLE_LONG_SECTION_NAMES},\n+     {\"dynamicbase\",no_argument, NULL, OPTION_DYNAMIC_BASE},\n++    {\"no-dynamicbase\", no_argument, NULL, OPTION_NO_DYNAMIC_BASE},\n+     {\"forceinteg\", no_argument, NULL, OPTION_FORCE_INTEGRITY},\n+     {\"nxcompat\", no_argument, NULL, OPTION_NX_COMPAT},\n++    {\"no-nxcompat\", no_argument, NULL, OPTION_NO_NX_COMPAT},\n+     {\"no-isolation\", no_argument, NULL, OPTION_NO_ISOLATION},\n+     {\"no-seh\", no_argument, NULL, OPTION_NO_SEH},\n+     {\"no-bind\", no_argument, NULL, OPTION_NO_BIND},\n+@@ -351,6 +358,7 @@\n+     {\"tsaware\", no_argument, NULL, OPTION_TERMINAL_SERVER_AWARE},\n+     {\"build-id\", optional_argument, NULL, OPTION_BUILD_ID},\n+     {\"enable-reloc-section\", no_argument, NULL, OPTION_ENABLE_RELOC_SECTION},\n++    {\"disable-reloc-section\", no_argument, NULL, OPTION_DISABLE_RELOC_SECTION},\n+     {NULL, no_argument, NULL, 0}\n+   };\n+ \n+@@ -485,9 +494,12 @@\n+                                        in object files\\n\"));\n+   fprintf (file, _(\"  --dynamicbase                      Image base address may be relocated using\\n\\\n+                                        address space layout randomization (ASLR)\\n\"));\n++  fprintf (file, _(\"  --no-dynamicbase                   Image base address may not be relocated\\n\"));\n+   fprintf (file, _(\"  --enable-reloc-section             Create the base relocation table\\n\"));\n++  fprintf (file, _(\"  --disable-reloc-section            Disable the base relocation table\\n\"));\n+   fprintf (file, _(\"  --forceinteg               Code integrity checks are enforced\\n\"));\n+   fprintf (file, _(\"  --nxcompat                 Image is compatible with data execution prevention\\n\"));\n++  fprintf (file, _(\"  --no-nxcompat              Image is not compatible with data execution prevention\\n\"));\n+   fprintf (file, _(\"  --no-isolation             Image understands isolation but do not isolate the image\\n\"));\n+   fprintf (file, _(\"  --no-seh                   Image does not use SEH. No SE handler may\\n\\\n+                                        be called in this image\\n\"));\n+@@ -862,12 +874,21 @@\n+     case OPTION_ENABLE_RELOC_SECTION:\n+       pe_dll_enable_reloc_section = 1;\n+       break;\n++    case OPTION_DISABLE_RELOC_SECTION:\n++      pe_dll_enable_reloc_section = 0;\n++      /* fall through */\n++    case OPTION_NO_DYNAMIC_BASE:\n++      pe_dll_characteristics &= ~IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE;\n++      break;\n+     case OPTION_FORCE_INTEGRITY:\n+       pe_dll_characteristics |= IMAGE_DLL_CHARACTERISTICS_FORCE_INTEGRITY;\n+       break;\n+     case OPTION_NX_COMPAT:\n+       pe_dll_characteristics |= IMAGE_DLL_CHARACTERISTICS_NX_COMPAT;\n+       break;\n++    case OPTION_NO_NX_COMPAT:\n++      pe_dll_characteristics &= ~IMAGE_DLL_CHARACTERISTICS_NX_COMPAT;\n++      break;\n+     case OPTION_NO_ISOLATION:\n+       pe_dll_characteristics |= IMAGE_DLLCHARACTERISTICS_NO_ISOLATION;\n+       break;\n+--- a/ld/emultempl/pep.em\n++++ b/ld/emultempl/pep.em\n+@@ -237,9 +240,12 @@\n+   OPTION_ENABLE_LONG_SECTION_NAMES,\n+   OPTION_DISABLE_LONG_SECTION_NAMES,\n+   OPTION_HIGH_ENTROPY_VA,\n++  OPTION_NO_HIGH_ENTROPY_VA,\n+   OPTION_DYNAMIC_BASE,\n++  OPTION_NO_DYNAMIC_BASE,\n+   OPTION_FORCE_INTEGRITY,\n+   OPTION_NX_COMPAT,\n++  OPTION_NO_NX_COMPAT,\n+   OPTION_NO_ISOLATION,\n+   OPTION_NO_SEH,\n+   OPTION_NO_BIND,\n+@@ -248,7 +254,8 @@\n+   OPTION_NO_INSERT_TIMESTAMP,\n+   OPTION_TERMINAL_SERVER_AWARE,\n+   OPTION_BUILD_ID,\n+-  OPTION_ENABLE_RELOC_SECTION\n++  OPTION_ENABLE_RELOC_SECTION,\n++  OPTION_DISABLE_RELOC_SECTION\n+ };\n+ \n+ static void\n+@@ -315,9 +322,12 @@\n+     {\"enable-long-section-names\", no_argument, NULL, OPTION_ENABLE_LONG_SECTION_NAMES},\n+     {\"disable-long-section-names\", no_argument, NULL, OPTION_DISABLE_LONG_SECTION_NAMES},\n+     {\"high-entropy-va\", no_argument, NULL, OPTION_HIGH_ENTROPY_VA},\n++    {\"no-high-entropy-va\", no_argument, NULL, OPTION_NO_HIGH_ENTROPY_VA},\n+     {\"dynamicbase\",no_argument, NULL, OPTION_DYNAMIC_BASE},\n++    {\"no-dynamicbase\", no_argument, NULL, OPTION_NO_DYNAMIC_BASE},\n+     {\"forceinteg\", no_argument, NULL, OPTION_FORCE_INTEGRITY},\n+     {\"nxcompat\", no_argument, NULL, OPTION_NX_COMPAT},\n++    {\"no-nxcompat\", no_argument, NULL, OPTION_NO_NX_COMPAT},\n+     {\"no-isolation\", no_argument, NULL, OPTION_NO_ISOLATION},\n+     {\"no-seh\", no_argument, NULL, OPTION_NO_SEH},\n+     {\"no-bind\", no_argument, NULL, OPTION_NO_BIND},\n+@@ -327,6 +337,7 @@\n+     {\"no-insert-timestamp\", no_argument, NULL, OPTION_NO_INSERT_TIMESTAMP},\n+     {\"build-id\", optional_argument, NULL, OPTION_BUILD_ID},\n+     {\"enable-reloc-section\", no_argument, NULL, OPTION_ENABLE_RELOC_SECTION},\n++    {\"disable-reloc-section\", no_argument, NULL, OPTION_DISABLE_RELOC_SECTION},\n+     {NULL, no_argument, NULL, 0}\n+   };\n+ \n+@@ -448,11 +461,15 @@\n+                                        in object files\\n\"));\n+   fprintf (file, _(\"  --high-entropy-va                  Image is compatible with 64-bit address space\\n\\\n+                                        layout randomization (ASLR)\\n\"));\n++  fprintf (file, _(\"  --no-high-entropy-va               Image is not compatible with 64-bit ASLR\\n\"));\n+   fprintf (file, _(\"  --dynamicbase                      Image base address may be relocated using\\n\\\n+                                        address space layout randomization (ASLR)\\n\"));\n++  fprintf (file, _(\"  --no-dynamicbase                   Image base address may not be relocated\\n\"));\n+   fprintf (file, _(\"  --enable-reloc-section             Create the base relocation table\\n\"));\n++  fprintf (file, _(\"  --disable-reloc-section            Disable the base relocation table\\n\"));\n+   fprintf (file, _(\"  --forceinteg               Code integrity checks are enforced\\n\"));\n+   fprintf (file, _(\"  --nxcompat                 Image is compatible with data execution prevention\\n\"));\n++  fprintf (file, _(\"  --no-nxcompat              Image is not compatible with data execution prevention\\n\"));\n+   fprintf (file, _(\"  --no-isolation             Image understands isolation but do not isolate the image\\n\"));\n+   fprintf (file, _(\"  --no-seh                   Image does not use SEH; no SE handler may\\n\\\n+                                        be called in this image\\n\"));\n+@@ -809,12 +826,24 @@\n+     case OPTION_ENABLE_RELOC_SECTION:\n+       pep_dll_enable_reloc_section = 1;\n+       break;\n++    case OPTION_DISABLE_RELOC_SECTION:\n++      pep_dll_enable_reloc_section = 0;\n++      /* fall through */\n++    case OPTION_NO_DYNAMIC_BASE:\n++      pe_dll_characteristics &= ~IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE;\n++      /* fall through */\n++    case OPTION_NO_HIGH_ENTROPY_VA:\n++      pe_dll_characteristics &= ~IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA;\n++      break;\n+     case OPTION_FORCE_INTEGRITY:\n+       pe_dll_characteristics |= IMAGE_DLL_CHARACTERISTICS_FORCE_INTEGRITY;\n+       break;\n+     case OPTION_NX_COMPAT:\n+       pe_dll_characteristics |= IMAGE_DLL_CHARACTERISTICS_NX_COMPAT;\n+       break;\n++    case OPTION_NO_NX_COMPAT:\n++      pe_dll_characteristics &= ~IMAGE_DLL_CHARACTERISTICS_NX_COMPAT;\n++      break;\n+     case OPTION_NO_ISOLATION:\n+       pe_dll_characteristics |= IMAGE_DLLCHARACTERISTICS_NO_ISOLATION;\n+       break;"
      }
    ]
  },
  {
    "sha": "a8127b34bce3597b8091e14057c926197966a234",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphODEyN2IzNGJjZTM1OTdiODA5MWUxNDA1N2M5MjYxOTc5NjZhMjM0",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-03-02T22:19:03Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-07-07T11:31:37Z"
      },
      "message": "build: Use and test PE binutils with --reloc-section\n\nAlso fix test-security-check.py to account for new PE PIE failure\nindication.",
      "tree": {
        "sha": "5229c1de235d6c103a5f6908171bddc90a4bd55c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5229c1de235d6c103a5f6908171bddc90a4bd55c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a8127b34bce3597b8091e14057c926197966a234",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmDlkJkACgkQLuufXMCV\nJsG8sQ//Xv0TRfUK+d6prtFmqHJeEMt4RVCbPUIaaAU/d0lKlLkNOTDS7AYyyXM+\nuHJOPNSnggq7R35DFvEzq7Q8/sUtIJ3rrNZ6ljBXqZctYdN8RSvTk6NcaxInRq9p\n9gHktexuzGANYet6jMD+ez7JiTbLy85zPO9ZAexKr8oYQIe+v1m6Y58T48jFaRlD\nrkK4d/cSz3AdEV2/E9fReDQxrkKa1RGE70mnE4xK9YMUxR2t+pKNTGenixd3a/vF\nA0ld6/l2Nl1Mnh18SC31KxC+o1mpo8X/vgifGXt9LhKm771tDzgwOqXnWegkRkG+\nxD+gNzkG+14JBbZlFQT/VD8YfAzKNSTBqvIE5ykDHDbO6CThhkpWWnDy5YeoZuD1\n7IxQsI7Caw3lJJ1uLrzh+i2+Kj6WOd151nFj8XzOM8vLVbbsiobVWapCAFxXOnAV\nBeoyO401SQAsJotUJx5UkJmLA+ZnLJ6Oho2j+gpF4crmUuJqsAjxADOCbifNuWDO\nde7U8W4dqJmJdqSoAu2l+JGDcE+NuUZwfBsuqL5lRHLvkYzngLYCDwPU6xIFvrfD\nzcyiaIEb9jW6KtK6kmXY3YwkvwGiG9iYxXX8Ez0RMYdtB7U2nN7apbHZytBPb8xT\n61VBDg4cVACmHTcLOOi0VGr41ekOnfdK0iG5LaCYt7UB2qQIymM=\n=Wafg\n-----END PGP SIGNATURE-----",
        "payload": "tree 5229c1de235d6c103a5f6908171bddc90a4bd55c\nparent 678348db515c770c4dddfac512cdd97be11d407d\nauthor Carl Dong <contact@carldong.me> 1614723543 -0500\ncommitter fanquake <fanquake@gmail.com> 1625657497 +0800\n\nbuild: Use and test PE binutils with --reloc-section\n\nAlso fix test-security-check.py to account for new PE PIE failure\nindication.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8127b34bce3597b8091e14057c926197966a234",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a8127b34bce3597b8091e14057c926197966a234",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8127b34bce3597b8091e14057c926197966a234/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "678348db515c770c4dddfac512cdd97be11d407d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/678348db515c770c4dddfac512cdd97be11d407d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/678348db515c770c4dddfac512cdd97be11d407d"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 12,
      "deletions": 9
    },
    "files": [
      {
        "sha": "6f78e8dec425283deb02b18f89e6756a5fdf33ae",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8127b34bce3597b8091e14057c926197966a234/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8127b34bce3597b8091e14057c926197966a234/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=a8127b34bce3597b8091e14057c926197966a234",
        "patch": "@@ -900,6 +900,7 @@ if test x$use_hardening != xno; then\n     ])\n   fi\n \n+  AX_CHECK_LINK_FLAG([[-Wl,--enable-reloc-section]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--enable-reloc-section\"],, [[$LDFLAG_WERROR]])\n   AX_CHECK_LINK_FLAG([[-Wl,--dynamicbase]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--dynamicbase\"],, [[$LDFLAG_WERROR]])\n   AX_CHECK_LINK_FLAG([[-Wl,--nxcompat]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--nxcompat\"],, [[$LDFLAG_WERROR]])\n   AX_CHECK_LINK_FLAG([[-Wl,--high-entropy-va]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--high-entropy-va\"],, [[$LDFLAG_WERROR]])"
      },
      {
        "sha": "14058e2cc8d5295ebcaa6007ac681d87e6b53a98",
        "filename": "contrib/devtools/test-security-check.py",
        "status": "modified",
        "additions": 11,
        "deletions": 9,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8127b34bce3597b8091e14057c926197966a234/contrib/devtools/test-security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8127b34bce3597b8091e14057c926197966a234/contrib/devtools/test-security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test-security-check.py?ref=a8127b34bce3597b8091e14057c926197966a234",
        "patch": "@@ -59,15 +59,17 @@ def test_PE(self):\n         cc = determine_wellknown_cmd('CC', 'x86_64-w64-mingw32-gcc')\n         write_testcode(source)\n \n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--no-nxcompat','-Wl,--no-dynamicbase','-Wl,--no-high-entropy-va','-no-pie','-fno-PIE']),\n-            (1, executable+': failed DYNAMIC_BASE HIGH_ENTROPY_VA NX RELOC_SECTION'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--no-dynamicbase','-Wl,--no-high-entropy-va','-no-pie','-fno-PIE']),\n-            (1, executable+': failed DYNAMIC_BASE HIGH_ENTROPY_VA RELOC_SECTION'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--no-high-entropy-va','-no-pie','-fno-PIE']),\n-            (1, executable+': failed HIGH_ENTROPY_VA RELOC_SECTION'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--high-entropy-va','-no-pie','-fno-PIE']),\n-            (1, executable+': failed RELOC_SECTION'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--high-entropy-va','-pie','-fPIE']),\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--no-nxcompat','-Wl,--disable-reloc-section','-Wl,--no-dynamicbase','-Wl,--no-high-entropy-va','-no-pie','-fno-PIE']),\n+            (1, executable+': failed PIE DYNAMIC_BASE HIGH_ENTROPY_VA NX RELOC_SECTION'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--disable-reloc-section','-Wl,--no-dynamicbase','-Wl,--no-high-entropy-va','-no-pie','-fno-PIE']),\n+            (1, executable+': failed PIE DYNAMIC_BASE HIGH_ENTROPY_VA RELOC_SECTION'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--enable-reloc-section','-Wl,--no-dynamicbase','-Wl,--no-high-entropy-va','-no-pie','-fno-PIE']),\n+            (1, executable+': failed PIE DYNAMIC_BASE HIGH_ENTROPY_VA'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--enable-reloc-section','-Wl,--no-dynamicbase','-Wl,--no-high-entropy-va','-pie','-fPIE']),\n+            (1, executable+': failed PIE DYNAMIC_BASE HIGH_ENTROPY_VA'))  # -pie -fPIE does nothing unless --dynamicbase is also supplied\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--enable-reloc-section','-Wl,--dynamicbase','-Wl,--no-high-entropy-va','-pie','-fPIE']),\n+            (1, executable+': failed HIGH_ENTROPY_VA'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--enable-reloc-section','-Wl,--dynamicbase','-Wl,--high-entropy-va','-pie','-fPIE']),\n             (0, ''))\n \n         clean_files(source, executable)"
      }
    ]
  },
  {
    "sha": "1946b5f77cb5a6bb37500252079c3582cac4a6c9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOTQ2YjVmNzdjYjVhNmJiMzc1MDAyNTIwNzljMzU4MmNhYzRhNmM5",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-07-01T12:18:03Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-07-07T11:31:37Z"
      },
      "message": "scripts: more robustly test macOS symbol checks",
      "tree": {
        "sha": "c4d64c83fca9f82b951d016de2ab4a188e3da224",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c4d64c83fca9f82b951d016de2ab4a188e3da224"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1946b5f77cb5a6bb37500252079c3582cac4a6c9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmDlkJkACgkQLuufXMCV\nJsFC3Q/+N8VMsApNh5fixliw1sm6Gx3zh0MhBDogXF4JxzbXk0FkPKTWWCuvaYja\n4V35RE7v24WqJMEaEDtskv39YRTYhOJ0yvnGJ3VP+d22qMDBylSPq71iEM87Ad06\nvREl4QBwtvs3updEUnmZsnLEgF3ZzSTkmEZF2tdlMFY6fsyoHUz/VtFvpI0IWVpq\nPWCc4Incp3kx2bi7sxKjitQ0LouEh2Sbg5CuIFKuLRgI1CsVHNXE0ZQAC3P4EwcG\nGSitkMAkhWlUijnVALjkdzl8Q5cNhgJ93mpflWxmLG92c9Snn4G3zWTivrXucgzT\nGUpYFGrOAVzyyqnxn0cGzmxaeWPCQtx0V77XDyZNHDfJRI1AlRx+t7njAn0eDjUh\nhpaMiqBOGtoawRKtPAwJpf9gHysEVa3tXkCSZigYEEKvQLDOwA+uu6v/gQNsuz0X\n/1XAjeUcQRy5XkQJaTj/NpmbxpEFnSO0HLR6atGh40AV7lRhO3cNRBhD4ezklu8c\nEWkPJ7zJ4Wxfoq4YM4vmGa5wBhqEmrA6BspmcepkcmvseqZhNE5MwYGOwCb817pT\nhLdb1abd5NFpgj8XruLmNbVtI+W4fXZ5XhWOTgpjKU6GTgExN3YhR9hwZLAHFTyb\ndG2dlxHwwNycPvhb4atPOtRBN4MM367pRCWW+9/nsSyR3rWgtfs=\n=7cqr\n-----END PGP SIGNATURE-----",
        "payload": "tree c4d64c83fca9f82b951d016de2ab4a188e3da224\nparent a8127b34bce3597b8091e14057c926197966a234\nauthor fanquake <fanquake@gmail.com> 1625141883 +0800\ncommitter fanquake <fanquake@gmail.com> 1625657497 +0800\n\nscripts: more robustly test macOS symbol checks\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1946b5f77cb5a6bb37500252079c3582cac4a6c9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1946b5f77cb5a6bb37500252079c3582cac4a6c9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1946b5f77cb5a6bb37500252079c3582cac4a6c9/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a8127b34bce3597b8091e14057c926197966a234",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8127b34bce3597b8091e14057c926197966a234",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a8127b34bce3597b8091e14057c926197966a234"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "68e479009b5cec0efbd398add271ee4543d104f5",
        "filename": "contrib/devtools/test-symbol-check.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1946b5f77cb5a6bb37500252079c3582cac4a6c9/contrib/devtools/test-symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1946b5f77cb5a6bb37500252079c3582cac4a6c9/contrib/devtools/test-symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test-symbol-check.py?ref=1946b5f77cb5a6bb37500252079c3582cac4a6c9",
        "patch": "@@ -99,7 +99,7 @@ def test_MACHO(self):\n \n         ''')\n \n-        self.assertEqual(call_symbol_check(cc, source, executable, ['-lexpat']),\n+        self.assertEqual(call_symbol_check(cc, source, executable, ['-lexpat', '-Wl,-platform_version','-Wl,macos', '-Wl,11.4', '-Wl,11.4']),\n             (1, 'libexpat.1.dylib is not in ALLOWED_LIBRARIES!\\n' +\n                 f'{executable}: failed DYNAMIC_LIBRARIES MIN_OS SDK'))\n \n@@ -116,7 +116,7 @@ def test_MACHO(self):\n                 }\n         ''')\n \n-        self.assertEqual(call_symbol_check(cc, source, executable, ['-framework', 'CoreGraphics']),\n+        self.assertEqual(call_symbol_check(cc, source, executable, ['-framework', 'CoreGraphics', '-Wl,-platform_version','-Wl,macos', '-Wl,11.4', '-Wl,11.4']),\n                 (1, f'{executable}: failed MIN_OS SDK'))\n \n         source = 'test3.c'\n@@ -129,7 +129,7 @@ def test_MACHO(self):\n                 }\n         ''')\n \n-        self.assertEqual(call_symbol_check(cc, source, executable, ['-mmacosx-version-min=10.14']),\n+        self.assertEqual(call_symbol_check(cc, source, executable, ['-Wl,-platform_version','-Wl,macos', '-Wl,10.14', '-Wl,11.4']),\n                 (1, f'{executable}: failed SDK'))\n \n     def test_PE(self):"
      }
    ]
  },
  {
    "sha": "6cf3345297d371b4785d80d54e802b52ff09e8c2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2Y2YzMzQ1Mjk3ZDM3MWI0Nzg1ZDgwZDU0ZTgwMmI1MmZmMDllOGMy",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-07-07T11:59:31Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-07-07T12:29:01Z"
      },
      "message": "scripts: adjust test-symbol-check for guix release environment\n\nNow that our release binaries are build in a glibc 2.24 and 2.27\nenvironment, we can't use a symbol from glibc 2.28 to test our checks.\nReplace renameat2() with nextup(), which was introduced in 2.24.\n\nNote that this also means re-disabling the test for RISC-V, however\nRISC-V is built in a glibc 2.27 environment, and our minimum required\nglibc for that binary is 2.27.",
      "tree": {
        "sha": "2df9fa1718954ea41fc1a81c70cfba75cedc8dd4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2df9fa1718954ea41fc1a81c70cfba75cedc8dd4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6cf3345297d371b4785d80d54e802b52ff09e8c2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmDlng4ACgkQLuufXMCV\nJsEg2A/9Gyv5AGZP7QYjEjTd/FkW7WUcdgOPVxPMXeAvbR3nhDbMUeZNRH1lQq98\n+Cqvn/qXIj6ALGR1H3Q4njXLCQhtbBTcCkXt7ncU/R+4X/FXU9hxJbyayN1OYo32\nQ3HVebpGgi7WxeWM1WBNSV5aOePU2PCCVsC6yOG4T7PK2VEyy2r/JlmTxgjDlcr+\nSDPx7hxAufy+goUFI1U9pd52InbvvPNbatLPLTbvx5XgSZrh6Htv1ayv4YEF4XGl\nBw8w1zNbkxyNsIIaCknxsQ7wa81Q0GTK9pbzODH2ws8XR3WeGifpwWyVMwyFXuYe\ndstVca0Gh68xoKw3tkmIB9lsONwioFYtb0IUYPi2yK+ej9EwbGfUAQBmSiMSEoJU\nVsdmalmFSH7Pd8JMfGtHMAkukgJzmPU55g3kIJVAw7cX2DVLGY1R+ausCZVHHJyl\nr2Sy9Sz574zaNFhijlYS52y+sVjWy6SGUyEwV3a0SJx+xmqLVpKv7K0PY8ikQdRH\ndN8uLOMUAG5ZiGw+2vrrcYiswyKDIXZKdR8RuwjjondInppa4Ey+IANhh7eTyYA9\npb9j3hFepzn+TChvXC4Im23cBJ4P7ehnZzT/7iCjvmX47EOj7y3DKsX07HssgeZK\nymwm4E4rXTgNYBXVDrk7wXXuFzbdFVcofLWWs9vftYTTDeaR4oE=\n=MOeJ\n-----END PGP SIGNATURE-----",
        "payload": "tree 2df9fa1718954ea41fc1a81c70cfba75cedc8dd4\nparent 1946b5f77cb5a6bb37500252079c3582cac4a6c9\nauthor fanquake <fanquake@gmail.com> 1625659171 +0800\ncommitter fanquake <fanquake@gmail.com> 1625660941 +0800\n\nscripts: adjust test-symbol-check for guix release environment\n\nNow that our release binaries are build in a glibc 2.24 and 2.27\nenvironment, we can't use a symbol from glibc 2.28 to test our checks.\nReplace renameat2() with nextup(), which was introduced in 2.24.\n\nNote that this also means re-disabling the test for RISC-V, however\nRISC-V is built in a glibc 2.27 environment, and our minimum required\nglibc for that binary is 2.27.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6cf3345297d371b4785d80d54e802b52ff09e8c2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6cf3345297d371b4785d80d54e802b52ff09e8c2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6cf3345297d371b4785d80d54e802b52ff09e8c2/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1946b5f77cb5a6bb37500252079c3582cac4a6c9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1946b5f77cb5a6bb37500252079c3582cac4a6c9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1946b5f77cb5a6bb37500252079c3582cac4a6c9"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 16,
      "deletions": 9
    },
    "files": [
      {
        "sha": "7d83c5f751f0f901cd8cdc953bfa6435a7238aeb",
        "filename": "contrib/devtools/test-symbol-check.py",
        "status": "modified",
        "additions": 16,
        "deletions": 9,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cf3345297d371b4785d80d54e802b52ff09e8c2/contrib/devtools/test-symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cf3345297d371b4785d80d54e802b52ff09e8c2/contrib/devtools/test-symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test-symbol-check.py?ref=6cf3345297d371b4785d80d54e802b52ff09e8c2",
        "patch": "@@ -19,32 +19,39 @@ def call_symbol_check(cc: List[str], source, executable, options):\n     os.remove(executable)\n     return (p.returncode, p.stdout.rstrip())\n \n+def get_machine(cc: List[str]):\n+    p = subprocess.run([*cc,'-dumpmachine'], stdout=subprocess.PIPE, universal_newlines=True)\n+    return p.stdout.rstrip()\n+\n class TestSymbolChecks(unittest.TestCase):\n     def test_ELF(self):\n         source = 'test1.c'\n         executable = 'test1'\n         cc = determine_wellknown_cmd('CC', 'gcc')\n \n-        # renameat2 was introduced in GLIBC 2.28, so is newer than the upper limit\n-        # of glibc for all platforms\n+        # there's no way to do this test for RISC-V at the moment; we build for\n+        # RISC-V in a glibc 2.27 envinonment and we allow all symbols from 2.27.\n+        if 'riscv' in get_machine(cc):\n+            self.skipTest(\"test not available for RISC-V\")\n+\n+        # nextup was introduced in GLIBC 2.24, so is newer than our supported\n+        # glibc (2.17), and available in our release build environment (2.24).\n         with open(source, 'w', encoding=\"utf8\") as f:\n             f.write('''\n                 #define _GNU_SOURCE\n-                #include <stdio.h>\n-                #include <linux/fs.h>\n+                #include <math.h>\n \n-                int renameat2(int olddirfd, const char *oldpath,\n-                    int newdirfd, const char *newpath, unsigned int flags);\n+                double nextup(double x);\n \n                 int main()\n                 {\n-                    renameat2(0, \"test\", 0, \"test_\", RENAME_EXCHANGE);\n+                    nextup(3.14);\n                     return 0;\n                 }\n         ''')\n \n-        self.assertEqual(call_symbol_check(cc, source, executable, []),\n-                (1, executable + ': symbol renameat2 from unsupported version GLIBC_2.28\\n' +\n+        self.assertEqual(call_symbol_check(cc, source, executable, ['-lm']),\n+                (1, executable + ': symbol nextup from unsupported version GLIBC_2.24\\n' +\n                     executable + ': failed IMPORTED_SYMBOLS'))\n \n         # -lutil is part of the libc6 package so a safe bet that it's installed"
      }
    ]
  },
  {
    "sha": "5b4703c6a70db2fa72fcace56a15db07d4b0acf1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YjQ3MDNjNmE3MGRiMmZhNzJmY2FjZTU2YTE1ZGIwN2Q0YjBhY2Yx",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-01-21T19:04:13Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-07-07T12:29:05Z"
      },
      "message": "guix: Test security-check sanity before performing them",
      "tree": {
        "sha": "aa4564b63d2cee8e1386916594dcd3f6ce4877a0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aa4564b63d2cee8e1386916594dcd3f6ce4877a0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5b4703c6a70db2fa72fcace56a15db07d4b0acf1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmDlnhEACgkQLuufXMCV\nJsGb1Q//Zgwg263ubTqM2+HQzlNNuHHlrLxlIEPLn9H1qYR8dQSTeD0xsZ6isJd1\nUd05fKWU4Dp5nmyySTzG2BSBS6BJHqbK0MrGwLHkt2agSiCQzSD6umuC5tdV2A2K\nDIxujqbBlV/YPN7AX31k+QmkIhr/WZsl8xWXUBkKg8mAJQTCkc8oHXUj27PBQs5L\nlCgwcTnagt+lfAeeFmPSRYOtJa3kQv3n5bUOIOLUXTnAD/91CoMVgCXx7/yZU/Ki\nC1cd0gg1QwTMf3Q4efpCz3/bAE+EOFbe72TXgTyIT/dKGsqkxxui2jp9ffxgBJXh\nvlGdFQ7r+yxuddt+HhVSFA1Mz4wVQqdio2OIqXofhaSp8aad/L4doMne2GM87FlX\ncf2Efo8gwAEwkzCqjChgMrg5yTIPV57YpfFJ/RIGtzUa/1EtyA+5pZkzdMTXoiNU\npuRzw1LlThskmC90d488f6ozPvkJEo/K0j00PgPnhT8Eq4CObHF+H8p91wqSJm13\na/ka/paM+F4Ioxn28QrgqCX98s54S7OcLKtN5XWJsS5M6mwYUThiy0VOogE3Hs7A\nAb61RD5oBUlN0hiEjw4nuWQkCDsg6PajqoB/QmJmG4JzIe1JV+l9iMIKqPJwyTaq\nc2LCB4gHT508zo4nbVPrRwbCnm6wtTMcUtt5Va3AzTLc4+paL64=\n=nZmq\n-----END PGP SIGNATURE-----",
        "payload": "tree aa4564b63d2cee8e1386916594dcd3f6ce4877a0\nparent 6cf3345297d371b4785d80d54e802b52ff09e8c2\nauthor Carl Dong <contact@carldong.me> 1611255853 -0500\ncommitter fanquake <fanquake@gmail.com> 1625660945 +0800\n\nguix: Test security-check sanity before performing them\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b4703c6a70db2fa72fcace56a15db07d4b0acf1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5b4703c6a70db2fa72fcace56a15db07d4b0acf1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b4703c6a70db2fa72fcace56a15db07d4b0acf1/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6cf3345297d371b4785d80d54e802b52ff09e8c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6cf3345297d371b4785d80d54e802b52ff09e8c2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6cf3345297d371b4785d80d54e802b52ff09e8c2"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "0b96949a6b57cddca902ae1add88d916262e297f",
        "filename": "contrib/guix/libexec/build.sh",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b4703c6a70db2fa72fcace56a15db07d4b0acf1/contrib/guix/libexec/build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b4703c6a70db2fa72fcace56a15db07d4b0acf1/contrib/guix/libexec/build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/libexec/build.sh?ref=5b4703c6a70db2fa72fcace56a15db07d4b0acf1",
        "patch": "@@ -299,10 +299,11 @@ mkdir -p \"$DISTSRC\"\n     # Build Bitcoin Core\n     make --jobs=\"$JOBS\" ${V:+V=1}\n \n-    # Perform basic ELF security checks on a series of executables.\n+    # Check that symbol/security checks tools are sane.\n+    make test-security-check ${V:+V=1}\n+    # Perform basic security checks on a series of executables.\n     make -C src --jobs=1 check-security ${V:+V=1}\n-    # Check that executables only contain allowed gcc, glibc and libstdc++\n-    # version symbols for Linux distro back-compatibility.\n+    # Check that executables only contain allowed version symbols.\n     make -C src --jobs=1 check-symbols  ${V:+V=1}\n \n     mkdir -p \"$OUTDIR\""
      }
    ]
  }
]