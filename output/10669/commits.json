[
  {
    "sha": "2382bf75a06b72072dcd0825e4de9808ae44c50c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMzgyYmY3NWEwNmI3MjA3MmRjZDA4MjVlNGRlOTgwOGFlNDRjNTBj",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2017-02-03T09:22:24Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2018-01-31T21:56:43Z"
      },
      "message": "Pow: Introduce MaybeGenerateProof",
      "tree": {
        "sha": "c18203ff609117df5066a549e781661beba8b854",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c18203ff609117df5066a549e781661beba8b854"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2382bf75a06b72072dcd0825e4de9808ae44c50c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJacjubAAoJEIhmwY6hyUSi+tkQAOBlxu+14qqcwlcDFQcFlO/N\nyPayonTboAFbOmSoVgpdns3yts+5vrNc72cxVTRfxgVq8aZTetTL3d7WDSUWiWiw\nH4iBKtusSqCoEaiU8KB3UDcyhrttRNPpI8meFRhWAg0TwQJt+Tvq5rUBmOT6IaIm\nET82JVBVB8YL2+vJk+MNvfIX4r3Bxkei/o93GVDRFu/buXf/fGNL+ou7J3Mcyfad\nyEPfssQpqtgSwRB4Lg4vh4b/c78QZd+x97i5koIcKrNQMrGpb3WWbA2jp9Seqzwo\nsNkl5IOQ/80tpwiDhDX8rcytpBS+aD/uSXPJBLoDgn2/OP8w62vzJu6wSpFfVIGq\n/pA2xojiF9iTya6cWSFmItmWp8rmVpdqmHrKQXkb8PJJ4GUKhPJvdPcheZsz7y50\nUETCtbKbEJdwisSJS1+I1k6EXPO6n+RDoxpGbAOvr02EwjdwqzFODFL3WqMGDSFc\nI9jNniLCayTQz9k1N1OVDXYvEgbcm1ggqeS5AosOMGg0uVrJlTRjxpfC3840khZ5\nDqbewIZFyJTIgob+DSHyuNLoAfDC/jIaefpjuAtXseG7DZ9cZ+WLP4zVBGjibnoQ\nnN2oEw+BE9n1wu5gTtLZTOPKpwjl7CdXVTxCdAZtM41kIq1SHfsGh1yBRQeChBUY\niCwvdlxrXvGTRBsdRql0\n=LUJQ\n-----END PGP SIGNATURE-----",
        "payload": "tree c18203ff609117df5066a549e781661beba8b854\nparent 10847fe2d82bd4ffe5be499fd9ad64b6fee78a33\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1486113744 +0100\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1517435803 +0100\n\nPow: Introduce MaybeGenerateProof\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2382bf75a06b72072dcd0825e4de9808ae44c50c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2382bf75a06b72072dcd0825e4de9808ae44c50c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2382bf75a06b72072dcd0825e4de9808ae44c50c/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "10847fe2d82bd4ffe5be499fd9ad64b6fee78a33",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10847fe2d82bd4ffe5be499fd9ad64b6fee78a33",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/10847fe2d82bd4ffe5be499fd9ad64b6fee78a33"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 20,
      "deletions": 10
    },
    "files": [
      {
        "sha": "b0bfd721dd594fe54adb1a45e8aa0145ada06c26",
        "filename": "src/pow.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2382bf75a06b72072dcd0825e4de9808ae44c50c/src/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2382bf75a06b72072dcd0825e4de9808ae44c50c/src/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.cpp?ref=2382bf75a06b72072dcd0825e4de9808ae44c50c",
        "patch": "@@ -89,3 +89,16 @@ bool CheckProofOfWork(uint256 hash, unsigned int nBits, const Consensus::Params&\n \n     return true;\n }\n+\n+bool MaybeGenerateProof(const Consensus::Params& params, CBlockHeader* pblock, uint64_t& max_tries)\n+{\n+    static const int nInnerLoopCount = 0x10000;\n+    while (max_tries > 0 && pblock->nNonce < nInnerLoopCount) {\n+        if (CheckProofOfWork(pblock->GetHash(), pblock->nBits, params)) {\n+            return true;\n+        }\n+        ++pblock->nNonce;\n+        --max_tries;\n+    }\n+    return false;\n+}"
      },
      {
        "sha": "ed75cbd419980433f1b35640cb7957c5ffccd6be",
        "filename": "src/pow.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2382bf75a06b72072dcd0825e4de9808ae44c50c/src/pow.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2382bf75a06b72072dcd0825e4de9808ae44c50c/src/pow.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.h?ref=2382bf75a06b72072dcd0825e4de9808ae44c50c",
        "patch": "@@ -19,5 +19,6 @@ unsigned int CalculateNextWorkRequired(const CBlockIndex* pindexLast, int64_t nF\n \n /** Check whether a block hash satisfies the proof-of-work requirement specified by nBits */\n bool CheckProofOfWork(uint256 hash, unsigned int nBits, const Consensus::Params&);\n+bool MaybeGenerateProof(const Consensus::Params& params, CBlockHeader* pblock, uint64_t& max_tries);\n \n #endif // BITCOIN_POW_H"
      },
      {
        "sha": "220590a442fe08004d408c251490fcaa617d1eb4",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 10,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2382bf75a06b72072dcd0825e4de9808ae44c50c/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2382bf75a06b72072dcd0825e4de9808ae44c50c/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=2382bf75a06b72072dcd0825e4de9808ae44c50c",
        "patch": "@@ -105,7 +105,6 @@ UniValue getnetworkhashps(const JSONRPCRequest& request)\n \n UniValue generateBlocks(std::shared_ptr<CReserveScript> coinbaseScript, int nGenerate, uint64_t nMaxTries, bool keepScript)\n {\n-    static const int nInnerLoopCount = 0x10000;\n     int nHeightEnd = 0;\n     int nHeight = 0;\n \n@@ -126,15 +125,12 @@ UniValue generateBlocks(std::shared_ptr<CReserveScript> coinbaseScript, int nGen\n             LOCK(cs_main);\n             IncrementExtraNonce(pblock, chainActive.Tip(), nExtraNonce);\n         }\n-        while (nMaxTries > 0 && pblock->nNonce < nInnerLoopCount && !CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus())) {\n-            ++pblock->nNonce;\n-            --nMaxTries;\n-        }\n-        if (nMaxTries == 0) {\n-            break;\n-        }\n-        if (pblock->nNonce == nInnerLoopCount) {\n-            continue;\n+        if (!MaybeGenerateProof(Params().GetConsensus(), pblock, nMaxTries)) {\n+            if (nMaxTries == 0) {\n+                break;\n+            } else {\n+                continue;\n+            }\n         }\n         std::shared_ptr<const CBlock> shared_pblock = std::make_shared<const CBlock>(*pblock);\n         if (!ProcessNewBlock(Params(), shared_pblock, true, nullptr))"
      }
    ]
  }
]