[
  {
    "sha": "ab3f4dd27fc9b7830a1fe5de2121b356ca86b2f6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYjNmNGRkMjdmYzliNzgzMGExZmU1ZGUyMTIxYjM1NmNhODZiMmY2",
    "commit": {
      "author": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-04-26T16:43:01Z"
      },
      "committer": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-04-26T17:34:05Z"
      },
      "message": "tests: Add test for 64-bit PE, modify 32-bit test results\n\n9a75d29b6f0d6c4834e451b0fae2200786655a35 change the error result from `PIE` to `DYNAMIC_BASE`. And there are no test for 64-bit, so I made one",
      "tree": {
        "sha": "faaf472a445398a3fa583e1029966c082761d01e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/faaf472a445398a3fa583e1029966c082761d01e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab3f4dd27fc9b7830a1fe5de2121b356ca86b2f6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab3f4dd27fc9b7830a1fe5de2121b356ca86b2f6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ab3f4dd27fc9b7830a1fe5de2121b356ca86b2f6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab3f4dd27fc9b7830a1fe5de2121b356ca86b2f6/comments",
    "author": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "826acc9a3d023ca1fa49fcb9daa82dea454032d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/826acc9a3d023ca1fa49fcb9daa82dea454032d5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/826acc9a3d023ca1fa49fcb9daa82dea454032d5"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 13,
      "deletions": 3
    },
    "files": [
      {
        "sha": "37a895872f5e17634b94047835608b423224f1bb",
        "filename": "contrib/devtools/test-security-check.py",
        "status": "modified",
        "additions": 13,
        "deletions": 3,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab3f4dd27fc9b7830a1fe5de2121b356ca86b2f6/contrib/devtools/test-security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab3f4dd27fc9b7830a1fe5de2121b356ca86b2f6/contrib/devtools/test-security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test-security-check.py?ref=ab3f4dd27fc9b7830a1fe5de2121b356ca86b2f6",
        "patch": "@@ -43,18 +43,28 @@ def test_ELF(self):\n         self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-zrelro','-Wl,-z,now','-pie','-fPIE']), \n                 (0, ''))\n \n-    def test_PE(self):\n+    def test_32bit_PE(self):\n         source = 'test1.c'\n         executable = 'test1.exe'\n         cc = 'i686-w64-mingw32-gcc'\n         write_testcode(source)\n \n         self.assertEqual(call_security_check(cc, source, executable, []), \n-                (1, executable+': failed PIE NX'))\n+                (1, executable+': failed DYNAMIC_BASE NX'))\n         self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat']), \n-                (1, executable+': failed PIE'))\n+                (1, executable+': failed DYNAMIC_BASE'))\n         self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase']), \n                 (0, ''))\n+    def test_64bit_PE(self):\n+        source = 'test1.c'\n+        executable = 'test1.exe'\n+        cc = 'x86_64-w64-mingw32-gcc'\n+        write_testcode(source)\n+\n+        self.assertEqual(call_security_check(cc, source, executable, []), (1, executable+': failed DYNAMIC_BASE NX\\n'+executable+': warning HIGH_ENTROPY_VA'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat']), (1, executable+': failed DYNAMIC_BASE\\n'+executable+': warning HIGH_ENTROPY_VA'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase']), (0, executable+': warning HIGH_ENTROPY_VA'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--high-entropy-va']), (0, ''))\n \n if __name__ == '__main__':\n     unittest.main()"
      }
    ]
  }
]