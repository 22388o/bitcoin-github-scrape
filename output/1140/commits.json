[
  {
    "sha": "faf705a42a05197d89abfc31672ced94d268767f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWY3MDVhNDJhMDUxOTdkODlhYmZjMzE2NzJjZWQ5NGQyNjg3Njdm",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@exmulti.com",
        "date": "2012-04-22T17:22:39Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@redhat.com",
        "date": "2012-04-22T17:22:39Z"
      },
      "message": "Prefer 'unsigned int' for loop index variables tested against ::size()\n\nC++ STL ::size() generally returns unsigned, which implies that \"int idx\"\nstyle of loop variable will generate a signed-vs-unsigned comparison warning\nwhen testing the loop exit condition \"idx < blah.size()\"\n\nUpdate areas of the bitcoin code where loop variables may be more properly and\ncorrectly defined as unsigned.",
      "tree": {
        "sha": "4ebc78c985db96ba9e602b3c6c49ed8ecefc0d9a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4ebc78c985db96ba9e602b3c6c49ed8ecefc0d9a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faf705a42a05197d89abfc31672ced94d268767f",
      "comment_count": 1,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf705a42a05197d89abfc31672ced94d268767f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faf705a42a05197d89abfc31672ced94d268767f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf705a42a05197d89abfc31672ced94d268767f/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "457661f6400030f5979564462e8c625840cc5e58",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/457661f6400030f5979564462e8c625840cc5e58",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/457661f6400030f5979564462e8c625840cc5e58"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 14,
      "deletions": 14
    },
    "files": [
      {
        "sha": "b6ae32fec16649ff5c73e7af3dfb59850985616a",
        "filename": "src/bignum.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf705a42a05197d89abfc31672ced94d268767f/src/bignum.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf705a42a05197d89abfc31672ced94d268767f/src/bignum.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bignum.h?ref=faf705a42a05197d89abfc31672ced94d268767f",
        "patch": "@@ -222,7 +222,7 @@ class CBigNum : public BIGNUM\n         if (vch.size() > 4)\n             vch[4] &= 0x7f;\n         uint256 n = 0;\n-        for (int i = 0, j = vch.size()-1; i < sizeof(n) && j >= 4; i++, j--)\n+        for (unsigned int i = 0, j = vch.size()-1; i < sizeof(n) && j >= 4; i++, j--)\n             ((unsigned char*)&n)[i] = vch[j];\n         return n;\n     }"
      },
      {
        "sha": "00c9990b8fe01e5f0b08fc689e09212e03c79726",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf705a42a05197d89abfc31672ced94d268767f/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf705a42a05197d89abfc31672ced94d268767f/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=faf705a42a05197d89abfc31672ced94d268767f",
        "patch": "@@ -38,7 +38,7 @@ CBigNum CastToBigNum(const valtype& vch)\n \n bool CastToBool(const valtype& vch)\n {\n-    for (int i = 0; i < vch.size(); i++)\n+    for (unsigned int i = 0; i < vch.size(); i++)\n     {\n         if (vch[i] != 0)\n         {\n@@ -655,7 +655,7 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, co\n                     if (stack.size() < 1)\n                         return false;\n                     valtype& vch = stacktop(-1);\n-                    for (int i = 0; i < vch.size(); i++)\n+                    for (unsigned int i = 0; i < vch.size(); i++)\n                         vch[i] = ~vch[i];\n                 }\n                 break;\n@@ -672,17 +672,17 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, co\n                     MakeSameSize(vch1, vch2);\n                     if (opcode == OP_AND)\n                     {\n-                        for (int i = 0; i < vch1.size(); i++)\n+                        for (unsigned int i = 0; i < vch1.size(); i++)\n                             vch1[i] &= vch2[i];\n                     }\n                     else if (opcode == OP_OR)\n                     {\n-                        for (int i = 0; i < vch1.size(); i++)\n+                        for (unsigned int i = 0; i < vch1.size(); i++)\n                             vch1[i] |= vch2[i];\n                     }\n                     else if (opcode == OP_XOR)\n                     {\n-                        for (int i = 0; i < vch1.size(); i++)\n+                        for (unsigned int i = 0; i < vch1.size(); i++)\n                             vch1[i] ^= vch2[i];\n                     }\n                     popstack(stack);\n@@ -939,7 +939,7 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, co\n                 {\n                     // ([sig ...] num_of_signatures [pubkey ...] num_of_pubkeys -- bool)\n \n-                    int i = 1;\n+                    unsigned int i = 1;\n                     if (stack.size() < i)\n                         return false;\n \n@@ -1050,7 +1050,7 @@ uint256 SignatureHash(CScript scriptCode, const CTransaction& txTo, unsigned int\n     scriptCode.FindAndDelete(CScript(OP_CODESEPARATOR));\n \n     // Blank out other inputs' signatures\n-    for (int i = 0; i < txTmp.vin.size(); i++)\n+    for (unsigned int i = 0; i < txTmp.vin.size(); i++)\n         txTmp.vin[i].scriptSig = CScript();\n     txTmp.vin[nIn].scriptSig = scriptCode;\n \n@@ -1061,7 +1061,7 @@ uint256 SignatureHash(CScript scriptCode, const CTransaction& txTo, unsigned int\n         txTmp.vout.clear();\n \n         // Let the others update at will\n-        for (int i = 0; i < txTmp.vin.size(); i++)\n+        for (unsigned int i = 0; i < txTmp.vin.size(); i++)\n             if (i != nIn)\n                 txTmp.vin[i].nSequence = 0;\n     }\n@@ -1075,11 +1075,11 @@ uint256 SignatureHash(CScript scriptCode, const CTransaction& txTo, unsigned int\n             return 1;\n         }\n         txTmp.vout.resize(nOut+1);\n-        for (int i = 0; i < nOut; i++)\n+        for (unsigned int i = 0; i < nOut; i++)\n             txTmp.vout[i].SetNull();\n \n         // Let the others update at will\n-        for (int i = 0; i < txTmp.vin.size(); i++)\n+        for (unsigned int i = 0; i < txTmp.vin.size(); i++)\n             if (i != nIn)\n                 txTmp.vin[i].nSequence = 0;\n     }\n@@ -1449,7 +1449,7 @@ bool ExtractAddresses(const CScript& scriptPubKey, txnouttype& typeRet, vector<C\n     if (typeRet == TX_MULTISIG)\n     {\n         nRequiredRet = vSolutions.front()[0];\n-        for (int i = 1; i < vSolutions.size()-1; i++)\n+        for (unsigned int i = 1; i < vSolutions.size()-1; i++)\n         {\n             CBitcoinAddress address;\n             address.SetPubKey(vSolutions[i]);"
      },
      {
        "sha": "998909897fda79f785c0c3ae0f3c24082178ed47",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf705a42a05197d89abfc31672ced94d268767f/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf705a42a05197d89abfc31672ced94d268767f/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=faf705a42a05197d89abfc31672ced94d268767f",
        "patch": "@@ -1391,8 +1391,8 @@ bool CWallet::TopUpKeyPool()\n         CWalletDB walletdb(strWalletFile);\n \n         // Top up key pool\n-        int64 nTargetSize = max(GetArg(\"-keypool\", 100), (int64)0);\n-        while (setKeyPool.size() < nTargetSize+1)\n+        unsigned int nTargetSize = max(GetArg(\"-keypool\", 100), 0LL);\n+        while (setKeyPool.size() < (nTargetSize + 1))\n         {\n             int64 nEnd = 1;\n             if (!setKeyPool.empty())"
      }
    ]
  },
  {
    "sha": "7bd9c3a3cf408175019f85ec33cfd4364e5f5d32",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YmQ5YzNhM2NmNDA4MTc1MDE5Zjg1ZWMzM2NmZDQzNjRlNWY1ZDMy",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jeff@garzik.org",
        "date": "2012-04-23T18:14:03Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@redhat.com",
        "date": "2012-04-23T18:14:03Z"
      },
      "message": "SigOp and orphan-tx constants and counts are always unsigned.\n\nFixes several sign-comparison warnings.",
      "tree": {
        "sha": "9e05718e234582ad68ff0561717cbd115ea094d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9e05718e234582ad68ff0561717cbd115ea094d5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7bd9c3a3cf408175019f85ec33cfd4364e5f5d32",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7bd9c3a3cf408175019f85ec33cfd4364e5f5d32",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7bd9c3a3cf408175019f85ec33cfd4364e5f5d32",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7bd9c3a3cf408175019f85ec33cfd4364e5f5d32/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "faf705a42a05197d89abfc31672ced94d268767f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf705a42a05197d89abfc31672ced94d268767f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/faf705a42a05197d89abfc31672ced94d268767f"
      }
    ],
    "stats": {
      "total": 46,
      "additions": 23,
      "deletions": 23
    },
    "files": [
      {
        "sha": "7edd87a1e5871581c9720db728b4483e90852403",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7bd9c3a3cf408175019f85ec33cfd4364e5f5d32/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7bd9c3a3cf408175019f85ec33cfd4364e5f5d32/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=7bd9c3a3cf408175019f85ec33cfd4364e5f5d32",
        "patch": "@@ -195,9 +195,9 @@ void static EraseOrphanTx(uint256 hash)\n     mapOrphanTransactions.erase(hash);\n }\n \n-int LimitOrphanTxSize(int nMaxOrphans)\n+unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans)\n {\n-    int nEvicted = 0;\n+    unsigned int nEvicted = 0;\n     while (mapOrphanTransactions.size() > nMaxOrphans)\n     {\n         // Evict a random orphan:\n@@ -328,10 +328,10 @@ bool CTransaction::AreInputsStandard(const MapPrevTx& mapInputs) const\n     return true;\n }\n \n-int\n+unsigned int\n CTransaction::GetLegacySigOpCount() const\n {\n-    int nSigOps = 0;\n+    unsigned int nSigOps = 0;\n     BOOST_FOREACH(const CTxIn& txin, vin)\n     {\n         nSigOps += txin.scriptSig.GetSigOpCount(false);\n@@ -1079,12 +1079,12 @@ int64 CTransaction::GetValueIn(const MapPrevTx& inputs) const\n \n }\n \n-int CTransaction::GetP2SHSigOpCount(const MapPrevTx& inputs) const\n+unsigned int CTransaction::GetP2SHSigOpCount(const MapPrevTx& inputs) const\n {\n     if (IsCoinBase())\n         return 0;\n \n-    int nSigOps = 0;\n+    unsigned int nSigOps = 0;\n     for (unsigned int i = 0; i < vin.size(); i++)\n     {\n         const CTxOut& prevout = GetOutputFor(vin[i], inputs);\n@@ -1284,7 +1284,7 @@ bool CBlock::ConnectBlock(CTxDB& txdb, CBlockIndex* pindex)\n \n     map<uint256, CTxIndex> mapQueuedChanges;\n     int64 nFees = 0;\n-    int nSigOps = 0;\n+    unsigned int nSigOps = 0;\n     BOOST_FOREACH(CTransaction& tx, vtx)\n     {\n         nSigOps += tx.GetLegacySigOpCount();\n@@ -1645,7 +1645,7 @@ bool CBlock::CheckBlock() const\n         if (!tx.CheckTransaction())\n             return DoS(tx.nDoS, error(\"CheckBlock() : CheckTransaction failed\"));\n \n-    int nSigOps = 0;\n+    unsigned int nSigOps = 0;\n     BOOST_FOREACH(const CTransaction& tx, vtx)\n     {\n         nSigOps += tx.GetLegacySigOpCount();\n@@ -2583,9 +2583,9 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n             AddOrphanTx(vMsg);\n \n             // DoS prevention: do not allow mapOrphanTransactions to grow unbounded\n-            int nEvicted = LimitOrphanTxSize(MAX_ORPHAN_TRANSACTIONS);\n+            unsigned int nEvicted = LimitOrphanTxSize(MAX_ORPHAN_TRANSACTIONS);\n             if (nEvicted > 0)\n-                printf(\"mapOrphan overflow, removed %d tx\\n\", nEvicted);\n+                printf(\"mapOrphan overflow, removed %u tx\\n\", nEvicted);\n         }\n         if (tx.nDoS) pfrom->Misbehaving(tx.nDoS);\n     }\n@@ -3209,7 +3209,7 @@ CBlock* CreateNewBlock(CReserveKey& reservekey)\n                 continue;\n \n             // Legacy limits on sigOps:\n-            int nTxSigOps = tx.GetLegacySigOpCount();\n+            unsigned int nTxSigOps = tx.GetLegacySigOpCount();\n             if (nBlockSigOps + nTxSigOps >= MAX_BLOCK_SIGOPS)\n                 continue;\n "
      },
      {
        "sha": "034911ac262a03c9ebb52c296f764e50e53a6361",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7bd9c3a3cf408175019f85ec33cfd4364e5f5d32/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7bd9c3a3cf408175019f85ec33cfd4364e5f5d32/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=7bd9c3a3cf408175019f85ec33cfd4364e5f5d32",
        "patch": "@@ -28,8 +28,8 @@ class CNode;\n \n static const unsigned int MAX_BLOCK_SIZE = 1000000;\n static const unsigned int MAX_BLOCK_SIZE_GEN = MAX_BLOCK_SIZE/2;\n-static const int MAX_BLOCK_SIGOPS = MAX_BLOCK_SIZE/50;\n-static const int MAX_ORPHAN_TRANSACTIONS = MAX_BLOCK_SIZE/100;\n+static const unsigned int MAX_BLOCK_SIGOPS = MAX_BLOCK_SIZE/50;\n+static const unsigned int MAX_ORPHAN_TRANSACTIONS = MAX_BLOCK_SIZE/100;\n static const int64 MIN_TX_FEE = 50000;\n static const int64 MIN_RELAY_TX_FEE = 10000;\n static const int64 MAX_MONEY = 21000000 * COIN;\n@@ -495,15 +495,15 @@ class CTransaction\n         @return number of sigops this transaction's outputs will produce when spent\n         @see CTransaction::FetchInputs\n     */\n-    int GetLegacySigOpCount() const;\n+    unsigned int GetLegacySigOpCount() const;\n \n     /** Count ECDSA signature operations in pay-to-script-hash inputs.\n \n         @param[in] mapInputs\tMap of previous transactions that have outputs we're spending\n         @return maximum number of sigops required to validate this transaction's inputs\n         @see CTransaction::FetchInputs\n      */\n-    int GetP2SHSigOpCount(const MapPrevTx& mapInputs) const;\n+    unsigned int GetP2SHSigOpCount(const MapPrevTx& mapInputs) const;\n \n     /** Amount of bitcoins spent by this transaction.\n         @return sum of all outputs (note: does not include fees)"
      },
      {
        "sha": "eb8200bcc3a358eab3dd36645d0d979f52e181a5",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7bd9c3a3cf408175019f85ec33cfd4364e5f5d32/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7bd9c3a3cf408175019f85ec33cfd4364e5f5d32/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=7bd9c3a3cf408175019f85ec33cfd4364e5f5d32",
        "patch": "@@ -1360,9 +1360,9 @@ bool IsStandard(const CScript& scriptPubKey)\n }\n \n \n-int HaveKeys(const vector<valtype>& pubkeys, const CKeyStore& keystore)\n+unsigned int HaveKeys(const vector<valtype>& pubkeys, const CKeyStore& keystore)\n {\n-    int nResult = 0;\n+    unsigned int nResult = 0;\n     BOOST_FOREACH(const valtype& pubkey, pubkeys)\n     {\n         CBitcoinAddress address;\n@@ -1566,9 +1566,9 @@ bool VerifySignature(const CTransaction& txFrom, const CTransaction& txTo, unsig\n     return true;\n }\n \n-int CScript::GetSigOpCount(bool fAccurate) const\n+unsigned int CScript::GetSigOpCount(bool fAccurate) const\n {\n-    int n = 0;\n+    unsigned int n = 0;\n     const_iterator pc = begin();\n     opcodetype lastOpcode = OP_INVALIDOPCODE;\n     while (pc < end())\n@@ -1590,7 +1590,7 @@ int CScript::GetSigOpCount(bool fAccurate) const\n     return n;\n }\n \n-int CScript::GetSigOpCount(const CScript& scriptSig) const\n+unsigned int CScript::GetSigOpCount(const CScript& scriptSig) const\n {\n     if (!IsPayToScriptHash())\n         return GetSigOpCount(true);"
      },
      {
        "sha": "52922af16fd1000f8093b43bda94f08c8ebfff25",
        "filename": "src/script.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7bd9c3a3cf408175019f85ec33cfd4364e5f5d32/src/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7bd9c3a3cf408175019f85ec33cfd4364e5f5d32/src/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.h?ref=7bd9c3a3cf408175019f85ec33cfd4364e5f5d32",
        "patch": "@@ -491,11 +491,11 @@ class CScript : public std::vector<unsigned char>\n     // CHECKMULTISIGs serialized in scriptSigs are\n     // counted more accurately, assuming they are of the form\n     //  ... OP_N CHECKMULTISIG ...\n-    int GetSigOpCount(bool fAccurate) const;\n+    unsigned int GetSigOpCount(bool fAccurate) const;\n \n     // Accurately count sigOps, including sigOps in\n     // pay-to-script-hash transactions:\n-    int GetSigOpCount(const CScript& scriptSig) const;\n+    unsigned int GetSigOpCount(const CScript& scriptSig) const;\n \n     bool IsPayToScriptHash() const;\n "
      },
      {
        "sha": "e5a8b4f68b489e184f59a55cb265030c96a2f813",
        "filename": "src/test/DoS_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7bd9c3a3cf408175019f85ec33cfd4364e5f5d32/src/test/DoS_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7bd9c3a3cf408175019f85ec33cfd4364e5f5d32/src/test/DoS_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/DoS_tests.cpp?ref=7bd9c3a3cf408175019f85ec33cfd4364e5f5d32",
        "patch": "@@ -14,7 +14,7 @@\n \n // Tests this internal-to-main.cpp method:\n extern void AddOrphanTx(const CDataStream& vMsg);\n-extern int LimitOrphanTxSize(int nMaxOrphans);\n+extern unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans);\n extern std::map<uint256, CDataStream*> mapOrphanTransactions;\n extern std::multimap<uint256, CDataStream*> mapOrphanTransactionsByPrev;\n "
      }
    ]
  },
  {
    "sha": "c0a0a93d02251390b482d4a147531989641c5a98",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMGEwYTkzZDAyMjUxMzkwYjQ4MmQ0YTE0NzUzMTk4OTY0MWM1YTk4",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@exmulti.com",
        "date": "2012-04-22T17:44:12Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@redhat.com",
        "date": "2012-04-23T18:14:36Z"
      },
      "message": "Test ScriptSigArgsExpected() for error, before accumulating return value",
      "tree": {
        "sha": "2d67d65c765458e8f2425b4d54d8b46daa56b77d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d67d65c765458e8f2425b4d54d8b46daa56b77d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c0a0a93d02251390b482d4a147531989641c5a98",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c0a0a93d02251390b482d4a147531989641c5a98",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c0a0a93d02251390b482d4a147531989641c5a98",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c0a0a93d02251390b482d4a147531989641c5a98/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "7bd9c3a3cf408175019f85ec33cfd4364e5f5d32",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7bd9c3a3cf408175019f85ec33cfd4364e5f5d32",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7bd9c3a3cf408175019f85ec33cfd4364e5f5d32"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 9,
      "deletions": 2
    },
    "files": [
      {
        "sha": "2480d26591a94f10cc337ec2f3e645eceda5d45d",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c0a0a93d02251390b482d4a147531989641c5a98/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c0a0a93d02251390b482d4a147531989641c5a98/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=c0a0a93d02251390b482d4a147531989641c5a98",
        "patch": "@@ -297,6 +297,8 @@ bool CTransaction::AreInputsStandard(const MapPrevTx& mapInputs) const\n         if (!Solver(prevScript, whichType, vSolutions))\n             return false;\n         int nArgsExpected = ScriptSigArgsExpected(whichType, vSolutions);\n+        if (nArgsExpected < 0)\n+            return false;\n \n         // Transactions with extra stuff in their scriptSigs are\n         // non-standard. Note that this EvalScript() call will\n@@ -318,10 +320,15 @@ bool CTransaction::AreInputsStandard(const MapPrevTx& mapInputs) const\n                 return false;\n             if (whichType2 == TX_SCRIPTHASH)\n                 return false;\n-            nArgsExpected += ScriptSigArgsExpected(whichType2, vSolutions2);\n+\n+            int tmpExpected;\n+            tmpExpected = ScriptSigArgsExpected(whichType2, vSolutions2);\n+            if (tmpExpected < 0)\n+                return false;\n+            nArgsExpected += tmpExpected;\n         }\n \n-        if (stack.size() != nArgsExpected)\n+        if (stack.size() != (unsigned int)nArgsExpected)\n             return false;\n     }\n "
      }
    ]
  },
  {
    "sha": "1d8c7a9557d596d4c7edee801a724db7a908bce5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZDhjN2E5NTU3ZDU5NmQ0YzdlZGVlODAxYTcyNGRiN2E5MDhiY2U1",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@exmulti.com",
        "date": "2012-04-22T17:51:16Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@redhat.com",
        "date": "2012-04-23T18:14:36Z"
      },
      "message": "Add casts for unavoidable signed/unsigned comparisons\n\nAt these code sites, it is preferable to cast rather than change\na variable's type.",
      "tree": {
        "sha": "5181d28a1c69ecc7c58ba4b0b15417d6817aa949",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5181d28a1c69ecc7c58ba4b0b15417d6817aa949"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d8c7a9557d596d4c7edee801a724db7a908bce5",
      "comment_count": 5,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d8c7a9557d596d4c7edee801a724db7a908bce5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1d8c7a9557d596d4c7edee801a724db7a908bce5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d8c7a9557d596d4c7edee801a724db7a908bce5/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "c0a0a93d02251390b482d4a147531989641c5a98",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c0a0a93d02251390b482d4a147531989641c5a98",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c0a0a93d02251390b482d4a147531989641c5a98"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 21,
      "deletions": 19
    },
    "files": [
      {
        "sha": "f0971e8850caeadb912b81dca1401526d8ac8842",
        "filename": "src/bignum.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d8c7a9557d596d4c7edee801a724db7a908bce5/src/bignum.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d8c7a9557d596d4c7edee801a724db7a908bce5/src/bignum.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bignum.h?ref=1d8c7a9557d596d4c7edee801a724db7a908bce5",
        "patch": "@@ -117,9 +117,9 @@ class CBigNum : public BIGNUM\n     {\n         unsigned long n = BN_get_word(this);\n         if (!BN_is_negative(this))\n-            return (n > std::numeric_limits<int>::max() ? std::numeric_limits<int>::max() : n);\n+            return (n > (unsigned long)std::numeric_limits<int>::max() ? std::numeric_limits<int>::max() : n);\n         else\n-            return (n > std::numeric_limits<int>::max() ? std::numeric_limits<int>::min() : -(int)n);\n+            return (n > (unsigned long)std::numeric_limits<int>::max() ? std::numeric_limits<int>::min() : -(int)n);\n     }\n \n     void setint64(int64 n)"
      },
      {
        "sha": "2262923911b60c2dfeb474d50234809189ea6e33",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d8c7a9557d596d4c7edee801a724db7a908bce5/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d8c7a9557d596d4c7edee801a724db7a908bce5/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=1d8c7a9557d596d4c7edee801a724db7a908bce5",
        "patch": "@@ -999,7 +999,7 @@ Value addmultisigaddress(const Array& params, bool fHelp)\n         strAccount = AccountFromValue(params[2]);\n \n     // Gather public keys\n-    if (nRequired < 1 || keys.size() < nRequired)\n+    if ((nRequired < 1) || ((int)keys.size() < nRequired))\n         throw runtime_error(\n             strprintf(\"wrong number of keys\"\n                       \"(got %d, need at least %d)\", keys.size(), nRequired));\n@@ -1331,8 +1331,10 @@ Value listtransactions(const Array& params, bool fHelp)\n     }\n     // ret is newest to oldest\n     \n-    if (nFrom > ret.size()) nFrom = ret.size();\n-    if (nFrom+nCount > ret.size()) nCount = ret.size()-nFrom;\n+    if (nFrom > (int)ret.size())\n+        nFrom = ret.size();\n+    if ((nFrom + nCount) > (int)ret.size())\n+        nCount = ret.size() - nFrom;\n     Array::iterator first = ret.begin();\n     std::advance(first, nFrom);\n     Array::iterator last = ret.begin();\n@@ -2202,7 +2204,7 @@ int ReadHTTP(std::basic_istream<char>& stream, map<string, string>& mapHeadersRe\n \n     // Read header\n     int nLen = ReadHTTPHeader(stream, mapHeadersRet);\n-    if (nLen < 0 || nLen > MAX_SIZE)\n+    if (nLen < 0 || nLen > (int)MAX_SIZE)\n         return 500;\n \n     // Read message"
      },
      {
        "sha": "e5d110d8ef831dbc14870e4cd329d2a559b0b650",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d8c7a9557d596d4c7edee801a724db7a908bce5/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d8c7a9557d596d4c7edee801a724db7a908bce5/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=1d8c7a9557d596d4c7edee801a724db7a908bce5",
        "patch": "@@ -376,10 +376,10 @@ int CMerkleTx::SetMerkleBranch(const CBlock* pblock)\n         hashBlock = pblock->GetHash();\n \n         // Locate the transaction\n-        for (nIndex = 0; nIndex < pblock->vtx.size(); nIndex++)\n+        for (nIndex = 0; nIndex < (int)pblock->vtx.size(); nIndex++)\n             if (pblock->vtx[nIndex] == *(CTransaction*)this)\n                 break;\n-        if (nIndex == pblock->vtx.size())\n+        if (nIndex == (int)pblock->vtx.size())\n         {\n             vMerkleBranch.clear();\n             nIndex = -1;\n@@ -2750,7 +2750,7 @@ bool ProcessMessages(CNode* pfrom)\n         int nHeaderSize = vRecv.GetSerializeSize(CMessageHeader());\n         if (vRecv.end() - pstart < nHeaderSize)\n         {\n-            if (vRecv.size() > nHeaderSize)\n+            if ((int)vRecv.size() > nHeaderSize)\n             {\n                 printf(\"\\n\\nPROCESSMESSAGE MESSAGESTART NOT FOUND\\n\\n\");\n                 vRecv.erase(vRecv.begin(), vRecv.end() - nHeaderSize);\n@@ -3084,7 +3084,7 @@ unsigned int static ScanHash_CryptoPP(char* pmidstate, char* pdata, char* phash1\n         if ((nNonce & 0xffff) == 0)\n         {\n             nHashesDone = 0xffff+1;\n-            return -1;\n+            return (unsigned int) -1;\n         }\n     }\n }\n@@ -3461,7 +3461,7 @@ void static BitcoinMiner(CWallet *pwallet)\n                                             (char*)&hash, nHashesDone);\n \n             // Check if something found\n-            if (nNonceFound != -1)\n+            if (nNonceFound != (unsigned int) -1)\n             {\n                 for (unsigned int i = 0; i < sizeof(hash)/4; i++)\n                     ((unsigned int*)&hash)[i] = ByteReverse(((unsigned int*)&hash)[i]);"
      },
      {
        "sha": "423891c3bcd1558f4f766ee8d8ce7ceab7f013f0",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d8c7a9557d596d4c7edee801a724db7a908bce5/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d8c7a9557d596d4c7edee801a724db7a908bce5/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=1d8c7a9557d596d4c7edee801a724db7a908bce5",
        "patch": "@@ -437,7 +437,7 @@ class CTransaction\n             nBlockHeight = nBestHeight;\n         if (nBlockTime == 0)\n             nBlockTime = GetAdjustedTime();\n-        if ((int64)nLockTime < (nLockTime < LOCKTIME_THRESHOLD ? (int64)nBlockHeight : nBlockTime))\n+        if ((int64)nLockTime < ((int64)nLockTime < LOCKTIME_THRESHOLD ? (int64)nBlockHeight : nBlockTime))\n             return true;\n         BOOST_FOREACH(const CTxIn& txin, vin)\n             if (!txin.IsFinal())"
      },
      {
        "sha": "fda31966f2c6d0451062d1355e416dff743a0df4",
        "filename": "src/protocol.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d8c7a9557d596d4c7edee801a724db7a908bce5/src/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d8c7a9557d596d4c7edee801a724db7a908bce5/src/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.cpp?ref=1d8c7a9557d596d4c7edee801a724db7a908bce5",
        "patch": "@@ -128,7 +128,7 @@ bool operator<(const CInv& a, const CInv& b)\n \n bool CInv::IsKnownType() const\n {\n-    return (type >= 1 && type < ARRAYLEN(ppszTypeName));\n+    return (type >= 1 && type < (int)ARRAYLEN(ppszTypeName));\n }\n \n const char* CInv::GetCommand() const"
      },
      {
        "sha": "660023ef48a8033dfad2f3ab7ad552f674006f39",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d8c7a9557d596d4c7edee801a724db7a908bce5/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d8c7a9557d596d4c7edee801a724db7a908bce5/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=1d8c7a9557d596d4c7edee801a724db7a908bce5",
        "patch": "@@ -536,7 +536,7 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, co\n                         return false;\n                     int n = CastToBigNum(stacktop(-1)).getint();\n                     popstack(stack);\n-                    if (n < 0 || n >= stack.size())\n+                    if (n < 0 || n >= (int)stack.size())\n                         return false;\n                     valtype vch = stacktop(-n-1);\n                     if (opcode == OP_ROLL)\n@@ -604,9 +604,9 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, co\n                     int nEnd = nBegin + CastToBigNum(stacktop(-1)).getint();\n                     if (nBegin < 0 || nEnd < nBegin)\n                         return false;\n-                    if (nBegin > vch.size())\n+                    if (nBegin > (int)vch.size())\n                         nBegin = vch.size();\n-                    if (nEnd > vch.size())\n+                    if (nEnd > (int)vch.size())\n                         nEnd = vch.size();\n                     vch.erase(vch.begin() + nEnd, vch.end());\n                     vch.erase(vch.begin(), vch.begin() + nBegin);\n@@ -625,7 +625,7 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, co\n                     int nSize = CastToBigNum(stacktop(-1)).getint();\n                     if (nSize < 0)\n                         return false;\n-                    if (nSize > vch.size())\n+                    if (nSize > (int)vch.size())\n                         nSize = vch.size();\n                     if (opcode == OP_LEFT)\n                         vch.erase(vch.begin() + nSize, vch.end());"
      },
      {
        "sha": "e41e09b6b30e404873cf3ebb286d1e4d7a49190a",
        "filename": "src/script.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d8c7a9557d596d4c7edee801a724db7a908bce5/src/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d8c7a9557d596d4c7edee801a724db7a908bce5/src/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.h?ref=1d8c7a9557d596d4c7edee801a724db7a908bce5",
        "patch": "@@ -467,7 +467,7 @@ class CScript : public std::vector<unsigned char>\n         opcodetype opcode;\n         do\n         {\n-            while (end() - pc >= b.size() && memcmp(&pc[0], &b[0], b.size()) == 0)\n+            while (end() - pc >= (long)b.size() && memcmp(&pc[0], &b[0], b.size()) == 0)\n             {\n                 erase(pc, pc + b.size());\n                 ++nFound;"
      },
      {
        "sha": "016e9deb0ce8c77d8535f9fcebb2bd2337761848",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d8c7a9557d596d4c7edee801a724db7a908bce5/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d8c7a9557d596d4c7edee801a724db7a908bce5/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=1d8c7a9557d596d4c7edee801a724db7a908bce5",
        "patch": "@@ -283,7 +283,7 @@ int my_snprintf(char* buffer, size_t limit, const char* format, ...)\n     va_start(arg_ptr, format);\n     int ret = _vsnprintf(buffer, limit, format, arg_ptr);\n     va_end(arg_ptr);\n-    if (ret < 0 || ret >= limit)\n+    if (ret < 0 || ret >= (int)limit)\n     {\n         ret = limit - 1;\n         buffer[limit-1] = 0;"
      }
    ]
  },
  {
    "sha": "5aa0b2382515eb92fe249a106059f3b6a9328d26",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YWEwYjIzODI1MTVlYjkyZmUyNDlhMTA2MDU5ZjNiNmE5MzI4ZDI2",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@exmulti.com",
        "date": "2012-04-22T17:59:24Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@redhat.com",
        "date": "2012-04-23T18:14:36Z"
      },
      "message": "CBlock::WriteToDisk() properly checks ftell(3) for error return\n\nRather than storing ftell(3)'s return value -- a long -- in an\nunsigned int, we store and check a properly typed temp.  Then, assured a\nnon-negative value, we store in nBlockPosRet.",
      "tree": {
        "sha": "bea59d8369abddbe0f517270708404822a98b198",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bea59d8369abddbe0f517270708404822a98b198"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5aa0b2382515eb92fe249a106059f3b6a9328d26",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5aa0b2382515eb92fe249a106059f3b6a9328d26",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5aa0b2382515eb92fe249a106059f3b6a9328d26",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5aa0b2382515eb92fe249a106059f3b6a9328d26/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "1d8c7a9557d596d4c7edee801a724db7a908bce5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d8c7a9557d596d4c7edee801a724db7a908bce5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1d8c7a9557d596d4c7edee801a724db7a908bce5"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "262e77e806b3cfcdbd5b50eb0893d5fed6a65b81",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa0b2382515eb92fe249a106059f3b6a9328d26/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa0b2382515eb92fe249a106059f3b6a9328d26/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=5aa0b2382515eb92fe249a106059f3b6a9328d26",
        "patch": "@@ -944,9 +944,10 @@ class CBlock\n         fileout << FLATDATA(pchMessageStart) << nSize;\n \n         // Write block\n-        nBlockPosRet = ftell(fileout);\n-        if (nBlockPosRet == -1)\n+        long fileOutPos = ftell(fileout);\n+        if (fileOutPos < 0)\n             return error(\"CBlock::WriteToDisk() : ftell failed\");\n+        nBlockPosRet = fileOutPos;\n         fileout << *this;\n \n         // Flush stdio buffers and commit to disk before returning"
      }
    ]
  },
  {
    "sha": "735a60698c845f257a0f7e9b617d50669d9179d4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MzVhNjA2OThjODQ1ZjI1N2EwZjdlOWI2MTdkNTA2NjlkOTE3OWQ0",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@exmulti.com",
        "date": "2012-04-22T18:01:25Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@redhat.com",
        "date": "2012-04-23T18:14:36Z"
      },
      "message": "Change signed->unsigned at 3 code sites\n\nThis resolves signed/unsigned comparison warnings.",
      "tree": {
        "sha": "6f0d818c656a05a8cf2531cf9632dc6cdefc4e20",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6f0d818c656a05a8cf2531cf9632dc6cdefc4e20"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/735a60698c845f257a0f7e9b617d50669d9179d4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/735a60698c845f257a0f7e9b617d50669d9179d4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/735a60698c845f257a0f7e9b617d50669d9179d4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/735a60698c845f257a0f7e9b617d50669d9179d4/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "5aa0b2382515eb92fe249a106059f3b6a9328d26",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5aa0b2382515eb92fe249a106059f3b6a9328d26",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5aa0b2382515eb92fe249a106059f3b6a9328d26"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "53da378fee161e91a7802be7c9b0e13aef7d2a23",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/735a60698c845f257a0f7e9b617d50669d9179d4/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/735a60698c845f257a0f7e9b617d50669d9179d4/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=735a60698c845f257a0f7e9b617d50669d9179d4",
        "patch": "@@ -648,7 +648,7 @@ bool CTxDB::LoadBlockIndex()\n                             }\n                     }\n                     // check level 4: check whether spent txouts were spent within the main chain\n-                    int nOutput = 0;\n+                    unsigned int nOutput = 0;\n                     if (nCheckLevel>3)\n                     {\n                         BOOST_FOREACH(const CDiskTxPos &txpos, txindex.vSpent)"
      },
      {
        "sha": "d218dcfb5db66ac8d7fbc58729f93b027f07fba1",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/735a60698c845f257a0f7e9b617d50669d9179d4/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/735a60698c845f257a0f7e9b617d50669d9179d4/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=735a60698c845f257a0f7e9b617d50669d9179d4",
        "patch": "@@ -498,7 +498,7 @@ void ThreadSocketHandler2(void* parg)\n {\n     printf(\"ThreadSocketHandler started\\n\");\n     list<CNode*> vNodesDisconnected;\n-    int nPrevNodeCount = 0;\n+    unsigned int nPrevNodeCount = 0;\n \n     loop\n     {"
      },
      {
        "sha": "d9d8151b71567d26676a6c6525327ec563cf1786",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/735a60698c845f257a0f7e9b617d50669d9179d4/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/735a60698c845f257a0f7e9b617d50669d9179d4/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=735a60698c845f257a0f7e9b617d50669d9179d4",
        "patch": "@@ -579,9 +579,9 @@ template <typename T> class CMedianFilter\n private:\n     std::vector<T> vValues;\n     std::vector<T> vSorted;\n-    int nSize;\n+    unsigned int nSize;\n public:\n-    CMedianFilter(int size, T initial_value):\n+    CMedianFilter(unsigned int size, T initial_value):\n         nSize(size)\n     {\n         vValues.reserve(size);"
      }
    ]
  }
]