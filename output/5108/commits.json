[
  {
    "sha": "fef24cab1a4a13a864783dfcd6613ce8100f990d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZWYyNGNhYjFhNGExM2E4NjQ3ODNkZmNkNjYxM2NlODEwMGY5OTBk",
    "commit": {
      "author": {
        "name": "Ruben Dario Ponticeli",
        "email": "rdponticelli@gmail.com",
        "date": "2014-10-13T23:48:34Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-10-20T10:46:56Z"
      },
      "message": "Add IsNull() to class CAutoFile and remove operator !",
      "tree": {
        "sha": "bc93a06eab6f788c167cbb0d32d3144d00325fed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bc93a06eab6f788c167cbb0d32d3144d00325fed"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fef24cab1a4a13a864783dfcd6613ce8100f990d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fef24cab1a4a13a864783dfcd6613ce8100f990d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fef24cab1a4a13a864783dfcd6613ce8100f990d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fef24cab1a4a13a864783dfcd6613ce8100f990d/comments",
    "author": {
      "login": "rdponticelli",
      "id": 1192483,
      "node_id": "MDQ6VXNlcjExOTI0ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1192483?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rdponticelli",
      "html_url": "https://github.com/rdponticelli",
      "followers_url": "https://api.github.com/users/rdponticelli/followers",
      "following_url": "https://api.github.com/users/rdponticelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/rdponticelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rdponticelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rdponticelli/subscriptions",
      "organizations_url": "https://api.github.com/users/rdponticelli/orgs",
      "repos_url": "https://api.github.com/users/rdponticelli/repos",
      "events_url": "https://api.github.com/users/rdponticelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rdponticelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "64ffc995d685cf8a53ef868572e835ce42269ec6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64ffc995d685cf8a53ef868572e835ce42269ec6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/64ffc995d685cf8a53ef868572e835ce42269ec6"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "05f1a2eb4dd5953a9baee46f915dc25096406e03",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fef24cab1a4a13a864783dfcd6613ce8100f990d/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fef24cab1a4a13a864783dfcd6613ce8100f990d/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=fef24cab1a4a13a864783dfcd6613ce8100f990d",
        "patch": "@@ -1106,7 +1106,7 @@ bool WriteBlockToDisk(CBlock& block, CDiskBlockPos& pos)\n {\n     // Open history file to append\n     CAutoFile fileout(OpenBlockFile(pos), SER_DISK, CLIENT_VERSION);\n-    if (!fileout)\n+    if (fileout.IsNull())\n         return error(\"WriteBlockToDisk : OpenBlockFile failed\");\n \n     // Write index header\n@@ -1134,7 +1134,7 @@ bool ReadBlockFromDisk(CBlock& block, const CDiskBlockPos& pos)\n \n     // Open history file to read\n     CAutoFile filein(OpenBlockFile(pos, true), SER_DISK, CLIENT_VERSION);\n-    if (!filein)\n+    if (filein.IsNull())\n         return error(\"ReadBlockFromDisk : OpenBlockFile failed\");\n \n     // Read block\n@@ -4548,7 +4548,7 @@ bool CBlockUndo::WriteToDisk(CDiskBlockPos &pos, const uint256 &hashBlock)\n {\n     // Open history file to append\n     CAutoFile fileout(OpenUndoFile(pos), SER_DISK, CLIENT_VERSION);\n-    if (!fileout)\n+    if (fileout.IsNull())\n         return error(\"CBlockUndo::WriteToDisk : OpenUndoFile failed\");\n \n     // Write index header\n@@ -4580,7 +4580,7 @@ bool CBlockUndo::ReadFromDisk(const CDiskBlockPos &pos, const uint256 &hashBlock\n {\n     // Open history file to read\n     CAutoFile filein(OpenUndoFile(pos, true), SER_DISK, CLIENT_VERSION);\n-    if (!filein)\n+    if (filein.IsNull())\n         return error(\"CBlockUndo::ReadFromDisk : OpenBlockFile failed\");\n \n     // Read block"
      },
      {
        "sha": "b7c958143cf1f1668072d419938d25fd074d6494",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fef24cab1a4a13a864783dfcd6613ce8100f990d/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fef24cab1a4a13a864783dfcd6613ce8100f990d/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=fef24cab1a4a13a864783dfcd6613ce8100f990d",
        "patch": "@@ -1929,7 +1929,7 @@ bool CAddrDB::Write(const CAddrMan& addr)\n     boost::filesystem::path pathTmp = GetDataDir() / tmpfn;\n     FILE *file = fopen(pathTmp.string().c_str(), \"wb\");\n     CAutoFile fileout(file, SER_DISK, CLIENT_VERSION);\n-    if (!fileout)\n+    if (fileout.IsNull())\n         return error(\"%s : Failed to open file %s\", __func__, pathTmp.string());\n \n     // Write and commit header, data\n@@ -1954,7 +1954,7 @@ bool CAddrDB::Read(CAddrMan& addr)\n     // open input file, and associate with CAutoFile\n     FILE *file = fopen(pathAddr.string().c_str(), \"rb\");\n     CAutoFile filein(file, SER_DISK, CLIENT_VERSION);\n-    if (!filein)\n+    if (filein.IsNull())\n         return error(\"%s : Failed to open file %s\", __func__, pathAddr.string());\n \n     // use file size to size memory buffer"
      },
      {
        "sha": "d8f0b76d594df3d4d6c22c2a8b3541422aed0094",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fef24cab1a4a13a864783dfcd6613ce8100f990d/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fef24cab1a4a13a864783dfcd6613ce8100f990d/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=fef24cab1a4a13a864783dfcd6613ce8100f990d",
        "patch": "@@ -1122,7 +1122,7 @@ class CAutoFile\n     FILE& operator*()           { return *file; }\n     FILE** operator&()          { return &file; }\n     FILE* operator=(FILE* pnew) { return file = pnew; }\n-    bool operator!()            { return (file == NULL); }\n+    bool IsNull() const         { return (file == NULL); }\n \n \n     //"
      }
    ]
  },
  {
    "sha": "a873823864a00f68772eb2b85a70e933839ca3f5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphODczODIzODY0YTAwZjY4NzcyZWIyYjg1YTcwZTkzMzgzOWNhM2Y1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-10-20T10:45:50Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-10-22T08:18:19Z"
      },
      "message": "CAutoFile: Explicit Get() and remove unused methods\n\nAlso add documentation to some methods.",
      "tree": {
        "sha": "851616d84523434fe11a5a47c59ca2b2606935ff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/851616d84523434fe11a5a47c59ca2b2606935ff"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a873823864a00f68772eb2b85a70e933839ca3f5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJUR2hMAAoJEHSBCwEjRsmmREoIAMUDtXbtGaDUyRdch+6d79TJ\nNxtn9QeAV7uvR9BHlAqIPdbDi+NilzxU+lVVAyBmeChGkHgNfnwTDtJ6JOfURtCH\neOVvDmTfHAgysiElRvlbbIIzKh9gfED06lbyOXGRqWoUnQ+vBsKEbFCczwty8ib3\nuBnNv7wdvYVn29vQisq2/bQr31X1C5VuqoF3suVZXI3DXF44Q4zlWOY81oxq+huU\nPHLYZc24wKggBdbiBqRpqFWOtqjrazfPzfUx1K3WxxWcvWuw0pvtKs5ScgmDsr65\nyuz/hnJjllp2PDldGZt2wTWJX83ddAGiuueHF8IDzhWo8+HqP40VBEwFW7KX/RQ=\n=SJLu\n-----END PGP SIGNATURE-----",
        "payload": "tree 851616d84523434fe11a5a47c59ca2b2606935ff\nparent fef24cab1a4a13a864783dfcd6613ce8100f990d\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1413801950 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1413965899 +0200\n\nCAutoFile: Explicit Get() and remove unused methods\n\nAlso add documentation to some methods.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a873823864a00f68772eb2b85a70e933839ca3f5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a873823864a00f68772eb2b85a70e933839ca3f5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a873823864a00f68772eb2b85a70e933839ca3f5/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fef24cab1a4a13a864783dfcd6613ce8100f990d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fef24cab1a4a13a864783dfcd6613ce8100f990d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fef24cab1a4a13a864783dfcd6613ce8100f990d"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 25,
      "deletions": 18
    },
    "files": [
      {
        "sha": "76eb48a17776c1348018f1ce68fdad7dbf3d8cb1",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a873823864a00f68772eb2b85a70e933839ca3f5/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a873823864a00f68772eb2b85a70e933839ca3f5/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=a873823864a00f68772eb2b85a70e933839ca3f5",
        "patch": "@@ -139,7 +139,7 @@ void Shutdown()\n     {\n         boost::filesystem::path est_path = GetDataDir() / FEE_ESTIMATES_FILENAME;\n         CAutoFile est_fileout(fopen(est_path.string().c_str(), \"wb\"), SER_DISK, CLIENT_VERSION);\n-        if (est_fileout)\n+        if (!est_fileout.IsNull())\n             mempool.WriteFeeEstimates(est_fileout);\n         else\n             LogPrintf(\"%s: Failed to write fee estimates to %s\\n\", __func__, est_path.string());\n@@ -1064,7 +1064,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n     boost::filesystem::path est_path = GetDataDir() / FEE_ESTIMATES_FILENAME;\n     CAutoFile est_filein(fopen(est_path.string().c_str(), \"rb\"), SER_DISK, CLIENT_VERSION);\n     // Allowed to fail as this file IS missing on first startup.\n-    if (est_filein)\n+    if (!est_filein.IsNull())\n         mempool.ReadFeeEstimates(est_filein);\n     fFeeEstimatesInitialized = true;\n "
      },
      {
        "sha": "45e679b3c31fbf3e2c2ec144ef1ac0313bb98c8d",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a873823864a00f68772eb2b85a70e933839ca3f5/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a873823864a00f68772eb2b85a70e933839ca3f5/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=a873823864a00f68772eb2b85a70e933839ca3f5",
        "patch": "@@ -1051,7 +1051,7 @@ bool GetTransaction(const uint256 &hash, CTransaction &txOut, uint256 &hashBlock\n                 CBlockHeader header;\n                 try {\n                     file >> header;\n-                    fseek(file, postx.nTxOffset, SEEK_CUR);\n+                    fseek(file.Get(), postx.nTxOffset, SEEK_CUR);\n                     file >> txOut;\n                 } catch (std::exception &e) {\n                     return error(\"%s : Deserialize or I/O error - %s\", __func__, e.what());\n@@ -1114,16 +1114,16 @@ bool WriteBlockToDisk(CBlock& block, CDiskBlockPos& pos)\n     fileout << FLATDATA(Params().MessageStart()) << nSize;\n \n     // Write block\n-    long fileOutPos = ftell(fileout);\n+    long fileOutPos = ftell(fileout.Get());\n     if (fileOutPos < 0)\n         return error(\"WriteBlockToDisk : ftell failed\");\n     pos.nPos = (unsigned int)fileOutPos;\n     fileout << block;\n \n     // Flush stdio buffers and commit to disk before returning\n-    fflush(fileout);\n+    fflush(fileout.Get());\n     if (!IsInitialBlockDownload())\n-        FileCommit(fileout);\n+        FileCommit(fileout.Get());\n \n     return true;\n }\n@@ -2843,7 +2843,7 @@ bool static LoadBlockIndexDB()\n     for (std::set<int>::iterator it = setBlkDataFiles.begin(); it != setBlkDataFiles.end(); it++)\n     {\n         CDiskBlockPos pos(*it, 0);\n-        if (!CAutoFile(OpenBlockFile(pos, true), SER_DISK, CLIENT_VERSION)) {\n+        if (CAutoFile(OpenBlockFile(pos, true), SER_DISK, CLIENT_VERSION).IsNull()) {\n             return false;\n         }\n     }\n@@ -4556,7 +4556,7 @@ bool CBlockUndo::WriteToDisk(CDiskBlockPos &pos, const uint256 &hashBlock)\n     fileout << FLATDATA(Params().MessageStart()) << nSize;\n \n     // Write undo data\n-    long fileOutPos = ftell(fileout);\n+    long fileOutPos = ftell(fileout.Get());\n     if (fileOutPos < 0)\n         return error(\"CBlockUndo::WriteToDisk : ftell failed\");\n     pos.nPos = (unsigned int)fileOutPos;\n@@ -4569,9 +4569,9 @@ bool CBlockUndo::WriteToDisk(CDiskBlockPos &pos, const uint256 &hashBlock)\n     fileout << hasher.GetHash();\n \n     // Flush stdio buffers and commit to disk before returning\n-    fflush(fileout);\n+    fflush(fileout.Get());\n     if (!IsInitialBlockDownload())\n-        FileCommit(fileout);\n+        FileCommit(fileout.Get());\n \n     return true;\n }"
      },
      {
        "sha": "6cf64f51c3e6a57087aa8664cd5f2ca3fcb8a311",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a873823864a00f68772eb2b85a70e933839ca3f5/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a873823864a00f68772eb2b85a70e933839ca3f5/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=a873823864a00f68772eb2b85a70e933839ca3f5",
        "patch": "@@ -1939,7 +1939,7 @@ bool CAddrDB::Write(const CAddrMan& addr)\n     catch (std::exception &e) {\n         return error(\"%s : Serialize or I/O error - %s\", __func__, e.what());\n     }\n-    FileCommit(fileout);\n+    FileCommit(fileout.Get());\n     fileout.fclose();\n \n     // replace existing peers.dat, if any, with new peers.dat.XXXX"
      },
      {
        "sha": "b9d5f954631ef1f3ed4571cd53371de9e7d23d33",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 13,
        "deletions": 6,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a873823864a00f68772eb2b85a70e933839ca3f5/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a873823864a00f68772eb2b85a70e933839ca3f5/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=a873823864a00f68772eb2b85a70e933839ca3f5",
        "patch": "@@ -1116,14 +1116,21 @@ class CAutoFile\n         }\n     }\n \n+    /** Get wrapped FILE* with transfer of ownership.\n+     * @note This will invalidate the CAutoFile object, and makes it the responsibility of the caller\n+     * of this function to clean up the returned FILE*.\n+     */\n     FILE* release()             { FILE* ret = file; file = NULL; return ret; }\n-    operator FILE*()            { return file; }\n-    FILE* operator->()          { return file; }\n-    FILE& operator*()           { return *file; }\n-    FILE** operator&()          { return &file; }\n-    FILE* operator=(FILE* pnew) { return file = pnew; }\n-    bool IsNull() const         { return (file == NULL); }\n \n+    /** Get wrapped FILE* without transfer of ownership.\n+     * @note Ownership of the FILE* will remain with this class. Use this only if the scope of the\n+     * CAutoFile outlives use of the passed pointer.\n+     */\n+    FILE* Get() const           { return file; }\n+\n+    /** Return true if the wrapped FILE* is NULL, false otherwise.\n+     */\n+    bool IsNull() const         { return (file == NULL); }\n \n     //\n     // Stream subset"
      },
      {
        "sha": "9151fdc0c833f81d25e989d533f2442d3825e282",
        "filename": "src/test/checkblock_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a873823864a00f68772eb2b85a70e933839ca3f5/src/test/checkblock_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a873823864a00f68772eb2b85a70e933839ca3f5/src/test/checkblock_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/checkblock_tests.cpp?ref=a873823864a00f68772eb2b85a70e933839ca3f5",
        "patch": "@@ -36,7 +36,7 @@ bool read_block(const std::string& filename, CBlock& block)\n     fseek(fp, 8, SEEK_SET); // skip msgheader/size\n \n     CAutoFile filein(fp, SER_DISK, CLIENT_VERSION);\n-    if (!filein) return false;\n+    if (filein.IsNull()) return false;\n \n     filein >> block;\n "
      }
    ]
  }
]