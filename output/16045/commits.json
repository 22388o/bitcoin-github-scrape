[
  {
    "sha": "953ed47b42eac7453ad7e6436098301f0cb523a4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NTNlZDQ3YjQyZWFjNzQ1M2FkN2U2NDM2MDk4MzAxZjBjYjUyM2E0",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-05-19T08:53:59Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-05-19T09:11:27Z"
      },
      "message": "Skip redundant memset(p, 0, 0) calls where p is not valid for writing",
      "tree": {
        "sha": "febf8a21abb8951e580fba17b818cfed89f7ff60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/febf8a21abb8951e580fba17b818cfed89f7ff60"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/953ed47b42eac7453ad7e6436098301f0cb523a4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/953ed47b42eac7453ad7e6436098301f0cb523a4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/953ed47b42eac7453ad7e6436098301f0cb523a4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/953ed47b42eac7453ad7e6436098301f0cb523a4/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7110d455eb51e78e09f43fabf0b1630ae997d898",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7110d455eb51e78e09f43fabf0b1630ae997d898",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7110d455eb51e78e09f43fabf0b1630ae997d898"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 6,
      "deletions": 2
    },
    "files": [
      {
        "sha": "f3361d9e338afcec43bd90f1b4c27c9b1b7e428c",
        "filename": "src/crypto/hmac_sha256.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/953ed47b42eac7453ad7e6436098301f0cb523a4/src/crypto/hmac_sha256.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/953ed47b42eac7453ad7e6436098301f0cb523a4/src/crypto/hmac_sha256.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/hmac_sha256.cpp?ref=953ed47b42eac7453ad7e6436098301f0cb523a4",
        "patch": "@@ -11,7 +11,9 @@ CHMAC_SHA256::CHMAC_SHA256(const unsigned char* key, size_t keylen)\n     unsigned char rkey[64];\n     if (keylen <= 64) {\n         memcpy(rkey, key, keylen);\n-        memset(rkey + keylen, 0, 64 - keylen);\n+        if (keylen < 64) {\n+            memset(rkey + keylen, 0, 64 - keylen);\n+        }\n     } else {\n         CSHA256().Write(key, keylen).Finalize(rkey);\n         memset(rkey + 32, 0, 32);"
      },
      {
        "sha": "6f8eed70fbe44495734c85f8bff4ae58ab3243cd",
        "filename": "src/crypto/hmac_sha512.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/953ed47b42eac7453ad7e6436098301f0cb523a4/src/crypto/hmac_sha512.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/953ed47b42eac7453ad7e6436098301f0cb523a4/src/crypto/hmac_sha512.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/hmac_sha512.cpp?ref=953ed47b42eac7453ad7e6436098301f0cb523a4",
        "patch": "@@ -11,7 +11,9 @@ CHMAC_SHA512::CHMAC_SHA512(const unsigned char* key, size_t keylen)\n     unsigned char rkey[128];\n     if (keylen <= 128) {\n         memcpy(rkey, key, keylen);\n-        memset(rkey + keylen, 0, 128 - keylen);\n+        if (keylen < 128) {\n+            memset(rkey + keylen, 0, 128 - keylen);\n+        }\n     } else {\n         CSHA512().Write(key, keylen).Finalize(rkey);\n         memset(rkey + 64, 0, 64);"
      }
    ]
  }
]