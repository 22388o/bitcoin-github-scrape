[
  {
    "sha": "c5f008a4166bae4350881a74fc04a87d7a5c4ed5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNWYwMDhhNDE2NmJhZTQzNTA4ODFhNzRmYzA0YTg3ZDdhNWM0ZWQ1",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-02-24T23:20:03Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-02-25T06:09:11Z"
      },
      "message": "don't throw std::bad_alloc when out of memory. Instead, terminate immediately",
      "tree": {
        "sha": "e53e2b702f66a79321fcd9f9f9a2f419ccde2387",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e53e2b702f66a79321fcd9f9f9a2f419ccde2387"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c5f008a4166bae4350881a74fc04a87d7a5c4ed5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5f008a4166bae4350881a74fc04a87d7a5c4ed5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c5f008a4166bae4350881a74fc04a87d7a5c4ed5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5f008a4166bae4350881a74fc04a87d7a5c4ed5/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f19afdbfb4cb2223d492d5e7d4087567af9d5f28",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f19afdbfb4cb2223d492d5e7d4087567af9d5f28",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f19afdbfb4cb2223d492d5e7d4087567af9d5f28"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 16,
      "deletions": 0
    },
    "files": [
      {
        "sha": "22c8974a595141befe91dc90ca9441614bc8f2c0",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5f008a4166bae4350881a74fc04a87d7a5c4ed5/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5f008a4166bae4350881a74fc04a87d7a5c4ed5/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=c5f008a4166bae4350881a74fc04a87d7a5c4ed5",
        "patch": "@@ -797,6 +797,19 @@ ServiceFlags nLocalServices = NODE_NETWORK;\n \n }\n \n+[[noreturn]] static void new_handler_terminate()\n+{\n+    // Rather than throwing std::bad-alloc if allocation fails, terminate\n+    // immediately to (try to) avoid chain corruption.\n+    // Since LogPrintf may itself allocate memory, set the handler directly\n+    // to terminate first.\n+    std::set_new_handler(std::terminate);\n+    LogPrintf(\"Error: Out of memory. Terminating.\\n\");\n+\n+    // The log was successful, terminate now.\n+    std::terminate();\n+};\n+\n bool AppInitBasicSetup()\n {\n     // ********************************************************* Step 1: setup\n@@ -849,6 +862,9 @@ bool AppInitBasicSetup()\n     // Ignore SIGPIPE, otherwise it will bring the daemon down if the client closes unexpectedly\n     signal(SIGPIPE, SIG_IGN);\n #endif\n+\n+    std::set_new_handler(new_handler_terminate);\n+\n     return true;\n }\n "
      }
    ]
  },
  {
    "sha": "d4ee7baef729da5e18b5e5c3d6ddb5b97df8d4e4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNGVlN2JhZWY3MjlkYTVlMThiNWU1YzNkNmRkYjViOTdkZjhkNGU0",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-02-25T06:06:25Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-02-27T19:52:15Z"
      },
      "message": "prevector: assert successful allocation",
      "tree": {
        "sha": "c54a3a0ef3cd5209ca34ff51d4ea57571a37133f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c54a3a0ef3cd5209ca34ff51d4ea57571a37133f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d4ee7baef729da5e18b5e5c3d6ddb5b97df8d4e4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4ee7baef729da5e18b5e5c3d6ddb5b97df8d4e4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d4ee7baef729da5e18b5e5c3d6ddb5b97df8d4e4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4ee7baef729da5e18b5e5c3d6ddb5b97df8d4e4/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c5f008a4166bae4350881a74fc04a87d7a5c4ed5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5f008a4166bae4350881a74fc04a87d7a5c4ed5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c5f008a4166bae4350881a74fc04a87d7a5c4ed5"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "cba2e30057afa39c2ea35aeccaadd54202d8b671",
        "filename": "src/prevector.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4ee7baef729da5e18b5e5c3d6ddb5b97df8d4e4/src/prevector.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4ee7baef729da5e18b5e5c3d6ddb5b97df8d4e4/src/prevector.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/prevector.h?ref=d4ee7baef729da5e18b5e5c3d6ddb5b97df8d4e4",
        "patch": "@@ -5,6 +5,7 @@\n #ifndef _BITCOIN_PREVECTOR_H_\n #define _BITCOIN_PREVECTOR_H_\n \n+#include <assert.h>\n #include <stdlib.h>\n #include <stdint.h>\n #include <string.h>\n@@ -170,10 +171,15 @@ class prevector {\n             }\n         } else {\n             if (!is_direct()) {\n+                /* FIXME: Because malloc/realloc here won't call new_handler if allocation fails, assert\n+                    success. These should instead use an allocator or new/delete so that handlers\n+                    are called as necessary, but performance would be slightly degraded by doing so. */\n                 _union.indirect = static_cast<char*>(realloc(_union.indirect, ((size_t)sizeof(T)) * new_capacity));\n+                assert(_union.indirect);\n                 _union.capacity = new_capacity;\n             } else {\n                 char* new_indirect = static_cast<char*>(malloc(((size_t)sizeof(T)) * new_capacity));\n+                assert(new_indirect);\n                 T* src = direct_ptr(0);\n                 T* dst = reinterpret_cast<T*>(new_indirect);\n                 memcpy(dst, src, size() * sizeof(T));"
      }
    ]
  }
]