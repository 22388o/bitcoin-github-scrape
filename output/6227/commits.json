[
  {
    "sha": "1c10b09941ed5486ecbd4a16562242e8f93cf3d8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYzEwYjA5OTQxZWQ1NDg2ZWNiZDRhMTY1NjIyNDJlOGY5M2NmM2Q4",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-06-03T12:49:34Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-06-11T06:37:40Z"
      },
      "message": "[Qt] use Qt foreach where possible\n\n- also use const references where appropriate",
      "tree": {
        "sha": "282c4fdc240f4ff384871f2d43d7cf042cde5b9f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/282c4fdc240f4ff384871f2d43d7cf042cde5b9f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1c10b09941ed5486ecbd4a16562242e8f93cf3d8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1c10b09941ed5486ecbd4a16562242e8f93cf3d8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1c10b09941ed5486ecbd4a16562242e8f93cf3d8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1c10b09941ed5486ecbd4a16562242e8f93cf3d8/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "eba2f061a02573b62792614260181c615f753225",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eba2f061a02573b62792614260181c615f753225",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eba2f061a02573b62792614260181c615f753225"
      }
    ],
    "stats": {
      "total": 74,
      "additions": 27,
      "deletions": 47
    },
    "files": [
      {
        "sha": "54635f1d548a3030522224480509e9922584871a",
        "filename": "src/qt/addressbookpage.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c10b09941ed5486ecbd4a16562242e8f93cf3d8/src/qt/addressbookpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c10b09941ed5486ecbd4a16562242e8f93cf3d8/src/qt/addressbookpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addressbookpage.cpp?ref=1c10b09941ed5486ecbd4a16562242e8f93cf3d8",
        "patch": "@@ -254,8 +254,7 @@ void AddressBookPage::done(int retval)\n     // Figure out which address was selected, and return it\n     QModelIndexList indexes = table->selectionModel()->selectedRows(AddressTableModel::Address);\n \n-    foreach (QModelIndex index, indexes)\n-    {\n+    foreach (const QModelIndex& index, indexes) {\n         QVariant address = table->model()->data(index);\n         returnValue = address.toString();\n     }"
      },
      {
        "sha": "fbdc16e13d04a3dd512e58ba3dcb462630f0e14d",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c10b09941ed5486ecbd4a16562242e8f93cf3d8/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c10b09941ed5486ecbd4a16562242e8f93cf3d8/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=1c10b09941ed5486ecbd4a16562242e8f93cf3d8",
        "patch": "@@ -53,9 +53,9 @@ int ClientModel::getNumConnections(unsigned int flags) const\n         return vNodes.size();\n \n     int nNum = 0;\n-    BOOST_FOREACH(CNode* pnode, vNodes)\n-    if (flags & (pnode->fInbound ? CONNECTIONS_IN : CONNECTIONS_OUT))\n-        nNum++;\n+    foreach (const CNode* pnode, vNodes)\n+        if (flags & (pnode->fInbound ? CONNECTIONS_IN : CONNECTIONS_OUT))\n+            nNum++;\n \n     return nNum;\n }"
      },
      {
        "sha": "8810e6f3a9fa2223477bbb57ba524fdf59b3650a",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 7,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c10b09941ed5486ecbd4a16562242e8f93cf3d8/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c10b09941ed5486ecbd4a16562242e8f93cf3d8/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=1c10b09941ed5486ecbd4a16562242e8f93cf3d8",
        "patch": "@@ -118,7 +118,7 @@ CoinControlDialog::CoinControlDialog(QWidget *parent) :\n     // (un)select all\n     connect(ui->pushButtonSelectAll, SIGNAL(clicked()), this, SLOT(buttonSelectAllClicked()));\n \n-    // change coin control first column label due Qt4 bug. \n+    // change coin control first column label due Qt4 bug.\n     // see https://github.com/bitcoin/bitcoin/issues/5716\n     ui->treeWidget->headerItem()->setText(COLUMN_CHECKBOX, QString());\n \n@@ -492,8 +492,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     coinControl->ListSelected(vCoinControl);\n     model->getOutputs(vCoinControl, vOutputs);\n \n-    BOOST_FOREACH(const COutput& out, vOutputs)\n-    {\n+    foreach (const COutput& out, vOutputs) {\n         // unselect already spent, very unlikely scenario, this could happen\n         // when selected are spent elsewhere, like rpc or another computer\n         uint256 txhash = out.tx->GetHash();\n@@ -691,8 +690,7 @@ void CoinControlDialog::updateView()\n     map<QString, vector<COutput> > mapCoins;\n     model->listCoins(mapCoins);\n \n-    BOOST_FOREACH(PAIRTYPE(QString, vector<COutput>) coins, mapCoins)\n-    {\n+    BOOST_FOREACH(const PAIRTYPE(QString, vector<COutput>) coins, mapCoins) {\n         QTreeWidgetItem *itemWalletAddress = new QTreeWidgetItem();\n         itemWalletAddress->setCheckState(COLUMN_CHECKBOX, Qt::Unchecked);\n         QString sWalletAddress = coins.first;\n@@ -719,8 +717,7 @@ void CoinControlDialog::updateView()\n         double dPrioritySum = 0;\n         int nChildren = 0;\n         int nInputSum = 0;\n-        BOOST_FOREACH(const COutput& out, coins.second)\n-        {\n+        foreach (const COutput& out, coins.second) {\n             int nInputSize = 0;\n             nSum += out.tx->vout[out.i].nValue;\n             nChildren++;"
      },
      {
        "sha": "fd225f51a665130b2dff216adbbc23e57d3ae98f",
        "filename": "src/qt/receivecoinsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c10b09941ed5486ecbd4a16562242e8f93cf3d8/src/qt/receivecoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c10b09941ed5486ecbd4a16562242e8f93cf3d8/src/qt/receivecoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.cpp?ref=1c10b09941ed5486ecbd4a16562242e8f93cf3d8",
        "patch": "@@ -185,8 +185,7 @@ void ReceiveCoinsDialog::on_showRequestButton_clicked()\n         return;\n     QModelIndexList selection = ui->recentRequestsView->selectionModel()->selectedRows();\n \n-    foreach (QModelIndex index, selection)\n-    {\n+    foreach (const QModelIndex& index, selection) {\n         on_recentRequestsView_doubleClicked(index);\n     }\n }"
      },
      {
        "sha": "2251dad58d44b9c8d79d294c31da828dd4ccc7f7",
        "filename": "src/qt/recentrequeststablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c10b09941ed5486ecbd4a16562242e8f93cf3d8/src/qt/recentrequeststablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c10b09941ed5486ecbd4a16562242e8f93cf3d8/src/qt/recentrequeststablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.cpp?ref=1c10b09941ed5486ecbd4a16562242e8f93cf3d8",
        "patch": "@@ -11,8 +11,6 @@\n #include \"clientversion.h\"\n #include \"streams.h\"\n \n-#include <boost/foreach.hpp>\n-\n RecentRequestsTableModel::RecentRequestsTableModel(CWallet *wallet, WalletModel *parent) :\n     walletModel(parent)\n {\n@@ -22,7 +20,7 @@ RecentRequestsTableModel::RecentRequestsTableModel(CWallet *wallet, WalletModel\n     // Load entries from wallet\n     std::vector<std::string> vReceiveRequests;\n     parent->loadReceiveRequests(vReceiveRequests);\n-    BOOST_FOREACH(const std::string& request, vReceiveRequests)\n+    foreach (const std::string& request, vReceiveRequests)\n         addNewRequest(request);\n \n     /* These columns must match the indices in the ColumnIndex enumeration */"
      },
      {
        "sha": "35ebac53159d99e17c66a48fd42793d2c04713db",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c10b09941ed5486ecbd4a16562242e8f93cf3d8/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c10b09941ed5486ecbd4a16562242e8f93cf3d8/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=1c10b09941ed5486ecbd4a16562242e8f93cf3d8",
        "patch": "@@ -95,8 +95,7 @@ bool parseCommandLine(std::vector<std::string> &args, const std::string &strComm\n         STATE_ESCAPE_DOUBLEQUOTED\n     } state = STATE_EATING_SPACES;\n     std::string curarg;\n-    foreach(char ch, strCommand)\n-    {\n+    foreach (char ch, strCommand) {\n         switch(state)\n         {\n         case STATE_ARGUMENT: // In or after argument"
      },
      {
        "sha": "153c5c87420c7fc65f2ea869e1f20c1656e9e374",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 13,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c10b09941ed5486ecbd4a16562242e8f93cf3d8/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c10b09941ed5486ecbd4a16562242e8f93cf3d8/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=1c10b09941ed5486ecbd4a16562242e8f93cf3d8",
        "patch": "@@ -133,7 +133,7 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, TransactionReco\n         // Coinbase\n         //\n         CAmount nUnmatured = 0;\n-        BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n+        foreach (const CTxOut& txout, wtx.vout)\n             nUnmatured += wallet->GetCredit(txout, ISMINE_ALL);\n         strHTML += \"<b>\" + tr(\"Credit\") + \":</b> \";\n         if (wtx.IsInMainChain())\n@@ -152,15 +152,13 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, TransactionReco\n     else\n     {\n         isminetype fAllFromMe = ISMINE_SPENDABLE;\n-        BOOST_FOREACH(const CTxIn& txin, wtx.vin)\n-        {\n+        foreach (const CTxIn& txin, wtx.vin) {\n             isminetype mine = wallet->IsMine(txin);\n             if(fAllFromMe > mine) fAllFromMe = mine;\n         }\n \n         isminetype fAllToMe = ISMINE_SPENDABLE;\n-        BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n-        {\n+        foreach (const CTxOut& txout, wtx.vout) {\n             isminetype mine = wallet->IsMine(txout);\n             if(fAllToMe > mine) fAllToMe = mine;\n         }\n@@ -173,8 +171,7 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, TransactionReco\n             //\n             // Debit\n             //\n-            BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n-            {\n+            foreach (const CTxOut& txout, wtx.vout) {\n                 // Ignore change\n                 isminetype toSelf = wallet->IsMine(txout);\n                 if ((toSelf == ISMINE_SPENDABLE) && (fAllFromMe == ISMINE_SPENDABLE))\n@@ -221,10 +218,10 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, TransactionReco\n             //\n             // Mixed debit transaction\n             //\n-            BOOST_FOREACH(const CTxIn& txin, wtx.vin)\n+            foreach (const CTxIn& txin, wtx.vin)\n                 if (wallet->IsMine(txin))\n                     strHTML += \"<b>\" + tr(\"Debit\") + \":</b> \" + BitcoinUnits::formatHtmlWithUnit(unit, -wallet->GetDebit(txin, ISMINE_ALL)) + \"<br>\";\n-            BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n+            foreach (const CTxOut& txout, wtx.vout)\n                 if (wallet->IsMine(txout))\n                     strHTML += \"<b>\" + tr(\"Credit\") + \":</b> \" + BitcoinUnits::formatHtmlWithUnit(unit, wallet->GetCredit(txout, ISMINE_ALL)) + \"<br>\";\n         }\n@@ -274,10 +271,10 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, TransactionReco\n     if (fDebug)\n     {\n         strHTML += \"<hr><br>\" + tr(\"Debug information\") + \"<br><br>\";\n-        BOOST_FOREACH(const CTxIn& txin, wtx.vin)\n+        foreach (const CTxIn& txin, wtx.vin)\n             if(wallet->IsMine(txin))\n                 strHTML += \"<b>\" + tr(\"Debit\") + \":</b> \" + BitcoinUnits::formatHtmlWithUnit(unit, -wallet->GetDebit(txin, ISMINE_ALL)) + \"<br>\";\n-        BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n+        foreach (const CTxOut& txout, wtx.vout)\n             if(wallet->IsMine(txout))\n                 strHTML += \"<b>\" + tr(\"Credit\") + \":</b> \" + BitcoinUnits::formatHtmlWithUnit(unit, wallet->GetCredit(txout, ISMINE_ALL)) + \"<br>\";\n \n@@ -287,8 +284,7 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, TransactionReco\n         strHTML += \"<br><b>\" + tr(\"Inputs\") + \":</b>\";\n         strHTML += \"<ul>\";\n \n-        BOOST_FOREACH(const CTxIn& txin, wtx.vin)\n-        {\n+        foreach (const CTxIn& txin, wtx.vin) {\n             COutPoint prevout = txin.prevout;\n \n             CCoins prev;"
      },
      {
        "sha": "b9674df907a194b65d15d58f4aff9c2075cefcbd",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 8,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c10b09941ed5486ecbd4a16562242e8f93cf3d8/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c10b09941ed5486ecbd4a16562242e8f93cf3d8/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=1c10b09941ed5486ecbd4a16562242e8f93cf3d8",
        "patch": "@@ -12,8 +12,6 @@\n \n #include <stdint.h>\n \n-#include <boost/foreach.hpp>\n-\n /* Return positive answer if transaction should be shown in list.\n  */\n bool TransactionRecord::showTransaction(const CWalletTx &wtx)\n@@ -47,8 +45,7 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const CWallet *\n         //\n         // Credit\n         //\n-        BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n-        {\n+        foreach (const CTxOut& txout, wtx.vout) {\n             isminetype mine = wallet->IsMine(txout);\n             if(mine)\n             {\n@@ -83,16 +80,14 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const CWallet *\n     {\n         bool involvesWatchAddress = false;\n         isminetype fAllFromMe = ISMINE_SPENDABLE;\n-        BOOST_FOREACH(const CTxIn& txin, wtx.vin)\n-        {\n+        foreach (const CTxIn& txin, wtx.vin) {\n             isminetype mine = wallet->IsMine(txin);\n             if(mine == ISMINE_WATCH_ONLY) involvesWatchAddress = true;\n             if(fAllFromMe > mine) fAllFromMe = mine;\n         }\n \n         isminetype fAllToMe = ISMINE_SPENDABLE;\n-        BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n-        {\n+        foreach (const CTxOut& txout, wtx.vout) {\n             isminetype mine = wallet->IsMine(txout);\n             if(mine == ISMINE_WATCH_ONLY) involvesWatchAddress = true;\n             if(fAllToMe > mine) fAllToMe = mine;"
      },
      {
        "sha": "486c74e2186ed4e8413f52bb07e382dbaea74a67",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 7,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c10b09941ed5486ecbd4a16562242e8f93cf3d8/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c10b09941ed5486ecbd4a16562242e8f93cf3d8/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=1c10b09941ed5486ecbd4a16562242e8f93cf3d8",
        "patch": "@@ -62,7 +62,7 @@ CAmount WalletModel::getBalance(const CCoinControl *coinControl) const\n         CAmount nBalance = 0;\n         std::vector<COutput> vCoins;\n         wallet->AvailableCoins(vCoins, true, coinControl);\n-        BOOST_FOREACH(const COutput& out, vCoins)\n+        foreach (const COutput& out, vCoins)\n             if(out.fSpendable)\n                 nBalance += out.tx->vout[out.i].nValue;\n \n@@ -560,8 +560,7 @@ bool WalletModel::getPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const\n void WalletModel::getOutputs(const std::vector<COutPoint>& vOutpoints, std::vector<COutput>& vOutputs)\n {\n     LOCK2(cs_main, wallet->cs_wallet);\n-    BOOST_FOREACH(const COutPoint& outpoint, vOutpoints)\n-    {\n+    foreach (const COutPoint& outpoint, vOutpoints) {\n         if (!wallet->mapWallet.count(outpoint.hash)) continue;\n         int nDepth = wallet->mapWallet[outpoint.hash].GetDepthInMainChain();\n         if (nDepth < 0) continue;\n@@ -587,8 +586,7 @@ void WalletModel::listCoins(std::map<QString, std::vector<COutput> >& mapCoins)\n     wallet->ListLockedCoins(vLockedCoins);\n \n     // add locked coins\n-    BOOST_FOREACH(const COutPoint& outpoint, vLockedCoins)\n-    {\n+    foreach (const COutPoint& outpoint, vLockedCoins) {\n         if (!wallet->mapWallet.count(outpoint.hash)) continue;\n         int nDepth = wallet->mapWallet[outpoint.hash].GetDepthInMainChain();\n         if (nDepth < 0) continue;\n@@ -597,8 +595,7 @@ void WalletModel::listCoins(std::map<QString, std::vector<COutput> >& mapCoins)\n             vCoins.push_back(out);\n     }\n \n-    BOOST_FOREACH(const COutput& out, vCoins)\n-    {\n+    foreach (const COutput& out, vCoins) {\n         COutput cout = out;\n \n         while (wallet->IsChange(cout.tx->vout[cout.i]) && cout.tx->vin.size() > 0 && wallet->IsMine(cout.tx->vin[0]))"
      }
    ]
  }
]