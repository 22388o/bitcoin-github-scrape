[
  {
    "sha": "5384c98993fed5480719e1c3380c0c66263daa7e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1Mzg0Yzk4OTkzZmVkNTQ4MDcxOWUxYzMzODBjMGM2NjI2M2RhYTdl",
    "commit": {
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-08-06T15:09:48Z"
      },
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-08-30T09:39:45Z"
      },
      "message": "tor: respect non-onion -onlynet= for outgoing Tor connections\n\nIf\n* `-onlynet=` is given one or more times but none of them includes\n  `onion` and\n* `-proxy` is not set and\n* `-onion` is not set,\nthen we should not be making outbound connections to the Tor network.\n\nFixes https://github.com/bitcoin/bitcoin/issues/22647",
      "tree": {
        "sha": "e1ebe5c96c23eb373a6c6a7d7bae184d4b470fe8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e1ebe5c96c23eb373a6c6a7d7bae184d4b470fe8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5384c98993fed5480719e1c3380c0c66263daa7e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmEsp2MACgkQVN8G9ktV\ny7/+Jh/8CQ382VwMHSrE/uiUwFO9WVRo2hd0RQkVls+ooE5UEvXkGjisWyPbUNlO\nK5WdToigGsTQjCHndxYSFodNe7hYKUrIgQdOHmiMK2djPrO3ZDZIddwaXPrtWpMx\nAlTZ51irtgrgSX/lpxfaIBvol9yzlwrPh+aCXFAon53IC8jdNpyrZGyZrUXs3PYJ\n7iCCKEzoZI12f9YAELEOOGZkfH0j1WblznCtDlD6aZ829eAx62REs8QYcVeCFLpE\nLQ/AgU+sw/Pa2hMbxCmex55ht8QdI3DyM189mcwLjqEtC9Jp/s2jE98GEgAGMuPD\nzHlylwHH+NOc+YRefbt57CyVi+6C1bPpb7+BEoop5byZeWCXdVDsHz6uAZ90YT1z\nfAQE4F9kZ/nPWmyrovX3A8MJJOCbRbr1onz1giwDULXL0PXC7yFezpL3kYZXP6m1\n0P8/K5xeIie5TpLk5O7un335poJGEh2Q1BR5AvUrVJwwiHZEU+jF23QTBFoWp0Gp\nuWy+7TWY9HzC5PA6c1cIg0y9+MJ/dWYhShQ6nMXboU9/1h2hp53ReCUEg+cBDziq\nJNaTh/lQiyzRVZj2oeO97E+iqCQ1F6LXyliFQD3IYpnKzvmPC1iaXi1twRTuZdIc\nyOvRMJvy44iLwE1cx/D2LfiOCihKRENMwAobYT5Leaw9l7I2Drs+vAWVbQJJ/iHg\nq3Ehj1XwSmvTuUCWuk6qRy9HKi2cxVVMHtvTdqoZI/DIPFctFDoBTf0Zhac5jeBg\n2U8vEa+A22dFHL7AC+POYBbyUtQVt5HZy+31ic+f8TL1x8RUTIVj2OOQpE88fizX\nRTaHfmNspwdzBBUJ4fRs2Nse8VM9sxRZh54c9qNVEYGLAsnhhYAzREJ6Q6fIiJDb\nEsAX4uId38I3mPWNIgwegxfrhY1ob1k074Pd/gx4jb2LZpy64+rGnHNAkaJ6Tz+u\n8G7hVDu/9BuK6985MyYkML6QjllBRd3hy6PGXPj6CQ28DFlF2GMzVSTnlvueZ8gf\nED/7O4gJnvYzEhsy+3AQBEKvGOk9I8tUsnWJxJ7LZbFDmH7PuePhmDD6MbPnQPLI\npVsP2NSJN2YrMxZHUnDEzveW1KJnpRQ5QhzXToFSOHpVFDq0boNwHtF4J+Z2A3Tm\nhK0O1bYbcTCaFaRsr/TcKR0g10VgXZdMoQRLpHuMofa5QRm5pZkZ6FqRTD41DDcn\npXLUozSCvThshW4PfOq9FqAWpsbgwqKKvXMLiYGIw2/29t+OPI2OsdZ4y5GWfAvi\nK2puyddeS2JmpYA1oSyy1ecaM7AtnaTE+B4O9OKY1wjZ13j/1+6rB2txv1gOE48N\nMEmfeR61BDmfFxkulyXqYpYy+WNcug==\n=qbU2\n-----END PGP SIGNATURE-----",
        "payload": "tree e1ebe5c96c23eb373a6c6a7d7bae184d4b470fe8\nparent d67330d11245b11fbdd5e2dd5343ee451186931e\nauthor Vasil Dimov <vd@FreeBSD.org> 1628262588 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1630316385 +0200\n\ntor: respect non-onion -onlynet= for outgoing Tor connections\n\nIf\n* `-onlynet=` is given one or more times but none of them includes\n  `onion` and\n* `-proxy` is not set and\n* `-onion` is not set,\nthen we should not be making outbound connections to the Tor network.\n\nFixes https://github.com/bitcoin/bitcoin/issues/22647\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5384c98993fed5480719e1c3380c0c66263daa7e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5384c98993fed5480719e1c3380c0c66263daa7e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5384c98993fed5480719e1c3380c0c66263daa7e/comments",
    "author": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d67330d11245b11fbdd5e2dd5343ee451186931e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d67330d11245b11fbdd5e2dd5343ee451186931e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d67330d11245b11fbdd5e2dd5343ee451186931e"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 14,
      "deletions": 3
    },
    "files": [
      {
        "sha": "521ed20467f896b57b62cda23cf6d5f04c43b783",
        "filename": "src/torcontrol.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 3,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5384c98993fed5480719e1c3380c0c66263daa7e/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5384c98993fed5480719e1c3380c0c66263daa7e/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=5384c98993fed5480719e1c3380c0c66263daa7e",
        "patch": "@@ -18,6 +18,7 @@\n #include <util/thread.h>\n #include <util/time.h>\n \n+#include <algorithm>\n #include <deque>\n #include <functional>\n #include <set>\n@@ -368,14 +369,24 @@ void TorController::add_onion_cb(TorControlConnection& _conn, const TorControlRe\n     }\n }\n \n+static bool AllowOutboundOnion()\n+{\n+    if (!gArgs.IsArgSet(\"-onlynet\")) {\n+        return true;\n+    }\n+    const auto onlynets = gArgs.GetArgs(\"-onlynet\");\n+    return std::any_of(onlynets.begin(), onlynets.end(), [](const auto& net) {\n+        return ParseNetwork(net) == NET_ONION;\n+    });\n+}\n+\n void TorController::auth_cb(TorControlConnection& _conn, const TorControlReply& reply)\n {\n     if (reply.code == 250) {\n         LogPrint(BCLog::TOR, \"tor: Authentication successful\\n\");\n \n-        // Now that we know Tor is running setup the proxy for onion addresses\n-        // if -onion isn't set to something else.\n-        if (gArgs.GetArg(\"-onion\", \"\") == \"\") {\n+        // Now that we know Tor is running, possibly set the proxy for onion addresses.\n+        if (gArgs.GetArg(\"-onion\", \"\") == \"\" && AllowOutboundOnion()) {\n             CService resolved(LookupNumeric(\"127.0.0.1\", 9050));\n             proxyType addrOnion = proxyType(resolved, true);\n             SetProxy(NET_ONION, addrOnion);"
      }
    ]
  },
  {
    "sha": "baa6cb12ac5071bb68eb5ec375be73df4f4ae28f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYWE2Y2IxMmFjNTA3MWJiNjhlYjVlYzM3NWJlNzNkZjRmNGFlMjhm",
    "commit": {
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-08-10T15:56:45Z"
      },
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-08-30T09:40:27Z"
      },
      "message": "test: ensure -onlynet behaves as expected\n\nIntroduce a basic TCP server in the functional testing framework and use\nit to simulate a Tor Control daemon, which is needed in order for the\ncode in `src/torcontrol.cpp` to execute the code that is relevant for\n`-onlynet`.",
      "tree": {
        "sha": "7a47345ce55b0ffbbae931c003d8541281021a1c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7a47345ce55b0ffbbae931c003d8541281021a1c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/baa6cb12ac5071bb68eb5ec375be73df4f4ae28f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmEsp4wACgkQVN8G9ktV\ny7+GniAAj4fG8DJEr7/8dkvEGy9k3JPNx2mfBYbDUPoMHmyvBx78nBU17Y1m90qT\n+3/Th/y4b2rGPQ+r3v7dtxNkjq2W4C7Xg9A3KQPplQj9LC70zrH17b/YI8DLJS4v\nWTPo4Cu7HSQvY3YY6wWqaGaIztcCM9ilZ4gaZ9JAxlsGiOPLxBbCTohRIEZsRRLi\nP5wuz/EbO4aEOnCYazIxTftpPsNdtefnI7hLa6Gkl1Takrc6/iGfFr7g9+zP550Z\n0nQ7aXASJIbAQ9u9rQvh15RwLsjCOVMInzRf1bv7wWb84+RT103hNQ9gurV70tMC\nteFGPYA/6mZi2ZdjnJ4AR9GD7yWWZo79MamFG/MClsoRGYqTzX/stbv253C4FsXN\nqoClJ0X2xfgAZKemR6eNT8lOGB3PZDcCs1uqHeDeTI3Kvb84bNheFmDKPvgMA267\n2hrgC38IkyLJrbrywuWReh6qtkKUVesPfWrmeqmkPSLMpxlrYxVVEgCzbRoTwQ4U\nYC1bRmiATvnsI6IdrTXgZ9/Gn8QngHmAgYbBjy5VC0CoEdDhN2iSs4qXvOB28O6I\nTV2xoqMsMtStqEmFJVJ+/nkoheGhVZT1eMHjTFrfO+KJR/SYKIy4ukEZmCnIYIJx\nVPV2FW21+qLhEcvNPPNyugzByGvLPDjidtUXKzllIRxFg8p5BTZuygsktjO+ij5k\nGkwgVeZBJfTAw3K03Ar92HeyAWCivjrmegICTOi01EJhrA1iraTplA9XuYOXVXhw\nYCutbEaPehpHNerVMuVauf9i8G9Nyqu57MdVPPter/xglUuUkNi/cJeocmDAjzu+\n+RDSks2QdjUHqgsG2Ib7LSb7l8kx7KNdCH/rDQfEf7z8m8bZHlcbNgv95kPA01Vk\n3PNhkM76BO8iaGXMNjG+Jg6ROhaYhHWaBkqbCDxZl2EuZox+bl9MOEGZ4Z89CnMl\nvo4TCsXYp4Ohlmn4Dq54qHtewehtSkwGKPAXFWAdIRTxaDWEpWDcDegH95P45rVn\nkUqZXoz7YuYQ41XXIG3W2phiF+gjkBkCC32F34DC/4cktn7BPeeAHD5YYhFcPFpY\npBewA3CpFHLLfketjBvsZgoOKRFwB5SgLShXvlKkure97XWklVFjLC+ykbfOKaJV\nxO3gsEmcuXQUTpQq62i5OaTxUcn3iWd321Wm8VJYFroub3H2wdFuw3z5SA5TQpNz\nKnVuAnWu86vpzTk4CajHCithcjsDmvFhdfo8lmXa9Pt5GMEbr71wC1Z2ga7CxQWN\nV2Ik/vPB3mLJA/LgIRTztprAVvDf0A4AjxLXlwh+dEpJTn+7gz/t0iPVwVY9bCRH\nAOcO/umJzd01REsVMv/eqIq19TkJHg==\n=6jX6\n-----END PGP SIGNATURE-----",
        "payload": "tree 7a47345ce55b0ffbbae931c003d8541281021a1c\nparent 5384c98993fed5480719e1c3380c0c66263daa7e\nauthor Vasil Dimov <vd@FreeBSD.org> 1628611005 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1630316427 +0200\n\ntest: ensure -onlynet behaves as expected\n\nIntroduce a basic TCP server in the functional testing framework and use\nit to simulate a Tor Control daemon, which is needed in order for the\ncode in `src/torcontrol.cpp` to execute the code that is relevant for\n`-onlynet`.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/baa6cb12ac5071bb68eb5ec375be73df4f4ae28f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/baa6cb12ac5071bb68eb5ec375be73df4f4ae28f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/baa6cb12ac5071bb68eb5ec375be73df4f4ae28f/comments",
    "author": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5384c98993fed5480719e1c3380c0c66263daa7e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5384c98993fed5480719e1c3380c0c66263daa7e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5384c98993fed5480719e1c3380c0c66263daa7e"
      }
    ],
    "stats": {
      "total": 142,
      "additions": 142,
      "deletions": 0
    },
    "files": [
      {
        "sha": "db8d855888fa387bf7694ebb537afd88148c269e",
        "filename": "test/functional/feature_onlynet.py",
        "status": "added",
        "additions": 47,
        "deletions": 0,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/baa6cb12ac5071bb68eb5ec375be73df4f4ae28f/test/functional/feature_onlynet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/baa6cb12ac5071bb68eb5ec375be73df4f4ae28f/test/functional/feature_onlynet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_onlynet.py?ref=baa6cb12ac5071bb68eb5ec375be73df4f4ae28f",
        "patch": "@@ -0,0 +1,47 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test -onlynet configuration option.\n+\"\"\"\n+\n+from test_framework.basic_server import (\n+    BasicServer,\n+    tor_control,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+\n+class OnlynetTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.tor_control_server = BasicServer(bind=('127.0.0.1', 0),\n+                                              response_generator=tor_control)\n+        port = self.tor_control_server.listen_port\n+        self.extra_args = [\n+            ['-onlynet=ipv4', f'-torcontrol=127.0.0.1:{port}', '-listenonion=1'],\n+            ['-onlynet=ipv4', f'-torcontrol=127.0.0.1:{port}', '-listenonion=1', '-onion=127.0.0.1:9050'],\n+            ['-onlynet=ipv4', f'-torcontrol=127.0.0.1:{port}', '-listenonion=1', '-proxy=127.0.0.1:9050'],\n+        ]\n+        self.num_nodes = len(self.extra_args)\n+\n+    def onion_is_reachable(self, node):\n+        for net in self.nodes[node].getnetworkinfo()['networks']:\n+            if net['name'] == 'onion':\n+                return net['reachable']\n+        return False\n+\n+    def run_test(self):\n+        # Node 0 would fail the check without 5384c98993fed5480719e1c3380c0c66263daa7e.\n+        # Nodes 1 and 2 pass with or without that commit, they are here just to ensure\n+        # behavior does not change unintentionally.\n+        for node, expected_reachable in [[0, False], [1, True], [2, True]]:\n+            self.log.info(f'Test node {node} {self.extra_args[node]}')\n+            assert_equal(self.onion_is_reachable(node), expected_reachable)\n+\n+\n+if __name__ == '__main__':\n+    OnlynetTest().main()"
      },
      {
        "sha": "18790091df49fc1d65c5f1f1cf386cd5da709302",
        "filename": "test/functional/test_framework/basic_server.py",
        "status": "added",
        "additions": 94,
        "deletions": 0,
        "changes": 94,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/baa6cb12ac5071bb68eb5ec375be73df4f4ae28f/test/functional/test_framework/basic_server.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/baa6cb12ac5071bb68eb5ec375be73df4f4ae28f/test/functional/test_framework/basic_server.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/basic_server.py?ref=baa6cb12ac5071bb68eb5ec375be73df4f4ae28f",
        "patch": "@@ -0,0 +1,94 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+A basic TCP server that responds to requests based on a given/custom criteria.\n+\"\"\"\n+\n+import socket\n+import threading\n+\n+\n+class BasicServer:\n+    def __init__(self, *, bind, response_generator):\n+        \"\"\"\n+        :param bind: Listen address-port tuple, for example (\"127.0.0.1\", 80).\n+        If the port is 0 then a random available one will be chosen and it\n+        can be found later in the listen_port property.\n+\n+        :param response_generator: A callback function, supplied with the\n+        request. It returns a reply that is to be send to the client either as\n+        a string or as an array which is joined into a single string. If it\n+        returns None, then the connection is closed by the server.\n+        \"\"\"\n+        # create_server() is only in Python 3.8. Replace the below 4 lines once only >=3.8 is supported.\n+        # https://docs.python.org/3/library/socket.html#socket.create_server\n+        # self.listen_socket = socket.create_server(address=bind, reuse_port=True)\n+        self.listen_socket = socket.socket(socket.AF_INET)\n+        self.listen_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\n+        self.listen_socket.bind(bind)\n+        self.listen_socket.listen()\n+\n+        self.listen_port = self.listen_socket.getsockname()[1]\n+\n+        self.response_generator = response_generator\n+        self.accept_loop_thread = threading.Thread(target=self.accept_loop, name=\"accept loop\", daemon=True)\n+        self.accept_loop_thread.start()\n+\n+    def accept_loop(self):\n+        try:\n+            while True:\n+                (accepted_socket, _) = self.listen_socket.accept()\n+                t = threading.Thread(target=self.process_incoming, args=(accepted_socket,), name=\"process incoming\", daemon=True)\n+                t.start()\n+        except:\n+            # The accept() method raises when listen_socket is closed from the destructor.\n+            pass\n+\n+    def process_incoming(self, accepted_socket):\n+        while True:\n+            request = accepted_socket.makefile().readline()\n+            response = self.response_generator(request=request.rstrip())\n+            response_separator = '\\r\\n'\n+            if response is None:\n+                # End of communication.\n+                accepted_socket.close()\n+                break\n+            elif isinstance(response, list):\n+                response_str = response_separator.join(response)\n+            else:\n+                response_str = response\n+            response_str += response_separator\n+\n+            totalsent = 0\n+            while totalsent < len(response_str):\n+                sent = accepted_socket.send(bytes(response_str[totalsent:], 'utf-8'))\n+                if sent == 0:\n+                    accepted_socket.close()\n+                    raise RuntimeError(\"connection broken: socket.send() returned 0\")\n+                totalsent += sent\n+\n+    def __del__(self):\n+        self.listen_socket.close()\n+        self.accept_loop_thread.join()\n+\n+\n+def tor_control(*, request):\n+    \"\"\"\n+    https://gitweb.torproject.org/torspec.git/tree/control-spec.txt\n+    \"\"\"\n+    if request == 'PROTOCOLINFO 1':\n+        return ['250-PROTOCOLINFO 1',\n+                '250-AUTH METHODS=NULL',\n+                '250 OK'\n+               ]\n+    elif request == 'AUTHENTICATE':\n+        return '250 OK'\n+    elif request.startswith('ADD_ONION '):\n+        return ['250-ServiceID=2g5qfdkn2vvcbqhzcyvyiitg4ceukybxklraxjnu7atlhd22gdwywaid',\n+                '250-PrivateKey=123456',\n+                '250 OK',\n+               ]\n+    else:\n+        return None"
      },
      {
        "sha": "7213dc64d3097fa1cda59d05121c86b31042e6ae",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/baa6cb12ac5071bb68eb5ec375be73df4f4ae28f/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/baa6cb12ac5071bb68eb5ec375be73df4f4ae28f/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=baa6cb12ac5071bb68eb5ec375be73df4f4ae28f",
        "patch": "@@ -300,6 +300,7 @@\n     'feature_config_args.py',\n     'feature_presegwit_node_upgrade.py',\n     'feature_settings.py',\n+    'feature_onlynet.py',\n     'rpc_getdescriptorinfo.py',\n     'rpc_addresses_deprecation.py',\n     'rpc_help.py',"
      }
    ]
  }
]