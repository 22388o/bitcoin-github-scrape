DrahtBot,2018-11-01T23:52:31Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19501 (send* RPCs in the wallet returns the ""fee reason"" by stackman27)\n* #19168 (Refactor: Improve setup_clean_chain se",https://github.com/bitcoin/bitcoin/pull/14582#issuecomment-435225463,435225463,
meshcollider,2018-11-09T12:57:30Z,Don't the existing coin selection algorithms take into account the case where having no change output would reduce the fee? Wouldn't that have the same effect already? Or am I misunderstanding what this does / the current behaviour,https://github.com/bitcoin/bitcoin/pull/14582#issuecomment-437352017,437352017,
kallewoof,2018-11-12T04:37:41Z,"@MeshCollider \n\n> Don't the existing coin selection algorithms take into account the case where having no change output would reduce the fee? Wouldn't that have the same effect already? Or am I misunderstanding what this does / the current behaviour\n\nThe wallet will not use output grouping unless the user turns on `-avoidpartialspends`. The biggest reason is that output grouping will, in c",https://github.com/bitcoin/bitcoin/pull/14582#issuecomment-437752802,437752802,
gmaxwell,2020-01-08T11:14:39Z,I'm super happy to see work on this!,https://github.com/bitcoin/bitcoin/pull/14582#issuecomment-572004156,572004156,
kallewoof,2020-01-08T12:09:52Z,"@gmaxwell Glad to hear it! I actually wrote code to turn this into a variable fee (see last commit), but was hesitant whether to push it now or wait. Your comment made me decide to push now. :)",https://github.com/bitcoin/bitcoin/pull/14582#issuecomment-572021102,572021102,
kallewoof,2020-07-31T02:59:10Z,"I've been rebasing this for 8 months now, with no progress. Taking this as lack of interest and closing. Ping me if this is ever interesting and I'll reopen / rebase.",https://github.com/bitcoin/bitcoin/pull/14582#issuecomment-666885885,666885885,
jonatack,2020-07-31T14:39:23Z,"This looks interesting. I was unaware of this work, as it was before I began following this repo closely. Pinging @fjahr for thoughts.\n\n(Don't hesitate to occasionally put out a review beg on IRC for work like this.)",https://github.com/bitcoin/bitcoin/pull/14582#issuecomment-667153958,667153958,
fjahr,2020-08-01T11:51:01Z,Thanks for the ping @jonatack . I was unaware of this as well and also think this is interesting. @kallewoof how about a smaller scoped PR that adds the behavior of `-maxapsfee=0` or another sensible default without adding the parameter itself? I think some developers have parameter fatigue and fear if a parameter implication is hard to understand for users then it will not be used. I also think t,https://github.com/bitcoin/bitcoin/pull/14582#issuecomment-667519485,667519485,
kallewoof,2020-08-03T03:41:01Z,"@jonatack @fjahr Thanks for shown interest, reopening.\n\nThis initially was actually smaller scope, but it didn't require a lot of changes to make it fully featured, so I went ahead and did it. I am open to trimming this down, but I don't think the size was the reason for lack of reviews, more my reluctancy to review beg (and timezones). :)",https://github.com/bitcoin/bitcoin/pull/14582#issuecomment-667786589,667786589,
sipa,2020-08-03T04:07:30Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/14582#issuecomment-667791668,667791668,
kallewoof,2020-08-06T01:26:48Z,"Thanks for review, @fjahr! I believe I've addressed all your points & added your test code.",https://github.com/bitcoin/bitcoin/pull/14582#issuecomment-669629181,669629181,
fanquake,2020-08-15T00:32:39Z,@Xekyo you might also be interested in this?,https://github.com/bitcoin/bitcoin/pull/14582#issuecomment-674321535,674321535,
jonatack,2020-08-15T04:55:29Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/14582#issuecomment-674349253,674349253,
jonatack,2020-08-16T15:48:40Z,"As a follow-up, will need a release note.",https://github.com/bitcoin/bitcoin/pull/14582#issuecomment-674542903,674542903,
fjahr,2020-08-03T15:01:20Z,I can't really think of a good reason why users would want to deactivate this instead of keeping it at `0`. Maybe we don't need this option?,https://github.com/bitcoin/bitcoin/pull/14582#discussion_r464470902,464470902,src/wallet/wallet.cpp
fjahr,2020-08-03T15:07:44Z,As a wallet option maybe a percentage would be better? Personally I think I would prefer to be able to set a max % increase in the feerate for this option. An absolute value seems brittle in times of fluctuating fees and users might forget about updating it.,https://github.com/bitcoin/bitcoin/pull/14582#discussion_r464475316,464475316,src/wallet/init.cpp
fjahr,2020-08-03T15:16:56Z,"nit:\n```suggestion\n    const CAmount max_aps_fee = gArgs.GetArg(""-maxapsfee"", DEFAULT_MAX_AVOIDPARTIALSPEND_FEE);\n    const int change_pos_in = nChangePosInOut;\n    CTransactionRef tx_aps = tx;\n```",https://github.com/bitcoin/bitcoin/pull/14582#discussion_r464480857,464480857,src/wallet/wallet.cpp
fjahr,2020-08-03T15:18:27Z,"nit:\n```suggestion\n        CAmount fee_ret_aps;\n        int change_pos_in_out_aps = nChangePosIn;\n        bilingual_str error_aps; // fired and forgotten; if an error occurs, we discard the results\n```",https://github.com/bitcoin/bitcoin/pull/14582#discussion_r464481751,464481751,src/wallet/wallet.cpp
fjahr,2020-08-03T16:19:10Z,"The text here confused me at first but the way I see it works in the code and this refers to additional fees makes more sense and this is probably equally usable as a percentage for users.\n```suggestion\n    gArgs.AddArg(""-maxapsfee=<n>"", strprintf(""Spend up to this amount in additional (absolute) fees (in %s) if it allows to use partial spend avoidance (default: %s)"", CURRENCY_UNIT, FormatMone",https://github.com/bitcoin/bitcoin/pull/14582#discussion_r464518398,464518398,src/wallet/init.cpp
fjahr,2020-08-03T20:19:35Z,"can use `m_max_aps_fee`\n```suggestion\n```",https://github.com/bitcoin/bitcoin/pull/14582#discussion_r464640430,464640430,src/wallet/wallet.cpp
fjahr,2020-08-03T20:19:59Z,"```suggestion\n    if (res && nFeeRet > 0 /* 0 means non-functional fee rate estimation */ && m_max_aps_fee > -1 && !coin_control.m_avoid_partial_spends) {\n```",https://github.com/bitcoin/bitcoin/pull/14582#discussion_r464640628,464640628,src/wallet/wallet.cpp
fjahr,2020-08-03T20:22:45Z,"The ternary in the logging does not match the if below. I think it should work as it does in the if.\n\n```suggestion\n            const bool use_aps = nFeeRet2 <= nFeeRet + m_max_aps_fee;\n            WalletLogPrintf(""Fee non-grouped = %lld, grouped = %lld, using %s\n"", nFeeRet, nFeeRet2, use_aps ? ""grouped"" : ""non-grouped"");\n            if (use_aps) {\n```",https://github.com/bitcoin/bitcoin/pull/14582#discussion_r464641897,464641897,src/wallet/wallet.cpp
kallewoof,2020-08-05T07:15:38Z,"If someone has a really big wallet with tons of UTXO:s, they may want to disable it as it effectively does coin selection twice every time, doubling the time. I don't think there are any other reasons, though.",https://github.com/bitcoin/bitcoin/pull/14582#discussion_r465521807,465521807,src/wallet/wallet.cpp
kallewoof,2020-08-06T00:55:06Z,"Thanks, tweaked a little.",https://github.com/bitcoin/bitcoin/pull/14582#discussion_r466083628,466083628,src/wallet/init.cpp
kallewoof,2020-08-06T01:00:42Z,"Leaving most of this as is (first line is gone, 2nd is a primitive and the name is inherited, 3rd ~I did change the name~ I left name as is to match with the others).",https://github.com/bitcoin/bitcoin/pull/14582#discussion_r466085151,466085151,src/wallet/wallet.cpp
kallewoof,2020-08-06T01:02:33Z,"Keeping these as is, as their names are inherited.",https://github.com/bitcoin/bitcoin/pull/14582#discussion_r466085563,466085563,src/wallet/wallet.cpp
kallewoof,2020-08-06T01:05:45Z,Nice bug.. thanks!,https://github.com/bitcoin/bitcoin/pull/14582#discussion_r466086370,466086370,src/wallet/wallet.cpp
achow101,2020-08-14T19:30:47Z,nit: use `self.log.info` instead of a comment.,https://github.com/bitcoin/bitcoin/pull/14582#discussion_r470827379,470827379,test/functional/wallet_groups.py
kallewoof,2020-08-15T04:42:38Z,"Sure, will tweak if I end up needing to rebase.",https://github.com/bitcoin/bitcoin/pull/14582#discussion_r470937282,470937282,test/functional/wallet_groups.py
jonatack,2020-08-16T12:42:31Z,"nit if you retouch, could memoize for readability and clarity\n\n```diff\n     if (gArgs.IsArgSet(""-maxapsfee"")) {\n+        const std::string max_aps_fee{gArgs.GetArg(""-maxapsfee"", """")};\n         CAmount n = 0;\n-        if (gArgs.GetArg(""-maxapsfee"", """") == ""-1"") {\n+        if (max_aps_fee == ""-1"") {\n             n = -1;\n-        } else if (!ParseMoney(gArgs.GetArg(""-maxapsfee"", """")",https://github.com/bitcoin/bitcoin/pull/14582#discussion_r471108553,471108553,src/wallet/wallet.cpp
jonatack,2020-08-16T13:17:27Z,"suggestion: test the new logging\n```diff\n-        txid4 = self.nodes[3].sendtoaddress(self.nodes[0].getnewaddress(), 0.1)\n+        with self.nodes[3].assert_debug_log(['Fee non-grouped = 2820, grouped = 4160, using grouped']):\n+            txid4 = self.nodes[3].sendtoaddress(self.nodes[0].getnewaddress(), 0.1)\n```",https://github.com/bitcoin/bitcoin/pull/14582#discussion_r471111975,471111975,test/functional/wallet_groups.py
jonatack,2020-08-16T13:21:14Z,"nit: missing `vspan` arg here (iiuc it's the same value as the others, e.g. the default, but since it looks like the intention here is to make the vspans explicit, the missing one may have been an oversight)\n\ncan optionally use named args for the `assert_approx` calls when more than 1-2 args are passed:\n```diff\n-        assert_approx(values[0], 0.1, 0.0001)\n-        assert_approx(values[",https://github.com/bitcoin/bitcoin/pull/14582#discussion_r471112376,471112376,test/functional/wallet_groups.py
meshcollider,2020-08-17T03:46:10Z,I think this should emphasize that the `maxapsfee` is *in addition* to the normal fee,https://github.com/bitcoin/bitcoin/pull/14582#discussion_r471217263,471217263,src/wallet/wallet.cpp
meshcollider,2020-08-17T03:54:49Z,It would be good to also test here that the higher fee is still capped by the parameter provided,https://github.com/bitcoin/bitcoin/pull/14582#discussion_r471218975,471218975,test/functional/wallet_groups.py
