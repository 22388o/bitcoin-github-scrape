benthecarman,2020-08-18 00:07:46,"Concept ACK\n\nLooks like the `p2p_permissions.py` test is failing\n\nhttps://travis-ci.org/github/bitcoin/bitcoin/jobs/718732253#L3341",https://github.com/bitcoin/bitcoin/pull/19753#issuecomment-675175867,675175867,
amitiuttarwar,2020-08-18 00:35:10,strong concept ACK! nice find :) ,https://github.com/bitcoin/bitcoin/pull/19753#issuecomment-675182745,675182745,
jnewbery,2020-08-18 14:07:57,Concept ACK,https://github.com/bitcoin/bitcoin/pull/19753#issuecomment-675500230,675500230,
troygiorshev,2020-08-18 15:21:12,Fixed the broken test,https://github.com/bitcoin/bitcoin/pull/19753#issuecomment-675544300,675544300,
DrahtBot,2020-08-20 20:06:39,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20158 (tree-wide: De-globalize ChainstateManager by dongcarl)\n\nIf you consider this pull request important, please also",https://github.com/bitcoin/bitcoin/pull/19753#issuecomment-677876739,677876739,
jnewbery,2020-08-24 15:40:02,"> One could also argue that all txs accepted to the mempool should be added to recentRejects\n\nNo. That's completely changing the meaning of recentRejects.",https://github.com/bitcoin/bitcoin/pull/19753#issuecomment-679203866,679203866,
guardian939,2020-08-24 15:46:30,"> Concept ACK\n> \n> Looks like the `p2p_permissions.py` test is failing\n> \n> https://travis-ci.org/github/bitcoin/bitcoin/jobs/718732253#L3341\n\n",https://github.com/bitcoin/bitcoin/pull/19753#issuecomment-679207527,679207527,
troygiorshev,2020-08-24 16:21:18,"`git range-diff master 95134c8 47132bb`\n\n* rebase\n* now uses early exit\n* made suggested test change\n\nI'll leave any idea changes to recentRejects for a follow-up.\n",https://github.com/bitcoin/bitcoin/pull/19753#issuecomment-679228692,679228692,
troygiorshev,2020-08-24 16:58:30,"`git range-diff master 47132bb 68bb294`\n\n* early return now returns earlier",https://github.com/bitcoin/bitcoin/pull/19753#issuecomment-679247811,679247811,
instagibbs,2020-08-24 18:03:51,anyone track this regression's origin? concept ack,https://github.com/bitcoin/bitcoin/pull/19753#issuecomment-679280443,679280443,
jnewbery,2020-08-24 19:17:14,"> anyone track this regression's origin? concept ack\n\nhttps://github.com/bitcoin/bitcoin/commit/a9f3d3db5c0c8d1697998ed9b3e192ddbf9a31f4#diff-7ec3c68a81efff79b6ca22ac1f1eabbaL4424-L4428",https://github.com/bitcoin/bitcoin/pull/19753#issuecomment-679315525,679315525,
jnewbery,2020-09-04 08:15:07,"I've rebased and added the suggested comment here: https://github.com/bitcoin/bitcoin/pull/19753#discussion_r481858602\n\nAlso removed the second commit, which wasn't necessary as part of this fix.",https://github.com/bitcoin/bitcoin/pull/19753#issuecomment-686999878,686999878,
troygiorshev,2020-09-16 12:58:03,"`git range-diff master 9bcdd34 f996019`\n\nTrivial rebase",https://github.com/bitcoin/bitcoin/pull/19753#issuecomment-693387248,693387248,
troygiorshev,2020-10-28 02:19:16,"`git range-diff master f996019 d419fde`\n\n* Rebased\n\nPR Status: **Ready For Review**\n\nShould be quick for anyone interested ðŸ˜„ ",https://github.com/bitcoin/bitcoin/pull/19753#issuecomment-717652083,717652083,
jnewbery,2020-10-28 08:51:23,Code review ACK d419fdedbe34c7ea19c0473660cc1b486b4e70d8,https://github.com/bitcoin/bitcoin/pull/19753#issuecomment-717789458,717789458,
jonatack,2020-10-28 22:20:16,Concept ACK,https://github.com/bitcoin/bitcoin/pull/19753#issuecomment-718241771,718241771,
laanwj,2020-10-29 10:38:52,Code review ACK d419fdedbe34c7ea19c0473660cc1b486b4e70d8,https://github.com/bitcoin/bitcoin/pull/19753#issuecomment-718626093,718626093,
jnewbery,2020-08-19 09:00:13,"I think to fully test that sending an invalid transaction from a forcerelay peer doesn't result in the tx being relayed, you'd need to add:\n\n```diff\n+        p2p_rebroadcast_wallet.send_txs_and_test(\n+            [tx],\n+            self.nodes[1],\n+            success=False,\n+            reject_reason='Not relaying non-mempool transaction {} from forcerelay peer=0'.format(txid)\n+   ",https://github.com/bitcoin/bitcoin/pull/19753#discussion_r472875226,472875226,test/functional/p2p_permissions.py
MarcoFalke,2020-08-23 07:35:41,"An early return would simplify the code flow\n\n```suggestion\n            }\n            return;\n```\n\nNeither `state`, nor `lRemovedTxn` will be set, so there is no need for the fallthrough over 200 LOC for nothing.",https://github.com/bitcoin/bitcoin/pull/19753#discussion_r475184933,475184933,src/net_processing.cpp
troygiorshev,2020-08-24 15:59:36,"Good point, done",https://github.com/bitcoin/bitcoin/pull/19753#discussion_r475721132,475721132,src/net_processing.cpp
troygiorshev,2020-08-24 16:18:52,"thanks, fixed",https://github.com/bitcoin/bitcoin/pull/19753#discussion_r475733496,475733496,test/functional/p2p_permissions.py
MarcoFalke,2020-08-24 16:40:27,nit: `state` and `lRemovedTxn` can now be moved down to after the return. They are not needed in this scope at all,https://github.com/bitcoin/bitcoin/pull/19753#discussion_r475749127,475749127,src/net_processing.cpp
MarcoFalke,2020-08-24 16:57:14,"nit: Could add a comment here that this first relay is only needed to make the node think it already has the transaction\n\n(sorry for leaving nits in succession instead of in one reply, feel free to ignore)",https://github.com/bitcoin/bitcoin/pull/19753#discussion_r475759154,475759154,test/functional/p2p_permissions.py
troygiorshev,2020-08-24 17:03:50,"keep them coming!  I'm going to ignore this one, I'll reconsider it if there are more changes.",https://github.com/bitcoin/bitcoin/pull/19753#discussion_r475763112,475763112,test/functional/p2p_permissions.py
jnewbery,2020-09-02 08:00:57,You should also add a comment here to explain why you're sending the transaction twice.,https://github.com/bitcoin/bitcoin/pull/19753#discussion_r481858602,481858602,test/functional/p2p_permissions.py
