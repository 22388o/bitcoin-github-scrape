[
  {
    "sha": "1bccf6a52d7fc08d8f605cfb2edc3277ec299c72",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYmNjZjZhNTJkN2ZjMDhkOGY2MDVjZmIyZWRjMzI3N2VjMjk5Yzcy",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-08-24T20:31:56Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-08-24T20:36:11Z"
      },
      "message": "[node] add forceSetArg to interface",
      "tree": {
        "sha": "ef5eea44bb4217a85dd4d9abdabdcddad71b444a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ef5eea44bb4217a85dd4d9abdabdcddad71b444a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1bccf6a52d7fc08d8f605cfb2edc3277ec299c72",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl1hn7sACgkQV/+b28ww\nEAlnGw/+JzCXW3akphyy8DrdmFjpI/fg1GJUOyjoK7KI3HUPV8jEsQrc6X9bXuFx\nsDEk8XPclsRdAJEF8yrrjTkyK6SP/+7SQ82X5a5/5Auya84bbRsTZ529uHgpshDl\nRECyqtC4uK7/xGcmOdZFe7SdE/FUK5TiW9zolXs7z9FWeQv5RDzkVsB284ITmdJT\npVVIp6ahFW8tNbLBXvPH3FFFgx3SrKHr+QyWJhMnj6ZwCF80QYl0A/lmcOjwtgb3\nQ3p+/HGi9mAaL4B6g5m34nydFhMzgFBSAT0TX9GuBowAX1iI8jps4WpSvpdzdirV\n9qlYXLNy5h8ICT12xHd3rP3oKPXnLzMIiKQplnz4zuGE5sMk2/YtE/NPF+AjRFKo\nUsU3PWyQ/f3AAavXX397Vo7PPnAzLFbIOt0cDTVGGuiLPQdrbprLZhvJ/euXz4rI\nqiipVUIyZVcWphOXlrPGnlfK0jF2TvAT+RoNqXvcg9exxZALvEdE506wuLmN1Bgl\nnMsUlDfLt4374BVKlNjvzqsciisCBePrpv2uBmmzu+KgGxgSm6qvXCnvI5wVTZWa\nUb1CnV27uv3nlOw5N1DpEJCkCqI9rQVvZ6QRAHEXrkyQV+pFBnhIIPWHLqbMRvXw\nbp/AXuiLQ0cHxm9o6+bJuNPW03v/W381j5nZ+QIeDF/iuFA0OaU=\n=HgDi\n-----END PGP SIGNATURE-----",
        "payload": "tree ef5eea44bb4217a85dd4d9abdabdcddad71b444a\nparent 3ca514ddb77253042877d1a72dfd3021c3de2812\nauthor Sjors Provoost <sjors@sprovoost.nl> 1566678716 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1566678971 +0200\n\n[node] add forceSetArg to interface\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1bccf6a52d7fc08d8f605cfb2edc3277ec299c72",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1bccf6a52d7fc08d8f605cfb2edc3277ec299c72",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1bccf6a52d7fc08d8f605cfb2edc3277ec299c72/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3ca514ddb77253042877d1a72dfd3021c3de2812",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ca514ddb77253042877d1a72dfd3021c3de2812",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3ca514ddb77253042877d1a72dfd3021c3de2812"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3a9ea9f3e373c709acb29142fd2772c45e22fc7d",
        "filename": "src/interfaces/node.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bccf6a52d7fc08d8f605cfb2edc3277ec299c72/src/interfaces/node.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bccf6a52d7fc08d8f605cfb2edc3277ec299c72/src/interfaces/node.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.cpp?ref=1bccf6a52d7fc08d8f605cfb2edc3277ec299c72",
        "patch": "@@ -60,6 +60,7 @@ class NodeImpl : public Node\n         return gArgs.ParseParameters(argc, argv, error);\n     }\n     bool readConfigFiles(std::string& error) override { return gArgs.ReadConfigFiles(error, true); }\n+    void forceSetArg(const std::string& arg, const std::string& value) override { gArgs.ForceSetArg(arg, value); }\n     bool softSetArg(const std::string& arg, const std::string& value) override { return gArgs.SoftSetArg(arg, value); }\n     bool softSetBoolArg(const std::string& arg, bool value) override { return gArgs.SoftSetBoolArg(arg, value); }\n     void selectParams(const std::string& network) override { SelectParams(network); }"
      },
      {
        "sha": "649c0568e2b433ee452ab50aa547b4a8f59fec3d",
        "filename": "src/interfaces/node.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bccf6a52d7fc08d8f605cfb2edc3277ec299c72/src/interfaces/node.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bccf6a52d7fc08d8f605cfb2edc3277ec299c72/src/interfaces/node.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.h?ref=1bccf6a52d7fc08d8f605cfb2edc3277ec299c72",
        "patch": "@@ -44,6 +44,9 @@ class Node\n     //! Set command line arguments.\n     virtual bool parseParameters(int argc, const char* const argv[], std::string& error) = 0;\n \n+    //! Set a command line argument\n+    virtual void forceSetArg(const std::string& arg, const std::string& value) = 0;\n+\n     //! Set a command line argument if it doesn't already have a value\n     virtual bool softSetArg(const std::string& arg, const std::string& value) = 0;\n "
      }
    ]
  },
  {
    "sha": "1957103786f97135f35ababc97efa1b481865eb0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOTU3MTAzNzg2Zjk3MTM1ZjM1YWJhYmM5N2VmYTFiNDgxODY1ZWIw",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-08-24T20:31:14Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-08-24T20:36:11Z"
      },
      "message": "[gui] add explicit prune setter\n\nThis makes it possible to enable pruning after the OptionsModel has been initialized and reset.",
      "tree": {
        "sha": "35064141c2a91d0f4c2b63b6282854578ae8357c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/35064141c2a91d0f4c2b63b6282854578ae8357c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1957103786f97135f35ababc97efa1b481865eb0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl1hn7sACgkQV/+b28ww\nEAnjMxAAhdrzviX5rUqFk8yZfrGaB+e+bMQ1U1yiXi+yM0fRR+5PE9dKV0KL6tYN\n9Giq+MXUIxrHVIafqdeZGt891aDpCvmKXvUJB2gtqo1KO1EyYNfo7LA7vL4/ZUpe\ny3PHOUoDBtbdX5I4s0+Et4oi0EdGwIS4PS30FEQVCgiAMUYdsp4do74dsHWGpd6V\nI3I/2peZFr8LxX/6GGwkD6q6Ezj8/6azRSJBf9Xjv0ubpSMejqaC51UkK/SjzRmW\nM8bo7ukq5+3gAQ0j4XVC87nW3FTtj14dYy3u0iZ9eYUPsfqZLv1Bv2NME18Ic4zi\nKU0NjY5kWAR40xpSGdJIjieh5Pqa3o1cdxUmn0V+JooZQ2Lin/mu//4RMFfA58gv\nmlQ1JMi9ucKUoEbth6ejgFokqo2aylQP6szzmblTMMM2Ae/QRerdrA9nLpvfcz47\n5l7Z4GrvbhN6Ix9CK9Ea/6MQWMi/a7C4TYXp32d8grAMXasjRIbGls0n5btddj9u\nd407Qq+wMqKFb6/m9X5UdbckeKLvBPhR+B1n0mdha/F98Ene80jVXqugZ983tPGl\nNJGO5ZnLsvGm0Ys7gQZgzFs+wASc1FK7wMppG5TZ4Ox7hljuMFwp409M1JE8Oblt\nQS/Wt0HGrvtkyy93+vx4cOlptdeDcKoetVJaRhuxDm80nmZ2crc=\n=ye0D\n-----END PGP SIGNATURE-----",
        "payload": "tree 35064141c2a91d0f4c2b63b6282854578ae8357c\nparent 1bccf6a52d7fc08d8f605cfb2edc3277ec299c72\nauthor Sjors Provoost <sjors@sprovoost.nl> 1566678674 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1566678971 +0200\n\n[gui] add explicit prune setter\n\nThis makes it possible to enable pruning after the OptionsModel has been initialized and reset.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1957103786f97135f35ababc97efa1b481865eb0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1957103786f97135f35ababc97efa1b481865eb0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1957103786f97135f35ababc97efa1b481865eb0/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1bccf6a52d7fc08d8f605cfb2edc3277ec299c72",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1bccf6a52d7fc08d8f605cfb2edc3277ec299c72",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1bccf6a52d7fc08d8f605cfb2edc3277ec299c72"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 26,
      "deletions": 5
    },
    "files": [
      {
        "sha": "f2e62040aed59b814162656c4d5a15f7a138e8ea",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1957103786f97135f35ababc97efa1b481865eb0/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1957103786f97135f35ababc97efa1b481865eb0/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=1957103786f97135f35ababc97efa1b481865eb0",
        "patch": "@@ -282,6 +282,10 @@ void BitcoinApplication::parameterSetup()\n     m_node.initParameterInteraction();\n }\n \n+void BitcoinApplication::SetPrune(bool prune, bool force) {\n+     optionsModel->SetPrune(prune, force);\n+}\n+\n void BitcoinApplication::requestInitialize()\n {\n     qDebug() << __func__ << \": Requesting initialize\";"
      },
      {
        "sha": "8c77fd8a7d85b90baf64ff67281a1c87c57c9e65",
        "filename": "src/qt/bitcoin.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1957103786f97135f35ababc97efa1b481865eb0/src/qt/bitcoin.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1957103786f97135f35ababc97efa1b481865eb0/src/qt/bitcoin.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.h?ref=1957103786f97135f35ababc97efa1b481865eb0",
        "patch": "@@ -67,6 +67,8 @@ class BitcoinApplication: public QApplication\n     void parameterSetup();\n     /// Create options model\n     void createOptionsModel(bool resetSettings);\n+    /// Update prune value\n+    void SetPrune(bool prune, bool force = false);\n     /// Create main window\n     void createWindow(const NetworkStyle *networkStyle);\n     /// Create splash screen"
      },
      {
        "sha": "d047a8247558ec201c7f65ce7512b5c8a85009e7",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 5,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1957103786f97135f35ababc97efa1b481865eb0/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1957103786f97135f35ababc97efa1b481865eb0/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=1957103786f97135f35ababc97efa1b481865eb0",
        "patch": "@@ -92,11 +92,7 @@ void OptionsModel::Init(bool resetSettings)\n         settings.setValue(\"bPrune\", false);\n     if (!settings.contains(\"nPruneSize\"))\n         settings.setValue(\"nPruneSize\", 2);\n-    // Convert prune size from GB to MiB:\n-    const uint64_t nPruneSizeMiB = (settings.value(\"nPruneSize\").toInt() * GB_BYTES) >> 20;\n-    if (!m_node.softSetArg(\"-prune\", settings.value(\"bPrune\").toBool() ? std::to_string(nPruneSizeMiB) : \"0\")) {\n-        addOverriddenOption(\"-prune\");\n-    }\n+    SetPrune(settings.value(\"bPrune\").toBool());\n \n     if (!settings.contains(\"nDatabaseCache\"))\n         settings.setValue(\"nDatabaseCache\", (qint64)nDefaultDbCache);\n@@ -240,6 +236,22 @@ static const QString GetDefaultProxyAddress()\n     return QString(\"%1:%2\").arg(DEFAULT_GUI_PROXY_HOST).arg(DEFAULT_GUI_PROXY_PORT);\n }\n \n+void OptionsModel::SetPrune(bool prune, bool force)\n+{\n+    QSettings settings;\n+    settings.setValue(\"bPrune\", prune);\n+    // Convert prune size from GB to MiB:\n+    const uint64_t nPruneSizeMiB = (settings.value(\"nPruneSize\").toInt() * GB_BYTES) >> 20;\n+    std::string prune_val = prune ? std::to_string(nPruneSizeMiB) : \"0\";\n+    if (force) {\n+        m_node.forceSetArg(\"-prune\", prune_val);\n+        return;\n+    }\n+    if (!m_node.softSetArg(\"-prune\", prune_val)) {\n+        addOverriddenOption(\"-prune\");\n+    }\n+}\n+\n // read QSettings values and return them\n QVariant OptionsModel::data(const QModelIndex & index, int role) const\n {"
      },
      {
        "sha": "b1231b7c7d87763fc281c9769b364b9472b528c6",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1957103786f97135f35ababc97efa1b481865eb0/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1957103786f97135f35ababc97efa1b481865eb0/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=1957103786f97135f35ababc97efa1b481865eb0",
        "patch": "@@ -77,6 +77,9 @@ class OptionsModel : public QAbstractListModel\n     bool getCoinControlFeatures() const { return fCoinControlFeatures; }\n     const QString& getOverriddenByCommandLine() { return strOverriddenByCommandLine; }\n \n+    /* Explicit setters */\n+    void SetPrune(bool prune, bool force = false);\n+\n     /* Restart flag helper */\n     void setRestartRequired(bool fRequired);\n     bool isRestartRequired() const;"
      }
    ]
  },
  {
    "sha": "1bbc49d2078ee53488e214d00eb47462687b05c5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYmJjNDlkMjA3OGVlNTM0ODhlMjE0ZDAwZWI0NzQ2MjY4N2IwNWM1",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-08-24T20:34:59Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-08-24T20:39:47Z"
      },
      "message": "[gui] intro: inform caller if intro was shown",
      "tree": {
        "sha": "b871a8813df5495f9aac952e2722619ab64fce99",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b871a8813df5495f9aac952e2722619ab64fce99"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1bbc49d2078ee53488e214d00eb47462687b05c5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl1hoJYACgkQV/+b28ww\nEAnjNRAAh4l0U0QrLloNVx5w7jg/taqhQCYDNfIOaO9xq1batVzCYGeKD4QuvrKF\nFuSxw5zomzhpAQRDfuS2PJVSjLGmi+dpAzs6M0EmwVXWWU7GPbY+iuBj+LoryK5a\nvHjIu8hdzN5g3TMMJNXoiBHRglP32OLy3tqBIpzjYrinexKhN53AxEQO0XWDPJUU\naHSwhT3havUGWK0FBo945e/ND1ejeqkta/mfTnO04QeuE3VBBrPbGax/7InuKQ9A\nItukJXcn/Ldptnc0nbwnKEsyW8sMfncj7lKuU2/djA56zCswFQ4XHSbR0jSyrgWE\nfuepE/ub4B69HvkpaTr+pOyQYKCCUPKKmJYTQS2LUUPukJ/4xkBN1v7UgHmg6kQM\n4v//wHpxYnErvMqIZFVn5DHLu+HOjIA9xagVusw/bBXQYvhZ0wftyADT8cviPIsQ\nj50RkpjkMzqKn8LueevcUchWPeh7eqGKKGIdlQHp3PfhtWXiLgH3jk37cMSrsb4e\n+pBKs2Zd9jpRVKGt71bEmpuSUf8ccd7a+NKvkAqw2dR/XcP/Lhcwe9xDimjuKzH4\nvmhtDNJVwMMljfjSVrBW+26mWw+n4IIuLdl/A/S98Y29/dP5cZNODkiVXYs7zclD\nj7vS9IbcXRokJ1CtSA6Iy2yJNMooMk+sxxcqNmhH3/ienN5+0PI=\n=CL11\n-----END PGP SIGNATURE-----",
        "payload": "tree b871a8813df5495f9aac952e2722619ab64fce99\nparent 1957103786f97135f35ababc97efa1b481865eb0\nauthor Sjors Provoost <sjors@sprovoost.nl> 1566678899 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1566679187 +0200\n\n[gui] intro: inform caller if intro was shown\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1bbc49d2078ee53488e214d00eb47462687b05c5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1bbc49d2078ee53488e214d00eb47462687b05c5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1bbc49d2078ee53488e214d00eb47462687b05c5/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1957103786f97135f35ababc97efa1b481865eb0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1957103786f97135f35ababc97efa1b481865eb0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1957103786f97135f35ababc97efa1b481865eb0"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 8,
      "deletions": 4
    },
    "files": [
      {
        "sha": "2592efc491b59846e212ad5e1d274400b5e500e8",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bbc49d2078ee53488e214d00eb47462687b05c5/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bbc49d2078ee53488e214d00eb47462687b05c5/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=1bbc49d2078ee53488e214d00eb47462687b05c5",
        "patch": "@@ -491,8 +491,9 @@ int GuiMain(int argc, char* argv[])\n \n     /// 5. Now that settings and translations are available, ask user for data directory\n     // User language is set up: pick a data directory\n-    if (!Intro::pickDataDirectory(*node))\n-        return EXIT_SUCCESS;\n+    bool did_show_intro = false;\n+    // Gracefully exit if the user cancels\n+    if (!Intro::showIfNeeded(*node, did_show_intro)) return EXIT_SUCCESS;\n \n     /// 6. Determine availability of data directory and parse bitcoin.conf\n     /// - Do not call GetDataDir(true) before this step finishes"
      },
      {
        "sha": "0a18561109ab52e72f2592180f0480b1bfdcff46",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bbc49d2078ee53488e214d00eb47462687b05c5/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bbc49d2078ee53488e214d00eb47462687b05c5/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=1bbc49d2078ee53488e214d00eb47462687b05c5",
        "patch": "@@ -180,8 +180,10 @@ void Intro::setDataDirectory(const QString &dataDir)\n     }\n }\n \n-bool Intro::pickDataDirectory(interfaces::Node& node)\n+bool Intro::showIfNeeded(interfaces::Node& node, bool& did_show_intro)\n {\n+    did_show_intro = false;\n+\n     QSettings settings;\n     /* If data directory provided on command line, no need to look at settings\n        or show a picking dialog */\n@@ -205,6 +207,7 @@ bool Intro::pickDataDirectory(interfaces::Node& node)\n         Intro intro(0, node.getAssumedBlockchainSize(), node.getAssumedChainStateSize());\n         intro.setDataDirectory(dataDir);\n         intro.setWindowIcon(QIcon(\":icons/bitcoin\"));\n+        did_show_intro = true;\n \n         while(true)\n         {"
      },
      {
        "sha": "be8d6e34ad820b4b56aef4bc395831e7dadc94dd",
        "filename": "src/qt/intro.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bbc49d2078ee53488e214d00eb47462687b05c5/src/qt/intro.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bbc49d2078ee53488e214d00eb47462687b05c5/src/qt/intro.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.h?ref=1bbc49d2078ee53488e214d00eb47462687b05c5",
        "patch": "@@ -46,7 +46,7 @@ class Intro : public QDialog\n      * @note do NOT call global GetDataDir() before calling this function, this\n      * will cause the wrong path to be cached.\n      */\n-    static bool pickDataDirectory(interfaces::Node& node);\n+    static bool showIfNeeded(interfaces::Node& node, bool& did_show_intro);\n \n Q_SIGNALS:\n     void requestCheck();"
      }
    ]
  },
  {
    "sha": "c8de347a9d6c88fe67d77aba6fcce1b7fd66791c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjOGRlMzQ3YTlkNmM4OGZlNjdkNzdhYmE2ZmNjZTFiN2ZkNjY3OTFj",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-08-24T17:13:04Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-08-24T20:41:32Z"
      },
      "message": "[gui] intro: add prune preference\n\nAdds a checkbox to the introduction screen letting the user enable pruning from the start.\nDisable checkbox when launched with -prune",
      "tree": {
        "sha": "adaefc5bf862bfa403edafd7f2be2b658db96a75",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/adaefc5bf862bfa403edafd7f2be2b658db96a75"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c8de347a9d6c88fe67d77aba6fcce1b7fd66791c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl1hoPwACgkQV/+b28ww\nEAmGxA/7B+swNHbAGNeXjM9AdFyhERjAJ6fpKKIGsfXBTopD09Cpkqox7PdVpWnu\nRyKB2TAZlxZLNpyKo6c8AFwtFOvXq3tEzCEYO1h/y1VBezHo2tI4z3mwQem/w7CC\nA1WV/8vT3yj41BNjULsL4cWOCYVKjJnxH8xtnIZfCmzREhi2DCwy9/iV/Sfg8kzP\n+8QXP7JnpJvC50o90/HWnMzkkvcgRaOaTnGLBR4TUpqd0iWHpIHUPFNRoTOuOml6\n01uMWS1D8oAN6ZX7g4oLlvmcWPEX9lTRd0cy0Sfms6qh2+zftlJl0og4Pplb/UFo\nLueb0jT+iOmQ5LA+7cR/mBuownLqi2E1uvOUd8+zf0b9xbtnFTfltIdlFYsaN4Zr\nVIwxBLNbcTckzTKDYFXeuNuztMcXQVMPaCRuCjtnrIrtqcJxP4fBrZE0W4QJYrRR\n+57Eu28+5Owquyy5TapvP2hd0AfkYDqJ/paaXt8RwsgPsuC6LW3T8XtJ3w7nFnAS\n6cKFctXp6X6aOChOgapogTwTfymllO8EjMPKwJ1SefHtC7GzGX1HzPU0HXWK04YU\nRa2Br3/4WpcLzKU/tM2hnV5QXr/DwA3PbeUN80O+5rUbUO7dUVApCUqgXN75cvAC\nsA7gqX73BM78teMNonB4coB8JgE9Q04BOukW/NypvnlEzeJeP1s=\n=KHVq\n-----END PGP SIGNATURE-----",
        "payload": "tree adaefc5bf862bfa403edafd7f2be2b658db96a75\nparent 1bbc49d2078ee53488e214d00eb47462687b05c5\nauthor Sjors Provoost <sjors@sprovoost.nl> 1566666784 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1566679292 +0200\n\n[gui] intro: add prune preference\n\nAdds a checkbox to the introduction screen letting the user enable pruning from the start.\nDisable checkbox when launched with -prune\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8de347a9d6c88fe67d77aba6fcce1b7fd66791c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c8de347a9d6c88fe67d77aba6fcce1b7fd66791c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8de347a9d6c88fe67d77aba6fcce1b7fd66791c/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1bbc49d2078ee53488e214d00eb47462687b05c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1bbc49d2078ee53488e214d00eb47462687b05c5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1bbc49d2078ee53488e214d00eb47462687b05c5"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 28,
      "deletions": 3
    },
    "files": [
      {
        "sha": "eb8b224929b440fb4c31f4721290ee64c490072f",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8de347a9d6c88fe67d77aba6fcce1b7fd66791c/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8de347a9d6c88fe67d77aba6fcce1b7fd66791c/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=c8de347a9d6c88fe67d77aba6fcce1b7fd66791c",
        "patch": "@@ -492,8 +492,9 @@ int GuiMain(int argc, char* argv[])\n     /// 5. Now that settings and translations are available, ask user for data directory\n     // User language is set up: pick a data directory\n     bool did_show_intro = false;\n+    bool prune = false; // Intro dialog prune check box\n     // Gracefully exit if the user cancels\n-    if (!Intro::showIfNeeded(*node, did_show_intro)) return EXIT_SUCCESS;\n+    if (!Intro::showIfNeeded(*node, did_show_intro, prune)) return EXIT_SUCCESS;\n \n     /// 6. Determine availability of data directory and parse bitcoin.conf\n     /// - Do not call GetDataDir(true) before this step finishes\n@@ -567,6 +568,11 @@ int GuiMain(int argc, char* argv[])\n     // Load GUI settings from QSettings\n     app.createOptionsModel(gArgs.GetBoolArg(\"-resetguisettings\", false));\n \n+    if (did_show_intro) {\n+        // Store intro dialog settings other than datadir (network specific)\n+        app.SetPrune(prune, true);\n+    }\n+\n     if (gArgs.GetBoolArg(\"-splash\", DEFAULT_SPLASHSCREEN) && !gArgs.GetBoolArg(\"-min\", false))\n         app.createSplashScreen(networkStyle.data());\n "
      },
      {
        "sha": "f27a4ebe44df6a358339168885af251743a00a40",
        "filename": "src/qt/forms/intro.ui",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8de347a9d6c88fe67d77aba6fcce1b7fd66791c/src/qt/forms/intro.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8de347a9d6c88fe67d77aba6fcce1b7fd66791c/src/qt/forms/intro.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/intro.ui?ref=c8de347a9d6c88fe67d77aba6fcce1b7fd66791c",
        "patch": "@@ -210,6 +210,16 @@\n      </property>\n     </widget>\n    </item>\n+   <item>\n+    <widget class=\"QCheckBox\" name=\"prune\">\n+     <property name=\"toolTip\">\n+      <string>Reverting this setting requires re-downloading the entire blockchain. It is faster to download the full chain first and prune it later. Disables some advanced features.</string>\n+     </property>\n+     <property name=\"text\">\n+      <string></string>\n+     </property>\n+    </widget>\n+   </item>\n    <item>\n     <widget class=\"QLabel\" name=\"lblExplanation2\">\n      <property name=\"text\">"
      },
      {
        "sha": "0079cbc4f42776ca88358ba68912e4e3ab0e8292",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8de347a9d6c88fe67d77aba6fcce1b7fd66791c/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8de347a9d6c88fe67d77aba6fcce1b7fd66791c/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=c8de347a9d6c88fe67d77aba6fcce1b7fd66791c",
        "patch": "@@ -131,6 +131,11 @@ Intro::Intro(QWidget *parent, uint64_t blockchain_size, uint64_t chain_state_siz\n     ui->lblExplanation2->setText(ui->lblExplanation2->text().arg(PACKAGE_NAME));\n \n     uint64_t pruneTarget = std::max<int64_t>(0, gArgs.GetArg(\"-prune\", 0));\n+    if (pruneTarget > 1) { // -prune=1 means enabled, above that it's a size in MB\n+        ui->prune->setChecked(true);\n+        ui->prune->setEnabled(false);\n+    }\n+    ui->prune->setText(tr(\"Discard blocks after verification, except most recent %1 GB (prune)\").arg(pruneTarget ? pruneTarget / 1000 : 2));\n     requiredSpace = m_blockchain_size;\n     QString storageRequiresMsg = tr(\"At least %1 GB of data will be stored in this directory, and it will grow over time.\");\n     if (pruneTarget) {\n@@ -180,7 +185,7 @@ void Intro::setDataDirectory(const QString &dataDir)\n     }\n }\n \n-bool Intro::showIfNeeded(interfaces::Node& node, bool& did_show_intro)\n+bool Intro::showIfNeeded(interfaces::Node& node, bool& did_show_intro, bool& prune)\n {\n     did_show_intro = false;\n \n@@ -230,6 +235,9 @@ bool Intro::showIfNeeded(interfaces::Node& node, bool& did_show_intro)\n             }\n         }\n \n+        // Additional preferences:\n+        prune = intro.ui->prune->isChecked();\n+\n         settings.setValue(\"strDataDir\", dataDir);\n         settings.setValue(\"fReset\", false);\n     }"
      },
      {
        "sha": "aca7e7164200fd2c0b869f001931d7be56750b0d",
        "filename": "src/qt/intro.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8de347a9d6c88fe67d77aba6fcce1b7fd66791c/src/qt/intro.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8de347a9d6c88fe67d77aba6fcce1b7fd66791c/src/qt/intro.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.h?ref=c8de347a9d6c88fe67d77aba6fcce1b7fd66791c",
        "patch": "@@ -39,14 +39,15 @@ class Intro : public QDialog\n \n     /**\n      * Determine data directory. Let the user choose if the current one doesn't exist.\n+     * Let the user configure additional preferences such as pruning.\n      *\n      * @returns true if a data directory was selected, false if the user cancelled the selection\n      * dialog.\n      *\n      * @note do NOT call global GetDataDir() before calling this function, this\n      * will cause the wrong path to be cached.\n      */\n-    static bool showIfNeeded(interfaces::Node& node, bool& did_show_intro);\n+    static bool showIfNeeded(interfaces::Node& node, bool& did_show_intro, bool& prune);\n \n Q_SIGNALS:\n     void requestCheck();"
      }
    ]
  },
  {
    "sha": "9924bce317b96ab0c57efb99330abd11b6f16b9a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OTI0YmNlMzE3Yjk2YWIwYzU3ZWZiOTkzMzBhYmQxMWI2ZjE2Yjlh",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-08-24T17:58:24Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-08-24T20:41:32Z"
      },
      "message": "[gui] intro: enable pruning by default unless disk is big\n\nColor the text \"GB needed for full chain\" orange for nodes that barely have enough space.",
      "tree": {
        "sha": "855998251fae2455e57b245b6f83f37094ef550b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/855998251fae2455e57b245b6f83f37094ef550b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9924bce317b96ab0c57efb99330abd11b6f16b9a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl1hoPwACgkQV/+b28ww\nEAn+7RAAnaGhx9E/mOec3HK4Eyt2XLhX+Q2vfwQMdzx28r/AAfMYY7IAKGwxKdhf\nrgzwqhbQ1di0hMIcFYdtcqSjoneR0UNRwHB5UytTi/bMnI/44DhWZMc4CUj9ql4m\nkIH082sWDL1YFJBlW431p4iEz6U8dp6rp1LGnhesB/ZpkkVB10OZ8JCKK0TtIRfA\nc/i4bokUV7P35hsdQzGqArThNtKgq7Vgrc288lqWR/hEM4woK8ozJxx/7WXHvN55\nUAvBpzE7t7IysOTA48lYRlyBJeAgA+SBOIvD9FpJ2zEFMSacYkMhEDEAfdTYk+X1\nc/KTnmsJVfKxgye88yvr7+KZh4IJL6UguAvF8GSfDErkGVWkbpSBf97OQh312F+2\ntrsHFgcUj3iBOKH1kxKhTcDC311BrGnwuDmqwdoTW2UM8eOxmYs6ce2oq42Gd1EU\naZrQpfX9x7BaeJ5YUkIoVIqj2534T3rOHCkZpoFGaK+XKwxhpL9qT8rSx3KvZ76Y\nBv61k/EA8PV8MHXKfUK+ti7V/P7/0RuzarJayj0vvabLwbgEGBm6IxVEkiHbhI13\nGKoq6455LtpoW69GqMp9ZBevaAn7UkfOJWOSROaBBFuV81Xv+4k8llNCgUBBJPJ0\nJ+X6ygZnsFxyx4QvG+vNSQwHdrOrqANwPI8kRiVRNVCtFidtb9I=\n=NUXP\n-----END PGP SIGNATURE-----",
        "payload": "tree 855998251fae2455e57b245b6f83f37094ef550b\nparent c8de347a9d6c88fe67d77aba6fcce1b7fd66791c\nauthor Sjors Provoost <sjors@sprovoost.nl> 1566669504 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1566679292 +0200\n\n[gui] intro: enable pruning by default unless disk is big\n\nColor the text \"GB needed for full chain\" orange for nodes that barely have enough space.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9924bce317b96ab0c57efb99330abd11b6f16b9a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9924bce317b96ab0c57efb99330abd11b6f16b9a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9924bce317b96ab0c57efb99330abd11b6f16b9a/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c8de347a9d6c88fe67d77aba6fcce1b7fd66791c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8de347a9d6c88fe67d77aba6fcce1b7fd66791c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c8de347a9d6c88fe67d77aba6fcce1b7fd66791c"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "9e05c63aa013e844808a623cb81a928a47883968",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9924bce317b96ab0c57efb99330abd11b6f16b9a/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9924bce317b96ab0c57efb99330abd11b6f16b9a/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=9924bce317b96ab0c57efb99330abd11b6f16b9a",
        "patch": "@@ -274,6 +274,11 @@ void Intro::setStatus(int status, const QString &message, quint64 bytesAvailable\n         {\n             freeString += \" \" + tr(\"(of %n GB needed)\", \"\", requiredSpace);\n             ui->freeSpace->setStyleSheet(\"QLabel { color: #800000 }\");\n+            ui->prune->setChecked(true);\n+        } else if (bytesAvailable / GB_BYTES - requiredSpace < 10) {\n+            freeString += \" \" + tr(\"(%n GB needed for full chain)\", \"\", requiredSpace);\n+            ui->freeSpace->setStyleSheet(\"QLabel { color: #999900 }\");\n+            ui->prune->setChecked(true);\n         } else {\n             ui->freeSpace->setStyleSheet(\"\");\n         }"
      }
    ]
  }
]