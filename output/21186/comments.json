[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/781061349",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#issuecomment-781061349",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21186",
    "id": 781061349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MTA2MTM0OQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-18T05:16:52Z",
    "updated_at": "2021-05-08T00:32:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21837 ([POC] Rust based Cuckoo Filter for m_addr_known by fanquake)\n* #21527 (net_processing: lock clean up by ajtowns)\n* #21261 (p2p: update inbound eviction protection for multiple networks, add I2P peers by jonatack)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/781061349/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/811732373",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#issuecomment-811732373",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21186",
    "id": 811732373,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMTczMjM3Mw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-01T08:10:47Z",
    "updated_at": "2021-04-01T08:10:47Z",
    "author_association": "MEMBER",
    "body": "#21236 is merged. Moving this out of draft.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/811732373/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/812747777",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#issuecomment-812747777",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21186",
    "id": 812747777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjc0Nzc3Nw==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-02T23:02:24Z",
    "updated_at": "2021-04-02T23:02:24Z",
    "author_association": "MEMBER",
    "body": "Concept ACK.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/812747777/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/814112000",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#issuecomment-814112000",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21186",
    "id": 814112000,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNDExMjAwMA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-06T13:17:10Z",
    "updated_at": "2021-04-06T13:17:10Z",
    "author_association": "MEMBER",
    "body": "Thanks for the review, @hebasto! I've addressed both of your style comments.\r\n\r\n> four functions are moved from CNode members to the net_processing.cpp as free static functions. I agree that there's no need to make them members of Peer, but why not place them in a namespace? It could be unnamed, or we could choose a pretty good name for it :)\r\n\r\nThere's almost no difference between declaring a free function `static` and placing it in the unnamed namespace. Both will prevent the name from being accessible outside the translation unit. See https://stackoverflow.com/a/154482/933705 for example.\r\n\r\n> Also CNode::AddAddressKnown and CNode::PushAddress are subjects for fuzzing in the master branch. Could new free functions also be fuzzed?\r\n\r\nBoth of these functions are called from `ProcessMessage()`, so are indirectly tested by the `fuzz/process_messages.py` fuzzer.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/814112000/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/814132933",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#issuecomment-814132933",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21186",
    "id": 814132933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNDEzMjkzMw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-06T13:46:43Z",
    "updated_at": "2021-04-06T13:46:43Z",
    "author_association": "MEMBER",
    "body": "> #19176 (comment)\r\n\r\nI don't see a hugely compelling reason to prefer unnamed namespaces over static declaration in any of those links, but equally wouldn't be opposed to updating the style guide to prefer unnnamed namespaces just for consistency.\r\n\r\nOne advantage of using `static` that isn't mentioned is that it's instantly obvious to the reader that the symbol has internal linkage. Unnamed namespaces often span many hundreds of lines, so it's not obvious when something is in the namespace. For example, I've just realized that in this PR, all the new functions are in fact inside an unnamed namespace that spans lines 542-942.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/814132933/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/817143110",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#issuecomment-817143110",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21186",
    "id": 817143110,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNzE0MzExMA==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-10T14:13:36Z",
    "updated_at": "2021-04-10T14:13:36Z",
    "author_association": "MEMBER",
    "body": "> For example, I've just realized that in this PR, all the new functions are in fact inside an unnamed namespace that spans lines 542-942.\r\n\r\nThere are three adjacent unnamed namespaces...\r\n\r\n> Unnamed namespaces often span many hundreds of lines...\r\n\r\nI think it is a code organizing problem, no?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/817143110/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/817146622",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#issuecomment-817146622",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21186",
    "id": 817146622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNzE0NjYyMg==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-10T14:38:12Z",
    "updated_at": "2021-04-10T14:38:12Z",
    "author_association": "MEMBER",
    "body": "> There are three adjacent unnamed namespaces...\r\n\r\nYes. This is part of the unfinished work in #20758. Once that's finished, these unnamed namespaces should be fixed up.\r\n\r\n> > Unnamed namespaces often span many hundreds of lines...\r\n\r\n> I think it is a code organizing problem, no?\r\n\r\nI'm not sure. I think if we use unnamed namespaces for all the internal functions that we don't want exposed outside the translation unit then they'll usually be hundreds of lines.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/817146622/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/817147104",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#issuecomment-817147104",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21186",
    "id": 817147104,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNzE0NzEwNA==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-10T14:42:10Z",
    "updated_at": "2021-04-10T14:42:10Z",
    "author_association": "MEMBER",
    "body": "> I'm not sure. I think if we use unnamed namespaces for all the internal functions that we don't want exposed outside the translation unit then they'll usually be hundreds of lines.\r\n\r\nCorrect. I mean that our code base have some really huge translation units :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/817147104/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/817657534",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#issuecomment-817657534",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21186",
    "id": 817657534,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNzY1NzUzNA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-12T09:40:02Z",
    "updated_at": "2021-04-12T09:40:02Z",
    "author_association": "MEMBER",
    "body": "Thank you for the careful review @mzumsande. You caught two rebase errors :flushed: \r\n\r\nI've fixed those and addressed your other comment. I've also made some minor edits to comments to clarify concepts, and also re-reviewed everything to make sure no other errors have crept in.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/817657534/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/830006829",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#issuecomment-830006829",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21186",
    "id": 830006829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzMDAwNjgyOQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-30T10:40:23Z",
    "updated_at": "2021-04-30T10:40:23Z",
    "author_association": "MEMBER",
    "body": "Thanks for the reviews @ajtowns and @amitiuttarwar. I've addressed all of your comments.\r\n\r\n> The \"Move addr relay data and logic into net processing\" commit is doing a lot of things, and I think that makes it a bit hard to review (and leads to rebase errors?). Might be worth putting a bit of effort into splitting it up further if some of the changes can be isolated?\r\n\r\nI did try that at one point, but it seemed more confusing/difficult than just moving across the addr data/logic in one commit.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/830006829/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/830190747",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#issuecomment-830190747",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21186",
    "id": 830190747,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzMDE5MDc0Nw==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-30T15:53:09Z",
    "updated_at": "2021-04-30T15:53:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/830190747/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/831142655",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#issuecomment-831142655",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21186",
    "id": 831142655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzMTE0MjY1NQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-03T09:33:58Z",
    "updated_at": "2021-05-03T09:33:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--4a62be1de6b64f3ed646cdc7932c8cf5-->\n\ud83d\udd75\ufe0f @sipa has been requested to review this pull request as specified in the REVIEWERS file.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/831142655/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/844031773",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#issuecomment-844031773",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21186",
    "id": 844031773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NDAzMTc3Mw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-19T11:57:09Z",
    "updated_at": "2021-05-19T11:57:09Z",
    "author_association": "MEMBER",
    "body": "Code review ACK 0829516d1f3868c1c2ba507feee718325d81e329",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/844031773/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/845405200",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#issuecomment-845405200",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21186",
    "id": 845405200,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NTQwNTIwMA==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-20T19:11:57Z",
    "updated_at": "2021-05-20T19:11:57Z",
    "author_association": "MEMBER",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/845405200/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/845477302",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#issuecomment-845477302",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21186",
    "id": 845477302,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NTQ3NzMwMg==",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-20T21:07:15Z",
    "updated_at": "2021-05-20T21:07:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "ACK 0829516d1f3868c1c2ba507feee718325d81e329, reviewed the code and ran tests.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/845477302/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592834789",
    "pull_request_review_id": 610365228,
    "id": 592834789,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjgzNDc4OQ==",
    "diff_hunk": "@@ -216,7 +237,8 @@ struct Peer {\n     /** Work queue of items requested by this peer **/\n     std::deque<CInv> m_getdata_requests GUARDED_BY(m_getdata_requests_mutex);\n \n-    explicit Peer(NodeId id) : m_id(id) {}\n+    explicit Peer(NodeId id, bool addr_relay)\n+        : m_id(id), m_addr_known{addr_relay ? nullptr : MakeUnique<CRollingBloomFilter>(5000, 0.001)} {}",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 41,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "231562806b99cbe91bcb5ba27662b2b4e51f13a2",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Please [use `std::make_unique` in new code](https://github.com/bitcoin/bitcoin/blob/master/src/util/memory.h#L13).",
    "created_at": "2021-03-12T00:52:55Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r592834789",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592834789"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r592834789"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592834789/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 241,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/605911247",
    "pull_request_review_id": 626603303,
    "id": 605911247,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNTkxMTI0Nw==",
    "diff_hunk": "@@ -617,6 +652,39 @@ static CNodeState *State(NodeId pnode) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {\n     return &it->second;\n }\n \n+static bool RelayAddrsWithPeer(const Peer& peer) { return peer.m_addr_known != nullptr; }",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 71,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "468db1469382ee11380f0667454b86ec1903eca8",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\nstatic bool RelayAddrsWithPeer(const Peer& peer)\r\n{\r\n    return peer.m_addr_known != nullptr;\r\n}\r\n```",
    "created_at": "2021-04-01T19:58:24Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r605911247",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/605911247"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r605911247"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/605911247/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 653,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606517593",
    "pull_request_review_id": 627411416,
    "id": 606517593,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjUxNzU5Mw==",
    "diff_hunk": "@@ -218,7 +241,10 @@ struct Peer {\n     /** Work queue of items requested by this peer **/\n     std::deque<CInv> m_getdata_requests GUARDED_BY(m_getdata_requests_mutex);\n \n-    explicit Peer(NodeId id) : m_id(id) {}\n+    explicit Peer(NodeId id, bool addr_relay)\n+        : m_id(id)\n+        , m_addr_known{addr_relay ? nullptr : std::make_unique<CRollingBloomFilter>(5000, 0.001)}\n+    {}",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 45,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "468db1469382ee11380f0667454b86ec1903eca8",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Out of curiosity, is there a way to teach the [`clang-format-diff.py`](https://github.com/bitcoin/bitcoin/tree/master/contrib/devtools#clang-format-diffpy) to support such formatting, i.e., both a leading comma and `{}` on the the same line?",
    "created_at": "2021-04-03T00:03:20Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r606517593",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606517593"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r606517593"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606517593/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 244,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 245,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606562457",
    "pull_request_review_id": 627419995,
    "id": 606562457,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjU2MjQ1Nw==",
    "diff_hunk": "@@ -1483,59 +1551,49 @@ void PeerManagerImpl::RelayTransaction(const uint256& txid, const uint256& wtxid\n     });\n }\n \n-/**\n- * Relay (gossip) an address to a few randomly chosen nodes.\n- * We choose the same nodes within a given 24h window (if the list of connected\n- * nodes does not change) and we don't relay to nodes that already know an\n- * address. So within 24h we will likely relay a given address once. This is to\n- * prevent a peer from unjustly giving their address better propagation by sending\n- * it to us repeatedly.\n- * @param[in] originator The peer that sent us the address. We don't want to relay it back.\n- * @param[in] addr Address to relay.\n- * @param[in] fReachable Whether the address' network is reachable. We relay unreachable\n- * addresses less.\n- * @param[in] connman Connection manager to choose nodes to relay to.\n- */\n-static void RelayAddress(const CNode& originator,\n-                         const CAddress& addr,\n-                         bool fReachable,\n-                         const CConnman& connman)\n+void PeerManagerImpl::RelayAddress(NodeId originator,\n+                                   const CAddress& addr,\n+                                   bool fReachable)\n {\n+    // We choose the same nodes within a given 24h window (if the list of connected\n+    // nodes does not change) and we don't relay to nodes that already know an\n+    // address. So within 24h we will likely relay a given address once. This is to\n+    // prevent a peer from unjustly giving their address better propagation by sending\n+    // it to us repeatedly.\n+\n     if (!fReachable && !addr.IsRelayable()) return;\n \n     // Relay to a limited number of other nodes\n     // Use deterministic randomness to send to the same nodes for 24 hours\n     // at a time so the m_addr_knowns of the chosen nodes prevent repeats\n     uint64_t hashAddr = addr.GetHash();\n-    const CSipHasher hasher = connman.GetDeterministicRandomizer(RANDOMIZER_ID_ADDRESS_RELAY).Write(hashAddr << 32).Write((GetTime() + hashAddr) / (24 * 60 * 60));\n+    const CSipHasher hasher = m_connman.GetDeterministicRandomizer(RANDOMIZER_ID_ADDRESS_RELAY).Write(hashAddr << 32).Write((GetTime() + hashAddr) / (24 * 60 * 60));\n     FastRandomContext insecure_rand;\n \n     // Relay reachable addresses to 2 peers. Unreachable addresses are relayed randomly to 1 or 2 peers.\n     unsigned int nRelayNodes = (fReachable || (hasher.Finalize() & 1)) ? 2 : 1;\n \n-    std::array<std::pair<uint64_t, CNode*>,2> best{{{0, nullptr}, {0, nullptr}}};\n+    std::array<std::pair<uint64_t, Peer*>,2> best{{{0, nullptr}, {0, nullptr}}};",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 161,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "468db1469382ee11380f0667454b86ec1903eca8",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "style nit:\r\n```suggestion\r\n    std::array<std::pair<uint64_t, Peer*>, 2> best{{{0, nullptr}, {0, nullptr}}};\r\n```",
    "created_at": "2021-04-03T01:22:52Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r606562457",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606562457"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r606562457"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606562457/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1576,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606563197",
    "pull_request_review_id": 627419995,
    "id": 606563197,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjU2MzE5Nw==",
    "diff_hunk": "@@ -2674,24 +2732,24 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n \n             if (addr.nTime <= 100000000 || addr.nTime > nNow + 10 * 60)\n                 addr.nTime = nNow - 5 * 24 * 60 * 60;\n-            pfrom.AddAddressKnown(addr);\n+            AddAddressKnown(*peer, addr);\n             if (m_banman && (m_banman->IsDiscouraged(addr) || m_banman->IsBanned(addr))) {\n                 // Do not process banned/discouraged addresses beyond remembering we received them\n                 continue;\n             }\n             bool fReachable = IsReachable(addr);\n-            if (addr.nTime > nSince && !pfrom.fGetAddr && vAddr.size() <= 10 && addr.IsRoutable())\n+            if (addr.nTime > nSince && !peer->m_getaddr_sent && vAddr.size() <= 10 && addr.IsRoutable())\n             {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 248,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "468db1469382ee11380f0667454b86ec1903eca8",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "style nit:\r\n```suggestion\r\n            if (addr.nTime > nSince && !peer->m_getaddr_sent && vAddr.size() <= 10 && addr.IsRoutable()) {\r\n```",
    "created_at": "2021-04-03T01:24:18Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r606563197",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606563197"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r606563197"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606563197/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 2741,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 2742,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/607837015",
    "pull_request_review_id": 628954170,
    "id": 607837015,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNzgzNzAxNQ==",
    "diff_hunk": "@@ -1483,59 +1551,49 @@ void PeerManagerImpl::RelayTransaction(const uint256& txid, const uint256& wtxid\n     });\n }\n \n-/**\n- * Relay (gossip) an address to a few randomly chosen nodes.\n- * We choose the same nodes within a given 24h window (if the list of connected\n- * nodes does not change) and we don't relay to nodes that already know an\n- * address. So within 24h we will likely relay a given address once. This is to\n- * prevent a peer from unjustly giving their address better propagation by sending\n- * it to us repeatedly.\n- * @param[in] originator The peer that sent us the address. We don't want to relay it back.\n- * @param[in] addr Address to relay.\n- * @param[in] fReachable Whether the address' network is reachable. We relay unreachable\n- * addresses less.\n- * @param[in] connman Connection manager to choose nodes to relay to.\n- */\n-static void RelayAddress(const CNode& originator,\n-                         const CAddress& addr,\n-                         bool fReachable,\n-                         const CConnman& connman)\n+void PeerManagerImpl::RelayAddress(NodeId originator,\n+                                   const CAddress& addr,\n+                                   bool fReachable)\n {\n+    // We choose the same nodes within a given 24h window (if the list of connected\n+    // nodes does not change) and we don't relay to nodes that already know an\n+    // address. So within 24h we will likely relay a given address once. This is to\n+    // prevent a peer from unjustly giving their address better propagation by sending\n+    // it to us repeatedly.\n+\n     if (!fReachable && !addr.IsRelayable()) return;\n \n     // Relay to a limited number of other nodes\n     // Use deterministic randomness to send to the same nodes for 24 hours\n     // at a time so the m_addr_knowns of the chosen nodes prevent repeats\n     uint64_t hashAddr = addr.GetHash();\n-    const CSipHasher hasher = connman.GetDeterministicRandomizer(RANDOMIZER_ID_ADDRESS_RELAY).Write(hashAddr << 32).Write((GetTime() + hashAddr) / (24 * 60 * 60));\n+    const CSipHasher hasher = m_connman.GetDeterministicRandomizer(RANDOMIZER_ID_ADDRESS_RELAY).Write(hashAddr << 32).Write((GetTime() + hashAddr) / (24 * 60 * 60));\n     FastRandomContext insecure_rand;\n \n     // Relay reachable addresses to 2 peers. Unreachable addresses are relayed randomly to 1 or 2 peers.\n     unsigned int nRelayNodes = (fReachable || (hasher.Finalize() & 1)) ? 2 : 1;\n \n-    std::array<std::pair<uint64_t, CNode*>,2> best{{{0, nullptr}, {0, nullptr}}};\n+    std::array<std::pair<uint64_t, Peer*>,2> best{{{0, nullptr}, {0, nullptr}}};",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 161,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "468db1469382ee11380f0667454b86ec1903eca8",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed!",
    "created_at": "2021-04-06T13:14:14Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r607837015",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/607837015"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r607837015"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/607837015/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1576,
    "side": "RIGHT",
    "in_reply_to_id": 606562457
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/607838883",
    "pull_request_review_id": 628956816,
    "id": 607838883,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNzgzODg4Mw==",
    "diff_hunk": "@@ -2674,24 +2732,24 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n \n             if (addr.nTime <= 100000000 || addr.nTime > nNow + 10 * 60)\n                 addr.nTime = nNow - 5 * 24 * 60 * 60;\n-            pfrom.AddAddressKnown(addr);\n+            AddAddressKnown(*peer, addr);\n             if (m_banman && (m_banman->IsDiscouraged(addr) || m_banman->IsBanned(addr))) {\n                 // Do not process banned/discouraged addresses beyond remembering we received them\n                 continue;\n             }\n             bool fReachable = IsReachable(addr);\n-            if (addr.nTime > nSince && !pfrom.fGetAddr && vAddr.size() <= 10 && addr.IsRoutable())\n+            if (addr.nTime > nSince && !peer->m_getaddr_sent && vAddr.size() <= 10 && addr.IsRoutable())\n             {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 248,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "468db1469382ee11380f0667454b86ec1903eca8",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-04-06T13:16:43Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r607838883",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/607838883"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r607838883"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/607838883/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 2741,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 2742,
    "side": "RIGHT",
    "in_reply_to_id": 606563197
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/607839921",
    "pull_request_review_id": 628958170,
    "id": 607839921,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNzgzOTkyMQ==",
    "diff_hunk": "@@ -218,7 +241,10 @@ struct Peer {\n     /** Work queue of items requested by this peer **/\n     std::deque<CInv> m_getdata_requests GUARDED_BY(m_getdata_requests_mutex);\n \n-    explicit Peer(NodeId id) : m_id(id) {}\n+    explicit Peer(NodeId id, bool addr_relay)\n+        : m_id(id)\n+        , m_addr_known{addr_relay ? nullptr : std::make_unique<CRollingBloomFilter>(5000, 0.001)}\n+    {}",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 45,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "468db1469382ee11380f0667454b86ec1903eca8",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good question! I'm not an expert on clang-format.",
    "created_at": "2021-04-06T13:18:01Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r607839921",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/607839921"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r607839921"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/607839921/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 244,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 245,
    "side": "RIGHT",
    "in_reply_to_id": 606517593
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/607841267",
    "pull_request_review_id": 628959964,
    "id": 607841267,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNzg0MTI2Nw==",
    "diff_hunk": "@@ -218,7 +241,10 @@ struct Peer {\n     /** Work queue of items requested by this peer **/\n     std::deque<CInv> m_getdata_requests GUARDED_BY(m_getdata_requests_mutex);\n \n-    explicit Peer(NodeId id) : m_id(id) {}\n+    explicit Peer(NodeId id, bool addr_relay)\n+        : m_id(id)\n+        , m_addr_known{addr_relay ? nullptr : std::make_unique<CRollingBloomFilter>(5000, 0.001)}\n+    {}",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 45,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "468db1469382ee11380f0667454b86ec1903eca8",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Perhaps `BCIS_BeforeComma`? (https://clang.llvm.org/docs/ClangFormatStyleOptions.html)",
    "created_at": "2021-04-06T13:19:37Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r607841267",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/607841267"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r607841267"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/607841267/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 244,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 245,
    "side": "RIGHT",
    "in_reply_to_id": 606517593
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611260357",
    "pull_request_review_id": 633064488,
    "id": 611260357,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTI2MDM1Nw==",
    "diff_hunk": "@@ -218,7 +241,10 @@ struct Peer {\n     /** Work queue of items requested by this peer **/\n     std::deque<CInv> m_getdata_requests GUARDED_BY(m_getdata_requests_mutex);\n \n-    explicit Peer(NodeId id) : m_id(id) {}\n+    explicit Peer(NodeId id, bool addr_relay)",
    "path": "src/net_processing.cpp",
    "position": 40,
    "original_position": 42,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "c538369123b6c69358649255815cf331b2c39f52",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It's counterintuitive to me that we don't relay addresses when `addr_relay` is true - I would have expected the opposite, or a different name like `disable_addr_relay`.",
    "created_at": "2021-04-11T23:21:15Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r611260357",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611260357"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r611260357"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611260357/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 242,
    "original_line": 242,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611261881",
    "pull_request_review_id": 633064488,
    "id": 611261881,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTI2MTg4MQ==",
    "diff_hunk": "@@ -3566,20 +3622,20 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         // to users' AddrMan and later request them by sending getaddr messages.\n         // Making nodes which are behind NAT and can only make outgoing connections ignore\n         // the getaddr message mitigates the attack.\n-        if (!pfrom.IsInboundConn()) {\n+        if (!RelayAddrsWithPeer(*peer)) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 269,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "c538369123b6c69358649255815cf331b2c39f52",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This seems incorrect to me: The old code was specifically ignoring GETADDR requests from all outbound connections (for reasons explained in the comment above this line), the new code only ignores from block-relay-only connections. ",
    "created_at": "2021-04-11T23:34:07Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r611261881",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611261881"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r611261881"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611261881/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3625,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611264116",
    "pull_request_review_id": 633064488,
    "id": 611264116,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTI2NDExNg==",
    "diff_hunk": "@@ -657,37 +632,6 @@ class CNode\n         nRefCount--;\n     }\n \n-    void AddAddressKnown(const CAddress& _addr)\n-    {\n-        assert(m_addr_known);\n-        m_addr_known->insert(_addr.GetKey());\n-    }\n-\n-    /**\n-     * Whether the peer supports the address. For example, a peer that does not\n-     * implement BIP155 cannot receive Tor v3 addresses because it requires\n-     * ADDRv2 (BIP155) encoding.\n-     */\n-    bool IsAddrCompatible(const CAddress& addr) const\n-    {\n-        return m_wants_addrv2 || addr.IsAddrV1Compatible();\n-    }\n-\n-    void PushAddress(const CAddress& _addr, FastRandomContext &insecure_rand)\n-    {\n-        // Known checking here is only to save space from duplicates.\n-        // SendMessages will filter it again for knowns that were added\n-        // after addresses were pushed.\n-        assert(m_addr_known);\n-        if (_addr.IsValid() && !m_addr_known->contains(_addr.GetKey()) && IsAddrCompatible(_addr)) {",
    "path": "src/net.h",
    "position": 84,
    "original_position": 84,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "c538369123b6c69358649255815cf331b2c39f52",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why did you drop the check for `IsAddrCompatible()` in the move? Since `PushAddress()` is called from several places (not only `RelayAddress()` where this is checked seperately) this looks like more than a pure refactor to me.",
    "created_at": "2021-04-11T23:50:33Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r611264116",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611264116"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r611264116"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611264116/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 682,
    "original_line": 682,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611435801",
    "pull_request_review_id": 633279230,
    "id": 611435801,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTQzNTgwMQ==",
    "diff_hunk": "@@ -3566,20 +3622,20 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         // to users' AddrMan and later request them by sending getaddr messages.\n         // Making nodes which are behind NAT and can only make outgoing connections ignore\n         // the getaddr message mitigates the attack.\n-        if (!pfrom.IsInboundConn()) {\n+        if (!RelayAddrsWithPeer(*peer)) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 269,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "c538369123b6c69358649255815cf331b2c39f52",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "oh wow. That's terrible. Thank you for catching this.\r\n\r\nThis was a bad rebase on top of 49c10a9ca40, which combined the two error conditions:\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 690b59476b..859b67755d 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -3521,11 +3521,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\r\n         // Making nodes which are behind NAT and can only make outgoing connections ignore\r\n         // the getaddr message mitigates the attack.\r\n         if (!pfrom.IsInboundConn()) {\r\n-            LogPrint(BCLog::NET, \"Ignoring \\\"getaddr\\\" from outbound connection. peer=%d\\n\", pfrom.GetId());\r\n-            return;\r\n-        }\r\n-        if (!pfrom.RelayAddrsWithConn()) {\r\n-            LogPrint(BCLog::NET, \"Ignoring \\\"getaddr\\\" from block-relay-only connection. peer=%d\\n\", pfrom.GetId());\r\n+            LogPrint(BCLog::NET, \"Ignoring \\\"getaddr\\\" from %s connection. peer=%d\\n\", pfrom.ConnectionTypeAsString(), pfrom.GetId());\r\n             return;\r\n         }\r\n```",
    "created_at": "2021-04-12T08:40:40Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r611435801",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611435801"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r611435801"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611435801/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3625,
    "side": "RIGHT",
    "in_reply_to_id": 611261881
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611472016",
    "pull_request_review_id": 633326541,
    "id": 611472016,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTQ3MjAxNg==",
    "diff_hunk": "@@ -218,7 +241,10 @@ struct Peer {\n     /** Work queue of items requested by this peer **/\n     std::deque<CInv> m_getdata_requests GUARDED_BY(m_getdata_requests_mutex);\n \n-    explicit Peer(NodeId id) : m_id(id) {}\n+    explicit Peer(NodeId id, bool addr_relay)",
    "path": "src/net_processing.cpp",
    "position": 40,
    "original_position": 42,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "c538369123b6c69358649255815cf331b2c39f52",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You're right. The logic here is correct, but the naming is confusing. I've reversed the logic, and added comments to the place where this ctor is called to hopefully make this more intuitive.",
    "created_at": "2021-04-12T09:30:49Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r611472016",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611472016"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r611472016"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611472016/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 242,
    "original_line": 242,
    "side": "RIGHT",
    "in_reply_to_id": 611260357
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611472286",
    "pull_request_review_id": 633326896,
    "id": 611472286,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTQ3MjI4Ng==",
    "diff_hunk": "@@ -657,37 +632,6 @@ class CNode\n         nRefCount--;\n     }\n \n-    void AddAddressKnown(const CAddress& _addr)\n-    {\n-        assert(m_addr_known);\n-        m_addr_known->insert(_addr.GetKey());\n-    }\n-\n-    /**\n-     * Whether the peer supports the address. For example, a peer that does not\n-     * implement BIP155 cannot receive Tor v3 addresses because it requires\n-     * ADDRv2 (BIP155) encoding.\n-     */\n-    bool IsAddrCompatible(const CAddress& addr) const\n-    {\n-        return m_wants_addrv2 || addr.IsAddrV1Compatible();\n-    }\n-\n-    void PushAddress(const CAddress& _addr, FastRandomContext &insecure_rand)\n-    {\n-        // Known checking here is only to save space from duplicates.\n-        // SendMessages will filter it again for knowns that were added\n-        // after addresses were pushed.\n-        assert(m_addr_known);\n-        if (_addr.IsValid() && !m_addr_known->contains(_addr.GetKey()) && IsAddrCompatible(_addr)) {",
    "path": "src/net.h",
    "position": 84,
    "original_position": 84,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "c538369123b6c69358649255815cf331b2c39f52",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is another rebase error. Thank you for catching!",
    "created_at": "2021-04-12T09:31:12Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r611472286",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611472286"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r611472286"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611472286/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 682,
    "original_line": 682,
    "side": "LEFT",
    "in_reply_to_id": 611264116
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611521373",
    "pull_request_review_id": 633392913,
    "id": 611521373,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTUyMTM3Mw==",
    "diff_hunk": "@@ -3566,20 +3622,20 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         // to users' AddrMan and later request them by sending getaddr messages.\n         // Making nodes which are behind NAT and can only make outgoing connections ignore\n         // the getaddr message mitigates the attack.\n-        if (!pfrom.IsInboundConn()) {\n+        if (!RelayAddrsWithPeer(*peer)) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 269,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "c538369123b6c69358649255815cf331b2c39f52",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oh, I see. There should be a functional test for this that would have failed - something which I [once](https://github.com/bitcoin/bitcoin/pull/19315#issuecomment-701571168) wanted to do anyway but then forgot about. I'll  write one soon!",
    "created_at": "2021-04-12T10:46:13Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r611521373",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611521373"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r611521373"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611521373/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3625,
    "side": "RIGHT",
    "in_reply_to_id": 611261881
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611532916",
    "pull_request_review_id": 633407973,
    "id": 611532916,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTUzMjkxNg==",
    "diff_hunk": "@@ -3566,20 +3622,20 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         // to users' AddrMan and later request them by sending getaddr messages.\n         // Making nodes which are behind NAT and can only make outgoing connections ignore\n         // the getaddr message mitigates the attack.\n-        if (!pfrom.IsInboundConn()) {\n+        if (!RelayAddrsWithPeer(*peer)) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 269,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "c538369123b6c69358649255815cf331b2c39f52",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'll very happily review once you open the PR.",
    "created_at": "2021-04-12T11:04:51Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r611532916",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611532916"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r611532916"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611532916/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3625,
    "side": "RIGHT",
    "in_reply_to_id": 611261881
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611926283",
    "pull_request_review_id": 633930457,
    "id": 611926283,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTkyNjI4Mw==",
    "diff_hunk": "@@ -3566,20 +3622,20 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         // to users' AddrMan and later request them by sending getaddr messages.\n         // Making nodes which are behind NAT and can only make outgoing connections ignore\n         // the getaddr message mitigates the attack.\n-        if (!pfrom.IsInboundConn()) {\n+        if (!RelayAddrsWithPeer(*peer)) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 269,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "c538369123b6c69358649255815cf331b2c39f52",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "heads up that I've recently written some similar tests here: https://github.com/bitcoin/bitcoin/pull/21528/files?file-filters%5B%5D=.py#diff-5a9f30817894348260893f195cea07da88271b5e01b1531f0cd839ee85898592R150. I don't think it would cover this exact use case, but just mentioning incase its useful / incase the test improvements could play nice together. ",
    "created_at": "2021-04-12T20:18:52Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r611926283",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611926283"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r611926283"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611926283/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3625,
    "side": "RIGHT",
    "in_reply_to_id": 611261881
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611952434",
    "pull_request_review_id": 633963545,
    "id": 611952434,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTk1MjQzNA==",
    "diff_hunk": "@@ -3566,20 +3622,20 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         // to users' AddrMan and later request them by sending getaddr messages.\n         // Making nodes which are behind NAT and can only make outgoing connections ignore\n         // the getaddr message mitigates the attack.\n-        if (!pfrom.IsInboundConn()) {\n+        if (!RelayAddrsWithPeer(*peer)) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 269,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "c538369123b6c69358649255815cf331b2c39f52",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Cool - I didn't know, I had only looked at the non-test commits in your PR! This use case is the reverse direction (inbound/outbound send the getaddr to our node and get back addrs/nothing) from your tests, so I agree that these belong together.",
    "created_at": "2021-04-12T21:02:34Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r611952434",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611952434"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r611952434"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611952434/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3625,
    "side": "RIGHT",
    "in_reply_to_id": 611261881
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/622796211",
    "pull_request_review_id": 647885360,
    "id": 622796211,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMjc5NjIxMQ==",
    "diff_hunk": "@@ -3566,20 +3622,20 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         // to users' AddrMan and later request them by sending getaddr messages.\n         // Making nodes which are behind NAT and can only make outgoing connections ignore\n         // the getaddr message mitigates the attack.\n-        if (!pfrom.IsInboundConn()) {\n+        if (!RelayAddrsWithPeer(*peer)) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 269,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "c538369123b6c69358649255815cf331b2c39f52",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "More tests added in #21707",
    "created_at": "2021-04-29T07:25:02Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r622796211",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/622796211"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r622796211"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/622796211/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3625,
    "side": "RIGHT",
    "in_reply_to_id": 611261881
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623430587",
    "pull_request_review_id": 648690068,
    "id": 623430587,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzQzMDU4Nw==",
    "diff_hunk": "@@ -4147,72 +4202,72 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::mic\n     }\n }\n \n-void PeerManagerImpl::MaybeSendAddr(CNode& node, std::chrono::microseconds current_time)\n+void PeerManagerImpl::MaybeSendAddr(CNode& node, Peer& peer, std::chrono::microseconds current_time)\n {\n     // Nothing to do for non-address-relay peers\n-    if (!node.RelayAddrsWithConn()) return;\n+    if (!RelayAddrsWithPeer(peer)) return;\n \n-    assert(node.m_addr_known);\n+    assert(peer.m_addr_known);",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 253,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "7741ca59593361c51df48e2b83500a3e2dae8563",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "this assert seems unnecessary / not useful. the previous line returns early if `m_addr_known` is not present. ",
    "created_at": "2021-04-29T21:59:42Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r623430587",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623430587"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r623430587"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623430587/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4210,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623434604",
    "pull_request_review_id": 648690068,
    "id": 623434604,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzQzNDYwNA==",
    "diff_hunk": "@@ -150,6 +150,8 @@ static constexpr uint32_t MAX_GETCFILTERS_SIZE = 1000;\n static constexpr uint32_t MAX_GETCFHEADERS_SIZE = 2000;\n /** the maximum percentage of addresses from our addrman to return in response to a getaddr message. */\n static constexpr size_t MAX_PCT_ADDR_TO_SEND = 23;\n+/** The maximum number of new addresses to relay to a peer in an ADDR message. */",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "7741ca59593361c51df48e2b83500a3e2dae8563",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "isn't this more like... \"The maximum number of addresses permitted in an ADDR message\"? because we also enforce on incoming ADDR messages. I'm not sure what the \"new\" is supposed to indicate in this comment. ",
    "created_at": "2021-04-29T22:08:35Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r623434604",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623434604"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r623434604"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623434604/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 153,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623440472",
    "pull_request_review_id": 648690068,
    "id": 623440472,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzQ0MDQ3Mg==",
    "diff_hunk": "@@ -210,6 +212,25 @@ struct Peer {\n     /** Whether a ping has been requested by the user */\n     std::atomic<bool> m_ping_queued{false};\n \n+    /** A vector of addresses to send to the peer, limited to MAX_ADDR_TO_SEND. */\n+    std::vector<CAddress> vAddrToSend;\n+    /** Probabilistic filter of addresses that this peer already knows.\n+     *  Used to avoid relaying addresses to this peer more than once. */\n+    const std::unique_ptr<CRollingBloomFilter> m_addr_known;\n+    /** Whether a getaddr request to this peer is outstanding. */\n+    bool fGetAddr{false};\n+    /** Guards address sending timers. */\n+    mutable Mutex m_addr_send_times_mutex;\n+    /** Time point to send the next ADDR message to this peer. */\n+    std::chrono::microseconds m_next_addr_send GUARDED_BY(m_addr_send_times_mutex){0};\n+    /** Time point to possibly re-announce our local address to this peer. */\n+    std::chrono::microseconds m_next_local_addr_send GUARDED_BY(m_addr_send_times_mutex){0};\n+    /** Whether the peer has signaled support for receiving ADDRv2 (BIP155)\n+     *  messages, implying a preference to receive ADDRv2 instead of ADDR ones. */",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 27,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "7741ca59593361c51df48e2b83500a3e2dae8563",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I know you just moved this comment, but s/implying/indicating? sending a message is pretty explicit =P  \r\n",
    "created_at": "2021-04-29T22:22:05Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r623440472",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623440472"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r623440472"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623440472/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 229,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623485685",
    "pull_request_review_id": 648690068,
    "id": 623485685,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzQ4NTY4NQ==",
    "diff_hunk": "@@ -626,6 +650,39 @@ static CNodeState *State(NodeId pnode) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {\n     return &it->second;\n }\n \n+static bool RelayAddrsWithPeer(const Peer& peer) { return peer.m_addr_known != nullptr; }\n+\n+/**\n+ * Whether the peer supports the address. For example, a peer that does not\n+ * implement BIP155 cannot receive Tor v3 addresses because it requires\n+ * ADDRv2 (BIP155) encoding.\n+ */\n+static bool IsAddrCompatible(const Peer& peer, const CAddress& addr)\n+{\n+    return peer.m_wants_addrv2 || addr.IsAddrV1Compatible();\n+}\n+\n+static void AddAddressKnown(Peer& peer, const CAddress& addr)\n+{\n+    assert(peer.m_addr_known);\n+    peer.m_addr_known->insert(addr.GetKey());\n+}\n+\n+static void PushAddress(Peer& peer, const CAddress& addr, FastRandomContext& insecure_rand)",
    "path": "src/net_processing.cpp",
    "position": 90,
    "original_position": 78,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "7741ca59593361c51df48e2b83500a3e2dae8563",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm curious- why did you opt to make this a standalone function that takes in a peer vs a member on peer itself (like it previously was on CNode)? ",
    "created_at": "2021-04-29T23:26:44Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r623485685",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623485685"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r623485685"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623485685/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 674,
    "original_line": 674,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623776939",
    "pull_request_review_id": 649085564,
    "id": 623776939,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzc3NjkzOQ==",
    "diff_hunk": "@@ -626,6 +650,39 @@ static CNodeState *State(NodeId pnode) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {\n     return &it->second;\n }\n \n+static bool RelayAddrsWithPeer(const Peer& peer) { return peer.m_addr_known != nullptr; }\n+\n+/**\n+ * Whether the peer supports the address. For example, a peer that does not\n+ * implement BIP155 cannot receive Tor v3 addresses because it requires\n+ * ADDRv2 (BIP155) encoding.\n+ */\n+static bool IsAddrCompatible(const Peer& peer, const CAddress& addr)\n+{\n+    return peer.m_wants_addrv2 || addr.IsAddrV1Compatible();\n+}\n+\n+static void AddAddressKnown(Peer& peer, const CAddress& addr)\n+{\n+    assert(peer.m_addr_known);\n+    peer.m_addr_known->insert(addr.GetKey());\n+}\n+\n+static void PushAddress(Peer& peer, const CAddress& addr, FastRandomContext& insecure_rand)",
    "path": "src/net_processing.cpp",
    "position": 90,
    "original_position": 78,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "7741ca59593361c51df48e2b83500a3e2dae8563",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Because `Peer` isn't a class. It's a data structure containing information about a Peer, which PeerManager acts on.\r\n\r\nI know the distinction is blurry in C++, but I think it's generally better to treat things as purely a data structure (which carries data that is acted on by external logic) or purely a class (where the data is private and internal logic exists behind well-defined public interface functions). Mixing the two, where some logic is contained within the object but external logic can also reach into the object and manipulate the data, is confusing.",
    "created_at": "2021-04-30T10:28:29Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r623776939",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623776939"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r623776939"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623776939/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 674,
    "original_line": 674,
    "side": "RIGHT",
    "in_reply_to_id": 623485685
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623777163",
    "pull_request_review_id": 649085820,
    "id": 623777163,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzc3NzE2Mw==",
    "diff_hunk": "@@ -210,6 +212,25 @@ struct Peer {\n     /** Whether a ping has been requested by the user */\n     std::atomic<bool> m_ping_queued{false};\n \n+    /** A vector of addresses to send to the peer, limited to MAX_ADDR_TO_SEND. */\n+    std::vector<CAddress> vAddrToSend;\n+    /** Probabilistic filter of addresses that this peer already knows.\n+     *  Used to avoid relaying addresses to this peer more than once. */\n+    const std::unique_ptr<CRollingBloomFilter> m_addr_known;\n+    /** Whether a getaddr request to this peer is outstanding. */\n+    bool fGetAddr{false};\n+    /** Guards address sending timers. */\n+    mutable Mutex m_addr_send_times_mutex;\n+    /** Time point to send the next ADDR message to this peer. */\n+    std::chrono::microseconds m_next_addr_send GUARDED_BY(m_addr_send_times_mutex){0};\n+    /** Time point to possibly re-announce our local address to this peer. */\n+    std::chrono::microseconds m_next_local_addr_send GUARDED_BY(m_addr_send_times_mutex){0};\n+    /** Whether the peer has signaled support for receiving ADDRv2 (BIP155)\n+     *  messages, implying a preference to receive ADDRv2 instead of ADDR ones. */",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 27,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "7741ca59593361c51df48e2b83500a3e2dae8563",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed!",
    "created_at": "2021-04-30T10:28:52Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r623777163",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623777163"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r623777163"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623777163/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 229,
    "side": "RIGHT",
    "in_reply_to_id": 623440472
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623777176",
    "pull_request_review_id": 649085841,
    "id": 623777176,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzc3NzE3Ng==",
    "diff_hunk": "@@ -150,6 +150,8 @@ static constexpr uint32_t MAX_GETCFILTERS_SIZE = 1000;\n static constexpr uint32_t MAX_GETCFHEADERS_SIZE = 2000;\n /** the maximum percentage of addresses from our addrman to return in response to a getaddr message. */\n static constexpr size_t MAX_PCT_ADDR_TO_SEND = 23;\n+/** The maximum number of new addresses to relay to a peer in an ADDR message. */",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "7741ca59593361c51df48e2b83500a3e2dae8563",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Much better. Thanks.",
    "created_at": "2021-04-30T10:28:54Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r623777176",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623777176"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r623777176"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623777176/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 153,
    "side": "RIGHT",
    "in_reply_to_id": 623434604
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623777191",
    "pull_request_review_id": 649085859,
    "id": 623777191,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzc3NzE5MQ==",
    "diff_hunk": "@@ -4147,72 +4202,72 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::mic\n     }\n }\n \n-void PeerManagerImpl::MaybeSendAddr(CNode& node, std::chrono::microseconds current_time)\n+void PeerManagerImpl::MaybeSendAddr(CNode& node, Peer& peer, std::chrono::microseconds current_time)\n {\n     // Nothing to do for non-address-relay peers\n-    if (!node.RelayAddrsWithConn()) return;\n+    if (!RelayAddrsWithPeer(peer)) return;\n \n-    assert(node.m_addr_known);\n+    assert(peer.m_addr_known);",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 253,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "7741ca59593361c51df48e2b83500a3e2dae8563",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good point. Removed!",
    "created_at": "2021-04-30T10:28:55Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r623777191",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623777191"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r623777191"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623777191/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4210,
    "side": "RIGHT",
    "in_reply_to_id": 623430587
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623777241",
    "pull_request_review_id": 649085926,
    "id": 623777241,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzc3NzI0MQ==",
    "diff_hunk": "@@ -617,6 +652,39 @@ static CNodeState *State(NodeId pnode) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {\n     return &it->second;\n }\n \n+static bool RelayAddrsWithPeer(const Peer& peer) { return peer.m_addr_known != nullptr; }",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 71,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "468db1469382ee11380f0667454b86ec1903eca8",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2021-04-30T10:29:00Z",
    "updated_at": "2021-04-30T10:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r623777241",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623777241"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r623777241"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623777241/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 653,
    "side": "RIGHT",
    "in_reply_to_id": 605911247
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/624181122",
    "pull_request_review_id": 649602010,
    "id": 624181122,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDE4MTEyMg==",
    "diff_hunk": "@@ -626,6 +650,39 @@ static CNodeState *State(NodeId pnode) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {\n     return &it->second;\n }\n \n+static bool RelayAddrsWithPeer(const Peer& peer) { return peer.m_addr_known != nullptr; }\n+\n+/**\n+ * Whether the peer supports the address. For example, a peer that does not\n+ * implement BIP155 cannot receive Tor v3 addresses because it requires\n+ * ADDRv2 (BIP155) encoding.\n+ */\n+static bool IsAddrCompatible(const Peer& peer, const CAddress& addr)\n+{\n+    return peer.m_wants_addrv2 || addr.IsAddrV1Compatible();\n+}\n+\n+static void AddAddressKnown(Peer& peer, const CAddress& addr)\n+{\n+    assert(peer.m_addr_known);\n+    peer.m_addr_known->insert(addr.GetKey());\n+}\n+\n+static void PushAddress(Peer& peer, const CAddress& addr, FastRandomContext& insecure_rand)",
    "path": "src/net_processing.cpp",
    "position": 90,
    "original_position": 78,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "7741ca59593361c51df48e2b83500a3e2dae8563",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "ok gotcha, thanks!",
    "created_at": "2021-04-30T20:35:33Z",
    "updated_at": "2021-04-30T20:35:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r624181122",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/624181122"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r624181122"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/624181122/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 674,
    "original_line": 674,
    "side": "RIGHT",
    "in_reply_to_id": 623485685
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637227476",
    "pull_request_review_id": 665881137,
    "id": 637227476,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNzIyNzQ3Ng==",
    "diff_hunk": "@@ -954,7 +1014,9 @@ void PeerManagerImpl::InitializeNode(CNode *pnode)\n         assert(m_txrequest.Count(nodeid) == 0);\n     }\n     {\n-        PeerRef peer = std::make_shared<Peer>(nodeid);\n+        // Addr relay is disabled for outbound block-relay-only peers to\n+        // prevent adversaries from inferring these links from addr traffic.\n+        PeerRef peer = std::make_shared<Peer>(nodeid, /* addr_relay = */ !pnode->IsBlockOnlyConn());",
    "path": "src/net_processing.cpp",
    "position": 115,
    "original_position": 106,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "76568a3351418c878d30ba0373cf76988f93f90e",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Using `!IsBlockOnlyConn()` as proxy for \"should we relay addresses\" goes a bit in the opposite direction as the earlier connection types refactors went in. Any reason not just keep the function name (I realize there's a derived one with that name added, but it's ultimately still relying on this test.\r\n\r\nI don't have a particularly strong opinion here; I'm just noticing some flipflopping.",
    "created_at": "2021-05-21T20:54:51Z",
    "updated_at": "2021-05-21T21:07:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r637227476",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637227476"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r637227476"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637227476/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1019,
    "original_line": 1019,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637869571",
    "pull_request_review_id": 666635127,
    "id": 637869571,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNzg2OTU3MQ==",
    "diff_hunk": "@@ -954,7 +1014,9 @@ void PeerManagerImpl::InitializeNode(CNode *pnode)\n         assert(m_txrequest.Count(nodeid) == 0);\n     }\n     {\n-        PeerRef peer = std::make_shared<Peer>(nodeid);\n+        // Addr relay is disabled for outbound block-relay-only peers to\n+        // prevent adversaries from inferring these links from addr traffic.\n+        PeerRef peer = std::make_shared<Peer>(nodeid, /* addr_relay = */ !pnode->IsBlockOnlyConn());",
    "path": "src/net_processing.cpp",
    "position": 115,
    "original_position": 106,
    "commit_id": "0829516d1f3868c1c2ba507feee718325d81e329",
    "original_commit_id": "76568a3351418c878d30ba0373cf76988f93f90e",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This logic of checking `IsBlockOnlyConn()` is used only when calling the `Peer` ctor. After that, we use the `RelayAddrsWithPeer()`, which replaces the old `RelayAddrsWithConn()` function. That's a clearer separation between net and net_processing since we only check the connection type when initializing the Peer object.",
    "created_at": "2021-05-24T11:11:19Z",
    "updated_at": "2021-05-24T11:11:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r637869571",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637869571"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21186#discussion_r637869571"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/637869571/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1019,
    "original_line": 1019,
    "side": "RIGHT",
    "in_reply_to_id": 637227476
  }
]