mikegogulski,2011-07-26T05:53:09Z,"If merged, I believe that f5f97fa would close https://github.com/bitcoin/bitcoin/issues/247\n",https://github.com/bitcoin/bitcoin/pull/431#issuecomment-1651880,1651880,
gavinandresen,2011-07-26T07:22:06Z,"This was discussed to death a few months ago.\n\n10000000.000000009 will be correctly rounded to 10000000.00000001 by bitcoin, so there is no issue.\n\nGoing the other way, bitcoin always gives precise values.\n\nIf you want all of your json strings to look pretty, use the latest version of simplejson that fully supports Decimal JSON values; e.g.\n\n> > > import decimal\n> > > import simplejson\n>",https://github.com/bitcoin/bitcoin/pull/431#issuecomment-1652222,1652222,
sipa,2011-07-26T09:09:00Z,"I definitely agree that if we ever make a backward-incompatible upgrade to the RPC protocol, amounts encoded as strings should be part of it. However, as each new protocol version introduces legacy for many versions to come, we should be careful about introducing new ones.\n\nMaybe the time is indeed ripe for a new RPC version. In that case, i would prefer to do a larger overhaul, including renami",https://github.com/bitcoin/bitcoin/pull/431#issuecomment-1652720,1652720,
genjix,2011-07-26T13:13:00Z,"Instead of converting the value to a string by yourself, you should use boost::lexical_cast as I'm doing here,\n\nhttps://gitorious.org/intersango/bitcoind/commit/665294c486f1eba1bcd84025a42fa5e2886a89a9/diffs\n",https://github.com/bitcoin/bitcoin/pull/431#issuecomment-1653897,1653897,
cdhowie,2011-07-26T20:07:28Z,"> 10000000.000000009 will be correctly rounded to 10000000.00000001 by bitcoin, so there is no issue.\n\nThere is no information in the JSON specification regarding how numbers should be stored; a JSON implementation is free to use single-precision floating point, and that would not be a bug with that implementation.  I repeat, we should not be conveying financial information using an encoded nume",https://github.com/bitcoin/bitcoin/pull/431#issuecomment-1657423,1657423,
cdhowie,2011-07-26T20:11:14Z,(Fixed conversions to double still occurring.)\n,https://github.com/bitcoin/bitcoin/pull/431#issuecomment-1657452,1657452,
gavinandresen,2011-07-26T21:25:28Z,"If you can find a reasonably-widely-used JSON implementation that cannot use double-precision floating point please send me a pointer.  I'm strongly against adding 100 more lines of code because ""there might theoretically be a bug on hardware or software that we haven't actually ever encountered and may or may not exist.""\n",https://github.com/bitcoin/bitcoin/pull/431#issuecomment-1657960,1657960,
jgarzik,2011-08-04T19:17:43Z,"See https://github.com/bitcoin/bitcoin/pull/452\n\nI think some amount of API versioning is fair, even outside this decimal-vs-float discussion.\n",https://github.com/bitcoin/bitcoin/pull/431#issuecomment-1729841,1729841,
alexwaters,2011-09-30T08:05:35Z,"The pull has become unmergeable (without conflicts), and will be closed in 15 days from this message if action is not taken.\n\nTo prevent closure, kindly rebase the pull to merge cleanly with the current codebase. If a time extension is needed, please respond to this comment or contact QA@BitcoinTesting.org.\n",https://github.com/bitcoin/bitcoin/pull/431#issuecomment-2247122,2247122,
luke-jr,2011-10-12T18:11:28Z,"Amounts shouldn't be strings anyway, they should be Numbers.\n",https://github.com/bitcoin/bitcoin/pull/431#issuecomment-2382481,2382481,
cdhowie,2011-10-12T21:02:46Z,"Their type is numeric yes.  If the devs are unwilling to incorporate an integral (satoshi-based) API then a less intrusive change would be to represent the numeric data as strings.  In other words, in the order of best to worst:\n1. Convey BTC amounts as integers, where the unit 1 is 0.00000001 BTC.\n2. Convey BTC amounts as strings representing fractional numbers.\n3. Convey BTC amounts as fracti",https://github.com/bitcoin/bitcoin/pull/431#issuecomment-2386943,2386943,
gavinandresen,2011-10-12T21:22:59Z,Do you really want to have this argument AGAIN?\n\nResponding to your 1/2/3:\n1. JSON does not have an integer type.  It just has Number.\n2. JSON Numbers ARE strings as they are sent across the wire.\n3. The JSON Number type on EVERY IMPLEMENTATION OF JSON THAT ANYBODY CAN FIND is precise enough to represent every single possible bitcoin amount without rounding errors.\n,https://github.com/bitcoin/bitcoin/pull/431#issuecomment-2387174,2387174,
