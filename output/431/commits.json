[
  {
    "sha": "7f5ed2218455aa03cd012331dc5523fa44cb2cf9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZjVlZDIyMTg0NTVhYTAzY2QwMTIzMzFkYzU1MjNmYTQ0Y2IyY2Y5",
    "commit": {
      "author": {
        "name": "Chris Howie",
        "email": "me@chrishowie.com",
        "date": "2011-07-26T01:53:58Z"
      },
      "committer": {
        "name": "Chris Howie",
        "email": "me@chrishowie.com",
        "date": "2011-07-26T03:01:51Z"
      },
      "message": "Add RPC API versioning capability",
      "tree": {
        "sha": "82ab9565774214b6deb5df0cb7c3bd057fe51de3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/82ab9565774214b6deb5df0cb7c3bd057fe51de3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7f5ed2218455aa03cd012331dc5523fa44cb2cf9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f5ed2218455aa03cd012331dc5523fa44cb2cf9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7f5ed2218455aa03cd012331dc5523fa44cb2cf9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f5ed2218455aa03cd012331dc5523fa44cb2cf9/comments",
    "author": {
      "login": "cdhowie",
      "id": 354641,
      "node_id": "MDQ6VXNlcjM1NDY0MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/354641?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdhowie",
      "html_url": "https://github.com/cdhowie",
      "followers_url": "https://api.github.com/users/cdhowie/followers",
      "following_url": "https://api.github.com/users/cdhowie/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdhowie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdhowie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdhowie/subscriptions",
      "organizations_url": "https://api.github.com/users/cdhowie/orgs",
      "repos_url": "https://api.github.com/users/cdhowie/repos",
      "events_url": "https://api.github.com/users/cdhowie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdhowie/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cdhowie",
      "id": 354641,
      "node_id": "MDQ6VXNlcjM1NDY0MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/354641?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdhowie",
      "html_url": "https://github.com/cdhowie",
      "followers_url": "https://api.github.com/users/cdhowie/followers",
      "following_url": "https://api.github.com/users/cdhowie/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdhowie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdhowie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdhowie/subscriptions",
      "organizations_url": "https://api.github.com/users/cdhowie/orgs",
      "repos_url": "https://api.github.com/users/cdhowie/repos",
      "events_url": "https://api.github.com/users/cdhowie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdhowie/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f08736405e98d0f16ec294606dda782043d5ab3d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f08736405e98d0f16ec294606dda782043d5ab3d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f08736405e98d0f16ec294606dda782043d5ab3d"
      }
    ],
    "stats": {
      "total": 125,
      "additions": 84,
      "deletions": 41
    },
    "files": [
      {
        "sha": "0b680790a2c0587b72eb086a800a6038648b35f5",
        "filename": "src/rpc.cpp",
        "status": "modified",
        "additions": 84,
        "deletions": 41,
        "changes": 125,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f5ed2218455aa03cd012331dc5523fa44cb2cf9/src/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f5ed2218455aa03cd012331dc5523fa44cb2cf9/src/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc.cpp?ref=7f5ed2218455aa03cd012331dc5523fa44cb2cf9",
        "patch": "@@ -33,7 +33,7 @@ using namespace boost::asio;\n using namespace json_spirit;\n \n void ThreadRPCServer2(void* parg);\n-typedef Value(*rpcfn_type)(const Array& params, bool fHelp);\n+typedef Value(*rpcfn_type)(const Array& params, int api_version, bool fHelp);\n extern map<string, rpcfn_type> mapCallTable;\n \n \n@@ -108,7 +108,7 @@ string AccountFromValue(const Value& value)\n ///\n \n \n-Value help(const Array& params, bool fHelp)\n+Value help(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() > 1)\n         throw runtime_error(\n@@ -136,7 +136,7 @@ Value help(const Array& params, bool fHelp)\n             Array params;\n             rpcfn_type pfn = (*mi).second;\n             if (setDone.insert(pfn).second)\n-                (*pfn)(params, true);\n+                (*pfn)(params, api_version, true);\n         }\n         catch (std::exception& e)\n         {\n@@ -155,7 +155,7 @@ Value help(const Array& params, bool fHelp)\n }\n \n \n-Value stop(const Array& params, bool fHelp)\n+Value stop(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() != 0)\n         throw runtime_error(\n@@ -168,7 +168,7 @@ Value stop(const Array& params, bool fHelp)\n }\n \n \n-Value getblockcount(const Array& params, bool fHelp)\n+Value getblockcount(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() != 0)\n         throw runtime_error(\n@@ -179,7 +179,7 @@ Value getblockcount(const Array& params, bool fHelp)\n }\n \n \n-Value getblocknumber(const Array& params, bool fHelp)\n+Value getblocknumber(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() != 0)\n         throw runtime_error(\n@@ -190,7 +190,7 @@ Value getblocknumber(const Array& params, bool fHelp)\n }\n \n \n-Value getconnectioncount(const Array& params, bool fHelp)\n+Value getconnectioncount(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() != 0)\n         throw runtime_error(\n@@ -227,7 +227,7 @@ double GetDifficulty()\n     return dDiff;\n }\n \n-Value getdifficulty(const Array& params, bool fHelp)\n+Value getdifficulty(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() != 0)\n         throw runtime_error(\n@@ -238,7 +238,7 @@ Value getdifficulty(const Array& params, bool fHelp)\n }\n \n \n-Value getgenerate(const Array& params, bool fHelp)\n+Value getgenerate(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() != 0)\n         throw runtime_error(\n@@ -249,7 +249,7 @@ Value getgenerate(const Array& params, bool fHelp)\n }\n \n \n-Value setgenerate(const Array& params, bool fHelp)\n+Value setgenerate(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() < 1 || params.size() > 2)\n         throw runtime_error(\n@@ -277,7 +277,7 @@ Value setgenerate(const Array& params, bool fHelp)\n }\n \n \n-Value gethashespersec(const Array& params, bool fHelp)\n+Value gethashespersec(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() != 0)\n         throw runtime_error(\n@@ -290,7 +290,7 @@ Value gethashespersec(const Array& params, bool fHelp)\n }\n \n \n-Value getinfo(const Array& params, bool fHelp)\n+Value getinfo(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() != 0)\n         throw runtime_error(\n@@ -306,16 +306,17 @@ Value getinfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"generate\",      (bool)fGenerateBitcoins));\n     obj.push_back(Pair(\"genproclimit\",  (int)(fLimitProcessors ? nLimitProcessors : -1)));\n     obj.push_back(Pair(\"difficulty\",    (double)GetDifficulty()));\n-    obj.push_back(Pair(\"hashespersec\",  gethashespersec(params, false)));\n+    obj.push_back(Pair(\"hashespersec\",  gethashespersec(params, api_version, false)));\n     obj.push_back(Pair(\"testnet\",       fTestNet));\n     obj.push_back(Pair(\"keypoololdest\", (boost::int64_t)pwalletMain->GetOldestKeyPoolTime()));\n     obj.push_back(Pair(\"paytxfee\",      ValueFromAmount(nTransactionFee)));\n     obj.push_back(Pair(\"errors\",        GetWarnings(\"statusbar\")));\n+    obj.push_back(Pair(\"api_version\",   api_version));\n     return obj;\n }\n \n \n-Value getnewaddress(const Array& params, bool fHelp)\n+Value getnewaddress(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() > 1)\n         throw runtime_error(\n@@ -382,7 +383,7 @@ string GetAccountAddress(string strAccount, bool bForceNew=false)\n     return strAddress;\n }\n \n-Value getaccountaddress(const Array& params, bool fHelp)\n+Value getaccountaddress(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() != 1)\n         throw runtime_error(\n@@ -406,7 +407,7 @@ Value getaccountaddress(const Array& params, bool fHelp)\n \n \n \n-Value setaccount(const Array& params, bool fHelp)\n+Value setaccount(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() < 1 || params.size() > 2)\n         throw runtime_error(\n@@ -443,7 +444,7 @@ Value setaccount(const Array& params, bool fHelp)\n }\n \n \n-Value getaccount(const Array& params, bool fHelp)\n+Value getaccount(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() != 1)\n         throw runtime_error(\n@@ -463,7 +464,7 @@ Value getaccount(const Array& params, bool fHelp)\n }\n \n \n-Value getaddressesbyaccount(const Array& params, bool fHelp)\n+Value getaddressesbyaccount(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() != 1)\n         throw runtime_error(\n@@ -492,7 +493,7 @@ Value getaddressesbyaccount(const Array& params, bool fHelp)\n     return ret;\n }\n \n-Value settxfee(const Array& params, bool fHelp)\n+Value settxfee(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() < 1 || params.size() > 1)\n         throw runtime_error(\n@@ -508,7 +509,7 @@ Value settxfee(const Array& params, bool fHelp)\n     return true;\n }\n \n-Value sendtoaddress(const Array& params, bool fHelp)\n+Value sendtoaddress(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() < 2 || params.size() > 4)\n         throw runtime_error(\n@@ -538,7 +539,7 @@ Value sendtoaddress(const Array& params, bool fHelp)\n }\n \n \n-Value getreceivedbyaddress(const Array& params, bool fHelp)\n+Value getreceivedbyaddress(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() < 1 || params.size() > 2)\n         throw runtime_error(\n@@ -600,7 +601,7 @@ void GetAccountPubKeys(string strAccount, set<CScript>& setPubKey)\n }\n \n \n-Value getreceivedbyaccount(const Array& params, bool fHelp)\n+Value getreceivedbyaccount(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() < 1 || params.size() > 2)\n         throw runtime_error(\n@@ -672,7 +673,7 @@ int64 GetAccountBalance(const string& strAccount, int nMinDepth)\n }\n \n \n-Value getbalance(const Array& params, bool fHelp)\n+Value getbalance(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() < 0 || params.size() > 2)\n         throw runtime_error(\n@@ -723,7 +724,7 @@ Value getbalance(const Array& params, bool fHelp)\n }\n \n \n-Value movecmd(const Array& params, bool fHelp)\n+Value movecmd(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() < 3 || params.size() > 5)\n         throw runtime_error(\n@@ -771,7 +772,7 @@ Value movecmd(const Array& params, bool fHelp)\n }\n \n \n-Value sendfrom(const Array& params, bool fHelp)\n+Value sendfrom(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() < 3 || params.size() > 6)\n         throw runtime_error(\n@@ -809,7 +810,7 @@ Value sendfrom(const Array& params, bool fHelp)\n     return wtx.GetHash().GetHex();\n }\n \n-Value sendmany(const Array& params, bool fHelp)\n+Value sendmany(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() < 2 || params.size() > 4)\n         throw runtime_error(\n@@ -987,7 +988,7 @@ Value ListReceived(const Array& params, bool fByAccounts)\n     return ret;\n }\n \n-Value listreceivedbyaddress(const Array& params, bool fHelp)\n+Value listreceivedbyaddress(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() > 2)\n         throw runtime_error(\n@@ -1003,7 +1004,7 @@ Value listreceivedbyaddress(const Array& params, bool fHelp)\n     return ListReceived(params, false);\n }\n \n-Value listreceivedbyaccount(const Array& params, bool fHelp)\n+Value listreceivedbyaccount(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() > 2)\n         throw runtime_error(\n@@ -1107,7 +1108,7 @@ void AcentryToJSON(const CAccountingEntry& acentry, const string& strAccount, Ar\n     }\n }\n \n-Value listtransactions(const Array& params, bool fHelp)\n+Value listtransactions(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() > 3)\n         throw runtime_error(\n@@ -1174,7 +1175,7 @@ Value listtransactions(const Array& params, bool fHelp)\n     return ret;\n }\n \n-Value listaccounts(const Array& params, bool fHelp)\n+Value listaccounts(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() > 1)\n         throw runtime_error(\n@@ -1230,7 +1231,7 @@ Value listaccounts(const Array& params, bool fHelp)\n     return ret;\n }\n \n-Value gettransaction(const Array& params, bool fHelp)\n+Value gettransaction(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() != 1)\n         throw runtime_error(\n@@ -1267,7 +1268,7 @@ Value gettransaction(const Array& params, bool fHelp)\n }\n \n \n-Value backupwallet(const Array& params, bool fHelp)\n+Value backupwallet(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() != 1)\n         throw runtime_error(\n@@ -1281,7 +1282,7 @@ Value backupwallet(const Array& params, bool fHelp)\n }\n \n \n-Value validateaddress(const Array& params, bool fHelp)\n+Value validateaddress(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() != 1)\n         throw runtime_error(\n@@ -1311,7 +1312,7 @@ Value validateaddress(const Array& params, bool fHelp)\n }\n \n \n-Value getwork(const Array& params, bool fHelp)\n+Value getwork(const Array& params, int api_version, bool fHelp)\n {\n     if (fHelp || params.size() > 1)\n         throw runtime_error(\n@@ -1579,7 +1580,18 @@ static string HTTPReply(int nStatus, const string& strMsg)\n         strMsg.c_str());\n }\n \n-int ReadHTTPStatus(std::basic_istream<char>& stream)\n+string ReadHTTPRequestLine(std::basic_istream<char>& stream)\n+{\n+    string str;\n+    getline(stream, str);\n+    vector<string> vWords;\n+    boost::split(vWords, str, boost::is_any_of(\" \"));\n+    if (vWords.size() < 2)\n+        return \"\";\n+    return vWords[1];\n+}\n+\n+int ReadHTTPResponseStatus(std::basic_istream<char>& stream)\n {\n     string str;\n     getline(stream, str);\n@@ -1615,13 +1627,38 @@ int ReadHTTPHeader(std::basic_istream<char>& stream, map<string, string>& mapHea\n     return nLen;\n }\n \n-int ReadHTTP(std::basic_istream<char>& stream, map<string, string>& mapHeadersRet, string& strMessageRet)\n+bool ReadHTTPRequest(std::basic_istream<char>& stream, string& strUrl, map<string, string>& mapHeadersRet, string& strMessageRet)\n+{\n+    mapHeadersRet.clear();\n+    strMessageRet = \"\";\n+\n+    // Read request URL\n+    strUrl = ReadHTTPRequestLine(stream);\n+    if (strUrl == \"\")\n+        return false;\n+\n+    // Read headers\n+    int nLen = ReadHTTPHeader(stream, mapHeadersRet);\n+    if (nLen < 0 || nLen > MAX_SIZE)\n+        return false;\n+\n+    if (nLen > 0)\n+    {\n+        vector<char> vch(nLen);\n+        stream.read(&vch[0], nLen);\n+        strMessageRet = string(vch.begin(), vch.end());\n+    }\n+\n+    return true;\n+}\n+\n+int ReadHTTPResponse(std::basic_istream<char>& stream, map<string, string>& mapHeadersRet, string& strMessageRet)\n {\n     mapHeadersRet.clear();\n     strMessageRet = \"\";\n \n     // Read status\n-    int nStatus = ReadHTTPStatus(stream);\n+    int nStatus = ReadHTTPResponseStatus(stream);\n \n     // Read header\n     int nLen = ReadHTTPHeader(stream, mapHeadersRet);\n@@ -1900,17 +1937,23 @@ void ThreadRPCServer2(void* parg)\n             continue;\n         }\n \n+        string strUrl;\n         map<string, string> mapHeaders;\n         string strRequest;\n \n-        boost::thread api_caller(ReadHTTP, boost::ref(stream), boost::ref(mapHeaders), boost::ref(strRequest));\n+        int api_version = 0;\n+\n+        boost::thread api_caller(ReadHTTPRequest, boost::ref(stream), boost::ref(strUrl), boost::ref(mapHeaders), boost::ref(strRequest));\n         if (!api_caller.timed_join(boost::posix_time::seconds(GetArg(\"-rpctimeout\", 30))))\n         {   // Timed out:\n             acceptor.cancel();\n-            printf(\"ThreadRPCServer ReadHTTP timeout\\n\");\n+            printf(\"ThreadRPCServer ReadHTTPRequest timeout\\n\");\n             continue;\n         }\n \n+        if (boost::starts_with(strUrl, \"/bitcoin.v\")) \n+            api_version = atoi(&(strUrl.c_str())[10]);\n+\n         // Check authorization\n         if (mapHeaders.count(\"authorization\") == 0)\n         {\n@@ -1973,7 +2016,7 @@ void ThreadRPCServer2(void* parg)\n             try\n             {\n                 // Execute\n-                Value result = (*(*mi).second)(params, false);\n+                Value result = (*(*mi).second)(params, api_version, false);\n \n                 // Send reply\n                 string strReply = JSONRPCReply(result, Value::null, id);\n@@ -2040,7 +2083,7 @@ Object CallRPC(const string& strMethod, const Array& params)\n     // Receive reply\n     map<string, string> mapHeaders;\n     string strReply;\n-    int nStatus = ReadHTTP(stream, mapHeaders, strReply);\n+    int nStatus = ReadHTTPResponse(stream, mapHeaders, strReply);\n     if (nStatus == 401)\n         throw runtime_error(\"incorrect rpcuser or rpcpassword (authorization failed)\");\n     else if (nStatus >= 400 && nStatus != 400 && nStatus != 404 && nStatus != 500)"
      }
    ]
  },
  {
    "sha": "aced6532bfa2d424dc5cecbe3bb79527575cd44c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphY2VkNjUzMmJmYTJkNDI0ZGM1Y2VjYmUzYmI3OTUyNzU3NWNkNDRj",
    "commit": {
      "author": {
        "name": "Chris Howie",
        "email": "me@chrishowie.com",
        "date": "2011-07-26T02:57:58Z"
      },
      "committer": {
        "name": "Chris Howie",
        "email": "me@chrishowie.com",
        "date": "2011-07-26T20:10:20Z"
      },
      "message": "Allow amounts to be specified as a string, and return amounts as strings if API version is >= 2",
      "tree": {
        "sha": "05e34b90d41b44d823eb607153ac82e91acb2364",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/05e34b90d41b44d823eb607153ac82e91acb2364"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aced6532bfa2d424dc5cecbe3bb79527575cd44c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aced6532bfa2d424dc5cecbe3bb79527575cd44c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/aced6532bfa2d424dc5cecbe3bb79527575cd44c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aced6532bfa2d424dc5cecbe3bb79527575cd44c/comments",
    "author": {
      "login": "cdhowie",
      "id": 354641,
      "node_id": "MDQ6VXNlcjM1NDY0MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/354641?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdhowie",
      "html_url": "https://github.com/cdhowie",
      "followers_url": "https://api.github.com/users/cdhowie/followers",
      "following_url": "https://api.github.com/users/cdhowie/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdhowie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdhowie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdhowie/subscriptions",
      "organizations_url": "https://api.github.com/users/cdhowie/orgs",
      "repos_url": "https://api.github.com/users/cdhowie/repos",
      "events_url": "https://api.github.com/users/cdhowie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdhowie/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cdhowie",
      "id": 354641,
      "node_id": "MDQ6VXNlcjM1NDY0MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/354641?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdhowie",
      "html_url": "https://github.com/cdhowie",
      "followers_url": "https://api.github.com/users/cdhowie/followers",
      "following_url": "https://api.github.com/users/cdhowie/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdhowie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdhowie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdhowie/subscriptions",
      "organizations_url": "https://api.github.com/users/cdhowie/orgs",
      "repos_url": "https://api.github.com/users/cdhowie/repos",
      "events_url": "https://api.github.com/users/cdhowie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdhowie/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7f5ed2218455aa03cd012331dc5523fa44cb2cf9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f5ed2218455aa03cd012331dc5523fa44cb2cf9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7f5ed2218455aa03cd012331dc5523fa44cb2cf9"
      }
    ],
    "stats": {
      "total": 150,
      "additions": 105,
      "deletions": 45
    },
    "files": [
      {
        "sha": "af8b5bc22f5b8ec8df228291c9ec90271c6560cb",
        "filename": "src/rpc.cpp",
        "status": "modified",
        "additions": 105,
        "deletions": 45,
        "changes": 150,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aced6532bfa2d424dc5cecbe3bb79527575cd44c/src/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aced6532bfa2d424dc5cecbe3bb79527575cd44c/src/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc.cpp?ref=aced6532bfa2d424dc5cecbe3bb79527575cd44c",
        "patch": "@@ -68,20 +68,85 @@ void PrintConsole(const char* format, ...)\n }\n \n \n-int64 AmountFromValue(const Value& value)\n+int64 AmountFromValue(const Value& value, bool allow_zero)\n {\n-    double dAmount = value.get_real();\n-    if (dAmount <= 0.0 || dAmount > 21000000.0)\n-        throw JSONRPCError(-3, \"Invalid amount\");\n-    int64 nAmount = roundint64(dAmount * COIN);\n-    if (!MoneyRange(nAmount))\n-        throw JSONRPCError(-3, \"Invalid amount\");\n-    return nAmount;\n+    int64 nAmount;\n+\n+    switch (value.type()) {\n+        case real_type:\n+        case int_type: {\n+            double dAmount = value.get_real();\n+            if (dAmount < 0.0 || dAmount > 21000000.0 || (!allow_zero && dAmount == 0.0))\n+                throw JSONRPCError(-3, \"Invalid amount\");\n+            nAmount = roundint64(dAmount * COIN);\n+            if (!MoneyRange(nAmount))\n+                throw JSONRPCError(-3, \"Invalid amount\");\n+            return nAmount;\n+        }\n+\n+        case str_type: {\n+            vector<string> vParts;\n+            boost::split(vParts, value.get_str(), boost::is_any_of(\".\"));\n+\n+            if (vParts.size() == 0 || vParts.size() > 2)\n+                throw JSONRPCError(-3, \"Invalid amount\");\n+\n+            if (vParts[0].size() == 0 || vParts[0].size() > 8 || !isdigit(vParts[0][0]))\n+                throw JSONRPCError(-3, \"Invalid amount\");\n+\n+            char *cEnd;\n+\n+            nAmount = strtoll(vParts[0].c_str(), &cEnd, 10) * COIN;\n+\n+            if (*cEnd != '\\0')\n+                throw JSONRPCError(-3, \"Invalid amount\");\n+\n+            if (vParts.size() == 2)\n+            {\n+                size_t nDigits = vParts[1].size();\n+\n+                if (nDigits == 0 || nDigits > 8 || !isdigit(vParts[1][0]))\n+                    throw JSONRPCError(-3, \"Invalid amount\");\n+\n+                int64 nSatoshis = strtoll(vParts[1].c_str(), &cEnd, 10);\n+\n+                if (*cEnd != '\\0')\n+                    throw JSONRPCError(-3, \"Invalid amount\");\n+\n+                while (nDigits < 8) {\n+                    nSatoshis *= 10;\n+                    nDigits++;\n+                }\n+\n+                nAmount += nSatoshis;\n+            }\n+\n+            if ((nAmount > (21000000 * COIN)) || (!allow_zero && nAmount == 0))\n+                throw JSONRPCError(-3, \"Invalid amount\");\n+\n+            return nAmount;\n+        }\n+    }\n+\n+    throw JSONRPCError(-3, \"Amount must be specified as a number or string.\");\n }\n \n-Value ValueFromAmount(int64 amount)\n+Value ValueFromAmount(int64 amount, int api_version)\n {\n-    return (double)amount / (double)COIN;\n+    if (api_version < 2)\n+        return (double)amount / (double)COIN;\n+\n+    ostringstream s;\n+\n+    s.width(1);\n+    s << (amount / COIN);\n+    s << '.';\n+\n+    s.fill('0');\n+    s.width(8);\n+    s << (amount % COIN);\n+\n+    return s.str();\n }\n \n void WalletTxToJSON(const CWalletTx& wtx, Object& entry)\n@@ -299,7 +364,7 @@ Value getinfo(const Array& params, int api_version, bool fHelp)\n \n     Object obj;\n     obj.push_back(Pair(\"version\",       (int)VERSION));\n-    obj.push_back(Pair(\"balance\",       ValueFromAmount(pwalletMain->GetBalance())));\n+    obj.push_back(Pair(\"balance\",       ValueFromAmount(pwalletMain->GetBalance(), api_version)));\n     obj.push_back(Pair(\"blocks\",        (int)nBestHeight));\n     obj.push_back(Pair(\"connections\",   (int)vNodes.size()));\n     obj.push_back(Pair(\"proxy\",         (fUseProxy ? addrProxy.ToStringIPPort() : string())));\n@@ -309,7 +374,7 @@ Value getinfo(const Array& params, int api_version, bool fHelp)\n     obj.push_back(Pair(\"hashespersec\",  gethashespersec(params, api_version, false)));\n     obj.push_back(Pair(\"testnet\",       fTestNet));\n     obj.push_back(Pair(\"keypoololdest\", (boost::int64_t)pwalletMain->GetOldestKeyPoolTime()));\n-    obj.push_back(Pair(\"paytxfee\",      ValueFromAmount(nTransactionFee)));\n+    obj.push_back(Pair(\"paytxfee\",      ValueFromAmount(nTransactionFee, api_version)));\n     obj.push_back(Pair(\"errors\",        GetWarnings(\"statusbar\")));\n     obj.push_back(Pair(\"api_version\",   api_version));\n     return obj;\n@@ -502,8 +567,7 @@ Value settxfee(const Array& params, int api_version, bool fHelp)\n \n     // Amount\n     int64 nAmount = 0;\n-    if (params[0].get_real() != 0.0)\n-        nAmount = AmountFromValue(params[0]);        // rejects 0.0 amounts\n+    nAmount = AmountFromValue(params[0], true);\n \n     nTransactionFee = nAmount;\n     return true;\n@@ -519,7 +583,7 @@ Value sendtoaddress(const Array& params, int api_version, bool fHelp)\n     string strAddress = params[0].get_str();\n \n     // Amount\n-    int64 nAmount = AmountFromValue(params[1]);\n+    int64 nAmount = AmountFromValue(params[1], false);\n \n     // Wallet comments\n     CWalletTx wtx;\n@@ -576,7 +640,7 @@ Value getreceivedbyaddress(const Array& params, int api_version, bool fHelp)\n         }\n     }\n \n-    return  ValueFromAmount(nAmount);\n+    return  ValueFromAmount(nAmount, api_version);\n }\n \n \n@@ -682,7 +746,7 @@ Value getbalance(const Array& params, int api_version, bool fHelp)\n             \"If [account] is specified, returns the balance in the account.\");\n \n     if (params.size() == 0)\n-        return  ValueFromAmount(pwalletMain->GetBalance());\n+        return  ValueFromAmount(pwalletMain->GetBalance(), api_version);\n \n     int nMinDepth = 1;\n     if (params.size() > 1)\n@@ -713,14 +777,14 @@ Value getbalance(const Array& params, int api_version, bool fHelp)\n             nBalance -= allFee;\n             nBalance += allGeneratedMature;\n         }\n-        return  ValueFromAmount(nBalance);\n+        return  ValueFromAmount(nBalance, api_version);\n     }\n \n     string strAccount = AccountFromValue(params[0]);\n \n     int64 nBalance = GetAccountBalance(strAccount, nMinDepth);\n \n-    return ValueFromAmount(nBalance);\n+    return ValueFromAmount(nBalance, api_version);\n }\n \n \n@@ -733,7 +797,7 @@ Value movecmd(const Array& params, int api_version, bool fHelp)\n \n     string strFrom = AccountFromValue(params[0]);\n     string strTo = AccountFromValue(params[1]);\n-    int64 nAmount = AmountFromValue(params[2]);\n+    int64 nAmount = AmountFromValue(params[2], false);\n     int nMinDepth = 1;\n     if (params.size() > 3)\n         nMinDepth = params[3].get_int();\n@@ -781,7 +845,7 @@ Value sendfrom(const Array& params, int api_version, bool fHelp)\n \n     string strAccount = AccountFromValue(params[0]);\n     string strAddress = params[1].get_str();\n-    int64 nAmount = AmountFromValue(params[2]);\n+    int64 nAmount = AmountFromValue(params[2], false);\n     int nMinDepth = 1;\n     if (params.size() > 3)\n         nMinDepth = params[3].get_int();\n@@ -844,7 +908,7 @@ Value sendmany(const Array& params, int api_version, bool fHelp)\n         CScript scriptPubKey;\n         if (!scriptPubKey.SetBitcoinAddress(strAddress))\n             throw JSONRPCError(-5, string(\"Invalid bitcoin address:\")+strAddress);\n-        int64 nAmount = AmountFromValue(s.value_); \n+        int64 nAmount = AmountFromValue(s.value_, false);\n         totalAmount += nAmount;\n \n         vecSend.push_back(make_pair(scriptPubKey, nAmount));\n@@ -887,7 +951,7 @@ struct tallyitem\n     }\n };\n \n-Value ListReceived(const Array& params, bool fByAccounts)\n+Value ListReceived(const Array& params, bool fByAccounts, int api_version)\n {\n     // Minimum confirmations\n     int nMinDepth = 1;\n@@ -963,7 +1027,7 @@ Value ListReceived(const Array& params, bool fByAccounts)\n                 obj.push_back(Pair(\"address\",       strAddress));\n                 obj.push_back(Pair(\"account\",       strAccount));\n                 obj.push_back(Pair(\"label\",         strAccount)); // deprecated\n-                obj.push_back(Pair(\"amount\",        ValueFromAmount(nAmount)));\n+                obj.push_back(Pair(\"amount\",        ValueFromAmount(nAmount, api_version)));\n                 obj.push_back(Pair(\"confirmations\", (nConf == INT_MAX ? 0 : nConf)));\n                 ret.push_back(obj);\n             }\n@@ -979,7 +1043,7 @@ Value ListReceived(const Array& params, bool fByAccounts)\n             Object obj;\n             obj.push_back(Pair(\"account\",       (*it).first));\n             obj.push_back(Pair(\"label\",         (*it).first)); // deprecated\n-            obj.push_back(Pair(\"amount\",        ValueFromAmount(nAmount)));\n+            obj.push_back(Pair(\"amount\",        ValueFromAmount(nAmount, api_version)));\n             obj.push_back(Pair(\"confirmations\", (nConf == INT_MAX ? 0 : nConf)));\n             ret.push_back(obj);\n         }\n@@ -1001,7 +1065,7 @@ Value listreceivedbyaddress(const Array& params, int api_version, bool fHelp)\n             \"  \\\"amount\\\" : total amount received by the address\\n\"\n             \"  \\\"confirmations\\\" : number of confirmations of the most recent transaction included\");\n \n-    return ListReceived(params, false);\n+    return ListReceived(params, false, api_version);\n }\n \n Value listreceivedbyaccount(const Array& params, int api_version, bool fHelp)\n@@ -1016,10 +1080,10 @@ Value listreceivedbyaccount(const Array& params, int api_version, bool fHelp)\n             \"  \\\"amount\\\" : total amount received by addresses with this account\\n\"\n             \"  \\\"confirmations\\\" : number of confirmations of the most recent transaction included\");\n \n-    return ListReceived(params, true);\n+    return ListReceived(params, true, api_version);\n }\n \n-void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDepth, bool fLong, Array& ret)\n+void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDepth, bool fLong, int api_version, Array& ret)\n {\n     int64 nGeneratedImmature, nGeneratedMature, nFee;\n     string strSentAccount;\n@@ -1037,12 +1101,12 @@ void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDe\n         if (nGeneratedImmature)\n         {\n             entry.push_back(Pair(\"category\", wtx.GetDepthInMainChain() ? \"immature\" : \"orphan\"));\n-            entry.push_back(Pair(\"amount\", ValueFromAmount(nGeneratedImmature)));\n+            entry.push_back(Pair(\"amount\", ValueFromAmount(nGeneratedImmature, api_version)));\n         }\n         else\n         {\n             entry.push_back(Pair(\"category\", \"generate\"));\n-            entry.push_back(Pair(\"amount\", ValueFromAmount(nGeneratedMature)));\n+            entry.push_back(Pair(\"amount\", ValueFromAmount(nGeneratedMature, api_version)));\n         }\n         if (fLong)\n             WalletTxToJSON(wtx, entry);\n@@ -1058,8 +1122,8 @@ void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDe\n             entry.push_back(Pair(\"account\", strSentAccount));\n             entry.push_back(Pair(\"address\", s.first));\n             entry.push_back(Pair(\"category\", \"send\"));\n-            entry.push_back(Pair(\"amount\", ValueFromAmount(-s.second)));\n-            entry.push_back(Pair(\"fee\", ValueFromAmount(-nFee)));\n+            entry.push_back(Pair(\"amount\", ValueFromAmount(-s.second, api_version)));\n+            entry.push_back(Pair(\"fee\", ValueFromAmount(-nFee, api_version)));\n             if (fLong)\n                 WalletTxToJSON(wtx, entry);\n             ret.push_back(entry);\n@@ -1081,7 +1145,7 @@ void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDe\n                     entry.push_back(Pair(\"account\", account));\n                     entry.push_back(Pair(\"address\", r.first));\n                     entry.push_back(Pair(\"category\", \"receive\"));\n-                    entry.push_back(Pair(\"amount\", ValueFromAmount(r.second)));\n+                    entry.push_back(Pair(\"amount\", ValueFromAmount(r.second, api_version)));\n                     if (fLong)\n                         WalletTxToJSON(wtx, entry);\n                     ret.push_back(entry);\n@@ -1091,7 +1155,7 @@ void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDe\n \n }\n \n-void AcentryToJSON(const CAccountingEntry& acentry, const string& strAccount, Array& ret)\n+void AcentryToJSON(const CAccountingEntry& acentry, const string& strAccount, int api_version, Array& ret)\n {\n     bool fAllAccounts = (strAccount == string(\"*\"));\n \n@@ -1101,7 +1165,7 @@ void AcentryToJSON(const CAccountingEntry& acentry, const string& strAccount, Ar\n         entry.push_back(Pair(\"account\", acentry.strAccount));\n         entry.push_back(Pair(\"category\", \"move\"));\n         entry.push_back(Pair(\"time\", (boost::int64_t)acentry.nTime));\n-        entry.push_back(Pair(\"amount\", ValueFromAmount(acentry.nCreditDebit)));\n+        entry.push_back(Pair(\"amount\", ValueFromAmount(acentry.nCreditDebit, api_version)));\n         entry.push_back(Pair(\"otheraccount\", acentry.strOtherAccount));\n         entry.push_back(Pair(\"comment\", acentry.strComment));\n         ret.push_back(entry);\n@@ -1153,10 +1217,10 @@ Value listtransactions(const Array& params, int api_version, bool fHelp)\n         {\n             CWalletTx *const pwtx = (*it).second.first;\n             if (pwtx != 0)\n-                ListTransactions(*pwtx, strAccount, 0, true, ret);\n+                ListTransactions(*pwtx, strAccount, 0, true, api_version, ret);\n             CAccountingEntry *const pacentry = (*it).second.second;\n             if (pacentry != 0)\n-                AcentryToJSON(*pacentry, strAccount, ret);\n+                AcentryToJSON(*pacentry, strAccount, api_version, ret);\n \n             if (ret.size() >= nCount) break;\n         }\n@@ -1226,7 +1290,7 @@ Value listaccounts(const Array& params, int api_version, bool fHelp)\n \n     Object ret;\n     BOOST_FOREACH(const PAIRTYPE(string, int64)& accountBalance, mapAccountBalances) {\n-        ret.push_back(Pair(accountBalance.first, ValueFromAmount(accountBalance.second)));\n+        ret.push_back(Pair(accountBalance.first, ValueFromAmount(accountBalance.second, api_version)));\n     }\n     return ret;\n }\n@@ -1253,14 +1317,14 @@ Value gettransaction(const Array& params, int api_version, bool fHelp)\n         int64 nNet = nCredit - nDebit;\n         int64 nFee = (wtx.IsFromMe() ? wtx.GetValueOut() - nDebit : 0);\n \n-        entry.push_back(Pair(\"amount\", ValueFromAmount(nNet - nFee)));\n+        entry.push_back(Pair(\"amount\", ValueFromAmount(nNet - nFee, api_version)));\n         if (wtx.IsFromMe())\n-            entry.push_back(Pair(\"fee\", ValueFromAmount(nFee)));\n+            entry.push_back(Pair(\"fee\", ValueFromAmount(nFee, api_version)));\n \n         WalletTxToJSON(pwalletMain->mapWallet[hash], entry);\n \n         Array details;\n-        ListTransactions(pwalletMain->mapWallet[hash], \"*\", 0, false, details);\n+        ListTransactions(pwalletMain->mapWallet[hash], \"*\", 0, false, api_version, details);\n         entry.push_back(Pair(\"details\", details));\n     }\n \n@@ -2151,8 +2215,6 @@ int CommandLineRPC(int argc, char *argv[])\n         //\n         if (strMethod == \"setgenerate\"            && n > 0) ConvertTo<bool>(params[0]);\n         if (strMethod == \"setgenerate\"            && n > 1) ConvertTo<boost::int64_t>(params[1]);\n-        if (strMethod == \"sendtoaddress\"          && n > 1) ConvertTo<double>(params[1]);\n-        if (strMethod == \"settxfee\"               && n > 0) ConvertTo<double>(params[0]);\n         if (strMethod == \"getamountreceived\"      && n > 1) ConvertTo<boost::int64_t>(params[1]); // deprecated\n         if (strMethod == \"getreceivedbyaddress\"   && n > 1) ConvertTo<boost::int64_t>(params[1]);\n         if (strMethod == \"getreceivedbyaccount\"   && n > 1) ConvertTo<boost::int64_t>(params[1]);\n@@ -2166,9 +2228,7 @@ int CommandLineRPC(int argc, char *argv[])\n         if (strMethod == \"listreceivedbylabel\"    && n > 0) ConvertTo<boost::int64_t>(params[0]); // deprecated\n         if (strMethod == \"listreceivedbylabel\"    && n > 1) ConvertTo<bool>(params[1]); // deprecated\n         if (strMethod == \"getbalance\"             && n > 1) ConvertTo<boost::int64_t>(params[1]);\n-        if (strMethod == \"move\"                   && n > 2) ConvertTo<double>(params[2]);\n         if (strMethod == \"move\"                   && n > 3) ConvertTo<boost::int64_t>(params[3]);\n-        if (strMethod == \"sendfrom\"               && n > 2) ConvertTo<double>(params[2]);\n         if (strMethod == \"sendfrom\"               && n > 3) ConvertTo<boost::int64_t>(params[3]);\n         if (strMethod == \"listtransactions\"       && n > 1) ConvertTo<boost::int64_t>(params[1]);\n         if (strMethod == \"listtransactions\"       && n > 2) ConvertTo<boost::int64_t>(params[2]);"
      }
    ]
  }
]