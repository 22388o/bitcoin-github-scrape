BitcoinPullTester,2012-12-01T19:40:50Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/49f4d1d7ab71531d4552a7d1b5b79dfc99883d49 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/2059#issuecomment-10921117,10921117,
sipa,2012-12-01T20:14:01Z,"Example output:\n\n```\n - Connect 688 transactions: 758.16ms (1.102ms/tx, 0.623ms/txin)\n - Connect: 770.16ms\n - Flush 1455 transactions: 2.30ms (0.0016ms/tx)\n```\n",https://github.com/bitcoin/bitcoin/pull/2059#issuecomment-10921554,10921554,
BitcoinPullTester,2012-12-01T20:38:44Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c79fdf173098cb8ebdd9ab4f2a2b8e4fca1042ce for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/2059#issuecomment-10921832,10921832,
BitcoinPullTester,2012-12-02T01:22:31Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c222ef6d830d884e2075864029668884e3da9459 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/2059#issuecomment-10924636,10924636,
Diapolo,2012-12-02T09:53:14Z,Should all used printfs honor the fBenchmark flag? And shouldn't microseconds use `Âµs` instead of `ms`?\n,https://github.com/bitcoin/bitcoin/pull/2059#issuecomment-10927887,10927887,
sipa,2012-12-02T20:50:01Z,"@Diapolo I've changed the code to always report in ms, but sometimes with some decimals. Avoids the necessity for a mu symbol, and is more readable. All timing printfs should honor the fBenchmark yes - should be the case now.\n",https://github.com/bitcoin/bitcoin/pull/2059#issuecomment-10934955,10934955,
Diapolo,2012-12-02T21:41:16Z,"@sipa Thanks, I'm fine with that benchmark stuff then.\n\nEdit: Seems the `Make SetBestChain() atomic` sneaked in here ^^.\n",https://github.com/bitcoin/bitcoin/pull/2059#issuecomment-10935696,10935696,
sipa,2012-12-02T23:48:05Z,"@Diapolo Yes, since they touch the same code, I didn't bother writing them separately (I even mentioned it on the pullreq summart!). If there's an issue with the other pullreq, I'll rebase this one, and if the other gets NAK'ed or delayed, I'll separate them.\n",https://github.com/bitcoin/bitcoin/pull/2059#issuecomment-10937526,10937526,
Diapolo,2012-12-03T06:04:03Z,"@sipa I think your smaller pulls should make it much faster into master, so I have no problem with what I noted above :).\n",https://github.com/bitcoin/bitcoin/pull/2059#issuecomment-10942490,10942490,
sipa,2012-12-05T22:08:04Z,@Diapolo Feel like testing this? I'd like to know what kind of output you get on Windows.\n,https://github.com/bitcoin/bitcoin/pull/2059#issuecomment-11062988,11062988,
gavinandresen,2012-12-05T22:11:17Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/2059#issuecomment-11063128,11063128,
Diapolo,2012-12-06T06:08:00Z,"@sipa Yeah, will do that today :).\nDo I need to start an IBD or are you fine with just any occurance of that messages from the log?\n",https://github.com/bitcoin/bitcoin/pull/2059#issuecomment-11074262,11074262,
laanwj,2012-12-06T07:40:09Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/2059#issuecomment-11075643,11075643,
Diapolo,2012-12-06T08:02:24Z,"@sipa Here are a few examples with current master + some mods to block file pre-alloc and CAutoFile (dunno if these are related for the benches).\n\n12/06/12 07:57:25 - Connect 293 transactions: 2776.80ms (9.477ms/tx, 3.644ms/txin)\n12/06/12 07:57:25 - Connect: 2870.41ms\n12/06/12 07:57:25 - Flush 976 transactions: 0.00ms (0.0000ms/tx)\n\n12/06/12 07:57:25 - Connect 108 transactions: 686.40ms (6.3",https://github.com/bitcoin/bitcoin/pull/2059#issuecomment-11076017,11076017,
BitcoinPullTester,2012-12-07T03:36:59Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8a28bb6deee2df7dac3288c1bc6db6221e5e43b6 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/2059#issuecomment-11117977,11117977,
Diapolo,2012-12-07T09:43:09Z,"Some values during IBD:\n\n12/07/12 08:08:31 - Connect 60 transactions: 15.60ms (0.260ms/tx, 0.153ms/txin)\n12/07/12 08:08:31 - Connect: 15.60ms\n12/07/12 08:08:31 - Flush 146 transactions: 0.00ms (0.0000ms/tx)\n\n12/07/12 08:08:32 - Connect 165 transactions: 31.20ms (0.189ms/tx, 0.092ms/txin)\n12/07/12 08:08:32 - Connect: 46.80ms\n12/07/12 08:08:32 - Flush 409 transactions: 0.00ms (0.0000ms/tx)\n",https://github.com/bitcoin/bitcoin/pull/2059#issuecomment-11124220,11124220,
sipa,2012-12-07T12:07:21Z,@Diapolo Seems microsecond_clock on your system has a resolution of 15.6ms - what I assume to be 1/64 of a second. That makes the numbers -benchmark would report quite useless...\n,https://github.com/bitcoin/bitcoin/pull/2059#issuecomment-11127710,11127710,
Diapolo,2012-12-07T12:19:30Z,"@sipa I didn't even take a close look at the numbers, but your assumption makes sense, if I look at the numbers. Any idea for a working code-path for Win32 then? I could try with GetTimeMillis() instead and see if that numbers make more sense, as at least a ms timer-resolution should be possible (and not a 15.6ms res).\n",https://github.com/bitcoin/bitcoin/pull/2059#issuecomment-11128004,11128004,
sipa,2012-12-07T12:21:57Z,"@Diapolo GetTimeMillis uses the same boost function to get the actual time, so I doubt that will make any difference. Up to you to find something that gives an accurate clock in Windows :)\n",https://github.com/bitcoin/bitcoin/pull/2059#issuecomment-11128104,11128104,
Diapolo,2012-12-07T12:23:45Z,@sipa I had read some stuff a few days ago on that issue and it seems ... well hard to do it portable. Any the native WIN32 APIs for time stuff is a thing I've never used ^^. I'll take another look.\n\nEdit: `Note that the existence of the higher resolution classes (eg: nanoseconds) depends on the installation of the library. See Build-Compiler Information for more information.` Any idea if that m,https://github.com/bitcoin/bitcoin/pull/2059#issuecomment-11128185,11128185,
Diapolo,2012-12-02T10:05:55Z,"Seems timer resolution on Windows is always in the ms range, I tried that function.\n",https://github.com/bitcoin/bitcoin/pull/2059#discussion_r2287152,2287152,src/util.h
sipa,2012-12-02T20:48:57Z,Windows doesn't provide a microsecond clock? Or boost::posix_time::microsec_block fails to implement its name?\n,https://github.com/bitcoin/bitcoin/pull/2059#discussion_r2288028,2288028,src/util.h
Diapolo,2012-12-02T21:37:38Z,"Boost (sometimes) fails to provide a microsecond clock for Windows, which seems to be a known issue.\n",https://github.com/bitcoin/bitcoin/pull/2059#discussion_r2288124,2288124,src/util.h
