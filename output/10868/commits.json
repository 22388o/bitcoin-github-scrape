[
  {
    "sha": "7a2bffb7445107e7f9e6b7f7be7d5fef6f4d1c99",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YTJiZmZiNzQ0NTEwN2U3ZjllNmI3ZjdiZTdkNWZlZjZmNGQxYzk5",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-07-17T15:15:16Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-07-18T18:49:00Z"
      },
      "message": "[args] allow args to be cleared from ArgsManager",
      "tree": {
        "sha": "246da5eb8914512e70eb48a823315d0fa37b334b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/246da5eb8914512e70eb48a823315d0fa37b334b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7a2bffb7445107e7f9e6b7f7be7d5fef6f4d1c99",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a2bffb7445107e7f9e6b7f7be7d5fef6f4d1c99",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7a2bffb7445107e7f9e6b7f7be7d5fef6f4d1c99",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a2bffb7445107e7f9e6b7f7be7d5fef6f4d1c99/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9e8d6a3fb43a2433ef46aaf95511650e3888f730",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e8d6a3fb43a2433ef46aaf95511650e3888f730",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9e8d6a3fb43a2433ef46aaf95511650e3888f730"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 15,
      "deletions": 1
    },
    "files": [
      {
        "sha": "26916164c6b05845a4a8d4f42dc5b5dcb41de0d7",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a2bffb7445107e7f9e6b7f7be7d5fef6f4d1c99/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a2bffb7445107e7f9e6b7f7be7d5fef6f4d1c99/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=7a2bffb7445107e7f9e6b7f7be7d5fef6f4d1c99",
        "patch": "@@ -482,7 +482,13 @@ void ArgsManager::ForceSetArg(const std::string& strArg, const std::string& strV\n     mapMultiArgs[strArg].push_back(strValue);\n }\n \n-\n+bool ArgsManager::ClearArg(const std::string& strArg)\n+{\n+    LOCK(cs_args);\n+    return mapArgs.erase(strArg) | mapMultiArgs.erase(strArg);\n+    // bitwise or is deliberate. erase() returns number of items erased. We don't want\n+    // to short-circuit the mapMultiArgs erase().\n+}\n \n static const int screenWidth = 79;\n static const int optIndent = 2;"
      },
      {
        "sha": "c7b0c530468eed4ec84f449ae9ffeeada7ac5b7d",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a2bffb7445107e7f9e6b7f7be7d5fef6f4d1c99/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a2bffb7445107e7f9e6b7f7be7d5fef6f4d1c99/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=7a2bffb7445107e7f9e6b7f7be7d5fef6f4d1c99",
        "patch": "@@ -259,6 +259,14 @@ class ArgsManager\n     // Forces an arg setting. Called by SoftSetArg() if the arg hasn't already\n     // been set. Also called directly in testing.\n     void ForceSetArg(const std::string& strArg, const std::string& strValue);\n+\n+    /**\n+     * Clears an argument if it is already set\n+     *\n+     * @param strArg Argument to set (e.g. \"-foo\")\n+     * @return true if argument gets cleared, false if there was no argument\n+     */\n+    bool ClearArg(const std::string& strArg);\n };\n \n extern ArgsManager gArgs;"
      }
    ]
  },
  {
    "sha": "561d0190d326c4bb75d9db03cabbeea10b9ec5cb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NjFkMDE5MGQzMjZjNGJiNzVkOWRiMDNjYWJiZWVhMTBiOWVjNWNi",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-07-17T15:16:12Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-07-18T18:49:00Z"
      },
      "message": "[utils] bitcoin-cli shouldn't read the -wallet argument from conf file",
      "tree": {
        "sha": "93102114043559be2b3921f9fb55e7eeecb67508",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/93102114043559be2b3921f9fb55e7eeecb67508"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/561d0190d326c4bb75d9db03cabbeea10b9ec5cb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/561d0190d326c4bb75d9db03cabbeea10b9ec5cb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/561d0190d326c4bb75d9db03cabbeea10b9ec5cb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/561d0190d326c4bb75d9db03cabbeea10b9ec5cb/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7a2bffb7445107e7f9e6b7f7be7d5fef6f4d1c99",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a2bffb7445107e7f9e6b7f7be7d5fef6f4d1c99",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7a2bffb7445107e7f9e6b7f7be7d5fef6f4d1c99"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 21,
      "deletions": 2
    },
    "files": [
      {
        "sha": "f91d4e805b6af2b4caa36e2cd0ae23f6b5409338",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 2,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/561d0190d326c4bb75d9db03cabbeea10b9ec5cb/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/561d0190d326c4bb75d9db03cabbeea10b9ec5cb/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=561d0190d326c4bb75d9db03cabbeea10b9ec5cb",
        "patch": "@@ -46,7 +46,7 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-rpcpassword=<pw>\", _(\"Password for JSON-RPC connections\"));\n     strUsage += HelpMessageOpt(\"-rpcclienttimeout=<n>\", strprintf(_(\"Timeout in seconds during HTTP requests, or 0 for no timeout. (default: %d)\"), DEFAULT_HTTP_CLIENT_TIMEOUT));\n     strUsage += HelpMessageOpt(\"-stdin\", _(\"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases)\"));\n-    strUsage += HelpMessageOpt(\"-usewallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (argument is wallet filename in bitcoind directory, required if bitcoind/-Qt runs with multiple wallets)\"));\n+    strUsage += HelpMessageOpt(\"-wallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (argument is wallet filename in bitcoind directory, required if bitcoind/-Qt runs with multiple wallets)\"));\n \n     return strUsage;\n }\n@@ -103,8 +103,27 @@ static int AppInitRPC(int argc, char* argv[])\n         fprintf(stderr, \"Error: Specified data directory \\\"%s\\\" does not exist.\\n\", GetArg(\"-datadir\", \"\").c_str());\n         return EXIT_FAILURE;\n     }\n+    // For bitcoin-cli, the -wallet parameter can only be specified from the\n+    // command line, not in the conf file. This is because the conf file can\n+    // contain multiple -wallet args, so it's not possible to determine which\n+    // one to use.\n+    //\n+    // Store the command line -wallet arg here so we can restore it after\n+    // parsing the conf file.\n+    std::string wallet;\n+    if (gArgs.GetArgs(\"-wallet\").size() > 1) {\n+        fprintf(stderr, \"Error: Only one -wallet option may be used.\\n\");\n+        return EXIT_FAILURE;\n+    } else if (gArgs.GetArgs(\"-wallet\").size() == 1) {\n+        wallet = (gArgs.GetArgs(\"-wallet\"))[0];\n+    }\n     try {\n         ReadConfigFile(GetArg(\"-conf\", BITCOIN_CONF_FILENAME));\n+        // restore the command line -wallet argument\n+        gArgs.ClearArg(\"-wallet\");\n+        if (!wallet.empty()) {\n+            gArgs.SoftSetArg(\"-wallet\", wallet);\n+        }\n     } catch (const std::exception& e) {\n         fprintf(stderr,\"Error reading configuration file: %s\\n\", e.what());\n         return EXIT_FAILURE;\n@@ -244,7 +263,7 @@ UniValue CallRPC(const std::string& strMethod, const UniValue& params)\n \n     // check if we should use a special wallet endpoint\n     std::string endpoint = \"/\";\n-    std::string walletName = GetArg(\"-usewallet\", \"\");\n+    std::string walletName = GetArg(\"-wallet\", \"\");\n     if (!walletName.empty()) {\n         char *encodedURI = evhttp_uriencode(walletName.c_str(), walletName.size(), false);\n         if (encodedURI) {"
      }
    ]
  }
]