jnewbery,2017-07-18T16:07:30Z,@ryanofsky - should address your concern about `usewallet`,https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316113627,316113627,
jnewbery,2017-07-18T17:30:36Z,"@ryanofsky Thanks for the feedback. You're right - the PR description was overly long and confusing for something that's actually very simple. I've reworked it using your words.\n\nYes, perhaps this could go in 0.15 as a bugfix.\n\nWill address your technical feedback soon.",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316137480,316137480,
sipa,2017-07-18T17:34:09Z,"If we want to replace `-usewallet` with `-wallet` for `bitcoin-cli`, it should go in 0.15 or we'd be breaking backward compatibility in later?",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316138572,316138572,
jnewbery,2017-07-18T17:46:21Z,"> If we want to replace -usewallet with -wallet for bitcoin-cli, it should go in 0.15 or we'd be breaking backward compatibility in later?\n\nYes, but as I've mentioned before, I'm not very concerned about backward compatibility for an interface that should be marked as experimental.\n\nThat said, I'm happy for this to go in v0.15 as a bugfix.",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316141986,316141986,
sipa,2017-07-18T17:49:29Z,"> I'm not very concerned about backward compatibility for an interface that should be marked as experimental.\n\nStill no reason to go intentionally plan to break it.",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316142883,316142883,
jnewbery,2017-07-18T18:02:51Z,"> Still no reason to go intentionally plan to break it.\n\nSorry, I'm confused about what you're advocating for? I've already said I'm happy for this to go into v0.15 as a bugfix.",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316146666,316146666,
sipa,2017-07-18T18:06:04Z,"@jnewbery I think we should either decide to have it, and get it in now, or not at all.",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316147518,316147518,
jnewbery,2017-07-18T18:09:29Z,"ok, my vote is for having it now.\n\naside: on a philosophical level I disagree that we should be forever bound to an interface that hasn't been fully agreed or designed. Presumably any users that are active enough to enable multiwallet in its first release and update all their client software are perfectly able to change `usewallet` to `wallet` at a later date.",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316148515,316148515,
jnewbery,2017-07-18T18:57:47Z,Addressed @ryanofsky's comments,https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316163834,316163834,
gmaxwell,2017-07-18T19:59:40Z,"But I want to be able to tell my daemon to load wallets one two and three, while make my bitcoin-cli default to wallet one.",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316180003,316180003,
ryanofsky,2017-07-18T20:06:41Z,"> But I want to be able to tell my daemon to load wallets one two and three, while make my bitcoin-cli default to wallet one.\n\nWe could allow this, but the thought is that it's dangerous because maybe you'll forget to add an explicit -wallet=filename argument in one of the cases where you don't intend to use your default wallet (maybe in a single bitcoin-cli invocation as part of a larger scri",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316181874,316181874,
gmaxwell,2017-07-18T20:09:21Z,"@ryanofsky  That danger doesn't hold w the only allow one argument change.  \n\nExample usecase is joinmarket wallet and a normal wallet.  Joinmarket will always use the rpc, but the cli I want to always use the normal wallet.",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316182535,316182535,
jnewbery,2017-07-18T20:13:18Z,"> But I want to be able to tell my daemon to load wallets one two and three, while make my bitcoin-cli default to wallet one.\n\nThen write a wrapper around your cli :slightly_smiling_face: \n\nI agree with @ryanofsky - not having a default wallet is *much* safer for all users.",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316183548,316183548,
gmaxwell,2017-07-18T20:16:07Z,A setting I explicitly set isn't a default though. I agree it shouldn't have a default.  The argument you're making would apply identically to the testnet vs mainnet switch (which is also multiple wallets and also unsafe if you get the wrong one).,https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316184290,316184290,
ryanofsky,2017-07-18T20:19:13Z,"Yeah, I'm not actually against allowing users to explicitly set a default wallet. I was just trying to explain what the rationale was.\n\n@gmaxwell, are you suggesting with the one-argument limit that you might want to allow users to specify a default wallet in the conf file, but then disallow specifying a second wallet on the command line that would override it? That seems like a weird behavior",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316185086,316185086,
jnewbery,2017-07-18T20:22:28Z,"I agree - the `testnet` / `mainnet` switch in the .conf file is dangerous and has tripped lots of people up, including me several times. Having to specify it explicitly it for each bitcoin-cli call would be safer (but irritating).\n\nI'm not even clear on what exact functionality you want - are you saying `-usewallet` in the conf file should be the default? But that it can be overridden by `-use",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316185956,316185956,
ryanofsky,2017-07-18T20:25:14Z,"If we are ok with explicitly set default wallets, maybe it would best to have a ""-defaultwallet"" config setting that gets implemented on server side rather than client side. This would allow for consistent behavior even across different clients, and provide functionality that couldn't be replicated with a simple wrapper script or command alias.",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316186690,316186690,
sipa,2017-07-18T20:40:02Z,"What is the rationale for renaming -usewallet to -wallet (over just rejecting duplicate -usewallet and/or having -defaultwallet)? Besides being slightly shorter, I don't see the advantage.",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316190736,316190736,
ryanofsky,2017-07-18T20:47:26Z,"> What is the rationale for renaming -usewallet to -wallet (over just rejecting duplicate -usewallet and/or -defaultwallet)?\n\nFrom my point of view I think the consistency is good. If we just have a consistent ""-wallet=filename"" option accepted by `bitcoind`, `bitcoin-qt`, `bitcoin-cli` tools, it is harder to screw up using them. Especially if we want to have support for default wallets like G",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316192750,316192750,
sipa,2017-07-18T20:53:15Z,"I'm not sure it's a great thing for consistency, if it needs such exceptional processing (ignoring something in the conf file is unique...).",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316194307,316194307,
jnewbery,2017-07-18T20:54:30Z,"Exactly what @ryanofsky said.\n\nAnd less importantly, because `-use` is content free. All arguments are used.",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316194673,316194673,
ryanofsky,2017-07-18T21:10:13Z,"> I'm not sure it's a great thing for consistency, if it needs such exceptional processing (ignoring something in the conf file is unique...).\n\nI don't necessarily think it should be ignored in the conf file. That's really just a quirk of the way this PR is implemented. I think my preferred implementation would check to see if a command line argument is specified, and if so override anything i",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316198924,316198924,
jnewbery,2017-07-18T21:26:32Z,"> That's really just a quirk of the way this PR is implemented.\n\nCorrect - in terms of implementation, it's simpler to just clear out the .conf file wallet argument (since wallet is a multimap). The end result is exactly as Russ has described.\n\nI'm happy to review alternative implementations if that's confused people.",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316202917,316202917,
sipa,2017-07-18T21:30:12Z,"I think my objection goes away if -wallet in the config file is not being ignored, but there are just rules that prevent specifying it twice on the command line.",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316203788,316203788,
sipa,2017-07-18T22:06:53Z,"After some offline discussion with @jnewbery, Concept ACK. I misunderstood how little effect ""ignore the config file"" had on the semantics of -wallet.\n\nI believe the behaviour of the -wallet option can effectively be modelled as ""the command-line -wallet arguments replace the config file ones as a whole, rather than appending to them"". I think that's fine. Ideally, I think that interpretation ",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316212416,316212416,
ryanofsky,2017-07-18T22:32:22Z,"Sounds good. I'm happy with this PR as it is, as well as the other options that have been discussed. Note that the current PR doesn't exactly model command line -wallet options ""replacing config file ones as a whole"", because it clears config wallet options even when no command line option specified. The change I was talking about earlier would give you that behavior (and potentially less safe res",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316217442,316217442,
jnewbery,2017-07-18T22:42:51Z,@ryanofsky - I think your branch is much nicer (modulo the two things we just chatted about). Mind if I cherry pick it here?,https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316219219,316219219,
achow101,2017-07-19T01:54:50Z,ACK 561d0190d326c4bb75d9db03cabbeea10b9ec5cb,https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316249457,316249457,
jonasschnelli,2017-07-19T09:32:12Z,"Agree with @jnewbery that @ryanofsky ryanofsky/bitcoin@b701085 is preferable.\n\nI like the current `-usewallet` for the reasons that users can/will/must clearly distinct between running with multiple wallets (d/QT `-wallet`) and accessing a specific wallet (`-usewallet`).\n\nI'm aware of the different layers (d/Qt vs `bitcoin-cli`) but from the users perspective, differentiation of an argumen",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316328310,316328310,
ryanofsky,2017-07-19T12:11:33Z,"#10867 doesn't address usability problem I referred to above where user forgets ""use"" prefix in a bitcoin-cli call, their `-wallet=filename` is ignored by bitcoin-cli, resulting in server error or the RPC call ignoring specified filename and accessing wrong wallet if server configured with a different single wallet.\n\n`-usewallet` option was ~~~briefly necessary~~~ *added in moment of confusion",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316365906,316365906,
jonasschnelli,2017-07-19T12:53:33Z,"I can't follow the potential source of confusion. Please help me to understand.\n\n### The current master approach is:\n* Daemon (server) uses `-wallet` to specify (additional) wallets to run with.\n* CLI (client) uses `-usewallet` to specify which of the available wallets (specified though daemons `-wallet`) should be used.\n* `bitcoin.conf`'s `-wallet` arguments do not affect `bitcoin-cli`.",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316376333,316376333,
ryanofsky,2017-07-19T13:09:38Z,"A simple example of confusion (mentioned twice above) is user forgets to add ""use"" prefix to bitcoin-cli and the argument gets ignored.\n\nNotice how you have 5 bullet points to describe current behavior and one bullet point to describe proposed behavior (the second two bullets are just contrasting with current behavior.)\n\nIdeal scenario to me is our tools consistently accept `-wallet=filena",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316380843,316380843,
jonasschnelli,2017-07-19T13:29:12Z,"> A simple example of confusion (mentioned twice above) is user forgets to add ""use"" prefix to bitcoin-cli and the argument gets ignored.\n\nIf he forgets the `use` prefix and uses `-wallet` instead, the call would not be executed in multiwallet environment because he had not specified a wallet.\n\nI don't think we should avoid setting a default wallet via `-usewallet` in `bitcoin.conf`, this ",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316386922,316386922,
ryanofsky,2017-07-19T14:31:25Z,"> If he forgets the use prefix and uses -wallet instead, the call would not be executed in multiwallet environment because he had not specified a wallet.\n\nYes, that is what I meant by ""-wallet=filename is ignored by bitcoin-cli, resulting in server error or the RPC call ignoring specified filename and accessing wrong wallet if server configured with a different single wallet."" The worse case o",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316406208,316406208,
jnewbery,2017-07-19T14:42:34Z,"I think I've sown unnecessary confusion with this PR. All that it's doing is:\n\n- If bitcoind is running multiwallet, bitcoin-cli must be called with exactly one `-wallet` command line argument to access wallet RPCs.\n\nThat's it. With singlewallet mode, everything runs exactly as before. With non-wallet RPCs, everything runs exactly as before. If more than one `-wallet` argument is provided ",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316409725,316409725,
morcos,2017-07-19T15:37:51Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316426938,316426938,
ryanofsky,2017-07-19T16:19:13Z,"https://github.com/ryanofsky/bitcoin/commit/4ae1c6858e55f6f715918fe3c82403a8c8e69828 is another implementation of this PR with identical behavior, which might be a little easier to discuss.\n\nSadly, though, treating command line arguments exactly the same as config file arguments might be an inviolable principle in bitcoin that would make these approaches unacceptable (https://botbot.me/freenod",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316439598,316439598,
jnewbery,2017-07-19T18:36:04Z,"As far as I can tell, this PR is functionally equivalent to the command-line `-wallet` replacing the .conf file `wallet` args, which is standard for all arguments. It has to be handled slightly carefully because of the way mapmultiargs work, and if we really wanted to be formal about ""the command-line -wallet arguments replace the config-file one as a whole, rather than appending to"", then we'd ne",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316477712,316477712,
laanwj,2017-07-20T08:43:12Z,"I prefer not to overload `-wallet` both for bitcoind, which has ""what wallets to load"", and bitcoin-cli which has ""what wallet to choose"".\nThese meanings are different enough. Also one option is multi-value, the other single-value. This requires special casing to make work, which I don't think is worth it.\n(if bitcoind and bitcoin-cli read different configuration files, this issue wouldn't exi",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316637887,316637887,
ryanofsky,2017-07-20T13:47:35Z,Should be closed? (#10883 is merged),https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316708264,316708264,
jnewbery,2017-07-20T14:11:24Z,"I still don't understand why `-rpcwallet` is preferred. bitcoind is a node where `-wallet` means ""this is the wallet I wish to use"". Since 0.15, multiple wallets are allowed. bitcoin-cli is a command line interface where `wallet` would mean ""this is the wallet I wish to issue a command to"". Obviously only one `wallet` can be used in this context. So yes, perhaps this is a little bit overloaded, bu",https://github.com/bitcoin/bitcoin/pull/10868#issuecomment-316715640,316715640,
ryanofsky,2017-07-18T16:41:16Z,"In commit ""bitcoin-cli shouldn't read the -wallet argument from conf file""\n\nWe should no longer have trapped in wallet problem anymore because node commands should currently work on the wallet endpoint.",https://github.com/bitcoin/bitcoin/pull/10868#discussion_r128029949,128029949,src/bitcoin-cli.cpp
ryanofsky,2017-07-18T16:43:23Z,"In commit ""bitcoin-cli shouldn't read the -wallet argument from conf file""\n\nMaybe eliminate this variable and use `!wallet.empty()` instead.",https://github.com/bitcoin/bitcoin/pull/10868#discussion_r128030465,128030465,src/bitcoin-cli.cpp
ryanofsky,2017-07-18T16:50:24Z,"In commit ""[utils] bitcoin-cli shouldn't read the -wallet argument from conf file""\n\nI think it would make control flow clearer, and also simplify the PR if you just passed wallet_name variable directly from AppInitRPC -> CallRPC without going through the `gArgs` class. You could do this by making wallet_name a static global in this file (`static const std::string g_wallet_name;`) or an output ",https://github.com/bitcoin/bitcoin/pull/10868#discussion_r128032112,128032112,src/bitcoin-cli.cpp
ryanofsky,2017-07-18T16:59:37Z,"In commit ""[args] allow args to be cleared from ArgsManager""\n\nNot sure, but I think you might be able to write this as `return mapArgs.erase(strArg) | mapMultiArgs.erase(strArg)`. Should avoid `||` though because that will short circuit.",https://github.com/bitcoin/bitcoin/pull/10868#discussion_r128034402,128034402,src/util.cpp
jnewbery,2017-07-18T18:52:39Z,Thanks. Fixed,https://github.com/bitcoin/bitcoin/pull/10868#discussion_r128063377,128063377,src/bitcoin-cli.cpp
jnewbery,2017-07-18T18:52:56Z,Neat! Thanks. Fixed,https://github.com/bitcoin/bitcoin/pull/10868#discussion_r128063439,128063439,src/util.cpp
jnewbery,2017-07-18T18:53:08Z,"Yes, much better. Thanks",https://github.com/bitcoin/bitcoin/pull/10868#discussion_r128063481,128063481,src/bitcoin-cli.cpp
jnewbery,2017-07-18T18:56:43Z,"I prefer not to set this as a global or pass it through `main()`, `CommandLineRPC()` and `CallRPC()`. It makes sense to me to set up all the config in `AppInitRPC()` and have it contained in the standard `gArgs` global.\n\nHappy to reconsider if making changes to util.cpp is a blocker for this PR.",https://github.com/bitcoin/bitcoin/pull/10868#discussion_r128064332,128064332,src/bitcoin-cli.cpp
ryanofsky,2017-07-18T19:24:21Z,"> Happy to reconsider if making changes to util.cpp is a blocker for this PR.\n\nNot a big deal to me. If someone else objects to the util.cpp change though, we should just be aware that it isn't a critical part of the PR and there are various ways to get the same behavior.",https://github.com/bitcoin/bitcoin/pull/10868#discussion_r128071504,128071504,src/bitcoin-cli.cpp
