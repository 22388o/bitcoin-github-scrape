hebasto,2021-03-12 22:42:45,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/21427#issuecomment-797797319,797797319,
DrahtBot,2021-03-14 16:55:43,<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit e0bc27a14ceb18bfe3dd9ebdae6bef447c4ec922<br>(master) | commit 8d549770606d969875a5f1c60fcb3babfc5dced5<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`3b30f4198b68fadf...`](https://drahtbot.space/guix/bitcoin/bitcoin/e0bc27a14ceb18bfe3dd9ebdae6bef447c4ec922/bitcoin-e0bc27a14ceb-aarch64-linux,https://github.com/bitcoin/bitcoin/pull/21427#issuecomment-798940663,798940663,
DrahtBot,2021-03-22 12:10:08,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 63952f73b3041468fe3b25fa54858db7899273fa<br>(master) | commit c23ecbb9b18a302090179d32310d671d4ca5ac4a<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`5484237ee5c3fa99...`](https://drahtbot.space/gitian/bitcoin/bitcoin/63952f73b3041468fe3b25fa54858db7899273fa/bitcoin-63952f73b304-aarch64-l,https://github.com/bitcoin/bitcoin/pull/21427#issuecomment-804014268,804014268,
hebasto,2021-03-28 17:19:40,"#### Guix builds:\n```\n$ find output -type f -name *$(git rev-parse --short HEAD)*.* -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\nf75ddfc911ea50f5c2a77af45f3fb82a84457a3731c48d0f91657220185072ff  output/bitcoin-70ef58f466ae-aarch64-linux-gnu-debug.tar.gz\n517a2acf63aaeb65549a9f09d854b7496d362016861e73203c936b2d4a59a18f  output/bitcoin-70ef58f466ae-aarch64-linux-gnu.tar.gz\nd73ff9502",https://github.com/bitcoin/bitcoin/pull/21427#issuecomment-808927398,808927398,
sipa,2021-03-29 00:03:38,"```\n$ sha256sum $(find -type f | fgrep 70ef58f466ae | LANG=C sort)\nf75ddfc911ea50f5c2a77af45f3fb82a84457a3731c48d0f91657220185072ff  ./bitcoin-70ef58f466ae-aarch64-linux-gnu-debug.tar.gz\n517a2acf63aaeb65549a9f09d854b7496d362016861e73203c936b2d4a59a18f  ./bitcoin-70ef58f466ae-aarch64-linux-gnu.tar.gz\nd73ff950233e4e05356c2972a7d9d3868e67b6cdfd210982513ab7a4b448e267  ./bitcoin-70ef58f466ae-ar",https://github.com/bitcoin/bitcoin/pull/21427#issuecomment-808984053,808984053,
fanquake,2021-03-29 05:01:03,"This doesn't quite work properly when building depends on Darwin:\n```bash\n/bin/sh: -c: line 0: unexpected EOF while looking for matching `''\n/bin/sh: -c: line 1: syntax error: unexpected end of file\ngmake: *** [Makefile:5: print-build_id_string] Error 2\n```\n\n`ranlib` and `strip` don't actually accept a `--version` argument:\n```bash\n/Applications/Xcode.app/Contents/Developer/Toolc",https://github.com/bitcoin/bitcoin/pull/21427#issuecomment-809066114,809066114,
dongcarl,2021-03-29 23:51:48,"I'm switching this to draft because upon further inspection, the situation is more complicated than I thought. I want to thank fanquake's rigorous testing for inspiring me to check everything.\n\nAt first, I realized that the cause of the error message below:\n```sh\n/bin/sh: -c: line 0: unexpected EOF while looking for matching `''\n/bin/sh: -c: line 1: syntax error: unexpected end of file\",https://github.com/bitcoin/bitcoin/pull/21427#issuecomment-809800343,809800343,
dongcarl,2021-04-08 17:34:52,I believe the problem described in https://github.com/bitcoin/bitcoin/pull/21427#issuecomment-809800343 is now fixed. Thanks to theuni for his help!,https://github.com/bitcoin/bitcoin/pull/21427#issuecomment-816009978,816009978,
dongcarl,2021-04-09 00:19:30,Made the `gen_id` script recognize the `DEBUG` environment variable and output its hash preimage to stderr so that we can debug weird caching issues easier in the future,https://github.com/bitcoin/bitcoin/pull/21427#issuecomment-816316567,816316567,
laanwj,2021-05-05 12:18:04,"Concept and light code review ACK fa872c9af397837bb17859b5f43adec71239682a\n\nAlso checked that the messages mentioned in #21242 are gone now.\n\nI see no downsides to this approach. Factoring the generation of the ID string out to an external script makes it easier to understand what is happening, too.\n",https://github.com/bitcoin/bitcoin/pull/21427#issuecomment-832641428,832641428,
hebasto,2021-03-13 14:29:38,"Why adding `-o /dev/null` (here and other places)?\n\nFrom GCC [docs](https://gcc.gnu.org/onlinedocs/gcc-9.3.0/gcc/Overall-Options.html#Overall-Options):\n> The output is in the form of preprocessed source code, which is sent to the standard output.\n> Input files that donâ€™t require preprocessing are ignored.\n\nThat means no output for `-E` when passing `/dev/null` as an input, right?",https://github.com/bitcoin/bitcoin/pull/21427#discussion_r593757830,593757830,depends/Makefile
dongcarl,2021-03-15 16:14:34,"When I execute: `gcc -E -v -xc++ - < /dev/null | xclip -sel clip`, here's what I get in my clipboard:\n```\n# 1 ""<stdin>""\n# 1 ""<built-in>""\n# 1 ""<command-line>""\n# 1 ""/usr/include/stdc-predef.h"" 1 3 4\n# 1 ""<command-line>"" 2\n# 1 ""<stdin>""\n```",https://github.com/bitcoin/bitcoin/pull/21427#discussion_r594478610,594478610,depends/Makefile
