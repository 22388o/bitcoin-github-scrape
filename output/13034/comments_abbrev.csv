promag,2018-04-20T01:54:33Z,"Note to reviewers, I would prefer to have base PR's reviewed and merged first, but feel free to stay around and comment.\n\n2nd commit is mostly moved code (67420d3).",https://github.com/bitcoin/bitcoin/pull/13034#issuecomment-382940552,382940552,
ryanofsky,2018-04-20T10:48:15Z,"> which will be useful for [...] src/interface/walletmanager.h for UI and process separation (@ryanofsky sgty?);\n\nIt does not seem correct to me to claim shallow organizational changes like this PR, #12587, or #13017 will help with process separation or with loading and unloading wallets after startup. I don't think these changes will hurt anything either (except maybe giving me a few interest",https://github.com/bitcoin/bitcoin/pull/13034#issuecomment-383059451,383059451,
promag,2018-04-20T12:29:46Z,"@ryanofsky thanks for the feedback.\n\n> I don't see a reason why you'd want it to use pimpl\n\nNo reason at all, removed.\n\n> Personally, I would prefer to just manage wallets with standard c++ data structures and synchronization primitives instead of having a management interface\n\nIn the case of dynamic wallet load/unload that would lead to code duplication right? - UI and RPC layers ",https://github.com/bitcoin/bitcoin/pull/13034#issuecomment-383080469,383080469,
promag,2018-04-20T12:38:20Z,"> why you would want to expose and duplicate it in src/interfaces/ outside the wallet, instead of just adding a simple handleUnloadWallet callback for the GUI to complement the existing handleLoadWallet and getWallets.\n\n@ryanofsky I don't, I was asking for your feedback. So you also suggest to add `interfaces::Node::loadWallet` and `interfaces::Node::unloadWallet` and or alike?",https://github.com/bitcoin/bitcoin/pull/13034#issuecomment-383082536,383082536,
ryanofsky,2018-04-20T15:00:32Z,"> So you also suggest to add interfaces::Node::loadWallet and interfaces::Node::unloadWallet and or alike?\n\n`loadWallet` might make sense in short term. Longer term with #10102, though I think it would be replaced by a `makeWallet` method in [`interfaces::Init`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/init.h) to allow the GUI to create wallets without going through the ",https://github.com/bitcoin/bitcoin/pull/13034#issuecomment-383124508,383124508,
jnewbery,2018-04-24T15:59:37Z,needs rebase,https://github.com/bitcoin/bitcoin/pull/13034#issuecomment-383986464,383986464,
promag,2018-04-24T16:30:09Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/13034#issuecomment-383996640,383996640,
jnewbery,2018-04-24T17:45:42Z,"Seems reasonable. Is the plan for `WalletManager` to eventually subsume `WalletInit`?\n\nTested ACK d04cd68d5d1a6b1ddaa36b9eb6884014f62da6ea",https://github.com/bitcoin/bitcoin/pull/13034#issuecomment-384020392,384020392,
promag,2018-04-24T18:13:53Z,"@jnewbery thanks for the review.\n\n> Is the plan for WalletManager to eventually subsume WalletInit?\n\nIMO some code in `WalletInit` could be moved to `WalletManager`, especially the one that can be used by dynamic wallet load/unloading. `WalletInit` would call those new methods.\n\nSome other code of `CWallet` could be moved here too. I'll follow up.",https://github.com/bitcoin/bitcoin/pull/13034#issuecomment-384029379,384029379,
promag,2018-04-29T00:47:34Z,Rebased due #12830 which added a new test file.,https://github.com/bitcoin/bitcoin/pull/13034#issuecomment-385216247,385216247,
DrahtBot,2018-09-21T17:12:09Z,"<!--5fd3d806e98f4a0ca80977bb178665a0-->There hasn't been much activity lately and the patch still needs rebase, so I am closing this for now. Please let me know when you want to continue working on this, so the pull request can be re-opened.",https://github.com/bitcoin/bitcoin/pull/13034#issuecomment-423608915,423608915,
promag,2018-04-20T01:58:51Z,"BTW, I'm planning to move the iteration to `WalletManager` and make `MaybeCompactWalletDB(WalletDatabase& dbh)`. This way `WalletManager` dependency is removed here.\n\n@jnewbery it would also move `scheduler.scheduleEvery(MaybeCompactWalletDB, 500);` to `WalletManager`.",https://github.com/bitcoin/bitcoin/pull/13034#discussion_r182929363,182929363,src/wallet/walletdb.cpp
ken2812221,2018-04-20T08:03:16Z,It would be better to use spaces.,https://github.com/bitcoin/bitcoin/pull/13034#discussion_r182973897,182973897,src/Makefile.am
promag,2018-04-20T08:37:10Z,"Fixed, ty.",https://github.com/bitcoin/bitcoin/pull/13034#discussion_r182981844,182981844,src/Makefile.am
skeees,2018-04-20T16:53:17Z,if a wallet is canonically identified by its name - you should probably prevent adding a wallet with the same name in AddWallet - it looks like you're doing find comparison by address there?,https://github.com/bitcoin/bitcoin/pull/13034#discussion_r183110224,183110224,src/wallet/walletmanager.cpp
TheSamHughes,2018-04-22T20:44:53Z,"Doesn't seem like a good idea to be needlessly copying by value, const reference should be used. However in this case I  can see you are taking a copy in the scope of the critical section, however this doesnt make it thread safe, as the wallets them selves can still be deleted, I would recommend moving them to be refcounted.",https://github.com/bitcoin/bitcoin/pull/13034#discussion_r183250661,183250661,src/wallet/rpcwallet.cpp
promag,2018-04-22T20:51:25Z,"> I would recommend moving them to be refcounted\n\nThat's the plan (for instance, ~~#11402~~ #13063). Currently wallets aren't deleted so this is safe for now.",https://github.com/bitcoin/bitcoin/pull/13034#discussion_r183250907,183250907,src/wallet/rpcwallet.cpp
promag,2018-04-24T18:06:37Z,"Currently those kinds of checks are in `WalletInit::Verify()`. Among other things, I would like to move that to `WalletManager` since those checks will be needed after for dynamic wallet loading (and so doesn't make sense to be in `WalletInit`).",https://github.com/bitcoin/bitcoin/pull/13034#discussion_r183828946,183828946,src/wallet/walletmanager.cpp
