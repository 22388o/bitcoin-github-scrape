vinniefalco,2013-05-28T14:18:12Z,Here's a decent comparison highlighting the benefits of git-subtree over submodules:\nhttp://blogs.atlassian.com/2013/05/alternatives-to-git-submodule-git-subtree/\n\nThis blog post describes my experiences with submodules:\nhttp://codingkilledthecat.wordpress.com/2012/04/28/why-your-company-shouldnt-use-git-submodules/\n,https://github.com/bitcoin/bitcoin/pull/2702#issuecomment-18553293,18553293,
sipa,2013-06-22T14:20:43Z,"This pull request still contains a ""Remove leveldb in preparation for git-subtree"", which was already done.\n\nCan you rebase this, and only include relevant commits?\n\nCode changes look good to me otherwise.\n",https://github.com/bitcoin/bitcoin/pull/2702#issuecomment-19857537,19857537,
vinniefalco,2013-06-22T15:53:33Z,"Roger that, I have rewritten the branch. It will need to pass through the automated testing again, although in theory the files are still the same. But don't take my word for it! I rewrote public history.\n",https://github.com/bitcoin/bitcoin/pull/2702#issuecomment-19858933,19858933,
vinniefalco,2013-06-22T16:11:49Z,"As per sipa's comments, if you want individual leveldb commits to appear in the bitcoin commit log instead of a squash, that can be done. But the price is that first the entire leveldb commit log must be merged into bitcoin's commit log once. After that, new commits to leveldb will appear incrementally.\n",https://github.com/bitcoin/bitcoin/pull/2702#issuecomment-19859196,19859196,
sipa,2013-06-22T16:15:46Z,"I'd prefer to have access to the individual changes that were made to the leveldb subtree.\n\nIdeally, the leveldb changes appear as individual commits in our repository, but that may be hard (I'm not familiar enough with git-subtree yet). An alternative is having a leveldb branch (or separate) repository under the bitcoin project, and occasionally pull changes from there through such a squashed c",https://github.com/bitcoin/bitcoin/pull/2702#issuecomment-19859277,19859277,
vinniefalco,2013-06-22T19:08:24Z,Updated the version of leveldb to 1.12.\n,https://github.com/bitcoin/bitcoin/pull/2702#issuecomment-19863013,19863013,
mikehearn,2013-06-25T10:16:14Z,"LGTM. I didn't notice this pull also updated the version, my mistake. The diff is identical to what I got doing it the old fashioned way, so it seems like the upgrade is a no-brainer.\n\nTo copy what I wrote before, the fix for CompactRange() would be security sensitive if we ever used that call anywhere. Given the risk of someone introducing a call to that in future, we should ensure this upgrade",https://github.com/bitcoin/bitcoin/pull/2702#issuecomment-19966507,19966507,
Diapolo,2013-06-25T11:41:46Z,"I vote for upgrading to the latest LevelDB also, as we seem to have quite a few strange related DB-corruption issues.\n",https://github.com/bitcoin/bitcoin/pull/2702#issuecomment-19970400,19970400,
luke-jr,2013-06-25T16:21:53Z,Has anyone done the necessary audit to be sure there aren't some uncontroversial bugfixes which could affect Bitcoin network behaviour?\n,https://github.com/bitcoin/bitcoin/pull/2702#issuecomment-19988402,19988402,
vinniefalco,2013-06-27T22:01:43Z,The repository for Ripple and Bitcoin's fork of LevelDB has been moved to the Ripple organization:\n\nhttps://github.com/ripple/leveldb\n,https://github.com/bitcoin/bitcoin/pull/2702#issuecomment-20158124,20158124,
sipa,2013-06-27T22:09:03Z,@gavinandresen @jgarzik @laanwj @gmaxwell Are you in favor of having a bitcoin/leveldb repository?\n,https://github.com/bitcoin/bitcoin/pull/2702#issuecomment-20158535,20158535,
jgarzik,2013-06-27T22:11:38Z,"/me rather liked the in-tree attributes.  That was one of the selling points in moving to leveldb from BDB: it would be in-tree, so no crazy version troubles due to strange linking.\n",https://github.com/bitcoin/bitcoin/pull/2702#issuecomment-20158666,20158666,
vinniefalco,2013-06-27T22:17:18Z,"@jgarzik Yes, note that what you have now is ""in-tree."" What @sipa is asking is if you want to also have as a public repository, your fork of leveldb.\n\n@sipa I say, why not add bitcoin/leveldb? There's no downside to it. You can either fork the one from ripple, or create your own empty repository and push to it like this:\n\n```\n    # From your local bitcoin repository\n\n    # add a remote for",https://github.com/bitcoin/bitcoin/pull/2702#issuecomment-20158952,20158952,
sipa,2013-06-27T22:18:00Z,"@jgarzik No one suggests changing that. This is using git-subtree, so a copy of the LevelDB source is still inside our code, but there's a separate repository where development of our LevelDB tree can happen (it has significant changes, including a non-upstream Windows port with some patches by us). This way, the LevelDB code can live somewhat independently, but we can easily synchronize the in-re",https://github.com/bitcoin/bitcoin/pull/2702#issuecomment-20158988,20158988,
sipa,2013-06-27T22:20:03Z,@vinniefalco No need to yell.\n,https://github.com/bitcoin/bitcoin/pull/2702#issuecomment-20159092,20159092,
vinniefalco,2013-06-27T22:21:23Z,"@sipa Yeah yeah, I forgot to mark those commands as ""code"" in GitHub flavored markdown so they became section headers in large bold text.\n\nAnyway, here's a simple improvement for bringing in LevelDB that lets you trim it from the Makefile or whatever and also will speed up your build:\n\nhttps://gist.github.com/vinniefalco/5880905\n\nAt some point I will make it work without the fancy macros and",https://github.com/bitcoin/bitcoin/pull/2702#issuecomment-20159155,20159155,
mikehearn,2013-06-28T08:59:14Z,"To answer Luke, yes, I audited the changes and didn't see anything that\ncould cause desynchronization or other security issues. The FD limit was\nraised but we did that already, I think.\n\nOn Fri, Jun 28, 2013 at 12:21 AM, Vinnie Falco notifications@github.comwrote:\n\n> @sipa https://github.com/sipa Yeah yeah, I forgot to mark those\n> commands as ""code"" in GitHub flavored markdown.\n> \n> Anyw",https://github.com/bitcoin/bitcoin/pull/2702#issuecomment-20177346,20177346,
vinniefalco,2013-07-01T15:39:02Z,I've amended the pull request to include Vaclav's changes from 6/12/2013:\n**Added GNU/kFreeBSD kernel name (TARGET_OS)**\n,https://github.com/bitcoin/bitcoin/pull/2702#issuecomment-20289935,20289935,
BitcoinPullTester,2013-07-08T18:11:38Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/fb1da62318f5a7f6e3ec31cdc02178a5445870e4 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/2702#issuecomment-20624770,20624770,
vinniefalco,2013-07-22T03:51:13Z,Should I rebase this? It's been 2 months...\n,https://github.com/bitcoin/bitcoin/pull/2702#issuecomment-21323642,21323642,
mikehearn,2013-07-23T18:39:37Z,"It seems like a simple merge, not sure why it's not done yet. There's no changes in the new leveldb that could cause problems.\n",https://github.com/bitcoin/bitcoin/pull/2702#issuecomment-21436265,21436265,
vinniefalco,2013-07-23T18:44:14Z,"FYI, in Ripple we are trying out HyperLevelDB and it is looking pretty awesome.\n\nhttps://github.com/rescrv/HyperLevelDB\n",https://github.com/bitcoin/bitcoin/pull/2702#issuecomment-21436587,21436587,
gmaxwell,2013-07-23T21:08:52Z,"Okay, I did a coinstate rebuild at height 248116 with this code and got a bit identical UTXO set at the end.\n\nI had a little concern about the level 0 compaction fix because it looked like under some corner case conditions (and not just making a compact call) that it could screw up and lose some modifications to the database.   Even if thats true, that kind of corruption hasn't happened for at l",https://github.com/bitcoin/bitcoin/pull/2702#issuecomment-21446175,21446175,
sipa,2013-07-28T11:01:22Z,"I think this code has had sufficient review, so I'm merging this.\n\nI've since setup a bitcoin/leveldb repository, but I'm not familiar enough with git-subtree to set up things properly. \n",https://github.com/bitcoin/bitcoin/pull/2702#issuecomment-21681833,21681833,
vinniefalco,2013-07-28T11:25:36Z,"You have my contact info, whenever you want I can teach you\n\nOn Sun, Jul 28, 2013 at 4:01 AM, Pieter Wuille notifications@github.comwrote:\n\n> I think this code has had sufficient review, so I'm merging this.\n> \n> I've since setup a bitcoin/leveldb repository, but I'm not familiar enough\n> with git-subtree to set up things properly.\n> \n> â€”\n> Reply to this email directly or view it on GitH",https://github.com/bitcoin/bitcoin/pull/2702#issuecomment-21682120,21682120,
vinniefalco,2013-08-19T04:03:49Z,"@gmaxwell To apply a patch to leveldb all you need to do is split the subtree out of Bitcoin using ""git subtree split"", and it will become an orphaned branch in your local repo (a branch that doesn't share any history with bitcoin). Then you apply the level db patches to that branch. Finally, use ""git subtree pull"" or ""git subtree merge"" (preferably with --ff-only) on your local orphaned leveldb b",https://github.com/bitcoin/bitcoin/pull/2702#issuecomment-22849947,22849947,
mikehearn,2013-08-19T09:11:54Z,"> I had a little concern about the level 0 compaction fix because it looked like \n> under some corner case conditions (and not just making a compact call) that \n> it could screw up and lose some modifications to the database.\n\nI had the same concern when I saw it, so I checked with Sanjay and he said it could only occur if you manually used CompactRange. I guess he'd know, so I left it at that",https://github.com/bitcoin/bitcoin/pull/2702#issuecomment-22859390,22859390,
sipa,2013-08-19T09:12:54Z,Note that the changes in this pull request have been superced by #2907 .\n,https://github.com/bitcoin/bitcoin/pull/2702#issuecomment-22859450,22859450,
