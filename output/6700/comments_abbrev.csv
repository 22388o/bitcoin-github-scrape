laanwj,2015-09-21T11:57:40Z,"ACK, I think it's a good idea to build the transactions in-place instead of hardcoding them.\n",https://github.com/bitcoin/bitcoin/pull/6700#issuecomment-141951405,141951405,
dcousens,2015-09-22T01:43:55Z,@laanwj could we use a JSON format instead?\n\nRelying on the test creator to intricately build a transaction each time can be more error prone then just adapting a human-readable data format to what is needed for the test case.\n,https://github.com/bitcoin/bitcoin/pull/6700#issuecomment-142156812,142156812,
luke-jr,2015-09-22T02:00:02Z,@dcousens Error-prone in what sense? Remember the purpose here is to find errors. :)\n,https://github.com/bitcoin/bitcoin/pull/6700#issuecomment-142158896,142158896,
dcousens,2015-09-22T03:29:29Z,"@luke-jr from my own experience in writing tests for https://github.com/bitcoinjs/bitcoinjs-lib,  the most common source of regressions / uncaught errors was actually in the test being poorly written, or a simple syntax error causing something to be missed.\nThis may have been symptomatic of how wonderful Javascript is as a language.\n\nAdopting a data-driven approach for us meant we only had to v",https://github.com/bitcoin/bitcoin/pull/6700#issuecomment-142170080,142170080,
laanwj,2015-09-22T09:45:37Z,"In general I'm in favor of data-driven tests, as it alllows comparing between implementations.\n\nBut there is a good point that tests should not be too fragile, they should only break when something is wrong, so they should test what matters, not the e.g. an exact sequence of steps if only the outcome is relevant.\n\nIn the case of bloom filtering the goal is to test bloom filtering. Not transact",https://github.com/bitcoin/bitcoin/pull/6700#issuecomment-142229560,142229560,
dcousens,2015-10-22T08:11:39Z,@laanwj the alternative of in-lining all the TX construction code seems worse IMHO.  Why not break it out to a JSON file to keep the tests streamline?\n(I may be underestimating how 'streamline' this will be for C++ however)\n,https://github.com/bitcoin/bitcoin/pull/6700#issuecomment-150140082,150140082,
dcousens,2015-11-24T03:26:51Z,"If this is wanted, then any reason not to merge?\n",https://github.com/bitcoin/bitcoin/pull/6700#issuecomment-159140292,159140292,
laanwj,2015-11-24T09:37:10Z,I don't feel strongly enough about it to merge it. Certainly with just my ACK. Seems at least you have some concerns with it.\n\nNeeds input from different people.\n,https://github.com/bitcoin/bitcoin/pull/6700#issuecomment-159208315,159208315,
dcousens,2015-11-25T03:06:43Z,@laanwj my concern is this makes it more difficult to port these tests to other libraries based on the serialized transactions alone.\nBut it does make the tests more transparent as to what they might actually be testing.\n,https://github.com/bitcoin/bitcoin/pull/6700#issuecomment-159474376,159474376,
luke-jr,2016-01-17T18:51:36Z,@dcousens I don't think it makes these any more difficult than any other tests we already have?\n,https://github.com/bitcoin/bitcoin/pull/6700#issuecomment-172364593,172364593,
dcousens,2016-01-18T01:11:46Z,"@luke-jr well,  the serialized JSON fixtures are usually as simple as a copy paste.  These fixtures would mean I'd have to compile the code and generate the fixtures my self.\n",https://github.com/bitcoin/bitcoin/pull/6700#issuecomment-172403233,172403233,
luke-jr,2016-01-18T01:58:17Z,"I'm comparing it with the _other_ tests, not the current version of _this_ test...\n",https://github.com/bitcoin/bitcoin/pull/6700#issuecomment-172406870,172406870,
laanwj,2016-01-20T12:16:29Z,"It doesn't seem there is strong enough consensus to make this change, so going to close this.\n",https://github.com/bitcoin/bitcoin/pull/6700#issuecomment-173186377,173186377,
