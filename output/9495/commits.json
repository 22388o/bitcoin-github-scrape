[
  {
    "sha": "f5daff730774f8268d64622b9a05f075021e06a8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNWRhZmY3MzA3NzRmODI2OGQ2NDYyMmI5YTA1ZjA3NTAyMWUwNmE4",
    "commit": {
      "author": {
        "name": "Jeremy Rubin",
        "email": "jeremy.l.rubin@gmail.com",
        "date": "2017-01-09T16:13:37Z"
      },
      "committer": {
        "name": "Jeremy Rubin",
        "email": "jeremy.l.rubin@gmail.com",
        "date": "2017-01-20T23:15:27Z"
      },
      "message": "Fix CCheckQueue IsIdle (potential) race condition and remove dangerous constructors.",
      "tree": {
        "sha": "a5946f8ef62e3545b9e10edef17d3d56b2a0b4eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a5946f8ef62e3545b9e10edef17d3d56b2a0b4eb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f5daff730774f8268d64622b9a05f075021e06a8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5daff730774f8268d64622b9a05f075021e06a8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f5daff730774f8268d64622b9a05f075021e06a8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5daff730774f8268d64622b9a05f075021e06a8/comments",
    "author": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "25720fc394e27a951bcad26095fb5a711bfacb8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/25720fc394e27a951bcad26095fb5a711bfacb8f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/25720fc394e27a951bcad26095fb5a711bfacb8f"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 12,
      "deletions": 10
    },
    "files": [
      {
        "sha": "ea12df66dd0e5caf8f021b1a9271eab606bd94d3",
        "filename": "src/checkqueue.h",
        "status": "modified",
        "additions": 12,
        "deletions": 10,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f5daff730774f8268d64622b9a05f075021e06a8/src/checkqueue.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f5daff730774f8268d64622b9a05f075021e06a8/src/checkqueue.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkqueue.h?ref=f5daff730774f8268d64622b9a05f075021e06a8",
        "patch": "@@ -127,6 +127,9 @@ class CCheckQueue\n     }\n \n public:\n+    //! Mutex to ensure only one concurrent CCheckQueueControl\n+    boost::mutex ControlMutex;\n+\n     //! Create a new check queue\n     CCheckQueue(unsigned int nBatchSizeIn) : nIdle(0), nTotal(0), fAllOk(true), nTodo(0), fQuit(false), nBatchSize(nBatchSizeIn) {}\n \n@@ -161,12 +164,6 @@ class CCheckQueue\n     {\n     }\n \n-    bool IsIdle()\n-    {\n-        boost::unique_lock<boost::mutex> lock(mutex);\n-        return (nTotal == nIdle && nTodo == 0 && fAllOk == true);\n-    }\n-\n };\n \n /** \n@@ -177,16 +174,18 @@ template <typename T>\n class CCheckQueueControl\n {\n private:\n-    CCheckQueue<T>* pqueue;\n+    CCheckQueue<T> * const pqueue;\n     bool fDone;\n \n public:\n-    CCheckQueueControl(CCheckQueue<T>* pqueueIn) : pqueue(pqueueIn), fDone(false)\n+    CCheckQueueControl() = delete;\n+    CCheckQueueControl(const CCheckQueueControl&) = delete;\n+    CCheckQueueControl& operator=(const CCheckQueueControl&) = delete;\n+    explicit CCheckQueueControl(CCheckQueue<T> * const pqueueIn) : pqueue(pqueueIn), fDone(false)\n     {\n         // passed queue is supposed to be unused, or NULL\n         if (pqueue != NULL) {\n-            bool isIdle = pqueue->IsIdle();\n-            assert(isIdle);\n+            ENTER_CRITICAL_SECTION(pqueue->ControlMutex);\n         }\n     }\n \n@@ -209,6 +208,9 @@ class CCheckQueueControl\n     {\n         if (!fDone)\n             Wait();\n+        if (pqueue != NULL) {\n+            LEAVE_CRITICAL_SECTION(pqueue->ControlMutex);\n+        }\n     }\n };\n "
      }
    ]
  }
]