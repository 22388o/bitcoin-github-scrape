fanquake,2016-11-09T05:37:19Z,"The fundrawtransaction test failed on two linux builds, same error for both:\n\n```\n.........\nfundrawtransaction.py:\nInitializing test directory /tmp/testz6xi8e_p/637\nstart_node: bitcoind started, waiting for RPC to come up\nstart_node: RPC succesfully started\nstart_node: bitcoind started, waiting for RPC to come up\nstart_node: RPC succesfully started\nstart_node: bitcoind started, waiting f",https://github.com/bitcoin/bitcoin/pull/9108#issuecomment-259337548,259337548,
ryanofsky,2016-11-10T19:54:21Z,"Fixed fundrawtransaction test, and added importmulti tests.\n",https://github.com/bitcoin/bitcoin/pull/9108#issuecomment-259790325,259790325,
jonasschnelli,2017-01-01T10:13:42Z,"Concept ACK.\nPlans to test this soon.",https://github.com/bitcoin/bitcoin/pull/9108#issuecomment-269897862,269897862,
gmaxwell,2017-01-19T20:28:18Z,utACK.,https://github.com/bitcoin/bitcoin/pull/9108#issuecomment-273889183,273889183,
morcos,2017-01-23T21:20:26Z,"utACK 6891d5e\n",https://github.com/bitcoin/bitcoin/pull/9108#issuecomment-274620480,274620480,
jtimon,2017-01-23T23:34:07Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/9108#issuecomment-274652778,274652778,
jtimon,2017-02-01T02:02:43Z,"utACK individual commits: 99c1aa169592a71c24e7a2475c50ad7598eafb65 6891d5e1f24e74561aeba45c4752756a760c281d\n\nCan we squash already?\n\n",https://github.com/bitcoin/bitcoin/pull/9108#issuecomment-276552843,276552843,
ryanofsky,2017-02-01T16:27:08Z,"Squashed 6891d5e1f24e74561aeba45c4752756a760c281d -> 89011a3032f635b6536a476bfa48502c5dcc7a65, and will look into Matt's comments.",https://github.com/bitcoin/bitcoin/pull/9108#issuecomment-276704807,276704807,
ryanofsky,2017-02-02T19:18:07Z,"Squashed 1b9969682e59e082855179e4c50fb1dd38227d67 -> 3d6dbed2c3132d53650b86f09d42e339149d3210 ([watchtime.3](https://github.com/ryanofsky/bitcoin/commits/pr/watchtime.3) -> [watchtime.4](https://github.com/ryanofsky/bitcoin/commits/pr/watchtime.4))\n\n",https://github.com/bitcoin/bitcoin/pull/9108#issuecomment-277054409,277054409,
ryanofsky,2017-02-02T19:39:57Z,"Latest changes conflicted (trivially) with #9607 and #9121, so rebased 3d6dbed2c3132d53650b86f09d42e339149d3210 -> b78ec3cc3dbf5e1fc2dc105c609574101e462ae8 ([watchtime.4](https://github.com/ryanofsky/bitcoin/commits/pr/watchtime.4) -> [watchtime.5](https://github.com/ryanofsky/bitcoin/commits/pr/watchtime.5))",https://github.com/bitcoin/bitcoin/pull/9108#issuecomment-277060200,277060200,
TheBlueMatt,2017-02-03T21:51:41Z,"utACK b78ec3cc3dbf5e1fc2dc105c609574101e462ae8 +/- wanting another comment, Didn't look too closely at tests.",https://github.com/bitcoin/bitcoin/pull/9108#issuecomment-277372110,277372110,
ryanofsky,2017-02-06T18:11:46Z,"Rebased b8fca20399c3528e5c293509629907f6874575e3 -> be820d8ad761b87ca61427ce8b3005b0f6db0d06 ([watchtime.7](https://github.com/ryanofsky/bitcoin/commits/pr/watchtime.7) -> [watchtime.8](https://github.com/ryanofsky/bitcoin/commits/pr/watchtime.8)) to fix conflict with #9227.\n",https://github.com/bitcoin/bitcoin/pull/9108#issuecomment-277764961,277764961,
TheBlueMatt,2017-02-07T15:13:11Z,be820d8ad761b87ca61427ce8b3005b0f6db0d06 appears to be equivalent to my previous utACK (b78ec3cc3dbf5e1fc2dc105c609574101e462ae8) plus a fixup for the comments I requested.,https://github.com/bitcoin/bitcoin/pull/9108#issuecomment-278028975,278028975,
laanwj,2017-02-09T06:41:28Z,"@jonasschnelli Looks like your suggestions have been carried out by @ryanofsky  and the ""changes requested"" can be cancelled?",https://github.com/bitcoin/bitcoin/pull/9108#issuecomment-278560433,278560433,
ryanofsky,2017-02-09T11:35:59Z,"Squashed b3ba65488d575899c6df2a98f9dc6447c93ae22d -> f35ce5172bb9c6bec6bb636ea349104b559d36de ([watchtime.10](https://github.com/ryanofsky/bitcoin/commits/pr/watchtime.10) -> [watchtime.11](https://github.com/ryanofsky/bitcoin/commits/pr/watchtime.11))\n",https://github.com/bitcoin/bitcoin/pull/9108#issuecomment-278617880,278617880,
jonasschnelli,2017-02-09T12:15:07Z,UtACK f35ce5172bb9c6bec6bb636ea349104b559d36de,https://github.com/bitcoin/bitcoin/pull/9108#issuecomment-278625139,278625139,
ryanofsky,2017-02-10T21:18:34Z,"Rebased on top of #9682 to avoid merge conflicts in the importmulti.py test. No other changes.\n\nf35ce5172bb9c6bec6bb636ea349104b559d36de -> a80f98b1c7a49432dc53d18d0fb51ac334de96be ([watchtime.11](https://github.com/ryanofsky/bitcoin/commits/pr/watchtime.11) -> [watchtime.12](https://github.com/ryanofsky/bitcoin/commits/pr/watchtime.12))\n",https://github.com/bitcoin/bitcoin/pull/9108#issuecomment-279068364,279068364,
jonasschnelli,2017-02-14T14:06:23Z,"Not sure if this is a nit or the intended behaviour:\nIf I re-import a watch only address (same address I have already imported), I get no notice that it was already present. ~~This may be okay.~~\n\nAnother option would be to reject the import with ""already exists"". ~~But the current overwrite-behaviour allows to re-set the timestamp which can be handy.~~",https://github.com/bitcoin/bitcoin/pull/9108#issuecomment-279715550,279715550,
jonasschnelli,2017-02-14T14:20:28Z,"Correction of my comment above.\nIf you re-import a watch-only, it does not set the new timestamp but still response with ""success"". I think we should do this (fail when reimport a watch-only)... \n```diff\ndiff --git a/src/wallet/rpcdump.cpp b/src/wallet/rpcdump.cpp\nindex 0a32259..401614c 100644\n--- a/src/wallet/rpcdump.cpp\n+++ b/src/wallet/rpcdump.cpp\n@@ -922,9 +922,12 @@ UniValue Pro",https://github.com/bitcoin/bitcoin/pull/9108#issuecomment-279719185,279719185,
ryanofsky,2017-02-14T15:14:13Z,"Ok, I can add logic to error on attempts to import watch only keys that have already imported. Note that your fix above is incomplete because it only covers `importmulti`, not `importaddress`, `importpubkey`, etc.\n\nI'll do it in a different PR though, unless you think it needs to be here, because this is longstanding behavior not really related to saving timestamps.",https://github.com/bitcoin/bitcoin/pull/9108#issuecomment-279734625,279734625,
jonasschnelli,2017-02-14T16:12:59Z,"Tested ACK of a58370e6a2d4dce50eefbcab5bde9f14facef8fc a80f98b1c7a49432dc53d18d0fb51ac334de96be on top of master (e87ce95fbdc6ca6ef822c978d98b2acba5948ee1).\nI agree with @ryanofsky that the overwrite-/already-exists-behavior can be fixed later.",https://github.com/bitcoin/bitcoin/pull/9108#issuecomment-279753162,279753162,
morcos,2017-02-14T17:48:05Z,re-utACK a80f98b,https://github.com/bitcoin/bitcoin/pull/9108#issuecomment-279781506,279781506,
sipa,2017-02-15T09:06:20Z,utACK a80f98b1c7a49432dc53d18d0fb51ac334de96be,https://github.com/bitcoin/bitcoin/pull/9108#issuecomment-279955036,279955036,
jonasschnelli,2017-01-20T09:43:20Z,shouldn't this be `int64_t nCreateTime`.,https://github.com/bitcoin/bitcoin/pull/9108#discussion_r97039670,97039670,src/wallet/wallet.cpp
jonasschnelli,2017-01-20T09:45:21Z,Is there a reason for not using `CKeyID` here?,https://github.com/bitcoin/bitcoin/pull/9108#discussion_r97039969,97039969,src/wallet/walletdb.cpp
jonasschnelli,2017-01-20T09:46:04Z,I don't see the reason for changing this from `CKeyID` to `uint160`?,https://github.com/bitcoin/bitcoin/pull/9108#discussion_r97040074,97040074,src/wallet/wallet.cpp
ryanofsky,2017-01-23T17:41:55Z,Changed from uint160 to CTxDestination in 777b3db229e162c524d49ab7b448421f51bfa5ca. The map isn't keyed by CKeyID anymore because it can also contain CScriptID entries for watch only keys.,https://github.com/bitcoin/bitcoin/pull/9108#discussion_r97373922,97373922,src/wallet/wallet.cpp
ryanofsky,2017-01-23T18:45:58Z,"Again this can hold CScriptID values, and is changed to CTxDestination in 777b3db229e162c524d49ab7b448421f51bfa5ca.",https://github.com/bitcoin/bitcoin/pull/9108#discussion_r97387105,97387105,src/wallet/walletdb.cpp
ryanofsky,2017-01-23T19:05:43Z,"Good catch, fixed in 6891d5e1f24e74561aeba45c4752756a760c281d.",https://github.com/bitcoin/bitcoin/pull/9108#discussion_r97391323,97391323,src/wallet/wallet.cpp
TheBlueMatt,2017-01-25T18:31:06Z,Shouldn't you try address.GetKeyID(keyID) first before you give up and use the CScriptID? Otherwise you end up using the P2SH of the P2PH.,https://github.com/bitcoin/bitcoin/pull/9108#discussion_r97846034,97846034,src/rpc/misc.cpp
TheBlueMatt,2017-01-25T19:01:38Z,"I'd significantly prefer to not expose this version, making it explicit to callers that the key's nCreateTime is being set to 0 (which, after this PR, implies the wallet's nTimeFirstKey is set to 1).",https://github.com/bitcoin/bitcoin/pull/9108#discussion_r97852789,97852789,src/wallet/wallet.cpp
TheBlueMatt,2017-01-25T19:04:01Z,I think we need to ignore this error - otherwise if a watchonly has been added in a previous version we will fail to erase here (as it might have no watchmeta)?,https://github.com/bitcoin/bitcoin/pull/9108#discussion_r97853299,97853299,src/wallet/walletdb.cpp
TheBlueMatt,2017-01-25T19:11:24Z,Maybe do overwrite here? Seems strange that we update in-wallet-state without updating on-disk state (and its probably a supported use-case to re-add something to wallet to set its date differently).,https://github.com/bitcoin/bitcoin/pull/9108#discussion_r97854914,97854914,src/wallet/walletdb.cpp
TheBlueMatt,2017-01-25T19:13:45Z,The second two calls to AddWatchOnly in processImport probably could take the timestamp argument.,https://github.com/bitcoin/bitcoin/pull/9108#discussion_r97855486,97855486,src/wallet/wallet.cpp
TheBlueMatt,2017-01-26T16:04:08Z,"Grr, meant for this to be on AddWatchOnly at line https://github.com/bitcoin/bitcoin/pull/9108/files#diff-b2bb174788c7409b671c46ccc86034bdL251",https://github.com/bitcoin/bitcoin/pull/9108#discussion_r98026098,98026098,src/wallet/wallet.cpp
jtimon,2017-02-01T01:56:19Z,"Missing this here?\n```\npwallet->UpdateTimeFirstKey(keyMeta.nCreateTime);\n```\nEDIT: no, LoadKeyMetadata calls it.",https://github.com/bitcoin/bitcoin/pull/9108#discussion_r98815970,98815970,src/wallet/walletdb.cpp
ryanofsky,2017-02-01T16:29:25Z,"Changed lookup order in 1ea9543ac25cd8976430beab2f913d4875767e8b. I didn't understand what you mean by P2SH of the P2PH, but I think it does make sense to prefer regular key metadata over watchonly key metadata if both exist.",https://github.com/bitcoin/bitcoin/pull/9108#discussion_r98933859,98933859,src/rpc/misc.cpp
ryanofsky,2017-02-01T16:29:39Z,Enabled overwrite in 50474f1305693bf22a995f0841ee27dad545d01a. This was just a mistake copying the line of code from taken from CWalletDB::WriteKey.,https://github.com/bitcoin/bitcoin/pull/9108#discussion_r98933927,98933927,src/wallet/walletdb.cpp
ryanofsky,2017-02-01T16:29:48Z,Having no watchmeta shouldn't be a problem. Erase still returns true if the key is not found. It just false if there is a database error.,https://github.com/bitcoin/bitcoin/pull/9108#discussion_r98933973,98933973,src/wallet/walletdb.cpp
ryanofsky,2017-02-02T18:58:36Z,"Thanks, added the two missing timestamp arguments in f87008a8b0edc677db6ec16036f7e9940a3c904d, and expanded the test to verify the fix.\n\nI very much agree that it's not good to expose the AddWatchOnly version not taking a timestamp, so I made it private in 1b9969682e59e082855179e4c50fb1dd38227d67. I also experimented with getting rid of the overload by adding the timestamp to AddWatchOnly meth",https://github.com/bitcoin/bitcoin/pull/9108#discussion_r99193593,99193593,src/wallet/wallet.cpp
TheBlueMatt,2017-02-03T21:45:16Z,"Ugh, I totally missed that its an override, thanks for catching that. Can you further document here that this method implies setting the first key time to 1?",https://github.com/bitcoin/bitcoin/pull/9108#discussion_r99429034,99429034,src/wallet/wallet.h
ryanofsky,2017-02-03T22:04:11Z,Added in 5dbd05d8f7c4fc86d1296a200a00a834b61fb5c3,https://github.com/bitcoin/bitcoin/pull/9108#discussion_r99432114,99432114,src/wallet/wallet.h
kallewoof,2017-02-09T07:37:31Z,"Nit: JSON represents integer values without quotes, so probably `"" \""timestamp\"" : int64     (number, optional) The crea...""`",https://github.com/bitcoin/bitcoin/pull/9108#discussion_r100245865,100245865,src/rpc/misc.cpp
kallewoof,2017-02-09T07:39:32Z,Is there a reason why this is not simply defaulting to 0 in `AddWatchOnly()` which would leave this line untouched?,https://github.com/bitcoin/bitcoin/pull/9108#discussion_r100246055,100246055,src/wallet/rpcdump.cpp
kallewoof,2017-02-09T07:44:06Z,"Nit:\n```diff\n-    for (auto it = mapKeyBirth.begin(); it != mapKeyBirth.end(); it++) {\n-        if (const CKeyID* keyID = boost::get<CKeyID>(&it->first)) {\n-            vKeyBirth.push_back(std::make_pair(it->second, *keyID));\n+    for (const auto& it : mapKeyBirth) {\n+        if (const CKeyID* keyID = boost::get<CKeyID>(&it.first)) {\n+            vKeyBirth.push_back(std::make_pair(it",https://github.com/bitcoin/bitcoin/pull/9108#discussion_r100246507,100246507,src/wallet/rpcdump.cpp
kallewoof,2017-02-09T07:45:21Z,Nit: worthwhile to add `// set and test` or similar as the single `=` might be mistaken for `==` by someone reading the code.,https://github.com/bitcoin/bitcoin/pull/9108#discussion_r100246616,100246616,src/wallet/rpcdump.cpp
kallewoof,2017-02-09T07:49:05Z,"Nit: as above, can be made to look a bit nicer with `for (const auto& it : mapKeyMetadata)` and `s/it->/it./`.",https://github.com/bitcoin/bitcoin/pull/9108#discussion_r100246962,100246962,src/wallet/wallet.cpp
kallewoof,2017-02-09T07:50:45Z,"Nit: (see above) make 2nd argument optional,\nNit 2: `CScript& dest`\n```C++\nbool AddWatchOnly(const CScript& dest, int64_t nCreateTime = 0);\n```",https://github.com/bitcoin/bitcoin/pull/9108#discussion_r100247147,100247147,src/wallet/wallet.h
kallewoof,2017-02-09T08:07:56Z,"Maybe I'm misreading the code, but the comment `Cannot determine birthday information` seems to refer to the if case below it being true; I would prefer comments being inside the block in this case.  I would probably also include brackets after doing so as the comment makes the single-line conditional state less obvious.",https://github.com/bitcoin/bitcoin/pull/9108#discussion_r100249107,100249107,src/wallet/wallet.cpp
ryanofsky,2017-02-09T10:59:49Z,Fixed in 6a56f6d77a4e0679ab88b354dea7143ec8539c4e,https://github.com/bitcoin/bitcoin/pull/9108#discussion_r100281000,100281000,src/rpc/misc.cpp
ryanofsky,2017-02-09T10:59:53Z,There was a lot of discussion about this above. We think it is safer to require the timestamp.,https://github.com/bitcoin/bitcoin/pull/9108#discussion_r100281022,100281022,src/wallet/rpcdump.cpp
ryanofsky,2017-02-09T11:00:05Z,Fixed in 6a56f6d77a4e0679ab88b354dea7143ec8539c4e,https://github.com/bitcoin/bitcoin/pull/9108#discussion_r100281048,100281048,src/wallet/rpcdump.cpp
ryanofsky,2017-02-09T11:00:14Z,Fixed in 6a56f6d77a4e0679ab88b354dea7143ec8539c4e,https://github.com/bitcoin/bitcoin/pull/9108#discussion_r100281070,100281070,src/wallet/rpcdump.cpp
ryanofsky,2017-02-09T11:00:24Z,Fixed in f95843a294dad786117bd40801c8bf40afcb8784,https://github.com/bitcoin/bitcoin/pull/9108#discussion_r100281096,100281096,src/wallet/wallet.cpp
ryanofsky,2017-02-09T11:00:29Z,Fixed in 6a56f6d77a4e0679ab88b354dea7143ec8539c4e,https://github.com/bitcoin/bitcoin/pull/9108#discussion_r100281106,100281106,src/wallet/wallet.cpp
ryanofsky,2017-02-09T11:00:52Z,Nit 2 fixed in b3ba65488d575899c6df2a98f9dc6447c93ae22d,https://github.com/bitcoin/bitcoin/pull/9108#discussion_r100281164,100281164,src/wallet/wallet.h
