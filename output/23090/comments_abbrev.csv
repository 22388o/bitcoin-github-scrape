michaelfolkson,2021-09-24 21:25:42,Leaning towards Concept NACK as the only upside appears to be making it prettier (I don't think this addresses any particular confusion) and don't think that upside is worth the short term disruption and invasive change.,https://github.com/bitcoin/bitcoin/pull/23090#issuecomment-926928258,926928258,
katesalazar,2021-09-24 21:28:25,"> Leaning towards Concept NACK as the only upside appears to be making it prettier (I don't think this addresses any particular confusion) and don't think that upside is worth the short term disruption and invasive change.\n\nMhnmyea, I wouldna tried this if I had known it would expand this big.\n",https://github.com/bitcoin/bitcoin/pull/23090#issuecomment-926929390,926929390,
michaelfolkson,2021-09-24 21:35:38,:) I think [good first issues](https://github.com/bitcoin/bitcoin/labels/good%20first%20issue) would be a better starting point until you understand the codebase/project better.,https://github.com/bitcoin/bitcoin/pull/23090#issuecomment-926932409,926932409,
katesalazar,2021-09-25 10:55:09,"Reading CI logs, I think at this point these changes spill out to\nbitcoin configuration files (in\nhttps://github.com/bitcoin/bitcoin/blame/16ccb3a1/doc/bitcoin-conf.md#L32\nit's rejecting \[main\] and \[test\]).\n\nI hadn't intended that.\n\nI'm not sure about the choice between shrinking scope or\nkeep pushing forward. I think it's best to keep pushing forward and\neventually break the",https://github.com/bitcoin/bitcoin/pull/23090#issuecomment-927103962,927103962,
DrahtBot,2021-09-25 15:01:09,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23157](https://github.com/bitcoin/bitcoin/pull/23157) (txmempool -/-> validation 1/2: improve performance of check() and",https://github.com/bitcoin/bitcoin/pull/23090#issuecomment-927133478,927133478,
katesalazar,2021-09-25 16:29:40,"~~test/functional/p2p_dos_header_tree.py failures are not very informative and\ntest/functional/feature_backwards_compatibility.py seems to require some\nconfiguration efforts, so I expect no more progress here.~~\n",https://github.com/bitcoin/bitcoin/pull/23090#issuecomment-927145329,927145329,
katesalazar,2021-09-26 19:20:14,"~~Currently pursuing locally a feeling that 22817 fixes\ntest/functional/feature_backwards_compatibility.py in\nboth my host and CI. ðŸ¤”~~\n",https://github.com/bitcoin/bitcoin/pull/23090#issuecomment-927356598,927356598,
Sjors,2021-09-29 08:58:39,"Concept NACK. This will create headaches for years for only cosmetic benefit. The code that processes config files is already rather complicated and full of unpleasant backward compatibility quirks. See e.g. #15934\n\nSee also https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#refactoring\n\n> Pull requests that refactor the code should not be made by new contributors. It requires ",https://github.com/bitcoin/bitcoin/pull/23090#issuecomment-929978784,929978784,
katesalazar,2021-10-01 20:30:10,Sjors: you are so right you almost convinced me. ðŸ˜–,https://github.com/bitcoin/bitcoin/pull/23090#issuecomment-932531142,932531142,
meshcollider,2021-10-04 02:04:55,"Hi @katesalazar, thank you very much for contributing! As others have said, unfortunately this change is a bit too nuanced to be worth the cosmetic change and has already received NACKs, so I'm going to have to close it sorry.\n\nAs michaelfolkson said, please do check out the `good-first-issue` tag for some good starting-point issues that you might like to help with ðŸ™‚ Look forward to further co",https://github.com/bitcoin/bitcoin/pull/23090#issuecomment-933087254,933087254,
