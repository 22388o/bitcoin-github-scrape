[
  {
    "sha": "facdf530c731fbe80b86f484175ccf7a691c7131",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWNkZjUzMGM3MzFmYmU4MGI4NmY0ODQxNzVjY2Y3YTY5MWM3MTMx",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-07-21T08:56:12Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-07-21T09:03:35Z"
      },
      "message": "contrib: Clean up previous_releases.py\n\n* Replace curl single char options with their verbose counterpart\n* Stricter check for tarballHash",
      "tree": {
        "sha": "16958777505c9be666c627790bf4922e4d7aaf7c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/16958777505c9be666c627790bf4922e4d7aaf7c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/facdf530c731fbe80b86f484175ccf7a691c7131",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUh1SQv9GRq0YWxDqe43xqNjYEyak6gpfUyc/mpN4V63xMftBG24lE3Wfukr9xXj\np4dNdir9nQZQPMgH5FJG0ujU33kUzBsMaDfON5HX+JnUoO9RbkXGqo0i3zZd3ll2\nTcb+arhNESeH9amJhMGaye6WgZrRyTHZRkfdUoACfr1Th6JUO/LZdwIF/FQNwldZ\nDQFJhGXRAJEQNNetWfar9Hd3xQkx4INkd/kb7bjPBqDfDcjMapb5CD9yfB7fLQuE\nVXVyzWZ3ouyXJxJ76skOjhTM0hA8WyWX42daQ7aqI8eU8T6CRip9Arn8GGHBwP/Y\nqfl+MrmkH6DaqCaCioiEwJXHKeuWsXz4fNUilnHcW0B3sKNzcAirblRi6+hbq0II\niqeU8SgMvZA9t8Ys3qvKb9THLfIQ1Fau941umthH3rb8i0/aW4ySyeOC/Ll16fLS\nB6aPHa8fU2iw7QxxasPpvSWdfwxfJHfUDwWQwmp210Ru9uMcZO07DvRnoGnjE3OM\nttvpXORf\n=rpMS\n-----END PGP SIGNATURE-----",
        "payload": "tree 16958777505c9be666c627790bf4922e4d7aaf7c\nparent ea595d39f7e782f53cd9403260c6c1d759d4a61a\nauthor MarcoFalke <falke.marco@gmail.com> 1595321772 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1595322215 +0200\n\ncontrib: Clean up previous_releases.py\n\n* Replace curl single char options with their verbose counterpart\n* Stricter check for tarballHash\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/facdf530c731fbe80b86f484175ccf7a691c7131",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/facdf530c731fbe80b86f484175ccf7a691c7131",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/facdf530c731fbe80b86f484175ccf7a691c7131/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ea595d39f7e782f53cd9403260c6c1d759d4a61a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea595d39f7e782f53cd9403260c6c1d759d4a61a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ea595d39f7e782f53cd9403260c6c1d759d4a61a"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 17,
      "deletions": 22
    },
    "files": [
      {
        "sha": "5599051cf3003a7b1f5406d73a377e4846acb8c6",
        "filename": "contrib/devtools/previous_release.py",
        "status": "modified",
        "additions": 17,
        "deletions": 22,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/facdf530c731fbe80b86f484175ccf7a691c7131/contrib/devtools/previous_release.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/facdf530c731fbe80b86f484175ccf7a691c7131/contrib/devtools/previous_release.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/previous_release.py?ref=facdf530c731fbe80b86f484175ccf7a691c7131",
        "patch": "@@ -4,7 +4,9 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n-# Build previous releases.\n+# Download or build previous releases.\n+# Needs curl and tar to download a release, or the build dependencies when\n+# building a release.\n \n import argparse\n import contextlib\n@@ -52,14 +54,14 @@ def download_binary(tag, args) -> int:\n     print('Fetching: {sha256SumsUrl}'.format(sha256SumsUrl=sha256SumsUrl))\n \n     header, status = subprocess.Popen(\n-        ['curl', '-I', tarballUrl], stdout=subprocess.PIPE).communicate()\n+        ['curl', '--head', tarballUrl], stdout=subprocess.PIPE).communicate()\n     if re.search(\"404 Not Found\", header.decode(\"utf-8\")):\n         print(\"Binary tag was not found\")\n         return 1\n \n     curlCmds = [\n-        ['curl', '-O', tarballUrl],\n-        ['curl', \"-o\", sha256Sums, sha256SumsUrl],\n+        ['curl', '--remote-name', tarballUrl],\n+        ['curl', '--output', sha256Sums, sha256SumsUrl],\n     ]\n \n     for cmd in curlCmds:\n@@ -69,23 +71,17 @@ def download_binary(tag, args) -> int:\n \n     hasher = hashlib.sha256()\n     with open(tarball, \"rb\") as afile:\n-        buf = afile.read()\n-        hasher.update(buf)\n-    afile.close()\n+        hasher.update(afile.read())\n     tarballHash = hasher.hexdigest()\n-    file = open(sha256Sums, 'r', encoding=\"utf-8\")\n-    lst = list(file.readlines())\n-    file.close()\n-    lastline = lst[len(lst)-1]\n-\n-    for line in lst:\n-        if re.search(tarballHash, line):\n-            print(\"Checksum matched\")\n-            break\n-        elif lastline == line:\n-            print(\"Checksum did not match\")\n-            Path(tarball).unlink()\n-            return 1\n+    tarballHash = '{}  {}\\n'.format(tarballHash, tarball)\n+    with open(sha256Sums, 'r', encoding=\"utf-8\") as afile:\n+        shasums = afile.readlines()\n+\n+    if tarballHash not in shasums:\n+        print(\"Checksum did not match\")\n+        Path(tarball).unlink()\n+        return 1\n+    print(\"Checksum matched\")\n \n     # Bitcoin Core Release Signing Keys v0.11.0+\n     signingKey = \"01EA5486DE18A882D4C2684590C8019E36C2E964\"\n@@ -182,8 +178,7 @@ def check_host(args) -> int:\n \n \n def main(args) -> int:\n-    if not Path(args.target_dir).is_dir():\n-        Path(args.target_dir).mkdir(exist_ok=True, parents=True)\n+    Path(args.target_dir).mkdir(exist_ok=True, parents=True)\n     print(\"Releases directory: {}\".format(args.target_dir))\n     ret = check_host(args)\n     if ret:"
      }
    ]
  }
]