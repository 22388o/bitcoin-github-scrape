MarcoFalke,2016-12-30T16:14:56Z,"Concept ACK\n\n(Tries to solve issue #4082 et al.)",https://github.com/bitcoin/bitcoin/pull/9404#issuecomment-269789576,269789576,
gmaxwell,2017-01-04T15:52:21Z,Concept ACK but will be simpler when rebased on #9465.,https://github.com/bitcoin/bitcoin/pull/9404#issuecomment-270404906,270404906,
morcos,2017-01-05T16:11:00Z,"This has been rebased on #9465 (thanks @gmaxwell)\n\nIt is now much simpler.   \nI added a second commit to almost completely resolve #9466 \n\n",https://github.com/bitcoin/bitcoin/pull/9404#issuecomment-270682611,270682611,
gmaxwell,2017-01-05T21:06:18Z,"Beautiful. utACK.  Should be rebased on the latest nit-update of 9465 (sorry about that), I expect it will do so cleanly.\n\nWe should open an issue to also resolve these behaviors when nSubtractFeeFromAmount is used; I can understand why you didn't cover those in this PR; though they should only be of comparable complexity to this change.",https://github.com/bitcoin/bitcoin/pull/9404#issuecomment-270757583,270757583,
sipa,2017-01-05T21:37:53Z,Needs rebase on #9465 merge.,https://github.com/bitcoin/bitcoin/pull/9404#issuecomment-270764890,270764890,
morcos,2017-01-06T15:26:54Z,Rebased after #9465 and addressed comments.,https://github.com/bitcoin/bitcoin/pull/9404#issuecomment-270927065,270927065,
sipa,2017-01-06T15:41:11Z,utACK 20449ef09edf8f4f51a3e531d947dd89973c2a31,https://github.com/bitcoin/bitcoin/pull/9404#issuecomment-270930474,270930474,
MarcoFalke,2017-01-06T16:45:19Z,utACK 20449ef. Thanks for addressing the feedback so quick!,https://github.com/bitcoin/bitcoin/pull/9404#issuecomment-270945991,270945991,
sdaftuar,2017-01-06T17:11:06Z,utACK 20449ef09,https://github.com/bitcoin/bitcoin/pull/9404#issuecomment-270952317,270952317,
gmaxwell,2017-01-06T20:31:27Z,re-ACK.,https://github.com/bitcoin/bitcoin/pull/9404#issuecomment-270998560,270998560,
Xekyo,2017-01-08T11:42:11Z,utACK https://github.com/bitcoin/bitcoin/commit/20449ef09edf8f4f51a3e531d947dd89973c2a31,https://github.com/bitcoin/bitcoin/pull/9404#issuecomment-271145802,271145802,
TheBlueMatt,2017-01-08T18:29:33Z,utACK 20449ef09edf8f4f51a3e531d947dd89973c2a31,https://github.com/bitcoin/bitcoin/pull/9404#issuecomment-271169058,271169058,
RHavar,2017-02-03T06:05:30Z,"What release will this be in? I've been losing a lot of money, to what I suspect is this bug, just $50 last transaction:\nhttps://live.blockcypher.com/btc/tx/a92a609f1ebdcd5a2b658a35ed562ac8661a90daf773a7a807a71bd8e1990a6a/\n\n$ bitcoin-cli estimatefee 4\n0.00101654\n\n$ bitcoin-cli listunspent | grep amount | wc -l\n692",https://github.com/bitcoin/bitcoin/pull/9404#issuecomment-277171853,277171853,
sdaftuar,2017-01-05T21:38:07Z,"I guess there's an edge case left here, where if there's no change output and the fee difference is very large, then we won't reduce the fee?\n\nIt might be nice to refactor the change-adding logic so that we could add change in that scenario, though I don't want to hold up this PR which is already a strict improvement, do you think it's worth adding a comment that points this out though for fut",https://github.com/bitcoin/bitcoin/pull/9404#discussion_r94856966,94856966,src/wallet/wallet.cpp
MarcoFalke,2017-01-06T00:45:49Z,"I might be missing something, but instead of ""Do not"", the comment should read ""TODO"". Otherwise, it would imply that it is ok for the payee to pay excessive fee whereas for the payer it is not.",https://github.com/bitcoin/bitcoin/pull/9404#discussion_r94882975,94882975,src/wallet/wallet.cpp
MarcoFalke,2017-01-06T00:52:22Z,"can you explain why CENT is used instead of MIN_CHANGE, please?",https://github.com/bitcoin/bitcoin/pull/9404#discussion_r94883639,94883639,src/wallet/wallet.cpp
MarcoFalke,2017-01-06T00:53:07Z,nit: No need to mention code specific values in the comment,https://github.com/bitcoin/bitcoin/pull/9404#discussion_r94883718,94883718,src/wallet/wallet.cpp
gmaxwell,2017-01-06T13:11:59Z,"it's pretty easy to compute exactly the amount of additional fee adding a change output would imply. So the test becomes if not subtractfrom   and excessfee >= CENT/2 + changeaddfee; then set the change to excessfee-changeaddfee.   Doing so without creating a hairball with change added in multiple places... less fun.  \n\nSimilarly, the remove side could consider eliminating the change output, i",https://github.com/bitcoin/bitcoin/pull/9404#discussion_r94943401,94943401,src/wallet/wallet.cpp
morcos,2017-01-06T14:37:22Z,"Yes my concern is the gap between desired change amounts (CENT/2) and fee overpayments is quite big.  Most of the time even if a fee overpayment was bigger than dust, it wouldn't be so big that you'd actually want to create an output with it.  \n\nI think fixing that should be combined with more robust handling of the minimum output size a wallet would create.  Perhaps then there would be cases ",https://github.com/bitcoin/bitcoin/pull/9404#discussion_r94953756,94953756,src/wallet/wallet.cpp
