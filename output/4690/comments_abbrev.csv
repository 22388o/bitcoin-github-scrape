BitcoinPullTester,2014-08-13T01:08:21Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4690_3a87a7665b80a47cc6058e7fad771f0da03be550/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/4690#issuecomment-51998513,51998513,
theuni,2014-08-13T01:23:58Z,"Heh, I suppose that engineer would be me.\n\nI have no case against the removal, but I can't see any real benefit in it either.\n\nFYI, my reasoning for always giving the option to disable (this happens quite often):\nI'm building a program/lib for an architecture where the binary I want builds fine, but compile borks on some other binary that the upstream devs decide is super-mega-important (it's",https://github.com/bitcoin/bitcoin/pull/4690#issuecomment-51999408,51999408,
jgarzik,2014-08-13T02:21:31Z,"@theuni It's really a question of scale.  A zen balance must be achieved.  :)  For the GUI, with massive additional dependencies and compiled modules, it makes a lot of sense.\n\nThe default, on the other hand, should be to avoid adding options without good reason.  I would rather fix a bug, normally, than add a --paper-over-bug option that is very rarely used, in highly unusual and soon fixed sce",https://github.com/bitcoin/bitcoin/pull/4690#issuecomment-52002552,52002552,
luke-jr,2014-08-13T02:27:46Z,"I see three possibilities: forced, optional, and ""unsupported optional"". Forced is, as mentioned, an annoyance for engineers. Optional is debatably more maintenance work. I don't see any harm in leaving the option, but simply taking the policy that when/if someone notices it breaks, either someone who cares fixes it or it gets removed.\n",https://github.com/bitcoin/bitcoin/pull/4690#issuecomment-52002874,52002874,
jgarzik,2014-08-13T04:39:24Z,"If you run into an incredibly unlikely situation where --without-cli is needed, you likely have the skills to handle it without the need to permanently burden the codebase with an option unused 99.9% of the time.\n",https://github.com/bitcoin/bitcoin/pull/4690#issuecomment-52009072,52009072,
laanwj,2014-08-13T04:57:31Z,"I tend towards NACK. It's not that I disagree with you, and were the build system to be redesigned from scratch again in maybe 5 years, I'm fine with not adding an option for this triviality.\n\nBut this is already in releases (starting from 0.9). I don't see why I'd want to burden anyone that already uses this option with having to change their script because somehow it is not 'pure'. Imagine bei",https://github.com/bitcoin/bitcoin/pull/4690#issuecomment-52009884,52009884,
jgarzik,2014-08-13T05:05:23Z,"Where is the evidence that anyone uses this?  The feature was added speculatively ""not likely to happen here"" - The author.  The builders of the binaries that reach the vast majority of users don't use it.\n\nIt was a minor bit of over-engineering.  Feature added before there was a need or call for it.\n\nYou should not add features that might, in theory, be used in some rare case sometime in the ",https://github.com/bitcoin/bitcoin/pull/4690#issuecomment-52010226,52010226,
jgarzik,2014-08-13T05:08:44Z,"Come on, is it really so hard to type ""make bitcoind"" etc. rather than just ""make""?\n\nYou don't need to build extra gadgetry to selectively build binaries.\n",https://github.com/bitcoin/bitcoin/pull/4690#issuecomment-52010373,52010373,
laanwj,2014-08-13T05:11:08Z,"You're proposing a change so IMO the burden of evidence is on you. We don't have statistics about this at all.\n\nTo be clear: If it were broken and no one noticed for a long time, you'd have a good case for removing it.\n\nYou can argue that this should not have been added, my retort then would be that you should have catched it either before it was added, or at least sooner.\n\nCome on, this is ",https://github.com/bitcoin/bitcoin/pull/4690#issuecomment-52010476,52010476,
jgarzik,2014-08-13T05:11:59Z,"By that logic we are burdened with useless crap forever...\n\nIf removing unused bits of lesser importance is so difficult, it is disappointing to consider deprecating and removing anything more ambitious.  We're talking about a feature where the -intended target audience- is a handful of knowledgable devs.\n",https://github.com/bitcoin/bitcoin/pull/4690#issuecomment-52010513,52010513,
luke-jr,2014-08-13T05:12:46Z,"It'd be nice if ""make bitcoind"" worked...\n\nSide note: Gentoo does in fact use this option. bitcoin-cli and bitcoind are separate packages.\n",https://github.com/bitcoin/bitcoin/pull/4690#issuecomment-52010555,52010555,
laanwj,2014-08-13T05:14:43Z,"@luke-jr: `make src/bitcoind` works.\n\nAnyhow - this is not 'useless crap'. Being able to choose what to build is a useful kind of modularity. Although I agree it was taken too far in this case, it's not a clinical case of uselessness either.\n",https://github.com/bitcoin/bitcoin/pull/4690#issuecomment-52010637,52010637,
sipa,2014-08-13T07:50:44Z,"IMHO bitcoin-cli and bitcoin-tx should be similar. Neither has additional\ndependencies, and both are only optionally needed. So either have an option\nfor both, or for neither.\n\nI lean towards having an option for both, as it's a tiny change only, and\nis consistent with --with-gui which is hard to avoid with so many extra\ndependencies. I agree with Jeff about minimizing configuration\ncombina",https://github.com/bitcoin/bitcoin/pull/4690#issuecomment-52019326,52019326,
laanwj,2014-08-13T07:58:27Z,"@sipa We could also group bitcoin-tx and bitcoin-cli under the same build-system option, maybe --with[out]-utils.\nThough that would still break backwards compatibility w/ current --with[out]-cli in scripts.\nBut this division would make sense for distributions as well.\n",https://github.com/bitcoin/bitcoin/pull/4690#issuecomment-52019873,52019873,
theuni,2014-08-13T15:19:40Z,"@sipa agreed\n\n@jgarzik 'make bitcoind' isn't the issue. The issue is that there are countless packaging systems (and devs) that rely on the canned: ./configure --with-foo --disable-bar && make && make install. When you can disable binaries via configure, that all works with no further intervention. With the option removed, there's no way to avoid packaging the unwanted binaries other than postpr",https://github.com/bitcoin/bitcoin/pull/4690#issuecomment-52063144,52063144,
laanwj,2014-08-15T08:51:50Z,"Ok, conclusion: let's change --with[out]-cli to --with[out]-utils, and include `bitcoin-tx` in the same bag. \n\nWe could make `--with[out]-cli` a temporary alias for the other one if we really care about not breaking things.\n\nAre you going to update this @jgarzik or should we make a new pull?\n",https://github.com/bitcoin/bitcoin/pull/4690#issuecomment-52286559,52286559,
jgarzik,2014-08-15T10:31:28Z,ACK --with-utils\n,https://github.com/bitcoin/bitcoin/pull/4690#issuecomment-52293439,52293439,
jgarzik,2014-08-16T16:48:06Z,Superceded by #4711 \n,https://github.com/bitcoin/bitcoin/pull/4690#issuecomment-52398681,52398681,
