[
  {
    "sha": "6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZDFhNDU2OWVmN2I3M2U0MGY3N2M4MzBiMjZjN2UxZGJkYzc0MTBh",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-01-19T20:44:30Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-01-19T20:45:41Z"
      },
      "message": "Remove redundant casts.",
      "tree": {
        "sha": "25ea1130f3a402f50c357728918888b299c35b8c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/25ea1130f3a402f50c357728918888b299c35b8c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "82274c02ed2d82537dc55f008a29edb1bc09bbc4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/82274c02ed2d82537dc55f008a29edb1bc09bbc4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/82274c02ed2d82537dc55f008a29edb1bc09bbc4"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 24,
      "deletions": 24
    },
    "files": [
      {
        "sha": "d7bd36e2e12b8ab9006cb19285d8952fd51e1b47",
        "filename": "src/hash.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a/src/hash.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a/src/hash.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/hash.cpp?ref=6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a",
        "patch": "@@ -42,7 +42,7 @@ unsigned int MurmurHash3(unsigned int nHashSeed, const std::vector<unsigned char\n \n         //----------\n         // tail\n-        const uint8_t* tail = (const uint8_t*)(&vDataToHash[0] + nblocks * 4);\n+        const uint8_t* tail = &vDataToHash[0] + nblocks * 4;\n \n         uint32_t k1 = 0;\n "
      },
      {
        "sha": "e6969115f9d0a34953db581aec574ebf4d113677",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a",
        "patch": "@@ -432,7 +432,7 @@ bool InitHTTPServer()\n     }\n \n     LogPrint(\"http\", \"Initialized HTTP server\\n\");\n-    int workQueueDepth = std::max((long)GetArg(\"-rpcworkqueue\", DEFAULT_HTTP_WORKQUEUE), 1L);\n+    int workQueueDepth = std::max(GetArg(\"-rpcworkqueue\", DEFAULT_HTTP_WORKQUEUE), 1L);\n     LogPrintf(\"HTTP: creating work queue of depth %d\\n\", workQueueDepth);\n \n     workQueue = new WorkQueue<HTTPClosure>(workQueueDepth);\n@@ -447,7 +447,7 @@ std::future<bool> threadResult;\n bool StartHTTPServer()\n {\n     LogPrint(\"http\", \"Starting HTTP server\\n\");\n-    int rpcThreads = std::max((long)GetArg(\"-rpcthreads\", DEFAULT_HTTP_THREADS), 1L);\n+    int rpcThreads = std::max(GetArg(\"-rpcthreads\", DEFAULT_HTTP_THREADS), 1L);\n     LogPrintf(\"HTTP: starting %d worker threads\\n\", rpcThreads);\n     std::packaged_task<bool(event_base*, evhttp*)> task(ThreadHTTP);\n     threadResult = task.get_future();"
      },
      {
        "sha": "7956c363fe4d0e5594a38fc24326836b5fdc2963",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a",
        "patch": "@@ -880,7 +880,7 @@ bool AppInitParameterInteraction()\n     nMaxConnections = std::max(nUserMaxConnections, 0);\n \n     // Trim requested connection counts, to fit into system limitations\n-    nMaxConnections = std::max(std::min(nMaxConnections, (int)(FD_SETSIZE - nBind - MIN_CORE_FILEDESCRIPTORS - MAX_ADDNODE_CONNECTIONS)), 0);\n+    nMaxConnections = std::max(std::min(nMaxConnections, FD_SETSIZE - nBind - MIN_CORE_FILEDESCRIPTORS - MAX_ADDNODE_CONNECTIONS), 0);\n     nFD = RaiseFileDescriptorLimit(nMaxConnections + MIN_CORE_FILEDESCRIPTORS + MAX_ADDNODE_CONNECTIONS);\n     if (nFD < MIN_CORE_FILEDESCRIPTORS)\n         return InitError(_(\"Not enough file descriptors available.\"));"
      },
      {
        "sha": "504100674a444b51cc41e3bdb16a9c7daf29ac87",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a",
        "patch": "@@ -146,7 +146,7 @@ CPrivKey CKey::GetPrivKey() const {\n     size_t privkeylen;\n     privkey.resize(279);\n     privkeylen = 279;\n-    ret = ec_privkey_export_der(secp256k1_context_sign, (unsigned char*)&privkey[0], &privkeylen, begin(), fCompressed ? SECP256K1_EC_COMPRESSED : SECP256K1_EC_UNCOMPRESSED);\n+    ret = ec_privkey_export_der(secp256k1_context_sign, &privkey[0], &privkeylen, begin(), fCompressed ? SECP256K1_EC_COMPRESSED : SECP256K1_EC_UNCOMPRESSED);\n     assert(ret);\n     privkey.resize(privkeylen);\n     return privkey;\n@@ -175,7 +175,7 @@ bool CKey::Sign(const uint256 &hash, std::vector<unsigned char>& vchSig, uint32_\n     secp256k1_ecdsa_signature sig;\n     int ret = secp256k1_ecdsa_sign(secp256k1_context_sign, &sig, hash.begin(), begin(), secp256k1_nonce_function_rfc6979, test_case ? extra_entropy : NULL);\n     assert(ret);\n-    secp256k1_ecdsa_signature_serialize_der(secp256k1_context_sign, (unsigned char*)&vchSig[0], &nSigLen, &sig);\n+    secp256k1_ecdsa_signature_serialize_der(secp256k1_context_sign, &vchSig[0], &nSigLen, &sig);\n     vchSig.resize(nSigLen);\n     return true;\n }\n@@ -202,7 +202,7 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     secp256k1_ecdsa_recoverable_signature sig;\n     int ret = secp256k1_ecdsa_sign_recoverable(secp256k1_context_sign, &sig, hash.begin(), begin(), secp256k1_nonce_function_rfc6979, NULL);\n     assert(ret);\n-    secp256k1_ecdsa_recoverable_signature_serialize_compact(secp256k1_context_sign, (unsigned char*)&vchSig[1], &rec, &sig);\n+    secp256k1_ecdsa_recoverable_signature_serialize_compact(secp256k1_context_sign, &vchSig[1], &rec, &sig);\n     assert(ret);\n     assert(rec != -1);\n     vchSig[0] = 27 + rec + (fCompressed ? 4 : 0);"
      },
      {
        "sha": "1dee209d2b85dbceff5bc8784ed540055a1ba63b",
        "filename": "src/primitives/transaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a/src/primitives/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a/src/primitives/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.cpp?ref=6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a",
        "patch": "@@ -108,7 +108,7 @@ unsigned int CTransaction::CalculateModifiedSize(unsigned int nTxSize) const\n         nTxSize = (GetTransactionWeight(*this) + WITNESS_SCALE_FACTOR - 1) / WITNESS_SCALE_FACTOR;\n     for (std::vector<CTxIn>::const_iterator it(vin.begin()); it != vin.end(); ++it)\n     {\n-        unsigned int offset = 41U + std::min(110U, (unsigned int)it->scriptSig.size());\n+        unsigned int offset = 41U + std::min(110U, it->scriptSig.size());\n         if (nTxSize > offset)\n             nTxSize -= offset;\n     }"
      },
      {
        "sha": "674f0fa97c8898e8af0d8e316cdeddd84f1cb1b1",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a",
        "patch": "@@ -38,7 +38,7 @@ static inline int64_t GetPerformanceCounter()\n #else\n     timeval t;\n     gettimeofday(&t, NULL);\n-    nCounter = (int64_t)(t.tv_sec * 1000000 + t.tv_usec);\n+    nCounter = t.tv_sec * 1000000 + t.tv_usec;\n #endif\n     return nCounter;\n }"
      },
      {
        "sha": "89fe3c3bb1a4046712049efd20c1a97981a79dcc",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a",
        "patch": "@@ -88,7 +88,7 @@ UniValue blockheaderToJSON(const CBlockIndex* blockindex)\n     result.push_back(Pair(\"versionHex\", strprintf(\"%08x\", blockindex->nVersion)));\n     result.push_back(Pair(\"merkleroot\", blockindex->hashMerkleRoot.GetHex()));\n     result.push_back(Pair(\"time\", (int64_t)blockindex->nTime));\n-    result.push_back(Pair(\"mediantime\", (int64_t)blockindex->GetMedianTimePast()));\n+    result.push_back(Pair(\"mediantime\", blockindex->GetMedianTimePast()));\n     result.push_back(Pair(\"nonce\", (uint64_t)blockindex->nNonce));\n     result.push_back(Pair(\"bits\", strprintf(\"%08x\", blockindex->nBits)));\n     result.push_back(Pair(\"difficulty\", GetDifficulty(blockindex)));\n@@ -132,7 +132,7 @@ UniValue blockToJSON(const CBlock& block, const CBlockIndex* blockindex, bool tx\n     }\n     result.push_back(Pair(\"tx\", txs));\n     result.push_back(Pair(\"time\", block.GetBlockTime()));\n-    result.push_back(Pair(\"mediantime\", (int64_t)blockindex->GetMedianTimePast()));\n+    result.push_back(Pair(\"mediantime\", blockindex->GetMedianTimePast()));\n     result.push_back(Pair(\"nonce\", (uint64_t)block.nNonce));\n     result.push_back(Pair(\"bits\", strprintf(\"%08x\", block.nBits)));\n     result.push_back(Pair(\"difficulty\", GetDifficulty(blockindex)));\n@@ -1115,11 +1115,11 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n \n     UniValue obj(UniValue::VOBJ);\n     obj.push_back(Pair(\"chain\",                 Params().NetworkIDString()));\n-    obj.push_back(Pair(\"blocks\",                (int)chainActive.Height()));\n+    obj.push_back(Pair(\"blocks\",                chainActive.Height()));\n     obj.push_back(Pair(\"headers\",               pindexBestHeader ? pindexBestHeader->nHeight : -1));\n     obj.push_back(Pair(\"bestblockhash\",         chainActive.Tip()->GetBlockHash().GetHex()));\n-    obj.push_back(Pair(\"difficulty\",            (double)GetDifficulty()));\n-    obj.push_back(Pair(\"mediantime\",            (int64_t)chainActive.Tip()->GetMedianTimePast()));\n+    obj.push_back(Pair(\"difficulty\",            GetDifficulty()));\n+    obj.push_back(Pair(\"mediantime\",            chainActive.Tip()->GetMedianTimePast()));\n     obj.push_back(Pair(\"verificationprogress\",  GuessVerificationProgress(Params().TxData(), chainActive.Tip())));\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     obj.push_back(Pair(\"pruned\",                fPruneMode));"
      },
      {
        "sha": "1a4372a6ffabc47d74a38783e50b7df18bd10429",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a",
        "patch": "@@ -242,14 +242,14 @@ UniValue getmininginfo(const JSONRPCRequest& request)\n     LOCK(cs_main);\n \n     UniValue obj(UniValue::VOBJ);\n-    obj.push_back(Pair(\"blocks\",           (int)chainActive.Height()));\n-    obj.push_back(Pair(\"currentblocksize\", (uint64_t)nLastBlockSize));\n-    obj.push_back(Pair(\"currentblockweight\", (uint64_t)nLastBlockWeight));\n-    obj.push_back(Pair(\"currentblocktx\",   (uint64_t)nLastBlockTx));\n-    obj.push_back(Pair(\"difficulty\",       (double)GetDifficulty()));\n+    obj.push_back(Pair(\"blocks\",           chainActive.Height()));\n+    obj.push_back(Pair(\"currentblocksize\", nLastBlockSize));\n+    obj.push_back(Pair(\"currentblockweight\", nLastBlockWeight));\n+    obj.push_back(Pair(\"currentblocktx\",   nLastBlockTx));\n+    obj.push_back(Pair(\"difficulty\",       GetDifficulty()));\n     obj.push_back(Pair(\"errors\",           GetWarnings(\"statusbar\")));\n     obj.push_back(Pair(\"networkhashps\",    getnetworkhashps(request)));\n-    obj.push_back(Pair(\"pooledtx\",         (uint64_t)mempool.size()));\n+    obj.push_back(Pair(\"pooledtx\",         mempool.size()));\n     obj.push_back(Pair(\"chain\",            Params().NetworkIDString()));\n     return obj;\n }\n@@ -667,7 +667,7 @@ UniValue getblocktemplate(const JSONRPCRequest& request)\n     result.push_back(Pair(\"coinbasevalue\", (int64_t)pblock->vtx[0]->vout[0].nValue));\n     result.push_back(Pair(\"longpollid\", chainActive.Tip()->GetBlockHash().GetHex() + i64tostr(nTransactionsUpdatedLast)));\n     result.push_back(Pair(\"target\", hashTarget.GetHex()));\n-    result.push_back(Pair(\"mintime\", (int64_t)pindexPrev->GetMedianTimePast()+1));\n+    result.push_back(Pair(\"mintime\", pindexPrev->GetMedianTimePast()+1));\n     result.push_back(Pair(\"mutable\", aMutable));\n     result.push_back(Pair(\"noncerange\", \"00000000ffffffff\"));\n     int64_t nSigOpLimit = MAX_BLOCK_SIGOPS_COST;"
      },
      {
        "sha": "d56870069c51b2cba27c4c005954cf3b0d40fffe",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a",
        "patch": "@@ -87,12 +87,12 @@ UniValue getinfo(const JSONRPCRequest& request)\n         obj.push_back(Pair(\"balance\",       ValueFromAmount(pwalletMain->GetBalance())));\n     }\n #endif\n-    obj.push_back(Pair(\"blocks\",        (int)chainActive.Height()));\n+    obj.push_back(Pair(\"blocks\",        chainActive.Height()));\n     obj.push_back(Pair(\"timeoffset\",    GetTimeOffset()));\n     if(g_connman)\n         obj.push_back(Pair(\"connections\",   (int)g_connman->GetNodeCount(CConnman::CONNECTIONS_ALL)));\n     obj.push_back(Pair(\"proxy\",         (proxy.IsValid() ? proxy.proxy.ToStringIPPort() : string())));\n-    obj.push_back(Pair(\"difficulty\",    (double)GetDifficulty()));\n+    obj.push_back(Pair(\"difficulty\",    GetDifficulty()));\n     obj.push_back(Pair(\"testnet\",       Params().NetworkIDString() == CBaseChainParams::TESTNET));\n #ifdef ENABLE_WALLET\n     if (pwalletMain) {"
      },
      {
        "sha": "a4ef6aa8af4b5cd3630194c6e5783cd730910acb",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=6d1a4569ef7b73e40f77c830b26c7e1dbdc7410a",
        "patch": "@@ -4220,7 +4220,7 @@ void DumpMempool(void)\n         uint64_t version = MEMPOOL_DUMP_VERSION;\n         file << version;\n \n-        file << (uint64_t)vinfo.size();\n+        file << vinfo.size();\n         for (const auto& i : vinfo) {\n             file << *(i.tx);\n             file << (int64_t)i.nTime;"
      }
    ]
  }
]