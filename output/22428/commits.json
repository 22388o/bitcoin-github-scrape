[
  {
    "sha": "007910388b54abc97057e44a7a8f7241e83c203b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMDc5MTAzODhiNTRhYmM5NzA1N2U0NGE3YThmNzI0MWU4M2MyMDNi",
    "commit": {
      "author": {
        "name": "sanket1729",
        "email": "sanket1729@gmail.com",
        "date": "2021-07-11T08:59:27Z"
      },
      "committer": {
        "name": "sanket1729",
        "email": "sanket1729@gmail.com",
        "date": "2021-07-19T10:16:00Z"
      },
      "message": "[Refactor] Rename scriptPubKey -> exec_script\n\nRename misleading scriptPubKey in ExecuteWitnessScript() function to\ncorrectly relfect what is being executed.",
      "tree": {
        "sha": "4e55f25690b702abd64aa441a8e41b889489d6ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e55f25690b702abd64aa441a8e41b889489d6ad"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/007910388b54abc97057e44a7a8f7241e83c203b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/007910388b54abc97057e44a7a8f7241e83c203b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/007910388b54abc97057e44a7a8f7241e83c203b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/007910388b54abc97057e44a7a8f7241e83c203b/comments",
    "author": {
      "login": "sanket1729",
      "id": 6881849,
      "node_id": "MDQ6VXNlcjY4ODE4NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6881849?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sanket1729",
      "html_url": "https://github.com/sanket1729",
      "followers_url": "https://api.github.com/users/sanket1729/followers",
      "following_url": "https://api.github.com/users/sanket1729/following{/other_user}",
      "gists_url": "https://api.github.com/users/sanket1729/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sanket1729/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sanket1729/subscriptions",
      "organizations_url": "https://api.github.com/users/sanket1729/orgs",
      "repos_url": "https://api.github.com/users/sanket1729/repos",
      "events_url": "https://api.github.com/users/sanket1729/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sanket1729/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sanket1729",
      "id": 6881849,
      "node_id": "MDQ6VXNlcjY4ODE4NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6881849?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sanket1729",
      "html_url": "https://github.com/sanket1729",
      "followers_url": "https://api.github.com/users/sanket1729/followers",
      "following_url": "https://api.github.com/users/sanket1729/following{/other_user}",
      "gists_url": "https://api.github.com/users/sanket1729/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sanket1729/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sanket1729/subscriptions",
      "organizations_url": "https://api.github.com/users/sanket1729/orgs",
      "repos_url": "https://api.github.com/users/sanket1729/repos",
      "events_url": "https://api.github.com/users/sanket1729/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sanket1729/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8ab0c77299a5b184a8d0edf38f26a97bf9bbed6e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ab0c77299a5b184a8d0edf38f26a97bf9bbed6e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8ab0c77299a5b184a8d0edf38f26a97bf9bbed6e"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "dd7c0a4a0510147c1b3cb05c75f80b4c87a52fd6",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/007910388b54abc97057e44a7a8f7241e83c203b/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/007910388b54abc97057e44a7a8f7241e83c203b/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=007910388b54abc97057e44a7a8f7241e83c203b",
        "patch": "@@ -1807,16 +1807,16 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n-static bool ExecuteWitnessScript(const Span<const valtype>& stack_span, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptExecutionData& execdata, ScriptError* serror)\n+static bool ExecuteWitnessScript(const Span<const valtype>& stack_span, const CScript& exec_script, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptExecutionData& execdata, ScriptError* serror)\n {\n     std::vector<valtype> stack{stack_span.begin(), stack_span.end()};\n \n     if (sigversion == SigVersion::TAPSCRIPT) {\n         // OP_SUCCESSx processing overrides everything, including stack element size limits\n-        CScript::const_iterator pc = scriptPubKey.begin();\n-        while (pc < scriptPubKey.end()) {\n+        CScript::const_iterator pc = exec_script.begin();\n+        while (pc < exec_script.end()) {\n             opcodetype opcode;\n-            if (!scriptPubKey.GetOp(pc, opcode)) {\n+            if (!exec_script.GetOp(pc, opcode)) {\n                 // Note how this condition would not be reached if an unknown OP_SUCCESSx was found\n                 return set_error(serror, SCRIPT_ERR_BAD_OPCODE);\n             }\n@@ -1839,7 +1839,7 @@ static bool ExecuteWitnessScript(const Span<const valtype>& stack_span, const CS\n     }\n \n     // Run the script interpreter.\n-    if (!EvalScript(stack, scriptPubKey, flags, checker, sigversion, execdata, serror)) return false;\n+    if (!EvalScript(stack, exec_script, flags, checker, sigversion, execdata, serror)) return false;\n \n     // Scripts inside witness implicitly require cleanstack behaviour\n     if (stack.size() != 1) return set_error(serror, SCRIPT_ERR_CLEANSTACK);"
      }
    ]
  }
]