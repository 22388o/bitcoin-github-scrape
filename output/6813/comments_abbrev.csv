laanwj,2015-10-13T09:45:39Z,Concept ACK - how does this relate to #6804 ?\n,https://github.com/bitcoin/bitcoin/pull/6813#issuecomment-147665388,147665388,
dexX7,2015-10-13T10:24:26Z,"It's not yet clear to me where #6804 is going, so this may be complementary. #6804 seems like a very easy and fast way to get an understanding of what's covered by the RPC tests, while this PR is more heavy. Given that the lcov testing already exists, extending it to include RPC tests seems nevertheless reasonable in my opinion.\n",https://github.com/bitcoin/bitcoin/pull/6813#issuecomment-147674531,147674531,
jamesob,2015-10-13T16:44:09Z,"Agree that this is compatible with #6804; I think this sort of ""industrial strength"" coverage report is absolutely worth having, but an expedient and simple view into which (if any) RPC functions are going untested is valuable also. Lcov certainly provides a more exact notion of what is tested, but it takes a bit more work to tease out which RPC functions are untested; the simple binary coverage p",https://github.com/bitcoin/bitcoin/pull/6813#issuecomment-147772727,147772727,
jonasschnelli,2015-10-13T18:32:48Z,Concept ACK.\nWhat about linking Travis builds with Coveralls (example: https://coveralls.io/github/jonasschnelli/libbtc)?\n\nNot saying that high test coverage stands for quality. But it is a good indicator for people writing new code that they should write unit tests...\n,https://github.com/bitcoin/bitcoin/pull/6813#issuecomment-147805523,147805523,
dexX7,2015-10-15T13:11:19Z,"@jamesob: based on what you posted in #6804, the list of uncovered RPCs is pretty large, and I agree, it's nice to have a quick overview. At some point it probably becomes less useful, if a binary outcome doesn't provide further insight (e.g. once all RPCs are rudimentary covered).\n\n@jonasschnelli: this is an interesting idea. Some time ago I actually tried to combine `make cov` and `cpp-coveral",https://github.com/bitcoin/bitcoin/pull/6813#issuecomment-148380340,148380340,
jamesob,2015-10-15T15:51:37Z,"@dexX7 the console output itself certainly becomes less useful after all RPCs are covered, but I think the lasting value is the ability to easily fail a build if someone introduces a new RPC without writing tests that exercise it as a client.\n\nAnyway, I'll fully defer to you and @laanwj as to whether or not we should proceed with #6804 as well. You guys have much more experience in this ecosyste",https://github.com/bitcoin/bitcoin/pull/6813#issuecomment-148430077,148430077,
laanwj,2015-10-22T10:48:15Z,ACK. Works for me.\n,https://github.com/bitcoin/bitcoin/pull/6813#issuecomment-150177914,150177914,
Sjors,2017-11-22T14:01:54Z,"@jonasschnelli wrote:\n> What about linking Travis builds with Coveralls \n\nI just noticed #11680 which reminded me of this. Is it worth making an issue / PR?",https://github.com/bitcoin/bitcoin/pull/6813#issuecomment-346358258,346358258,
MarcoFalke,2017-11-22T14:43:30Z,I am running nightly reports: https://marcofalke.github.io/btc_cov/,https://github.com/bitcoin/bitcoin/pull/6813#issuecomment-346369955,346369955,
fanquake,2015-10-13T08:09:58Z,Ideally this should be ignored on the dev machine.\n,https://github.com/bitcoin/bitcoin/pull/6813#discussion_r41837480,41837480,.gitignore
dexX7,2015-10-13T10:26:56Z,"I'm very open to removing it (or other parts), but the precedence was basically the ignore of the Qt Creator project files.\n",https://github.com/bitcoin/bitcoin/pull/6813#discussion_r41850244,41850244,.gitignore
laanwj,2015-10-20T11:17:21Z,"> I'm very open to removing it (or other parts), but the precedence was basically the ignore of the Qt Creator project files.\n\nYes, those should go too (also as we haven't supported qt creator builds since 0.9).\n",https://github.com/bitcoin/bitcoin/pull/6813#discussion_r42482626,42482626,.gitignore
dexX7,2015-10-22T11:00:06Z,"I'm currently not at home, but later I can edit and remove the lines. But just for my understanding: isn't it pretty common to ignore project/editor specific files via the `.gitignore`?\n\nAs for the change:\n\n``` diff\n- # Qt creator\n- *.pro.user\n- \n- # NetBeans\n- nbproject/\n- \n```\n\nAnything else?\n",https://github.com/bitcoin/bitcoin/pull/6813#discussion_r42734779,42734779,.gitignore
laanwj,2015-10-23T10:27:06Z,"In closed-source environments in which everyone uses the same IDE that is common. In open source software, where everyone uses their own editors/IDE/tools, it is less common. Only you know what files your editor produces and this may change from version to version.\nThe canonical way to do this is thus to create your local gitignore. Add this to `~/.gitconfig`:\n\n```\n[core]\n    excludesfile = /",https://github.com/bitcoin/bitcoin/pull/6813#discussion_r42851409,42851409,.gitignore
laanwj,2015-10-23T10:35:13Z,See #6878\n,https://github.com/bitcoin/bitcoin/pull/6813#discussion_r42851979,42851979,.gitignore
dexX7,2015-10-24T21:02:20Z,I removed the entry for Netbeans.\n,https://github.com/bitcoin/bitcoin/pull/6813#discussion_r42938179,42938179,.gitignore
