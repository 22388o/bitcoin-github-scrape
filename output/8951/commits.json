[
  {
    "sha": "59daa58d6a17bb1170c724f2d01d43c2ec21a9b4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OWRhYTU4ZDZhMTdiYjExNzBjNzI0ZjJkMDFkNDNjMmVjMjFhOWI0",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-10-18T07:17:19Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-10-19T08:47:32Z"
      },
      "message": "RPC/Mining: getblocktemplate: Update and fix formatting of help",
      "tree": {
        "sha": "54ce73403aa78ad4a6db3d22e26480c9884ac620",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/54ce73403aa78ad4a6db3d22e26480c9884ac620"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/59daa58d6a17bb1170c724f2d01d43c2ec21a9b4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/59daa58d6a17bb1170c724f2d01d43c2ec21a9b4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/59daa58d6a17bb1170c724f2d01d43c2ec21a9b4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/59daa58d6a17bb1170c724f2d01d43c2ec21a9b4/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2c06bae39edfaa9c0855d83377ad8fda09e4fa08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c06bae39edfaa9c0855d83377ad8fda09e4fa08",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2c06bae39edfaa9c0855d83377ad8fda09e4fa08"
      }
    ],
    "stats": {
      "total": 66,
      "additions": 36,
      "deletions": 30
    },
    "files": [
      {
        "sha": "33c1893ff6944c6a2bc84d6337cbb45d6ccfff5d",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 30,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/59daa58d6a17bb1170c724f2d01d43c2ec21a9b4/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/59daa58d6a17bb1170c724f2d01d43c2ec21a9b4/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=59daa58d6a17bb1170c724f2d01d43c2ec21a9b4",
        "patch": "@@ -319,67 +319,73 @@ UniValue getblocktemplate(const UniValue& params, bool fHelp)\n {\n     if (fHelp || params.size() > 1)\n         throw runtime_error(\n-            \"getblocktemplate ( \\\"jsonrequestobject\\\" )\\n\"\n+            \"getblocktemplate ( TemplateRequest )\\n\"\n             \"\\nIf the request parameters include a 'mode' key, that is used to explicitly select between the default 'template' request or a 'proposal'.\\n\"\n             \"It returns data needed to construct a block to work on.\\n\"\n-            \"For full specification, see BIPs 22 and 9:\\n\"\n+            \"For full specification, see BIPs 22, 23, 9, and 145:\\n\"\n             \"    https://github.com/bitcoin/bips/blob/master/bip-0022.mediawiki\\n\"\n+            \"    https://github.com/bitcoin/bips/blob/master/bip-0023.mediawiki\\n\"\n             \"    https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki#getblocktemplate_changes\\n\"\n+            \"    https://github.com/bitcoin/bips/blob/master/bip-0145.mediawiki\\n\"\n \n             \"\\nArguments:\\n\"\n-            \"1. \\\"jsonrequestobject\\\"       (string, optional) A json object in the following spec\\n\"\n+            \"1. TemplateRequest          (json object, optional) A json object in the following spec\\n\"\n             \"     {\\n\"\n-            \"       \\\"mode\\\":\\\"template\\\"    (string, optional) This must be set to \\\"template\\\" or omitted\\n\"\n-            \"       \\\"capabilities\\\":[       (array, optional) A list of strings\\n\"\n-            \"           \\\"support\\\"           (string) client side supported feature, 'longpoll', 'coinbasetxn', 'coinbasevalue', 'proposal', 'serverlist', 'workid'\\n\"\n+            \"       \\\"mode\\\":\\\"template\\\"    (string, optional) This must be set to \\\"template\\\", \\\"proposal\\\" (see BIP 23), or omitted\\n\"\n+            \"       \\\"capabilities\\\":[     (array, optional) A list of strings\\n\"\n+            \"           \\\"support\\\"          (string) client side supported feature, 'longpoll', 'coinbasetxn', 'coinbasevalue', 'proposal', 'serverlist', 'workid'\\n\"\n             \"           ,...\\n\"\n-            \"         ]\\n\"\n+            \"       ],\\n\"\n+            \"       \\\"rules\\\":[            (array, optional) A list of strings\\n\"\n+            \"           \\\"support\\\"          (string) client side supported softfork deployment\\n\"\n+            \"           ,...\\n\"\n+            \"       ]\\n\"\n             \"     }\\n\"\n             \"\\n\"\n \n             \"\\nResult:\\n\"\n             \"{\\n\"\n-            \"  \\\"version\\\" : n,                    (numeric) The block version\\n\"\n+            \"  \\\"version\\\" : n,                    (numeric) The preferred block version\\n\"\n             \"  \\\"rules\\\" : [ \\\"rulename\\\", ... ],    (array of strings) specific block rules that are to be enforced\\n\"\n             \"  \\\"vbavailable\\\" : {                 (json object) set of pending, supported versionbit (BIP 9) softfork deployments\\n\"\n-            \"      \\\"rulename\\\" : bitnumber        (numeric) identifies the bit number as indicating acceptance and readiness for the named softfork rule\\n\"\n+            \"      \\\"rulename\\\" : bitnumber          (numeric) identifies the bit number as indicating acceptance and readiness for the named softfork rule\\n\"\n             \"      ,...\\n\"\n             \"  },\\n\"\n             \"  \\\"vbrequired\\\" : n,                 (numeric) bit mask of versionbits the server requires set in submissions\\n\"\n-            \"  \\\"previousblockhash\\\" : \\\"xxxx\\\",    (string) The hash of current highest block\\n\"\n+            \"  \\\"previousblockhash\\\" : \\\"xxxx\\\",     (string) The hash of current highest block\\n\"\n             \"  \\\"transactions\\\" : [                (array) contents of non-coinbase transactions that should be included in the next block\\n\"\n             \"      {\\n\"\n-            \"         \\\"data\\\" : \\\"xxxx\\\",          (string) transaction data encoded in hexadecimal (byte-for-byte)\\n\"\n-            \"         \\\"txid\\\" : \\\"xxxx\\\",          (string) transaction id encoded in little-endian hexadecimal\\n\"\n-            \"         \\\"hash\\\" : \\\"xxxx\\\",          (string) hash encoded in little-endian hexadecimal (including witness data)\\n\"\n-            \"         \\\"depends\\\" : [              (array) array of numbers \\n\"\n-            \"             n                        (numeric) transactions before this one (by 1-based index in 'transactions' list) that must be present in the final block if this one is\\n\"\n+            \"         \\\"data\\\" : \\\"xxxx\\\",             (string) transaction data encoded in hexadecimal (byte-for-byte)\\n\"\n+            \"         \\\"txid\\\" : \\\"xxxx\\\",             (string) transaction id encoded in little-endian hexadecimal\\n\"\n+            \"         \\\"hash\\\" : \\\"xxxx\\\",             (string) hash encoded in little-endian hexadecimal (including witness data)\\n\"\n+            \"         \\\"depends\\\" : [                (array) array of numbers \\n\"\n+            \"             n                          (numeric) transactions before this one (by 1-based index in 'transactions' list) that must be present in the final block if this one is\\n\"\n             \"             ,...\\n\"\n             \"         ],\\n\"\n-            \"         \\\"fee\\\": n,                   (numeric) difference in value between transaction inputs and outputs (in Satoshis); for coinbase transactions, this is a negative Number of the total collected block fees (ie, not including the block subsidy); if key is not present, fee is unknown and clients MUST NOT assume there isn't one\\n\"\n-            \"         \\\"sigops\\\" : n,               (numeric) total SigOps cost, as counted for purposes of block limits; if key is not present, sigop cost is unknown and clients MUST NOT assume it is zero\\n\"\n-            \"         \\\"weight\\\" : n,               (numeric) total transaction weight, as counted for purposes of block limits\\n\"\n-            \"         \\\"required\\\" : true|false     (boolean) if provided and true, this transaction must be in the final block\\n\"\n+            \"         \\\"fee\\\": n,                    (numeric) difference in value between transaction inputs and outputs (in Satoshis); for coinbase transactions, this is a negative Number of the total collected block fees (ie, not including the block subsidy); if key is not present, fee is unknown and clients MUST NOT assume there isn't one\\n\"\n+            \"         \\\"sigops\\\" : n,                (numeric) total SigOps cost, as counted for purposes of block limits; if key is not present, sigop cost is unknown and clients MUST NOT assume it is zero\\n\"\n+            \"         \\\"weight\\\" : n,                (numeric) total transaction weight, as counted for purposes of block limits\\n\"\n+            \"         \\\"required\\\" : true|false      (boolean) if provided and true, this transaction must be in the final block\\n\"\n             \"      }\\n\"\n             \"      ,...\\n\"\n             \"  ],\\n\"\n-            \"  \\\"coinbaseaux\\\" : {                  (json object) data that should be included in the coinbase's scriptSig content\\n\"\n-            \"      \\\"flags\\\" : \\\"flags\\\"            (string) \\n\"\n+            \"  \\\"coinbaseaux\\\" : {                 (json object) data that should be included in the coinbase's scriptSig content\\n\"\n+            \"      \\\"flags\\\" : \\\"xx\\\"                  (string) key name is to be ignored, and value included in scriptSig\\n\"\n             \"  },\\n\"\n-            \"  \\\"coinbasevalue\\\" : n,               (numeric) maximum allowable input to coinbase transaction, including the generation award and transaction fees (in Satoshis)\\n\"\n-            \"  \\\"coinbasetxn\\\" : { ... },           (json object) information for coinbase transaction\\n\"\n-            \"  \\\"target\\\" : \\\"xxxx\\\",               (string) The hash target\\n\"\n-            \"  \\\"mintime\\\" : xxx,                   (numeric) The minimum timestamp appropriate for next block time in seconds since epoch (Jan 1 1970 GMT)\\n\"\n-            \"  \\\"mutable\\\" : [                      (array of string) list of ways the block template may be changed \\n\"\n-            \"     \\\"value\\\"                         (string) A way the block template may be changed, e.g. 'time', 'transactions', 'prevblock'\\n\"\n+            \"  \\\"coinbasevalue\\\" : n,              (numeric) maximum allowable input to coinbase transaction, including the generation award and transaction fees (in Satoshis)\\n\"\n+            \"  \\\"coinbasetxn\\\" : { ... },          (json object) information for coinbase transaction\\n\"\n+            \"  \\\"target\\\" : \\\"xxxx\\\",                (string) The hash target\\n\"\n+            \"  \\\"mintime\\\" : xxx,                  (numeric) The minimum timestamp appropriate for next block time in seconds since epoch (Jan 1 1970 GMT)\\n\"\n+            \"  \\\"mutable\\\" : [                     (array of string) list of ways the block template may be changed \\n\"\n+            \"     \\\"value\\\"                          (string) A way the block template may be changed, e.g. 'time', 'transactions', 'prevblock'\\n\"\n             \"     ,...\\n\"\n             \"  ],\\n\"\n-            \"  \\\"noncerange\\\" : \\\"00000000ffffffff\\\",   (string) A range of valid nonces\\n\"\n-            \"  \\\"sigoplimit\\\" : n,                 (numeric) cost limit of sigops in blocks\\n\"\n+            \"  \\\"noncerange\\\" : \\\"00000000ffffffff\\\",(string) A range of valid nonces\\n\"\n+            \"  \\\"sigoplimit\\\" : n,                 (numeric) limit of sigops in blocks\\n\"\n             \"  \\\"sizelimit\\\" : n,                  (numeric) limit of block size\\n\"\n             \"  \\\"weightlimit\\\" : n,                (numeric) limit of block weight\\n\"\n             \"  \\\"curtime\\\" : ttt,                  (numeric) current timestamp in seconds since epoch (Jan 1 1970 GMT)\\n\"\n-            \"  \\\"bits\\\" : \\\"xxx\\\",                 (string) compressed target of next block\\n\"\n+            \"  \\\"bits\\\" : \\\"xxxxxxxx\\\",              (string) compressed target of next block\\n\"\n             \"  \\\"height\\\" : n                      (numeric) The height of the next block\\n\"\n             \"}\\n\"\n "
      }
    ]
  }
]