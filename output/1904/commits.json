[
  {
    "sha": "529a4d4824136a00e63cd69831023b9c4dd6936b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MjlhNGQ0ODI0MTM2YTAwZTYzY2Q2OTgzMTAyM2I5YzRkZDY5MzZi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2012-10-03T17:03:43Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2012-10-03T18:09:33Z"
      },
      "message": "remove \"checkorder\" and \"reply\" P2P commands\n\nThese command are a leftover from send-to-IP transactions, which have been\nremoved a long time ago.\nAlso removes CNode::mapRequests and CNode::PushRequests, as these were\nonly used for the mentioned commands.",
      "tree": {
        "sha": "a28facc0b26511fc7370ac1dcd2b2dc84d2f5331",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a28facc0b26511fc7370ac1dcd2b2dc84d2f5331"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/529a4d4824136a00e63cd69831023b9c4dd6936b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/529a4d4824136a00e63cd69831023b9c4dd6936b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/529a4d4824136a00e63cd69831023b9c4dd6936b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/529a4d4824136a00e63cd69831023b9c4dd6936b/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0547b02af78dcf2d84e4905b56c7f95d9582b2f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0547b02af78dcf2d84e4905b56c7f95d9582b2f9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0547b02af78dcf2d84e4905b56c7f95d9582b2f9"
      }
    ],
    "stats": {
      "total": 128,
      "additions": 3,
      "deletions": 125
    },
    "files": [
      {
        "sha": "19396173404b413fb86d73ade8bb36caf0d6a3c5",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 48,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/529a4d4824136a00e63cd69831023b9c4dd6936b/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/529a4d4824136a00e63cd69831023b9c4dd6936b/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=529a4d4824136a00e63cd69831023b9c4dd6936b",
        "patch": "@@ -2413,7 +2413,6 @@ unsigned char pchMessageStart[4] = { 0xf9, 0xbe, 0xb4, 0xd9 };\n \n bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n {\n-    static map<CService, CPubKey> mapReuseKey;\n     RandAddSeedPerfmon();\n     if (fDebug)\n         printf(\"received: %s (%\"PRIszu\" bytes)\\n\", strCommand.c_str(), vRecv.size());\n@@ -2921,53 +2920,6 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n     }\n \n \n-    else if (strCommand == \"checkorder\")\n-    {\n-        uint256 hashReply;\n-        vRecv >> hashReply;\n-\n-        if (!GetBoolArg(\"-allowreceivebyip\"))\n-        {\n-            pfrom->PushMessage(\"reply\", hashReply, (int)2, string(\"\"));\n-            return true;\n-        }\n-\n-        CWalletTx order;\n-        vRecv >> order;\n-\n-        /// we have a chance to check the order here\n-\n-        // Keep giving the same key to the same ip until they use it\n-        if (!mapReuseKey.count(pfrom->addr))\n-            pwalletMain->GetKeyFromPool(mapReuseKey[pfrom->addr], true);\n-\n-        // Send back approval of order and pubkey to use\n-        CScript scriptPubKey;\n-        scriptPubKey << mapReuseKey[pfrom->addr] << OP_CHECKSIG;\n-        pfrom->PushMessage(\"reply\", hashReply, (int)0, scriptPubKey);\n-    }\n-\n-\n-    else if (strCommand == \"reply\")\n-    {\n-        uint256 hashReply;\n-        vRecv >> hashReply;\n-\n-        CRequestTracker tracker;\n-        {\n-            LOCK(pfrom->cs_mapRequests);\n-            map<uint256, CRequestTracker>::iterator mi = pfrom->mapRequests.find(hashReply);\n-            if (mi != pfrom->mapRequests.end())\n-            {\n-                tracker = (*mi).second;\n-                pfrom->mapRequests.erase(mi);\n-            }\n-        }\n-        if (!tracker.IsNull())\n-            tracker.fn(tracker.param1, vRecv);\n-    }\n-\n-\n     else if (strCommand == \"ping\")\n     {\n         if (pfrom->nVersion > BIP0031_VERSION)"
      },
      {
        "sha": "53341dc36dedfb4f400b1a324b7b7f2ab8165b77",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/529a4d4824136a00e63cd69831023b9c4dd6936b/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/529a4d4824136a00e63cd69831023b9c4dd6936b/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=529a4d4824136a00e63cd69831023b9c4dd6936b",
        "patch": "@@ -20,7 +20,6 @@ class CReserveKey;\n \n class CAddress;\n class CInv;\n-class CRequestTracker;\n class CNode;\n \n static const unsigned int MAX_BLOCK_SIZE = 1000000;"
      },
      {
        "sha": "a7062b4c7cbbfb1daed4f6e1f3675323ee3ce022",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 7,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/529a4d4824136a00e63cd69831023b9c4dd6936b/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/529a4d4824136a00e63cd69831023b9c4dd6936b/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=529a4d4824136a00e63cd69831023b9c4dd6936b",
        "patch": "@@ -711,13 +711,9 @@ void ThreadSocketHandler2(void* parg)\n                             TRY_LOCK(pnode->cs_vRecv, lockRecv);\n                             if (lockRecv)\n                             {\n-                                TRY_LOCK(pnode->cs_mapRequests, lockReq);\n-                                if (lockReq)\n-                                {\n-                                    TRY_LOCK(pnode->cs_inventory, lockInv);\n-                                    if (lockInv)\n-                                        fDelete = true;\n-                                }\n+                                TRY_LOCK(pnode->cs_inventory, lockInv);\n+                                if (lockInv)\n+                                    fDelete = true;\n                             }\n                         }\n                     }"
      },
      {
        "sha": "c841fa7368f0fc8e8e62aa6b8a78b8a4b4063f37",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 0,
        "deletions": 69,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/529a4d4824136a00e63cd69831023b9c4dd6936b/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/529a4d4824136a00e63cd69831023b9c4dd6936b/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=529a4d4824136a00e63cd69831023b9c4dd6936b",
        "patch": "@@ -19,7 +19,6 @@\n #include \"protocol.h\"\n #include \"addrman.h\"\n \n-class CRequestTracker;\n class CNode;\n class CBlockIndex;\n extern int nBestHeight;\n@@ -74,25 +73,6 @@ enum\n     MSG_BLOCK,\n };\n \n-class CRequestTracker\n-{\n-public:\n-    void (*fn)(void*, CDataStream&);\n-    void* param1;\n-\n-    explicit CRequestTracker(void (*fnIn)(void*, CDataStream&)=NULL, void* param1In=NULL)\n-    {\n-        fn = fnIn;\n-        param1 = param1In;\n-    }\n-\n-    bool IsNull()\n-    {\n-        return fn == NULL;\n-    }\n-};\n-\n-\n /** Thread types */\n enum threadId\n {\n@@ -188,8 +168,6 @@ class CNode\n \n public:\n     int64 nReleaseTime;\n-    std::map<uint256, CRequestTracker> mapRequests;\n-    CCriticalSection cs_mapRequests;\n     uint256 hashContinue;\n     CBlockIndex* pindexLastGetBlocksBegin;\n     uint256 hashLastGetBlocksEnd;\n@@ -563,53 +541,6 @@ class CNode\n         }\n     }\n \n-\n-    void PushRequest(const char* pszCommand,\n-                     void (*fn)(void*, CDataStream&), void* param1)\n-    {\n-        uint256 hashReply;\n-        RAND_bytes((unsigned char*)&hashReply, sizeof(hashReply));\n-\n-        {\n-            LOCK(cs_mapRequests);\n-            mapRequests[hashReply] = CRequestTracker(fn, param1);\n-        }\n-\n-        PushMessage(pszCommand, hashReply);\n-    }\n-\n-    template<typename T1>\n-    void PushRequest(const char* pszCommand, const T1& a1,\n-                     void (*fn)(void*, CDataStream&), void* param1)\n-    {\n-        uint256 hashReply;\n-        RAND_bytes((unsigned char*)&hashReply, sizeof(hashReply));\n-\n-        {\n-            LOCK(cs_mapRequests);\n-            mapRequests[hashReply] = CRequestTracker(fn, param1);\n-        }\n-\n-        PushMessage(pszCommand, hashReply, a1);\n-    }\n-\n-    template<typename T1, typename T2>\n-    void PushRequest(const char* pszCommand, const T1& a1, const T2& a2,\n-                     void (*fn)(void*, CDataStream&), void* param1)\n-    {\n-        uint256 hashReply;\n-        RAND_bytes((unsigned char*)&hashReply, sizeof(hashReply));\n-\n-        {\n-            LOCK(cs_mapRequests);\n-            mapRequests[hashReply] = CRequestTracker(fn, param1);\n-        }\n-\n-        PushMessage(pszCommand, hashReply, a1, a2);\n-    }\n-\n-\n-\n     void PushGetBlocks(CBlockIndex* pindexBegin, uint256 hashEnd);\n     bool IsSubscribed(unsigned int nChannel);\n     void Subscribe(unsigned int nChannel, unsigned int nHops=0);"
      }
    ]
  }
]