MarcoFalke,2018-09-21T16:05:10Z,"Reminds me of ""Drop ParseHashUV in favor of calling ParseHashStr"" #13422 by @Empact ",https://github.com/bitcoin/bitcoin/pull/14288#issuecomment-423587123,423587123,
DrahtBot,2018-09-21T17:46:20Z,"<!--e57a25ab6845829454e8d69fc972939a-->Note to reviewers: This pull request conflicts with the following ones:\n\n* #13815 (util: Add [[nodiscard]] to all {Decode,Parse}[...](...) functions returning bool by practicalswift)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",https://github.com/bitcoin/bitcoin/pull/14288#issuecomment-423618807,423618807,
l2a5b1,2018-09-24T11:56:43Z,"I don't mind the change, but also don't mind keeping it as it is. :)\nI suspect either way is fine.",https://github.com/bitcoin/bitcoin/pull/14288#issuecomment-423950250,423950250,
MarcoFalke,2018-09-24T12:23:56Z,Couldn't you remove this function and just call `ParseHashStr`?,https://github.com/bitcoin/bitcoin/pull/14288#issuecomment-423956445,423956445,
practicalswift,2018-09-24T13:09:51Z,"@MarcoFalke Yes, but I don't want to change any behaviour and the functions are not identical. `ParseHashStr` throws `std::runtime_error` in case of non-hex input which `ParseHexHashStr` does not. Also note the length requirement of `ParseHexHashStr`.\n\n```\nuint256 ParseHashStr(const std::string& strHex, const std::string& strName)\n{\n    if (!IsHex(strHex)) // Note: IsHex("""") is false\n ",https://github.com/bitcoin/bitcoin/pull/14288#issuecomment-423968768,423968768,
practicalswift,2018-09-24T15:40:40Z,Closing in favour of #14307 which fixes this issue more elegantly :-),https://github.com/bitcoin/bitcoin/pull/14288#issuecomment-424021215,424021215,
