[
  {
    "sha": "307acdd3df03082295ac0f7fe9eba7dd35973bc4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMDdhY2RkM2RmMDMwODIyOTVhYzBmN2ZlOWViYTdkZDM1OTczYmM0",
    "commit": {
      "author": {
        "name": "mrbandrews",
        "email": "bandrewsny@gmail.com",
        "date": "2016-11-15T20:37:46Z"
      },
      "committer": {
        "name": "mrbandrews",
        "email": "bandrewsny@gmail.com",
        "date": "2016-11-15T20:37:46Z"
      },
      "message": "[qa] add assert_raises_message to check specific error message",
      "tree": {
        "sha": "bb4ef780e9a296c1f73fc690deaccb326322c6b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb4ef780e9a296c1f73fc690deaccb326322c6b0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/307acdd3df03082295ac0f7fe9eba7dd35973bc4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/307acdd3df03082295ac0f7fe9eba7dd35973bc4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/307acdd3df03082295ac0f7fe9eba7dd35973bc4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/307acdd3df03082295ac0f7fe9eba7dd35973bc4/comments",
    "author": {
      "login": "mrbandrews",
      "id": 7504522,
      "node_id": "MDQ6VXNlcjc1MDQ1MjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7504522?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrbandrews",
      "html_url": "https://github.com/mrbandrews",
      "followers_url": "https://api.github.com/users/mrbandrews/followers",
      "following_url": "https://api.github.com/users/mrbandrews/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrbandrews/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrbandrews/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrbandrews/subscriptions",
      "organizations_url": "https://api.github.com/users/mrbandrews/orgs",
      "repos_url": "https://api.github.com/users/mrbandrews/repos",
      "events_url": "https://api.github.com/users/mrbandrews/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrbandrews/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mrbandrews",
      "id": 7504522,
      "node_id": "MDQ6VXNlcjc1MDQ1MjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7504522?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrbandrews",
      "html_url": "https://github.com/mrbandrews",
      "followers_url": "https://api.github.com/users/mrbandrews/followers",
      "following_url": "https://api.github.com/users/mrbandrews/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrbandrews/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrbandrews/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrbandrews/subscriptions",
      "organizations_url": "https://api.github.com/users/mrbandrews/orgs",
      "repos_url": "https://api.github.com/users/mrbandrews/repos",
      "events_url": "https://api.github.com/users/mrbandrews/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrbandrews/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "018a4eb120dcdab73f07ca02d18a5c8843509d67",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/018a4eb120dcdab73f07ca02d18a5c8843509d67",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/018a4eb120dcdab73f07ca02d18a5c8843509d67"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 7,
      "deletions": 3
    },
    "files": [
      {
        "sha": "0b3585c6b2ba4a18bddda57925aa386c26902890",
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/307acdd3df03082295ac0f7fe9eba7dd35973bc4/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/307acdd3df03082295ac0f7fe9eba7dd35973bc4/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=307acdd3df03082295ac0f7fe9eba7dd35973bc4",
        "patch": "@@ -531,10 +531,14 @@ def assert_greater_than(thing1, thing2):\n         raise AssertionError(\"%s <= %s\"%(str(thing1),str(thing2)))\n \n def assert_raises(exc, fun, *args, **kwds):\n+    assert_raises_message(exc, None, fun, *args, **kwds)\n+\n+def assert_raises_message(exc, message, fun, *args, **kwds):\n     try:\n         fun(*args, **kwds)\n-    except exc:\n-        pass\n+    except exc as e:\n+        if message is not None and message not in e.error['message']:\n+            raise AssertionError(\"Expected substring not found:\"+e.error['message'])\n     except Exception as e:\n         raise AssertionError(\"Unexpected exception raised: \"+type(e).__name__)\n     else:"
      },
      {
        "sha": "3c0dc0f4ea1bb1c9b6c4688f0bbfd712f4e740f1",
        "filename": "qa/rpc-tests/wallet.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/307acdd3df03082295ac0f7fe9eba7dd35973bc4/qa/rpc-tests/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/307acdd3df03082295ac0f7fe9eba7dd35973bc4/qa/rpc-tests/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.py?ref=307acdd3df03082295ac0f7fe9eba7dd35973bc4",
        "patch": "@@ -71,7 +71,7 @@ def run_test (self):\n         unspent_0 = self.nodes[2].listunspent()[0]\n         unspent_0 = {\"txid\": unspent_0[\"txid\"], \"vout\": unspent_0[\"vout\"]}\n         self.nodes[2].lockunspent(False, [unspent_0])\n-        assert_raises(JSONRPCException, self.nodes[2].sendtoaddress, self.nodes[2].getnewaddress(), 20)\n+        assert_raises_message(JSONRPCException, \"Insufficient funds\", self.nodes[2].sendtoaddress, self.nodes[2].getnewaddress(), 20)\n         assert_equal([unspent_0], self.nodes[2].listlockunspent())\n         self.nodes[2].lockunspent(True, [unspent_0])\n         assert_equal(len(self.nodes[2].listlockunspent()), 0)"
      }
    ]
  }
]