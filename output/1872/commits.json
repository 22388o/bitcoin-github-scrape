[
  {
    "sha": "a3fad2119bcf4638ed137fc5cddc2f34a3bd1dc2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphM2ZhZDIxMTliY2Y0NjM4ZWQxMzdmYzVjZGRjMmYzNGEzYmQxZGMy",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2012-09-27T17:29:35Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2012-12-14T12:35:56Z"
      },
      "message": "In listaddressgroupings push down the IsMine check to run on each input.\n\nThis avoids a potential crash when trying to read the scrippubkeys on\ntransactions where the first input IsMine but some of the rest are not\nwhen running listaddressgroupings.",
      "tree": {
        "sha": "bf78ebd8bce2eec6883b543dde9155c2a8ea83ef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bf78ebd8bce2eec6883b543dde9155c2a8ea83ef"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a3fad2119bcf4638ed137fc5cddc2f34a3bd1dc2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3fad2119bcf4638ed137fc5cddc2f34a3bd1dc2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a3fad2119bcf4638ed137fc5cddc2f34a3bd1dc2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3fad2119bcf4638ed137fc5cddc2f34a3bd1dc2/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "14ac0adcc7c0224a467e38bbd4ebf39d824ada8d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/14ac0adcc7c0224a467e38bbd4ebf39d824ada8d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/14ac0adcc7c0224a467e38bbd4ebf39d824ada8d"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 21,
      "deletions": 12
    },
    "files": [
      {
        "sha": "3806f1e790df23f5fa2516c9577cc4b52f053b49",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 12,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a3fad2119bcf4638ed137fc5cddc2f34a3bd1dc2/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a3fad2119bcf4638ed137fc5cddc2f34a3bd1dc2/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=a3fad2119bcf4638ed137fc5cddc2f34a3bd1dc2",
        "patch": "@@ -1664,29 +1664,38 @@ set< set<CTxDestination> > CWallet::GetAddressGroupings()\n     {\n         CWalletTx *pcoin = &walletEntry.second;\n \n-        if (pcoin->vin.size() > 0 && IsMine(pcoin->vin[0]))\n+        if (pcoin->vin.size() > 0)\n         {\n+            bool any_mine = false;\n             // group all input addresses with each other\n             BOOST_FOREACH(CTxIn txin, pcoin->vin)\n             {\n                 CTxDestination address;\n+                if(!IsMine(txin)) /* If this input isn't mine, ignore it */\n+                    continue;\n                 if(!ExtractDestination(mapWallet[txin.prevout.hash].vout[txin.prevout.n].scriptPubKey, address))\n                     continue;\n                 grouping.insert(address);\n+                any_mine = true;\n             }\n \n             // group change with input addresses\n-            BOOST_FOREACH(CTxOut txout, pcoin->vout)\n-                if (IsChange(txout))\n-                {\n-                    CWalletTx tx = mapWallet[pcoin->vin[0].prevout.hash];\n-                    CTxDestination txoutAddr;\n-                    if(!ExtractDestination(txout.scriptPubKey, txoutAddr))\n-                        continue;\n-                    grouping.insert(txoutAddr);\n-                }\n-            groupings.insert(grouping);\n-            grouping.clear();\n+            if (any_mine)\n+            {\n+               BOOST_FOREACH(CTxOut txout, pcoin->vout)\n+                   if (IsChange(txout))\n+                   {\n+                       CTxDestination txoutAddr;\n+                       if(!ExtractDestination(txout.scriptPubKey, txoutAddr))\n+                           continue;\n+                       grouping.insert(txoutAddr);\n+                   }\n+            }\n+            if (grouping.size() > 0)\n+            {\n+                groupings.insert(grouping);\n+                grouping.clear();\n+            }\n         }\n \n         // group lone addrs by themselves"
      }
    ]
  }
]