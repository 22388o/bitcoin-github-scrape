JeremyRubin,2018-03-06T18:07:09Z,"Going to close this for now; it is a good target for future work if someone wants to take another crack at it.\n\nI have a number of further relaxations/tweaks (which need more review) to this PR available here https://github.com/JeremyRubin/bitcoin/pull/1 if anyone is taking it over, they should review those too.",https://github.com/bitcoin/bitcoin/pull/9938#issuecomment-370873619,370873619,
ryanofsky,2018-03-06T18:34:39Z,Should be tagged [up for grabs](https://github.com/bitcoin/bitcoin/issues?q=label%3A%22Up+for+grabs%22),https://github.com/bitcoin/bitcoin/pull/9938#issuecomment-370882242,370882242,
jonatack,2021-01-11T08:55:11Z,"Thanks @JeremyRubin for the really nice exposition of the issues in this PR description, found it helpful for reviewing #18710.",https://github.com/bitcoin/bitcoin/pull/9938#issuecomment-757747967,757747967,
TheBlueMatt,2017-03-08T21:39:33Z,"To make the test expose more parallellism, should probably use release/acquire here, no?",https://github.com/bitcoin/bitcoin/pull/9938#discussion_r105029718,105029718,src/test/checkqueue_tests.cpp
TheBlueMatt,2017-03-08T21:42:00Z,"nit: whitespace at end of line (and stray line, it looks like).",https://github.com/bitcoin/bitcoin/pull/9938#discussion_r105030247,105030247,src/test/checkqueue_tests.cpp
TheBlueMatt,2017-03-08T21:45:26Z,"nit: something > 10 might test parallellism a bit more, no? (and in a few other places)",https://github.com/bitcoin/bitcoin/pull/9938#discussion_r105030963,105030963,src/test/checkqueue_tests.cpp
TheBlueMatt,2017-03-08T21:49:30Z,I think you meant to have an XOR here.,https://github.com/bitcoin/bitcoin/pull/9938#discussion_r105031924,105031924,src/test/checkqueue_tests.cpp
TheBlueMatt,2017-03-08T22:13:51Z,"nit: maybe close the ""l"" scope after this line so that the try_lock()s happen without FrozenCleanupCheck::m?",https://github.com/bitcoin/bitcoin/pull/9938#discussion_r105037465,105037465,src/test/checkqueue_tests.cpp
TheBlueMatt,2017-03-08T22:14:05Z,nit: whitespace at EOL here.,https://github.com/bitcoin/bitcoin/pull/9938#discussion_r105037514,105037514,src/test/checkqueue_tests.cpp
TheBlueMatt,2017-03-08T22:32:02Z,I think you meant to remove/move this comment as well?,https://github.com/bitcoin/bitcoin/pull/9938#discussion_r105041481,105041481,src/checkqueue.h
TheBlueMatt,2017-03-08T22:36:28Z,Nit: can these be private?,https://github.com/bitcoin/bitcoin/pull/9938#discussion_r105042472,105042472,src/checkqueue.h
TheBlueMatt,2017-03-08T22:38:42Z,Can you add some documentation for Flush() (and how it interacts with the two versions of Add()) here?,https://github.com/bitcoin/bitcoin/pull/9938#discussion_r105043019,105043019,src/checkqueue.h
TheBlueMatt,2017-03-08T22:39:00Z,nit: whitespace at EOL here.,https://github.com/bitcoin/bitcoin/pull/9938#discussion_r105043095,105043095,src/checkqueue.h
TheBlueMatt,2017-03-08T22:46:17Z,Maybe ifdef hardware_destructive_interference_size use it?,https://github.com/bitcoin/bitcoin/pull/9938#discussion_r105044600,105044600,src/checkqueue.h
TheBlueMatt,2017-03-08T22:57:40Z,"Huh? Sure we can, we just cant decrement nAwake until we've swap()ed. I assume you had a previous version with an early termination for !fAllOk?",https://github.com/bitcoin/bitcoin/pull/9938#discussion_r105046758,105046758,src/checkqueue.h
TheBlueMatt,2017-03-08T23:05:01Z,"Looks like, in the current version, you can remove nBatchSize as well (though I'm surprised its not a performance gain to batch operations?",https://github.com/bitcoin/bitcoin/pull/9938#discussion_r105048119,105048119,src/checkqueue.h
JeremyRubin,2017-03-09T02:08:18Z,"Yes, absolutely. I didn't change it to minimize changeset, but it no longer has a use.",https://github.com/bitcoin/bitcoin/pull/9938#discussion_r105072948,105072948,src/checkqueue.h
JeremyRubin,2017-03-09T02:11:18Z,"Yes; you're correct. Earlier version was like this.\n\nAlso termination does still occur ""early"", all the actual checks are skipped (they are just stilled dequeued). I suppose I could make it abort (may actually be nice to check if it aborted before calling checkinputs... but maybe that's best for another PR).\n\nI'll refactor to something which converges more quickly on abort (e.g., setting !",https://github.com/bitcoin/bitcoin/pull/9938#discussion_r105073250,105073250,src/checkqueue.h
TheBlueMatt,2017-03-09T17:26:29Z,"Its probably better to not have quick abort and have less between-thread contention, no?",https://github.com/bitcoin/bitcoin/pull/9938#discussion_r105221818,105221818,src/checkqueue.h
JeremyRubin,2017-03-09T18:27:07Z,"I think the solution i came up with is pretty trivial (I'll push it later today).\n\n```c++\nfOk = fAllOk.load(std::memory_order_relaxed);\nif (fOk) {\n    T t();\n    pT->swap(t);\n} else {\n    fAllOk.store(false, std::memory_order_relaxed);\n    fMasterPresent = false;\n    // try to consume all values as quickly as possible\n    while (top_cache > bottom_cache &&\n                 ",https://github.com/bitcoin/bitcoin/pull/9938#discussion_r105235482,105235482,src/checkqueue.h
TheBlueMatt,2017-03-09T20:07:32Z,"Looks like too just complexity? Just dont bother exiting early, we can take a performance hit of very little on an invalid block, I think. Just dont bother writing to fAllOk if fOk?",https://github.com/bitcoin/bitcoin/pull/9938#discussion_r105258806,105258806,src/checkqueue.h
JeremyRubin,2017-03-27T18:15:36Z,Yes.,https://github.com/bitcoin/bitcoin/pull/9938#discussion_r108241184,108241184,src/test/checkqueue_tests.cpp
theuni,2017-03-27T20:54:16Z,"Why not:\n```\nfOk &= fOk && T(std::move(*pT))()\n```\nand do away with all of the swap business?",https://github.com/bitcoin/bitcoin/pull/9938#discussion_r108277493,108277493,src/checkqueue.h
