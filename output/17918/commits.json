[
  {
    "sha": "c4ea501e96363e937200bc97b8e2d78162bdb699",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNGVhNTAxZTk2MzYzZTkzNzIwMGJjOTdiOGUyZDc4MTYyYmRiNjk5",
    "commit": {
      "author": {
        "name": "Emil Engler",
        "email": "me@emilengler.com",
        "date": "2020-01-13T18:50:44Z"
      },
      "committer": {
        "name": "Emil Engler",
        "email": "me@emilengler.com",
        "date": "2020-01-18T08:00:40Z"
      },
      "message": "qt: Hide non PKHash-Addresses in signing address book",
      "tree": {
        "sha": "06eaaff12260b7ed84cc8dfecc2d78ce4091a7a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/06eaaff12260b7ed84cc8dfecc2d78ce4091a7a9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c4ea501e96363e937200bc97b8e2d78162bdb699",
      "comment_count": 2,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE82XmVEpcmrEyk0LUL21BRcVfx8cFAl4iuysACgkQL21BRcVf\nx8eMgRAAtBkCbTLPlib80/Y/N9DhEx7CDbX7eiHMJ7TQFfT1g83tl88L0zuIu9g7\nw586i4xisYB0P/XeDnQyNd7J9k9kasMI4lgScN6nakyB1SOhqDzfJ3eV139c4cDs\nZ8kG3lkNwrDXDcsPZiTbZwDE/8hWE+zk2DJpVsY7ppETmagiqa/ncPt6Vo89RzYJ\nKnXqNGfo8Jh2ar5bEOfYIBT/KeU1womB9fzPCjCuhBLAsMPMjhTLLqI7ZO43LcSp\nSI/8I4xoZtk2GjGXslEsbNxZtBBXro9w9b2zJD9J+g4Lh07JhwGdgfoc1hBcezxs\nP6uWXPzabcC6/SnXJDZ08JlVx6PQjBCxVpKtxI8JCk8bwmT4FwL5bgwfxvq2Zw2g\n9/6WTxQpdaJd9r5P7wxZUO5sA8rLaIfEV6dGu8P1RY8emNFvyYvwUKdL8sHUvhK/\nE1STUPaQFd5izNMlwr6sLS3i7llJMHO8iyYkHO9lZVZbSjcHNazRCHgYixoup5EN\nlEKtn38WA2BuJURvf8aaY956Jh+5LlCOHIkXcvQF7YVtjTXZ0LTm2sIZlLlLIjE3\njgm8FI28J4U7p5F5X+jCGCgYvN8omFdpp2WS5bGquWxPJ2W2D6J8RAFpqEt7AI0T\na4UEoRs61pwVIeHr1JiGPjRi/4kdV8yld06Ow39Fhzed3RHbZms=\n=HDj7\n-----END PGP SIGNATURE-----",
        "payload": "tree 06eaaff12260b7ed84cc8dfecc2d78ce4091a7a9\nparent 2ed74a43a05a47129d56117deeb489addbcaf05f\nauthor Emil Engler <me@emilengler.com> 1578941444 +0100\ncommitter Emil Engler <me@emilengler.com> 1579334440 +0100\n\nqt: Hide non PKHash-Addresses in signing address book\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4ea501e96363e937200bc97b8e2d78162bdb699",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c4ea501e96363e937200bc97b8e2d78162bdb699",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4ea501e96363e937200bc97b8e2d78162bdb699/comments",
    "author": {
      "login": "emilengler",
      "id": 12272949,
      "node_id": "MDQ6VXNlcjEyMjcyOTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12272949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/emilengler",
      "html_url": "https://github.com/emilengler",
      "followers_url": "https://api.github.com/users/emilengler/followers",
      "following_url": "https://api.github.com/users/emilengler/following{/other_user}",
      "gists_url": "https://api.github.com/users/emilengler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/emilengler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/emilengler/subscriptions",
      "organizations_url": "https://api.github.com/users/emilengler/orgs",
      "repos_url": "https://api.github.com/users/emilengler/repos",
      "events_url": "https://api.github.com/users/emilengler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/emilengler/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "emilengler",
      "id": 12272949,
      "node_id": "MDQ6VXNlcjEyMjcyOTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12272949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/emilengler",
      "html_url": "https://github.com/emilengler",
      "followers_url": "https://api.github.com/users/emilengler/followers",
      "following_url": "https://api.github.com/users/emilengler/following{/other_user}",
      "gists_url": "https://api.github.com/users/emilengler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/emilengler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/emilengler/subscriptions",
      "organizations_url": "https://api.github.com/users/emilengler/orgs",
      "repos_url": "https://api.github.com/users/emilengler/repos",
      "events_url": "https://api.github.com/users/emilengler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/emilengler/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2ed74a43a05a47129d56117deeb489addbcaf05f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ed74a43a05a47129d56117deeb489addbcaf05f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2ed74a43a05a47129d56117deeb489addbcaf05f"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 16,
      "deletions": 5
    },
    "files": [
      {
        "sha": "da331db4b61f4a0bd6ddf87986044c42c6598ab6",
        "filename": "src/qt/addressbookpage.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4ea501e96363e937200bc97b8e2d78162bdb699/src/qt/addressbookpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4ea501e96363e937200bc97b8e2d78162bdb699/src/qt/addressbookpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addressbookpage.cpp?ref=c4ea501e96363e937200bc97b8e2d78162bdb699",
        "patch": "@@ -106,7 +106,7 @@ AddressBookPage::AddressBookPage(const PlatformStyle *platformStyle, Mode _mode,\n         ui->newAddress->setVisible(true);\n         break;\n     case ReceivingTab:\n-        ui->labelExplanation->setText(tr(\"These are your Bitcoin addresses for receiving payments. Use the 'Create new receiving address' button in the receive tab to create new addresses.\"));\n+        ui->labelExplanation->setText(tr(\"These are your Bitcoin addresses for receiving payments. Use the 'Create new receiving address' button in the receive tab to create new addresses.\\nSigning is only possible with addresses of the type 'legacy'.\"));\n         ui->deleteAddress->setVisible(false);\n         ui->newAddress->setVisible(false);\n         break;"
      },
      {
        "sha": "ec67c1f2ade2b89fb80ae89a155adce1c2ac6cb0",
        "filename": "src/qt/addresstablemodel.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4ea501e96363e937200bc97b8e2d78162bdb699/src/qt/addresstablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4ea501e96363e937200bc97b8e2d78162bdb699/src/qt/addresstablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.cpp?ref=c4ea501e96363e937200bc97b8e2d78162bdb699",
        "patch": "@@ -11,6 +11,7 @@\n #include <wallet/wallet.h>\n \n #include <algorithm>\n+#include <typeinfo>\n \n #include <QFont>\n #include <QDebug>\n@@ -75,12 +76,14 @@ class AddressTablePriv\n     explicit AddressTablePriv(AddressTableModel *_parent):\n         parent(_parent) {}\n \n-    void refreshAddressTable(interfaces::Wallet& wallet)\n+    void refreshAddressTable(interfaces::Wallet& wallet, bool pk_hash_only = false)\n     {\n         cachedAddressTable.clear();\n         {\n             for (const auto& address : wallet.getAddresses())\n             {\n+                if (pk_hash_only && address.dest.type() != typeid(PKHash))\n+                    continue;\n                 AddressTableEntry::Type addressType = translateTransactionType(\n                         QString::fromStdString(address.purpose), address.is_mine);\n                 cachedAddressTable.append(AddressTableEntry(addressType,\n@@ -159,12 +162,12 @@ class AddressTablePriv\n     }\n };\n \n-AddressTableModel::AddressTableModel(WalletModel *parent) :\n+AddressTableModel::AddressTableModel(WalletModel *parent, bool pk_hash_only) :\n     QAbstractTableModel(parent), walletModel(parent)\n {\n     columns << tr(\"Label\") << tr(\"Address\");\n     priv = new AddressTablePriv(this);\n-    priv->refreshAddressTable(parent->wallet());\n+    priv->refreshAddressTable(parent->wallet(), pk_hash_only);\n }\n \n AddressTableModel::~AddressTableModel()"
      },
      {
        "sha": "af4f234d5e1ffae49376eac6a01d5f7bb255d319",
        "filename": "src/qt/addresstablemodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4ea501e96363e937200bc97b8e2d78162bdb699/src/qt/addresstablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4ea501e96363e937200bc97b8e2d78162bdb699/src/qt/addresstablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.h?ref=c4ea501e96363e937200bc97b8e2d78162bdb699",
        "patch": "@@ -25,7 +25,7 @@ class AddressTableModel : public QAbstractTableModel\n     Q_OBJECT\n \n public:\n-    explicit AddressTableModel(WalletModel *parent = nullptr);\n+    explicit AddressTableModel(WalletModel *parent = nullptr, bool pk_hash_only = false);\n     ~AddressTableModel();\n \n     enum ColumnIndex {"
      },
      {
        "sha": "eea4f66cb2adc1e1c793ee1a71d090e8197e404e",
        "filename": "src/qt/signverifymessagedialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4ea501e96363e937200bc97b8e2d78162bdb699/src/qt/signverifymessagedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4ea501e96363e937200bc97b8e2d78162bdb699/src/qt/signverifymessagedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/signverifymessagedialog.cpp?ref=c4ea501e96363e937200bc97b8e2d78162bdb699",
        "patch": "@@ -89,6 +89,7 @@ void SignVerifyMessageDialog::on_addressBookButton_SM_clicked()\n {\n     if (model && model->getAddressTableModel())\n     {\n+        model->refresh(/* pk_hash_only */ true);\n         AddressBookPage dlg(platformStyle, AddressBookPage::ForSelection, AddressBookPage::ReceivingTab, this);\n         dlg.setModel(model->getAddressTableModel());\n         if (dlg.exec())"
      },
      {
        "sha": "9909810e063e844e0a9642ebeb89820be3da257e",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4ea501e96363e937200bc97b8e2d78162bdb699/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4ea501e96363e937200bc97b8e2d78162bdb699/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=c4ea501e96363e937200bc97b8e2d78162bdb699",
        "patch": "@@ -563,3 +563,8 @@ bool WalletModel::isMultiwallet()\n {\n     return m_node.getWallets().size() > 1;\n }\n+\n+void WalletModel::refresh(bool pk_hash_only)\n+{\n+    addressTableModel = new AddressTableModel(this, pk_hash_only);\n+}"
      },
      {
        "sha": "4e5f71ea1943a8f463315dde02d4cd95860f6d4c",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4ea501e96363e937200bc97b8e2d78162bdb699/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4ea501e96363e937200bc97b8e2d78162bdb699/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=c4ea501e96363e937200bc97b8e2d78162bdb699",
        "patch": "@@ -152,6 +152,8 @@ class WalletModel : public QObject\n     bool isMultiwallet();\n \n     AddressTableModel* getAddressTableModel() const { return addressTableModel; }\n+\n+    void refresh(bool pk_hash_only = false);\n private:\n     std::unique_ptr<interfaces::Wallet> m_wallet;\n     std::unique_ptr<interfaces::Handler> m_handler_unload;"
      }
    ]
  }
]