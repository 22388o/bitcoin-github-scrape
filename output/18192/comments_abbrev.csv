DrahtBot,2020-02-22 09:25:33,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #15761 (Replace -upgradewallet startup option with upgradewallet RPC by achow101)\n* #15719 (Drop Chain::requestMempoolTra",https://github.com/bitcoin/bitcoin/pull/18192#issuecomment-589936619,589936619,
instagibbs,2020-02-25 16:01:24,concept ACK,https://github.com/bitcoin/bitcoin/pull/18192#issuecomment-590941498,590941498,
luke-jr,2020-04-02 16:39:05,"Rebased, nit addressed",https://github.com/bitcoin/bitcoin/pull/18192#issuecomment-607957719,607957719,
MarcoFalke,2020-04-02 22:32:01,Would it be possible to write a test that fails before the bugfix?,https://github.com/bitcoin/bitcoin/pull/18192#issuecomment-608125680,608125680,
luke-jr,2020-04-03 03:05:58,"Test here: https://github.com/bitcoin/bitcoin/commit/86d6059a10502338e844f6d2330e22c1540b8b0e\n\nShould I update this PR with it, or leave it for a follow-up?",https://github.com/bitcoin/bitcoin/pull/18192#issuecomment-608204221,608204221,
jonatack,2020-04-03 15:41:45,"> Test here: [86d6059](https://github.com/bitcoin/bitcoin/commit/86d6059a10502338e844f6d2330e22c1540b8b0e)\n> \n> Should I update this PR with it, or leave it for a follow-up?\n\nI'm happy to re-review with the test pulled in.",https://github.com/bitcoin/bitcoin/pull/18192#issuecomment-608513248,608513248,
MarcoFalke,2020-04-06 19:52:13,"Going to merge this, please submit the test as a follow up. Style cleanups can also go in as follow-ups.",https://github.com/bitcoin/bitcoin/pull/18192#issuecomment-610002686,610002686,
MarcoFalke,2020-04-06 19:54:29,"This has been merged, but somehow GitHub is broken (as usual).",https://github.com/bitcoin/bitcoin/pull/18192#issuecomment-610003656,610003656,
achow101,2020-02-24 19:43:36,Why keep `name` around at all? I would prefer we get replace it with `m_label` and have a `Getlabel()` as well.,https://github.com/bitcoin/bitcoin/pull/18192#discussion_r383474930,383474930,src/wallet/wallet.h
achow101,2020-02-24 19:45:08,nit: capital S. `SetLabel`,https://github.com/bitcoin/bitcoin/pull/18192#discussion_r383475706,383475706,src/wallet/wallet.h
luke-jr,2020-02-24 21:51:50,Maybe as a follow-up refactor. Just trying to minimally fix the bug here. :),https://github.com/bitcoin/bitcoin/pull/18192#discussion_r383536404,383536404,src/wallet/wallet.h
promag,2020-04-02 17:09:36,Maybe we should return a const reference instead considering we do `m_address_book.erase(address);` and that would render this pointer invalid.,https://github.com/bitcoin/bitcoin/pull/18192#discussion_r402473332,402473332,src/wallet/wallet.cpp
luke-jr,2020-04-02 18:29:53,References have the same validity lifetime as pointers AFAIK?,https://github.com/bitcoin/bitcoin/pull/18192#discussion_r402525298,402525298,src/wallet/wallet.cpp
jnewbery,2020-04-02 19:12:59,I agree that we should remove `name` in this PR. Leaving it here is confusing and makes the code less readable.,https://github.com/bitcoin/bitcoin/pull/18192#discussion_r402550620,402550620,src/wallet/wallet.h
promag,2020-04-02 19:41:22,I mean that if the caller keeps the pointer after releasing cs_wallet then you can get trouble. With reference that wouldn't happen because the reference would be in the lock scope. ,https://github.com/bitcoin/bitcoin/pull/18192#discussion_r402566154,402566154,src/wallet/wallet.cpp
jonatack,2020-04-02 20:41:15,nit: a line wrap here would be welcome if you retouch,https://github.com/bitcoin/bitcoin/pull/18192#discussion_r402592657,402592657,src/wallet/wallet.cpp
luke-jr,2020-04-03 02:46:32,It's also a pain to review because we can't just sed it...,https://github.com/bitcoin/bitcoin/pull/18192#discussion_r402706455,402706455,src/wallet/wallet.h
luke-jr,2020-04-03 02:57:42,"Ultimately, it's unrelated to this PR... All confusion/unreadability from it predates this.",https://github.com/bitcoin/bitcoin/pull/18192#discussion_r402709564,402709564,src/wallet/wallet.h
luke-jr,2020-04-03 03:05:05,See here: https://github.com/bitcoin/bitcoin/commit/c16a57a2a9f694feaf0020e057fa9468e99045db,https://github.com/bitcoin/bitcoin/pull/18192#discussion_r402711562,402711562,src/wallet/wallet.h
jnewbery,2020-04-03 15:19:07,Looks good. Please tag me when you open a PR for that branch.,https://github.com/bitcoin/bitcoin/pull/18192#discussion_r403080403,403080403,src/wallet/wallet.h
jnewbery,2020-04-03 15:24:51,"I think this would be safer as a `return false`. The interface method `delAddressBook()` doesn't enforce any conditions on the address book entry type to be deleted, so a buggy wallet client could cause the node to assert. We have a bool return value (which an already be used if the database fails to update the entry), so lets use it.",https://github.com/bitcoin/bitcoin/pull/18192#discussion_r403084263,403084263,src/wallet/wallet.cpp
jonatack,2020-04-03 15:37:24,"> Looks good. Please tag me when you open a PR for that branch.\n\nI agree. Happy to review that change.",https://github.com/bitcoin/bitcoin/pull/18192#discussion_r403092834,403092834,src/wallet/wallet.h
luke-jr,2020-04-06 19:52:29,Done,https://github.com/bitcoin/bitcoin/pull/18192#discussion_r404348021,404348021,src/wallet/wallet.cpp
