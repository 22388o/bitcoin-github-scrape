MarcoFalke,2020-11-24 07:11:05,Is this needed for anything or does this change anything about the binaries? I presume it is needed for qt5.15?,https://github.com/bitcoin/bitcoin/pull/20471#issuecomment-732701673,732701673,
laanwj,2020-11-24 08:35:17,"I think it's safer with regard to ABI to compile them with the same standard as the application, definitely for boost. We've seen some problems in that regard in the past. \n\nAnd especially building with an older C++XX than the application itself could cause some things to be missing that are conditional on the C++XX version.\n\n> Note that when you look at the DEBUG output for these changes ",https://github.com/bitcoin/bitcoin/pull/20471#issuecomment-732742115,732742115,
DrahtBot,2020-11-24 08:43:31,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19716 (build: Qt 5.15.x by fanquake)\n* #19245 ([WIP DONOTMERGE] Replace boost::filesystem with std::filesystem (in c++17",https://github.com/bitcoin/bitcoin/pull/20471#issuecomment-732746414,732746414,
practicalswift,2020-11-24 08:53:28,Concept ACK for the reasons given by @laanwj ,https://github.com/bitcoin/bitcoin/pull/20471#issuecomment-732751672,732751672,
fanquake,2020-11-25 02:45:42,"> Would this be solved by upgrading Qt?\n\nIt doesn't look like it. #19716 (Qt 5.15.2) still behaves in the same way when built in `c++1z` mode.",https://github.com/bitcoin/bitcoin/pull/20471#issuecomment-733427446,733427446,
laanwj,2020-11-25 08:54:28,"> It doesn't look like it. #19716 (Qt 5.15.2) still behaves in the same way when built in c++1z mode.\n\nOK, good to know. That should be in for 0.22 anyway. I suppose for that version we can also just use `c++17` in not need the 1z temporary name.\n\nCode review ACK https://github.com/bitcoin/bitcoin/pull/20471/commits/2f5dfe4a7ff12b6b57427374142cdf7e266b73bc",https://github.com/bitcoin/bitcoin/pull/20471#issuecomment-733562582,733562582,
fanquake,2020-11-25 09:00:49,">  I suppose for that version we can also just use c++17 in not need the 1z temporary name.\n\nYep, we will be able to. 5.15.x understands `-c++std c++17`. ",https://github.com/bitcoin/bitcoin/pull/20471#issuecomment-733566147,733566147,
hebasto,2020-11-25 11:32:39,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/20471#issuecomment-733651945,733651945,
practicalswift,2020-11-25 13:26:41,cr ACK 2f5dfe4a7ff12b6b57427374142cdf7e266b73bc: patch looks correct,https://github.com/bitcoin/bitcoin/pull/20471#issuecomment-733705339,733705339,
DrahtBot,2020-11-27 01:33:40,<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit afdfd3c8c1ce96adae11809e3989de381137fee9<br>(master) | commit b76f624945387049dd4b594f553f9be0669664e9<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`321e361023e8ea7b...`](https://drahtbot.space/guix/bitcoin/bitcoin/afdfd3c8c1ce96adae11809e3989de381137fee9/bitcoin-afdfd3c8c1ce-aarch64-linux,https://github.com/bitcoin/bitcoin/pull/20471#issuecomment-734527973,734527973,
fjahr,2020-11-29 13:34:13,Code review ACK 2f5dfe4a7ff12b6b57427374142cdf7e266b73bc,https://github.com/bitcoin/bitcoin/pull/20471#issuecomment-735395297,735395297,
DrahtBot,2020-11-30 03:16:29,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit e2ff5e7b35d71195278d2a2ed9485f141de33d7a<br>(master) | commit 68f7a5a7322c6ad12f0cce29178a3458de2a46f3<br>(master and this pull) |\n|--|--|--|\n| bitcoin-core-linux-22-res.yml | [`44e52af36236879f...`](https://drahtbot.space/gitian/bitcoin/bitcoin/e2ff5e7b35d71195278d2a2ed9485f141de33d7a/bitcoin-core-linux-22-res.yml) | ,https://github.com/bitcoin/bitcoin/pull/20471#issuecomment-735520843,735520843,
