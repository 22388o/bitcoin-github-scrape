[
  {
    "sha": "9d33dc71cfbfc89e89284338c691d1e104c60665",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZDMzZGM3MWNmYmZjODllODkyODQzMzhjNjkxZDFlMTA0YzYwNjY1",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2012-02-05T07:30:43Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2012-02-05T07:40:41Z"
      },
      "message": "Have bitcoind recommend a secure RPC password. Increase invalid password delay.\n\nHelp users avoid insecure configurations a bit by recommending a\nsecure RPC password and increasing the incorrect password delay.\n\nThis may open up a RPC DOS for users with exposed RPC ports and\nshort passwords. Since users shouldn't have exposed RPC ports OR\nshort passwords, the DOS risk is preferable to the compromise\nrisk.\n\nAlso logs the client IP address for incorrect attempts.",
      "tree": {
        "sha": "f10100641929b30f294f50e93d75739f3d09678b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f10100641929b30f294f50e93d75739f3d09678b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d33dc71cfbfc89e89284338c691d1e104c60665",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d33dc71cfbfc89e89284338c691d1e104c60665",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9d33dc71cfbfc89e89284338c691d1e104c60665",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d33dc71cfbfc89e89284338c691d1e104c60665/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d2291cce9235708f3bc3f95ac1b45164a03cd2ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2291cce9235708f3bc3f95ac1b45164a03cd2ce",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d2291cce9235708f3bc3f95ac1b45164a03cd2ce"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 15,
      "deletions": 6
    },
    "files": [
      {
        "sha": "04d354f1b0e28028b83eeecdd2aa9727d079fabd",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 6,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d33dc71cfbfc89e89284338c691d1e104c60665/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d33dc71cfbfc89e89284338c691d1e104c60665/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=9d33dc71cfbfc89e89284338c691d1e104c60665",
        "patch": "@@ -2368,18 +2368,25 @@ void ThreadRPCServer2(void* parg)\n     printf(\"ThreadRPCServer started\\n\");\n \n     strRPCUserColonPass = mapArgs[\"-rpcuser\"] + \":\" + mapArgs[\"-rpcpassword\"];\n-    if (strRPCUserColonPass == \":\")\n+    if (mapArgs[\"-rpcpassword\"] == \"\")\n     {\n+        unsigned char rand_pwd[32];\n+        RAND_bytes(rand_pwd, 32);\n         string strWhatAmI = \"To use bitcoind\";\n         if (mapArgs.count(\"-server\"))\n             strWhatAmI = strprintf(_(\"To use the %s option\"), \"\\\"-server\\\"\");\n         else if (mapArgs.count(\"-daemon\"))\n             strWhatAmI = strprintf(_(\"To use the %s option\"), \"\\\"-daemon\\\"\");\n         PrintConsole(\n-            _(\"Error: %s, you must set rpcpassword=<password>\\nin the configuration file: %s\\n\"\n+            _(\"Error: %s, you must set a rpcpassword in the configuration file:\\n %s\\n\"\n+              \"It is recommended you use the following random password:\\n\"\n+              \"rpcuser=bitcoinrpc\\n\"\n+              \"rpcpassword=%s\\n\"\n+              \"(you do not need to remember this password)\\n\"\n               \"If the file does not exist, create it with owner-readable-only file permissions.\\n\"),\n                 strWhatAmI.c_str(),\n-                GetConfigFile().c_str());\n+                GetConfigFile().c_str(),\n+                EncodeBase58(&rand_pwd[0],&rand_pwd[0]+32).c_str());\n #ifndef QT_GUI\n         CreateThread(Shutdown, NULL);\n #endif\n@@ -2468,9 +2475,11 @@ void ThreadRPCServer2(void* parg)\n         }\n         if (!HTTPAuthorized(mapHeaders))\n         {\n-            // Deter brute-forcing short passwords\n-            if (mapArgs[\"-rpcpassword\"].size() < 15)\n-                Sleep(50);\n+            /* Deter brute-forcing short passwords.\n+               If this results in a DOS the user really\n+               shouldn't have their RPC port exposed.*/\n+            if (mapArgs[\"-rpcpassword\"].size() < 20)\n+                Sleep(250);\n \n             stream << HTTPReply(401, \"\") << std::flush;\n             printf(\"ThreadRPCServer incorrect password attempt\\n\");"
      }
    ]
  }
]