[
  {
    "sha": "9639eadd93d988e9ea10e68ef38b21b33f76dc41",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NjM5ZWFkZDkzZDk4OGU5ZWExMGU2OGVmMzhiMjFiMzNmNzZkYzQx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-28T09:24:23Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-28T11:46:09Z"
      },
      "message": "doc: Add build guide for OpenBSD 5.7\n\nAdd a specific build guide for OpenBSD. This is slightly different than\nbuilding for Linux due to different dependencies, and a compiler issue.",
      "tree": {
        "sha": "9ffadde8e5863cdd1d627552f8eaee2c0b429a3b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9ffadde8e5863cdd1d627552f8eaee2c0b429a3b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9639eadd93d988e9ea10e68ef38b21b33f76dc41",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9639eadd93d988e9ea10e68ef38b21b33f76dc41",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9639eadd93d988e9ea10e68ef38b21b33f76dc41",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9639eadd93d988e9ea10e68ef38b21b33f76dc41/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ad57b310bac44a7e470cf66276421f2bbc61b1f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad57b310bac44a7e470cf66276421f2bbc61b1f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ad57b310bac44a7e470cf66276421f2bbc61b1f0"
      }
    ],
    "stats": {
      "total": 189,
      "additions": 189,
      "deletions": 0
    },
    "files": [
      {
        "sha": "28fa784515038d9469cc3c30fcb88999f2519ae1",
        "filename": "doc/build-openbsd.md",
        "status": "added",
        "additions": 187,
        "deletions": 0,
        "changes": 187,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9639eadd93d988e9ea10e68ef38b21b33f76dc41/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9639eadd93d988e9ea10e68ef38b21b33f76dc41/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=9639eadd93d988e9ea10e68ef38b21b33f76dc41",
        "patch": "@@ -0,0 +1,187 @@\n+OpenBSD build guide\n+======================\n+(updated for OpenBSD 5.7)\n+\n+This guide describes how to build bitcoind and command-line utilities on OpenBSD.\n+\n+As OpenBSD is most common as a server OS, we will not bother with the GUI.\n+\n+Preparation\n+-------------\n+\n+Run the following as root to install the base dependencies for building:\n+\n+```bash\n+pkg_add gmake libtool libevent\n+pkg_add autoconf # (select highest version, e.g. 2.69)\n+pkg_add automake # (select highest version, e.g. 1.15)\n+pkg_add python # (select version 2.7.x, not 3.x)\n+ln -sf /usr/local/bin/python2.7 /usr/local/bin/python2\n+```\n+\n+The default C++ compiler that comes with OpenBSD 5.7 is g++ 4.2. This version is old (from 2007), and is not able to compile the current version of Bitcoin Core. It is possible to patch it up to compile, but with the planned transition to C++11 this is a losing battle. So here we will be installing a newer compiler.\n+\n+GCC\n+-------\n+\n+You can install a newer version of gcc with:\n+\n+```bash\n+pkg_add g++ # (select newest 4.x version, e.g. 4.9.2)\n+```\n+\n+This compiler will not overwrite the system compiler, it will be installed as `egcc` and `eg++` in `/usr/local/bin`.\n+\n+### Building boost\n+\n+Do not use `pkg_add boost`! The boost version installed thus is compiled using the `g++` compiler not `eg++`, which will result in a conflict between `/usr/local/lib/libestdc++.so.XX.0` and `/usr/lib/libstdc++.so.XX.0`, resulting in a test crash:\n+\n+    test_bitcoin:/usr/lib/libstdc++.so.57.0: /usr/local/lib/libestdc++.so.17.0 : WARNING: symbol(_ZN11__gnu_debug17_S_debug_me ssagesE) size mismatch, relink your program\n+    ...\n+    Segmentation fault (core dumped) \n+\n+This makes it necessary to build boost, or at least the parts used by Bitcoin Core, manually:\n+\n+```\n+# Pick some path to install boost to, here we create a directory within the bitcoin directory\n+BITCOIN_ROOT=$(pwd)\n+BOOST_PREFIX=\"${BITCOIN_ROOT}/boost\"\n+mkdir -p $BOOST_PREFIX\n+\n+# Fetch the source and verify that it is not tampered with\n+wget http://heanet.dl.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.bz2\n+echo '727a932322d94287b62abb1bd2d41723eec4356a7728909e38adb65ca25241ca  boost_1_59_0.tar.bz2' | sha256 -c\n+# MUST output: (SHA256) boost_1_59_0.tar.bz2: OK\n+tar -xjf boost_1_59_0.tar.bz2\n+\n+# Boost 1.59 needs two small patches for OpenBSD\n+cd boost_1_59_0\n+# Also here: https://gist.githubusercontent.com/laanwj/bf359281dc319b8ff2e1/raw/92250de8404b97bb99d72ab898f4a8cb35ae1ea3/patch-boost_test_impl_execution_monitor_ipp.patch\n+patch -p0 < /usr/ports/devel/boost/patches/patch-boost_test_impl_execution_monitor_ipp \n+# https://github.com/boostorg/filesystem/commit/90517e459681790a091566dce27ca3acabf9a70c\n+sed 's/__OPEN_BSD__/__OpenBSD__/g' < libs/filesystem/src/path.cpp > libs/filesystem/src/path.cpp.tmp\n+mv libs/filesystem/src/path.cpp.tmp libs/filesystem/src/path.cpp\n+\n+# Build w/ minimum configuration necessary for bitcoin\n+echo 'using gcc : : eg++ : <cxxflags>\"-fvisibility=hidden -fPIC\" <linkflags>\"\" <archiver>\"ar\" <striper>\"strip\"  <ranlib>\"ranlib\" <rc>\"\" : ;' > user-config.jam\n+config_opts=\"runtime-link=shared threadapi=pthread threading=multi link=static variant=release --layout=tagged --build-type=complete --user-config=user-config.jam -sNO_BZIP2=1\"\n+./bootstrap.sh --without-icu --with-libraries=chrono,filesystem,program_options,system,thread,test\n+./b2 -d2 -j2 -d1 ${config_opts} --prefix=${BOOST_PREFIX} stage\n+./b2 -d0 -j4 ${config_opts} --prefix=${BOOST_PREFIX} install\n+```\n+\n+### OpenSSL\n+\n+OpenBSD uses a replacement of OpenSSL: LibreSSL. This can cause compatibility issues, hence `./configure` will bark if you try to compile with this library:\n+\n+    Detected LibreSSL: This is NOT supported, and may break consensus compatibility!\n+\n+To install a 'real' OpenSSL use:\n+\n+    pkg_add openssl\n+   \n+Any program linked against this library can only be used after setting the dynamic library path:\n+    \n+    export LD_LIBRARY_PATH=\"/usr/local/lib/eopenssl\"\n+\n+(otherwise there will be an error about not being able to find `libcrypto.so.1.0`)\n+\n+Alternatively, pass `--with-libressl` to `./configure`, however as the warning says, this is NOT supported, and may cause problems syncing the chain, or the node to fork off the network in unexpected circumstances.\n+\n+### Building BerkeleyDB\n+\n+BerkeleyDB is only necessary for the wallet functionality. To skip this, pass `--disable-wallet` to `./configure`.\n+\n+See \"Berkeley DB\" in [build_unix.md](build_unix.md) for instructions on how to build BerkeleyDB 4.8.\n+You cannot use the BerkeleyDB library from ports, for the same reason as boost above (g++/libstd++ incompatibility).\n+\n+```bash\n+# Pick some path to install BDB to, here we create a directory within the bitcoin directory\n+BITCOIN_ROOT=$(pwd)\n+BDB_PREFIX=\"${BITCOIN_ROOT}/db4\"\n+mkdir -p $BDB_PREFIX\n+\n+# Fetch the source and verify that it is not tampered with\n+wget 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'\n+echo '12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz' | sha256 -c\n+# MUST output: (SHA256) db-4.8.30.NC.tar.gz: OK\n+tar -xzf db-4.8.30.NC.tar.gz\n+\n+# Build the library and install to specified prefix\n+cd db-4.8.30.NC/build_unix/\n+#  Note: Do a static build so that it can be embedded into the executable, instead of having to find a .so at runtime\n+../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX CC=egcc CXX=eg++ CPP=ecpp \n+make install\n+```\n+\n+### Building Bitcoin Core\n+\n+**Important**: use `gmake`, not `make`. The non-GNU `make` will exit with a horrible error.\n+\n+Preparation:\n+```bash\n+export AUTOCONF_VERSION=2.69 # replace this with the autoconf version that you installed\n+export AUTOMAKE_VERSION=1.15 # replace this with the automake version that you installed\n+./autogen.sh\n+```\n+\n+To configure with wallet:\n+```bash\n+./configure --with-gui=no --with-boost=$BOOST_PREFIX \\\n+    CC=egcc CXX=eg++ CPP=ecpp \\\n+    SSL_CFLAGS=\"-I/usr/local/include/eopenssl\" SSL_LIBS=\"-L/usr/local/lib/eopenssl -lssl\" \\\n+    CRYPTO_CFLAGS=\"-I/usr/local/include/eopenssl\" CRYPTO_LIBS=\"-L/usr/local/lib/eopenssl -lcrypto\" \\\n+    LDFLAGS=\"-L${BDB_PREFIX}/lib/\" CPPFLAGS=\"-I${BDB_PREFIX}/include/\"\n+```\n+\n+To configure without wallet:\n+```bash\n+./configure --disable-wallet --with-gui=no --with-boost=$BOOST_PREFIX \\\n+    CC=egcc CXX=eg++ CPP=ecpp \\\n+    SSL_CFLAGS=\"-I/usr/local/include/eopenssl\" SSL_LIBS=\"-L/usr/local/lib/eopenssl -lssl\" \\\n+    CRYPTO_CFLAGS=\"-I/usr/local/include/eopenssl\" CRYPTO_LIBS=\"-L/usr/local/lib/eopenssl -lcrypto\"\n+```\n+\n+Build and run the tests:\n+```bash\n+gmake\n+export LD_LIBRARY_PATH=\"/usr/local/lib/eopenssl\"\n+gmake check\n+```\n+\n+Clang (not currently working)\n+------------------------------\n+\n+Using a newer g++ results in linking the new code to a new libstdc++.\n+Libraries built with the old g++, will still import the old library.\n+This gives conflicts, necessitating rebuild of all C++ dependencies of the application.\n+\n+With clang this can - at least theoretically - be avoided because it uses the\n+base system's libstdc++.\n+\n+```bash\n+pkg_add llvm boost\n+```\n+\n+```bash\n+./configure --disable-wallet --with-gui=no CC=clang CXX=clang++ \\\n+    SSL_CFLAGS=\"-I/usr/local/include/eopenssl\" SSL_LIBS=\"-L/usr/local/lib/eopenssl -lssl\" \\\n+    CRYPTO_CFLAGS=\"-I/usr/local/include/eopenssl\" CRYPTO_LIBS=\"-L/usr/local/lib/eopenssl -lcrypto\"\n+gmake\n+```\n+\n+However, this does not appear to work. Compilation succeeds, but link fails\n+with many 'local symbol discarded' errors:\n+\n+    local symbol 150: discarded in section `.text._ZN10tinyformat6detail14FormatIterator6finishEv' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n+    local symbol 151: discarded in section `.text._ZN10tinyformat6detail14FormatIterator21streamStateFromFormatERSoRjPKcii' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n+    local symbol 152: discarded in section `.text._ZN10tinyformat6detail12convertToIntIA13_cLb0EE6invokeERA13_Kc' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n+\n+According to similar reported errors this is a binutils (ld) issue in 2.15, the\n+version installed by OpenBSD 5.7:\n+\n+- http://openbsd-archive.7691.n7.nabble.com/UPDATE-cppcheck-1-65-td248900.html\n+- https://llvm.org/bugs/show_bug.cgi?id=9758\n+\n+There is no known workaround for this.\n+"
      },
      {
        "sha": "5c5103575ed9a06f844bf130c5d0ebbb7311f355",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9639eadd93d988e9ea10e68ef38b21b33f76dc41/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9639eadd93d988e9ea10e68ef38b21b33f76dc41/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=9639eadd93d988e9ea10e68ef38b21b33f76dc41",
        "patch": "@@ -2,6 +2,8 @@ UNIX BUILD NOTES\n ====================\n Some notes on how to build Bitcoin in Unix. \n \n+(for OpenBSD specific instructions, see [build-openbsd.md](build-openbsd.md))\n+\n Note\n ---------------------\n Always use absolute paths to configure and compile bitcoin and the dependencies,"
      }
    ]
  }
]