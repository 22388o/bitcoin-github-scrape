[
  {
    "sha": "53552475d13cd36be6aa4f08946882a3a9545f21",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MzU1MjQ3NWQxM2NkMzZiZTZhYTRmMDg5NDY4ODJhM2E5NTQ1ZjIx",
    "commit": {
      "author": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-04-28T15:28:38Z"
      },
      "committer": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-05-24T03:45:23Z"
      },
      "message": "Use utf8 encoded string on Windows",
      "tree": {
        "sha": "7657f9f16a1df411e6a09f0a2054f3df21b92d7b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7657f9f16a1df411e6a09f0a2054f3df21b92d7b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/53552475d13cd36be6aa4f08946882a3a9545f21",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53552475d13cd36be6aa4f08946882a3a9545f21",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/53552475d13cd36be6aa4f08946882a3a9545f21",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53552475d13cd36be6aa4f08946882a3a9545f21/comments",
    "author": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7f4db9a7c3549a36e45d70fc3c159367aa1e99a4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f4db9a7c3549a36e45d70fc3c159367aa1e99a4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7f4db9a7c3549a36e45d70fc3c159367aa1e99a4"
      }
    ],
    "stats": {
      "total": 81,
      "additions": 76,
      "deletions": 5
    },
    "files": [
      {
        "sha": "cb15d65a4767bc26b6863749c90bbed97c7d96f0",
        "filename": "depends/packages/boost.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53552475d13cd36be6aa4f08946882a3a9545f21/depends/packages/boost.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53552475d13cd36be6aa4f08946882a3a9545f21/depends/packages/boost.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/boost.mk?ref=53552475d13cd36be6aa4f08946882a3a9545f21",
        "patch": "@@ -3,6 +3,7 @@ $(package)_version=1_64_0\n $(package)_download_path=https://dl.bintray.com/boostorg/release/1.64.0/source/\n $(package)_file_name=$(package)_$($(package)_version).tar.bz2\n $(package)_sha256_hash=7bcc5caace97baa948931d712ea5f37038dbb1c5d89b43ad4def4ed7cb683332\n+$(package)_patches=make-windows-use-utf8-encoding.patch\n \n define $(package)_set_vars\n $(package)_config_opts_release=variant=release\n@@ -25,6 +26,7 @@ $(package)_cxxflags_linux=-fPIC\n endef\n \n define $(package)_preprocess_cmds\n+  patch -p1 < $($(package)_patch_dir)/make-windows-use-utf8-encoding.patch && \\\n   echo \"using $(boost_toolset_$(host_os)) : : $($(package)_cxx) : <cxxflags>\\\"$($(package)_cxxflags) $($(package)_cppflags)\\\" <linkflags>\\\"$($(package)_ldflags)\\\" <archiver>\\\"$(boost_archiver_$(host_os))\\\" <striper>\\\"$(host_STRIP)\\\"  <ranlib>\\\"$(host_RANLIB)\\\" <rc>\\\"$(host_WINDRES)\\\" : ;\" > user-config.jam\n endef\n "
      },
      {
        "sha": "87d2c0a3b936d89dacb1d2f8609db3fa2326dbc5",
        "filename": "depends/patches/boost/make-windows-use-utf8-encoding.patch",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53552475d13cd36be6aa4f08946882a3a9545f21/depends/patches/boost/make-windows-use-utf8-encoding.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53552475d13cd36be6aa4f08946882a3a9545f21/depends/patches/boost/make-windows-use-utf8-encoding.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/boost/make-windows-use-utf8-encoding.patch?ref=53552475d13cd36be6aa4f08946882a3a9545f21",
        "patch": "@@ -0,0 +1,23 @@\n+diff --git a/libs/filesystem/src/windows_file_codecvt.cpp b/libs/filesystem/src/windows_file_codecvt.cpp\n+index 6b8e745..8f19f61 100644\n+--- a/libs/filesystem/src/windows_file_codecvt.cpp\n++++ b/libs/filesystem/src/windows_file_codecvt.cpp\n+@@ -36,7 +36,7 @@\n+     const char* from, const char* from_end, const char*& from_next,\n+     wchar_t* to, wchar_t* to_end, wchar_t*& to_next) const\n+   {\n+-    UINT codepage = AreFileApisANSI() ? CP_ACP : CP_OEMCP;\n++    UINT codepage = CP_UTF8;\n+\n+     int count;\n+     if ((count = ::MultiByteToWideChar(codepage, MB_PRECOMPOSED, from,\n+@@ -56,7 +56,7 @@\n+     const wchar_t* from, const wchar_t* from_end, const wchar_t*  & from_next,\n+     char* to, char* to_end, char* & to_next) const\n+   {\n+-    UINT codepage = AreFileApisANSI() ? CP_ACP : CP_OEMCP;\n++    UINT codepage = CP_UTF8;\n+\n+     int count;\n+     if ((count = ::WideCharToMultiByte(codepage, WC_NO_BEST_FIT_CHARS, from,\n+"
      },
      {
        "sha": "ee2bfab754a8fbef3e3a292d3e85e338e37fbded",
        "filename": "src/fs.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53552475d13cd36be6aa4f08946882a3a9545f21/src/fs.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53552475d13cd36be6aa4f08946882a3a9545f21/src/fs.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/fs.cpp?ref=53552475d13cd36be6aa4f08946882a3a9545f21",
        "patch": "@@ -1,15 +1,16 @@\n #include <fs.h>\n+#include <utilstrencodings.cpp>\n \n namespace fsbridge {\n \n FILE *fopen(const fs::path& p, const char *mode)\n {\n-    return ::fopen(p.string().c_str(), mode);\n+    return ::fopen(Utf8ToLocal(p.string()).c_str(), mode);\n }\n \n FILE *freopen(const fs::path& p, const char *mode, FILE *stream)\n {\n-    return ::freopen(p.string().c_str(), mode, stream);\n+    return ::freopen(Utf8ToLocal(p.string()).c_str(), mode, stream);\n }\n \n } // fsbridge"
      },
      {
        "sha": "e45b048f1ea0b086a7658f2f007da86897f34ca7",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53552475d13cd36be6aa4f08946882a3a9545f21/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53552475d13cd36be6aa4f08946882a3a9545f21/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=53552475d13cd36be6aa4f08946882a3a9545f21",
        "patch": "@@ -161,7 +161,7 @@ bool LockDirectory(const fs::path& directory, const std::string lockfile_name, b\n     if (file) fclose(file);\n \n     try {\n-        auto lock = MakeUnique<boost::interprocess::file_lock>(pathLockFile.string().c_str());\n+        auto lock = MakeUnique<boost::interprocess::file_lock>(Utf8ToLocal(pathLockFile.string()).c_str());\n         if (!lock->try_lock()) {\n             return false;\n         }\n@@ -419,6 +419,7 @@ void ArgsManager::ParseParameters(int argc, const char* const argv[])\n \n     for (int i = 1; i < argc; i++) {\n         std::string key(argv[i]);\n+        key = LocalToUtf8(key);\n         std::string val;\n         size_t is_index = key.find('=');\n         if (is_index != std::string::npos) {\n@@ -861,8 +862,8 @@ void CreatePidFile(const fs::path &path, pid_t pid)\n bool RenameOver(fs::path src, fs::path dest)\n {\n #ifdef WIN32\n-    return MoveFileExA(src.string().c_str(), dest.string().c_str(),\n-                       MOVEFILE_REPLACE_EXISTING) != 0;\n+    return MoveFileExA(Utf8ToLocal(src.string()).c_str(), Utf8ToLocal(dest.string()).c_str(),\n+               MOVEFILE_REPLACE_EXISTING) != 0;\n #else\n     int rc = std::rename(src.string().c_str(), dest.string().c_str());\n     return (rc == 0);"
      },
      {
        "sha": "4956592dd7b41084bc10e8cf75a81e297230bd86",
        "filename": "src/utilstrencodings.cpp",
        "status": "modified",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53552475d13cd36be6aa4f08946882a3a9545f21/src/utilstrencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53552475d13cd36be6aa4f08946882a3a9545f21/src/utilstrencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utilstrencodings.cpp?ref=53552475d13cd36be6aa4f08946882a3a9545f21",
        "patch": "@@ -12,6 +12,10 @@\n #include <errno.h>\n #include <limits>\n \n+#ifdef WIN32\n+#include <stringapiset.h>\n+#endif\n+\n static const std::string CHARS_ALPHA_NUM = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n \n static const std::string SAFE_CHARS[] =\n@@ -544,3 +548,36 @@ bool ParseFixedPoint(const std::string &val, int decimals, int64_t *amount_out)\n     return true;\n }\n \n+#ifdef WIN32\n+std::string LocalToUtf8(const std::string& local_string)\n+{\n+    if (local_string.size() == 0) return local_string;\n+    int size = MultiByteToWideChar(CP_ACP, 0, local_string.c_str(), local_string.size(), nullptr, 0);\n+    assert(size);\n+    std::wstring wide_string(size, L'\\0');\n+    size = MultiByteToWideChar(CP_ACP, 0, local_string.c_str(), local_string.size(), &wide_string[0], size);\n+    assert(size == wide_string.size());\n+    size = WideCharToMultiByte(CP_UTF8, 0, wide_string.c_str(), wide_string.size(), nullptr, 0, nullptr, nullptr);\n+    assert(size);\n+    std::string utf8_string(size, '\\0');\n+    size = WideCharToMultiByte(CP_UTF8, 0, wide_string.c_str(), wide_string.size(), &utf8_string[0], size, nullptr, nullptr);\n+    assert(size == utf8_string.size());\n+    return utf8_string;\n+}\n+\n+std::string Utf8ToLocal(const std::string& utf8_string)\n+{\n+    if (utf8_string.size() == 0) return utf8_string;\n+    int size = MultiByteToWideChar(CP_UTF8, 0, utf8_string.c_str(), utf8_string.size(), nullptr, 0);\n+    assert(size);\n+    std::wstring wide_string(size, L'\\0');\n+    size = MultiByteToWideChar(CP_UTF8, 0, utf8_string.c_str(), utf8_string.size(), &wide_string[0], size);\n+    assert(size == wide_string.size());\n+    size = WideCharToMultiByte(CP_ACP, 0, wide_string.c_str(), wide_string.size(), nullptr, 0, nullptr, nullptr);\n+    assert(size);\n+    std::string local_string(size, '\\0');\n+    size = WideCharToMultiByte(CP_ACP, 0, wide_string.c_str(), wide_string.size(), &local_string[0], size, nullptr, nullptr);\n+    assert(size == local_string.size());\n+    return local_string;\n+}\n+#endif"
      },
      {
        "sha": "e0630ba16b59f281b461116517bd73c02a1a11e8",
        "filename": "src/utilstrencodings.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53552475d13cd36be6aa4f08946882a3a9545f21/src/utilstrencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53552475d13cd36be6aa4f08946882a3a9545f21/src/utilstrencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utilstrencodings.h?ref=53552475d13cd36be6aa4f08946882a3a9545f21",
        "patch": "@@ -173,4 +173,11 @@ bool ConvertBits(const O& outfn, I it, I end) {\n     return true;\n }\n \n+#ifdef WIN32\n+std::string LocalToUtf8(const std::string& local_string);\n+std::string Utf8ToLocal(const std::string& utf8_string);\n+#else\n+#define LocalToUtf8(x) (x)\n+#define Utf8ToLocal(x) (x)\n+#endif\n #endif // BITCOIN_UTILSTRENCODINGS_H"
      }
    ]
  },
  {
    "sha": "7f9dfdc544e3c22b73548aff025e6bda8dacbaa8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZjlkZmRjNTQ0ZTNjMjJiNzM1NDhhZmYwMjVlNmJkYThkYWNiYWE4",
    "commit": {
      "author": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-04-28T19:27:40Z"
      },
      "committer": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-05-24T03:45:23Z"
      },
      "message": "Change to local encoding filename on Berkeley DB",
      "tree": {
        "sha": "f609d8eab524a18e974d354137e6609473a094f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f609d8eab524a18e974d354137e6609473a094f4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7f9dfdc544e3c22b73548aff025e6bda8dacbaa8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f9dfdc544e3c22b73548aff025e6bda8dacbaa8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7f9dfdc544e3c22b73548aff025e6bda8dacbaa8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f9dfdc544e3c22b73548aff025e6bda8dacbaa8/comments",
    "author": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "53552475d13cd36be6aa4f08946882a3a9545f21",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53552475d13cd36be6aa4f08946882a3a9545f21",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/53552475d13cd36be6aa4f08946882a3a9545f21"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 15,
      "deletions": 15
    },
    "files": [
      {
        "sha": "051059c93d7ef31d1234d7b84e994ac9f7b017e0",
        "filename": "src/wallet/db.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 15,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f9dfdc544e3c22b73548aff025e6bda8dacbaa8/src/wallet/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f9dfdc544e3c22b73548aff025e6bda8dacbaa8/src/wallet/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.cpp?ref=7f9dfdc544e3c22b73548aff025e6bda8dacbaa8",
        "patch": "@@ -104,7 +104,7 @@ void BerkeleyEnvironment::Close()\n     if (ret != 0)\n         LogPrintf(\"BerkeleyEnvironment::Close: Error %d closing database environment: %s\\n\", ret, DbEnv::strerror(ret));\n     if (!fMockDb)\n-        DbEnv((u_int32_t)0).remove(strPath.c_str(), 0);\n+        DbEnv((u_int32_t)0).remove(Utf8ToLocal(strPath).c_str(), 0);\n }\n \n void BerkeleyEnvironment::Reset()\n@@ -147,7 +147,7 @@ bool BerkeleyEnvironment::Open(bool retry)\n     if (gArgs.GetBoolArg(\"-privdb\", DEFAULT_WALLET_PRIVDB))\n         nEnvFlags |= DB_PRIVATE;\n \n-    dbenv->set_lg_dir(pathLogDir.string().c_str());\n+    dbenv->set_lg_dir(Utf8ToLocal(pathLogDir.string()).c_str());\n     dbenv->set_cachesize(0, 0x100000, 1); // 1 MiB should be enough for just the wallet\n     dbenv->set_lg_bsize(0x10000);\n     dbenv->set_lg_max(1048576);\n@@ -157,7 +157,7 @@ bool BerkeleyEnvironment::Open(bool retry)\n     dbenv->set_flags(DB_AUTO_COMMIT, 1);\n     dbenv->set_flags(DB_TXN_WRITE_NOSYNC, 1);\n     dbenv->log_set_config(DB_LOG_AUTO_REMOVE, 1);\n-    int ret = dbenv->open(strPath.c_str(),\n+    int ret = dbenv->open(Utf8ToLocal(strPath).c_str(),\n                          DB_CREATE |\n                              DB_INIT_LOCK |\n                              DB_INIT_LOG |\n@@ -236,7 +236,7 @@ BerkeleyEnvironment::VerifyResult BerkeleyEnvironment::Verify(const std::string&\n     assert(mapFileUseCount.count(strFile) == 0);\n \n     Db db(dbenv.get(), 0);\n-    int result = db.verify(strFile.c_str(), nullptr, nullptr, 0);\n+    int result = db.verify(Utf8ToLocal(strFile).c_str(), nullptr, nullptr, 0);\n     if (result == 0)\n         return VerifyResult::VERIFY_OK;\n     else if (recoverFunc == nullptr)\n@@ -262,8 +262,8 @@ bool BerkeleyBatch::Recover(const fs::path& file_path, void *callbackDataIn, boo\n     int64_t now = GetTime();\n     newFilename = strprintf(\"%s.%d.bak\", filename, now);\n \n-    int result = env->dbenv->dbrename(nullptr, filename.c_str(), nullptr,\n-                                       newFilename.c_str(), DB_AUTO_COMMIT);\n+    int result = env->dbenv->dbrename(nullptr, Utf8ToLocal(filename).c_str(), nullptr,\n+                                       Utf8ToLocal(newFilename).c_str(), DB_AUTO_COMMIT);\n     if (result == 0)\n         LogPrintf(\"Renamed %s to %s\\n\", filename, newFilename);\n     else\n@@ -283,7 +283,7 @@ bool BerkeleyBatch::Recover(const fs::path& file_path, void *callbackDataIn, boo\n \n     std::unique_ptr<Db> pdbCopy = MakeUnique<Db>(env->dbenv.get(), 0);\n     int ret = pdbCopy->open(nullptr,               // Txn pointer\n-                            filename.c_str(),   // Filename\n+                            Utf8ToLocal(filename).c_str(),   // Filename\n                             \"main\",             // Logical db name\n                             DB_BTREE,           // Database type\n                             DB_CREATE,          // Flags\n@@ -385,7 +385,7 @@ bool BerkeleyEnvironment::Salvage(const std::string& strFile, bool fAggressive,\n     std::stringstream strDump;\n \n     Db db(dbenv.get(), 0);\n-    int result = db.verify(strFile.c_str(), nullptr, &strDump, flags);\n+    int result = db.verify(Utf8ToLocal(strFile).c_str(), nullptr, &strDump, flags);\n     if (result == DB_VERIFY_BAD) {\n         LogPrintf(\"BerkeleyEnvironment::Salvage: Database salvage found errors, all data may not be recoverable.\\n\");\n         if (!fAggressive) {\n@@ -439,7 +439,7 @@ void BerkeleyEnvironment::CheckpointLSN(const std::string& strFile)\n     dbenv->txn_checkpoint(0, 0, 0);\n     if (fMockDb)\n         return;\n-    dbenv->lsn_reset(strFile.c_str(), 0);\n+    dbenv->lsn_reset(Utf8ToLocal(strFile).c_str(), 0);\n }\n \n \n@@ -478,8 +478,8 @@ BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase& database, const char* pszMode, bo\n             }\n \n             ret = pdb_temp->open(nullptr,                             // Txn pointer\n-                            fMockDb ? nullptr : strFilename.c_str(),  // Filename\n-                            fMockDb ? strFilename.c_str() : \"main\",   // Logical db name\n+                            fMockDb ? nullptr : Utf8ToLocal(strFilename).c_str(),  // Filename\n+                            fMockDb ? Utf8ToLocal(strFilename).c_str() : \"main\",   // Logical db name\n                             DB_BTREE,                                 // Database type\n                             nFlags,                                   // Flags\n                             0);\n@@ -596,7 +596,7 @@ bool BerkeleyBatch::Rewrite(BerkeleyDatabase& database, const char* pszSkip)\n                     std::unique_ptr<Db> pdbCopy = MakeUnique<Db>(env->dbenv.get(), 0);\n \n                     int ret = pdbCopy->open(nullptr,               // Txn pointer\n-                                            strFileRes.c_str(), // Filename\n+                                            Utf8ToLocal(strFileRes).c_str(), // Filename\n                                             \"main\",             // Logical db name\n                                             DB_BTREE,           // Database type\n                                             DB_CREATE,          // Flags\n@@ -645,10 +645,10 @@ bool BerkeleyBatch::Rewrite(BerkeleyDatabase& database, const char* pszSkip)\n                 }\n                 if (fSuccess) {\n                     Db dbA(env->dbenv.get(), 0);\n-                    if (dbA.remove(strFile.c_str(), nullptr, 0))\n+                    if (dbA.remove(Utf8ToLocal(strFile).c_str(), nullptr, 0))\n                         fSuccess = false;\n                     Db dbB(env->dbenv.get(), 0);\n-                    if (dbB.rename(strFileRes.c_str(), nullptr, strFile.c_str(), 0))\n+                    if (dbB.rename(Utf8ToLocal(strFileRes).c_str(), nullptr, Utf8ToLocal(strFile).c_str(), 0))\n                         fSuccess = false;\n                 }\n                 if (!fSuccess)\n@@ -682,7 +682,7 @@ void BerkeleyEnvironment::Flush(bool fShutdown)\n                 dbenv->txn_checkpoint(0, 0, 0);\n                 LogPrint(BCLog::DB, \"BerkeleyEnvironment::Flush: %s detach\\n\", strFile);\n                 if (!fMockDb)\n-                    dbenv->lsn_reset(strFile.c_str(), 0);\n+                    dbenv->lsn_reset(Utf8ToLocal(strFile).c_str(), 0);\n                 LogPrint(BCLog::DB, \"BerkeleyEnvironment::Flush: %s closed\\n\", strFile);\n                 mapFileUseCount.erase(mi++);\n             } else"
      }
    ]
  },
  {
    "sha": "13a57b27c6aaeacb49f4b4ab4e6b002909551f7c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxM2E1N2IyN2M2YWFlYWNiNDlmNGI0YWI0ZTZiMDAyOTA5NTUxZjdj",
    "commit": {
      "author": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-04-28T20:25:21Z"
      },
      "committer": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-05-24T03:45:23Z"
      },
      "message": "Change to local encoding filename on Level DB",
      "tree": {
        "sha": "29714e9d813637df215c6f2b66df035144cb6b15",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/29714e9d813637df215c6f2b66df035144cb6b15"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/13a57b27c6aaeacb49f4b4ab4e6b002909551f7c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13a57b27c6aaeacb49f4b4ab4e6b002909551f7c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/13a57b27c6aaeacb49f4b4ab4e6b002909551f7c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13a57b27c6aaeacb49f4b4ab4e6b002909551f7c/comments",
    "author": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7f9dfdc544e3c22b73548aff025e6bda8dacbaa8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f9dfdc544e3c22b73548aff025e6bda8dacbaa8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7f9dfdc544e3c22b73548aff025e6bda8dacbaa8"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "680c633d7c4993c746bf511bd99331fa1cb05025",
        "filename": "src/dbwrapper.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13a57b27c6aaeacb49f4b4ab4e6b002909551f7c/src/dbwrapper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13a57b27c6aaeacb49f4b4ab4e6b002909551f7c/src/dbwrapper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.cpp?ref=13a57b27c6aaeacb49f4b4ab4e6b002909551f7c",
        "patch": "@@ -130,13 +130,13 @@ CDBWrapper::CDBWrapper(const fs::path& path, size_t nCacheSize, bool fMemory, bo\n     } else {\n         if (fWipe) {\n             LogPrintf(\"Wiping LevelDB in %s\\n\", path.string());\n-            leveldb::Status result = leveldb::DestroyDB(path.string(), options);\n+            leveldb::Status result = leveldb::DestroyDB(Utf8ToLocal(path.string()), options);\n             dbwrapper_private::HandleError(result);\n         }\n         TryCreateDirectories(path);\n         LogPrintf(\"Opening LevelDB in %s\\n\", path.string());\n     }\n-    leveldb::Status status = leveldb::DB::Open(options, path.string(), &pdb);\n+    leveldb::Status status = leveldb::DB::Open(options, Utf8ToLocal(path.string()), &pdb);\n     dbwrapper_private::HandleError(status);\n     LogPrintf(\"Opened LevelDB successfully\\n\");\n "
      }
    ]
  },
  {
    "sha": "b85f1b55dcf9fcb2ea922fe4c37dedbb3020ae31",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiODVmMWI1NWRjZjlmY2IyZWE5MjJmZTRjMzdkZWRiYjMwMjBhZTMx",
    "commit": {
      "author": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-05-01T22:37:02Z"
      },
      "committer": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-05-24T03:45:23Z"
      },
      "message": "Add ifstream/ofstream to fsbridge",
      "tree": {
        "sha": "33a37332a68b92b7cdae5a9b5c3fd4b7e7397dd2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/33a37332a68b92b7cdae5a9b5c3fd4b7e7397dd2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b85f1b55dcf9fcb2ea922fe4c37dedbb3020ae31",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b85f1b55dcf9fcb2ea922fe4c37dedbb3020ae31",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b85f1b55dcf9fcb2ea922fe4c37dedbb3020ae31",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b85f1b55dcf9fcb2ea922fe4c37dedbb3020ae31/comments",
    "author": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "13a57b27c6aaeacb49f4b4ab4e6b002909551f7c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13a57b27c6aaeacb49f4b4ab4e6b002909551f7c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/13a57b27c6aaeacb49f4b4ab4e6b002909551f7c"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 54,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c4c264f14cd133b150dac2549c4bbf4621ee9beb",
        "filename": "src/fs.h",
        "status": "modified",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b85f1b55dcf9fcb2ea922fe4c37dedbb3020ae31/src/fs.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b85f1b55dcf9fcb2ea922fe4c37dedbb3020ae31/src/fs.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/fs.h?ref=b85f1b55dcf9fcb2ea922fe4c37dedbb3020ae31",
        "patch": "@@ -12,13 +12,67 @@\n #include <boost/filesystem/fstream.hpp>\n #include <boost/filesystem/detail/utf8_codecvt_facet.hpp>\n \n+#include <utilstrencodings.h>\n+\n /** Filesystem operations and types */\n namespace fs = boost::filesystem;\n \n /** Bridge operations to C stdio */\n namespace fsbridge {\n     FILE *fopen(const fs::path& p, const char *mode);\n     FILE *freopen(const fs::path& p, const char *mode, FILE *stream);\n+\n+    class ifstream : public std::ifstream\n+    {\n+    public:\n+        ifstream() {}\n+\n+        virtual ~ifstream() {}\n+\n+        explicit ifstream(const fs::path& p) : std::ifstream(Utf8ToLocal(p.string())) {}\n+\n+        ifstream(const fs::path& p, std::ios::openmode mode) : std::ifstream(Utf8ToLocal(p.string()), mode) {}\n+\n+        void open(const fs::path& p)\n+        {\n+            std::ifstream::open(Utf8ToLocal(p.string()));\n+        }\n+\n+        void open(const fs::path& p, std::ios::openmode mode)\n+        {\n+            std::ifstream::open(Utf8ToLocal(p.string()), mode);\n+        }\n+\n+    private:\n+        ifstream(const ifstream&) = delete;\n+        const ifstream& operator=(const ifstream&) = delete;\n+    };\n+\n+    class ofstream : public std::ofstream\n+    {\n+    public:\n+        ofstream() {}\n+\n+        virtual ~ofstream() {}\n+\n+        explicit ofstream(const fs::path& p) : std::ofstream(Utf8ToLocal(p.string())) {}\n+\n+        ofstream(const fs::path& p, std::ios::openmode mode) : std::ofstream(Utf8ToLocal(p.string()), mode) {}\n+\n+        void open(const fs::path& p)\n+        {\n+            std::ofstream::open(Utf8ToLocal(p.string()));\n+        }\n+\n+        void open(const fs::path& p, std::ios::openmode mode)\n+        {\n+            std::ofstream::open(Utf8ToLocal(p.string()), mode);\n+        }\n+\n+    private:\n+        ofstream(const ofstream&) = delete;\n+        const ofstream& operator=(const ofstream&) = delete;\n+    };\n };\n \n #endif // BITCOIN_FS_H"
      }
    ]
  },
  {
    "sha": "a7e55100f339295f48a4c5f7750f1abf375e2864",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphN2U1NTEwMGYzMzkyOTVmNDhhNGM1Zjc3NTBmMWFiZjM3NWUyODY0",
    "commit": {
      "author": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-05-01T22:47:28Z"
      },
      "committer": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-05-24T03:45:23Z"
      },
      "message": "Move fs/std::i/ofstream to fsbridge::i/ofstream",
      "tree": {
        "sha": "80ef668ea26578c144ae0bd7956d36a3343381c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/80ef668ea26578c144ae0bd7956d36a3343381c0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a7e55100f339295f48a4c5f7750f1abf375e2864",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7e55100f339295f48a4c5f7750f1abf375e2864",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a7e55100f339295f48a4c5f7750f1abf375e2864",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7e55100f339295f48a4c5f7750f1abf375e2864/comments",
    "author": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b85f1b55dcf9fcb2ea922fe4c37dedbb3020ae31",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b85f1b55dcf9fcb2ea922fe4c37dedbb3020ae31",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b85f1b55dcf9fcb2ea922fe4c37dedbb3020ae31"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 17,
      "deletions": 16
    },
    "files": [
      {
        "sha": "c133c19879895c4456f17316fe1108d20214e4d3",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7e55100f339295f48a4c5f7750f1abf375e2864/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7e55100f339295f48a4c5f7750f1abf375e2864/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=a7e55100f339295f48a4c5f7750f1abf375e2864",
        "patch": "@@ -406,8 +406,8 @@ bool openBitcoinConf()\n     boost::filesystem::path pathConfig = GetConfigFile(gArgs.GetArg(\"-conf\", BITCOIN_CONF_FILENAME));\n \n     /* Create the file */\n-    boost::filesystem::ofstream configFile(pathConfig, std::ios_base::app);\n-    \n+    fsbridge::ofstream configFile(pathConfig, std::ios_base::app);\n+\n     if (!configFile.good())\n         return false;\n     \n@@ -705,7 +705,7 @@ fs::path static GetAutostartFilePath()\n \n bool GetStartOnSystemStartup()\n {\n-    fs::ifstream optionFile(GetAutostartFilePath());\n+    fsbridge::ifstream optionFile(GetAutostartFilePath());\n     if (!optionFile.good())\n         return false;\n     // Scan through file for \"Hidden=true\":\n@@ -736,7 +736,7 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n \n         fs::create_directories(GetAutostartDir());\n \n-        fs::ofstream optionFile(GetAutostartFilePath(), std::ios_base::out|std::ios_base::trunc);\n+        fsbridge::ofstream optionFile(GetAutostartFilePath(), std::ios_base::out | std::ios_base::trunc);\n         if (!optionFile.good())\n             return false;\n         std::string chain = gArgs.GetChainName();"
      },
      {
        "sha": "c1256dd1c3c4987daccb69ed8b5e17329e00664d",
        "filename": "src/rpc/protocol.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7e55100f339295f48a4c5f7750f1abf375e2864/src/rpc/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7e55100f339295f48a4c5f7750f1abf375e2864/src/rpc/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/protocol.cpp?ref=a7e55100f339295f48a4c5f7750f1abf375e2864",
        "patch": "@@ -5,15 +5,14 @@\n \n #include <rpc/protocol.h>\n \n+#include <fs.h>\n #include <random.h>\n #include <tinyformat.h>\n #include <util.h>\n #include <utilstrencodings.h>\n #include <utiltime.h>\n #include <version.h>\n \n-#include <fstream>\n-\n /**\n  * JSON-RPC protocol.  Bitcoin speaks version 1.0 for maximum compatibility,\n  * but uses JSON-RPC 1.1/2.0 standards for parts of the 1.0 standard that were\n@@ -85,9 +84,9 @@ bool GenerateAuthCookie(std::string *cookie_out)\n     /** the umask determines what permissions are used to create this file -\n      * these are set to 077 in init.cpp unless overridden with -sysperms.\n      */\n-    std::ofstream file;\n+    fsbridge::ofstream file;\n     fs::path filepath_tmp = GetAuthCookieFile(true);\n-    file.open(filepath_tmp.string().c_str());\n+    file.open(filepath_tmp);\n     if (!file.is_open()) {\n         LogPrintf(\"Unable to open cookie authentication file %s for writing\\n\", filepath_tmp.string());\n         return false;\n@@ -109,10 +108,10 @@ bool GenerateAuthCookie(std::string *cookie_out)\n \n bool GetAuthCookie(std::string *cookie_out)\n {\n-    std::ifstream file;\n+    fsbridge::ifstream file;\n     std::string cookie;\n     fs::path filepath = GetAuthCookieFile();\n-    file.open(filepath.string().c_str());\n+    file.open(filepath);\n     if (!file.is_open())\n         return false;\n     std::getline(file, cookie);"
      },
      {
        "sha": "21fdf4ad278a8ac0ed1d396d5b73645cbae6120a",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7e55100f339295f48a4c5f7750f1abf375e2864/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7e55100f339295f48a4c5f7750f1abf375e2864/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=a7e55100f339295f48a4c5f7750f1abf375e2864",
        "patch": "@@ -775,7 +775,7 @@ void ArgsManager::ReadConfigFiles()\n     }\n \n     const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n-    fs::ifstream stream(GetConfigFile(confPath));\n+    fsbridge::ifstream stream(GetConfigFile(confPath));\n \n     // ok to not have a config file\n     if (stream.good()) {\n@@ -800,7 +800,7 @@ void ArgsManager::ReadConfigFiles()\n             }\n \n             for (const std::string& to_include : includeconf) {\n-                fs::ifstream include_config(GetConfigFile(to_include));\n+                fsbridge::ifstream include_config(GetConfigFile(to_include));\n                 if (include_config.good()) {\n                     ReadConfigStream(include_config);\n                     LogPrintf(\"Included configuration file %s\\n\", to_include.c_str());"
      },
      {
        "sha": "4ac309dda63597e162922594da8fa1ba86838b27",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7e55100f339295f48a4c5f7750f1abf375e2864/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7e55100f339295f48a4c5f7750f1abf375e2864/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=a7e55100f339295f48a4c5f7750f1abf375e2864",
        "patch": "@@ -22,6 +22,7 @@\n \n #include <boost/algorithm/string.hpp>\n #include <boost/date_time/posix_time/posix_time.hpp>\n+#include <boost/filesystem/path.hpp>\n \n #include <univalue.h>\n \n@@ -541,8 +542,9 @@ UniValue importwallet(const JSONRPCRequest& request)\n \n         EnsureWalletIsUnlocked(pwallet);\n \n-        std::ifstream file;\n-        file.open(request.params[0].get_str().c_str(), std::ios::in | std::ios::ate);\n+        fsbridge::ifstream file;\n+        fs::path path = request.params[0].get_str();\n+        file.open(path, std::ios::in | std::ios::ate);\n         if (!file.is_open()) {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot open wallet dump file\");\n         }\n@@ -722,8 +724,8 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_INVALID_PARAMETER, filepath.string() + \" already exists. If you are sure this is what you want, move it out of the way first\");\n     }\n \n-    std::ofstream file;\n-    file.open(filepath.string().c_str());\n+    fsbridge::ofstream file;\n+    file.open(filepath);\n     if (!file.is_open())\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot open wallet dump file\");\n "
      }
    ]
  },
  {
    "sha": "3342746618717d04c63f35a7a12f355ef1658c46",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMzQyNzQ2NjE4NzE3ZDA0YzYzZjM1YTdhMTJmMzU1ZWYxNjU4YzQ2",
    "commit": {
      "author": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-05-02T20:51:17Z"
      },
      "committer": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-05-24T03:45:23Z"
      },
      "message": "Use utf8 at StartupShortcutPath",
      "tree": {
        "sha": "2395ab341cf1955134e783c4c32b8727c79f6eb5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2395ab341cf1955134e783c4c32b8727c79f6eb5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3342746618717d04c63f35a7a12f355ef1658c46",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3342746618717d04c63f35a7a12f355ef1658c46",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3342746618717d04c63f35a7a12f355ef1658c46",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3342746618717d04c63f35a7a12f355ef1658c46/comments",
    "author": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a7e55100f339295f48a4c5f7750f1abf375e2864",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7e55100f339295f48a4c5f7750f1abf375e2864",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a7e55100f339295f48a4c5f7750f1abf375e2864"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 3,
      "deletions": 6
    },
    "files": [
      {
        "sha": "3070ae5c64730e80f935336757268cc290df5314",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3342746618717d04c63f35a7a12f355ef1658c46/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3342746618717d04c63f35a7a12f355ef1658c46/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=3342746618717d04c63f35a7a12f355ef1658c46",
        "patch": "@@ -664,11 +664,8 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n             hres = psl->QueryInterface(IID_IPersistFile, reinterpret_cast<void**>(&ppf));\n             if (SUCCEEDED(hres))\n             {\n-                WCHAR pwsz[MAX_PATH];\n-                // Ensure that the string is ANSI.\n-                MultiByteToWideChar(CP_ACP, 0, StartupShortcutPath().string().c_str(), -1, pwsz, MAX_PATH);\n                 // Save the link by calling IPersistFile::Save.\n-                hres = ppf->Save(pwsz, TRUE);\n+                hres = ppf->Save(StartupShortcutPath().wstring().c_str(), TRUE);\n                 ppf->Release();\n                 psl->Release();\n                 CoUninitialize();"
      },
      {
        "sha": "6cbffb33eb780c263bbe808d54c2a5883eb513b5",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3342746618717d04c63f35a7a12f355ef1658c46/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3342746618717d04c63f35a7a12f355ef1658c46/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=3342746618717d04c63f35a7a12f355ef1658c46",
        "patch": "@@ -1004,9 +1004,9 @@ void AllocateFileRange(FILE *file, unsigned int offset, unsigned int length) {\n #ifdef WIN32\n fs::path GetSpecialFolderPath(int nFolder, bool fCreate)\n {\n-    char pszPath[MAX_PATH] = \"\";\n+    wchar_t pszPath[MAX_PATH] = L\"\";\n \n-    if(SHGetSpecialFolderPathA(nullptr, pszPath, nFolder, fCreate))\n+    if(SHGetSpecialFolderPathW(nullptr, pszPath, nFolder, fCreate))\n     {\n         return fs::path(pszPath);\n     }"
      }
    ]
  },
  {
    "sha": "c1f5cd3906e8c5810627721b1979c88a46cedccd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMWY1Y2QzOTA2ZThjNTgxMDYyNzcyMWIxOTc5Yzg4YTQ2Y2VkY2Nk",
    "commit": {
      "author": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-05-03T17:34:06Z"
      },
      "committer": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-05-24T03:45:23Z"
      },
      "message": "Parse command line argv utf8",
      "tree": {
        "sha": "0d2465a2a9708f9357e7dd1e78dc045164cab307",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0d2465a2a9708f9357e7dd1e78dc045164cab307"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c1f5cd3906e8c5810627721b1979c88a46cedccd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1f5cd3906e8c5810627721b1979c88a46cedccd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c1f5cd3906e8c5810627721b1979c88a46cedccd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1f5cd3906e8c5810627721b1979c88a46cedccd/comments",
    "author": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3342746618717d04c63f35a7a12f355ef1658c46",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3342746618717d04c63f35a7a12f355ef1658c46",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3342746618717d04c63f35a7a12f355ef1658c46"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6923c7c88bde8c4b964e11c3ec8f6e85090cfad2",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1f5cd3906e8c5810627721b1979c88a46cedccd/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1f5cd3906e8c5810627721b1979c88a46cedccd/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=c1f5cd3906e8c5810627721b1979c88a46cedccd",
        "patch": "@@ -403,6 +403,11 @@ static int CommandLineRPC(int argc, char *argv[])\n             gArgs.ForceSetArg(\"-rpcpassword\", rpcPass);\n         }\n         std::vector<std::string> args = std::vector<std::string>(&argv[1], &argv[argc]);\n+#ifdef WIN32\n+        for (auto it = args.begin(); it != args.end(); it++) {\n+            *it = LocalToUtf8(*it);\n+        }\n+#endif\n         if (gArgs.GetBoolArg(\"-stdin\", false)) {\n             // Read one arg per line from stdin and append\n             std::string line;"
      }
    ]
  }
]