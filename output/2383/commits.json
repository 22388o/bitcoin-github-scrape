[
  {
    "sha": "8e84aad6026cfa5095f48c94cd578d670cada09a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZTg0YWFkNjAyNmNmYTUwOTVmNDhjOTRjZDU3OGQ2NzBjYWRhMDlh",
    "commit": {
      "author": {
        "name": "Jon Lund Steffensen",
        "email": "jonlst@gmail.com",
        "date": "2013-03-18T14:45:18Z"
      },
      "committer": {
        "name": "Jon Lund Steffensen",
        "email": "jonlst@gmail.com",
        "date": "2013-03-18T23:25:16Z"
      },
      "message": "Allow adjustable limit on the minimum transaction value.\n\nAccept only transactions for which all output values are above a minimum amount (dust limit). The mimimum defaults to zero (everything above zero is accepted).\nAdded QT interface options pane called \"Advanced\" to set this value.",
      "tree": {
        "sha": "b22c5e59bcc232346ebc17ea818b4bc86d7c642f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b22c5e59bcc232346ebc17ea818b4bc86d7c642f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8e84aad6026cfa5095f48c94cd578d670cada09a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e84aad6026cfa5095f48c94cd578d670cada09a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8e84aad6026cfa5095f48c94cd578d670cada09a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e84aad6026cfa5095f48c94cd578d670cada09a/comments",
    "author": {
      "login": "jonls",
      "id": 420734,
      "node_id": "MDQ6VXNlcjQyMDczNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/420734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonls",
      "html_url": "https://github.com/jonls",
      "followers_url": "https://api.github.com/users/jonls/followers",
      "following_url": "https://api.github.com/users/jonls/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonls/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonls/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonls/subscriptions",
      "organizations_url": "https://api.github.com/users/jonls/orgs",
      "repos_url": "https://api.github.com/users/jonls/repos",
      "events_url": "https://api.github.com/users/jonls/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonls/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonls",
      "id": 420734,
      "node_id": "MDQ6VXNlcjQyMDczNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/420734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonls",
      "html_url": "https://github.com/jonls",
      "followers_url": "https://api.github.com/users/jonls/followers",
      "following_url": "https://api.github.com/users/jonls/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonls/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonls/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonls/subscriptions",
      "organizations_url": "https://api.github.com/users/jonls/orgs",
      "repos_url": "https://api.github.com/users/jonls/repos",
      "events_url": "https://api.github.com/users/jonls/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonls/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "74e4d80068f9c29d4891439332b4027328c8584b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74e4d80068f9c29d4891439332b4027328c8584b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/74e4d80068f9c29d4891439332b4027328c8584b"
      }
    ],
    "stats": {
      "total": 79,
      "additions": 79,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ecb93f02f72753c384acd796f88dc44675b85488",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8e84aad6026cfa5095f48c94cd578d670cada09a/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8e84aad6026cfa5095f48c94cd578d670cada09a/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=8e84aad6026cfa5095f48c94cd578d670cada09a",
        "patch": "@@ -66,6 +66,7 @@ int64 nHPSTimerStart;\n \n // Settings\n int64 nTransactionFee = 0;\n+int64 nDustLimit = 0;\n \n \n \n@@ -653,6 +654,12 @@ bool CTxMemPool::accept(CValidationState &state, CTransaction &tx, bool fCheckIn\n     if (!fTestNet && !tx.IsStandard())\n         return error(\"CTxMemPool::accept() : nonstandard transaction type\");\n \n+    // Further user defined acceptance tests\n+    BOOST_FOREACH(const CTxOut& txout, tx.vout) {\n+\tif (txout.nValue <= nDustLimit)\n+\t    return error(\"CTxMemPool::accept() : transaction output smaller than user defined limit\");\n+    }\n+\n     // is it already in the memory pool?\n     uint256 hash = tx.GetHash();\n     {"
      },
      {
        "sha": "08e08c3713afb23aab072fc43f55a0c8ee33b29d",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8e84aad6026cfa5095f48c94cd578d670cada09a/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8e84aad6026cfa5095f48c94cd578d670cada09a/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=8e84aad6026cfa5095f48c94cd578d670cada09a",
        "patch": "@@ -100,6 +100,7 @@ extern unsigned int nCoinCacheSize;\n \n // Settings\n extern int64 nTransactionFee;\n+extern int64 nDustLimit;\n \n // Minimum disk space required - used in CheckDiskSpace()\n static const uint64 nMinDiskSpace = 52428800;"
      },
      {
        "sha": "b50b223367d021a0db7fef058f7fa1b82fe6e8bf",
        "filename": "src/qt/forms/optionsdialog.ui",
        "status": "modified",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8e84aad6026cfa5095f48c94cd578d670cada09a/src/qt/forms/optionsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8e84aad6026cfa5095f48c94cd578d670cada09a/src/qt/forms/optionsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/optionsdialog.ui?ref=8e84aad6026cfa5095f48c94cd578d670cada09a",
        "patch": "@@ -378,6 +378,59 @@\n        </item>\n       </layout>\n      </widget>\n+     <widget class=\"QWidget\" name=\"tabAdvanced\">\n+      <attribute name=\"title\">\n+       <string>&amp;Advanced</string>\n+      </attribute>\n+      <layout class=\"QVBoxLayout\" name=\"verticalLayout_Advanced\">\n+       <item>\n+        <widget class=\"QLabel\" name=\"dustLimitInfoLabel\">\n+         <property name=\"text\">\n+          <string>Limit to the transaction that this node will process. Transactions which transfer less than this value will be ignored.</string>\n+         </property>\n+         <property name=\"textFormat\">\n+          <enum>Qt::PlainText</enum>\n+         </property>\n+         <property name=\"wordWrap\">\n+          <bool>true</bool>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <layout class=\"QHBoxLayout\" name=\"horizontalLayout_1_Advanced\">\n+         <item>\n+          <widget class=\"QLabel\" name=\"dustLimitLabel\">\n+           <property name=\"text\">\n+            <string>&amp;Dust limit</string>\n+           </property>\n+           <property name=\"textFormat\">\n+            <enum>Qt::PlainText</enum>\n+           </property>\n+           <property name=\"buddy\">\n+            <cstring>dustLimit</cstring>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"BitcoinAmountField\" name=\"dustLimit\"/>\n+         </item>\n+         <item>\n+          <spacer name=\"horizontalSpacer_1_Advanced\">\n+           <property name=\"orientation\">\n+            <enum>Qt::Horizontal</enum>\n+           </property>\n+           <property name=\"sizeHint\" stdset=\"0\">\n+            <size>\n+             <width>40</width>\n+             <height>20</height>\n+            </size>\n+           </property>\n+          </spacer>\n+         </item>\n+        </layout>\n+       </item>\n+      </layout>\n+     </widget>\n     </widget>\n    </item>\n    <item>"
      },
      {
        "sha": "ac70bcfb0fdf40b590504b91c19bbcd90f9b0c42",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8e84aad6026cfa5095f48c94cd578d670cada09a/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8e84aad6026cfa5095f48c94cd578d670cada09a/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=8e84aad6026cfa5095f48c94cd578d670cada09a",
        "patch": "@@ -145,6 +145,9 @@ void OptionsDialog::setMapper()\n     mapper->addMapping(ui->lang, OptionsModel::Language);\n     mapper->addMapping(ui->unit, OptionsModel::DisplayUnit);\n     mapper->addMapping(ui->displayAddresses, OptionsModel::DisplayAddresses);\n+\n+    /* Advanced */\n+    mapper->addMapping(ui->dustLimit, OptionsModel::DustLimit);\n }\n \n void OptionsDialog::enableApplyButton()\n@@ -243,6 +246,7 @@ void OptionsDialog::updateDisplayUnit()\n     {\n         /* Update transactionFee with the current unit */\n         ui->transactionFee->setDisplayUnit(model->getDisplayUnit());\n+        ui->dustLimit->setDisplayUnit(model->getDisplayUnit());\n     }\n }\n "
      },
      {
        "sha": "7e419c78c862ada90983acd876535af92fe722a4",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8e84aad6026cfa5095f48c94cd578d670cada09a/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8e84aad6026cfa5095f48c94cd578d670cada09a/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=8e84aad6026cfa5095f48c94cd578d670cada09a",
        "patch": "@@ -47,6 +47,7 @@ void OptionsModel::Init()\n     fMinimizeToTray = settings.value(\"fMinimizeToTray\", false).toBool();\n     fMinimizeOnClose = settings.value(\"fMinimizeOnClose\", false).toBool();\n     nTransactionFee = settings.value(\"nTransactionFee\").toLongLong();\n+    nDustLimit = settings.value(\"nDustLimit\").toLongLong();\n     language = settings.value(\"language\", \"\").toString();\n \n     // These are shared with core Bitcoin; we want\n@@ -196,6 +197,8 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n             return QVariant(bDisplayAddresses);\n         case Language:\n             return settings.value(\"language\", \"\");\n+        case DustLimit:\n+            return QVariant(nDustLimit);\n         default:\n             return QVariant();\n         }\n@@ -278,6 +281,10 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n         case Language:\n             settings.setValue(\"language\", value);\n             break;\n+        case DustLimit:\n+            nDustLimit = value.toLongLong();\n+            settings.setValue(\"nDustLimit\", nDustLimit);\n+            break;\n         default:\n             break;\n         }\n@@ -291,3 +298,8 @@ qint64 OptionsModel::getTransactionFee()\n {\n     return nTransactionFee;\n }\n+\n+qint64 OptionsModel::getDustLimit()\n+{\n+    return nDustLimit;\n+}"
      },
      {
        "sha": "26cf877b9080348f19264cc3f16f7209ff75319e",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8e84aad6026cfa5095f48c94cd578d670cada09a/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8e84aad6026cfa5095f48c94cd578d670cada09a/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=8e84aad6026cfa5095f48c94cd578d670cada09a",
        "patch": "@@ -29,6 +29,7 @@ class OptionsModel : public QAbstractListModel\n         DisplayUnit,       // BitcoinUnits::Unit\n         DisplayAddresses,  // bool\n         Language,          // QString\n+        DustLimit,         // qint64\n         OptionIDRowCount,\n     };\n \n@@ -49,6 +50,7 @@ class OptionsModel : public QAbstractListModel\n     int getDisplayUnit() { return nDisplayUnit; }\n     bool getDisplayAddresses() { return bDisplayAddresses; }\n     QString getLanguage() { return language; }\n+    qint64 getDustLimit();\n \n private:\n     int nDisplayUnit;"
      }
    ]
  },
  {
    "sha": "427dcfb215a5892c8108bc76b40fe9bab9eacb24",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MjdkY2ZiMjE1YTU4OTJjODEwOGJjNzZiNDBmZTliYWI5ZWFjYjI0",
    "commit": {
      "author": {
        "name": "Jon Lund Steffensen",
        "email": "jonlst@gmail.com",
        "date": "2013-03-18T17:19:52Z"
      },
      "committer": {
        "name": "Jon Lund Steffensen",
        "email": "jonlst@gmail.com",
        "date": "2013-03-18T23:25:48Z"
      },
      "message": "Allow blocking of specific destination addresses.\n\nTransactions destined for these addresses will not be accepted by this node.\nAdded a field in the \"Advanced\" options pane to set the list of filtered addresses.",
      "tree": {
        "sha": "481f0c6077dd9d24bc72d8ecda10deb54ebef783",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/481f0c6077dd9d24bc72d8ecda10deb54ebef783"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/427dcfb215a5892c8108bc76b40fe9bab9eacb24",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/427dcfb215a5892c8108bc76b40fe9bab9eacb24",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/427dcfb215a5892c8108bc76b40fe9bab9eacb24",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/427dcfb215a5892c8108bc76b40fe9bab9eacb24/comments",
    "author": {
      "login": "jonls",
      "id": 420734,
      "node_id": "MDQ6VXNlcjQyMDczNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/420734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonls",
      "html_url": "https://github.com/jonls",
      "followers_url": "https://api.github.com/users/jonls/followers",
      "following_url": "https://api.github.com/users/jonls/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonls/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonls/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonls/subscriptions",
      "organizations_url": "https://api.github.com/users/jonls/orgs",
      "repos_url": "https://api.github.com/users/jonls/repos",
      "events_url": "https://api.github.com/users/jonls/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonls/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonls",
      "id": 420734,
      "node_id": "MDQ6VXNlcjQyMDczNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/420734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonls",
      "html_url": "https://github.com/jonls",
      "followers_url": "https://api.github.com/users/jonls/followers",
      "following_url": "https://api.github.com/users/jonls/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonls/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonls/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonls/subscriptions",
      "organizations_url": "https://api.github.com/users/jonls/orgs",
      "repos_url": "https://api.github.com/users/jonls/repos",
      "events_url": "https://api.github.com/users/jonls/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonls/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8e84aad6026cfa5095f48c94cd578d670cada09a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e84aad6026cfa5095f48c94cd578d670cada09a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8e84aad6026cfa5095f48c94cd578d670cada09a"
      }
    ],
    "stats": {
      "total": 107,
      "additions": 104,
      "deletions": 3
    },
    "files": [
      {
        "sha": "42d877ab3f132013b5a133485485fd500e5126f3",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 2,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/427dcfb215a5892c8108bc76b40fe9bab9eacb24/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/427dcfb215a5892c8108bc76b40fe9bab9eacb24/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=427dcfb215a5892c8108bc76b40fe9bab9eacb24",
        "patch": "@@ -67,6 +67,7 @@ int64 nHPSTimerStart;\n // Settings\n int64 nTransactionFee = 0;\n int64 nDustLimit = 0;\n+set<CBitcoinAddress> filteredAddresses;\n \n \n \n@@ -656,8 +657,21 @@ bool CTxMemPool::accept(CValidationState &state, CTransaction &tx, bool fCheckIn\n \n     // Further user defined acceptance tests\n     BOOST_FOREACH(const CTxOut& txout, tx.vout) {\n-\tif (txout.nValue <= nDustLimit)\n-\t    return error(\"CTxMemPool::accept() : transaction output smaller than user defined limit\");\n+        if (txout.nValue <= nDustLimit)\n+            return error(\"CTxMemPool::accept() : transaction output smaller than user defined limit\");\n+\n+        txnouttype type;\n+        vector<CTxDestination> addresses;\n+        int nRequired;\n+        if (!ExtractDestinations(txout.scriptPubKey, type, addresses, nRequired)) {\n+            return error(\"CTxMemPool::accept() : unable to check transaction destinations\");\n+        }\n+\n+        BOOST_FOREACH(const CTxDestination& addr, addresses) {\n+            if (filteredAddresses.find(CBitcoinAddress(addr)) != filteredAddresses.end()) {\n+                return error(\"CTxMemPool::accept() : transaction destination filtered\");\n+            }\n+        }\n     }\n \n     // is it already in the memory pool?"
      },
      {
        "sha": "df23af3ec5f2733aa3730669bb38ef69bf451d1b",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/427dcfb215a5892c8108bc76b40fe9bab9eacb24/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/427dcfb215a5892c8108bc76b40fe9bab9eacb24/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=427dcfb215a5892c8108bc76b40fe9bab9eacb24",
        "patch": "@@ -9,6 +9,7 @@\n #include \"sync.h\"\n #include \"net.h\"\n #include \"script.h\"\n+#include \"base58.h\"\n \n #include <list>\n \n@@ -101,6 +102,7 @@ extern unsigned int nCoinCacheSize;\n // Settings\n extern int64 nTransactionFee;\n extern int64 nDustLimit;\n+extern std::set<CBitcoinAddress> filteredAddresses;\n \n // Minimum disk space required - used in CheckDiskSpace()\n static const uint64 nMinDiskSpace = 52428800;"
      },
      {
        "sha": "21f8aef6d0a51b3ef7678ffdcf44ce9f5954ffb5",
        "filename": "src/qt/forms/optionsdialog.ui",
        "status": "modified",
        "additions": 40,
        "deletions": 1,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/427dcfb215a5892c8108bc76b40fe9bab9eacb24/src/qt/forms/optionsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/427dcfb215a5892c8108bc76b40fe9bab9eacb24/src/qt/forms/optionsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/optionsdialog.ui?ref=427dcfb215a5892c8108bc76b40fe9bab9eacb24",
        "patch": "@@ -386,7 +386,7 @@\n        <item>\n         <widget class=\"QLabel\" name=\"dustLimitInfoLabel\">\n          <property name=\"text\">\n-          <string>Limit to the transaction that this node will process. Transactions which transfer less than this value will be ignored.</string>\n+          <string>Limits to the transaction that this node will process. Transactions with outputs less than the dust limit will be ignored.</string>\n          </property>\n          <property name=\"textFormat\">\n           <enum>Qt::PlainText</enum>\n@@ -429,6 +429,45 @@\n          </item>\n         </layout>\n        </item>\n+       <item>\n+        <widget class=\"QLabel\" name=\"filteredAddressesInfoLabel\">\n+         <property name=\"text\">\n+          <string>Bitcoin addresses which will be filtered (each address on a line). Outputs spent to these addresses will not be processed by this node.</string>\n+         </property>\n+         <property name=\"textFormat\">\n+          <enum>Qt::PlainText</enum>\n+         </property>\n+         <property name=\"wordWrap\">\n+          <bool>true</bool>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <widget class=\"QPlainTextEdit\" name=\"filteredAddresses\">\n+         <property name=\"maximumSize\">\n+          <size>\n+           <width>16777215</width>\n+           <height>16777215</height>\n+          </size>\n+         </property>\n+         <property name=\"toolTip\">\n+          <string>Bitcoin addresses to filter from transaction processing.</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <spacer name=\"verticalSpacer_Advanced\">\n+         <property name=\"orientation\">\n+          <enum>Qt::Vertical</enum>\n+         </property>\n+         <property name=\"sizeHint\" stdset=\"0\">\n+          <size>\n+           <width>20</width>\n+           <height>40</height>\n+          </size>\n+         </property>\n+        </spacer>\n+       </item>\n       </layout>\n      </widget>\n     </widget>"
      },
      {
        "sha": "0b5f736987dd74e992b5dc9731b8975f74df2222",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/427dcfb215a5892c8108bc76b40fe9bab9eacb24/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/427dcfb215a5892c8108bc76b40fe9bab9eacb24/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=427dcfb215a5892c8108bc76b40fe9bab9eacb24",
        "patch": "@@ -148,6 +148,7 @@ void OptionsDialog::setMapper()\n \n     /* Advanced */\n     mapper->addMapping(ui->dustLimit, OptionsModel::DustLimit);\n+    mapper->addMapping(ui->filteredAddresses, OptionsModel::FilteredAddresses);\n }\n \n void OptionsDialog::enableApplyButton()"
      },
      {
        "sha": "570504c29233f0ea10062758657509c3545a6e4f",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/427dcfb215a5892c8108bc76b40fe9bab9eacb24/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/427dcfb215a5892c8108bc76b40fe9bab9eacb24/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=427dcfb215a5892c8108bc76b40fe9bab9eacb24",
        "patch": "@@ -1,6 +1,8 @@\n #include \"optionsmodel.h\"\n \n #include \"bitcoinunits.h\"\n+#include <boost/algorithm/string.hpp>\n+\n #include \"init.h\"\n #include \"walletdb.h\"\n #include \"guiutil.h\"\n@@ -50,6 +52,14 @@ void OptionsModel::Init()\n     nDustLimit = settings.value(\"nDustLimit\").toLongLong();\n     language = settings.value(\"language\", \"\").toString();\n \n+    filteredAddresses.clear();\n+    int size = settings.beginReadArray(\"filteredAddresses\");\n+    for (int i = 0; i < size; i++) {\n+        settings.setArrayIndex(i);\n+        filteredAddresses.insert(CBitcoinAddress(settings.value(\"address\").toString().toStdString()));\n+    }\n+    settings.endArray();\n+\n     // These are shared with core Bitcoin; we want\n     // command-line options to override the GUI settings:\n     if (settings.contains(\"fUseUPnP\"))\n@@ -199,6 +209,13 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n             return settings.value(\"language\", \"\");\n         case DustLimit:\n             return QVariant(nDustLimit);\n+        case FilteredAddresses: {\n+            std::string s;\n+            BOOST_FOREACH(const CBitcoinAddress& addr, filteredAddresses) {\n+                s += addr.ToString() + \"\\n\";\n+            }\n+            return QVariant(QString::fromStdString(s));\n+        }\n         default:\n             return QVariant();\n         }\n@@ -285,6 +302,33 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             nDustLimit = value.toLongLong();\n             settings.setValue(\"nDustLimit\", nDustLimit);\n             break;\n+        case FilteredAddresses: {\n+            std::vector<std::string> addresses;\n+            std::string s = value.toString().toStdString();\n+            std::string::size_type prev_pos = 0, pos = 0;\n+            while ((pos = s.find(\"\\n\", pos)) != std::string::npos) {\n+                std::string substring(s.substr(prev_pos, pos-prev_pos));\n+                boost::algorithm::trim(substring);\n+                addresses.push_back(substring);\n+                prev_pos = ++pos;\n+            }\n+            addresses.push_back(s.substr(prev_pos, pos-prev_pos));\n+\n+            filteredAddresses.clear();\n+\n+            int i = 0;\n+            settings.beginWriteArray(\"filteredAddresses\");\n+            BOOST_FOREACH(const std::string& addr, addresses) {\n+                CBitcoinAddress btaddr(addr);\n+                if (btaddr.IsValid()) {\n+                    filteredAddresses.insert(btaddr);\n+                    settings.setArrayIndex(i++);\n+                    settings.setValue(\"address\", QString::fromStdString(btaddr.ToString()));\n+                }\n+            }\n+            settings.endArray();\n+        }\n+        break;\n         default:\n             break;\n         }"
      },
      {
        "sha": "01816eef679bf7a99501a620232f490e797fc4ff",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/427dcfb215a5892c8108bc76b40fe9bab9eacb24/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/427dcfb215a5892c8108bc76b40fe9bab9eacb24/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=427dcfb215a5892c8108bc76b40fe9bab9eacb24",
        "patch": "@@ -30,6 +30,7 @@ class OptionsModel : public QAbstractListModel\n         DisplayAddresses,  // bool\n         Language,          // QString\n         DustLimit,         // qint64\n+        FilteredAddresses, // QString\n         OptionIDRowCount,\n     };\n "
      }
    ]
  }
]