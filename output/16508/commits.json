[
  {
    "sha": "ecf8730f89eb937a540c33ad778ad473b4fb0a6a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplY2Y4NzMwZjg5ZWI5MzdhNTQwYzMzYWQ3NzhhZDQ3M2I0ZmIwYTZh",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-08-01T16:41:37Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-08-02T18:20:06Z"
      },
      "message": "Disallow double negation syntax for options",
      "tree": {
        "sha": "c7002b2a896d5f39c0bb45d4b551d77f38f393ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c7002b2a896d5f39c0bb45d4b551d77f38f393ac"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ecf8730f89eb937a540c33ad778ad473b4fb0a6a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl1EftYACgkQQQEIES5+\nqB+nqg//ddK0z5AEGtwPc/SmZWAw5SFmN+s1t5MVU+7zr4aNrNS+OTuB64aaxoqK\nxjE0V9tQSSP8B5P6KVaMOcch77/NYFB/ydYwHgCuPqn2wP3ZF62Np/aSMpwsq9/y\nx4IsAoG3xS6IJOyrSDF10krjpIYzIUdSRx/GQCsuZhOrZfnJ0RDRvQV2BwjEa8IW\neqJzkCTPvbaQx0cZyTMLv12OiYlfPnCrIovUYxTdiVOtgFhhQup+2PRnEe2NJgQx\n6+I7tW3IXP8LI6Lp2TWP1/ujc6csjGb97a4KmjaGqmfEG+7aVUGFQzoEat+RH/nW\nz3UIxss/wMn0ikolDtmuTGGFQQMCkzEqNykf69NbeST6y925fH9/+Ix/5zx4QnUK\nVVHtF7ylUy+8yHOCIBhYnhiulxDQpmbu8SBHC6Cro3HWGDRV4eg+D5Ssm+nDW8Tj\nKXlLSPFhqKhOXPcfEIxU6oPTqWE4WbGMbKjCs3scjKussEZcdD29UYvSlEJdNLze\nec2VXh30xQRbe8H4QrKYRoV4Hpi3V/pwS8FiCSRJiL7bwJvfjFctQVQPkKMfjStA\ncg67MXhtY16xaZN2O+3yZz8qExThPVzNibE6lHn5faGZF2+d4c4SzdTrayyqluHS\nwIwAFx/fyTEg5aVt+LPL3W5YmBWkwbddAatAT7hjNoJ21ZtkHu8=\n=jSK/\n-----END PGP SIGNATURE-----",
        "payload": "tree c7002b2a896d5f39c0bb45d4b551d77f38f393ac\nparent 3a3d8b83571205b8329d4ee25537e3cc4397c3b8\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1564677697 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1564770006 +0300\n\nDisallow double negation syntax for options\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ecf8730f89eb937a540c33ad778ad473b4fb0a6a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ecf8730f89eb937a540c33ad778ad473b4fb0a6a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ecf8730f89eb937a540c33ad778ad473b4fb0a6a/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3a3d8b83571205b8329d4ee25537e3cc4397c3b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a3d8b83571205b8329d4ee25537e3cc4397c3b8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3a3d8b83571205b8329d4ee25537e3cc4397c3b8"
      }
    ],
    "stats": {
      "total": 64,
      "additions": 13,
      "deletions": 51
    },
    "files": [
      {
        "sha": "fa2f1ff843c2aead548a602e7240d2f25282bd21",
        "filename": "src/test/getarg_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ecf8730f89eb937a540c33ad778ad473b4fb0a6a/src/test/getarg_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ecf8730f89eb937a540c33ad778ad473b4fb0a6a/src/test/getarg_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/getarg_tests.cpp?ref=ecf8730f89eb937a540c33ad778ad473b4fb0a6a",
        "patch": "@@ -80,10 +80,6 @@ BOOST_AUTO_TEST_CASE(boolarg)\n     BOOST_CHECK(!gArgs.GetBoolArg(\"-foo\", false));\n     BOOST_CHECK(!gArgs.GetBoolArg(\"-foo\", true));\n \n-    ResetArgs(\"-foo=0 -nofoo=0\");  // -nofoo=0 should win\n-    BOOST_CHECK(gArgs.GetBoolArg(\"-foo\", false));\n-    BOOST_CHECK(gArgs.GetBoolArg(\"-foo\", true));\n-\n     // New 0.6 feature: treat -- same as -:\n     ResetArgs(\"--foo=1\");\n     BOOST_CHECK(gArgs.GetBoolArg(\"-foo\", false));\n@@ -170,10 +166,6 @@ BOOST_AUTO_TEST_CASE(boolargno)\n     BOOST_CHECK(!gArgs.GetBoolArg(\"-foo\", true));\n     BOOST_CHECK(!gArgs.GetBoolArg(\"-foo\", false));\n \n-    ResetArgs(\"-nofoo=0\");\n-    BOOST_CHECK(gArgs.GetBoolArg(\"-foo\", true));\n-    BOOST_CHECK(gArgs.GetBoolArg(\"-foo\", false));\n-\n     ResetArgs(\"-foo --nofoo\"); // --nofoo should win\n     BOOST_CHECK(!gArgs.GetBoolArg(\"-foo\", true));\n     BOOST_CHECK(!gArgs.GetBoolArg(\"-foo\", false));"
      },
      {
        "sha": "3b6a0bb68e6ef4cdf763a14a9c976f49cb89ad96",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 26,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ecf8730f89eb937a540c33ad778ad473b4fb0a6a/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ecf8730f89eb937a540c33ad778ad473b4fb0a6a/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=ecf8730f89eb937a540c33ad778ad473b4fb0a6a",
        "patch": "@@ -250,21 +250,17 @@ BOOST_AUTO_TEST_CASE(util_GetBoolArgEdgeCases)\n     // Params test\n     const auto foo = std::make_pair(\"-foo\", ArgsManager::ALLOW_BOOL);\n     const auto bar = std::make_pair(\"-bar\", ArgsManager::ALLOW_BOOL);\n-    const char *argv_test[] = {\"ignored\", \"-nofoo\", \"-foo\", \"-nobar=0\"};\n+    const char *argv_test[] = {\"ignored\", \"-nofoo\", \"-foo\"};\n     testArgs.SetupArgs({foo, bar});\n     std::string error;\n-    BOOST_CHECK(testArgs.ParseParameters(4, (char**)argv_test, error));\n+    BOOST_CHECK(testArgs.ParseParameters(3, (char**)argv_test, error));\n \n     // This was passed twice, second one overrides the negative setting.\n     BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n     BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"\");\n \n-    // A double negative is a positive, and not marked as negated.\n-    BOOST_CHECK(!testArgs.IsArgNegated(\"-bar\"));\n-    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"1\");\n-\n     // Config test\n-    const char *conf_test = \"nofoo=1\\nfoo=1\\nnobar=0\\n\";\n+    const char *conf_test = \"nofoo=1\\nfoo=1\\n\";\n     BOOST_CHECK(testArgs.ParseParameters(1, (char**)argv_test, error));\n     testArgs.ReadConfigString(conf_test);\n \n@@ -273,10 +269,6 @@ BOOST_AUTO_TEST_CASE(util_GetBoolArgEdgeCases)\n     BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n     BOOST_CHECK(testArgs.GetArg(\"-foo\", \"xxx\") == \"1\");\n \n-    // A double negative is a positive, and does not count as negated.\n-    BOOST_CHECK(!testArgs.IsArgNegated(\"-bar\"));\n-    BOOST_CHECK(testArgs.GetArg(\"-bar\", \"xxx\") == \"1\");\n-\n     // Combined test\n     const char *combo_test_args[] = {\"ignored\", \"-nofoo\", \"-bar\"};\n     const char *combo_test_conf = \"foo=1\\nnobar=1\\n\";\n@@ -304,7 +296,6 @@ BOOST_AUTO_TEST_CASE(util_ReadConfigStream)\n        \"ccc=multiple\\n\"\n        \"d=e\\n\"\n        \"nofff=1\\n\"\n-       \"noggg=0\\n\"\n        \"h=1\\n\"\n        \"noh=1\\n\"\n        \"noi=1\\n\"\n@@ -326,25 +317,23 @@ BOOST_AUTO_TEST_CASE(util_ReadConfigStream)\n     const auto d = std::make_pair(\"-d\", ArgsManager::ALLOW_STRING);\n     const auto e = std::make_pair(\"-e\", ArgsManager::ALLOW_ANY);\n     const auto fff = std::make_pair(\"-fff\", ArgsManager::ALLOW_BOOL);\n-    const auto ggg = std::make_pair(\"-ggg\", ArgsManager::ALLOW_BOOL);\n     const auto h = std::make_pair(\"-h\", ArgsManager::ALLOW_BOOL);\n     const auto i = std::make_pair(\"-i\", ArgsManager::ALLOW_BOOL);\n     const auto iii = std::make_pair(\"-iii\", ArgsManager::ALLOW_INT);\n-    test_args.SetupArgs({a, b, ccc, d, e, fff, ggg, h, i, iii});\n+    test_args.SetupArgs({a, b, ccc, d, e, fff, h, i, iii});\n \n     test_args.ReadConfigString(str_config);\n-    // expectation: a, b, ccc, d, fff, ggg, h, i end up in map\n+    // expectation: a, b, ccc, d, fff, h, i end up in map\n     // so do sec1.ccc, sec1.d, sec1.h, sec2.ccc, sec2.iii\n \n     BOOST_CHECK(test_args.GetOverrideArgs().empty());\n-    BOOST_CHECK(test_args.GetConfigArgs().size() == 13);\n+    BOOST_CHECK(test_args.GetConfigArgs().size() == 12);\n \n     BOOST_CHECK(test_args.GetConfigArgs().count(\"-a\")\n                 && test_args.GetConfigArgs().count(\"-b\")\n                 && test_args.GetConfigArgs().count(\"-ccc\")\n                 && test_args.GetConfigArgs().count(\"-d\")\n                 && test_args.GetConfigArgs().count(\"-fff\")\n-                && test_args.GetConfigArgs().count(\"-ggg\")\n                 && test_args.GetConfigArgs().count(\"-h\")\n                 && test_args.GetConfigArgs().count(\"-i\")\n                );\n@@ -359,7 +348,6 @@ BOOST_AUTO_TEST_CASE(util_ReadConfigStream)\n                 && test_args.IsArgSet(\"-ccc\")\n                 && test_args.IsArgSet(\"-d\")\n                 && test_args.IsArgSet(\"-fff\")\n-                && test_args.IsArgSet(\"-ggg\")\n                 && test_args.IsArgSet(\"-h\")\n                 && test_args.IsArgSet(\"-i\")\n                 && !test_args.IsArgSet(\"-zzz\")\n@@ -371,7 +359,6 @@ BOOST_AUTO_TEST_CASE(util_ReadConfigStream)\n                 && test_args.GetArg(\"-ccc\", \"xxx\") == \"argument\"\n                 && test_args.GetArg(\"-d\", \"xxx\") == \"e\"\n                 && test_args.GetArg(\"-fff\", \"xxx\") == \"0\"\n-                && test_args.GetArg(\"-ggg\", \"xxx\") == \"1\"\n                 && test_args.GetArg(\"-h\", \"xxx\") == \"0\"\n                 && test_args.GetArg(\"-i\", \"xxx\") == \"1\"\n                 && test_args.GetArg(\"-zzz\", \"xxx\") == \"xxx\"\n@@ -384,7 +371,6 @@ BOOST_AUTO_TEST_CASE(util_ReadConfigStream)\n                      && !test_args.GetBoolArg(\"-ccc\", def)\n                      && !test_args.GetBoolArg(\"-d\", def)\n                      && !test_args.GetBoolArg(\"-fff\", def)\n-                     && test_args.GetBoolArg(\"-ggg\", def)\n                      && !test_args.GetBoolArg(\"-h\", def)\n                      && test_args.GetBoolArg(\"-i\", def)\n                      && test_args.GetBoolArg(\"-zzz\", def) == def\n@@ -401,9 +387,6 @@ BOOST_AUTO_TEST_CASE(util_ReadConfigStream)\n                 && test_args.GetArgs(\"-ccc\").back() == \"multiple\");\n     BOOST_CHECK(test_args.GetArgs(\"-fff\").size() == 0);\n     BOOST_CHECK(test_args.GetArgs(\"-nofff\").size() == 0);\n-    BOOST_CHECK(test_args.GetArgs(\"-ggg\").size() == 1\n-                && test_args.GetArgs(\"-ggg\").front() == \"1\");\n-    BOOST_CHECK(test_args.GetArgs(\"-noggg\").size() == 0);\n     BOOST_CHECK(test_args.GetArgs(\"-h\").size() == 0);\n     BOOST_CHECK(test_args.GetArgs(\"-noh\").size() == 0);\n     BOOST_CHECK(test_args.GetArgs(\"-i\").size() == 1\n@@ -416,7 +399,6 @@ BOOST_AUTO_TEST_CASE(util_ReadConfigStream)\n     BOOST_CHECK(!test_args.IsArgNegated(\"-ccc\"));\n     BOOST_CHECK(!test_args.IsArgNegated(\"-d\"));\n     BOOST_CHECK(test_args.IsArgNegated(\"-fff\"));\n-    BOOST_CHECK(!test_args.IsArgNegated(\"-ggg\"));\n     BOOST_CHECK(test_args.IsArgNegated(\"-h\")); // last setting takes precedence\n     BOOST_CHECK(!test_args.IsArgNegated(\"-i\")); // last setting takes precedence\n     BOOST_CHECK(!test_args.IsArgNegated(\"-zzz\"));\n@@ -428,7 +410,6 @@ BOOST_AUTO_TEST_CASE(util_ReadConfigStream)\n     BOOST_CHECK(test_args.GetArg(\"-a\", \"xxx\") == \"\"\n                 && test_args.GetArg(\"-b\", \"xxx\") == \"1\"\n                 && test_args.GetArg(\"-fff\", \"xxx\") == \"0\"\n-                && test_args.GetArg(\"-ggg\", \"xxx\") == \"1\"\n                 && test_args.GetArg(\"-zzz\", \"xxx\") == \"xxx\"\n                 && test_args.GetArg(\"-iii\", \"xxx\") == \"xxx\"\n                );\n@@ -450,7 +431,6 @@ BOOST_AUTO_TEST_CASE(util_ReadConfigStream)\n                 && test_args.GetArg(\"-b\", \"xxx\") == \"1\"\n                 && test_args.GetArg(\"-d\", \"xxx\") == \"e\"\n                 && test_args.GetArg(\"-fff\", \"xxx\") == \"0\"\n-                && test_args.GetArg(\"-ggg\", \"xxx\") == \"1\"\n                 && test_args.GetArg(\"-zzz\", \"xxx\") == \"xxx\"\n                 && test_args.GetArg(\"-h\", \"xxx\") == \"0\"\n                );"
      },
      {
        "sha": "e7dea137a37ab9e059ae484e39d019a043f270e3",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 10,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ecf8730f89eb937a540c33ad778ad473b4fb0a6a/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ecf8730f89eb937a540c33ad778ad473b4fb0a6a/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=ecf8730f89eb937a540c33ad778ad473b4fb0a6a",
        "patch": "@@ -265,14 +265,10 @@ class ArgsManagerHelper {\n /**\n  * Interpret -nofoo as if the user supplied -foo=0.\n  *\n- * This method also tracks when the -no form was supplied, and if so,\n- * checks whether there was a double-negative (-nofoo=0 -> -foo=1).\n+ * This method also tracks when the -no form was supplied, and if so, removes\n+ * the \"no\" from the key and clears the args vector to indicate a negated option.\n  *\n- * If there was not a double negative, it removes the \"no\" from the key\n- * and clears the args vector to indicate a negated option.\n- *\n- * If there was a double negative, it removes \"no\" from the key, sets the\n- * value to \"1\" and pushes the key and the updated value to the args vector.\n+ * Double negative is not allowed and raises an error.\n  *\n  * If there was no \"no\", it leaves key and value untouched and pushes them\n  * to the args vector.\n@@ -296,15 +292,15 @@ NODISCARD static bool InterpretOption(std::string key, std::string val, unsigned\n         ++option_index;\n     }\n     if (key.substr(option_index, 2) == \"no\") {\n+        const std::string negated_key = key;\n         key.erase(option_index, 2);\n         if (flags & ArgsManager::ALLOW_BOOL) {\n             if (InterpretBool(val)) {\n                 args[key].clear();\n                 return true;\n             }\n-            // Double negatives like -nofoo=0 are supported (but discouraged)\n-            LogPrintf(\"Warning: parsed potentially confusing double-negative %s=%s\\n\", key, val);\n-            val = \"1\";\n+            error = strprintf(\"Double-negative %s=%s is not allowed\", negated_key.c_str(), val.c_str());\n+            return false;\n         } else {\n             error = strprintf(\"Negating of %s is meaningless and therefore forbidden\", key.c_str());\n             return false;"
      },
      {
        "sha": "c1439512a687cf1adf7ec695f0ec4c848fe776e5",
        "filename": "test/functional/feature_config_args.py",
        "status": "modified",
        "additions": 1,
        "deletions": 7,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ecf8730f89eb937a540c33ad778ad473b4fb0a6a/test/functional/feature_config_args.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ecf8730f89eb937a540c33ad778ad473b4fb0a6a/test/functional/feature_config_args.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_config_args.py?ref=ecf8730f89eb937a540c33ad778ad473b4fb0a6a",
        "patch": "@@ -27,6 +27,7 @@ def test_config_file_parser(self):\n         )\n         with open(inc_conf_file_path, 'w', encoding='utf-8') as conf:\n             conf.write('dash_conf=1\\n')\n+        # This also tests log buffering.\n         with self.nodes[0].assert_debug_log(expected_msgs=['Ignoring unknown configuration value dash_conf']):\n             self.start_node(0)\n         self.stop_node(0)\n@@ -77,16 +78,9 @@ def test_config_file_parser(self):\n         with open(inc_conf_file2_path, 'w', encoding='utf-8') as conf:\n             conf.write('')  # clear\n \n-    def test_log_buffer(self):\n-        with self.nodes[0].assert_debug_log(expected_msgs=['Warning: parsed potentially confusing double-negative -connect=0']):\n-            self.start_node(0, extra_args=['-noconnect=0'])\n-        self.stop_node(0)\n-\n     def run_test(self):\n         self.stop_node(0)\n \n-        self.test_log_buffer()\n-\n         self.test_config_file_parser()\n \n         # Remove the -datadir argument so it doesn't override the config file"
      }
    ]
  },
  {
    "sha": "7fb01de3cf64696a3fc550e204ff30fd370e7409",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZmIwMWRlM2NmNjQ2OTZhM2ZjNTUwZTIwNGZmMzBmZDM3MGU3NDA5",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-08-01T16:54:31Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-08-02T18:20:14Z"
      },
      "message": "test: Add tests for double negated options",
      "tree": {
        "sha": "27922538fb66ba0db87fbdb738350c3311355c5b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/27922538fb66ba0db87fbdb738350c3311355c5b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7fb01de3cf64696a3fc550e204ff30fd370e7409",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl1Eft4ACgkQQQEIES5+\nqB+/LA/8Ce0eiYt3KGFq35y5BL0y8ga+IY5kQ2F36IOSh0uJ672GS2lVcu89RxMz\nhD5zlG9m96a/IdLme8R5dr4xuKUZIJ1tfyWhDxon8XCMIhNywNao+9Gca/zND7Ho\ncTNnAjkeVMtlDhhTi053721sWzvDgMIBO5UmxdwXZrpVTOFE3OGiDAlEz5NrDsCK\n0B4SZRYt/wby6oiBcHYWHttqrYek74lBq9rOhQDD3yLOvWSIij2gRdU8Lkj1onSC\nYT+ptA3SxE1lHPYUAJ7osa53gB0lMgMXr9Rd+oCa80kW3nYk8hEDAr+OL7oZ5KJ4\ndARwXdmll/aK/ntYBQOBVQSUCgBzqrsDVbmCtDgs1F7OijhGw61ZkV08VH1T3DjU\n7AMjuQ3GdUnJdYG62wlUE1211IanzZpTsQX1BJiB/hbOCTeCTjyXp3E/aqxr+IN6\nvcC9Z4QVgNMHhbBMG0cN/4gCjOVhRi3I4xh2uJZRi3q0FLUsUnB4EDgWSCxgjCO/\nh0+9ibFI9vX/16Tcyyl2FSYpD7X1lyEk67QDmDTJKUi0XPCFurv5DLaiastm59Tr\nHI2gmtR+CmpG0TzcEIAGK0l3BWkVNkp2pj+nC10gP2iGh3OpTsNx8EEUjEr85QsT\ngCZIj8Gn9UtTLi3xGSy/2iOT5a2hczXhFEABjoLZTQINHvXvBwQ=\n=S+eM\n-----END PGP SIGNATURE-----",
        "payload": "tree 27922538fb66ba0db87fbdb738350c3311355c5b\nparent ecf8730f89eb937a540c33ad778ad473b4fb0a6a\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1564678471 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1564770014 +0300\n\ntest: Add tests for double negated options\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7fb01de3cf64696a3fc550e204ff30fd370e7409",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7fb01de3cf64696a3fc550e204ff30fd370e7409",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7fb01de3cf64696a3fc550e204ff30fd370e7409/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ecf8730f89eb937a540c33ad778ad473b4fb0a6a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ecf8730f89eb937a540c33ad778ad473b4fb0a6a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ecf8730f89eb937a540c33ad778ad473b4fb0a6a"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 9,
      "deletions": 0
    },
    "files": [
      {
        "sha": "83e8ee862bfc97cbbfcf3f3bb80115ba66c4ad8e",
        "filename": "test/functional/feature_config_args.py",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7fb01de3cf64696a3fc550e204ff30fd370e7409/test/functional/feature_config_args.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7fb01de3cf64696a3fc550e204ff30fd370e7409/test/functional/feature_config_args.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_config_args.py?ref=7fb01de3cf64696a3fc550e204ff30fd370e7409",
        "patch": "@@ -78,9 +78,18 @@ def test_config_file_parser(self):\n         with open(inc_conf_file2_path, 'w', encoding='utf-8') as conf:\n             conf.write('')  # clear\n \n+    def test_option_negating_policy(self):\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg='Error: Error parsing command line arguments: Double-negative -nolisten=0 is not allowed',\n+            extra_args=['-nolisten=0'],\n+        )\n+        self.stop_node(0)\n+\n     def run_test(self):\n         self.stop_node(0)\n \n+        self.test_option_negating_policy()\n+\n         self.test_config_file_parser()\n \n         # Remove the -datadir argument so it doesn't override the config file"
      }
    ]
  },
  {
    "sha": "feb0fa6ebc8a24cbaf86b668e190399ea10e979f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZWIwZmE2ZWJjOGEyNGNiYWY4NmI2NjhlMTkwMzk5ZWExMGU5Nzlm",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-08-01T17:01:23Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-08-02T18:20:15Z"
      },
      "message": "doc: Add release notes for 16508",
      "tree": {
        "sha": "96188accd2222e77c9248a8f372a0a5d63503f5e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/96188accd2222e77c9248a8f372a0a5d63503f5e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/feb0fa6ebc8a24cbaf86b668e190399ea10e979f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl1Eft8ACgkQQQEIES5+\nqB8FlxAAomUjO+p1dGhc7uvgljJS2uBo08rUav+mADEnShtfSVm14rF1ngyhx0+8\n+bVT84PYWunbIN79Yvk2iHskvfZ2NuNYe0nDL2yt4LtGhjHiPa87sPZAWbICdnnv\nySPsmVWKHUQayLvP51oCmXGiXxBKgmFaDIdFJ89zboFq/9bhqP6slFd3WxKmzK6Z\n7Dtkt6GvqOsoPXgMB0fK24GeUuY1LAr6a0Wgl0QxOqU/fnOzawUM7VuLWyOf4n5S\nxaUs+WjilkoouTr2YAbZWTeOWPzckLIqvUimMe1lxuLAshWP+VDjC4jQPN+rc/Nf\nEwTB8DocVuMVxs7gzc7r6avgO8JgYTg3o+Wk2DgdbS2NTTuMMs/ydTj7l7nLswBC\n6Xg8CusE9cU1LMRjSTRgxFndt1lqId5TxQ2ZtPNg1s+5piTpmOwNYgTl0WVVMYX2\noReE+FyWr4KOg+uWK00DHMyaIN+NkuCZZr+nIdudBoFPuNZ6K+6Wu6BEYloFgdBy\nWF6CU6mWJ8PgviLeSZlNmi7VVOuTw/rZfa7Pu5cV496w55bxshO42IEYiHYDxGQr\nVSCqmCV8sCLRMUEkqhtWt0TUtISHtVL812ElA1zPvuQK24gxglxwB0/eRskr1bUp\n1lh/Pjrgi3Mpc+wN5X4sZm4rcb33PCsKM47DVdz2n4AmX93doM8=\n=jsfb\n-----END PGP SIGNATURE-----",
        "payload": "tree 96188accd2222e77c9248a8f372a0a5d63503f5e\nparent 7fb01de3cf64696a3fc550e204ff30fd370e7409\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1564678883 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1564770015 +0300\n\ndoc: Add release notes for 16508\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/feb0fa6ebc8a24cbaf86b668e190399ea10e979f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/feb0fa6ebc8a24cbaf86b668e190399ea10e979f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/feb0fa6ebc8a24cbaf86b668e190399ea10e979f/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7fb01de3cf64696a3fc550e204ff30fd370e7409",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7fb01de3cf64696a3fc550e204ff30fd370e7409",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7fb01de3cf64696a3fc550e204ff30fd370e7409"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "83d691b06e9fb6caa3b5836e571a89d2869a2301",
        "filename": "doc/release-notes-16508.md",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/feb0fa6ebc8a24cbaf86b668e190399ea10e979f/doc/release-notes-16508.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/feb0fa6ebc8a24cbaf86b668e190399ea10e979f/doc/release-notes-16508.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-16508.md?ref=feb0fa6ebc8a24cbaf86b668e190399ea10e979f",
        "patch": "@@ -0,0 +1,4 @@\n+Configuration options\n+---------------------\n+\n+The double negation syntax (`-nofoo=0`) is not allowed for boolean type options which are marked with the `ArgsManager::ALLOW_BOOL` flag."
      }
    ]
  }
]