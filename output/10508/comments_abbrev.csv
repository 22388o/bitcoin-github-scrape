jonasschnelli,2017-06-02T15:22:48Z,"Travis fails with `/sbin/start-stop-daemon: unable to stat /usr/bin/Xvfb (No such file or directory)`.\n\ntail from https://api.travis-ci.org/jobs/238751025/log.txt?deansi=true:\n```\n$ if [ ""$RUN_TESTS"" = ""true"" -a ""${DEP_OPTS#*NO_QT=1}"" = ""$DEP_OPTS"" ]; then export DISPLAY=:99.0; /sbin/start-stop-daemon --start --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvf",https://github.com/bitcoin/bitcoin/pull/10508#issuecomment-305819629,305819629,
ryanofsky,2017-06-02T15:58:30Z,"Updated 030a9e9112073c083f9cfed0b0f6268d4c351bec -> 019ac7bb66ad2c8304c24e1c72361eeb811ae40e ([pr/travqt.1](https://github.com/ryanofsky/bitcoin/commits/pr/travqt.1) -> [pr/travqt.2](https://github.com/ryanofsky/bitcoin/commits/pr/travqt.2))\n",https://github.com/bitcoin/bitcoin/pull/10508#issuecomment-305831150,305831150,
MarcoFalke,2017-06-03T13:38:28Z,We only have a 50 minute time slot to run one entry of the matrix. It turns out that functional tests can not be run after compiling depends/qt from scratch.,https://github.com/bitcoin/bitcoin/pull/10508#issuecomment-305975663,305975663,
ryanofsky,2017-06-05T16:11:15Z,"> It turns out that functional tests can not be run after compiling depends/qt from scratch.\n\nIt sounds like the only way to deal with this would be to split the `RUN_TESTS` variable into separate variables for python rpc and c++ tests, and then add a new travis configuration enabling wallet and Qt and `RUN_TESTS` for c++ but not python.\n\n**Is there a cost to creating a new travis configur",https://github.com/bitcoin/bitcoin/pull/10508#issuecomment-306230463,306230463,
MarcoFalke,2017-06-05T16:28:22Z,"The cost would be that each push takes a bit longer to run through travis. As ccache is enabled on travis, we are probably talking about 3-5 minutes + whatever it takes to run the tests.\n\nIf we are going to add a new configuration, I'd prefer a [qt4, wallet, qt_tests, no_functional_tests] config. You might take a look at #7142, which adds the qt4 stuff only.",https://github.com/bitcoin/bitcoin/pull/10508#issuecomment-306235003,306235003,
jonasschnelli,2017-06-05T16:35:57Z,Wild thoughts: what about using PPA qt5 via apt instead of a depends build for this configuration?,https://github.com/bitcoin/bitcoin/pull/10508#issuecomment-306236977,306236977,
ryanofsky,2017-06-05T16:59:04Z,"> The cost would be that each push takes a bit longer to run through travis. As ccache is enabled on travis, we are probably talking about 3-5 minutes + whatever it takes to run the tests.\n\nI'm confused about whether different travis configurations run in parallel or not. If so, would adding a new configuration necessarily slow down travis pushes? And would parallel builds share the same ccach",https://github.com/bitcoin/bitcoin/pull/10508#issuecomment-306243183,306243183,
MarcoFalke,2017-06-05T17:44:08Z,"Indeed, one qt5 depends build should be enough. We can use packages for the other qt configurations.\n\nEdit: Also note  that the ccache is compressed, so 100M is likely enough. (The size is about 68-89M)",https://github.com/bitcoin/bitcoin/pull/10508#issuecomment-306254945,306254945,
MarcoFalke,2017-06-06T10:55:11Z,">I'm confused about whether different travis configurations run in parallel or not. If so, would adding a new configuration necessarily slow down travis pushes? And would parallel builds share the same ccache?\n\nThere are 5 workers running in parallel, so if the build matrix has 7 entries, at least 2 jobs are executed with a slight delay.\n\nAlso, the cache folder/url should be unique for eac",https://github.com/bitcoin/bitcoin/pull/10508#issuecomment-306451402,306451402,
ryanofsky,2017-06-06T21:54:58Z,"Got this working without having to add a new build configuration using jonasschnelli's idea and making travis build bitcoin against a packaged Qt instead of no Qt at all.\n\nDoing this required adding a new `HOST_PKG` depends option so the generated `config.site` file would allow `pkg-config` to return information about locally installed libraries. The `HOST_PKG` option works, but I'm not sure t",https://github.com/bitcoin/bitcoin/pull/10508#issuecomment-306628876,306628876,
MarcoFalke,2017-06-19T14:04:25Z,"Tested ACK cd986ea66c824e3fce564a85b0de67447a0e363e, though I can't comment on the build system changes.",https://github.com/bitcoin/bitcoin/pull/10508#issuecomment-309449610,309449610,
laanwj,2017-06-22T19:00:15Z,ping @theuni for build system changes,https://github.com/bitcoin/bitcoin/pull/10508#issuecomment-310471856,310471856,
theuni,2017-07-06T18:27:44Z,"Concept ACK, but I'd really rather not add travis hacks into the config.site.\n\n@ryanofsky: Rather than introducing a new var into the depends build, how about allowing the vars to be overridden if set instead? Then the build can just set --with-qt-* manually, and there's no hidden magic making it work?\n\nIt should be sufficient to specify all of the necessary --with-qt=foo options or QT_BAR",https://github.com/bitcoin/bitcoin/pull/10508#issuecomment-313480181,313480181,
ryanofsky,2017-07-06T21:55:34Z,"Updated cd986ea66c824e3fce564a85b0de67447a0e363e -> 4f92b5fb301fac86453aeeaabfbd064c29674cd8 ([pr/travqt.5](https://github.com/ryanofsky/bitcoin/commits/pr/travqt.5) -> [pr/travqt.6](https://github.com/ryanofsky/bitcoin/commits/pr/travqt.6))\n\nI cleaned up the implementation a little, renaming the `HOST_PKG` option to `ALLOW_HOST_PACKAGES` and disentangling it from the bindir path settings.\n",https://github.com/bitcoin/bitcoin/pull/10508#issuecomment-313530303,313530303,
ryanofsky,2017-07-10T19:57:07Z,"> The entire point of our depends, though, is for deterministic builds. This change makes it possible to accidentally use system libs rather than our depends on accident. As an example of an unintended consequence, it's hard to say which openssl will be linked into bitcoin-qt here.\n\nTo be sure, there shouldn't be any risk of nondeterminism unless you explicitly enable the ALLOW_HOST_PACKAGES o",https://github.com/bitcoin/bitcoin/pull/10508#issuecomment-314217275,314217275,
jtimon,2017-07-13T20:40:09Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/10508#issuecomment-315195543,315195543,
theuni,2017-07-13T20:56:22Z,"@ryanofsky I don't really mind either way. As long as it's not something a user will run into, I'm not picky about the name.",https://github.com/bitcoin/bitcoin/pull/10508#issuecomment-315199820,315199820,
