gavinandresen,2014-09-09T18:16:50Z,"Oh, forgot:\n\nTested by running with:\n   -debug=mempool -maxorphantx=0\nand\n   -debug=mempool -maxorphantx=4\n",https://github.com/bitcoin/bitcoin/pull/4885#issuecomment-55011496,55011496,
sipa,2014-09-09T18:27:19Z,Untested ACK. Testing.\n,https://github.com/bitcoin/bitcoin/pull/4885#issuecomment-55012663,55012663,
jgarzik,2014-09-09T19:40:47Z,One rare edge case I wonder about:  When a reorg creates more than 100 orphans.\n,https://github.com/bitcoin/bitcoin/pull/4885#issuecomment-55021997,55021997,
sipa,2014-09-09T19:47:48Z,"Jeff: you seem confused. Orphans (both blocks and transactions) as used in\nthe source code means: things that can't be validated yet, as a parent is\nmissing.\n\nDisconnecting part of the block chain can moved blockchain transaction back\nto the memory pool, but certainly not to the orphan pool.\n\nOr are you confusing with orphan blocks?\n",https://github.com/bitcoin/bitcoin/pull/4885#issuecomment-55022910,55022910,
jgarzik,2014-09-09T19:54:52Z,"I meant invalid transactions, due to depending on unknown(non-existent) coinbases.  But those wouldn't go into mapOrphan\* presumably, as they are simply invalid.\n",https://github.com/bitcoin/bitcoin/pull/4885#issuecomment-55023830,55023830,
sipa,2014-09-09T20:34:23Z,Tested ACK\n,https://github.com/bitcoin/bitcoin/pull/4885#issuecomment-55030130,55030130,
laanwj,2014-09-10T14:55:46Z,"I've cherry-picked 66aca7 ""Fix crashing bug caused by orphan(s) with duplicate prevout.hash"" into master as def2fdb to avoid crashes.\n",https://github.com/bitcoin/bitcoin/pull/4885#issuecomment-55127485,55127485,
gavinandresen,2014-09-10T16:24:11Z,"Rebased on master, and reworked a bit to address @wtogami's comments-- now one bad signature breaks out of the ""process all orphans that were waiting on this transaction"" loop.\n",https://github.com/bitcoin/bitcoin/pull/4885#issuecomment-55141628,55141628,
sipa,2014-09-10T16:32:39Z,Won't breaking out of that loop mean that you end up with transactions in the orphan pool that never get processed anymore?\n\nI think we should prevent processing transactions from punished sources instead.\n,https://github.com/bitcoin/bitcoin/pull/4885#issuecomment-55142941,55142941,
gavinandresen,2014-09-10T17:14:55Z,"@sipa : mmm... I think you're right, I could construct a chain of valid orphans with invalid-but-expensive-to-validate children and cause a lot of unnecessary CPU work.\n",https://github.com/bitcoin/bitcoin/pull/4885#issuecomment-55148961,55148961,
gavinandresen,2014-09-10T17:36:35Z,"Ok, the promote orphans into memory pool loop now keeps track of misbehaving peers, and skips processing of orphans from those peers. It doesn't remove ALL the orphans from those peers-- that still gets done when the peer is disconnected.\n\nTested by running -debug=mempool -printtoconsole and merging in a hacked-together disconnectpeer RPC call.\n",https://github.com/bitcoin/bitcoin/pull/4885#issuecomment-55152120,55152120,
BitcoinPullTester,2014-09-10T18:27:22Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4885_aa3c697e90c02d5797a59a7bfb1ecac6fbd918cf/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/4885#issuecomment-55159933,55159933,
wtogami,2014-09-11T05:48:06Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/4885#issuecomment-55222343,55222343,
laanwj,2014-09-11T10:34:39Z,"I tested the orphan pool overflow as well as deletion of all orphans of a node on disconnect. I don't have anything to test the DoS/Misbehaving case at the moment, though.\n\nACK on code changes.\n",https://github.com/bitcoin/bitcoin/pull/4885#issuecomment-55246737,55246737,
