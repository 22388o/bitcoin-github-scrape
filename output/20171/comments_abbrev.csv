ariard,2020-10-17 15:33:13,"Thanks, updated at f0fe840. See if this [comment](https://github.com/bitcoin/bitcoin/pull/20171#discussion_r506750652) needs further modification.",https://github.com/bitcoin/bitcoin/pull/20171#issuecomment-711030614,711030614,
naumenkogs,2020-10-19 07:16:53,Concept ACK,https://github.com/bitcoin/bitcoin/pull/20171#issuecomment-711731413,711731413,
MarcoFalke,2020-10-21 08:54:17,ACK f0fe840ace0d317dcde48d1f21554f884accbbf9,https://github.com/bitcoin/bitcoin/pull/20171#issuecomment-713417582,713417582,
ariard,2020-10-22 13:37:52,"Thanks @naumenkogs, @glozow for reviews, updated addressing your comments at c55ce67",https://github.com/bitcoin/bitcoin/pull/20171#issuecomment-714499928,714499928,
DrahtBot,2020-10-28 11:58:37,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20524 (test: Move MIN_VERSION_SUPPORTED to p2p.py by jnewbery)\n* #20277 (p2p: Stop processing unrequested transactions d",https://github.com/bitcoin/bitcoin/pull/20171#issuecomment-717885891,717885891,
ariard,2020-11-02 23:39:43,Thanks @jonatack. I think I took everything at bc4a230,https://github.com/bitcoin/bitcoin/pull/20171#issuecomment-720787559,720787559,
ariard,2020-12-10 16:25:58,"@naumenkogs @jonatack @glozow @MarcoFalke if you have few minutes to review again this PR, it hasn't changed and I think all previous considerations have been addressed.",https://github.com/bitcoin/bitcoin/pull/20171#issuecomment-742628449,742628449,
laanwj,2020-12-16 17:27:28,"ACK bc4a23008762702ffcd6868bcdb8fe2a732640ba\nThanks for adding a test for this.",https://github.com/bitcoin/bitcoin/pull/20171#issuecomment-746681603,746681603,
sipa,2020-10-16 22:40:09,Can you make the changes to the test framework in a separate commit?,https://github.com/bitcoin/bitcoin/pull/20171#discussion_r506750526,506750526,test/functional/p2p_segwit.py
sipa,2020-10-16 22:40:42,Wouldn't it be better to start mocking before the inv is sent? So that local timing doesn't matter?,https://github.com/bitcoin/bitcoin/pull/20171#discussion_r506750652,506750652,test/functional/p2p_tx_download.py
ariard,2020-10-17 15:26:14,"Sure, I did it at first before to squash. Split in two.",https://github.com/bitcoin/bitcoin/pull/20171#discussion_r506953789,506953789,test/functional/p2p_segwit.py
ariard,2020-10-17 15:27:50,"I think that's already done L223, we set mocktime for nodes 0 before it's even connected to the first p2p connection. Or do you have a more constraining definition of mocktime in mind ?",https://github.com/bitcoin/bitcoin/pull/20171#discussion_r506953932,506953932,test/functional/p2p_tx_download.py
naumenkogs,2020-10-19 07:11:13,`wait until` right above wouldn't allow this line to happen if `tx_getdata_count == 0`. So we're checking it's NOT more than 1? Is it a worthy check?... It has nothing to do with delays.,https://github.com/bitcoin/bitcoin/pull/20171#discussion_r507519684,507519684,test/functional/p2p_tx_download.py
naumenkogs,2020-10-19 07:13:16,perhaps also worth testing?,https://github.com/bitcoin/bitcoin/pull/20171#discussion_r507520694,507520694,test/functional/p2p_tx_download.py
naumenkogs,2020-10-19 07:16:38,"Shouldn't `NONPREF_PEER_TX_DELAY` also be applied here?\n\nAnyway, I'd first jump in `NONPREF_PEER_TX_DELAY` to see that it's not enough time passed, and then jump `TXID_RELAY_DELAY` again to see that enough time passed? I think that's what is supposed to happen..",https://github.com/bitcoin/bitcoin/pull/20171#discussion_r507522374,507522374,test/functional/p2p_tx_download.py
glozow,2020-10-20 15:52:27,"yeh, testnode `wait_until` grabs `p2p_lock` so this is redundant with L233",https://github.com/bitcoin/bitcoin/pull/20171#discussion_r508638848,508638848,test/functional/p2p_tx_download.py
glozow,2020-10-20 15:58:55,"Is this supposed to test that the node waits for the duration of `TXID_RELAY_DELAY`? Seems like it just confirms that the node doesn't send a getdata immediately, then sends it ~`TXID_RELAY_DELAY` later? I had imagined making `TestP2PConn` record the time at which it receives getdatas, then asserting that the time difference from sending the inv is at least `TXID_RELAY_DELAY`... don't think it cou",https://github.com/bitcoin/bitcoin/pull/20171#discussion_r508646124,508646124,test/functional/p2p_tx_download.py
ariard,2020-10-22 13:34:03,"Right, in fact it sounds other new functional tests added with #19988 have a redundant p2p lock tacking so added a new commit to remove this oversight. Unless @MarcoFalke they serve something else ?",https://github.com/bitcoin/bitcoin/pull/20171#discussion_r510165294,510165294,test/functional/p2p_tx_download.py
ariard,2020-10-22 13:34:11,Added a test mutation.,https://github.com/bitcoin/bitcoin/pull/20171#discussion_r510165388,510165388,test/functional/p2p_tx_download.py
ariard,2020-10-22 13:35:34,"The positive case was already tested in `test_preferred_inv` but added a mutation to cover the negative one, i.e applying `NONPREF_PEER_TX_DELAY` on non-preferred peers.",https://github.com/bitcoin/bitcoin/pull/20171#discussion_r510166460,510166460,test/functional/p2p_tx_download.py
ariard,2020-10-22 13:37:16,"I don't think you can achieve this with current p2p framework, we can write to the mocktime but can we read it from it ? A quick look, I don't find test doing it so not sure that's a feature of our current test framework. Note that was already the way done by legacy (pre-#19988) tx-download tests. But lmk if there is way to do so I don't see",https://github.com/bitcoin/bitcoin/pull/20171#discussion_r510167728,510167728,test/functional/p2p_tx_download.py
sipa,2020-10-22 23:17:22,"Oh, of course!",https://github.com/bitcoin/bitcoin/pull/20171#discussion_r510509388,510509388,test/functional/p2p_tx_download.py
glozow,2020-10-23 04:02:30,"> I don't find test doing it so not sure that's a feature of our current test framework\n\nYeah, I haven't seen an example either. The way I'd do it is just use `sleep()` instead of setmocktime... 2 seconds isn't too bad when the tests are running in parallel, but fosho not ideal.",https://github.com/bitcoin/bitcoin/pull/20171#discussion_r510581011,510581011,test/functional/p2p_tx_download.py
jonatack,2020-11-01 20:14:17,"```suggestion\nNONPREF_PEER_TX_DELAY = 2\n```",https://github.com/bitcoin/bitcoin/pull/20171#discussion_r515666481,515666481,test/functional/p2p_tx_download.py
jonatack,2020-11-01 20:15:30,"Tabs 4 spaces instead of 8, but you could also simplify here with\n```diff\n-            if glob_wtxid:\n-                    assert_equal(peer.tx_getdata_count, 0)\n-            else:\n-                    assert_equal(peer.tx_getdata_count, 1)\n+            assert_equal(peer.tx_getdata_count, 0 if glob_wtxid else 1)\n```\n",https://github.com/bitcoin/bitcoin/pull/20171#discussion_r515666639,515666639,test/functional/p2p_tx_download.py
jonatack,2020-11-01 20:16:11,"```suggestion\n        if message.nVersion >= 70016 and self.wtxidrelay:\n```",https://github.com/bitcoin/bitcoin/pull/20171#discussion_r515666688,515666688,test/functional/test_framework/p2p.py
ariard,2020-11-02 23:34:13,Taking it. Less is better.,https://github.com/bitcoin/bitcoin/pull/20171#discussion_r516332767,516332767,test/functional/p2p_tx_download.py
