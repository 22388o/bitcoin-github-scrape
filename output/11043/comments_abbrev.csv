practicalswift,2017-08-14T20:22:29Z,@sipa Nice catch! Fixed! :-),https://github.com/bitcoin/bitcoin/pull/11043#issuecomment-322298787,322298787,
laanwj,2017-08-15T07:47:44Z,"> Avoid resource leaks (specifically: forgetting to delete an object created using new)\n\nJust want to add that this is not a panacea. In a few places I've explicitly used manual pointer allocation/deallocation instead of unique_ptr (for globals) so to explicitly control the lifespan, because the order of deallocation matters. So in some of these cases, forgetting explicit `.reset()` is as bad ",https://github.com/bitcoin/bitcoin/pull/11043#issuecomment-322400187,322400187,
bytting,2017-08-15T07:56:41Z,"I like the concept, and encourage anyone who wants more meat on the bone to read Sutter's Mill articles about smart pointers\n\nhttps://herbsutter.com/gotw/\n",https://github.com/bitcoin/bitcoin/pull/11043#issuecomment-322402435,322402435,
practicalswift,2017-08-15T08:02:07Z,"@laanwj Absolutely true! My goal with this PR is to address only the trivial/safe cases :-)\n\nI know about the dependency on deconstruction order related to `LogPrintStr(…)` (`FILE* fileout`, `boost::mutex* mutexDebugLog` and `std::list<std::string>* vMsgsBeforeOpenLog`) - so these were intentionally excluded. Were you thinking about to those when mentioning spurious crashes at shutdown? :-)",https://github.com/bitcoin/bitcoin/pull/11043#issuecomment-322403858,322403858,
laanwj,2017-08-15T08:04:24Z,"> Were you thinking about to those when mentioning spurious crashes at shutdown? :-)\n\nNo, I'll comment inline.",https://github.com/bitcoin/bitcoin/pull/11043#issuecomment-322404468,322404468,
laanwj,2017-08-15T08:14:16Z,"I found two in a cursory look-over. There might be more instances where explicit `.reset` is important (where there was an explicit `delete` before), please be careful in reviewing this.\n\n> LogPrintStr(…) (FILE* fileout, boost::mutex* mutexDebugLog and std::list<std::string>* vMsgsBeforeOpenLog)\n> so these were intentionally excluded\n\nAgree with leaving these changes out for that ""magic""",https://github.com/bitcoin/bitcoin/pull/11043#issuecomment-322406773,322406773,
practicalswift,2017-08-15T08:30:04Z,@ryanofsky Thanks for reviewing! Great feedback - all items addressed.,https://github.com/bitcoin/bitcoin/pull/11043#issuecomment-322410507,322410507,
practicalswift,2017-08-16T14:21:05Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/11043#issuecomment-322787144,322787144,
laanwj,2017-08-22T07:43:20Z,Needs rebase again as #11007 was a subset of this.,https://github.com/bitcoin/bitcoin/pull/11043#issuecomment-323945944,323945944,
practicalswift,2017-08-22T08:04:58Z,@laanwj Done! :-),https://github.com/bitcoin/bitcoin/pull/11043#issuecomment-323950852,323950852,
practicalswift,2017-10-02T14:28:14Z,Rebased! :-),https://github.com/bitcoin/bitcoin/pull/11043#issuecomment-333551214,333551214,
practicalswift,2017-10-09T19:30:10Z,Anyone willing to review? I think this one should be ready for merge :-),https://github.com/bitcoin/bitcoin/pull/11043#issuecomment-335263086,335263086,
sipa,2017-10-12T23:04:09Z,utACK 3d7109971002358fbf62477068dc06f67234d2b4,https://github.com/bitcoin/bitcoin/pull/11043#issuecomment-336304440,336304440,
practicalswift,2017-10-17T17:00:30Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/11043#issuecomment-337297664,337297664,
practicalswift,2017-10-18T15:13:45Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/11043#issuecomment-337625162,337625162,
practicalswift,2017-10-31T19:16:04Z,"Thanks for the re-review @ryanofsky!\n\nAre we getting close to merge? :-)",https://github.com/bitcoin/bitcoin/pull/11043#issuecomment-340877254,340877254,
MarcoFalke,2017-10-31T19:26:15Z,"> Are we getting close to merge? :-)\n\nWe might want to wait until the 0.15.1 stuff is merged, to ease backports. Also, noting that some commits should be squashed before merge.",https://github.com/bitcoin/bitcoin/pull/11043#issuecomment-340880016,340880016,
promag,2017-10-31T19:27:14Z,utACK 0a38fb9.,https://github.com/bitcoin/bitcoin/pull/11043#issuecomment-340880296,340880296,
practicalswift,2017-10-31T19:30:32Z,@MarcoFalke Sounds good! Should I squash into one commit now or should I wait for further instructions?,https://github.com/bitcoin/bitcoin/pull/11043#issuecomment-340881212,340881212,
practicalswift,2017-11-09T15:54:11Z,Rebased! :-),https://github.com/bitcoin/bitcoin/pull/11043#issuecomment-343198288,343198288,
laanwj,2017-11-09T20:28:57Z,"Looks good to me now, utACK a357293",https://github.com/bitcoin/bitcoin/pull/11043#issuecomment-343281455,343281455,
sipa,2017-08-14T18:37:54Z,"How about\n\n```c++\nfeeStats = std::move(fileFeeStats);\nshortStats = std::move(fileShortStats);\nlongStats = std::move(fileLongStats);\n```\n",https://github.com/bitcoin/bitcoin/pull/11043#discussion_r133027662,133027662,src/policy/fees.cpp
ryanofsky,2017-08-14T21:33:50Z,"In commit ""Use unique_ptr for pdbCopy (Db)""\n\nIs this fixing a potential resource / memory leak? It seems like the pointer was only being freed conditionally below. Maybe update commit description to say how this is changing behavior, if it is changing behavior.",https://github.com/bitcoin/bitcoin/pull/11043#discussion_r133067590,133067590,src/wallet/db.cpp
ryanofsky,2017-08-14T21:43:02Z,"In commit ""Use unique_ptr for pcoinscatcher/pcoinsdbview/pcoinsTip/pblocktree""\n\nCan this variable just be deleted like the one in rpcnestedtests.h, since it is shadowing a global with the same name? If it can't be deleted, it would be good to have a comment noting that it does shadow the global (and maybe explaining why).",https://github.com/bitcoin/bitcoin/pull/11043#discussion_r133069514,133069514,src/test/test_bitcoin.h
laanwj,2017-08-15T08:05:25Z,add `httpRPCTimerInterface.reset()` after this,https://github.com/bitcoin/bitcoin/pull/11043#discussion_r133136169,133136169,src/httprpc.cpp
practicalswift,2017-08-15T08:08:56Z,@laanwj Thanks for reviewing! Fixed!,https://github.com/bitcoin/bitcoin/pull/11043#discussion_r133136726,133136726,src/httprpc.cpp
laanwj,2017-08-15T08:10:09Z,"add `pwalletMain.reset()` (this is not part of the WalletTestingSetup but a global, so needs to be cleaned up here and now)",https://github.com/bitcoin/bitcoin/pull/11043#discussion_r133136912,133136912,src/wallet/test/wallet_test_fixture.cpp
practicalswift,2017-08-15T08:15:25Z,Thanks! Fixed!,https://github.com/bitcoin/bitcoin/pull/11043#discussion_r133137761,133137761,src/wallet/test/wallet_test_fixture.cpp
