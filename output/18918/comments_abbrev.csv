MarcoFalke,2020-05-09 00:03:27,Concept ACK,https://github.com/bitcoin/bitcoin/pull/18918#issuecomment-626069441,626069441,
DrahtBot,2020-05-09 07:22:33,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18971 (wallet: Refactor the classes in wallet/db.{cpp/h} by achow101)\n* #18836 (wallet: upgradewallet fixes and addition",https://github.com/bitcoin/bitcoin/pull/18918#issuecomment-626121060,626121060,
laanwj,2020-05-13 18:25:16,"Concept ACK. Agree that this belongs in the wallet tool, not bitcoind.",https://github.com/bitcoin/bitcoin/pull/18918#issuecomment-628166195,628166195,
jonasschnelli,2020-05-13 18:34:47,"Concept ACK, ... finally.\nFollows the concept of #8745. There was already an attempt to add salvage to the wallet tool in #15307",https://github.com/bitcoin/bitcoin/pull/18918#issuecomment-628170919,628170919,
achow101,2020-05-15 23:49:43,"I've changed the final refactor commit into several smaller moves and changes. The final approach for salvage is also slightly different.\n\nInstead of having all of the salvage logic `wallettool.cpp`, I've moved instead put it in a `RecoverDatabaseFile` function in new `salvage.{cpp/h}` files. Additionally, instead of copying `ReadKeyValue`, I've exposed it and `CWalletScanState` in `walletdb.h",https://github.com/bitcoin/bitcoin/pull/18918#issuecomment-629551855,629551855,
jnewbery,2020-05-18 15:53:19,Concept ACK,https://github.com/bitcoin/bitcoin/pull/18918#issuecomment-630273946,630273946,
Empact,2020-05-18 17:59:32,Concept ACK,https://github.com/bitcoin/bitcoin/pull/18918#issuecomment-630344474,630344474,
Sjors,2020-05-19 08:42:29,"```\nwallet/walletdb.cpp:594:12: error: calling function 'ReadKeyValue' requires holding mutex 'pwallet->cs_wallet' exclusively [-Werror,-Wthread-safety-analysis]\n1647    return ReadKeyValue(pwallet, ssKey, ssValue, dummy_wss, strType, strErr);\n```",https://github.com/bitcoin/bitcoin/pull/18918#issuecomment-630676951,630676951,
ryanofsky,2020-05-19 23:17:39,"To all reviewers who concepted ACKed here, I'd encourage reviewing the code, too. This PR is really well structured and easy to understand and after the first commit is just a series of moves and simplifications with no other changes. Very easy.",https://github.com/bitcoin/bitcoin/pull/18918#issuecomment-631137009,631137009,
MarcoFalke,2020-05-21 17:40:20,"> To all reviewers who concepted ACKed here\n\nOk, I hereby commit to reviewing this when the previous review comments have been addressed.",https://github.com/bitcoin/bitcoin/pull/18918#issuecomment-632245937,632245937,
achow101,2020-05-25 17:21:01,"> but attempting to run `bitcoin-wallet -regtest -wallet=test salvage` returns `DB_ENV->dbrename: method not permitted before handle's open method`.\n\nFixed. Turns out we still have to go through the whole `WalletDatbase::Create` and `VerifyEnvironment` song and dance before recovery can be done.\n\nAlso added a basic functional test to check that salvage on a new wallet does not have issues.",https://github.com/bitcoin/bitcoin/pull/18918#issuecomment-633659174,633659174,
jonatack,2020-05-25 17:45:48,Thanks -- at 84ae0578b6c the bitcoin-wallet salvage command now runs and exits. Yay! but it doesn't leave any feedback. A message that the wallet was successfully salvaged might be reassuring?,https://github.com/bitcoin/bitcoin/pull/18918#issuecomment-633665901,633665901,
jonatack,2020-05-25 17:54:09,"ACK 84ae0578b6c68dda145ca65fef510ce0fdac0d7b feedback taken, and compared to my previous review, the bitcoin-wallet salvage command now seems to run and it exits without raising. The new test passes at both 9454105 and 84ae057 so as a sanity check I'd agree there is room for improvement, if possible.\n",https://github.com/bitcoin/bitcoin/pull/18918#issuecomment-633668307,633668307,
MarcoFalke,2020-05-26 11:51:35,"re-ACK 84ae0578b6 üèâ\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nre-ACK 84ae0578b6 üèâ\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjebwv/XkWDTfbKudR9e0H8atjyYFTG7ra0mC6wBPs6Apbj4CIhGGrrVeT/zEYu\nPUPAUO6/RJVD+nBPQTCajQ+/a7kkaRzR9W+Huu+1xXXJE",https://github.com/bitcoin/bitcoin/pull/18918#issuecomment-633977107,633977107,
practicalswift,2020-05-26 18:12:09,Concept ACK: thanks for doing this! :),https://github.com/bitcoin/bitcoin/pull/18918#issuecomment-634190224,634190224,
Empact,2020-05-26 18:35:05,Code Review ACK https://github.com/bitcoin/bitcoin/pull/18918/commits/84ae0578b6c68dda145ca65fef510ce0fdac0d7b,https://github.com/bitcoin/bitcoin/pull/18918#issuecomment-634202268,634202268,
MarcoFalke,2020-05-09 00:02:37,Would be nice to keep this test or at least document that salvagewallet will throw away your keys: #7379 ,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r422424816,422424816,test/functional/wallet_basic.py
ryanofsky,2020-05-15 19:46:04,"In commit ""wallet: remove -salvagewallet"" (8ef1b45b4d3de71214da1a6bc6e09f6e9a14d7d4)\n\n> Would be nice to keep this test or at least document that salvagewallet will throw away your keys: #7379\n\n@MarcoFalke could you describe the test or comment you would add? It sounds there is a good suggestion here, but I don't understand it's asking for",https://github.com/bitcoin/bitcoin/pull/18918#discussion_r426013039,426013039,test/functional/wallet_basic.py
ryanofsky,2020-05-15 20:25:24,"In commit ""walletool: Move salvage wallet implementation into wallettool"" (67e30b2b42b4d710739e6fe303cbca69be68032c)\n\nWould be nice to move this to src/wallet/salvage.{h,cpp} so wallet tool file does not become monolithic and so salvage functionality can be more easily tested and improved and perhaps accessible to future RPC or GUI recovery features",https://github.com/bitcoin/bitcoin/pull/18918#discussion_r426030169,426030169,src/wallet/wallettool.cpp
MarcoFalke,2020-05-15 21:28:41,"> @MarcoFalke could you describe the test or comment you would add? It sounds there is a good suggestion here, but I don't understand it's asking for\n\nThe new functionality has zero tests. I was hoping we could call `wallet-tool salvage` instead of `bitcoind -salvagewallet` here. Just because the test is commented out, doesn't mean it should be removed.\n\nIf the test still fails occasionall",https://github.com/bitcoin/bitcoin/pull/18918#discussion_r426055478,426055478,test/functional/wallet_basic.py
achow101,2020-05-15 22:05:07,"The behavior of salvage shouldn't be any different, so it will probably still fail as the previous `-salvagewallet` did.\n\nIt's also not clear to me what a salvage test should even look like.",https://github.com/bitcoin/bitcoin/pull/18918#discussion_r426067115,426067115,test/functional/wallet_basic.py
achow101,2020-05-15 23:46:53,I've added a salvage.{cpp/h} and put the salvage stuff in there.,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r426090798,426090798,src/wallet/wallettool.cpp
achow101,2020-05-15 23:56:46,I've added a placeholder test with a todo that mentions the issue in `tool_wallet.py`.,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r426092501,426092501,test/functional/wallet_basic.py
Empact,2020-05-16 01:38:45,`WalletBatch::Recover` two-argument version is unused as of commit: 1372aba35fa91dd2fb4103ed7081a057f9794564,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r426104866,426104866,src/wallet/walletdb.cpp
Empact,2020-05-16 01:44:55,"Nevermind, I see you got it in 61a1e5702d0dfd3cfb6d4deb28df516a7243e196",https://github.com/bitcoin/bitcoin/pull/18918#discussion_r426105502,426105502,src/wallet/walletdb.cpp
Empact,2020-05-16 01:47:04,"Given the `CWalletScanState` isn't used, how about exposing a more limited version of `ReadKeyValue` instead?",https://github.com/bitcoin/bitcoin/pull/18918#discussion_r426105705,426105705,src/wallet/salvage.cpp
Sjors,2020-05-18 10:25:44,"In 1372aba35fa91dd2fb4103ed7081a057f9794564: maybe add ""or restore from a backup.""",https://github.com/bitcoin/bitcoin/pull/18918#discussion_r426524966,426524966,src/wallet/db.cpp
achow101,2020-05-18 16:46:12,I've done that instead.,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r426761634,426761634,src/wallet/salvage.cpp
achow101,2020-05-18 16:48:16,Done,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r426762807,426762807,src/wallet/db.cpp
Empact,2020-05-18 17:34:20,nit: could pass this through by reference,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r426788261,426788261,src/wallet/wallettool.cpp
Empact,2020-05-18 17:41:16,nit: this is no longer used,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r426791865,426791865,src/wallet/db.cpp
Empact,2020-05-18 17:42:15,"nit: How about returning the `verify` result so we can log the error:\nhttps://docs.oracle.com/cd/E17276_01/html/api_reference/C/dbverify.html",https://github.com/bitcoin/bitcoin/pull/18918#discussion_r426792345,426792345,src/wallet/db.cpp
Empact,2020-05-18 17:45:47,nit: I'm not sure this comment is helpful,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r426794279,426794279,src/wallet/db.cpp
ryanofsky,2020-05-19 22:06:21,"In commit ""wallettool: Add a salvage command"" (502024795a32c4600a294da10ad908f796e0cdac)\n\nNote for reviewers: this is just a copy of existing `CWallet::Verify` code\n\nhttps://github.com/bitcoin/bitcoin/blob/51825aea7fa068877ea77e3121def58005df3510/src/wallet/wallet.cpp#L3697-L3704\n\nremoved in the next commit ""wallet: remove -salvagewallet"" (7116e0c73514438ba240827aaddf922d0c1c9d84)",https://github.com/bitcoin/bitcoin/pull/18918#discussion_r427627923,427627923,src/wallet/wallettool.cpp
ryanofsky,2020-05-19 22:14:25,"In commit ""wallet: remove -salvagewallet"" (7116e0c73514438ba240827aaddf922d0c1c9d84)\n\nThis is ok, but it'd be possible (and nice) to have a test that invokes salvagewallet tool doing basic checks like does it exit successfully.",https://github.com/bitcoin/bitcoin/pull/18918#discussion_r427631232,427631232,test/functional/tool_wallet.py
ryanofsky,2020-05-19 22:34:12,"In commit ""Move BerkeleyEnvironment::Salvage into BerkeleyBatch::Recover"" (dca31bd5bc820da889394d15a9337ef96262ee4c)\n\nThis comment (especially the part about loading to memory) makes code easier to understand and IMO would be good to move to the new location in the verify function. Skip if it is a pain though",https://github.com/bitcoin/bitcoin/pull/18918#discussion_r427638507,427638507,src/wallet/db.h
achow101,2020-05-21 17:46:34,I don't think the results of `verify` are meaningful.,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r428811885,428811885,src/wallet/db.cpp
achow101,2020-05-21 18:34:15,Done,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r428837781,428837781,src/wallet/wallettool.cpp
achow101,2020-05-21 18:34:23,Removed,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r428837845,428837845,src/wallet/db.cpp
achow101,2020-05-21 18:34:30,Removed,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r428837898,428837898,src/wallet/db.cpp
achow101,2020-05-21 18:39:35,I've added a rewording of this comment back in.,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r428840595,428840595,src/wallet/db.h
MarcoFalke,2020-05-22 12:44:33,"in commit 7f6a5f3fff6e71108289ba9c9bfc5a938a081a79:\n\nWhy ignore the return value?",https://github.com/bitcoin/bitcoin/pull/18918#discussion_r429224090,429224090,src/wallet/wallettool.cpp
MarcoFalke,2020-05-22 13:08:47,"in commit 6c3afd67d2:\n\nWhy is this set all the way up here? The outcome is only needed to remember whether the end of the stream was reached or not. I think it should be defined after the last write to `keyHex`, but still before this code block:\n\nAlso, you could leave it uninitialized because every if branch will initialize it. If none does the initialization, at least a sanitizer could ye",https://github.com/bitcoin/bitcoin/pull/18918#discussion_r429235553,429235553,src/wallet/db.cpp
MarcoFalke,2020-05-22 13:13:25,"in commit 6d05dff02b:\n\nwallet is a reference to an object (like all other params in this function), so it should probably be passed as one.\n\nNot sure about the lock annotation, but it is a bit confusing to lock cs_wallet, and then call a function that locks it again immediately after\n\n```suggestion\nbool ReadKeyValue(CWallet& wallet, CDataStream& ssKey, CDataStream& ssValue, std::stri",https://github.com/bitcoin/bitcoin/pull/18918#discussion_r429237809,429237809,src/wallet/walletdb.h
MarcoFalke,2020-05-22 13:18:49,"in commit 6d05dff02be9e113ac6f835:\n\nThe now unused `CWalletScanState dummyWss;` a few lines up should now be removed.",https://github.com/bitcoin/bitcoin/pull/18918#discussion_r429240474,429240474,src/wallet/walletdb.cpp
achow101,2020-05-22 16:39:15,It was to reduce the amount of changes being done in a move commit.,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r429346864,429346864,src/wallet/db.cpp
achow101,2020-05-22 16:40:43,The annotation causes a compile error as `CWallet` is not yet defined.,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r429347520,429347520,src/wallet/walletdb.h
MarcoFalke,2020-05-22 16:58:51,Fair enough,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r429357280,429357280,src/wallet/walletdb.h
Empact,2020-05-22 18:38:40,This `warnings` argument is now unused.,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r429399582,429399582,src/wallet/db.cpp
jonatack,2020-05-25 14:03:20,521e731 user-facing nit if you retouch: s/backup/backup./,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r429951866,429951866,src/wallet/db.cpp
jonatack,2020-05-25 14:14:00,6c3afd67 nit: s/appendedto/appended to/,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r429957071,429957071,src/wallet/salvage.cpp
jonatack,2020-05-25 14:22:41,6d05dff nit: s/give/given/,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r429961257,429961257,src/wallet/walletdb.h
jonatack,2020-05-25 14:35:01,39a82fed nit: sort,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r429967147,429967147,src/wallet/wallettool.cpp
jonatack,2020-05-25 14:53:20,521e731e seconding @Empact's observation that `warnings` can be removed with the other changes to `VerifyDatabaseFile` in this commit,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r429975677,429975677,src/wallet/db.cpp
jonatack,2020-05-25 15:06:53,"35a1f948 `RecoverDatabaseFile` contains a fair amount of code to set and return bool `fSuccess`, but the value returned doesn't appear to be used. Is this logic needed?",https://github.com/bitcoin/bitcoin/pull/18918#discussion_r429981672,429981672,src/wallet/salvage.cpp
achow101,2020-05-25 17:16:36,I've added a very basic test that  just checks it runs and exits without error on a new wallet.,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r430024240,430024240,test/functional/tool_wallet.py
achow101,2020-05-25 17:16:46,Changed to return it.,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r430024279,430024279,src/wallet/wallettool.cpp
achow101,2020-05-25 17:18:18,Changed.,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r430024704,430024704,src/wallet/db.cpp
achow101,2020-05-25 17:18:41,Removed,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r430024803,430024803,src/wallet/walletdb.cpp
achow101,2020-05-25 17:18:49,Removed,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r430024832,430024832,src/wallet/db.cpp
achow101,2020-05-25 17:19:02,Done,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r430024868,430024868,src/wallet/db.cpp
achow101,2020-05-25 17:19:06,Done,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r430024890,430024890,src/wallet/salvage.cpp
achow101,2020-05-25 17:19:11,Done,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r430024907,430024907,src/wallet/walletdb.h
achow101,2020-05-25 17:19:19,Done,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r430024931,430024931,src/wallet/wallettool.cpp
achow101,2020-05-25 17:19:29,The return value is being checked now.,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r430024967,430024967,src/wallet/salvage.cpp
jonatack,2020-05-26 08:56:45,"Tests for the different exceptions would be great. Not sure on this, or on the need for an EOL `\n` in line 117 just above.\n```suggestion\n        tfm::format(std::cerr, ""Failed to open wallet for salvage: %s\n"", error_string.original);\n```",https://github.com/bitcoin/bitcoin/pull/18918#discussion_r430259244,430259244,src/wallet/wallettool.cpp
achow101,2020-05-26 16:47:56,Will fix if I have to push another change.,https://github.com/bitcoin/bitcoin/pull/18918#discussion_r430560436,430560436,src/wallet/wallettool.cpp
