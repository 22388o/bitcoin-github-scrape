[
  {
    "sha": "56e527e3052013630d4de33b10bbbb2bf613b937",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NmU1MjdlMzA1MjAxMzYzMGQ0ZGUzM2IxMGJiYmIyYmY2MTNiOTM3",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-10-22T06:40:26Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-10-22T06:40:26Z"
      },
      "message": "only style-fixes (spaces, new-lines and indentation)",
      "tree": {
        "sha": "87d29873664606953ec6dcb1216f5b41d0925588",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/87d29873664606953ec6dcb1216f5b41d0925588"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/56e527e3052013630d4de33b10bbbb2bf613b937",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56e527e3052013630d4de33b10bbbb2bf613b937",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/56e527e3052013630d4de33b10bbbb2bf613b937",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56e527e3052013630d4de33b10bbbb2bf613b937/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "be484db274e6de7e7b6880d04b2d84e20b719b9a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be484db274e6de7e7b6880d04b2d84e20b719b9a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/be484db274e6de7e7b6880d04b2d84e20b719b9a"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 19,
      "deletions": 24
    },
    "files": [
      {
        "sha": "7d0559716385eae5a6166d71f74ca4c352f696da",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56e527e3052013630d4de33b10bbbb2bf613b937/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56e527e3052013630d4de33b10bbbb2bf613b937/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=56e527e3052013630d4de33b10bbbb2bf613b937",
        "patch": "@@ -431,8 +431,7 @@ bool CDB::Rewrite(const string& strFile, const char* pszSkip)\n void CDBEnv::Flush(bool fShutdown)\n {\n     int64 nStart = GetTimeMillis();\n-    // Flush log data to the actual data file\n-    //  on all files that are not in use\n+    // Flush log data to the actual data file on all files that are not in use\n     LogPrint(\"db\", \"Flush(%s)%s\\n\", fShutdown ? \"true\" : \"false\", fDbEnvInit ? \"\" : \" db not started\");\n     if (!fDbEnvInit)\n         return;"
      },
      {
        "sha": "586b93355cf798da29feb886137358f50a8d1ac0",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 9,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56e527e3052013630d4de33b10bbbb2bf613b937/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56e527e3052013630d4de33b10bbbb2bf613b937/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=56e527e3052013630d4de33b10bbbb2bf613b937",
        "patch": "@@ -3360,9 +3360,6 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n     }\n \n \n-\n-\n-\n     if (strCommand == \"version\")\n     {\n         // Each connection can only send one version message\n@@ -3419,7 +3416,6 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n \n         pfrom->fClient = !(pfrom->nServices & NODE_NETWORK);\n \n-\n         // Change version\n         pfrom->PushMessage(\"verack\");\n         pfrom->ssSend.SetVersion(min(pfrom->nVersion, PROTOCOL_VERSION));\n@@ -3851,10 +3847,10 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         size_t nAvail = vRecv.in_avail();\n         bool bPingFinished = false;\n         std::string sProblem;\n-        \n+\n         if (nAvail >= sizeof(nonce)) {\n             vRecv >> nonce;\n-        \n+\n             // Only process pong message if there is an outstanding ping (old ping without nonce should never pong)\n             if (pfrom->nPingNonceSent != 0) {\n                 if (nonce == pfrom->nPingNonceSent) {\n@@ -3885,7 +3881,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n             bPingFinished = true;\n             sProblem = \"Short payload\";\n         }\n-        \n+\n         if (!(sProblem.empty())) {\n             LogPrint(\"net\", \"pong %s %s: %s, %\"PRI64x\" expected, %\"PRI64x\" received, %\"PRIszu\" bytes\\n\",\n                 pfrom->addr.ToString().c_str(),\n@@ -3899,8 +3895,8 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n             pfrom->nPingNonceSent = 0;\n         }\n     }\n-    \n-    \n+\n+\n     else if (strCommand == \"alert\")\n     {\n         CAlert alert;"
      },
      {
        "sha": "0ad5977e7bcac8946447dd05d5dbce25022167a0",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56e527e3052013630d4de33b10bbbb2bf613b937/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56e527e3052013630d4de33b10bbbb2bf613b937/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=56e527e3052013630d4de33b10bbbb2bf613b937",
        "patch": "@@ -27,7 +27,7 @@ Value ping(const Array& params, bool fHelp)\n             \"Requests that a ping be sent to all other nodes, to measure ping time.\\n\"\n             \"Results provided in getpeerinfo, pingtime and pingwait fields are decimal seconds.\\n\"\n             \"Ping command is handled in queue with all other commands, so it measures processing backlog, not just network ping.\");\n-    \n+\n     // Request that each node send a ping during next message processing pass\n     LOCK(cs_vNodes);\n     BOOST_FOREACH(CNode* pNode, vNodes) {"
      },
      {
        "sha": "9e4a598186fb5b0d8a815186cf713aff8c6e408d",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56e527e3052013630d4de33b10bbbb2bf613b937/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56e527e3052013630d4de33b10bbbb2bf613b937/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=56e527e3052013630d4de33b10bbbb2bf613b937",
        "patch": "@@ -70,26 +70,26 @@ Value getinfo(const Array& params, bool fHelp)\n     GetProxy(NET_IPV4, proxy);\n \n     Object obj;\n-    obj.push_back(Pair(\"version\",       (int)CLIENT_VERSION));\n-    obj.push_back(Pair(\"protocolversion\",(int)PROTOCOL_VERSION));\n+    obj.push_back(Pair(\"version\",           (int)CLIENT_VERSION));\n+    obj.push_back(Pair(\"protocolversion\",   (int)PROTOCOL_VERSION));\n     if (pwalletMain) {\n         obj.push_back(Pair(\"walletversion\", pwalletMain->GetVersion()));\n         obj.push_back(Pair(\"balance\",       ValueFromAmount(pwalletMain->GetBalance())));\n     }\n-    obj.push_back(Pair(\"blocks\",        (int)chainActive.Height()));\n-    obj.push_back(Pair(\"timeoffset\",    (boost::int64_t)GetTimeOffset()));\n-    obj.push_back(Pair(\"connections\",   (int)vNodes.size()));\n-    obj.push_back(Pair(\"proxy\",         (proxy.first.IsValid() ? proxy.first.ToStringIPPort() : string())));\n-    obj.push_back(Pair(\"difficulty\",    (double)GetDifficulty()));\n-    obj.push_back(Pair(\"testnet\",       TestNet()));\n+    obj.push_back(Pair(\"blocks\",            (int)chainActive.Height()));\n+    obj.push_back(Pair(\"timeoffset\",        (boost::int64_t)GetTimeOffset()));\n+    obj.push_back(Pair(\"connections\",       (int)vNodes.size()));\n+    obj.push_back(Pair(\"proxy\",             (proxy.first.IsValid() ? proxy.first.ToStringIPPort() : string())));\n+    obj.push_back(Pair(\"difficulty\",        (double)GetDifficulty()));\n+    obj.push_back(Pair(\"testnet\",           TestNet()));\n     if (pwalletMain) {\n         obj.push_back(Pair(\"keypoololdest\", (boost::int64_t)pwalletMain->GetOldestKeyPoolTime()));\n         obj.push_back(Pair(\"keypoolsize\",   (int)pwalletMain->GetKeyPoolSize()));\n     }\n-    obj.push_back(Pair(\"paytxfee\",      ValueFromAmount(nTransactionFee)));\n+    obj.push_back(Pair(\"paytxfee\",          ValueFromAmount(nTransactionFee)));\n     if (pwalletMain && pwalletMain->IsCrypted())\n         obj.push_back(Pair(\"unlocked_until\", (boost::int64_t)nWalletUnlockTime));\n-    obj.push_back(Pair(\"errors\",        GetWarnings(\"statusbar\")));\n+    obj.push_back(Pair(\"errors\",            GetWarnings(\"statusbar\")));\n     return obj;\n }\n "
      },
      {
        "sha": "4bd9b7095ed2acc6c6ce6639b4b55fbcf3a96dde",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56e527e3052013630d4de33b10bbbb2bf613b937/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56e527e3052013630d4de33b10bbbb2bf613b937/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=56e527e3052013630d4de33b10bbbb2bf613b937",
        "patch": "@@ -1377,4 +1377,4 @@ class CBufferedFile\n     }\n };\n \n-#endif\n+#endif // BITCOIN_SERIALIZE_H"
      },
      {
        "sha": "af0b9151c082793749d2c95154ebdb09703278cd",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56e527e3052013630d4de33b10bbbb2bf613b937/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56e527e3052013630d4de33b10bbbb2bf613b937/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=56e527e3052013630d4de33b10bbbb2bf613b937",
        "patch": "@@ -115,7 +115,7 @@ inline void MilliSleep(int64 n)\n #elif defined(HAVE_WORKING_BOOST_SLEEP)\n     boost::this_thread::sleep(boost::posix_time::milliseconds(n));\n #else\n-  //should never get here\n+//should never get here\n #error missing boost sleep implementation\n #endif\n }"
      }
    ]
  }
]