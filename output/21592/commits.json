[
  {
    "sha": "fa732bccb3cf9bc2cdc444975286df0e799917a2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTczMmJjY2IzY2Y5YmMyY2RjNDQ0OTc1Mjg2ZGYwZTc5OTkxN2Ey",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-04T09:52:44Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-08T06:58:44Z"
      },
      "message": "test: Use compressed keys in TestChain100Setup\n\ncoinbaseKey.MakeNewKey(true); creates a compressed key and there is no reason\nfor the deterministic setup to use uncompressed ones.",
      "tree": {
        "sha": "e5a89212f42a3a4e41936f7b2df4a9dc9253042a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e5a89212f42a3a4e41936f7b2df4a9dc9253042a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa732bccb3cf9bc2cdc444975286df0e799917a2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhSRAwAszpIfRMAms+n01d8R6fbZXeOxrrYPQZxf0YB/K1JEmYfa7qjUZcn2WHg\nOXca7knZ9ntmcCj1ye4tpJ5eF/se0z7BNohfNJmb87BMLdLubQHwqsPkO7UhHpRL\nuAFkVQBk6RTTS+fX2Mqb2zoiH+7i+bo8Nnbmw2uySPtemrg7YOgXyodC6HJ377KG\n7mGXqVDEmL1BhmE5aTeVTdwRLCQUkk3Z8QqPhRQ5MVbkSUWlR1YVLybJqeG3ajol\nqoCMk04gL5DnB0vjOGdh4qVFoSgrSonQ/Y3ojTY2yrankG4241GURG/JN9QrY1wY\nnU9EU1Jhr1ALu6T/0f6OxzfC9MtCXKLCfR1vG0cCpKqMB1+ss3TC773YIwlTLKUe\nKwC9zq3OwvgoAo4cdMZztUGum0iTlTVijl+TOrqDckaWKyW+gXxb5znGh10j2PAa\nIBviV8SDs97c1KWRLnmIzmIko8t3zStgRW3G3nUKYHOP8OPsMq9WcE1I4Vv+GfRP\nHYDkvcYj\n=Dl31\n-----END PGP SIGNATURE-----",
        "payload": "tree e5a89212f42a3a4e41936f7b2df4a9dc9253042a\nparent aa69471ecd553dbcd7dd6d1b2e59dfb69d6a0cf3\nauthor MarcoFalke <falke.marco@gmail.com> 1617529964 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1617865124 +0200\n\ntest: Use compressed keys in TestChain100Setup\n\ncoinbaseKey.MakeNewKey(true); creates a compressed key and there is no reason\nfor the deterministic setup to use uncompressed ones.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa732bccb3cf9bc2cdc444975286df0e799917a2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa732bccb3cf9bc2cdc444975286df0e799917a2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa732bccb3cf9bc2cdc444975286df0e799917a2/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "aa69471ecd553dbcd7dd6d1b2e59dfb69d6a0cf3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aa69471ecd553dbcd7dd6d1b2e59dfb69d6a0cf3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/aa69471ecd553dbcd7dd6d1b2e59dfb69d6a0cf3"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "3e778838562d6a56c5e6856e1d1655338e3a36fc",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa732bccb3cf9bc2cdc444975286df0e799917a2/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa732bccb3cf9bc2cdc444975286df0e799917a2/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=fa732bccb3cf9bc2cdc444975286df0e799917a2",
        "patch": "@@ -441,7 +441,7 @@ class CRegTestParams : public CChainParams {\n         m_assumeutxo_data = MapAssumeutxo{\n             {\n                 110,\n-                {uint256S(\"0x76fd7334ac7c1baf57ddc0c626f073a655a35d98a4258cd1382c8cc2b8392e10\"), 110},\n+                {uint256S(\"0x1ebbf5850204c0bdb15bf030f47c7fe91d45c44c712697e4509ba67adb01c618\"), 110},\n             },\n             {\n                 210,"
      },
      {
        "sha": "2f3e7aee5de84a28046dfdfe96511cf7fcd92335",
        "filename": "src/test/util/setup_common.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa732bccb3cf9bc2cdc444975286df0e799917a2/src/test/util/setup_common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa732bccb3cf9bc2cdc444975286df0e799917a2/src/test/util/setup_common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.cpp?ref=fa732bccb3cf9bc2cdc444975286df0e799917a2",
        "patch": "@@ -213,7 +213,7 @@ TestChain100Setup::TestChain100Setup(bool deterministic)\n                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1\n             }\n         };\n-        coinbaseKey.Set(vchKey.begin(), vchKey.end(), false);\n+        coinbaseKey.Set(vchKey.begin(), vchKey.end(), true);\n     } else {\n         coinbaseKey.MakeNewKey(true);\n     }\n@@ -225,7 +225,7 @@ TestChain100Setup::TestChain100Setup(bool deterministic)\n         LOCK(::cs_main);\n         assert(\n             m_node.chainman->ActiveChain().Tip()->GetBlockHash().ToString() ==\n-            \"49c95db1e470fed04496d801c9d8fbb78155d2c7f855232c918823d2c17d0cf6\");\n+            \"571d80a9967ae599cec0448b0b0ba1cfb606f584d8069bd7166b86854ba7a191\");\n     }\n }\n "
      },
      {
        "sha": "d0317aca0a401ad75db2d18e689748bcd973150d",
        "filename": "src/test/validation_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa732bccb3cf9bc2cdc444975286df0e799917a2/src/test/validation_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa732bccb3cf9bc2cdc444975286df0e799917a2/src/test/validation_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validation_tests.cpp?ref=fa732bccb3cf9bc2cdc444975286df0e799917a2",
        "patch": "@@ -135,7 +135,7 @@ BOOST_AUTO_TEST_CASE(test_assumeutxo)\n     }\n \n     const auto out110 = *ExpectedAssumeutxo(110, *params);\n-    BOOST_CHECK_EQUAL(out110.hash_serialized, uint256S(\"76fd7334ac7c1baf57ddc0c626f073a655a35d98a4258cd1382c8cc2b8392e10\"));\n+    BOOST_CHECK_EQUAL(out110.hash_serialized, uint256S(\"1ebbf5850204c0bdb15bf030f47c7fe91d45c44c712697e4509ba67adb01c618\"));\n     BOOST_CHECK_EQUAL(out110.nChainTx, (unsigned int)110);\n \n     const auto out210 = *ExpectedAssumeutxo(210, *params);"
      }
    ]
  },
  {
    "sha": "fa6183d7761eef8bb815aa888f0396e92e275f05",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTYxODNkNzc2MWVlZjhiYjgxNWFhODg4ZjAzOTZlOTJlMjc1ZjA1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-04T08:50:12Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-08T06:59:00Z"
      },
      "message": "test: Remove option to make TestChain100Setup non-deterministic\n\nSeems odd to have an option for non-deterministic tests\nwhen the goal should be for all tests to be deterministic.\n\nCan be reviewed with `--ignore-all-space`.",
      "tree": {
        "sha": "0fa3bd2c44ebe7522e2f1ca68651d31881831b21",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0fa3bd2c44ebe7522e2f1ca68651d31881831b21"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa6183d7761eef8bb815aa888f0396e92e275f05",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjulwv+Knp1n5xqlJAeCIRiUa+K3uumk1a9JNUGCGtXtmoVHz5PbwEv1VXCS/Zj\nL1WS61DSc3RENgPCAsxBeUoZjuOw1HRbz5VPyxxfMPhf3h22ImRHcQV59PR7bNky\n+Hgo9nfJBAtD3DfkFBeLsQlFyEg9bdL3qcMn/FQwjwWFdbfgt7OXPvq9Py65JdB9\nkKS3e8NRCfszf2LrP3kH0d/+nhZNvt8lBpsQn0pOTrsF0Zxc6395pntEbLBlN/YF\n52qbYoG0qUXfrVwjmKEvrHrArvU0d3rpjmIa8+KabGr1BHC0qN2LGmPtmBY9MSKZ\nxxvDS5TAWDb932YsjT3Hzq9yr64VZ/MNj/HYpDZyG/JF+R+2YZjSR/s44KL55mUY\ngmqFZmruWhc3O/Yudz4BxcbS85Bem7cUF+/40GhG5l2MrjBNSazPHI3gwlDMLRo/\nduJr90i3ssl0P0q7gXtOVe/fizwPlFm2K3lMhM2cNqYTIj1I2ghBRgy6XVQtCR1i\n63AE4Kj6\n=E90L\n-----END PGP SIGNATURE-----",
        "payload": "tree 0fa3bd2c44ebe7522e2f1ca68651d31881831b21\nparent fa732bccb3cf9bc2cdc444975286df0e799917a2\nauthor MarcoFalke <falke.marco@gmail.com> 1617526212 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1617865140 +0200\n\ntest: Remove option to make TestChain100Setup non-deterministic\n\nSeems odd to have an option for non-deterministic tests\nwhen the goal should be for all tests to be deterministic.\n\nCan be reviewed with `--ignore-all-space`.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa6183d7761eef8bb815aa888f0396e92e275f05",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa6183d7761eef8bb815aa888f0396e92e275f05",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa6183d7761eef8bb815aa888f0396e92e275f05/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa732bccb3cf9bc2cdc444975286df0e799917a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa732bccb3cf9bc2cdc444975286df0e799917a2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa732bccb3cf9bc2cdc444975286df0e799917a2"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 11,
      "deletions": 31
    },
    "files": [
      {
        "sha": "2d7f335a048a828aa1f73ea6d877f58cf7cdb051",
        "filename": "src/test/util/setup_common.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 23,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa6183d7761eef8bb815aa888f0396e92e275f05/src/test/util/setup_common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa6183d7761eef8bb815aa888f0396e92e275f05/src/test/util/setup_common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.cpp?ref=fa6183d7761eef8bb815aa888f0396e92e275f05",
        "patch": "@@ -202,26 +202,17 @@ TestingSetup::TestingSetup(const std::string& chainName, const std::vector<const\n     }\n }\n \n-TestChain100Setup::TestChain100Setup(bool deterministic)\n+TestChain100Setup::TestChain100Setup()\n {\n-    m_deterministic = deterministic;\n-\n-    if (m_deterministic) {\n-        SetMockTime(1598887952);\n-        constexpr std::array<unsigned char, 32> vchKey = {\n-            {\n-                0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1\n-            }\n-        };\n-        coinbaseKey.Set(vchKey.begin(), vchKey.end(), true);\n-    } else {\n-        coinbaseKey.MakeNewKey(true);\n-    }\n+    SetMockTime(1598887952);\n+    constexpr std::array<unsigned char, 32> vchKey = {\n+        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1}};\n+    coinbaseKey.Set(vchKey.begin(), vchKey.end(), true);\n \n     // Generate a 100-block chain:\n     this->mineBlocks(COINBASE_MATURITY);\n \n-    if (m_deterministic) {\n+    {\n         LOCK(::cs_main);\n         assert(\n             m_node.chainman->ActiveChain().Tip()->GetBlockHash().ToString() ==\n@@ -232,13 +223,10 @@ TestChain100Setup::TestChain100Setup(bool deterministic)\n void TestChain100Setup::mineBlocks(int num_blocks)\n {\n     CScript scriptPubKey = CScript() << ToByteVector(coinbaseKey.GetPubKey()) << OP_CHECKSIG;\n-    for (int i = 0; i < num_blocks; i++)\n-    {\n+    for (int i = 0; i < num_blocks; i++) {\n         std::vector<CMutableTransaction> noTxns;\n         CBlock b = CreateAndProcessBlock(noTxns, scriptPubKey);\n-        if (m_deterministic) {\n-            SetMockTime(GetTime() + 1);\n-        }\n+        SetMockTime(GetTime() + 1);\n         m_coinbase_txns.push_back(b.vtx[0]);\n     }\n }\n@@ -315,9 +303,7 @@ CMutableTransaction TestChain100Setup::CreateValidMempoolTransaction(CTransactio\n TestChain100Setup::~TestChain100Setup()\n {\n     gArgs.ForceSetArg(\"-segwitheight\", \"0\");\n-    if (m_deterministic) {\n-        SetMockTime(0);\n-    }\n+    SetMockTime(0);\n }\n \n CTxMemPoolEntry TestMemPoolEntryHelper::FromTx(const CMutableTransaction& tx) const"
      },
      {
        "sha": "a32f1f380518b8c2504b251dd9d0eb4d6faa2ed9",
        "filename": "src/test/util/setup_common.h",
        "status": "modified",
        "additions": 1,
        "deletions": 7,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa6183d7761eef8bb815aa888f0396e92e275f05/src/test/util/setup_common.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa6183d7761eef8bb815aa888f0396e92e275f05/src/test/util/setup_common.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.h?ref=fa6183d7761eef8bb815aa888f0396e92e275f05",
        "patch": "@@ -112,7 +112,7 @@ class CScript;\n  * Testing fixture that pre-creates a 100-block REGTEST-mode block chain\n  */\n struct TestChain100Setup : public RegTestingSetup {\n-    TestChain100Setup(bool deterministic = false);\n+    TestChain100Setup();\n \n     /**\n      * Create a new block with just given transactions, coinbase paying to\n@@ -143,16 +143,10 @@ struct TestChain100Setup : public RegTestingSetup {\n \n     ~TestChain100Setup();\n \n-    bool m_deterministic;\n     std::vector<CTransactionRef> m_coinbase_txns; // For convenience, coinbase transactions\n     CKey coinbaseKey; // private/public key needed to spend coinbase transactions\n };\n \n-\n-struct TestChain100DeterministicSetup : public TestChain100Setup {\n-    TestChain100DeterministicSetup() : TestChain100Setup(true) { }\n-};\n-\n /**\n  * Make a test setup that has disk access to the debug.log file disabled. Can\n  * be used in \"hot loops\", for example fuzzing or benchmarking."
      },
      {
        "sha": "ab31662f975b1efdf9f2792d17ef9e5a42000e94",
        "filename": "src/test/validation_chainstatemanager_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa6183d7761eef8bb815aa888f0396e92e275f05/src/test/validation_chainstatemanager_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa6183d7761eef8bb815aa888f0396e92e275f05/src/test/validation_chainstatemanager_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validation_chainstatemanager_tests.cpp?ref=fa6183d7761eef8bb815aa888f0396e92e275f05",
        "patch": "@@ -200,7 +200,7 @@ CreateAndActivateUTXOSnapshot(NodeContext& node, const fs::path root, F malleati\n }\n \n //! Test basic snapshot activation.\n-BOOST_FIXTURE_TEST_CASE(chainstatemanager_activate_snapshot, TestChain100DeterministicSetup)\n+BOOST_FIXTURE_TEST_CASE(chainstatemanager_activate_snapshot, TestChain100Setup)\n {\n     ChainstateManager& chainman = *Assert(m_node.chainman);\n "
      }
    ]
  }
]