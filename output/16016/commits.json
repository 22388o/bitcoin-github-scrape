[
  {
    "sha": "0c39465500af5309d6ca39686634c3f1e7d58d91",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYzM5NDY1NTAwYWY1MzA5ZDZjYTM5Njg2NjM0YzNmMWU3ZDU4ZDkx",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-05-09T20:45:46Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-05-10T13:49:18Z"
      },
      "message": "Move IsDeprecatedRPCEnabled to rpc/util.* to put into libbitcoin_common",
      "tree": {
        "sha": "fe49413833e7a52f0b1008bab3a783dd4d74fa18",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fe49413833e7a52f0b1008bab3a783dd4d74fa18"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0c39465500af5309d6ca39686634c3f1e7d58d91",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c39465500af5309d6ca39686634c3f1e7d58d91",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0c39465500af5309d6ca39686634c3f1e7d58d91",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c39465500af5309d6ca39686634c3f1e7d58d91/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "14959753a424f04be118630f691ecab9b0df7e9e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/14959753a424f04be118630f691ecab9b0df7e9e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/14959753a424f04be118630f691ecab9b0df7e9e"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 11,
      "deletions": 9
    },
    "files": [
      {
        "sha": "455c85d807f5d4a34a3bbd2791664458d09e4bca",
        "filename": "src/interfaces/chain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0c39465500af5309d6ca39686634c3f1e7d58d91/src/interfaces/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0c39465500af5309d6ca39686634c3f1e7d58d91/src/interfaces/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.cpp?ref=0c39465500af5309d6ca39686634c3f1e7d58d91",
        "patch": "@@ -19,6 +19,7 @@\n #include <protocol.h>\n #include <rpc/protocol.h>\n #include <rpc/server.h>\n+#include <rpc/util.h>\n #include <shutdown.h>\n #include <sync.h>\n #include <threadsafety.h>"
      },
      {
        "sha": "2d7c677f8eed0ff21117c109cb8db1f2b86d543a",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0c39465500af5309d6ca39686634c3f1e7d58d91/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0c39465500af5309d6ca39686634c3f1e7d58d91/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=0c39465500af5309d6ca39686634c3f1e7d58d91",
        "patch": "@@ -364,13 +364,6 @@ void JSONRPCRequest::parse(const UniValue& valRequest)\n         throw JSONRPCError(RPC_INVALID_REQUEST, \"Params must be an array or object\");\n }\n \n-bool IsDeprecatedRPCEnabled(const std::string& method)\n-{\n-    const std::vector<std::string> enabled_methods = gArgs.GetArgs(\"-deprecatedrpc\");\n-\n-    return find(enabled_methods.begin(), enabled_methods.end(), method) != enabled_methods.end();\n-}\n-\n static UniValue JSONRPCExecOne(JSONRPCRequest jreq, const UniValue& req)\n {\n     UniValue rpc_result(UniValue::VOBJ);"
      },
      {
        "sha": "777db457704bd135d3498a988b421096055738d8",
        "filename": "src/rpc/server.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0c39465500af5309d6ca39686634c3f1e7d58d91/src/rpc/server.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0c39465500af5309d6ca39686634c3f1e7d58d91/src/rpc/server.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.h?ref=0c39465500af5309d6ca39686634c3f1e7d58d91",
        "patch": "@@ -171,8 +171,6 @@ class CRPCTable\n     bool removeCommand(const std::string& name, const CRPCCommand* pcmd);\n };\n \n-bool IsDeprecatedRPCEnabled(const std::string& method);\n-\n extern CRPCTable tableRPC;\n \n void StartRPC();"
      },
      {
        "sha": "2ac3e525bdf41ded79518ed4f3463166c58cd80b",
        "filename": "src/rpc/util.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0c39465500af5309d6ca39686634c3f1e7d58d91/src/rpc/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0c39465500af5309d6ca39686634c3f1e7d58d91/src/rpc/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.cpp?ref=0c39465500af5309d6ca39686634c3f1e7d58d91",
        "patch": "@@ -7,6 +7,7 @@\n #include <rpc/util.h>\n #include <tinyformat.h>\n #include <util/strencodings.h>\n+#include <util/system.h>\n \n #include <tuple>\n \n@@ -685,3 +686,10 @@ std::pair<int64_t, int64_t> ParseDescriptorRange(const UniValue& value)\n     }\n     return {low, high};\n }\n+\n+bool IsDeprecatedRPCEnabled(const std::string& method)\n+{\n+    const std::vector<std::string> enabled_methods = gArgs.GetArgs(\"-deprecatedrpc\");\n+\n+    return find(enabled_methods.begin(), enabled_methods.end(), method) != enabled_methods.end();\n+}"
      },
      {
        "sha": "52e41fcc0eb9e2b7599e2b82361e00b1277f0a6f",
        "filename": "src/rpc/util.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0c39465500af5309d6ca39686634c3f1e7d58d91/src/rpc/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0c39465500af5309d6ca39686634c3f1e7d58d91/src/rpc/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.h?ref=0c39465500af5309d6ca39686634c3f1e7d58d91",
        "patch": "@@ -245,4 +245,6 @@ class RPCHelpMan\n     const RPCExamples m_examples;\n };\n \n+bool IsDeprecatedRPCEnabled(const std::string& method);\n+\n #endif // BITCOIN_RPC_UTIL_H"
      }
    ]
  },
  {
    "sha": "7ccf9dc2bd05caa0952c6e7ed438e9b265d808c1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3Y2NmOWRjMmJkMDVjYWEwOTUyYzZlN2VkNDM4ZTliMjY1ZDgwOGMx",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-05-09T20:31:57Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-05-10T13:49:18Z"
      },
      "message": "deprecate totalFee argument in bumpfee RPC call",
      "tree": {
        "sha": "407bbcc37163de20690a5e785b89faf9057cf61c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/407bbcc37163de20690a5e785b89faf9057cf61c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7ccf9dc2bd05caa0952c6e7ed438e9b265d808c1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7ccf9dc2bd05caa0952c6e7ed438e9b265d808c1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7ccf9dc2bd05caa0952c6e7ed438e9b265d808c1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7ccf9dc2bd05caa0952c6e7ed438e9b265d808c1/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0c39465500af5309d6ca39686634c3f1e7d58d91",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c39465500af5309d6ca39686634c3f1e7d58d91",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0c39465500af5309d6ca39686634c3f1e7d58d91"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 7,
      "deletions": 3
    },
    "files": [
      {
        "sha": "9f974014ae6938e245cc20c112288489c7e9688a",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7ccf9dc2bd05caa0952c6e7ed438e9b265d808c1/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7ccf9dc2bd05caa0952c6e7ed438e9b265d808c1/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=7ccf9dc2bd05caa0952c6e7ed438e9b265d808c1",
        "patch": "@@ -3253,20 +3253,20 @@ static UniValue bumpfee(const JSONRPCRequest& request)\n                 \"\\nBumps the fee of an opt-in-RBF transaction T, replacing it with a new transaction B.\\n\"\n                 \"An opt-in RBF transaction with the given txid must be in the wallet.\\n\"\n                 \"The command will pay the additional fee by reducing change outputs or adding inputs when necessary. It may add a new change output if one does not already exist.\\n\"\n-                \"If `totalFee` is given, adding inputs is not supported, so there must be a single change output that is big enough or it will fail.\\n\"\n+                \"If `totalFee`(DEPRECATED) is given, adding inputs is not supported, so there must be a single change output that is big enough or it will fail.\\n\"\n                 \"All inputs in the original transaction will be included in the replacement transaction.\\n\"\n                 \"The command will fail if the wallet or mempool contains a transaction that spends one of T's outputs.\\n\"\n                 \"By default, the new fee will be calculated automatically using estimatesmartfee.\\n\"\n                 \"The user can specify a confirmation target for estimatesmartfee.\\n\"\n-                \"Alternatively, the user can specify totalFee, or use RPC settxfee to set a higher fee rate.\\n\"\n+                \"Alternatively, the user can specify totalFee(DEPRECATED), or use RPC settxfee to set a higher fee rate.\\n\"\n                 \"At a minimum, the new fee rate must be high enough to pay an additional new relay fee (incrementalfee\\n\"\n                 \"returned by getnetworkinfo) to enter the node's mempool.\\n\",\n                 {\n                     {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The txid to be bumped\"},\n                     {\"options\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED_NAMED_ARG, \"\",\n                         {\n                             {\"confTarget\", RPCArg::Type::NUM, /* default */ \"fallback to wallet's default\", \"Confirmation target (in blocks)\"},\n-                            {\"totalFee\", RPCArg::Type::NUM, /* default */ \"fallback to 'confTarget'\", \"Total fee (NOT feerate) to pay, in satoshis.\\n\"\n+                            {\"totalFee\", RPCArg::Type::NUM, /* default */ \"(DEPRECATED) fallback to 'confTarget'\", \"Total fee (NOT feerate) to pay, in satoshis.\\n\"\n             \"                         In rare cases, the actual fee paid might be slightly higher than the specified\\n\"\n             \"                         totalFee if the tx change output has to be removed because it is too close to\\n\"\n             \"                         the dust threshold.\"},\n@@ -3322,6 +3322,9 @@ static UniValue bumpfee(const JSONRPCRequest& request)\n         } else if (options.exists(\"confTarget\")) { // TODO: alias this to conf_target\n             coin_control.m_confirm_target = ParseConfirmTarget(options[\"confTarget\"], pwallet->chain().estimateMaxBlocks());\n         } else if (options.exists(\"totalFee\")) {\n+            if (!IsDeprecatedRPCEnabled(\"totalFee\")) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"totalFee argument has been deprecated and will be removed in 0.20. Please use -deprecatedrpc=totalFee to continue using this argument until removal.\");\n+            }\n             totalFee = options[\"totalFee\"].get_int64();\n             if (totalFee <= 0) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Invalid totalFee %s (must be greater than 0)\", FormatMoney(totalFee)));"
      },
      {
        "sha": "e38d7b4195758792f0a234ddc14e85f52ac8959d",
        "filename": "test/functional/wallet_bumpfee.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7ccf9dc2bd05caa0952c6e7ed438e9b265d808c1/test/functional/wallet_bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7ccf9dc2bd05caa0952c6e7ed438e9b265d808c1/test/functional/wallet_bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_bumpfee.py?ref=7ccf9dc2bd05caa0952c6e7ed438e9b265d808c1",
        "patch": "@@ -37,6 +37,7 @@ def set_test_params(self):\n         self.extra_args = [[\n             \"-walletrbf={}\".format(i),\n             \"-mintxfee=0.00002\",\n+            \"-deprecatedrpc=totalFee\",\n         ] for i in range(self.num_nodes)]\n \n     def skip_test_if_missing_module(self):"
      }
    ]
  },
  {
    "sha": "14161cb811847fcc6e2304e4a2eeaee04a328d23",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNDE2MWNiODExODQ3ZmNjNmUyMzA0ZTRhMmVlYWVlMDRhMzI4ZDIz",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-05-13T08:09:57Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-05-13T08:14:09Z"
      },
      "message": "Add RPC bumpfee totalFee deprecation test\n\nNext steps: remove `totalFee` from the wallet_bumpfee functional tests.",
      "tree": {
        "sha": "cd1d2c12b641c66f6c74cb39c8213e04c234f740",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cd1d2c12b641c66f6c74cb39c8213e04c234f740"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/14161cb811847fcc6e2304e4a2eeaee04a328d23",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAlzZJ1wACgkQT1chs9Dj\nkh21qA//eanhaVVEfQcH/N0vFwMBd6DLPCXV+D8btlvyqUZxIkRfea5ltwazRpd5\nFUo+gn0WFZ+EagShSfv7qBHWwtKl1byaKI9iPI6YSH47M2E1x7sfljEd/6UwQjGH\nyYe4kMJZJUS5gUeBKF04QoNX0KOehuWMU0U/bw45Oz6YMtE+ncKXMCTkIJU/wb8R\nUQglvUr9dWVqmXy3SWD9NHhzSLnSvcyz1NWQB5RK+bFxxciu8RhEVml/sxiT3PSp\nWQPY/YUY/1BpNNaYF86LMjc8gwEFLtQuFt+s90BtyGEvwUfOiWB5b6NrziAMXakK\nctA3VYNKFFHXe+tzZscHw/H+oYHQpckOuoJPHpRV4X06ll5PA/ae/NRndb3cxEra\ngyQMR5Aqoln+FB4EZafI5n7rsN88Bnc/gBZxQAU2TZXSAbmpoBYj1d0XkAvFjU9e\nisFi3zKjIDoXkx96/n7OGUOO6KE5mj5sdmqSKVUXDhjD2GsXzdufydl1Z3ife/6g\ncLM3Dcba920BMeQC6PvT3MEFEccGjOQ41b5hYCxspjR7RloAidlE1D0tYExPm29Y\nvMv3xY8t6d1MiHn7lg8HUfgeULwsh5sJk1dTpikxrXpoLehY7eKj8t4mqNkYqC3F\ntoQ1Ajz5tREf8o4cCPf4UDf3qzkpaoPTZSvnmLZIpYltM8ZCGg0=\n=ZSLw\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIEC/qvoOEJJtFJCPRAmpu2cb8mofQRCXI0bYe0wfuJNSCP/wEE2owvh6sZSj\nrwYCUe+ViY4I8QRc2Sde8AjOpt6He3V4/ACD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEMvUS4oe7UNVQ5C+tfshhqwI8QRc2Sdd\n8Aj0wBKsl9yG5ACD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn//AQ5Cg6QHAPEjoAmk3CDq30SQjxBFzZJ13wCCGv\nwy1+C1AHAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIub3BlbnRp\nbWVzdGFtcHMub3Jn8BD8ImOJw52RiZYDf+Q2JZURCPAQ/NP1wsJXr14gpLwAkotu\nKAjxBFzZJ17wCDA/1a7SNZgrAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxl\nbmRhci5ldGVybml0eXdhbGwuY29t\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree cd1d2c12b641c66f6c74cb39c8213e04c234f740\nparent 7ccf9dc2bd05caa0952c6e7ed438e9b265d808c1\nauthor Jon Atack <jon@atack.com> 1557734997 +0200\ncommitter Jon Atack <jon@atack.com> 1557735249 +0200\n\nAdd RPC bumpfee totalFee deprecation test\n\nNext steps: remove `totalFee` from the wallet_bumpfee functional tests.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/14161cb811847fcc6e2304e4a2eeaee04a328d23",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/14161cb811847fcc6e2304e4a2eeaee04a328d23",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/14161cb811847fcc6e2304e4a2eeaee04a328d23/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7ccf9dc2bd05caa0952c6e7ed438e9b265d808c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7ccf9dc2bd05caa0952c6e7ed438e9b265d808c1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7ccf9dc2bd05caa0952c6e7ed438e9b265d808c1"
      }
    ],
    "stats": {
      "total": 55,
      "additions": 55,
      "deletions": 0
    },
    "files": [
      {
        "sha": "9831b1fde9edb3e3512f7a9307210d14db9e0ec1",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14161cb811847fcc6e2304e4a2eeaee04a328d23/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14161cb811847fcc6e2304e4a2eeaee04a328d23/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=14161cb811847fcc6e2304e4a2eeaee04a328d23",
        "patch": "@@ -171,6 +171,7 @@\n     'rpc_bind.py --nonloopback',\n     'mining_basic.py',\n     'wallet_bumpfee.py',\n+    'wallet_bumpfee_totalfee_deprecation.py',\n     'rpc_named_arguments.py',\n     'wallet_listsinceblock.py',\n     'p2p_leak.py',"
      },
      {
        "sha": "b8e097c32e9b0b5eaa7d135718b940c81471fb68",
        "filename": "test/functional/wallet_bumpfee_totalfee_deprecation.py",
        "status": "added",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14161cb811847fcc6e2304e4a2eeaee04a328d23/test/functional/wallet_bumpfee_totalfee_deprecation.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14161cb811847fcc6e2304e4a2eeaee04a328d23/test/functional/wallet_bumpfee_totalfee_deprecation.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_bumpfee_totalfee_deprecation.py?ref=14161cb811847fcc6e2304e4a2eeaee04a328d23",
        "patch": "@@ -0,0 +1,54 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test deprecation of passing `totalFee` to the bumpfee RPC.\"\"\"\n+from decimal import Decimal\n+\n+from test_framework.messages import BIP125_SEQUENCE_NUMBER\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_raises_rpc_error\n+\n+class BumpFeeWithTotalFeeArgumentDeprecationTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.extra_args = [[\n+            \"-walletrbf={}\".format(i),\n+            \"-mintxfee=0.00002\",\n+        ] for i in range(self.num_nodes)]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        peer_node, rbf_node = self.nodes\n+        peer_node.generate(110)\n+        self.sync_all()\n+        peer_node.sendtoaddress(rbf_node.getnewaddress(), 0.001)\n+        self.sync_all()\n+        peer_node.generate(1)\n+        self.sync_all()\n+        rbfid = spend_one_input(rbf_node, peer_node.getnewaddress())\n+\n+        self.log.info(\"Testing bumpfee with totalFee argument raises RPC error with deprecation message\")\n+        assert_raises_rpc_error(\n+            -8,\n+            \"totalFee argument has been deprecated and will be removed in 0.20. \" +\n+            \"Please use -deprecatedrpc=totalFee to continue using this argument until removal.\",\n+            rbf_node.bumpfee, rbfid, {\"totalFee\": 2000})\n+\n+        self.log.info(\"Testing bumpfee without totalFee argument does not raise\")\n+        rbf_node.bumpfee(rbfid)\n+\n+def spend_one_input(node, dest_address, change_size=Decimal(\"0.00049000\")):\n+    tx_input = dict(sequence=BIP125_SEQUENCE_NUMBER,\n+                    **next(u for u in node.listunspent() if u[\"amount\"] == Decimal(\"0.00100000\")))\n+    destinations = {dest_address: Decimal(\"0.00050000\")}\n+    destinations[node.getrawchangeaddress()] = change_size\n+    rawtx = node.createrawtransaction([tx_input], destinations)\n+    signedtx = node.signrawtransactionwithwallet(rawtx)\n+    txid = node.sendrawtransaction(signedtx[\"hex\"])\n+    return txid\n+\n+if __name__ == \"__main__\":\n+    BumpFeeWithTotalFeeArgumentDeprecationTest().main()"
      }
    ]
  },
  {
    "sha": "aaa6226e96f995db6cd1d1fe283d729d1c8d43ed",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYWE2MjI2ZTk2Zjk5NWRiNmNkMWQxZmUyODNkNzI5ZDFjOGQ0M2Vk",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-05-13T08:24:00Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-05-13T08:40:40Z"
      },
      "message": "Tidy up wallet_bumpfee.py code",
      "tree": {
        "sha": "0104f09f5ccc023dba5cd7616c4843a866fcc3f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0104f09f5ccc023dba5cd7616c4843a866fcc3f0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aaa6226e96f995db6cd1d1fe283d729d1c8d43ed",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAlzZLY4ACgkQT1chs9Dj\nkh3/ABAAlkn1PIJ3B2Gp2jo+HEZdYGz2tAiIKOvmlxBpTssAXl05sJfSTBjsqftu\nlTSl7w/P7gOZ640twjQojnfTtq0aZnqsKvSyK1qvCC7DQaGQNC3EQRRvlJ+pFPug\nSCmnsL6TUZVVh/NbfeBc5DDVE/u3rUUYz/fYNolyNYWRKeMfxzgr8rqVIM97Xb5j\nRnTpCzNlzU+7AY21aRJMDAG03fiuj59RwV6ckPykWJFtpDliV4FNTokCofEC/Veg\niqNnv+4+QFLskCzmFbha8G89IhSQ2A4Z0lMjIdqD/V59Jmj1aiYQHgbbQ1QCddNi\n4iSiUNLUG8lIE7zM817w3X158opCbL1ZfIuqdH2tgDz5HbGY5/7RRzo2s8T00PR0\nf94YNKlYVSrVejtbNWGlnAbXoiROplnAyUSQOKXxhY37GfJJhPVxxl8BgeP+64ms\n/3VGD+zvDc3cEZlyBPX0iBgwFkDQDV5d0xxObEH73Zzk4TRwDg2M6OSM67uaBvo4\nIAfhsL1wRFUAKNZJy1HzYq22tg/Ga/b/gPj6c64O0RTma7XMVtvAv1QFDCZLYyW0\noQtPPGNdjalAVG9vWojgpiAZDqRJ6uVOYDOYCOlf3J5hnL4Uzm/WrdW7nZLhDJwA\nHAwZj4noTCNErF5eSGcEVwXvaDoC3kHuC/qyfvyZVO254aFxhSY=\n=OB9N\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwICDuwPUQucP/d8kdm49Et8cpLQn4Szce+cR9eJEdFgqsCP/wEAGMTCAC+4US\nbEV3L08ePJ8I8QRc2S2Q8AiQvXRgjZ2XHQCD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wELaZJEz3WTFZKBNcqp8G\noLUI8QRc2S2P8Ah2sG0ubzkJIQCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5k\nYXIuY2F0YWxsYXh5LmNvbf/wEM5A3b/1ZWFVxlQ4/zLoNU4I8QRc2S2P8Ah6YkjD\nCBJuOACD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIub3BlbnRp\nbWVzdGFtcHMub3Jn8BDiqh4mNbMZmm2u/XotJw0eCPAQo3+Z+HQe8uASsuwQKhTS\n1AjxBFzZLY/wCPayoiPTiL5YAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxl\nbmRhci5ldGVybml0eXdhbGwuY29t\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 0104f09f5ccc023dba5cd7616c4843a866fcc3f0\nparent 14161cb811847fcc6e2304e4a2eeaee04a328d23\nauthor Jon Atack <jon@atack.com> 1557735840 +0200\ncommitter Jon Atack <jon@atack.com> 1557736840 +0200\n\nTidy up wallet_bumpfee.py code\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aaa6226e96f995db6cd1d1fe283d729d1c8d43ed",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/aaa6226e96f995db6cd1d1fe283d729d1c8d43ed",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aaa6226e96f995db6cd1d1fe283d729d1c8d43ed/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "14161cb811847fcc6e2304e4a2eeaee04a328d23",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/14161cb811847fcc6e2304e4a2eeaee04a328d23",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/14161cb811847fcc6e2304e4a2eeaee04a328d23"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 4,
      "deletions": 5
    },
    "files": [
      {
        "sha": "aefacc201ffe103e5e774a4d8ccb8df5ce6a3fcd",
        "filename": "test/functional/wallet_bumpfee.py",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aaa6226e96f995db6cd1d1fe283d729d1c8d43ed/test/functional/wallet_bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aaa6226e96f995db6cd1d1fe283d729d1c8d43ed/test/functional/wallet_bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_bumpfee.py?ref=aaa6226e96f995db6cd1d1fe283d729d1c8d43ed",
        "patch": "@@ -23,7 +23,6 @@\n     assert_equal,\n     assert_greater_than,\n     assert_raises_rpc_error,\n-    connect_nodes_bi,\n     hex_str_to_bytes,\n )\n \n@@ -44,14 +43,14 @@ def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n+        peer_node, rbf_node = self.nodes\n+\n         # Encrypt wallet for test_locked_wallet_fails test\n-        self.nodes[1].encryptwallet(WALLET_PASSPHRASE)\n-        self.nodes[1].walletpassphrase(WALLET_PASSPHRASE, WALLET_PASSPHRASE_TIMEOUT)\n+        rbf_node.encryptwallet(WALLET_PASSPHRASE)\n+        rbf_node.walletpassphrase(WALLET_PASSPHRASE, WALLET_PASSPHRASE_TIMEOUT)\n \n-        connect_nodes_bi(self.nodes, 0, 1)\n         self.sync_all()\n \n-        peer_node, rbf_node = self.nodes\n         rbf_node_address = rbf_node.getnewaddress()\n \n         # fund rbf node with 10 coins of 0.001 btc (100,000 satoshis)"
      }
    ]
  },
  {
    "sha": "96f3be13d96becbd9586c6a4476329964cf625fd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NmYzYmUxM2Q5NmJlY2JkOTU4NmM2YTQ0NzYzMjk5NjRjZjYyNWZk",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-05-13T08:39:58Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-05-13T08:41:17Z"
      },
      "message": "Tidy up wallet_bumpfee.py comments",
      "tree": {
        "sha": "e1c29b3edf8b1701fd5f23f3329b22f5b59f7035",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e1c29b3edf8b1701fd5f23f3329b22f5b59f7035"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/96f3be13d96becbd9586c6a4476329964cf625fd",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAlzZLbUACgkQT1chs9Dj\nkh3VPA/9HDIq6UVqQYfPBD3LNtT8vhjJ6uX7/T/5CSFGNUbMWnRExggArUJ0CGeW\nHpsXgvxspoKujEW1BiDpjp+h4AxdDErHqEESUBnfPyOO3ViiPBLdX2Y2662xskeg\nfaZNJAmzdUJnHpVXm+OIk+cuL3p6W+W4Rz3qIdVdSkYrRGCDyNrtWwIA36t9/7S9\nDYI/6PBUAkHJp/DE2SdYEsBMaDEQ4DW6qIGTUZ/gHswEb9OXrE7DoZjdXB/yl4qE\nfUKmJXFp/oqJvUi2bBOK4owITjrygVUSb4H5G5Cu3x8hk8OrPn10OrTk4f4vl0yX\ngB3OGimZM9cjCPuEt+eCIXQjSoqdmIGaD4+mkzZlfzdUNqZxlUsvgUIgpDMLIdBW\nX8CwQGzRLO/orVncXUGqfqKnaEfEzoqiNal9xlXOcES4Wodxu6wCoNmhteu5QlKd\nRLoznp83xyTNo+6PZcDvo72SKs96pCNYODQmjlVGmRKyjFOLkCfEi7oIo15zcwMC\nJgawac8+miN1zEZPccvxUKlpkrukVoOMQhCZon3yeIWseH2vl1sEIv3fp5nwCZNC\n3m4I+ZJN011bSILy4zOWrzt7VvAcM0ML7BznAgNZVizap6HFvjG72AkcXEgIWA+u\ntDjB9VbBbqhCsmoWCs2CYMcQ9eH9FhqYDDWu6BZ2YreTNM869Dg=\n=WH0b\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIJjQo+1/XmbgFdcd6Bzyrn6wSmepXjVpTg6O/HsmKku4CP/wEHn+D8+hGdEk\nZqVJje9LcZQI8BB6iUQ2kVJwZzt6LAcP3muDCPEEXNkttvAIhwP2wZGSCEkAg9/j\nDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5jb23/\n8BB6ldnLxkIcX7e2MfaQcWU0CPAgoqNK8fB3PjMbo6PAfJNHrtuXSDTwFjbVQnAR\nP29N0/0I8QRc2S228AhBu1AkLj9erACD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5i\ndGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQq389ldh6ioaONWP2Jt8k\nngjxBFzZLbfwCLMtX2wpFyzhAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRh\nci5jYXRhbGxheHkuY29t8BDKGzaz8VQkcej/1+qa12lZCPAgGAF3r+qKDobB/3nD\nHtVg0/NXp6+M99NaKk1VhAUbUkwI8QRc2S238AjX5y+/pWWiAACD3+MNLvkMjiwr\naHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZw==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree e1c29b3edf8b1701fd5f23f3329b22f5b59f7035\nparent aaa6226e96f995db6cd1d1fe283d729d1c8d43ed\nauthor Jon Atack <jon@atack.com> 1557736798 +0200\ncommitter Jon Atack <jon@atack.com> 1557736877 +0200\n\nTidy up wallet_bumpfee.py comments\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96f3be13d96becbd9586c6a4476329964cf625fd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/96f3be13d96becbd9586c6a4476329964cf625fd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96f3be13d96becbd9586c6a4476329964cf625fd/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "aaa6226e96f995db6cd1d1fe283d729d1c8d43ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aaa6226e96f995db6cd1d1fe283d729d1c8d43ed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/aaa6226e96f995db6cd1d1fe283d729d1c8d43ed"
      }
    ],
    "stats": {
      "total": 74,
      "additions": 32,
      "deletions": 42
    },
    "files": [
      {
        "sha": "f44e8f90d5783bb008a8d0a6548e199e7a7bad61",
        "filename": "test/functional/wallet_bumpfee.py",
        "status": "modified",
        "additions": 32,
        "deletions": 42,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96f3be13d96becbd9586c6a4476329964cf625fd/test/functional/wallet_bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96f3be13d96becbd9586c6a4476329964cf625fd/test/functional/wallet_bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_bumpfee.py?ref=96f3be13d96becbd9586c6a4476329964cf625fd",
        "patch": "@@ -53,7 +53,7 @@ def run_test(self):\n \n         rbf_node_address = rbf_node.getnewaddress()\n \n-        # fund rbf node with 10 coins of 0.001 btc (100,000 satoshis)\n+        # Fund RBF node with 10 coins of 0.001 btc (100,000 satoshis)\n         self.log.info(\"Mining blocks...\")\n         peer_node.generate(110)\n         self.sync_all()\n@@ -109,9 +109,8 @@ def test_simple_bumpfee_succeeds(self, rbf_node, peer_node, dest_address):\n \n \n def test_segwit_bumpfee_succeeds(rbf_node, dest_address):\n-    # Create a transaction with segwit output, then create an RBF transaction\n-    # which spends it, and make sure bumpfee can be called on it.\n-\n+    \"\"\"Create a transaction with segwit output, then create an RBF transaction\n+    that spends it, and test that bumpfee can be called on it.\"\"\"\n     segwit_in = next(u for u in rbf_node.listunspent() if u[\"amount\"] == Decimal(\"0.001\"))\n     segwit_out = rbf_node.getaddressinfo(rbf_node.getnewaddress(address_type='p2sh-segwit'))\n     segwitid = send_to_witness(\n@@ -137,18 +136,17 @@ def test_segwit_bumpfee_succeeds(rbf_node, dest_address):\n     assert bumped_tx[\"txid\"] in rbf_node.getrawmempool()\n     assert rbfid not in rbf_node.getrawmempool()\n \n-\n def test_nonrbf_bumpfee_fails(peer_node, dest_address):\n-    # cannot replace a non RBF transaction (from node which did not enable RBF)\n+    # Cannot replace a non-RBF transaction (from node which did not enable RBF)\n     not_rbfid = peer_node.sendtoaddress(dest_address, Decimal(\"0.00090000\"))\n     assert_raises_rpc_error(-4, \"not BIP 125 replaceable\", peer_node.bumpfee, not_rbfid)\n \n-\n def test_notmine_bumpfee_fails(rbf_node, peer_node, dest_address):\n-    # cannot bump fee unless the tx has only inputs that we own.\n-    # here, the rbftx has a peer_node coin and then adds a rbf_node input\n-    # Note that this test depends upon the RPC code checking input ownership prior to change outputs\n-    # (since it can't use fundrawtransaction, it lacks a proper change output)\n+    # Cannot bump fee unless the tx has only inputs that we own.\n+    # Here, the rbftx has a peer_node coin and then adds a rbf_node input.\n+    # Note that this test depends upon the RPC code checking input ownership\n+    # prior to change outputs (since it can't use fundrawtransaction, it lacks a\n+    # proper change output).\n     utxos = [node.listunspent()[-1] for node in (rbf_node, peer_node)]\n     inputs = [{\n         \"txid\": utxo[\"txid\"],\n@@ -164,27 +162,25 @@ def test_notmine_bumpfee_fails(rbf_node, peer_node, dest_address):\n     assert_raises_rpc_error(-4, \"Transaction contains inputs that don't belong to this wallet\",\n                             rbf_node.bumpfee, rbfid)\n \n-\n def test_bumpfee_with_descendant_fails(rbf_node, rbf_node_address, dest_address):\n-    # cannot bump fee if the transaction has a descendant\n-    # parent is send-to-self, so we don't have to check which output is change when creating the child tx\n+    # Cannot bump fee if the transaction has a descendant.\n+    # Parent is send-to-self, so we don't have to check which output is changed\n+    # when creating the child tx\n     parent_id = spend_one_input(rbf_node, rbf_node_address)\n     tx = rbf_node.createrawtransaction([{\"txid\": parent_id, \"vout\": 0}], {dest_address: 0.00020000})\n     tx = rbf_node.signrawtransactionwithwallet(tx)\n     rbf_node.sendrawtransaction(tx[\"hex\"])\n     assert_raises_rpc_error(-8, \"Transaction has descendants in the wallet\", rbf_node.bumpfee, parent_id)\n \n-\n def test_small_output_fails(rbf_node, dest_address):\n-    # cannot bump fee with a too-small output\n+    # Cannot bump fee with a too-small output\n     rbfid = spend_one_input(rbf_node, dest_address)\n     rbf_node.bumpfee(rbfid, {\"totalFee\": 50000})\n \n     rbfid = spend_one_input(rbf_node, dest_address)\n     assert_raises_rpc_error(-4, \"Change output is too small\", rbf_node.bumpfee, rbfid, {\"totalFee\": 50001})\n \n def test_small_output_with_feerate_succeeds(rbf_node, dest_address):\n-\n     # Make sure additional inputs exist\n     rbf_node.generatetoaddress(101, rbf_node.getnewaddress())\n     rbfid = spend_one_input(rbf_node, dest_address)\n@@ -207,7 +203,7 @@ def test_small_output_with_feerate_succeeds(rbf_node, dest_address):\n         rbfid = rbfid_new\n         tx_fee = rbfid_new_details[\"origfee\"]\n \n-    # input(s) have been added\n+    # Input(s) have been added\n     final_input_list = rbf_node.getrawtransaction(rbfid, 1)[\"vin\"]\n     assert_greater_than(len(final_input_list), 1)\n     # Original input is in final set\n@@ -219,8 +215,8 @@ def test_small_output_with_feerate_succeeds(rbf_node, dest_address):\n     assert_equal(rbf_node.gettransaction(rbfid)[\"confirmations\"], 1)\n \n def test_dust_to_fee(rbf_node, dest_address):\n-    # check that if output is reduced to dust, it will be converted to fee\n-    # the bumped tx sets fee=49,900, but it converts to 50,000\n+    # Check that if output is reduced to dust, it will be converted to fee.\n+    # The bumped tx sets fee=49,900, but it converts to 50,000.\n     rbfid = spend_one_input(rbf_node, dest_address)\n     fulltx = rbf_node.getrawtransaction(rbfid, 1)\n     # (32-byte p2sh-pwpkh output size + 148 p2pkh spend estimate) * 10k(discard_rate) / 1000 = 1800\n@@ -230,8 +226,7 @@ def test_dust_to_fee(rbf_node, dest_address):\n     full_bumped_tx = rbf_node.getrawtransaction(bumped_tx[\"txid\"], 1)\n     assert_equal(bumped_tx[\"fee\"], Decimal(\"0.00050000\"))\n     assert_equal(len(fulltx[\"vout\"]), 2)\n-    assert_equal(len(full_bumped_tx[\"vout\"]), 1)  # change output is eliminated\n-\n+    assert_equal(len(full_bumped_tx[\"vout\"]), 1)  # Change output is eliminated\n \n def test_settxfee(rbf_node, dest_address):\n     assert_raises_rpc_error(-8, \"txfee cannot be less than min relay tx fee\", rbf_node.settxfee, Decimal('0.000005'))\n@@ -247,42 +242,39 @@ def test_settxfee(rbf_node, dest_address):\n     assert_greater_than(Decimal(\"0.00001000\"), abs(requested_feerate - actual_feerate))\n     rbf_node.settxfee(Decimal(\"0.00000000\"))  # unset paytxfee\n \n-\n def test_rebumping(rbf_node, dest_address):\n-    # check that re-bumping the original tx fails, but bumping the bumper succeeds\n+    \"\"\"Test that re-bumping the original tx fails, but bumping the bumper succeeds.\"\"\"\n     rbfid = spend_one_input(rbf_node, dest_address)\n     bumped = rbf_node.bumpfee(rbfid, {\"totalFee\": 2000})\n     assert_raises_rpc_error(-4, \"already bumped\", rbf_node.bumpfee, rbfid, {\"totalFee\": 3000})\n     rbf_node.bumpfee(bumped[\"txid\"], {\"totalFee\": 3000})\n \n-\n def test_rebumping_not_replaceable(rbf_node, dest_address):\n-    # check that re-bumping a non-replaceable bump tx fails\n+    \"\"\"Test that re-bumping a non-replaceable bump tx fails.\"\"\"\n     rbfid = spend_one_input(rbf_node, dest_address)\n     bumped = rbf_node.bumpfee(rbfid, {\"totalFee\": 10000, \"replaceable\": False})\n     assert_raises_rpc_error(-4, \"Transaction is not BIP 125 replaceable\", rbf_node.bumpfee, bumped[\"txid\"],\n                             {\"totalFee\": 20000})\n \n-\n def test_unconfirmed_not_spendable(rbf_node, rbf_node_address):\n-    # check that unconfirmed outputs from bumped transactions are not spendable\n+    \"\"\"Test that unconfirmed outputs from bumped transactions are not spendable.\"\"\"\n     rbfid = spend_one_input(rbf_node, rbf_node_address)\n     rbftx = rbf_node.gettransaction(rbfid)[\"hex\"]\n     assert rbfid in rbf_node.getrawmempool()\n     bumpid = rbf_node.bumpfee(rbfid)[\"txid\"]\n     assert bumpid in rbf_node.getrawmempool()\n     assert rbfid not in rbf_node.getrawmempool()\n \n-    # check that outputs from the bump transaction are not spendable\n-    # due to the replaces_txid check in CWallet::AvailableCoins\n+    # Check that outputs from the bump transaction are not spendable\n+    # due to the replaces_txid check in CWallet::AvailableCoins.\n     assert_equal([t for t in rbf_node.listunspent(minconf=0, include_unsafe=False) if t[\"txid\"] == bumpid], [])\n \n-    # submit a block with the rbf tx to clear the bump tx out of the mempool,\n-    # then invalidate the block so the rbf tx will be put back in the mempool.\n-    # This makes it possible to check whether the rbf tx outputs are\n-    # spendable before the rbf tx is confirmed.\n+    # Submit a block with the RBF tx to clear the bump tx out of the mempool,\n+    # then invalidate the block so the RBF tx will be put back in the mempool.\n+    # This makes it possible to check whether the RBF tx outputs are\n+    # spendable before the RBF tx is confirmed.\n     block = submit_block_with_tx(rbf_node, rbftx)\n-    # Can not abandon conflicted tx\n+    # Cannot abandon conflicted tx\n     assert_raises_rpc_error(-5, 'Transaction not eligible for abandonment', lambda: rbf_node.abandontransaction(txid=bumpid))\n     rbf_node.invalidateblock(block.hash)\n     # Call abandon to make sure the wallet doesn't attempt to resubmit\n@@ -291,26 +283,24 @@ def test_unconfirmed_not_spendable(rbf_node, rbf_node_address):\n     assert bumpid not in rbf_node.getrawmempool()\n     assert rbfid in rbf_node.getrawmempool()\n \n-    # check that outputs from the rbf tx are not spendable before the\n+    # Check that outputs from the RBF tx are not spendable before the\n     # transaction is confirmed, due to the replaced_by_txid check in\n     # CWallet::AvailableCoins\n     assert_equal([t for t in rbf_node.listunspent(minconf=0, include_unsafe=False) if t[\"txid\"] == rbfid], [])\n \n-    # check that the main output from the rbf tx is spendable after confirmed\n+    # Check that the main output from the RBF tx is spendable after confirmed.\n     rbf_node.generate(1)\n     assert_equal(\n         sum(1 for t in rbf_node.listunspent(minconf=0, include_unsafe=False)\n             if t[\"txid\"] == rbfid and t[\"address\"] == rbf_node_address and t[\"spendable\"]), 1)\n \n-\n def test_bumpfee_metadata(rbf_node, dest_address):\n     rbfid = rbf_node.sendtoaddress(dest_address, Decimal(\"0.00100000\"), \"comment value\", \"to value\")\n     bumped_tx = rbf_node.bumpfee(rbfid)\n     bumped_wtx = rbf_node.gettransaction(bumped_tx[\"txid\"])\n     assert_equal(bumped_wtx[\"comment\"], \"comment value\")\n     assert_equal(bumped_wtx[\"to\"], \"to value\")\n \n-\n def test_locked_wallet_fails(rbf_node, dest_address):\n     rbfid = spend_one_input(rbf_node, dest_address)\n     rbf_node.walletlock()\n@@ -319,7 +309,7 @@ def test_locked_wallet_fails(rbf_node, dest_address):\n     rbf_node.walletpassphrase(WALLET_PASSPHRASE, WALLET_PASSPHRASE_TIMEOUT)\n \n def test_change_script_match(rbf_node, dest_address):\n-    \"\"\"Test that the same change addresses is used for the replacement transaction when possible.\"\"\"\n+    \"\"\"Test that the same change addresses are used for the replacement transaction when possible.\"\"\"\n     def get_change_address(tx):\n         tx_details = rbf_node.getrawtransaction(tx, 1)\n         txout_addresses = [txout['scriptPubKey']['addresses'][0] for txout in tx_details[\"vout\"]]\n@@ -364,9 +354,9 @@ def submit_block_with_tx(node, tx):\n     return block\n \n def test_no_more_inputs_fails(rbf_node, dest_address):\n-    # feerate rbf requires confirmed outputs when change output doesn't exist or is insufficient\n+    # Feerate RBF requires confirmed outputs when change output doesn't exist or is insufficient\n     rbf_node.generatetoaddress(1, dest_address)\n-    # spend all funds, no change output\n+    # Spend all funds, no change output\n     rbfid = rbf_node.sendtoaddress(rbf_node.getnewaddress(), rbf_node.getbalance(), \"\", \"\", True)\n     assert_raises_rpc_error(-4, \"Unable to create transaction: Insufficient funds\", rbf_node.bumpfee, rbfid)\n "
      }
    ]
  }
]