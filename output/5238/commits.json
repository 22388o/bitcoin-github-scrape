[
  {
    "sha": "c7e31c03edfcae375e1a2c3561b79147e800ca35",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjN2UzMWMwM2VkZmNhZTM3NWUxYTJjMzU2MWI3OTE0N2U4MDBjYTM1",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2014-11-06T16:59:46Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2014-11-06T16:59:46Z"
      },
      "message": "Remove unused chainparam networkID",
      "tree": {
        "sha": "1ca777f6ae85fd1c3cc04632d43407512d368c1f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1ca777f6ae85fd1c3cc04632d43407512d368c1f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c7e31c03edfcae375e1a2c3561b79147e800ca35",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7e31c03edfcae375e1a2c3561b79147e800ca35",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c7e31c03edfcae375e1a2c3561b79147e800ca35",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7e31c03edfcae375e1a2c3561b79147e800ca35/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2262415411fed5ba18ea024bbef9f765cc6fc2d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2262415411fed5ba18ea024bbef9f765cc6fc2d9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2262415411fed5ba18ea024bbef9f765cc6fc2d9"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 0,
      "deletions": 10
    },
    "files": [
      {
        "sha": "91aba6eac1bcff18ba1939c34c3a729363132e1b",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c7e31c03edfcae375e1a2c3561b79147e800ca35/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c7e31c03edfcae375e1a2c3561b79147e800ca35/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=c7e31c03edfcae375e1a2c3561b79147e800ca35",
        "patch": "@@ -101,7 +101,6 @@ static const Checkpoints::CCheckpointData dataRegtest = {\n class CMainParams : public CChainParams {\n public:\n     CMainParams() {\n-        networkID = CBaseChainParams::MAIN;\n         strNetworkID = \"main\";\n         /** \n          * The message start string is designed to be unlikely to occur in normal data.\n@@ -190,7 +189,6 @@ static CMainParams mainParams;\n class CTestNetParams : public CMainParams {\n public:\n     CTestNetParams() {\n-        networkID = CBaseChainParams::TESTNET;\n         strNetworkID = \"test\";\n         /** \n          * The message start string is designed to be unlikely to occur in normal data.\n@@ -252,7 +250,6 @@ static CTestNetParams testNetParams;\n class CRegTestParams : public CTestNetParams {\n public:\n     CRegTestParams() {\n-        networkID = CBaseChainParams::REGTEST;\n         strNetworkID = \"regtest\";\n         pchMessageStart[0] = 0xfa;\n         pchMessageStart[1] = 0xbf;\n@@ -297,7 +294,6 @@ static CRegTestParams regTestParams;\n class CUnitTestParams : public CMainParams, public CModifiableParams {\n public:\n     CUnitTestParams() {\n-        networkID = CBaseChainParams::UNITTEST;\n         strNetworkID = \"unittest\";\n         nDefaultPort = 18445;\n         vFixedSeeds.clear(); //! Unit test mode doesn't have any fixed seeds."
      },
      {
        "sha": "ffe0e83b627c715b5ba86ef73928c2a6a5ce7f34",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c7e31c03edfcae375e1a2c3561b79147e800ca35/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c7e31c03edfcae375e1a2c3561b79147e800ca35/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=c7e31c03edfcae375e1a2c3561b79147e800ca35",
        "patch": "@@ -97,7 +97,6 @@ class CChainParams\n     int nMinerThreads;\n     std::vector<CDNSSeedData> vSeeds;\n     std::vector<unsigned char> base58Prefixes[MAX_BASE58_TYPES];\n-    CBaseChainParams::Network networkID;\n     std::string strNetworkID;\n     CBlock genesis;\n     std::vector<CAddress> vFixedSeeds;"
      },
      {
        "sha": "40a7eacb9312ecbd46ea4d5f969c2dd161adc36e",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c7e31c03edfcae375e1a2c3561b79147e800ca35/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c7e31c03edfcae375e1a2c3561b79147e800ca35/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=c7e31c03edfcae375e1a2c3561b79147e800ca35",
        "patch": "@@ -21,7 +21,6 @@ class CBaseMainParams : public CBaseChainParams\n public:\n     CBaseMainParams()\n     {\n-        networkID = CBaseChainParams::MAIN;\n         nRPCPort = 8332;\n     }\n };\n@@ -35,7 +34,6 @@ class CBaseTestNetParams : public CBaseMainParams\n public:\n     CBaseTestNetParams()\n     {\n-        networkID = CBaseChainParams::TESTNET;\n         nRPCPort = 18332;\n         strDataDir = \"testnet3\";\n     }\n@@ -50,7 +48,6 @@ class CBaseRegTestParams : public CBaseTestNetParams\n public:\n     CBaseRegTestParams()\n     {\n-        networkID = CBaseChainParams::REGTEST;\n         strDataDir = \"regtest\";\n     }\n };\n@@ -64,7 +61,6 @@ class CBaseUnitTestParams : public CBaseMainParams\n public:\n     CBaseUnitTestParams()\n     {\n-        networkID = CBaseChainParams::UNITTEST;\n         strDataDir = \"unittest\";\n     }\n };"
      },
      {
        "sha": "1e5895a6315c5bb0b872d0fd883ced0a69466e06",
        "filename": "src/chainparamsbase.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c7e31c03edfcae375e1a2c3561b79147e800ca35/src/chainparamsbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c7e31c03edfcae375e1a2c3561b79147e800ca35/src/chainparamsbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.h?ref=c7e31c03edfcae375e1a2c3561b79147e800ca35",
        "patch": "@@ -32,7 +32,6 @@ class CBaseChainParams\n \n     int nRPCPort;\n     std::string strDataDir;\n-    Network networkID;\n };\n \n /**"
      }
    ]
  },
  {
    "sha": "1df7eb85b9873fe78ef8391e5751564bb994283d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZGY3ZWI4NWI5ODczZmU3OGVmODM5MWU1NzUxNTY0YmI5OTQyODNk",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2014-11-06T17:48:58Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2014-11-06T17:48:58Z"
      },
      "message": "Generic chainparam selection with -network=<strNetworkID> instead of -testnet, etc.",
      "tree": {
        "sha": "0353ec80cb698ab3b25d1e6362ba9b81d5aabf99",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0353ec80cb698ab3b25d1e6362ba9b81d5aabf99"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1df7eb85b9873fe78ef8391e5751564bb994283d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1df7eb85b9873fe78ef8391e5751564bb994283d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1df7eb85b9873fe78ef8391e5751564bb994283d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1df7eb85b9873fe78ef8391e5751564bb994283d/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c7e31c03edfcae375e1a2c3561b79147e800ca35",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7e31c03edfcae375e1a2c3561b79147e800ca35",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c7e31c03edfcae375e1a2c3561b79147e800ca35"
      }
    ],
    "stats": {
      "total": 89,
      "additions": 46,
      "deletions": 43
    },
    "files": [
      {
        "sha": "878dc9b82a6fffd258d067f1f1897ffcefb03dbd",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1df7eb85b9873fe78ef8391e5751564bb994283d/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1df7eb85b9873fe78ef8391e5751564bb994283d/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=1df7eb85b9873fe78ef8391e5751564bb994283d",
        "patch": "@@ -76,11 +76,9 @@ static bool AppInitRPC(int argc, char* argv[])\n         fprintf(stderr,\"Error reading configuration file: %s\\n\", e.what());\n         return false;\n     }\n-    // Check for -testnet or -regtest parameter (BaseParams() calls are only valid after this clause)\n-    if (!SelectBaseParamsFromCommandLine()) {\n-        fprintf(stderr, \"Error: Invalid combination of -regtest and -testnet.\\n\");\n-        return false;\n-    }\n+    // Check for -network, -testnet or -regtest parameter (BaseParams() calls are only valid after this clause)\n+    SelectBaseParamsFromCommandLine();\n+\n     if (argc<2 || mapArgs.count(\"-?\") || mapArgs.count(\"-help\") || mapArgs.count(\"-version\")) {\n         std::string strUsage = _(\"Bitcoin Core RPC client version\") + \" \" + FormatFullVersion() + \"\\n\";\n         if (!mapArgs.count(\"-version\")) {"
      },
      {
        "sha": "066315a7618d789832df932b8db133848e54f604",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1df7eb85b9873fe78ef8391e5751564bb994283d/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1df7eb85b9873fe78ef8391e5751564bb994283d/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=1df7eb85b9873fe78ef8391e5751564bb994283d",
        "patch": "@@ -34,11 +34,8 @@ static bool AppInitRawTx(int argc, char* argv[])\n     //\n     ParseParameters(argc, argv);\n \n-    // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n-    if (!SelectParamsFromCommandLine()) {\n-        fprintf(stderr, \"Error: Invalid combination of -regtest and -testnet.\\n\");\n-        return false;\n-    }\n+    // Check for -network, -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+    SelectParamsFromCommandLine();\n \n     fCreateBlank = GetBoolArg(\"-create\", false);\n "
      },
      {
        "sha": "bd417fb20b62bc2a2b2a0b7c6440c0a32f5dd166",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1df7eb85b9873fe78ef8391e5751564bb994283d/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1df7eb85b9873fe78ef8391e5751564bb994283d/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=1df7eb85b9873fe78ef8391e5751564bb994283d",
        "patch": "@@ -78,11 +78,8 @@ bool AppInit(int argc, char* argv[])\n             fprintf(stderr,\"Error reading configuration file: %s\\n\", e.what());\n             return false;\n         }\n-        // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n-        if (!SelectParamsFromCommandLine()) {\n-            fprintf(stderr, \"Error: Invalid combination of -regtest and -testnet.\\n\");\n-            return false;\n-        }\n+        // Check for -network, -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+        SelectParamsFromCommandLine();\n \n         if (mapArgs.count(\"-?\") || mapArgs.count(\"-help\") || mapArgs.count(\"-version\"))\n         {"
      },
      {
        "sha": "294ee9d4cefb0134718e7bc32ea20f8ad9378a73",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 7,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1df7eb85b9873fe78ef8391e5751564bb994283d/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1df7eb85b9873fe78ef8391e5751564bb994283d/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=1df7eb85b9873fe78ef8391e5751564bb994283d",
        "patch": "@@ -349,8 +349,7 @@ CChainParams &Params(CBaseChainParams::Network network) {\n         case CBaseChainParams::UNITTEST:\n             return unitTestParams;\n         default:\n-            assert(false && \"Unimplemented network\");\n-            return mainParams;\n+            throw std::runtime_error(\"Unimplemented network\\n\");\n     }\n }\n \n@@ -359,13 +358,9 @@ void SelectParams(CBaseChainParams::Network network) {\n     pCurrentParams = &Params(network);\n }\n \n-bool SelectParamsFromCommandLine()\n+void SelectParamsFromCommandLine()\n {\n     CBaseChainParams::Network network = NetworkIdFromCommandLine();\n-    if (network == CBaseChainParams::MAX_NETWORK_TYPES)\n-        return false;\n-\n     SelectBaseParams(network);\n     SelectParams(network);\n-    return true;\n }"
      },
      {
        "sha": "ee934be03314e881ec4b9880240c0810782d65e7",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1df7eb85b9873fe78ef8391e5751564bb994283d/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1df7eb85b9873fe78ef8391e5751564bb994283d/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=1df7eb85b9873fe78ef8391e5751564bb994283d",
        "patch": "@@ -145,9 +145,11 @@ CModifiableParams *ModifiableParams();\n void SelectParams(CBaseChainParams::Network network);\n \n /**\n- * Looks for -regtest or -testnet and then calls SelectParams as appropriate.\n- * Returns false if an invalid combination is given.\n+ * Returns the appropriate Network ID from the string provided in -network. \n+ * If nothing is found, it also looks for -regtest or -testnet.\n+ * Returns MAIN by default.\n+ * Raises an error if an invalid combination is given or if the -network is not supported.\n  */\n-bool SelectParamsFromCommandLine();\n+void SelectParamsFromCommandLine();\n \n #endif // BITCOIN_CHAINPARAMS_H"
      },
      {
        "sha": "839e64a54738bbaeefd68c883811720a948f02b0",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 10,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1df7eb85b9873fe78ef8391e5751564bb994283d/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1df7eb85b9873fe78ef8391e5751564bb994283d/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=1df7eb85b9873fe78ef8391e5751564bb994283d",
        "patch": "@@ -90,33 +90,44 @@ void SelectBaseParams(CBaseChainParams::Network network)\n         pCurrentBaseParams = &unitTestParams;\n         break;\n     default:\n-        assert(false && \"Unimplemented network\");\n-        return;\n+        throw std::runtime_error(\"Unimplemented network\\n\");\n     }\n }\n \n CBaseChainParams::Network NetworkIdFromCommandLine()\n {\n+    std::string network = GetArg(\"-network\", \"\");\n+    if (network == \"main\")\n+        return CBaseChainParams::MAIN;\n+    if (network == \"testnet\")\n+        return CBaseChainParams::TESTNET;\n+    if (network == \"testnet\")\n+        return CBaseChainParams::REGTEST;\n+    if (network == \"unittest\")\n+        return CBaseChainParams::UNITTEST;\n+    if (network != \"\") {\n+        throw std::runtime_error(\"Unimplemented network \" + network + \"\\n\");\n+    }\n     bool fRegTest = GetBoolArg(\"-regtest\", false);\n     bool fTestNet = GetBoolArg(\"-testnet\", false);\n \n     if (fTestNet && fRegTest)\n-        return CBaseChainParams::MAX_NETWORK_TYPES;\n-    if (fRegTest)\n+        throw std::runtime_error(\"Invalid combination of -regtest and -testnet. Additionally -testnet and -regtest are deprecated, use -network=testnet instead.\\n\");\n+    if (fRegTest) {\n+        LogPrintStr(\"WARNING: -regtest is deprecated, use -network=regtest instead.\");\n         return CBaseChainParams::REGTEST;\n-    if (fTestNet)\n+    }\n+    if (fTestNet) {\n+        LogPrintStr(\"WARNING: -testnet is deprecated, use -network=testnet instead.\");\n         return CBaseChainParams::TESTNET;\n+    }\n     return CBaseChainParams::MAIN;\n }\n \n-bool SelectBaseParamsFromCommandLine()\n+void SelectBaseParamsFromCommandLine()\n {\n     CBaseChainParams::Network network = NetworkIdFromCommandLine();\n-    if (network == CBaseChainParams::MAX_NETWORK_TYPES)\n-        return false;\n-\n     SelectBaseParams(network);\n-    return true;\n }\n \n bool AreBaseParamsConfigured()"
      },
      {
        "sha": "39773f3b67771117e35fea61685edf3108d293df",
        "filename": "src/chainparamsbase.h",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1df7eb85b9873fe78ef8391e5751564bb994283d/src/chainparamsbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1df7eb85b9873fe78ef8391e5751564bb994283d/src/chainparamsbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.h?ref=1df7eb85b9873fe78ef8391e5751564bb994283d",
        "patch": "@@ -44,16 +44,17 @@ const CBaseChainParams& BaseParams();\n void SelectBaseParams(CBaseChainParams::Network network);\n \n /**\n- * Looks for -regtest or -testnet and returns the appropriate Network ID.\n- * Returns MAX_NETWORK_TYPES if an invalid combination is given.\n+ * Returns the appropriate Network ID from the string provided in -network. \n+ * If nothing is found, it also looks for -regtest or -testnet.\n+ * Returns MAIN by default.\n+ * Raises an error if an invalid combination is given or if the -network is not supported.\n  */\n CBaseChainParams::Network NetworkIdFromCommandLine();\n \n /**\n  * Calls NetworkIdFromCommandLine() and then calls SelectParams as appropriate.\n- * Returns false if an invalid combination is given.\n  */\n-bool SelectBaseParamsFromCommandLine();\n+void SelectBaseParamsFromCommandLine();\n \n /**\n  * Return true if SelectBaseParamsFromCommandLine() has been called to select"
      },
      {
        "sha": "e9f89dd993bea0444b93cf101cb2a8ee9d6bf13f",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1df7eb85b9873fe78ef8391e5751564bb994283d/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1df7eb85b9873fe78ef8391e5751564bb994283d/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=1df7eb85b9873fe78ef8391e5751564bb994283d",
        "patch": "@@ -563,10 +563,12 @@ int main(int argc, char *argv[])\n     // - QSettings() will use the new application name after this, resulting in network-specific settings\n     // - Needs to be done before createOptionsModel\n \n-    // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n-    if (!SelectParamsFromCommandLine()) {\n-        QMessageBox::critical(0, QObject::tr(\"Bitcoin Core\"), QObject::tr(\"Error: Invalid combination of -regtest and -testnet.\"));\n-        return 1;\n+    // Check for -network, -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+    try {\n+        SelectParamsFromCommandLine();\n+    } catch(std::exception &e) {\n+        QMessageBox::critical(0, QObject::tr(\"Bitcoin Core\"), QObject::tr(\"Error: %1.\").arg(e.what()));\n+        return false;\n     }\n #ifdef ENABLE_WALLET\n     // Parse URIs on command line -- this can affect Params()"
      }
    ]
  },
  {
    "sha": "f7229db890d5e85a8f3956427e7b900d8d8ed399",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNzIyOWRiODkwZDVlODVhOGYzOTU2NDI3ZTdiOTAwZDhkOGVkMzk5",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2014-11-06T23:22:41Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2014-11-06T23:30:48Z"
      },
      "message": "SQUASHME: fix nits",
      "tree": {
        "sha": "18bf1d2e5454da8da35ff0ef99dbded3bb88d64f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/18bf1d2e5454da8da35ff0ef99dbded3bb88d64f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f7229db890d5e85a8f3956427e7b900d8d8ed399",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7229db890d5e85a8f3956427e7b900d8d8ed399",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f7229db890d5e85a8f3956427e7b900d8d8ed399",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7229db890d5e85a8f3956427e7b900d8d8ed399/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1df7eb85b9873fe78ef8391e5751564bb994283d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1df7eb85b9873fe78ef8391e5751564bb994283d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1df7eb85b9873fe78ef8391e5751564bb994283d"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 26,
      "deletions": 12
    },
    "files": [
      {
        "sha": "f1c433cc615e36e2a815aa64e3b99decddc9d44a",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7229db890d5e85a8f3956427e7b900d8d8ed399/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7229db890d5e85a8f3956427e7b900d8d8ed399/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=f7229db890d5e85a8f3956427e7b900d8d8ed399",
        "patch": "@@ -77,7 +77,12 @@ static bool AppInitRPC(int argc, char* argv[])\n         return false;\n     }\n     // Check for -network, -testnet or -regtest parameter (BaseParams() calls are only valid after this clause)\n-    SelectBaseParamsFromCommandLine();\n+    try {\n+        SelectBaseParamsFromCommandLine();\n+    } catch(std::exception &e) {\n+        fprintf(stderr, \"Error: %s\\n\", e.what());\n+        return false;\n+    }\n \n     if (argc<2 || mapArgs.count(\"-?\") || mapArgs.count(\"-help\") || mapArgs.count(\"-version\")) {\n         std::string strUsage = _(\"Bitcoin Core RPC client version\") + \" \" + FormatFullVersion() + \"\\n\";"
      },
      {
        "sha": "f3454f1115c24aa50fd9e490ad3d4faadd13b6aa",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7229db890d5e85a8f3956427e7b900d8d8ed399/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7229db890d5e85a8f3956427e7b900d8d8ed399/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=f7229db890d5e85a8f3956427e7b900d8d8ed399",
        "patch": "@@ -35,7 +35,12 @@ static bool AppInitRawTx(int argc, char* argv[])\n     ParseParameters(argc, argv);\n \n     // Check for -network, -testnet or -regtest parameter (Params() calls are only valid after this clause)\n-    SelectParamsFromCommandLine();\n+    try {\n+        SelectParamsFromCommandLine();\n+    } catch(std::exception &e) {\n+        fprintf(stderr, \"Error: %s\\n\", e.what());\n+        return false;\n+    }\n \n     fCreateBlank = GetBoolArg(\"-create\", false);\n "
      },
      {
        "sha": "8705fd0f46c32347bd1a4965a341c964a0b961f1",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7229db890d5e85a8f3956427e7b900d8d8ed399/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7229db890d5e85a8f3956427e7b900d8d8ed399/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=f7229db890d5e85a8f3956427e7b900d8d8ed399",
        "patch": "@@ -79,7 +79,12 @@ bool AppInit(int argc, char* argv[])\n             return false;\n         }\n         // Check for -network, -testnet or -regtest parameter (Params() calls are only valid after this clause)\n-        SelectParamsFromCommandLine();\n+        try {\n+            SelectParamsFromCommandLine();\n+        } catch(std::exception &e) {\n+            fprintf(stderr, \"Error: %s\\n\", e.what());\n+            return false;\n+        }\n \n         if (mapArgs.count(\"-?\") || mapArgs.count(\"-help\") || mapArgs.count(\"-version\"))\n         {"
      },
      {
        "sha": "10e7d15827c14fa7934246dda8f0cd737d1c10eb",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7229db890d5e85a8f3956427e7b900d8d8ed399/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7229db890d5e85a8f3956427e7b900d8d8ed399/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=f7229db890d5e85a8f3956427e7b900d8d8ed399",
        "patch": "@@ -349,7 +349,7 @@ CChainParams &Params(CBaseChainParams::Network network) {\n         case CBaseChainParams::UNITTEST:\n             return unitTestParams;\n         default:\n-            throw std::runtime_error(\"Unimplemented network\\n\");\n+            throw std::runtime_error(\"Unknown network\\n\");\n     }\n }\n "
      },
      {
        "sha": "8dc7fac657a4c759672fe09e460b6519a1a56011",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7229db890d5e85a8f3956427e7b900d8d8ed399/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7229db890d5e85a8f3956427e7b900d8d8ed399/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=f7229db890d5e85a8f3956427e7b900d8d8ed399",
        "patch": "@@ -145,10 +145,8 @@ CModifiableParams *ModifiableParams();\n void SelectParams(CBaseChainParams::Network network);\n \n /**\n- * Returns the appropriate Network ID from the string provided in -network. \n- * If nothing is found, it also looks for -regtest or -testnet.\n- * Returns MAIN by default.\n- * Raises an error if an invalid combination is given or if the -network is not supported.\n+ * Calls NetworkIdFromCommandLine() and then calls SelectBaseParams()\n+ * and SelectParams() to select the appropriate network.\n  */\n void SelectParamsFromCommandLine();\n "
      },
      {
        "sha": "7c7fd9dbe9818c315ae24eee7eff2d2ae1da577f",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7229db890d5e85a8f3956427e7b900d8d8ed399/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7229db890d5e85a8f3956427e7b900d8d8ed399/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=f7229db890d5e85a8f3956427e7b900d8d8ed399",
        "patch": "@@ -90,7 +90,7 @@ void SelectBaseParams(CBaseChainParams::Network network)\n         pCurrentBaseParams = &unitTestParams;\n         break;\n     default:\n-        throw std::runtime_error(\"Unimplemented network\\n\");\n+        throw std::runtime_error(\"Unknown network\\n\");\n     }\n }\n \n@@ -101,12 +101,12 @@ CBaseChainParams::Network NetworkIdFromCommandLine()\n         return CBaseChainParams::MAIN;\n     if (network == \"testnet\")\n         return CBaseChainParams::TESTNET;\n-    if (network == \"testnet\")\n+    if (network == \"regtest\")\n         return CBaseChainParams::REGTEST;\n     if (network == \"unittest\")\n         return CBaseChainParams::UNITTEST;\n     if (network != \"\") {\n-        throw std::runtime_error(\"Unimplemented network \" + network + \"\\n\");\n+        throw std::runtime_error(\"Unknown network \" + network + \"\\n\");\n     }\n     bool fRegTest = GetBoolArg(\"-regtest\", false);\n     bool fTestNet = GetBoolArg(\"-testnet\", false);"
      },
      {
        "sha": "431135c4a681d00ff2ba22501b180c52e4c48576",
        "filename": "src/chainparamsbase.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7229db890d5e85a8f3956427e7b900d8d8ed399/src/chainparamsbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7229db890d5e85a8f3956427e7b900d8d8ed399/src/chainparamsbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.h?ref=f7229db890d5e85a8f3956427e7b900d8d8ed399",
        "patch": "@@ -52,7 +52,8 @@ void SelectBaseParams(CBaseChainParams::Network network);\n CBaseChainParams::Network NetworkIdFromCommandLine();\n \n /**\n- * Calls NetworkIdFromCommandLine() and then calls SelectParams as appropriate.\n+ * Calls NetworkIdFromCommandLine() and then calls SelectBaseParams() \n+ * to select the appropriate network.\n  */\n void SelectBaseParamsFromCommandLine();\n "
      }
    ]
  },
  {
    "sha": "c7fa1f2d29f06e7f8a8a0b5234959cebfc4f43fc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjN2ZhMWYyZDI5ZjA2ZTdmOGE4YTBiNTIzNDk1OWNlYmZjNGY0M2Zj",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2014-11-06T23:30:30Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2014-11-06T23:30:48Z"
      },
      "message": "SQUASHME: Use BIP70 string identifiers",
      "tree": {
        "sha": "bed968aa08e76f74687aba97bbbed1379d465bb0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bed968aa08e76f74687aba97bbbed1379d465bb0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c7fa1f2d29f06e7f8a8a0b5234959cebfc4f43fc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7fa1f2d29f06e7f8a8a0b5234959cebfc4f43fc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c7fa1f2d29f06e7f8a8a0b5234959cebfc4f43fc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7fa1f2d29f06e7f8a8a0b5234959cebfc4f43fc/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f7229db890d5e85a8f3956427e7b900d8d8ed399",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7229db890d5e85a8f3956427e7b900d8d8ed399",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f7229db890d5e85a8f3956427e7b900d8d8ed399"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "9e5bfa05efe3f3908a8d4b725b1d3d2a4fccf68b",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c7fa1f2d29f06e7f8a8a0b5234959cebfc4f43fc/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c7fa1f2d29f06e7f8a8a0b5234959cebfc4f43fc/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=c7fa1f2d29f06e7f8a8a0b5234959cebfc4f43fc",
        "patch": "@@ -99,7 +99,7 @@ CBaseChainParams::Network NetworkIdFromCommandLine()\n     std::string network = GetArg(\"-network\", \"\");\n     if (network == \"main\")\n         return CBaseChainParams::MAIN;\n-    if (network == \"testnet\")\n+    if (network == \"test\")\n         return CBaseChainParams::TESTNET;\n     if (network == \"regtest\")\n         return CBaseChainParams::REGTEST;\n@@ -112,13 +112,13 @@ CBaseChainParams::Network NetworkIdFromCommandLine()\n     bool fTestNet = GetBoolArg(\"-testnet\", false);\n \n     if (fTestNet && fRegTest)\n-        throw std::runtime_error(\"Invalid combination of -regtest and -testnet. Additionally -testnet and -regtest are deprecated, use -network=testnet instead.\\n\");\n+        throw std::runtime_error(\"Invalid combination of -regtest and -testnet. Additionally -testnet and -regtest are deprecated, use -network=test or -network=regtest instead.\\n\");\n     if (fRegTest) {\n         LogPrintStr(\"WARNING: -regtest is deprecated, use -network=regtest instead.\");\n         return CBaseChainParams::REGTEST;\n     }\n     if (fTestNet) {\n-        LogPrintStr(\"WARNING: -testnet is deprecated, use -network=testnet instead.\");\n+        LogPrintStr(\"WARNING: -testnet is deprecated, use -network=test instead.\");\n         return CBaseChainParams::TESTNET;\n     }\n     return CBaseChainParams::MAIN;"
      }
    ]
  },
  {
    "sha": "5357348aa654132e0b0b76ac4d4236e5bedf3256",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MzU3MzQ4YWE2NTQxMzJlMGIwYjc2YWM0ZDQyMzZlNWJlZGYzMjU2",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2014-11-06T23:33:38Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2014-11-06T23:33:38Z"
      },
      "message": "SQUASHME: Don't add a new line that wasn't there",
      "tree": {
        "sha": "dd31f7ce3be4112bcd3b9981485a5733b2825405",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dd31f7ce3be4112bcd3b9981485a5733b2825405"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5357348aa654132e0b0b76ac4d4236e5bedf3256",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5357348aa654132e0b0b76ac4d4236e5bedf3256",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5357348aa654132e0b0b76ac4d4236e5bedf3256",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5357348aa654132e0b0b76ac4d4236e5bedf3256/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c7fa1f2d29f06e7f8a8a0b5234959cebfc4f43fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7fa1f2d29f06e7f8a8a0b5234959cebfc4f43fc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c7fa1f2d29f06e7f8a8a0b5234959cebfc4f43fc"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 0,
      "deletions": 1
    },
    "files": [
      {
        "sha": "35804062e1d5d77641c9466875e1831b047cf4ea",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5357348aa654132e0b0b76ac4d4236e5bedf3256/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5357348aa654132e0b0b76ac4d4236e5bedf3256/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=5357348aa654132e0b0b76ac4d4236e5bedf3256",
        "patch": "@@ -83,7 +83,6 @@ static bool AppInitRPC(int argc, char* argv[])\n         fprintf(stderr, \"Error: %s\\n\", e.what());\n         return false;\n     }\n-\n     if (argc<2 || mapArgs.count(\"-?\") || mapArgs.count(\"-help\") || mapArgs.count(\"-version\")) {\n         std::string strUsage = _(\"Bitcoin Core RPC client version\") + \" \" + FormatFullVersion() + \"\\n\";\n         if (!mapArgs.count(\"-version\")) {"
      }
    ]
  },
  {
    "sha": "fb4bf4309e8840da2c856c232132d346871cf879",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYjRiZjQzMDllODg0MGRhMmM4NTZjMjMyMTMyZDM0Njg3MWNmODc5",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2014-11-07T09:36:04Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2014-11-07T09:36:04Z"
      },
      "message": "SQUASHME: reorder NetworkIdFromCommandLine()",
      "tree": {
        "sha": "19cb6f0b9c3791626553737a63945337554827bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/19cb6f0b9c3791626553737a63945337554827bc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fb4bf4309e8840da2c856c232132d346871cf879",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb4bf4309e8840da2c856c232132d346871cf879",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fb4bf4309e8840da2c856c232132d346871cf879",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb4bf4309e8840da2c856c232132d346871cf879/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5357348aa654132e0b0b76ac4d4236e5bedf3256",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5357348aa654132e0b0b76ac4d4236e5bedf3256",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5357348aa654132e0b0b76ac4d4236e5bedf3256"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 10,
      "deletions": 13
    },
    "files": [
      {
        "sha": "f8d2516ab43f64d4ca550e23a650ee5a02224a8b",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 13,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb4bf4309e8840da2c856c232132d346871cf879/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb4bf4309e8840da2c856c232132d346871cf879/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=fb4bf4309e8840da2c856c232132d346871cf879",
        "patch": "@@ -96,18 +96,6 @@ void SelectBaseParams(CBaseChainParams::Network network)\n \n CBaseChainParams::Network NetworkIdFromCommandLine()\n {\n-    std::string network = GetArg(\"-network\", \"\");\n-    if (network == \"main\")\n-        return CBaseChainParams::MAIN;\n-    if (network == \"test\")\n-        return CBaseChainParams::TESTNET;\n-    if (network == \"regtest\")\n-        return CBaseChainParams::REGTEST;\n-    if (network == \"unittest\")\n-        return CBaseChainParams::UNITTEST;\n-    if (network != \"\") {\n-        throw std::runtime_error(\"Unknown network \" + network + \"\\n\");\n-    }\n     bool fRegTest = GetBoolArg(\"-regtest\", false);\n     bool fTestNet = GetBoolArg(\"-testnet\", false);\n \n@@ -121,7 +109,16 @@ CBaseChainParams::Network NetworkIdFromCommandLine()\n         LogPrintStr(\"WARNING: -testnet is deprecated, use -network=test instead.\");\n         return CBaseChainParams::TESTNET;\n     }\n-    return CBaseChainParams::MAIN;\n+    std::string network = GetArg(\"-network\", \"main\");\n+    if (network == \"main\")\n+        return CBaseChainParams::MAIN;\n+    if (network == \"test\")\n+        return CBaseChainParams::TESTNET;\n+    if (network == \"regtest\")\n+        return CBaseChainParams::REGTEST;\n+    if (network == \"unittest\")\n+        return CBaseChainParams::UNITTEST;\n+    throw std::runtime_error(\"Unknown network \" + network + \"\\n\");\n }\n \n void SelectBaseParamsFromCommandLine()"
      }
    ]
  },
  {
    "sha": "d853454ca2bd3287dcc61ad5afddbf3362b4cd7b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkODUzNDU0Y2EyYmQzMjg3ZGNjNjFhZDVhZmRkYmYzMzYyYjRjZDdi",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2014-11-07T09:39:58Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2014-11-07T09:39:58Z"
      },
      "message": "Disable -testnet and -regtest deprecated flags",
      "tree": {
        "sha": "48b35b40261c53ef45deaee7d712dfca518b51fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/48b35b40261c53ef45deaee7d712dfca518b51fb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d853454ca2bd3287dcc61ad5afddbf3362b4cd7b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d853454ca2bd3287dcc61ad5afddbf3362b4cd7b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d853454ca2bd3287dcc61ad5afddbf3362b4cd7b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d853454ca2bd3287dcc61ad5afddbf3362b4cd7b/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fb4bf4309e8840da2c856c232132d346871cf879",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb4bf4309e8840da2c856c232132d346871cf879",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fb4bf4309e8840da2c856c232132d346871cf879"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 4,
      "deletions": 11
    },
    "files": [
      {
        "sha": "7f0fc1809838c94acef32f007dafea7ffcbec4c0",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 11,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d853454ca2bd3287dcc61ad5afddbf3362b4cd7b/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d853454ca2bd3287dcc61ad5afddbf3362b4cd7b/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=d853454ca2bd3287dcc61ad5afddbf3362b4cd7b",
        "patch": "@@ -96,18 +96,11 @@ void SelectBaseParams(CBaseChainParams::Network network)\n \n CBaseChainParams::Network NetworkIdFromCommandLine()\n {\n-    bool fRegTest = GetBoolArg(\"-regtest\", false);\n-    bool fTestNet = GetBoolArg(\"-testnet\", false);\n-\n-    if (fTestNet && fRegTest)\n-        throw std::runtime_error(\"Invalid combination of -regtest and -testnet. Additionally -testnet and -regtest are deprecated, use -network=test or -network=regtest instead.\\n\");\n-    if (fRegTest) {\n-        LogPrintStr(\"WARNING: -regtest is deprecated, use -network=regtest instead.\");\n-        return CBaseChainParams::REGTEST;\n+    if (GetBoolArg(\"-regtest\", false)) {\n+        LogPrintStr(\"WARNING: -regtest is disabled, use -network=regtest instead.\");\n     }\n-    if (fTestNet) {\n-        LogPrintStr(\"WARNING: -testnet is deprecated, use -network=test instead.\");\n-        return CBaseChainParams::TESTNET;\n+    if (GetBoolArg(\"-testnet\", false)) {\n+        LogPrintStr(\"WARNING: -testnet is disabled, use -network=test instead.\");\n     }\n     std::string network = GetArg(\"-network\", \"main\");\n     if (network == \"main\")"
      }
    ]
  }
]