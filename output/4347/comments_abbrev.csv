sipa,2014-06-21T20:34:35Z,Untested ACK\n,https://github.com/bitcoin/bitcoin/pull/4347#issuecomment-46764089,46764089,
jgarzik,2014-06-21T20:38:55Z,untested ACK\n,https://github.com/bitcoin/bitcoin/pull/4347#issuecomment-46764168,46764168,
gmaxwell,2014-06-21T20:46:55Z,I have a little concern that people will write code which doesn't handle this rare failure and when it happens simply fail to take change entirely... but I don't have anything better to suggest.\n,https://github.com/bitcoin/bitcoin/pull/4347#issuecomment-46764396,46764396,
laanwj,2014-06-22T09:24:39Z,"@jgarzik The idea is that it should be possible to restart the mining thread with ""setgenerate"" after unlocking the wallet and generating a new keypool (still need to test this though). But requiring the entire process to shut down seems overly drastic.\nAnyhow who would be 'actively mining' using the internal miner and an encrypted wallet? I mean, I suppose the internal miner is still useful for ",https://github.com/bitcoin/bitcoin/pull/4347#issuecomment-46776283,46776283,
gmaxwell,2014-06-23T00:15:52Z,"@laanwj I doubt deprecating it would helpâ€” it's just the kind of sharp interface which may break people from time to time even if they're amply warned. I don't think we should do any different, I mentioned the concern only for the chance that someone would have some brillant idea I was missing.\n",https://github.com/bitcoin/bitcoin/pull/4347#issuecomment-46797249,46797249,
BitcoinPullTester,2014-07-04T10:24:38Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4347_3b43f959e006ee880af60c3c0f33da9dd7d1ffc9/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/4347#issuecomment-48028913,48028913,
laanwj,2014-06-16T13:01:40Z,"BTW I was a bit surprised here; I do a keypoolrefill(3) with no keys left, but it needs to request four keys to exhaust the pool. Not sure yet why.\n",https://github.com/bitcoin/bitcoin/pull/4347#discussion_r13803485,13803485,qa/rpc-tests/keypool.py
sipa,2014-06-21T20:31:45Z,"Perhaps some remaining artefact of a default key, requested before filling the keypool with N extra keys?\n",https://github.com/bitcoin/bitcoin/pull/4347#discussion_r14051504,14051504,qa/rpc-tests/keypool.py
laanwj,2014-06-22T09:27:59Z,"Right, that may be it - I want to debug this and know for sure before I merge this.\n\nRegarding the 'default key', after this pull it is only used to detect whether this is the first run with a wallet. A later pull could remove it entirely.\n",https://github.com/bitcoin/bitcoin/pull/4347#discussion_r14053703,14053703,qa/rpc-tests/keypool.py
laanwj,2014-07-11T13:32:45Z,"OK, nothing sinister is going on here. One is added to the target size in `TopUpKeypool`. No idea why, but it's not harmful.\n\nhttps://github.com/bitcoin/bitcoin/blob/master/src/wallet.cpp#L1765 :\n\n``` c++\n        while (setKeyPool.size() < (nTargetSize + 1))\n```\n",https://github.com/bitcoin/bitcoin/pull/4347#discussion_r14820316,14820316,qa/rpc-tests/keypool.py
