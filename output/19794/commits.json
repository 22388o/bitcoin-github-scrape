[
  {
    "sha": "628812a34ea0d6ac6ed17abaa06fb8e4758c4c5f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2Mjg4MTJhMzRlYTBkNmFjNmVkMTdhYmFhMDZmYjhlNDc1OGM0YzVm",
    "commit": {
      "author": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2020-08-24T20:13:59Z"
      },
      "committer": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2020-09-06T22:08:38Z"
      },
      "message": "p2p: Remove fGetAddr flag\n\n`fGetAddr` is an old flag that indicates an ongoing GETADDR/ADDR interaction.\nIntroduced in dd519206a684c772a4a06ceecc87c665ad09d8be, it prevents further\nrelay of received ADDR answers to other peers via the `RelayAddress()` gossip\nmechanism while set - probably to prevent ADDR traffic from being dominated by\nlarge GETADDR answers.\u00a0\n\nIt also used to be possible to receive a large GETADDR answer spread over\nmultiple ADDR messages (each bounded to max 1000 addresses), so the condition\n`if (vAddr.size() < 1000) pfrom.fGetAddr = false;` was meant to ensure that\n`fGetAddr` would only get cleared once the last ADDR of the package was\nreceived (typically with < 1000 addresses).\n\nHowever, `fGetAddr` currently does not work as originally intended and is no\nlonger useful:\n- typically, the first ADDR we receive from a peer after sending the GETADDR\nis not the GETADDR response but the self-announcement of our peer. If this is\nthe case, `fGetAddr` acts on it (preventing its relay) and is already\ninactivated once the GETADDR response is received.\n- 5cbf75324d1509a1262b65c5073314a4da3f6d77 introduced the condition\n`vAddr.size() <= 10`, so messages with more than 10 elements won't be relayed\nfurther regardless.\n- since #5419, we do not get more than one ADDR message in response to GETADDR\nbecause `vAddrToSend` cannot have more than 1000 elements.\n\nRemoving the flag will cause initial self-announcements from outbound peers to\nbe gossip-relayed.",
      "tree": {
        "sha": "6d41a40bf671b1718948acced1735b6f3e8db961",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6d41a40bf671b1718948acced1735b6f3e8db961"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/628812a34ea0d6ac6ed17abaa06fb8e4758c4c5f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/628812a34ea0d6ac6ed17abaa06fb8e4758c4c5f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/628812a34ea0d6ac6ed17abaa06fb8e4758c4c5f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/628812a34ea0d6ac6ed17abaa06fb8e4758c4c5f/comments",
    "author": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a0a422c34cfd6514d0cc445bd784d3ee1a2d1749",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0a422c34cfd6514d0cc445bd784d3ee1a2d1749",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a0a422c34cfd6514d0cc445bd784d3ee1a2d1749"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 1,
      "deletions": 6
    },
    "files": [
      {
        "sha": "38ff3e2cc9fd349061b258391afe23a8aac14399",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/628812a34ea0d6ac6ed17abaa06fb8e4758c4c5f/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/628812a34ea0d6ac6ed17abaa06fb8e4758c4c5f/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=628812a34ea0d6ac6ed17abaa06fb8e4758c4c5f",
        "patch": "@@ -935,7 +935,6 @@ class CNode\n     // flood relay\n     std::vector<CAddress> vAddrToSend;\n     std::unique_ptr<CRollingBloomFilter> m_addr_known{nullptr};\n-    bool fGetAddr{false};\n     std::chrono::microseconds m_next_addr_send GUARDED_BY(cs_sendProcessing){0};\n     std::chrono::microseconds m_next_local_addr_send GUARDED_BY(cs_sendProcessing){0};\n "
      },
      {
        "sha": "25a8e3c923a6fb9560ed456279c818bf0b9a319c",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/628812a34ea0d6ac6ed17abaa06fb8e4758c4c5f/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/628812a34ea0d6ac6ed17abaa06fb8e4758c4c5f/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=628812a34ea0d6ac6ed17abaa06fb8e4758c4c5f",
        "patch": "@@ -2493,7 +2493,6 @@ void PeerLogicValidation::ProcessMessage(CNode& pfrom, const std::string& msg_ty\n \n             // Get recent addresses\n             m_connman.PushMessage(&pfrom, CNetMsgMaker(nSendVersion).Make(NetMsgType::GETADDR));\n-            pfrom.fGetAddr = true;\n \n             // Moves address from New to Tried table in Addrman, resolves\n             // tried-table collisions, etc.\n@@ -2634,8 +2633,7 @@ void PeerLogicValidation::ProcessMessage(CNode& pfrom, const std::string& msg_ty\n                 continue;\n             }\n             bool fReachable = IsReachable(addr);\n-            if (addr.nTime > nSince && !pfrom.fGetAddr && vAddr.size() <= 10 && addr.IsRoutable())\n-            {\n+            if (addr.nTime > nSince && vAddr.size() <= 10 && addr.IsRoutable()) {\n                 // Relay to a limited number of other nodes\n                 RelayAddress(addr, fReachable, m_connman);\n             }\n@@ -2644,8 +2642,6 @@ void PeerLogicValidation::ProcessMessage(CNode& pfrom, const std::string& msg_ty\n                 vAddrOk.push_back(addr);\n         }\n         m_connman.AddNewAddresses(vAddrOk, pfrom.addr, 2 * 60 * 60);\n-        if (vAddr.size() < 1000)\n-            pfrom.fGetAddr = false;\n         if (pfrom.IsAddrFetchConn())\n             pfrom.fDisconnect = true;\n         return;"
      }
    ]
  }
]