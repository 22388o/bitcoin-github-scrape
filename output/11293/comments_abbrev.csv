practicalswift,2017-09-11T09:29:45Z,Concept ACK. Very nice! :-),https://github.com/bitcoin/bitcoin/pull/11293#issuecomment-328473980,328473980,
jamesob,2017-09-12T00:46:26Z,@promag I've split this into two commits as requested. Thanks for the look.,https://github.com/bitcoin/bitcoin/pull/11293#issuecomment-328698473,328698473,
jamesob,2017-09-12T02:58:34Z,Changed per feedback; thanks @sipa.,https://github.com/bitcoin/bitcoin/pull/11293#issuecomment-328719199,328719199,
jamesob,2017-09-13T15:40:35Z,Incorporated feedback; thanks @promag. ,https://github.com/bitcoin/bitcoin/pull/11293#issuecomment-329208688,329208688,
jamesob,2017-09-15T19:58:39Z,@promag @sipa anything else you'd like to see done here?,https://github.com/bitcoin/bitcoin/pull/11293#issuecomment-329886556,329886556,
sipa,2017-09-16T00:26:33Z,utACK 17dd0973a63706717905bb3865129a32a4287adf,https://github.com/bitcoin/bitcoin/pull/11293#issuecomment-329931911,329931911,
jamesob,2017-09-21T04:15:19Z,@TheBlueMatt thanks for the look. I've updated the tests to be a little more comprehensive per your feedback.,https://github.com/bitcoin/bitcoin/pull/11293#issuecomment-331046484,331046484,
TheBlueMatt,2017-09-21T20:10:35Z,utACK 46ce223d15d4111d096f6342eb6f526d2507d7d7,https://github.com/bitcoin/bitcoin/pull/11293#issuecomment-331267659,331267659,
sipa,2017-09-21T20:20:16Z,utACK 46ce223d15d4111d096f6342eb6f526d2507d7d7,https://github.com/bitcoin/bitcoin/pull/11293#issuecomment-331269980,331269980,
jamesob,2017-09-23T16:37:16Z,Anything else needed here @laanwj?,https://github.com/bitcoin/bitcoin/pull/11293#issuecomment-331648613,331648613,
MarcoFalke,2017-10-03T11:19:55Z,utACK 46ce223d15d4111d096f6342eb6f526d2507d7d7,https://github.com/bitcoin/bitcoin/pull/11293#issuecomment-333812473,333812473,
promag,2017-10-03T11:58:53Z,utACK 46ce223.,https://github.com/bitcoin/bitcoin/pull/11293#issuecomment-333820159,333820159,
promag,2017-09-11T09:26:26Z,"Instead of pointers, you can make it receive references, just pass either `CBloomFilter()` or `std::set<uint256>()`, and remove the ` != nullptr` conditions above. Note that `CBloomFilter` is optimized when it is empty.\n\nIf you do this then this constructor can be public.\n",https://github.com/bitcoin/bitcoin/pull/11293#discussion_r138020811,138020811,src/merkleblock.h
jamesob,2017-09-12T00:40:03Z,"I don't think this will work in the case of `filter` being unused. I'm getting the following compilation error: \n```\nIn file included from merkleblock.cpp:6:0:\n\nmerkleblock.h: In constructor ‘CMerkleBlock::CMerkleBlock(const CBlock&, const std::set<uint256>&)’:\nmerkleblock.h:145:93: error: invalid initialization of non-const reference of type ‘CBloomFilter&’ from an rvalue of type ‘CBloo",https://github.com/bitcoin/bitcoin/pull/11293#discussion_r138227713,138227713,src/merkleblock.h
sipa,2017-09-12T02:12:32Z,"You can avoid constructing an intermediate `std::pair<unsigned int, uint256>`, by using:\n\n```c++\nvMatchedTxn.emplace_back(i, hash);\n```\n",https://github.com/bitcoin/bitcoin/pull/11293#discussion_r138237502,138237502,src/merkleblock.cpp
sipa,2017-09-12T02:13:26Z,Use `txids->count(hash)` instead.,https://github.com/bitcoin/bitcoin/pull/11293#discussion_r138237590,138237590,src/merkleblock.cpp
sipa,2017-09-12T02:14:16Z,Use `filter->IsRelevantAndUpdate(*block.vtx[i])`.,https://github.com/bitcoin/bitcoin/pull/11293#discussion_r138237659,138237659,src/merkleblock.cpp
sipa,2017-09-12T02:23:25Z,"You're not allowed to pass a temporary into a method that expects a non-const reference. Non-const references are intended for output arguments, and passing a temporary would mean there is effectively no output argument the caller can observe.\n\nIt seems to be that using a pointer which can be optionally `nullptr` is the correct approach here.",https://github.com/bitcoin/bitcoin/pull/11293#discussion_r138238573,138238573,src/merkleblock.h
promag,2017-09-12T21:48:35Z,Should have tested my suggestion. Agree with this approach.,https://github.com/bitcoin/bitcoin/pull/11293#discussion_r138475417,138475417,src/merkleblock.h
promag,2017-09-12T21:49:26Z,"Nit, move before `#include ""random.h""`.",https://github.com/bitcoin/bitcoin/pull/11293#discussion_r138475622,138475622,src/test/bloom_tests.cpp
promag,2017-09-12T21:51:15Z,"Nit, just\n```cpp\nif (txids && txids->count(hash)) {\n```\nSame below.",https://github.com/bitcoin/bitcoin/pull/11293#discussion_r138475997,138475997,src/merkleblock.cpp
TheBlueMatt,2017-09-19T19:37:31Z,You've added a bunch of trailing whitespace in this file (as well as test_bitcoin.cpp in 2 places and test_bitcoin.h in one). If you re-push this PR should fail travis due to #11300.,https://github.com/bitcoin/bitcoin/pull/11293#discussion_r139796439,139796439,src/test/merkleblock_tests.cpp
TheBlueMatt,2017-09-19T21:00:51Z,"Seems a strange thing to test, here? Maybe document on merkleblock.h what this thing even means? (ie ""Set only when constructing from a bloom filter to allow testing the set of things which matched the bloom filter directly"").",https://github.com/bitcoin/bitcoin/pull/11293#discussion_r139816573,139816573,src/test/merkleblock_tests.cpp
TheBlueMatt,2017-09-19T21:02:13Z,"Would be neat to also test the vIndex values here, too, no?",https://github.com/bitcoin/bitcoin/pull/11293#discussion_r139816909,139816909,src/test/merkleblock_tests.cpp
jamesob,2017-09-21T03:37:18Z,"Ah, totally right. Editor config adjusted -- thanks.",https://github.com/bitcoin/bitcoin/pull/11293#discussion_r140142714,140142714,src/test/merkleblock_tests.cpp
jamesob,2017-09-21T03:38:04Z,Comment added inline with test as well as merkleblock.h. Basically just used your copy directly.,https://github.com/bitcoin/bitcoin/pull/11293#discussion_r140142762,140142762,src/test/merkleblock_tests.cpp
jamesob,2017-09-21T03:38:33Z,Good idea! Added.,https://github.com/bitcoin/bitcoin/pull/11293#discussion_r140142797,140142797,src/test/merkleblock_tests.cpp
