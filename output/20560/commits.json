[
  {
    "sha": "44444ba759480237172d83f42374c5c29c76eda0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NDQ0NGJhNzU5NDgwMjM3MTcyZDgzZjQyMzc0YzVjMjljNzZlZGEw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-03T15:42:49Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-10T06:15:42Z"
      },
      "message": "fuzz: Link all targets once",
      "tree": {
        "sha": "aefce76c13c39192d4922a88749755dbc2decc11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aefce76c13c39192d4922a88749755dbc2decc11"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/44444ba759480237172d83f42374c5c29c76eda0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUg6wwwAhW3JkFMDODrn88DeTHA3TwG9+M15g/qGSRJwhh5Gy240dYAGCGJ6oVqm\nz235z3w6OanvtM4Ua+eU3d+lcoYCqeTAR2MAKeFsnsB2d+g0bZBkEZ0XKpd5XU+S\nY/jnBVILaie0U2ocCUkNdXEjCT4QMnp7dgEFE9rOs9B36KFjkFnaGsLDTyGYNdEN\nTtpXGo0sf52/JaOHyRegA6rZDHIDxNi/HibwFj9s9kf3Y0bTJ9mysuSzdZexbO9w\nGDYf0K3Vi8F1f2RkmdIbZP3Yl4oEMSyNCz5q+wWjk5w/jam5dEUYhEoZXKgsvzRw\nFR4P5oAmoyq3jGEGTbslryOjBgdYAoZTj2fuTUmp3FX08BkGeHenWXCtRMISYIt1\n/6vucXJCKhsqgmIjt2r/zAoGlNzQRD0J13eWhAdY00cCPXxdTBuyiXzxJCfnidWd\n8v4mqzbI7ZPWPsCGtCOKagX5FcWmSkGp2MOTcwdihYF1FmqkvTPtgVvZovdMGbwu\nG905LvMi\n=CiBv\n-----END PGP SIGNATURE-----",
        "payload": "tree aefce76c13c39192d4922a88749755dbc2decc11\nparent 751ffaabad82f7904fd1d9742a0b323a0ab7bfee\nauthor MarcoFalke <falke.marco@gmail.com> 1607010169 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1607580942 +0100\n\nfuzz: Link all targets once\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44444ba759480237172d83f42374c5c29c76eda0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/44444ba759480237172d83f42374c5c29c76eda0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44444ba759480237172d83f42374c5c29c76eda0/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "751ffaabad82f7904fd1d9742a0b323a0ab7bfee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/751ffaabad82f7904fd1d9742a0b323a0ab7bfee",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/751ffaabad82f7904fd1d9742a0b323a0ab7bfee"
      }
    ],
    "stats": {
      "total": 1740,
      "additions": 434,
      "deletions": 1306
    },
    "files": [
      {
        "sha": "80ce8210914d20509df364748d96033bd61a4a39",
        "filename": "doc/fuzzing.md",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/doc/fuzzing.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/doc/fuzzing.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/fuzzing.md?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -12,7 +12,7 @@ $ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzze\n # macOS users: If you have problem with this step then make sure to read \"macOS hints for\n # libFuzzer\" on https://github.com/bitcoin/bitcoin/blob/master/doc/fuzzing.md#macos-hints-for-libfuzzer\n $ make\n-$ src/test/fuzz/process_message\n+$ FUZZ=process_message src/test/fuzz/fuzz\n # abort fuzzing using ctrl-c\n ```\n \n@@ -26,7 +26,7 @@ If you specify a corpus directory then any new coverage increasing inputs will b\n \n ```sh\n $ mkdir -p process_message-seeded-from-thin-air/\n-$ src/test/fuzz/process_message process_message-seeded-from-thin-air/\n+$ FUZZ=process_message src/test/fuzz/fuzz process_message-seeded-from-thin-air/\n INFO: Seed: 840522292\n INFO: Loaded 1 modules   (424174 inline 8-bit counters): 424174 [0x55e121ef9ab8, 0x55e121f613a6),\n INFO: Loaded 1 PC tables (424174 PCs): 424174 [0x55e121f613a8,0x55e1225da288),\n@@ -70,7 +70,7 @@ To fuzz `process_message` using the [`bitcoin-core/qa-assets`](https://github.co\n \n ```sh\n $ git clone https://github.com/bitcoin-core/qa-assets\n-$ src/test/fuzz/process_message qa-assets/fuzz_seed_corpus/process_message/\n+$ FUZZ=process_message src/test/fuzz/fuzz qa-assets/fuzz_seed_corpus/process_message/\n INFO: Seed: 1346407872\n INFO: Loaded 1 modules   (424174 inline 8-bit counters): 424174 [0x55d8a9004ab8, 0x55d8a906c3a6),\n INFO: Loaded 1 PC tables (424174 PCs): 424174 [0x55d8a906c3a8,0x55d8a96e5288),\n@@ -129,7 +129,7 @@ $ make\n # try compiling using: AFL_NO_X86=1 make\n $ mkdir -p inputs/ outputs/\n $ echo A > inputs/thin-air-input\n-$ afl/afl-fuzz -i inputs/ -o outputs/ -- src/test/fuzz/bech32\n+$ FUZZ=bech32 afl/afl-fuzz -i inputs/ -o outputs/ -- src/test/fuzz/fuzz\n # You may have to change a few kernel parameters to test optimally - afl-fuzz\n # will print an error and suggestion if so.\n ```\n@@ -153,7 +153,7 @@ $ cd ..\n $ CC=$(pwd)/honggfuzz/hfuzz_cc/hfuzz-clang CXX=$(pwd)/honggfuzz/hfuzz_cc/hfuzz-clang++ ./configure --enable-fuzz --with-sanitizers=address,undefined\n $ make\n $ mkdir -p inputs/\n-$ honggfuzz/honggfuzz -i inputs/ -- src/test/fuzz/process_message\n+$ FUZZ=process_message honggfuzz/honggfuzz -i inputs/ -- src/test/fuzz/fuzz\n ```\n \n Read the [Honggfuzz documentation](https://github.com/google/honggfuzz/blob/master/docs/USAGE.md) for more information."
      },
      {
        "sha": "5cb125df04b9f1bde0f00e6c5f23e1bbdbe8d582",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 98,
        "deletions": 1087,
        "changes": 1185,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -2,165 +2,8 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-FUZZ_TARGETS = \\\n-  test/fuzz/addition_overflow \\\n-  test/fuzz/addr_info_deserialize \\\n-  test/fuzz/addrdb \\\n-  test/fuzz/address_deserialize \\\n-  test/fuzz/addrman \\\n-  test/fuzz/addrman_deserialize \\\n-  test/fuzz/asmap \\\n-  test/fuzz/asmap_direct \\\n-  test/fuzz/autofile \\\n-  test/fuzz/banentry_deserialize \\\n-  test/fuzz/banman \\\n-  test/fuzz/base_encode_decode \\\n-  test/fuzz/bech32 \\\n-  test/fuzz/block \\\n-  test/fuzz/block_deserialize \\\n-  test/fuzz/block_file_info_deserialize \\\n-  test/fuzz/block_filter_deserialize \\\n-  test/fuzz/block_header \\\n-  test/fuzz/block_header_and_short_txids_deserialize \\\n-  test/fuzz/blockfilter \\\n-  test/fuzz/blockheader_deserialize \\\n-  test/fuzz/blocklocator_deserialize \\\n-  test/fuzz/blockmerkleroot \\\n-  test/fuzz/blocktransactions_deserialize \\\n-  test/fuzz/blocktransactionsrequest_deserialize \\\n-  test/fuzz/blockundo_deserialize \\\n-  test/fuzz/bloom_filter \\\n-  test/fuzz/bloomfilter_deserialize \\\n-  test/fuzz/buffered_file \\\n-  test/fuzz/chain \\\n-  test/fuzz/checkqueue \\\n-  test/fuzz/coins_deserialize \\\n-  test/fuzz/coins_view \\\n-  test/fuzz/connman \\\n-  test/fuzz/crypto \\\n-  test/fuzz/crypto_aes256 \\\n-  test/fuzz/crypto_aes256cbc \\\n-  test/fuzz/crypto_chacha20 \\\n-  test/fuzz/crypto_chacha20_poly1305_aead \\\n-  test/fuzz/crypto_common \\\n-  test/fuzz/crypto_hkdf_hmac_sha256_l32 \\\n-  test/fuzz/crypto_poly1305 \\\n-  test/fuzz/cuckoocache \\\n-  test/fuzz/decode_tx \\\n-  test/fuzz/descriptor_parse \\\n-  test/fuzz/diskblockindex_deserialize \\\n-  test/fuzz/eval_script \\\n-  test/fuzz/fee_rate \\\n-  test/fuzz/fee_rate_deserialize \\\n-  test/fuzz/fees \\\n-  test/fuzz/flat_file_pos_deserialize \\\n-  test/fuzz/flatfile \\\n-  test/fuzz/float \\\n-  test/fuzz/golomb_rice \\\n-  test/fuzz/hex \\\n-  test/fuzz/http_request \\\n-  test/fuzz/integer \\\n-  test/fuzz/inv_deserialize \\\n-  test/fuzz/key \\\n-  test/fuzz/key_io \\\n-  test/fuzz/key_origin_info_deserialize \\\n-  test/fuzz/kitchen_sink \\\n-  test/fuzz/load_external_block_file \\\n-  test/fuzz/locale \\\n-  test/fuzz/merkle_block_deserialize \\\n-  test/fuzz/merkleblock \\\n-  test/fuzz/message \\\n-  test/fuzz/messageheader_deserialize \\\n-  test/fuzz/multiplication_overflow \\\n-  test/fuzz/net \\\n-  test/fuzz/net_permissions \\\n-  test/fuzz/netaddr_deserialize \\\n-  test/fuzz/netaddress \\\n-  test/fuzz/out_point_deserialize \\\n-  test/fuzz/p2p_transport_deserializer \\\n-  test/fuzz/parse_hd_keypath \\\n-  test/fuzz/parse_iso8601 \\\n-  test/fuzz/parse_numbers \\\n-  test/fuzz/parse_script \\\n-  test/fuzz/parse_univalue \\\n-  test/fuzz/partial_merkle_tree_deserialize \\\n-  test/fuzz/partially_signed_transaction_deserialize \\\n-  test/fuzz/policy_estimator \\\n-  test/fuzz/policy_estimator_io \\\n-  test/fuzz/pow \\\n-  test/fuzz/prefilled_transaction_deserialize \\\n-  test/fuzz/prevector \\\n-  test/fuzz/primitives_transaction \\\n-  test/fuzz/process_message \\\n-  test/fuzz/process_message_addr \\\n-  test/fuzz/process_message_block \\\n-  test/fuzz/process_message_blocktxn \\\n-  test/fuzz/process_message_cmpctblock \\\n-  test/fuzz/process_message_feefilter \\\n-  test/fuzz/process_message_filteradd \\\n-  test/fuzz/process_message_filterclear \\\n-  test/fuzz/process_message_filterload \\\n-  test/fuzz/process_message_getaddr \\\n-  test/fuzz/process_message_getblocks \\\n-  test/fuzz/process_message_getblocktxn \\\n-  test/fuzz/process_message_getdata \\\n-  test/fuzz/process_message_getheaders \\\n-  test/fuzz/process_message_headers \\\n-  test/fuzz/process_message_inv \\\n-  test/fuzz/process_message_mempool \\\n-  test/fuzz/process_message_notfound \\\n-  test/fuzz/process_message_ping \\\n-  test/fuzz/process_message_pong \\\n-  test/fuzz/process_message_sendcmpct \\\n-  test/fuzz/process_message_sendheaders \\\n-  test/fuzz/process_message_tx \\\n-  test/fuzz/process_message_verack \\\n-  test/fuzz/process_message_version \\\n-  test/fuzz/process_messages \\\n-  test/fuzz/protocol \\\n-  test/fuzz/psbt \\\n-  test/fuzz/psbt_input_deserialize \\\n-  test/fuzz/psbt_output_deserialize \\\n-  test/fuzz/pub_key_deserialize \\\n-  test/fuzz/random \\\n-  test/fuzz/rbf \\\n-  test/fuzz/rolling_bloom_filter \\\n-  test/fuzz/script \\\n-  test/fuzz/script_bitcoin_consensus \\\n-  test/fuzz/script_descriptor_cache \\\n-  test/fuzz/script_deserialize \\\n-  test/fuzz/script_flags \\\n-  test/fuzz/script_interpreter \\\n-  test/fuzz/script_assets_test_minimizer \\\n-  test/fuzz/script_ops \\\n-  test/fuzz/script_sigcache \\\n-  test/fuzz/script_sign \\\n-  test/fuzz/scriptnum_ops \\\n-  test/fuzz/secp256k1_ec_seckey_import_export_der \\\n-  test/fuzz/secp256k1_ecdsa_signature_parse_der_lax \\\n-  test/fuzz/service_deserialize \\\n-  test/fuzz/signature_checker \\\n-  test/fuzz/signet \\\n-  test/fuzz/snapshotmetadata_deserialize \\\n-  test/fuzz/span \\\n-  test/fuzz/spanparsing \\\n-  test/fuzz/string \\\n-  test/fuzz/strprintf \\\n-  test/fuzz/sub_net_deserialize \\\n-  test/fuzz/system \\\n-  test/fuzz/timedata \\\n-  test/fuzz/transaction \\\n-  test/fuzz/tx_in \\\n-  test/fuzz/tx_in_deserialize \\\n-  test/fuzz/tx_out \\\n-  test/fuzz/txoutcompressor_deserialize \\\n-  test/fuzz/txrequest \\\n-  test/fuzz/txundo_deserialize \\\n-  test/fuzz/uint160_deserialize \\\n-  test/fuzz/uint256_deserialize\n-\n if ENABLE_FUZZ\n-noinst_PROGRAMS += $(FUZZ_TARGETS:=)\n+noinst_PROGRAMS += test/fuzz/fuzz\n else\n bin_PROGRAMS += test/test_bitcoin\n endif\n@@ -334,935 +177,103 @@ if ENABLE_FUZZ\n \n FUZZ_SUITE_LDFLAGS_COMMON = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)\n \n-test_fuzz_addition_overflow_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_addition_overflow_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_addition_overflow_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_addition_overflow_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_addition_overflow_SOURCES = test/fuzz/addition_overflow.cpp\n-\n-test_fuzz_addr_info_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DADDR_INFO_DESERIALIZE=1\n-test_fuzz_addr_info_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_addr_info_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_addr_info_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_addr_info_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_addrdb_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_addrdb_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_addrdb_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_addrdb_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_addrdb_SOURCES = test/fuzz/addrdb.cpp\n-\n-test_fuzz_address_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DADDRESS_DESERIALIZE=1\n-test_fuzz_address_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_address_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_address_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_address_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_addrman_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_addrman_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_addrman_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_addrman_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_addrman_SOURCES = test/fuzz/addrman.cpp\n-\n-test_fuzz_addrman_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DADDRMAN_DESERIALIZE=1\n-test_fuzz_addrman_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_addrman_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_addrman_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_addrman_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_asmap_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_asmap_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_asmap_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_asmap_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_asmap_SOURCES = test/fuzz/asmap.cpp\n-\n-test_fuzz_asmap_direct_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_asmap_direct_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_asmap_direct_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_asmap_direct_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_asmap_direct_SOURCES = test/fuzz/asmap_direct.cpp\n-\n-test_fuzz_autofile_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_autofile_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_autofile_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_autofile_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_autofile_SOURCES = test/fuzz/autofile.cpp\n-\n-test_fuzz_banentry_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBANENTRY_DESERIALIZE=1\n-test_fuzz_banentry_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_banentry_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_banentry_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_banentry_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_banman_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_banman_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_banman_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_banman_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_banman_SOURCES = test/fuzz/banman.cpp\n-\n-test_fuzz_base_encode_decode_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_base_encode_decode_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_base_encode_decode_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_base_encode_decode_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_base_encode_decode_SOURCES = test/fuzz/base_encode_decode.cpp\n-\n-test_fuzz_bech32_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_bech32_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_bech32_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_bech32_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_bech32_SOURCES = test/fuzz/bech32.cpp\n-\n-test_fuzz_block_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_block_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_block_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_block_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_block_SOURCES = test/fuzz/block.cpp\n-\n-test_fuzz_block_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCK_DESERIALIZE=1\n-test_fuzz_block_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_block_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_block_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_block_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_block_file_info_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCK_FILE_INFO_DESERIALIZE=1\n-test_fuzz_block_file_info_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_block_file_info_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_block_file_info_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_block_file_info_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_block_filter_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCK_FILTER_DESERIALIZE=1\n-test_fuzz_block_filter_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_block_filter_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_block_filter_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_block_filter_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_block_header_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_block_header_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_block_header_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_block_header_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_block_header_SOURCES = test/fuzz/block_header.cpp\n-\n-test_fuzz_block_header_and_short_txids_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCK_HEADER_AND_SHORT_TXIDS_DESERIALIZE=1\n-test_fuzz_block_header_and_short_txids_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_block_header_and_short_txids_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_block_header_and_short_txids_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_block_header_and_short_txids_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_blockfilter_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_blockfilter_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_blockfilter_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_blockfilter_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_blockfilter_SOURCES = test/fuzz/blockfilter.cpp\n-\n-test_fuzz_blockheader_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCKHEADER_DESERIALIZE=1\n-test_fuzz_blockheader_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_blockheader_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_blockheader_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_blockheader_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_blocklocator_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCKLOCATOR_DESERIALIZE=1\n-test_fuzz_blocklocator_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_blocklocator_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_blocklocator_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_blocklocator_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_blockmerkleroot_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCKMERKLEROOT=1\n-test_fuzz_blockmerkleroot_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_blockmerkleroot_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_blockmerkleroot_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_blockmerkleroot_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_blocktransactions_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCKTRANSACTIONS_DESERIALIZE=1\n-test_fuzz_blocktransactions_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_blocktransactions_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_blocktransactions_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_blocktransactions_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_blocktransactionsrequest_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCKTRANSACTIONSREQUEST_DESERIALIZE=1\n-test_fuzz_blocktransactionsrequest_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_blocktransactionsrequest_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_blocktransactionsrequest_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_blocktransactionsrequest_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_blockundo_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCKUNDO_DESERIALIZE=1\n-test_fuzz_blockundo_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_blockundo_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_blockundo_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_blockundo_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_bloom_filter_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_bloom_filter_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_bloom_filter_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_bloom_filter_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_bloom_filter_SOURCES = test/fuzz/bloom_filter.cpp\n-\n-test_fuzz_bloomfilter_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOOMFILTER_DESERIALIZE=1\n-test_fuzz_bloomfilter_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_bloomfilter_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_bloomfilter_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_bloomfilter_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_buffered_file_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_buffered_file_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_buffered_file_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_buffered_file_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_buffered_file_SOURCES = test/fuzz/buffered_file.cpp\n-\n-test_fuzz_chain_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_chain_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_chain_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_chain_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_chain_SOURCES = test/fuzz/chain.cpp\n-\n-test_fuzz_checkqueue_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_checkqueue_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_checkqueue_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_checkqueue_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_checkqueue_SOURCES = test/fuzz/checkqueue.cpp\n-\n-test_fuzz_coins_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DCOINS_DESERIALIZE=1\n-test_fuzz_coins_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_coins_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_coins_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_coins_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_coins_view_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_coins_view_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_coins_view_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_coins_view_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_coins_view_SOURCES = test/fuzz/coins_view.cpp\n-\n-test_fuzz_connman_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_connman_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_connman_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_connman_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_connman_SOURCES = test/fuzz/connman.cpp\n-\n-test_fuzz_crypto_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_crypto_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_crypto_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_crypto_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_crypto_SOURCES = test/fuzz/crypto.cpp\n-\n-test_fuzz_crypto_aes256_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_crypto_aes256_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_crypto_aes256_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_crypto_aes256_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_crypto_aes256_SOURCES = test/fuzz/crypto_aes256.cpp\n-\n-test_fuzz_crypto_aes256cbc_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_crypto_aes256cbc_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_crypto_aes256cbc_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_crypto_aes256cbc_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_crypto_aes256cbc_SOURCES = test/fuzz/crypto_aes256cbc.cpp\n-\n-test_fuzz_crypto_chacha20_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_crypto_chacha20_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_crypto_chacha20_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_crypto_chacha20_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_crypto_chacha20_SOURCES = test/fuzz/crypto_chacha20.cpp\n-\n-test_fuzz_crypto_chacha20_poly1305_aead_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_crypto_chacha20_poly1305_aead_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_crypto_chacha20_poly1305_aead_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_crypto_chacha20_poly1305_aead_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_crypto_chacha20_poly1305_aead_SOURCES = test/fuzz/crypto_chacha20_poly1305_aead.cpp\n-\n-test_fuzz_crypto_common_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_crypto_common_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_crypto_common_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_crypto_common_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_crypto_common_SOURCES = test/fuzz/crypto_common.cpp\n-\n-test_fuzz_crypto_hkdf_hmac_sha256_l32_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_crypto_hkdf_hmac_sha256_l32_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_crypto_hkdf_hmac_sha256_l32_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_crypto_hkdf_hmac_sha256_l32_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_crypto_hkdf_hmac_sha256_l32_SOURCES = test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp\n-\n-test_fuzz_crypto_poly1305_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_crypto_poly1305_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_crypto_poly1305_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_crypto_poly1305_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_crypto_poly1305_SOURCES = test/fuzz/crypto_poly1305.cpp\n-\n-test_fuzz_cuckoocache_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_cuckoocache_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_cuckoocache_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_cuckoocache_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_cuckoocache_SOURCES = test/fuzz/cuckoocache.cpp\n-\n-test_fuzz_decode_tx_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_decode_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_decode_tx_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_decode_tx_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_decode_tx_SOURCES = test/fuzz/decode_tx.cpp\n-\n-test_fuzz_descriptor_parse_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_descriptor_parse_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_descriptor_parse_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_descriptor_parse_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_descriptor_parse_SOURCES = test/fuzz/descriptor_parse.cpp\n-\n-test_fuzz_diskblockindex_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DDISKBLOCKINDEX_DESERIALIZE=1\n-test_fuzz_diskblockindex_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_diskblockindex_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_diskblockindex_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_diskblockindex_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_eval_script_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_eval_script_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_eval_script_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_eval_script_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_eval_script_SOURCES = test/fuzz/eval_script.cpp\n-\n-test_fuzz_fee_rate_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_fee_rate_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_fee_rate_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_fee_rate_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_fee_rate_SOURCES = test/fuzz/fee_rate.cpp\n-\n-test_fuzz_fee_rate_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DFEE_RATE_DESERIALIZE=1\n-test_fuzz_fee_rate_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_fee_rate_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_fee_rate_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_fee_rate_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_fees_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_fees_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_fees_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_fees_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_fees_SOURCES = test/fuzz/fees.cpp\n-\n-test_fuzz_flat_file_pos_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DFLAT_FILE_POS_DESERIALIZE=1\n-test_fuzz_flat_file_pos_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_flat_file_pos_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_flat_file_pos_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_flat_file_pos_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_flatfile_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_flatfile_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_flatfile_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_flatfile_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_flatfile_SOURCES = test/fuzz/flatfile.cpp\n-\n-test_fuzz_float_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_float_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_float_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_float_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_float_SOURCES = test/fuzz/float.cpp\n-\n-test_fuzz_golomb_rice_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_golomb_rice_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_golomb_rice_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_golomb_rice_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_golomb_rice_SOURCES = test/fuzz/golomb_rice.cpp\n-\n-test_fuzz_hex_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_hex_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_hex_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_hex_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_hex_SOURCES = test/fuzz/hex.cpp\n-\n-test_fuzz_http_request_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_http_request_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_http_request_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_http_request_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_http_request_SOURCES = test/fuzz/http_request.cpp\n-\n-test_fuzz_integer_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_integer_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_integer_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_integer_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_integer_SOURCES = test/fuzz/integer.cpp\n-\n-test_fuzz_inv_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DINV_DESERIALIZE=1\n-test_fuzz_inv_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_inv_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_inv_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_inv_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_key_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_key_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_key_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_key_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_key_SOURCES = test/fuzz/key.cpp\n-\n-test_fuzz_key_io_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_key_io_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_key_io_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_key_io_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_key_io_SOURCES = test/fuzz/key_io.cpp\n-\n-test_fuzz_key_origin_info_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DKEY_ORIGIN_INFO_DESERIALIZE=1\n-test_fuzz_key_origin_info_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_key_origin_info_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_key_origin_info_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_key_origin_info_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_kitchen_sink_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_kitchen_sink_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_kitchen_sink_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_kitchen_sink_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_kitchen_sink_SOURCES = test/fuzz/kitchen_sink.cpp\n-\n-test_fuzz_load_external_block_file_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_load_external_block_file_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_load_external_block_file_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_load_external_block_file_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_load_external_block_file_SOURCES = test/fuzz/load_external_block_file.cpp\n-\n-test_fuzz_locale_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_locale_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_locale_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_locale_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_locale_SOURCES = test/fuzz/locale.cpp\n-\n-test_fuzz_merkle_block_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMERKLE_BLOCK_DESERIALIZE=1\n-test_fuzz_merkle_block_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_merkle_block_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_merkle_block_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_merkle_block_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_merkleblock_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_merkleblock_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_merkleblock_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_merkleblock_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_merkleblock_SOURCES = test/fuzz/merkleblock.cpp\n-\n-test_fuzz_message_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_message_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_message_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_message_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_message_SOURCES = test/fuzz/message.cpp\n-\n-test_fuzz_messageheader_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGEHEADER_DESERIALIZE=1\n-test_fuzz_messageheader_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_messageheader_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_messageheader_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_messageheader_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_multiplication_overflow_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_multiplication_overflow_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_multiplication_overflow_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_multiplication_overflow_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_multiplication_overflow_SOURCES = test/fuzz/multiplication_overflow.cpp\n-\n-test_fuzz_net_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_net_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_net_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_net_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_net_SOURCES = test/fuzz/net.cpp\n-\n-test_fuzz_net_permissions_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_net_permissions_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_net_permissions_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_net_permissions_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_net_permissions_SOURCES = test/fuzz/net_permissions.cpp\n-\n-test_fuzz_netaddr_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DNETADDR_DESERIALIZE=1\n-test_fuzz_netaddr_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_netaddr_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_netaddr_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_netaddr_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_netaddress_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_netaddress_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_netaddress_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_netaddress_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_netaddress_SOURCES = test/fuzz/netaddress.cpp\n-\n-test_fuzz_out_point_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DOUT_POINT_DESERIALIZE=1\n-test_fuzz_out_point_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_out_point_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_out_point_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_out_point_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_p2p_transport_deserializer_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_p2p_transport_deserializer_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_p2p_transport_deserializer_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_p2p_transport_deserializer_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_p2p_transport_deserializer_SOURCES = test/fuzz/p2p_transport_deserializer.cpp\n-\n-test_fuzz_parse_hd_keypath_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_parse_hd_keypath_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_parse_hd_keypath_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_parse_hd_keypath_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_parse_hd_keypath_SOURCES = test/fuzz/parse_hd_keypath.cpp\n-\n-test_fuzz_parse_iso8601_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_parse_iso8601_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_parse_iso8601_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_parse_iso8601_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_parse_iso8601_SOURCES = test/fuzz/parse_iso8601.cpp\n-\n-test_fuzz_parse_numbers_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_parse_numbers_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_parse_numbers_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_parse_numbers_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_parse_numbers_SOURCES = test/fuzz/parse_numbers.cpp\n-\n-test_fuzz_parse_script_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_parse_script_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_parse_script_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_parse_script_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_parse_script_SOURCES = test/fuzz/parse_script.cpp\n-\n-test_fuzz_parse_univalue_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_parse_univalue_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_parse_univalue_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_parse_univalue_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_parse_univalue_SOURCES = test/fuzz/parse_univalue.cpp\n-\n-test_fuzz_prevector_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_prevector_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_prevector_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_prevector_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_prevector_SOURCES = test/fuzz/prevector.cpp\n-\n-test_fuzz_partial_merkle_tree_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DPARTIAL_MERKLE_TREE_DESERIALIZE=1\n-test_fuzz_partial_merkle_tree_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_partial_merkle_tree_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_partial_merkle_tree_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_partial_merkle_tree_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_partially_signed_transaction_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DPARTIALLY_SIGNED_TRANSACTION_DESERIALIZE=1\n-test_fuzz_partially_signed_transaction_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_partially_signed_transaction_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_partially_signed_transaction_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_partially_signed_transaction_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_policy_estimator_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_policy_estimator_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_policy_estimator_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_policy_estimator_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_policy_estimator_SOURCES = test/fuzz/policy_estimator.cpp\n-\n-test_fuzz_policy_estimator_io_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_policy_estimator_io_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_policy_estimator_io_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_policy_estimator_io_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_policy_estimator_io_SOURCES = test/fuzz/policy_estimator_io.cpp\n-\n-test_fuzz_pow_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_pow_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_pow_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_pow_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_pow_SOURCES = test/fuzz/pow.cpp\n-\n-test_fuzz_prefilled_transaction_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DPREFILLED_TRANSACTION_DESERIALIZE=1\n-test_fuzz_prefilled_transaction_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_prefilled_transaction_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_prefilled_transaction_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_prefilled_transaction_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_primitives_transaction_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_primitives_transaction_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_primitives_transaction_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_primitives_transaction_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_primitives_transaction_SOURCES = test/fuzz/primitives_transaction.cpp\n-\n-test_fuzz_process_messages_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_process_messages_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_process_messages_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_messages_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_process_messages_SOURCES = test/fuzz/process_messages.cpp\n-\n-test_fuzz_process_message_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_process_message_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_process_message_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_process_message_SOURCES = test/fuzz/process_message.cpp\n-\n-test_fuzz_process_message_addr_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=addr\n-test_fuzz_process_message_addr_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_process_message_addr_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_addr_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_process_message_addr_SOURCES = test/fuzz/process_message.cpp\n-\n-test_fuzz_process_message_block_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=block\n-test_fuzz_process_message_block_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_process_message_block_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_block_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_process_message_block_SOURCES = test/fuzz/process_message.cpp\n-\n-test_fuzz_process_message_blocktxn_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=blocktxn\n-test_fuzz_process_message_blocktxn_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_process_message_blocktxn_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_blocktxn_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_process_message_blocktxn_SOURCES = test/fuzz/process_message.cpp\n-\n-test_fuzz_process_message_cmpctblock_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=cmpctblock\n-test_fuzz_process_message_cmpctblock_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_process_message_cmpctblock_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_cmpctblock_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_process_message_cmpctblock_SOURCES = test/fuzz/process_message.cpp\n-\n-test_fuzz_process_message_feefilter_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=feefilter\n-test_fuzz_process_message_feefilter_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_process_message_feefilter_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_feefilter_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_process_message_feefilter_SOURCES = test/fuzz/process_message.cpp\n-\n-test_fuzz_process_message_filteradd_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=filteradd\n-test_fuzz_process_message_filteradd_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_process_message_filteradd_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_filteradd_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_process_message_filteradd_SOURCES = test/fuzz/process_message.cpp\n-\n-test_fuzz_process_message_filterclear_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=filterclear\n-test_fuzz_process_message_filterclear_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_process_message_filterclear_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_filterclear_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_process_message_filterclear_SOURCES = test/fuzz/process_message.cpp\n-\n-test_fuzz_process_message_filterload_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=filterload\n-test_fuzz_process_message_filterload_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_process_message_filterload_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_filterload_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_process_message_filterload_SOURCES = test/fuzz/process_message.cpp\n-\n-test_fuzz_process_message_getaddr_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=getaddr\n-test_fuzz_process_message_getaddr_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_process_message_getaddr_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_getaddr_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_process_message_getaddr_SOURCES = test/fuzz/process_message.cpp\n-\n-test_fuzz_process_message_getblocks_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=getblocks\n-test_fuzz_process_message_getblocks_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_process_message_getblocks_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_getblocks_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_process_message_getblocks_SOURCES = test/fuzz/process_message.cpp\n-\n-test_fuzz_process_message_getblocktxn_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=getblocktxn\n-test_fuzz_process_message_getblocktxn_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_process_message_getblocktxn_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_getblocktxn_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_process_message_getblocktxn_SOURCES = test/fuzz/process_message.cpp\n-\n-test_fuzz_process_message_getdata_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=getdata\n-test_fuzz_process_message_getdata_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_process_message_getdata_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_getdata_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_process_message_getdata_SOURCES = test/fuzz/process_message.cpp\n-\n-test_fuzz_process_message_getheaders_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=getheaders\n-test_fuzz_process_message_getheaders_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_process_message_getheaders_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_getheaders_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_process_message_getheaders_SOURCES = test/fuzz/process_message.cpp\n-\n-test_fuzz_process_message_headers_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=headers\n-test_fuzz_process_message_headers_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_process_message_headers_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_headers_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_process_message_headers_SOURCES = test/fuzz/process_message.cpp\n-\n-test_fuzz_process_message_inv_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=inv\n-test_fuzz_process_message_inv_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_process_message_inv_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_inv_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_process_message_inv_SOURCES = test/fuzz/process_message.cpp\n-\n-test_fuzz_process_message_mempool_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=mempool\n-test_fuzz_process_message_mempool_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_process_message_mempool_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_mempool_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_process_message_mempool_SOURCES = test/fuzz/process_message.cpp\n-\n-test_fuzz_process_message_notfound_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=notfound\n-test_fuzz_process_message_notfound_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_process_message_notfound_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_notfound_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_process_message_notfound_SOURCES = test/fuzz/process_message.cpp\n-\n-test_fuzz_process_message_ping_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=ping\n-test_fuzz_process_message_ping_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_process_message_ping_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_ping_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_process_message_ping_SOURCES = test/fuzz/process_message.cpp\n-\n-test_fuzz_process_message_pong_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=pong\n-test_fuzz_process_message_pong_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_process_message_pong_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_pong_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_process_message_pong_SOURCES = test/fuzz/process_message.cpp\n-\n-test_fuzz_process_message_sendcmpct_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=sendcmpct\n-test_fuzz_process_message_sendcmpct_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_process_message_sendcmpct_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_sendcmpct_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_process_message_sendcmpct_SOURCES = test/fuzz/process_message.cpp\n-\n-test_fuzz_process_message_sendheaders_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=sendheaders\n-test_fuzz_process_message_sendheaders_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_process_message_sendheaders_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_sendheaders_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_process_message_sendheaders_SOURCES = test/fuzz/process_message.cpp\n-\n-test_fuzz_process_message_tx_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=tx\n-test_fuzz_process_message_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_process_message_tx_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_tx_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_process_message_tx_SOURCES = test/fuzz/process_message.cpp\n-\n-test_fuzz_process_message_verack_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=verack\n-test_fuzz_process_message_verack_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_process_message_verack_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_verack_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_process_message_verack_SOURCES = test/fuzz/process_message.cpp\n-\n-test_fuzz_process_message_version_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=version\n-test_fuzz_process_message_version_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_process_message_version_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_version_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_process_message_version_SOURCES = test/fuzz/process_message.cpp\n-\n-test_fuzz_protocol_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_protocol_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_protocol_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_protocol_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_protocol_SOURCES = test/fuzz/protocol.cpp\n-\n-test_fuzz_psbt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_psbt_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_psbt_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_psbt_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_psbt_SOURCES = test/fuzz/psbt.cpp\n-\n-test_fuzz_psbt_input_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DPSBT_INPUT_DESERIALIZE=1\n-test_fuzz_psbt_input_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_psbt_input_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_psbt_input_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_psbt_input_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_psbt_output_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DPSBT_OUTPUT_DESERIALIZE=1\n-test_fuzz_psbt_output_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_psbt_output_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_psbt_output_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_psbt_output_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_pub_key_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DPUB_KEY_DESERIALIZE=1\n-test_fuzz_pub_key_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_pub_key_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_pub_key_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_pub_key_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_random_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_random_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_random_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_random_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_random_SOURCES = test/fuzz/random.cpp\n-\n-test_fuzz_rbf_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_rbf_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_rbf_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_rbf_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_rbf_SOURCES = test/fuzz/rbf.cpp\n-\n-test_fuzz_rolling_bloom_filter_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_rolling_bloom_filter_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_rolling_bloom_filter_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_rolling_bloom_filter_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_rolling_bloom_filter_SOURCES = test/fuzz/rolling_bloom_filter.cpp\n-\n-test_fuzz_script_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_script_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_script_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_script_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_script_SOURCES = test/fuzz/script.cpp\n-\n-test_fuzz_script_bitcoin_consensus_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_script_bitcoin_consensus_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_script_bitcoin_consensus_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_script_bitcoin_consensus_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_script_bitcoin_consensus_SOURCES = test/fuzz/script_bitcoin_consensus.cpp\n-\n-test_fuzz_script_descriptor_cache_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_script_descriptor_cache_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_script_descriptor_cache_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_script_descriptor_cache_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_script_descriptor_cache_SOURCES = test/fuzz/script_descriptor_cache.cpp\n-\n-test_fuzz_script_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DSCRIPT_DESERIALIZE=1\n-test_fuzz_script_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_script_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_script_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_script_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_script_flags_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_script_flags_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_script_flags_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_script_flags_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_script_flags_SOURCES = test/fuzz/script_flags.cpp\n-\n-test_fuzz_script_interpreter_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_script_interpreter_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_script_interpreter_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_script_interpreter_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_script_interpreter_SOURCES = test/fuzz/script_interpreter.cpp\n-\n-test_fuzz_script_assets_test_minimizer_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_script_assets_test_minimizer_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_script_assets_test_minimizer_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_script_assets_test_minimizer_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_script_assets_test_minimizer_SOURCES = test/fuzz/script_assets_test_minimizer.cpp\n-\n-test_fuzz_script_ops_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_script_ops_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_script_ops_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_script_ops_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_script_ops_SOURCES = test/fuzz/script_ops.cpp\n-\n-test_fuzz_script_sigcache_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_script_sigcache_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_script_sigcache_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_script_sigcache_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_script_sigcache_SOURCES = test/fuzz/script_sigcache.cpp\n-\n-test_fuzz_script_sign_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_script_sign_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_script_sign_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_script_sign_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_script_sign_SOURCES = test/fuzz/script_sign.cpp\n-\n-test_fuzz_scriptnum_ops_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_scriptnum_ops_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_scriptnum_ops_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_scriptnum_ops_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_scriptnum_ops_SOURCES = test/fuzz/scriptnum_ops.cpp\n-\n-test_fuzz_secp256k1_ec_seckey_import_export_der_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_secp256k1_ec_seckey_import_export_der_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_secp256k1_ec_seckey_import_export_der_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_secp256k1_ec_seckey_import_export_der_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_secp256k1_ec_seckey_import_export_der_SOURCES = test/fuzz/secp256k1_ec_seckey_import_export_der.cpp\n-\n-test_fuzz_secp256k1_ecdsa_signature_parse_der_lax_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_secp256k1_ecdsa_signature_parse_der_lax_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_secp256k1_ecdsa_signature_parse_der_lax_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_secp256k1_ecdsa_signature_parse_der_lax_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_secp256k1_ecdsa_signature_parse_der_lax_SOURCES = test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp\n-\n-test_fuzz_service_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DSERVICE_DESERIALIZE=1\n-test_fuzz_service_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_service_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_service_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_service_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_signature_checker_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_signature_checker_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_signature_checker_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_signature_checker_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_signature_checker_SOURCES = test/fuzz/signature_checker.cpp\n-\n-test_fuzz_signet_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_signet_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_signet_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_signet_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n-test_fuzz_signet_SOURCES = test/fuzz/signet.cpp\n-\n-test_fuzz_snapshotmetadata_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DSNAPSHOTMETADATA_DESERIALIZE=1\n-test_fuzz_snapshotmetadata_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_snapshotmetadata_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_snapshotmetadata_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_snapshotmetadata_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_span_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_span_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_span_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_span_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_span_SOURCES = test/fuzz/span.cpp\n-\n-test_fuzz_spanparsing_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_spanparsing_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_spanparsing_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_spanparsing_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_spanparsing_SOURCES = test/fuzz/spanparsing.cpp\n-\n-test_fuzz_string_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_string_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_string_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_string_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_string_SOURCES = test/fuzz/string.cpp\n-\n-test_fuzz_strprintf_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_strprintf_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_strprintf_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_strprintf_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_strprintf_SOURCES = test/fuzz/strprintf.cpp\n-\n-test_fuzz_sub_net_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DSUB_NET_DESERIALIZE=1\n-test_fuzz_sub_net_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_sub_net_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_sub_net_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_sub_net_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_system_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_system_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_system_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_system_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_system_SOURCES = test/fuzz/system.cpp\n-\n-test_fuzz_timedata_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_timedata_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_timedata_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_timedata_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_timedata_SOURCES = test/fuzz/timedata.cpp\n-\n-test_fuzz_transaction_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_transaction_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_transaction_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_transaction_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_transaction_SOURCES = test/fuzz/transaction.cpp\n-\n-test_fuzz_tx_in_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_tx_in_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_tx_in_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_tx_in_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_tx_in_SOURCES = test/fuzz/tx_in.cpp\n-\n-test_fuzz_tx_in_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DTX_IN_DESERIALIZE=1\n-test_fuzz_tx_in_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_tx_in_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_tx_in_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_tx_in_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_tx_out_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_tx_out_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_tx_out_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_tx_out_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_tx_out_SOURCES = test/fuzz/tx_out.cpp\n-\n-test_fuzz_txoutcompressor_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DTXOUTCOMPRESSOR_DESERIALIZE=1\n-test_fuzz_txoutcompressor_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_txoutcompressor_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_txoutcompressor_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_txoutcompressor_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_txrequest_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_fuzz_txrequest_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_txrequest_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_txrequest_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_txrequest_SOURCES = test/fuzz/txrequest.cpp\n-\n-test_fuzz_txundo_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DTXUNDO_DESERIALIZE=1\n-test_fuzz_txundo_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_txundo_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_txundo_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_txundo_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_uint160_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DUINT160_DESERIALIZE=1\n-test_fuzz_uint160_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_uint160_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_uint160_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_uint160_deserialize_SOURCES = test/fuzz/deserialize.cpp\n-\n-test_fuzz_uint256_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DUINT256_DESERIALIZE=1\n-test_fuzz_uint256_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_uint256_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_uint256_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n-test_fuzz_uint256_deserialize_SOURCES = test/fuzz/deserialize.cpp\n+test_fuzz_fuzz_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_fuzz_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_fuzz_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_fuzz_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n+test_fuzz_fuzz_SOURCES = \\\n+ test/fuzz/addition_overflow.cpp \\\n+ test/fuzz/addrdb.cpp \\\n+ test/fuzz/addrman.cpp \\\n+ test/fuzz/asmap.cpp \\\n+ test/fuzz/asmap_direct.cpp \\\n+ test/fuzz/autofile.cpp \\\n+ test/fuzz/banman.cpp \\\n+ test/fuzz/base_encode_decode.cpp \\\n+ test/fuzz/bech32.cpp \\\n+ test/fuzz/block.cpp \\\n+ test/fuzz/block_header.cpp \\\n+ test/fuzz/blockfilter.cpp \\\n+ test/fuzz/bloom_filter.cpp \\\n+ test/fuzz/buffered_file.cpp \\\n+ test/fuzz/chain.cpp \\\n+ test/fuzz/checkqueue.cpp \\\n+ test/fuzz/coins_view.cpp \\\n+ test/fuzz/connman.cpp \\\n+ test/fuzz/crypto.cpp \\\n+ test/fuzz/crypto_aes256.cpp \\\n+ test/fuzz/crypto_aes256cbc.cpp \\\n+ test/fuzz/crypto_chacha20.cpp \\\n+ test/fuzz/crypto_chacha20_poly1305_aead.cpp \\\n+ test/fuzz/crypto_common.cpp \\\n+ test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp \\\n+ test/fuzz/crypto_poly1305.cpp \\\n+ test/fuzz/cuckoocache.cpp \\\n+ test/fuzz/decode_tx.cpp \\\n+ test/fuzz/descriptor_parse.cpp \\\n+ test/fuzz/deserialize.cpp \\\n+ test/fuzz/eval_script.cpp \\\n+ test/fuzz/fee_rate.cpp \\\n+ test/fuzz/fees.cpp \\\n+ test/fuzz/flatfile.cpp \\\n+ test/fuzz/float.cpp \\\n+ test/fuzz/golomb_rice.cpp \\\n+ test/fuzz/hex.cpp \\\n+ test/fuzz/http_request.cpp \\\n+ test/fuzz/integer.cpp \\\n+ test/fuzz/key.cpp \\\n+ test/fuzz/key_io.cpp \\\n+ test/fuzz/kitchen_sink.cpp \\\n+ test/fuzz/load_external_block_file.cpp \\\n+ test/fuzz/locale.cpp \\\n+ test/fuzz/merkleblock.cpp \\\n+ test/fuzz/message.cpp \\\n+ test/fuzz/multiplication_overflow.cpp \\\n+ test/fuzz/net.cpp \\\n+ test/fuzz/net_permissions.cpp \\\n+ test/fuzz/netaddress.cpp \\\n+ test/fuzz/p2p_transport_deserializer.cpp \\\n+ test/fuzz/parse_hd_keypath.cpp \\\n+ test/fuzz/parse_iso8601.cpp \\\n+ test/fuzz/parse_numbers.cpp \\\n+ test/fuzz/parse_script.cpp \\\n+ test/fuzz/parse_univalue.cpp \\\n+ test/fuzz/policy_estimator.cpp \\\n+ test/fuzz/policy_estimator_io.cpp \\\n+ test/fuzz/pow.cpp \\\n+ test/fuzz/prevector.cpp \\\n+ test/fuzz/primitives_transaction.cpp \\\n+ test/fuzz/process_message.cpp \\\n+ test/fuzz/process_messages.cpp \\\n+ test/fuzz/protocol.cpp \\\n+ test/fuzz/psbt.cpp \\\n+ test/fuzz/random.cpp \\\n+ test/fuzz/rbf.cpp \\\n+ test/fuzz/rolling_bloom_filter.cpp \\\n+ test/fuzz/script.cpp \\\n+ test/fuzz/script_assets_test_minimizer.cpp \\\n+ test/fuzz/script_bitcoin_consensus.cpp \\\n+ test/fuzz/script_descriptor_cache.cpp \\\n+ test/fuzz/script_flags.cpp \\\n+ test/fuzz/script_interpreter.cpp \\\n+ test/fuzz/script_ops.cpp \\\n+ test/fuzz/script_sigcache.cpp \\\n+ test/fuzz/script_sign.cpp \\\n+ test/fuzz/scriptnum_ops.cpp \\\n+ test/fuzz/secp256k1_ec_seckey_import_export_der.cpp \\\n+ test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp \\\n+ test/fuzz/signature_checker.cpp \\\n+ test/fuzz/signet.cpp \\\n+ test/fuzz/span.cpp \\\n+ test/fuzz/spanparsing.cpp \\\n+ test/fuzz/string.cpp \\\n+ test/fuzz/strprintf.cpp \\\n+ test/fuzz/system.cpp \\\n+ test/fuzz/timedata.cpp \\\n+ test/fuzz/transaction.cpp \\\n+ test/fuzz/tx_in.cpp \\\n+ test/fuzz/tx_out.cpp \\\n+ test/fuzz/txrequest.cpp\n \n endif # ENABLE_FUZZ\n "
      },
      {
        "sha": "c6cfbd8d3083a2971796c1dd4fbfd54a730d491a",
        "filename": "src/test/fuzz/addition_overflow.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/addition_overflow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/addition_overflow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/addition_overflow.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -40,7 +40,7 @@ void TestAdditionOverflow(FuzzedDataProvider& fuzzed_data_provider)\n }\n } // namespace\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(addition_overflow)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     TestAdditionOverflow<int64_t>(fuzzed_data_provider);"
      },
      {
        "sha": "d15c78567331208783ada2ef2bb95dca1b737dae",
        "filename": "src/test/fuzz/addrdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/addrdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/addrdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/addrdb.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -13,7 +13,7 @@\n #include <string>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(addrdb)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n "
      },
      {
        "sha": "af9080b5e904c09939a4aea338d6351d0c4a4eaa",
        "filename": "src/test/fuzz/addrman.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/addrman.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -17,7 +17,7 @@\n #include <string>\n #include <vector>\n \n-void initialize()\n+void initialize_addrman()\n {\n     SelectParams(CBaseChainParams::REGTEST);\n }\n@@ -32,7 +32,7 @@ class CAddrManDeterministic : public CAddrMan\n     }\n };\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET_INIT(addrman, initialize_addrman)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     SetMockTime(ConsumeTime(fuzzed_data_provider));"
      },
      {
        "sha": "4c5bc0cbf2f3daa7941b8a1f3e36f9269c793c3e",
        "filename": "src/test/fuzz/asmap.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/asmap.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/asmap.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/asmap.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -27,7 +27,7 @@ static const std::vector<bool> IPV4_PREFIX_ASMAP = {\n     true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true          // Match 0xFF\n };\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(asmap)\n {\n     // Encoding: [7 bits: asmap size] [1 bit: ipv6?] [3-130 bytes: asmap] [4 or 16 bytes: addr]\n     if (buffer.size() < 1 + 3 + 4) return;"
      },
      {
        "sha": "8b7822dc166429d5e77036ae29edce0c825d8efd",
        "filename": "src/test/fuzz/asmap_direct.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/asmap_direct.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/asmap_direct.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/asmap_direct.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -11,7 +11,7 @@\n \n #include <assert.h>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(asmap_direct)\n {\n     // Encoding: [asmap using 1 bit / byte] 0xFF [addr using 1 bit / byte]\n     std::optional<size_t> sep_pos_opt;"
      },
      {
        "sha": "eb3424ef28d9cb7af54fc20408005afa5cc0cfa2",
        "filename": "src/test/fuzz/autofile.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/autofile.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/autofile.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/autofile.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -15,7 +15,7 @@\n #include <string>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(autofile)\n {\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n     FuzzedAutoFileProvider fuzzed_auto_file_provider = ConsumeAutoFile(fuzzed_data_provider);"
      },
      {
        "sha": "bc321932e6330ee72d4395f6f5cbda58171c7e27",
        "filename": "src/test/fuzz/banman.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/banman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/banman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/banman.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -24,12 +24,12 @@ int64_t ConsumeBanTimeOffset(FuzzedDataProvider& fuzzed_data_provider) noexcept\n }\n } // namespace\n \n-void initialize()\n+void initialize_banman()\n {\n     InitializeFuzzingContext();\n }\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET_INIT(banman, initialize_banman)\n {\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n     const fs::path banlist_file = GetDataDir() / \"fuzzed_banlist.dat\";"
      },
      {
        "sha": "4470e13a61a1852e1859c2d0de7f4990e5026a72",
        "filename": "src/test/fuzz/base_encode_decode.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/base_encode_decode.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/base_encode_decode.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/base_encode_decode.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -14,7 +14,7 @@\n #include <string>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(base_encode_decode)\n {\n     const std::string random_encoded_string(buffer.begin(), buffer.end());\n "
      },
      {
        "sha": "b1a485e12e3e9871d18110698958487921056839",
        "filename": "src/test/fuzz/bech32.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/bech32.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/bech32.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/bech32.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -13,7 +13,7 @@\n #include <utility>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(bech32)\n {\n     const std::string random_string(buffer.begin(), buffer.end());\n     const std::pair<std::string, std::vector<uint8_t>> r1 = bech32::Decode(random_string);"
      },
      {
        "sha": "65a33de4b447c68a937c6c865e4e714f5f9c847f",
        "filename": "src/test/fuzz/block.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/block.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/block.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/block.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -17,13 +17,13 @@\n #include <cassert>\n #include <string>\n \n-void initialize()\n+void initialize_block()\n {\n     static const ECCVerifyHandle verify_handle;\n     SelectParams(CBaseChainParams::REGTEST);\n }\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET_INIT(block, initialize_block)\n {\n     CDataStream ds(buffer, SER_NETWORK, INIT_PROTO_VERSION);\n     CBlock block;"
      },
      {
        "sha": "c73270dcb34ce0ebdb009d42405b735d84521261",
        "filename": "src/test/fuzz/block_header.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/block_header.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/block_header.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/block_header.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -14,7 +14,7 @@\n #include <string>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(block_header)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     const std::optional<CBlockHeader> block_header = ConsumeDeserializable<CBlockHeader>(fuzzed_data_provider);"
      },
      {
        "sha": "7fa06085f85f821af02887a3f6c0fdcf7bc0e1f9",
        "filename": "src/test/fuzz/blockfilter.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/blockfilter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/blockfilter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/blockfilter.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -12,7 +12,7 @@\n #include <string>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(blockfilter)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     const std::optional<BlockFilter> block_filter = ConsumeDeserializable<BlockFilter>(fuzzed_data_provider);"
      },
      {
        "sha": "c0c66c564b2ca17d94f11c42f538c3ecc38cc4fe",
        "filename": "src/test/fuzz/bloom_filter.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/bloom_filter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/bloom_filter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/bloom_filter.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -15,7 +15,7 @@\n #include <string>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(bloom_filter)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n "
      },
      {
        "sha": "23e197456acfd271be8fc6c563fe5c806acf0340",
        "filename": "src/test/fuzz/buffered_file.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/buffered_file.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/buffered_file.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/buffered_file.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -15,7 +15,7 @@\n #include <string>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(buffered_file)\n {\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n     FuzzedFileProvider fuzzed_file_provider = ConsumeFile(fuzzed_data_provider);"
      },
      {
        "sha": "9f7074b423693cfe4998ac415c2a475ffb665aac",
        "filename": "src/test/fuzz/chain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/chain.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -11,7 +11,7 @@\n #include <optional>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(chain)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     std::optional<CDiskBlockIndex> disk_block_index = ConsumeDeserializable<CDiskBlockIndex>(fuzzed_data_provider);"
      },
      {
        "sha": "0b16f0f0d595cfb3e02977086d4b71f2a4952202",
        "filename": "src/test/fuzz/checkqueue.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/checkqueue.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/checkqueue.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/checkqueue.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -32,7 +32,7 @@ struct DumbCheck {\n };\n } // namespace\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(checkqueue)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n "
      },
      {
        "sha": "1ae421493e39262538ca59bfbf3d459965d44a17",
        "filename": "src/test/fuzz/coins_view.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/coins_view.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/coins_view.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/coins_view.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -34,14 +34,14 @@ bool operator==(const Coin& a, const Coin& b)\n }\n } // namespace\n \n-void initialize()\n+void initialize_coins_view()\n {\n     static const ECCVerifyHandle ecc_verify_handle;\n     ECC_Start();\n     SelectParams(CBaseChainParams::REGTEST);\n }\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET_INIT(coins_view, initialize_coins_view)\n {\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n     CCoinsView backend_coins_view;"
      },
      {
        "sha": "35eb25a074beed522e8651db87107e6396d70328",
        "filename": "src/test/fuzz/connman.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/connman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/connman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/connman.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -15,12 +15,12 @@\n #include <cstdint>\n #include <vector>\n \n-void initialize()\n+void initialize_connman()\n {\n     InitializeFuzzingContext();\n }\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET_INIT(connman, initialize_connman)\n {\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n     CConnman connman{fuzzed_data_provider.ConsumeIntegral<uint64_t>(), fuzzed_data_provider.ConsumeIntegral<uint64_t>(), fuzzed_data_provider.ConsumeBool()};"
      },
      {
        "sha": "4783cc1c43dc1a2a885d712fa267d5ff220c1323",
        "filename": "src/test/fuzz/crypto.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/crypto.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/crypto.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/crypto.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -17,7 +17,7 @@\n #include <cstdint>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(crypto)\n {\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n     std::vector<uint8_t> data = ConsumeRandomLengthByteVector(fuzzed_data_provider);"
      },
      {
        "sha": "ccabd1f7dc9b1d71f15675a0b17cd935489461c4",
        "filename": "src/test/fuzz/crypto_aes256.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/crypto_aes256.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/crypto_aes256.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/crypto_aes256.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -11,7 +11,7 @@\n #include <cstdint>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(crypto_aes256)\n {\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n     const std::vector<uint8_t> key = ConsumeFixedLengthByteVector(fuzzed_data_provider, AES256_KEYSIZE);"
      },
      {
        "sha": "6d4138e54690402470ad51dc8bdf45de3ded407b",
        "filename": "src/test/fuzz/crypto_aes256cbc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/crypto_aes256cbc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/crypto_aes256cbc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/crypto_aes256cbc.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -11,7 +11,7 @@\n #include <cstdint>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(crypto_aes256cbc)\n {\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n     const std::vector<uint8_t> key = ConsumeFixedLengthByteVector(fuzzed_data_provider, AES256_KEYSIZE);"
      },
      {
        "sha": "d751466f115759e50ed3a7a46caca94a443fc5bf",
        "filename": "src/test/fuzz/crypto_chacha20.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/crypto_chacha20.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/crypto_chacha20.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/crypto_chacha20.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -10,7 +10,7 @@\n #include <cstdint>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(crypto_chacha20)\n {\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n "
      },
      {
        "sha": "631af9c70dd0644b4209e0b085f198b488bdf827",
        "filename": "src/test/fuzz/crypto_chacha20_poly1305_aead.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/crypto_chacha20_poly1305_aead.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/crypto_chacha20_poly1305_aead.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/crypto_chacha20_poly1305_aead.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -13,7 +13,7 @@\n #include <limits>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(crypto_chacha20_poly1305_aead)\n {\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n "
      },
      {
        "sha": "8e07dfedb9f09b287780fe52195d508fd4c5b8bf",
        "filename": "src/test/fuzz/crypto_common.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/crypto_common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/crypto_common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/crypto_common.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -13,7 +13,7 @@\n #include <cstring>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(crypto_common)\n {\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n     const uint16_t random_u16 = fuzzed_data_provider.ConsumeIntegral<uint16_t>();"
      },
      {
        "sha": "8cb9c552833cbb8efce11e6dbade4f93e2f50f37",
        "filename": "src/test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -11,7 +11,7 @@\n #include <string>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(crypto_hkdf_hmac_sha256_l32)\n {\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n "
      },
      {
        "sha": "ac555ed68cefb51148af8a100c520593500432a1",
        "filename": "src/test/fuzz/crypto_poly1305.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/crypto_poly1305.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/crypto_poly1305.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/crypto_poly1305.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -10,7 +10,7 @@\n #include <cstdint>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(crypto_poly1305)\n {\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n "
      },
      {
        "sha": "dc20dc3f6236782e3c0f1f80a569575edec32a7f",
        "filename": "src/test/fuzz/cuckoocache.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/cuckoocache.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/cuckoocache.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/cuckoocache.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -26,7 +26,7 @@ struct RandomHasher {\n };\n } // namespace\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(cuckoocache)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     fuzzed_data_provider_ptr = &fuzzed_data_provider;"
      },
      {
        "sha": "249f5a3cda165a65559d96cd2d3f4eeb34fc6d38",
        "filename": "src/test/fuzz/decode_tx.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/decode_tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/decode_tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/decode_tx.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -12,7 +12,7 @@\n #include <string>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(decode_tx)\n {\n     const std::string tx_hex = HexStr(buffer);\n     CMutableTransaction mtx;"
      },
      {
        "sha": "0d1921f2853d3518f8032cf6c25c67ecfd5ad6a0",
        "filename": "src/test/fuzz/descriptor_parse.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/descriptor_parse.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/descriptor_parse.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/descriptor_parse.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -8,14 +8,14 @@\n #include <test/fuzz/fuzz.h>\n #include <util/memory.h>\n \n-void initialize()\n+void initialize_descriptor_parse()\n {\n     static const ECCVerifyHandle verify_handle;\n     ECC_Start();\n     SelectParams(CBaseChainParams::MAIN);\n }\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET_INIT(descriptor_parse, initialize_descriptor_parse)\n {\n     const std::string descriptor(buffer.begin(), buffer.end());\n     FlatSigningProvider signing_provider;"
      },
      {
        "sha": "74dec6475e800328c66e38a1b576f854ad83f112",
        "filename": "src/test/fuzz/deserialize.cpp",
        "status": "modified",
        "additions": 90,
        "deletions": 50,
        "changes": 140,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/deserialize.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/deserialize.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/deserialize.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -34,12 +34,21 @@\n \n #include <test/fuzz/fuzz.h>\n \n-void initialize()\n+void initialize_deserialize()\n {\n     // Fuzzers using pubkey must hold an ECCVerifyHandle.\n     static const ECCVerifyHandle verify_handle;\n }\n \n+#define FUZZ_TARGET_DESERIALIZE(name, code)                \\\n+    FUZZ_TARGET_INIT(name, initialize_deserialize)         \\\n+    {                                                      \\\n+        try {                                              \\\n+            code                                           \\\n+        } catch (const invalid_fuzzing_input_exception&) { \\\n+        }                                                  \\\n+    }\n+\n namespace {\n \n struct invalid_fuzzing_input_exception : public std::exception {\n@@ -92,44 +101,51 @@ void AssertEqualAfterSerializeDeserialize(const T& obj, const int version = INIT\n \n } // namespace\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n-{\n-    try {\n-#if BLOCK_FILTER_DESERIALIZE\n+FUZZ_TARGET_DESERIALIZE(block_filter_deserialize, {\n         BlockFilter block_filter;\n         DeserializeFromFuzzingInput(buffer, block_filter);\n-#elif ADDR_INFO_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(addr_info_deserialize, {\n         CAddrInfo addr_info;\n         DeserializeFromFuzzingInput(buffer, addr_info);\n-#elif BLOCK_FILE_INFO_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(block_file_info_deserialize, {\n         CBlockFileInfo block_file_info;\n         DeserializeFromFuzzingInput(buffer, block_file_info);\n-#elif BLOCK_HEADER_AND_SHORT_TXIDS_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(block_header_and_short_txids_deserialize, {\n         CBlockHeaderAndShortTxIDs block_header_and_short_txids;\n         DeserializeFromFuzzingInput(buffer, block_header_and_short_txids);\n-#elif FEE_RATE_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(fee_rate_deserialize, {\n         CFeeRate fee_rate;\n         DeserializeFromFuzzingInput(buffer, fee_rate);\n         AssertEqualAfterSerializeDeserialize(fee_rate);\n-#elif MERKLE_BLOCK_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(merkle_block_deserialize, {\n         CMerkleBlock merkle_block;\n         DeserializeFromFuzzingInput(buffer, merkle_block);\n-#elif OUT_POINT_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(out_point_deserialize, {\n         COutPoint out_point;\n         DeserializeFromFuzzingInput(buffer, out_point);\n         AssertEqualAfterSerializeDeserialize(out_point);\n-#elif PARTIAL_MERKLE_TREE_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(partial_merkle_tree_deserialize, {\n         CPartialMerkleTree partial_merkle_tree;\n         DeserializeFromFuzzingInput(buffer, partial_merkle_tree);\n-#elif PUB_KEY_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(pub_key_deserialize, {\n         CPubKey pub_key;\n         DeserializeFromFuzzingInput(buffer, pub_key);\n         // TODO: The following equivalence should hold for CPubKey? Fix.\n         // AssertEqualAfterSerializeDeserialize(pub_key);\n-#elif SCRIPT_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(script_deserialize, {\n         CScript script;\n         DeserializeFromFuzzingInput(buffer, script);\n-#elif SUB_NET_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(sub_net_deserialize, {\n         CSubNet sub_net_1;\n         DeserializeFromFuzzingInput(buffer, sub_net_1, INIT_PROTO_VERSION);\n         AssertEqualAfterSerializeDeserialize(sub_net_1, INIT_PROTO_VERSION);\n@@ -139,67 +155,85 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         CSubNet sub_net_3;\n         DeserializeFromFuzzingInput(buffer, sub_net_3);\n         AssertEqualAfterSerializeDeserialize(sub_net_3, INIT_PROTO_VERSION | ADDRV2_FORMAT);\n-#elif TX_IN_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(tx_in_deserialize, {\n         CTxIn tx_in;\n         DeserializeFromFuzzingInput(buffer, tx_in);\n         AssertEqualAfterSerializeDeserialize(tx_in);\n-#elif FLAT_FILE_POS_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(flat_file_pos_deserialize, {\n         FlatFilePos flat_file_pos;\n         DeserializeFromFuzzingInput(buffer, flat_file_pos);\n         AssertEqualAfterSerializeDeserialize(flat_file_pos);\n-#elif KEY_ORIGIN_INFO_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(key_origin_info_deserialize, {\n         KeyOriginInfo key_origin_info;\n         DeserializeFromFuzzingInput(buffer, key_origin_info);\n         AssertEqualAfterSerializeDeserialize(key_origin_info);\n-#elif PARTIALLY_SIGNED_TRANSACTION_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(partially_signed_transaction_deserialize, {\n         PartiallySignedTransaction partially_signed_transaction;\n         DeserializeFromFuzzingInput(buffer, partially_signed_transaction);\n-#elif PREFILLED_TRANSACTION_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(prefilled_transaction_deserialize, {\n         PrefilledTransaction prefilled_transaction;\n         DeserializeFromFuzzingInput(buffer, prefilled_transaction);\n-#elif PSBT_INPUT_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(psbt_input_deserialize, {\n         PSBTInput psbt_input;\n         DeserializeFromFuzzingInput(buffer, psbt_input);\n-#elif PSBT_OUTPUT_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(psbt_output_deserialize, {\n         PSBTOutput psbt_output;\n         DeserializeFromFuzzingInput(buffer, psbt_output);\n-#elif BLOCK_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(block_deserialize, {\n         CBlock block;\n         DeserializeFromFuzzingInput(buffer, block);\n-#elif BLOCKLOCATOR_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(blocklocator_deserialize, {\n         CBlockLocator bl;\n         DeserializeFromFuzzingInput(buffer, bl);\n-#elif BLOCKMERKLEROOT\n+})\n+FUZZ_TARGET_DESERIALIZE(blockmerkleroot, {\n         CBlock block;\n         DeserializeFromFuzzingInput(buffer, block);\n         bool mutated;\n         BlockMerkleRoot(block, &mutated);\n-#elif ADDRMAN_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(addrman_deserialize, {\n         CAddrMan am;\n         DeserializeFromFuzzingInput(buffer, am);\n-#elif BLOCKHEADER_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(blockheader_deserialize, {\n         CBlockHeader bh;\n         DeserializeFromFuzzingInput(buffer, bh);\n-#elif BANENTRY_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(banentry_deserialize, {\n         CBanEntry be;\n         DeserializeFromFuzzingInput(buffer, be);\n-#elif TXUNDO_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(txundo_deserialize, {\n         CTxUndo tu;\n         DeserializeFromFuzzingInput(buffer, tu);\n-#elif BLOCKUNDO_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(blockundo_deserialize, {\n         CBlockUndo bu;\n         DeserializeFromFuzzingInput(buffer, bu);\n-#elif COINS_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(coins_deserialize, {\n         Coin coin;\n         DeserializeFromFuzzingInput(buffer, coin);\n-#elif NETADDR_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(netaddr_deserialize, {\n         CNetAddr na;\n         DeserializeFromFuzzingInput(buffer, na);\n         if (na.IsAddrV1Compatible()) {\n             AssertEqualAfterSerializeDeserialize(na);\n         }\n         AssertEqualAfterSerializeDeserialize(na, INIT_PROTO_VERSION | ADDRV2_FORMAT);\n-#elif SERVICE_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(service_deserialize, {\n         CService s;\n         DeserializeFromFuzzingInput(buffer, s);\n         if (s.IsAddrV1Compatible()) {\n@@ -213,50 +247,56 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         CService s2;\n         DeserializeFromFuzzingInput(buffer, s2, INIT_PROTO_VERSION | ADDRV2_FORMAT);\n         AssertEqualAfterSerializeDeserialize(s2, INIT_PROTO_VERSION | ADDRV2_FORMAT);\n-#elif MESSAGEHEADER_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(messageheader_deserialize, {\n         CMessageHeader mh;\n         DeserializeFromFuzzingInput(buffer, mh);\n         (void)mh.IsCommandValid();\n-#elif ADDRESS_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(address_deserialize, {\n         CAddress a;\n         DeserializeFromFuzzingInput(buffer, a);\n-#elif INV_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(inv_deserialize, {\n         CInv i;\n         DeserializeFromFuzzingInput(buffer, i);\n-#elif BLOOMFILTER_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(bloomfilter_deserialize, {\n         CBloomFilter bf;\n         DeserializeFromFuzzingInput(buffer, bf);\n-#elif DISKBLOCKINDEX_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(diskblockindex_deserialize, {\n         CDiskBlockIndex dbi;\n         DeserializeFromFuzzingInput(buffer, dbi);\n-#elif TXOUTCOMPRESSOR_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(txoutcompressor_deserialize, {\n         CTxOut to;\n         auto toc = Using<TxOutCompression>(to);\n         DeserializeFromFuzzingInput(buffer, toc);\n-#elif BLOCKTRANSACTIONS_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(blocktransactions_deserialize, {\n         BlockTransactions bt;\n         DeserializeFromFuzzingInput(buffer, bt);\n-#elif BLOCKTRANSACTIONSREQUEST_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(blocktransactionsrequest_deserialize, {\n         BlockTransactionsRequest btr;\n         DeserializeFromFuzzingInput(buffer, btr);\n-#elif SNAPSHOTMETADATA_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(snapshotmetadata_deserialize, {\n         SnapshotMetadata snapshot_metadata;\n         DeserializeFromFuzzingInput(buffer, snapshot_metadata);\n-#elif UINT160_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(uint160_deserialize, {\n         uint160 u160;\n         DeserializeFromFuzzingInput(buffer, u160);\n         AssertEqualAfterSerializeDeserialize(u160);\n-#elif UINT256_DESERIALIZE\n+})\n+FUZZ_TARGET_DESERIALIZE(uint256_deserialize, {\n         uint256 u256;\n         DeserializeFromFuzzingInput(buffer, u256);\n         AssertEqualAfterSerializeDeserialize(u256);\n-#else\n-#error Need at least one fuzz target to compile\n-#endif\n+})\n         // Classes intentionally not covered in this file since their deserialization code is\n         // fuzzed elsewhere:\n         // * Deserialization of CTxOut is fuzzed in test/fuzz/tx_out.cpp\n         // * Deserialization of CMutableTransaction is fuzzed in src/test/fuzz/transaction.cpp\n-    } catch (const invalid_fuzzing_input_exception&) {\n-    }\n-}"
      },
      {
        "sha": "635288fc363351bb3c41b0dd176adf6a764ed54f",
        "filename": "src/test/fuzz/eval_script.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/eval_script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/eval_script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/eval_script.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -10,12 +10,12 @@\n \n #include <limits>\n \n-void initialize()\n+void initialize_eval_script()\n {\n     static const ECCVerifyHandle verify_handle;\n }\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET_INIT(eval_script, initialize_eval_script)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     const unsigned int flags = fuzzed_data_provider.ConsumeIntegral<unsigned int>();"
      },
      {
        "sha": "2955213635404f928cc013a0af4e1e7601cd14e1",
        "filename": "src/test/fuzz/fee_rate.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/fee_rate.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/fee_rate.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/fee_rate.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -13,7 +13,7 @@\n #include <string>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(fee_rate)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     const CAmount satoshis_per_k = ConsumeMoney(fuzzed_data_provider);"
      },
      {
        "sha": "61c7681bf96380ad51c13e96009ef6cc4f184352",
        "filename": "src/test/fuzz/fees.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/fees.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -13,7 +13,7 @@\n #include <string>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(fees)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     const CFeeRate minimal_incremental_fee{ConsumeMoney(fuzzed_data_provider)};"
      },
      {
        "sha": "d142e374b1caec583ed12d1471d87e3e8b854cd4",
        "filename": "src/test/fuzz/flatfile.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/flatfile.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/flatfile.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/flatfile.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -13,7 +13,7 @@\n #include <string>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(flatfile)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     std::optional<FlatFilePos> flat_file_pos = ConsumeDeserializable<FlatFilePos>(fuzzed_data_provider);"
      },
      {
        "sha": "d18a87d17742fb5e637156d8a77cd68afd540768",
        "filename": "src/test/fuzz/float.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/float.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/float.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/float.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -12,7 +12,7 @@\n #include <cassert>\n #include <cstdint>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(float)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n "
      },
      {
        "sha": "fd87667755c630dcbfefaff63bfbb1bbefe1c17d",
        "filename": "src/test/fuzz/fuzz.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 5,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/fuzz.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/fuzz.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/fuzz.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -5,13 +5,44 @@\n #include <test/fuzz/fuzz.h>\n \n #include <test/util/setup_common.h>\n+#include <util/check.h>\n \n #include <cstdint>\n #include <unistd.h>\n #include <vector>\n \n const std::function<void(const std::string&)> G_TEST_LOG_FUN{};\n \n+std::map<std::string_view, std::tuple<TypeTestOneInput, TypeInitialize>>& FuzzTargets()\n+{\n+    static std::map<std::string_view, std::tuple<TypeTestOneInput, TypeInitialize>> g_fuzz_targets;\n+    return g_fuzz_targets;\n+}\n+\n+void FuzzFrameworkRegisterTarget(std::string_view name, TypeTestOneInput target, TypeInitialize init)\n+{\n+    const auto it_ins = FuzzTargets().try_emplace(name, std::move(target), std::move(init));\n+    Assert(it_ins.second);\n+}\n+\n+static TypeTestOneInput* g_test_one_input{nullptr};\n+\n+void initialize()\n+{\n+    if (std::getenv(\"PRINT_ALL_FUZZ_TARGETS_AND_ABORT\")) {\n+        for (const auto& t : FuzzTargets()) {\n+            std::cout << t.first << std::endl;\n+        }\n+        Assert(false);\n+    }\n+    std::string_view fuzz_target{Assert(std::getenv(\"FUZZ\"))};\n+    const auto it = FuzzTargets().find(fuzz_target);\n+    Assert(it != FuzzTargets().end());\n+    Assert(!g_test_one_input);\n+    g_test_one_input = &std::get<0>(it->second);\n+    std::get<1>(it->second)();\n+}\n+\n #if defined(PROVIDE_MAIN_FUNCTION)\n static bool read_stdin(std::vector<uint8_t>& data)\n {\n@@ -24,14 +55,10 @@ static bool read_stdin(std::vector<uint8_t>& data)\n }\n #endif\n \n-// Default initialization: Override using a non-weak initialize().\n-__attribute__((weak)) void initialize()\n-{\n-}\n-\n // This function is used by libFuzzer\n extern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)\n {\n+    static const auto& test_one_input = *Assert(g_test_one_input);\n     const std::vector<uint8_t> input(data, data + size);\n     test_one_input(input);\n     return 0;\n@@ -48,6 +75,7 @@ extern \"C\" int LLVMFuzzerInitialize(int* argc, char*** argv)\n __attribute__((weak)) int main(int argc, char** argv)\n {\n     initialize();\n+    static const auto& test_one_input = *Assert(g_test_one_input);\n #ifdef __AFL_INIT\n     // Enable AFL deferred forkserver mode. Requires compilation using\n     // afl-clang-fast++. See fuzzing.md for details."
      },
      {
        "sha": "544379c0b04a6e04348b5e3fefae945b64d40cf3",
        "filename": "src/test/fuzz/fuzz.h",
        "status": "modified",
        "additions": 22,
        "deletions": 3,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/fuzz.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/fuzz.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/fuzz.h?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -5,10 +5,29 @@\n #ifndef BITCOIN_TEST_FUZZ_FUZZ_H\n #define BITCOIN_TEST_FUZZ_FUZZ_H\n \n-#include <stdint.h>\n+#include <cstdint>\n+#include <functional>\n+#include <string_view>\n #include <vector>\n \n-void initialize();\n-void test_one_input(const std::vector<uint8_t>& buffer);\n+using TypeTestOneInput = std::function<void(const std::vector<uint8_t>&)>;\n+using TypeInitialize = std::function<void()>;\n+\n+void FuzzFrameworkRegisterTarget(std::string_view name, TypeTestOneInput target, TypeInitialize init);\n+\n+void FuzzFrameworkEmptyFun() {}\n+\n+#define FUZZ_TARGET(name) \\\n+    FUZZ_TARGET_INIT(name, FuzzFrameworkEmptyFun)\n+\n+#define FUZZ_TARGET_INIT(name, init_fun)                                      \\\n+    void name##_fuzz_target(const std::vector<uint8_t>&);                     \\\n+    struct name##_Before_Main {                                               \\\n+        name##_Before_Main()                                                  \\\n+        {                                                                     \\\n+            FuzzFrameworkRegisterTarget(#name, name##_fuzz_target, init_fun); \\\n+        }                                                                     \\\n+    } const static g_##name##_before_main;                                    \\\n+    void name##_fuzz_target(const std::vector<uint8_t>& buffer)\n \n #endif // BITCOIN_TEST_FUZZ_FUZZ_H"
      },
      {
        "sha": "c99bf940c758ec77a4f2cdad13b50a6f6ebd9a56",
        "filename": "src/test/fuzz/golomb_rice.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/golomb_rice.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/golomb_rice.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/golomb_rice.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -54,7 +54,7 @@ std::vector<uint64_t> BuildHashedSet(const std::unordered_set<std::vector<uint8_\n }\n } // namespace\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(golomb_rice)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     std::vector<uint8_t> golomb_rice_data;"
      },
      {
        "sha": "cc1bc1c8cfa5fce02c6e8219c1710ba6b98036aa",
        "filename": "src/test/fuzz/hex.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/hex.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/hex.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/hex.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -16,12 +16,12 @@\n #include <string>\n #include <vector>\n \n-void initialize()\n+void initialize_hex()\n {\n     static const ECCVerifyHandle verify_handle;\n }\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET_INIT(hex, initialize_hex)\n {\n     const std::string random_hex_string(buffer.begin(), buffer.end());\n     const std::vector<unsigned char> data = ParseHex(random_hex_string);"
      },
      {
        "sha": "e3b62032bc994b54c1808ff010de598a326d32a0",
        "filename": "src/test/fuzz/http_request.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/http_request.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/http_request.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/http_request.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -39,7 +39,7 @@ extern \"C\" int evhttp_parse_headers_(struct evhttp_request*, struct evbuffer*);\n \n std::string RequestMethodString(HTTPRequest::RequestMethod m);\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(http_request)\n {\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n     evhttp_request* evreq = evhttp_request_new(nullptr, nullptr);"
      },
      {
        "sha": "ac83d91ea034cd5c23aa9de02c811597e8f50397",
        "filename": "src/test/fuzz/integer.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/integer.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/integer.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/integer.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -40,12 +40,12 @@\n #include <set>\n #include <vector>\n \n-void initialize()\n+void initialize_integer()\n {\n     SelectParams(CBaseChainParams::REGTEST);\n }\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET_INIT(integer, initialize_integer)\n {\n     if (buffer.size() < sizeof(uint256) + sizeof(uint160)) {\n         return;"
      },
      {
        "sha": "aa8f826e4ae9cc7260e6cfc1276042ee7bfa9cc5",
        "filename": "src/test/fuzz/key.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/key.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -26,14 +26,14 @@\n #include <string>\n #include <vector>\n \n-void initialize()\n+void initialize_key()\n {\n     static const ECCVerifyHandle ecc_verify_handle;\n     ECC_Start();\n     SelectParams(CBaseChainParams::REGTEST);\n }\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET_INIT(key, initialize_key)\n {\n     const CKey key = [&] {\n         CKey k;"
      },
      {
        "sha": "665ca01fa1f43ceccea202c3cb2410174d568ed2",
        "filename": "src/test/fuzz/key_io.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/key_io.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/key_io.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/key_io.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -14,14 +14,14 @@\n #include <string>\n #include <vector>\n \n-void initialize()\n+void initialize_key_io()\n {\n     static const ECCVerifyHandle verify_handle;\n     ECC_Start();\n     SelectParams(CBaseChainParams::MAIN);\n }\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET_INIT(key_io, initialize_key_io)\n {\n     const std::string random_string(buffer.begin(), buffer.end());\n "
      },
      {
        "sha": "0656ddc54764f966401255038170b866b5affe89",
        "filename": "src/test/fuzz/kitchen_sink.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/kitchen_sink.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/kitchen_sink.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/kitchen_sink.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -15,7 +15,7 @@\n // The fuzzing kitchen sink: Fuzzing harness for functions that need to be\n // fuzzed but a.) don't belong in any existing fuzzing harness file, and\n // b.) are not important enough to warrant their own fuzzing harness file.\n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(kitchen_sink)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n "
      },
      {
        "sha": "c428a866310f2046fc4a4d4933d953e953523c97",
        "filename": "src/test/fuzz/load_external_block_file.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/load_external_block_file.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/load_external_block_file.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/load_external_block_file.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -13,12 +13,12 @@\n #include <cstdint>\n #include <vector>\n \n-void initialize()\n+void initialize_load_external_block_file()\n {\n     InitializeFuzzingContext();\n }\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET_INIT(load_external_block_file, initialize_load_external_block_file)\n {\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n     FuzzedFileProvider fuzzed_file_provider = ConsumeFile(fuzzed_data_provider);"
      },
      {
        "sha": "5b1acae57b13514f425e2ca12f2e1a211060b73c",
        "filename": "src/test/fuzz/locale.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/locale.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/locale.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/locale.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -35,7 +35,7 @@ bool IsAvailableLocale(const std::string& locale_identifier)\n }\n } // namespace\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(locale)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     const std::string locale_identifier = ConsumeLocaleIdentifier(fuzzed_data_provider);"
      },
      {
        "sha": "15bcfab3ad807df07c5857d064976c59a8d0c427",
        "filename": "src/test/fuzz/merkleblock.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/merkleblock.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/merkleblock.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/merkleblock.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -13,7 +13,7 @@\n #include <string>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(merkleblock)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     CPartialMerkleTree partial_merkle_tree;"
      },
      {
        "sha": "06cd0afe2a588480c73080e4b73d4373609f3893",
        "filename": "src/test/fuzz/message.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/message.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/message.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/message.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -16,14 +16,14 @@\n #include <string>\n #include <vector>\n \n-void initialize()\n+void initialize_message()\n {\n     static const ECCVerifyHandle ecc_verify_handle;\n     ECC_Start();\n     SelectParams(CBaseChainParams::REGTEST);\n }\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET_INIT(message, initialize_message)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     const std::string random_message = fuzzed_data_provider.ConsumeRandomLengthString(1024);"
      },
      {
        "sha": "0f054529a69305e8b93c2e525df8891cc0715971",
        "filename": "src/test/fuzz/multiplication_overflow.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/multiplication_overflow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/multiplication_overflow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/multiplication_overflow.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -40,7 +40,7 @@ void TestMultiplicationOverflow(FuzzedDataProvider& fuzzed_data_provider)\n }\n } // namespace\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(multiplication_overflow)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     TestMultiplicationOverflow<int64_t>(fuzzed_data_provider);"
      },
      {
        "sha": "bb8e86cbe9deed2de44354594bcb2d1c6a8225af",
        "filename": "src/test/fuzz/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/net.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -19,12 +19,12 @@\n #include <string>\n #include <vector>\n \n-void initialize()\n+void initialize_net()\n {\n     static const BasicTestingSetup basic_testing_setup;\n }\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET_INIT(net, initialize_net)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n "
      },
      {
        "sha": "3620e16d30628fcb5e2fda661ed509fc53069b2d",
        "filename": "src/test/fuzz/net_permissions.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/net_permissions.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/net_permissions.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/net_permissions.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -13,7 +13,7 @@\n #include <string>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(net_permissions)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     const std::string s = fuzzed_data_provider.ConsumeRandomLengthString(32);"
      },
      {
        "sha": "6e9bb47ff6d44ecafd005fdc82f03c5cdb707e2a",
        "filename": "src/test/fuzz/netaddress.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/netaddress.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/netaddress.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/netaddress.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -12,7 +12,7 @@\n #include <netinet/in.h>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(netaddress)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n "
      },
      {
        "sha": "6ba75309c8670964f60d84b425f3e63a6c66bd15",
        "filename": "src/test/fuzz/p2p_transport_deserializer.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/p2p_transport_deserializer.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/p2p_transport_deserializer.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/p2p_transport_deserializer.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -12,12 +12,12 @@\n #include <limits>\n #include <vector>\n \n-void initialize()\n+void initialize_p2p_transport_deserializer()\n {\n     SelectParams(CBaseChainParams::REGTEST);\n }\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET_INIT(p2p_transport_deserializer, initialize_p2p_transport_deserializer)\n {\n     // Construct deserializer, with a dummy NodeId\n     V1TransportDeserializer deserializer{Params(), (NodeId)0, SER_NETWORK, INIT_PROTO_VERSION};"
      },
      {
        "sha": "7d0d5643bfee88a5c8ed5dcb2e50b62f718b339c",
        "filename": "src/test/fuzz/parse_hd_keypath.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/parse_hd_keypath.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/parse_hd_keypath.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/parse_hd_keypath.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -10,7 +10,7 @@\n #include <cstdint>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(parse_hd_keypath)\n {\n     const std::string keypath_str(buffer.begin(), buffer.end());\n     std::vector<uint32_t> keypath;"
      },
      {
        "sha": "4d5fa70dfaf76c96d93d4dd029a19fcc57e1f591",
        "filename": "src/test/fuzz/parse_iso8601.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/parse_iso8601.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/parse_iso8601.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/parse_iso8601.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -11,7 +11,7 @@\n #include <string>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(parse_iso8601)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n "
      },
      {
        "sha": "89d9be392e5488f28593498724d6a9a2492bca90",
        "filename": "src/test/fuzz/parse_numbers.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/parse_numbers.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/parse_numbers.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/parse_numbers.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -8,7 +8,7 @@\n \n #include <string>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(parse_numbers)\n {\n     const std::string random_string(buffer.begin(), buffer.end());\n "
      },
      {
        "sha": "1382afbc2c2f657011644e69f98c71d4ee0e6ad8",
        "filename": "src/test/fuzz/parse_script.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/parse_script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/parse_script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/parse_script.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -6,7 +6,7 @@\n #include <script/script.h>\n #include <test/fuzz/fuzz.h>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(parse_script)\n {\n     const std::string script_string(buffer.begin(), buffer.end());\n     try {"
      },
      {
        "sha": "afe382ba211ac9b1ffebeb2cd7a2cbbc397ab3bf",
        "filename": "src/test/fuzz/parse_univalue.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/parse_univalue.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/parse_univalue.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/parse_univalue.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -12,13 +12,13 @@\n #include <limits>\n #include <string>\n \n-void initialize()\n+void initialize_parse_univalue()\n {\n     static const ECCVerifyHandle verify_handle;\n     SelectParams(CBaseChainParams::REGTEST);\n }\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET_INIT(parse_univalue, initialize_parse_univalue)\n {\n     const std::string random_string(buffer.begin(), buffer.end());\n     bool valid = true;"
      },
      {
        "sha": "8a17a4b51b0d93157fd92598a59cff32455a3d8a",
        "filename": "src/test/fuzz/policy_estimator.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/policy_estimator.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/policy_estimator.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/policy_estimator.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -14,12 +14,12 @@\n #include <string>\n #include <vector>\n \n-void initialize()\n+void initialize_policy_estimator()\n {\n     InitializeFuzzingContext();\n }\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET_INIT(policy_estimator, initialize_policy_estimator)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     CBlockPolicyEstimator block_policy_estimator;"
      },
      {
        "sha": "8fa52143d83ef904f0161e36cd053df186876764",
        "filename": "src/test/fuzz/policy_estimator_io.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/policy_estimator_io.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/policy_estimator_io.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/policy_estimator_io.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -10,12 +10,12 @@\n #include <cstdint>\n #include <vector>\n \n-void initialize()\n+void initialize_policy_estimator_io()\n {\n     InitializeFuzzingContext();\n }\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET_INIT(policy_estimator_io, initialize_policy_estimator_io)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     FuzzedAutoFileProvider fuzzed_auto_file_provider = ConsumeAutoFile(fuzzed_data_provider);"
      },
      {
        "sha": "02beb6eb37154f337b7719a2bd8a93afe61c392f",
        "filename": "src/test/fuzz/pow.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/pow.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -15,12 +15,12 @@\n #include <string>\n #include <vector>\n \n-void initialize()\n+void initialize_pow()\n {\n     SelectParams(CBaseChainParams::MAIN);\n }\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET_INIT(pow, initialize_pow)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     const Consensus::Params& consensus_params = Params().GetConsensus();"
      },
      {
        "sha": "51956bbe9ec295082ca8a474319b52e871cf0216",
        "filename": "src/test/fuzz/prevector.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/prevector.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/prevector.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/prevector.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -204,7 +204,7 @@ class prevector_tester\n \n } // namespace\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(prevector)\n {\n     FuzzedDataProvider prov(buffer.data(), buffer.size());\n     prevector_tester<8, int> test;"
      },
      {
        "sha": "48815c89107bab581b7c1587e0e5272fb7d81401",
        "filename": "src/test/fuzz/primitives_transaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/primitives_transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/primitives_transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/primitives_transaction.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -12,7 +12,7 @@\n #include <string>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(primitives_transaction)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     const CScript script = ConsumeScript(fuzzed_data_provider);"
      },
      {
        "sha": "01de8bdbb5544191fa4bb9bec00fb56fcf82c8fc",
        "filename": "src/test/fuzz/process_message.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 11,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/process_message.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/process_message.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/process_message.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -32,19 +32,10 @@\n #include <vector>\n \n namespace {\n-\n-#ifdef MESSAGE_TYPE\n-#define TO_STRING_(s) #s\n-#define TO_STRING(s) TO_STRING_(s)\n-const std::string LIMIT_TO_MESSAGE_TYPE{TO_STRING(MESSAGE_TYPE)};\n-#else\n-const std::string LIMIT_TO_MESSAGE_TYPE;\n-#endif\n-\n const TestingSetup* g_setup;\n } // namespace\n \n-void initialize()\n+void initialize_process_message()\n {\n     static TestingSetup setup{\n         CBaseChainParams::REGTEST,\n@@ -60,7 +51,7 @@ void initialize()\n     SyncWithValidationInterfaceQueue();\n }\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+void fuzz_target(const std::vector<uint8_t>& buffer, const std::string& LIMIT_TO_MESSAGE_TYPE)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     ConnmanTestMsg& connman = *(ConnmanTestMsg*)g_setup->m_node.connman.get();\n@@ -88,3 +79,29 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     LOCK2(::cs_main, g_cs_orphans); // See init.cpp for rationale for implicit locking order requirement\n     g_setup->m_node.connman->StopNodes();\n }\n+\n+FUZZ_TARGET_INIT(process_message, initialize_process_message) { fuzz_target(buffer, \"\"); }\n+FUZZ_TARGET_INIT(process_message_addr, initialize_process_message) { fuzz_target(buffer, \"addr\"); }\n+FUZZ_TARGET_INIT(process_message_block, initialize_process_message) { fuzz_target(buffer, \"block\"); }\n+FUZZ_TARGET_INIT(process_message_blocktxn, initialize_process_message) { fuzz_target(buffer, \"blocktxn\"); }\n+FUZZ_TARGET_INIT(process_message_cmpctblock, initialize_process_message) { fuzz_target(buffer, \"cmpctblock\"); }\n+FUZZ_TARGET_INIT(process_message_feefilter, initialize_process_message) { fuzz_target(buffer, \"feefilter\"); }\n+FUZZ_TARGET_INIT(process_message_filteradd, initialize_process_message) { fuzz_target(buffer, \"filteradd\"); }\n+FUZZ_TARGET_INIT(process_message_filterclear, initialize_process_message) { fuzz_target(buffer, \"filterclear\"); }\n+FUZZ_TARGET_INIT(process_message_filterload, initialize_process_message) { fuzz_target(buffer, \"filterload\"); }\n+FUZZ_TARGET_INIT(process_message_getaddr, initialize_process_message) { fuzz_target(buffer, \"getaddr\"); }\n+FUZZ_TARGET_INIT(process_message_getblocks, initialize_process_message) { fuzz_target(buffer, \"getblocks\"); }\n+FUZZ_TARGET_INIT(process_message_getblocktxn, initialize_process_message) { fuzz_target(buffer, \"getblocktxn\"); }\n+FUZZ_TARGET_INIT(process_message_getdata, initialize_process_message) { fuzz_target(buffer, \"getdata\"); }\n+FUZZ_TARGET_INIT(process_message_getheaders, initialize_process_message) { fuzz_target(buffer, \"getheaders\"); }\n+FUZZ_TARGET_INIT(process_message_headers, initialize_process_message) { fuzz_target(buffer, \"headers\"); }\n+FUZZ_TARGET_INIT(process_message_inv, initialize_process_message) { fuzz_target(buffer, \"inv\"); }\n+FUZZ_TARGET_INIT(process_message_mempool, initialize_process_message) { fuzz_target(buffer, \"mempool\"); }\n+FUZZ_TARGET_INIT(process_message_notfound, initialize_process_message) { fuzz_target(buffer, \"notfound\"); }\n+FUZZ_TARGET_INIT(process_message_ping, initialize_process_message) { fuzz_target(buffer, \"ping\"); }\n+FUZZ_TARGET_INIT(process_message_pong, initialize_process_message) { fuzz_target(buffer, \"pong\"); }\n+FUZZ_TARGET_INIT(process_message_sendcmpct, initialize_process_message) { fuzz_target(buffer, \"sendcmpct\"); }\n+FUZZ_TARGET_INIT(process_message_sendheaders, initialize_process_message) { fuzz_target(buffer, \"sendheaders\"); }\n+FUZZ_TARGET_INIT(process_message_tx, initialize_process_message) { fuzz_target(buffer, \"tx\"); }\n+FUZZ_TARGET_INIT(process_message_verack, initialize_process_message) { fuzz_target(buffer, \"verack\"); }\n+FUZZ_TARGET_INIT(process_message_version, initialize_process_message) { fuzz_target(buffer, \"version\"); }"
      },
      {
        "sha": "e12e780a189444d228a20d945ddd59af334e49d1",
        "filename": "src/test/fuzz/process_messages.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/process_messages.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/process_messages.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/process_messages.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -19,7 +19,7 @@\n \n const TestingSetup* g_setup;\n \n-void initialize()\n+void initialize_process_messages()\n {\n     static TestingSetup setup{\n         CBaseChainParams::REGTEST,\n@@ -35,7 +35,7 @@ void initialize()\n     SyncWithValidationInterfaceQueue();\n }\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET_INIT(process_messages, initialize_process_messages)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n "
      },
      {
        "sha": "572181366bfcc9022ab67dff3b6ad59c8a392e11",
        "filename": "src/test/fuzz/protocol.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/protocol.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -12,7 +12,7 @@\n #include <stdexcept>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(protocol)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     const std::optional<CInv> inv = ConsumeDeserializable<CInv>(fuzzed_data_provider);"
      },
      {
        "sha": "0b4588c4ce5df803c2d0f62a827644cde8ca1040",
        "filename": "src/test/fuzz/psbt.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/psbt.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/psbt.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/psbt.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -17,12 +17,12 @@\n #include <string>\n #include <vector>\n \n-void initialize()\n+void initialize_psbt()\n {\n     static const ECCVerifyHandle verify_handle;\n }\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET_INIT(psbt, initialize_psbt)\n {\n     PartiallySignedTransaction psbt_mut;\n     const std::string raw_psbt{buffer.begin(), buffer.end()};"
      },
      {
        "sha": "96668734fd6f21fd0fee2071af23153807639132",
        "filename": "src/test/fuzz/random.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/random.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -12,7 +12,7 @@\n #include <string>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(random)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};"
      },
      {
        "sha": "29d12be77f2f34aa86e249221641ea18e418da3c",
        "filename": "src/test/fuzz/rbf.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/rbf.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/rbf.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/rbf.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -15,7 +15,7 @@\n #include <string>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(rbf)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     std::optional<CMutableTransaction> mtx = ConsumeDeserializable<CMutableTransaction>(fuzzed_data_provider);"
      },
      {
        "sha": "6087ee964a99df5e6c26db896d4d784b21b9354a",
        "filename": "src/test/fuzz/rolling_bloom_filter.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/rolling_bloom_filter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/rolling_bloom_filter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/rolling_bloom_filter.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -14,7 +14,7 @@\n #include <string>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(rolling_bloom_filter)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n "
      },
      {
        "sha": "892af655f65b150d7c275a7ee6c9468e14181e49",
        "filename": "src/test/fuzz/script.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/script.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -29,15 +29,15 @@\n #include <string>\n #include <vector>\n \n-void initialize()\n+void initialize_script()\n {\n     // Fuzzers using pubkey must hold an ECCVerifyHandle.\n     static const ECCVerifyHandle verify_handle;\n \n     SelectParams(CBaseChainParams::REGTEST);\n }\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET_INIT(script, initialize_script)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     const std::optional<CScript> script_opt = ConsumeDeserializable<CScript>(fuzzed_data_provider);"
      },
      {
        "sha": "2091ad5d9171110feb7a47a2bf62b7bbc07f3bd4",
        "filename": "src/test/fuzz/script_assets_test_minimizer.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/script_assets_test_minimizer.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/script_assets_test_minimizer.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/script_assets_test_minimizer.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -188,9 +188,9 @@ void Test(const std::string& str)\n \n ECCVerifyHandle handle;\n \n-}\n+} // namespace\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(script_assets_test_minimizer)\n {\n     if (buffer.size() < 2 || buffer.back() != '\\n' || buffer[buffer.size() - 2] != ',') return;\n     const std::string str((const char*)buffer.data(), buffer.size() - 2);"
      },
      {
        "sha": "fcd66b234e1476834ddd084a3bab4d027ccc57cc",
        "filename": "src/test/fuzz/script_bitcoin_consensus.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/script_bitcoin_consensus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/script_bitcoin_consensus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/script_bitcoin_consensus.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -12,7 +12,7 @@\n #include <string>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(script_bitcoin_consensus)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     const std::vector<uint8_t> random_bytes_1 = ConsumeRandomLengthByteVector(fuzzed_data_provider);"
      },
      {
        "sha": "1c62c018e797b5183b6144a5cf7054dd715a0db2",
        "filename": "src/test/fuzz/script_descriptor_cache.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/script_descriptor_cache.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/script_descriptor_cache.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/script_descriptor_cache.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -13,7 +13,7 @@\n #include <string>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(script_descriptor_cache)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     DescriptorCache descriptor_cache;"
      },
      {
        "sha": "ce8915ca2c8b8bb94253d4f7fb32628ace79f175",
        "filename": "src/test/fuzz/script_flags.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/script_flags.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/script_flags.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/script_flags.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -13,12 +13,12 @@\n /** Flags that are not forbidden by an assert */\n static bool IsValidFlagCombination(unsigned flags);\n \n-void initialize()\n+void initialize_script_flags()\n {\n     static const ECCVerifyHandle verify_handle;\n }\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET_INIT(script_flags, initialize_script_flags)\n {\n     CDataStream ds(buffer, SER_NETWORK, INIT_PROTO_VERSION);\n     try {"
      },
      {
        "sha": "5d59771682f1c9a01bdd4047943d68a25a81e24a",
        "filename": "src/test/fuzz/script_interpreter.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/script_interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/script_interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/script_interpreter.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -15,7 +15,7 @@\n \n bool CastToBool(const std::vector<unsigned char>& vch);\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(script_interpreter)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     {"
      },
      {
        "sha": "d232e984bc7ae7840f8adaf42a7e3379fae1516d",
        "filename": "src/test/fuzz/script_ops.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/script_ops.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/script_ops.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/script_ops.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -11,7 +11,7 @@\n #include <string>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(script_ops)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     CScript script = ConsumeScript(fuzzed_data_provider);"
      },
      {
        "sha": "7675fce328ac0cc258122a8039a02c6400cf5c82",
        "filename": "src/test/fuzz/script_sigcache.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/script_sigcache.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/script_sigcache.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/script_sigcache.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -16,15 +16,15 @@\n #include <string>\n #include <vector>\n \n-void initialize()\n+void initialize_script_sigcache()\n {\n     static const ECCVerifyHandle ecc_verify_handle;\n     ECC_Start();\n     SelectParams(CBaseChainParams::REGTEST);\n     InitSignatureCache();\n }\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET_INIT(script_sigcache, initialize_script_sigcache)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n "
      },
      {
        "sha": "fe850a69595b8d3e10a9ff3cdefa7e3ad1740363",
        "filename": "src/test/fuzz/script_sign.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/script_sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/script_sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/script_sign.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -22,14 +22,14 @@\n #include <string>\n #include <vector>\n \n-void initialize()\n+void initialize_script_sign()\n {\n     static const ECCVerifyHandle ecc_verify_handle;\n     ECC_Start();\n     SelectParams(CBaseChainParams::REGTEST);\n }\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET_INIT(script_sign, initialize_script_sign)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     const std::vector<uint8_t> key = ConsumeRandomLengthByteVector(fuzzed_data_provider, 128);"
      },
      {
        "sha": "650318f13c9090e8d77f7a66bea3d9de228fa34e",
        "filename": "src/test/fuzz/scriptnum_ops.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/scriptnum_ops.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/scriptnum_ops.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/scriptnum_ops.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -24,7 +24,7 @@ bool IsValidSubtraction(const CScriptNum& lhs, const CScriptNum& rhs)\n }\n } // namespace\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(scriptnum_ops)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     CScriptNum script_num = ConsumeScriptNum(fuzzed_data_provider);"
      },
      {
        "sha": "0435626356105ffd4b2a71794f5a5a0ec9fc605c",
        "filename": "src/test/fuzz/secp256k1_ec_seckey_import_export_der.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/secp256k1_ec_seckey_import_export_der.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/secp256k1_ec_seckey_import_export_der.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/secp256k1_ec_seckey_import_export_der.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -14,7 +14,7 @@\n int ec_seckey_import_der(const secp256k1_context* ctx, unsigned char* out32, const unsigned char* seckey, size_t seckeylen);\n int ec_seckey_export_der(const secp256k1_context* ctx, unsigned char* seckey, size_t* seckeylen, const unsigned char* key32, bool compressed);\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(secp256k1_ec_seckey_import_export_der)\n {\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n     secp256k1_context* secp256k1_context_sign = secp256k1_context_create(SECP256K1_CONTEXT_SIGN);"
      },
      {
        "sha": "f437d53b57032ef3ef4f6dccaf54dcc2aed4790c",
        "filename": "src/test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -14,7 +14,7 @@\n bool SigHasLowR(const secp256k1_ecdsa_signature* sig);\n int ecdsa_signature_parse_der_lax(const secp256k1_context* ctx, secp256k1_ecdsa_signature* sig, const unsigned char* input, size_t inputlen);\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(secp256k1_ecdsa_signature_parse_der_lax)\n {\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n     const std::vector<uint8_t> signature_bytes = ConsumeRandomLengthByteVector(fuzzed_data_provider);"
      },
      {
        "sha": "3e7b72805eca4ebbb1049854fb1ba797ebe3b140",
        "filename": "src/test/fuzz/signature_checker.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/signature_checker.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/signature_checker.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/signature_checker.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -13,7 +13,7 @@\n #include <string>\n #include <vector>\n \n-void initialize()\n+void initialize_signature_checker()\n {\n     static const auto verify_handle = MakeUnique<ECCVerifyHandle>();\n }\n@@ -52,7 +52,7 @@ class FuzzedSignatureChecker : public BaseSignatureChecker\n };\n } // namespace\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET_INIT(signature_checker, initialize_signature_checker)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     const unsigned int flags = fuzzed_data_provider.ConsumeIntegral<unsigned int>();"
      },
      {
        "sha": "541322d4846f92c55ea4ecf5745692e4a0fad001",
        "filename": "src/test/fuzz/signet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/signet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/signet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/signet.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -15,12 +15,12 @@\n #include <optional>\n #include <vector>\n \n-void initialize()\n+void initialize_signet()\n {\n     InitializeFuzzingContext(CBaseChainParams::SIGNET);\n }\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET_INIT(signet, initialize_signet)\n {\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n     const std::optional<CBlock> block = ConsumeDeserializable<CBlock>(fuzzed_data_provider);"
      },
      {
        "sha": "8f753948df3d99f7caeebabee234c1cf73ff0cb6",
        "filename": "src/test/fuzz/span.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/span.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/span.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/span.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -13,7 +13,7 @@\n #include <string>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(span)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n "
      },
      {
        "sha": "293a7e7e902c077f2d2b8ea00235a49ee105f32a",
        "filename": "src/test/fuzz/spanparsing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/spanparsing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/spanparsing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/spanparsing.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -6,7 +6,7 @@\n #include <test/fuzz/fuzz.h>\n #include <util/spanparsing.h>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(spanparsing)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     const size_t query_size = fuzzed_data_provider.ConsumeIntegral<size_t>();"
      },
      {
        "sha": "282a2cd8ca79b73da6295b3486a078da011560f6",
        "filename": "src/test/fuzz/string.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/string.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/string.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/string.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -33,7 +33,7 @@\n #include <string>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(string)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     const std::string random_string_1 = fuzzed_data_provider.ConsumeRandomLengthString(32);"
      },
      {
        "sha": "4af0e750ceb03e5a73ef8ffc55ef816b8847f9a9",
        "filename": "src/test/fuzz/strprintf.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/strprintf.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/strprintf.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/strprintf.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -13,7 +13,7 @@\n #include <string>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(str_printf)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     const std::string format_string = fuzzed_data_provider.ConsumeRandomLengthString(64);"
      },
      {
        "sha": "375a8c1ed0bf3db5d42572fa3f039e67105ccfe8",
        "filename": "src/test/fuzz/system.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/system.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -22,7 +22,7 @@ std::string GetArgumentName(const std::string& name)\n }\n } // namespace\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(system)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     ArgsManager args_manager{};"
      },
      {
        "sha": "d7fa66298a277068fdc62b05a3b21d4967953057",
        "filename": "src/test/fuzz/timedata.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/timedata.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/timedata.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/timedata.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -11,7 +11,7 @@\n #include <string>\n #include <vector>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(timedata)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     const unsigned int max_size = fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(0, 1000);"
      },
      {
        "sha": "1b3d42d9978fa44aea8d9a8bd133a275b936b02d",
        "filename": "src/test/fuzz/transaction.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/transaction.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -21,12 +21,12 @@\n \n #include <cassert>\n \n-void initialize()\n+void initialize_transaction()\n {\n     SelectParams(CBaseChainParams::REGTEST);\n }\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET_INIT(transaction, initialize_transaction)\n {\n     CDataStream ds(buffer, SER_NETWORK, INIT_PROTO_VERSION);\n     try {"
      },
      {
        "sha": "dd94922b86b5f496f40d3d6fe110cd0133f471d3",
        "filename": "src/test/fuzz/tx_in.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/tx_in.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/tx_in.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/tx_in.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -12,7 +12,7 @@\n \n #include <cassert>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(tx_in)\n {\n     CDataStream ds(buffer, SER_NETWORK, INIT_PROTO_VERSION);\n     CTxIn tx_in;"
      },
      {
        "sha": "5e22c4adc5e58daf1ec01aa34bc0ffa18836aad1",
        "filename": "src/test/fuzz/tx_out.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/tx_out.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/tx_out.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/tx_out.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -10,7 +10,7 @@\n #include <test/fuzz/fuzz.h>\n #include <version.h>\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(tx_out)\n {\n     CDataStream ds(buffer, SER_NETWORK, INIT_PROTO_VERSION);\n     CTxOut tx_out;"
      },
      {
        "sha": "72438ff2d759ca31ab199600f8e19f0f71ac50b3",
        "filename": "src/test/fuzz/txrequest.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/txrequest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/src/test/fuzz/txrequest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/txrequest.cpp?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -310,7 +310,7 @@ class Tester\n };\n } // namespace\n \n-void test_one_input(const std::vector<uint8_t>& buffer)\n+FUZZ_TARGET(txrequest)\n {\n     // Tester object (which encapsulates a TxRequestTracker).\n     Tester tester;"
      },
      {
        "sha": "3a2cefbe2b2352b751088075e353b83dec5058fe",
        "filename": "test/fuzz/test_runner.py",
        "status": "modified",
        "additions": 39,
        "deletions": 26,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44444ba759480237172d83f42374c5c29c76eda0/test/fuzz/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44444ba759480237172d83f42374c5c29c76eda0/test/fuzz/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/fuzz/test_runner.py?ref=44444ba759480237172d83f42374c5c29c76eda0",
        "patch": "@@ -83,7 +83,7 @@ def main():\n         sys.exit(1)\n \n     # Build list of tests\n-    test_list_all = parse_test_list(makefile=os.path.join(config[\"environment\"][\"SRCDIR\"], 'src', 'Makefile.test.include'))\n+    test_list_all = parse_test_list(fuzz_bin=os.path.join(config[\"environment\"][\"BUILDDIR\"], 'src', 'test', 'fuzz', 'fuzz'))\n \n     if not test_list_all:\n         logging.error(\"No fuzz targets found\")\n@@ -126,9 +126,12 @@ def main():\n     try:\n         help_output = subprocess.run(\n             args=[\n-                os.path.join(config[\"environment\"][\"BUILDDIR\"], 'src', 'test', 'fuzz', test_list_selection[0]),\n+                os.path.join(config[\"environment\"][\"BUILDDIR\"], 'src', 'test', 'fuzz', 'fuzz'),\n                 '-help=1',\n             ],\n+            env={\n+                'FUZZ': test_list_selection[0]\n+            },\n             timeout=20,\n             check=True,\n             stderr=subprocess.PIPE,\n@@ -177,24 +180,30 @@ def generate_corpus_seeds(*, fuzz_pool, build_dir, seed_dir, targets):\n     \"\"\"\n     logging.info(\"Generating corpus seeds to {}\".format(seed_dir))\n \n-    def job(command):\n+    def job(command, t):\n         logging.debug(\"Running '{}'\\n\".format(\" \".join(command)))\n         logging.debug(\"Command '{}' output:\\n'{}'\\n\".format(\n             ' '.join(command),\n-            subprocess.run(command, check=True, stderr=subprocess.PIPE,\n-                           universal_newlines=True).stderr\n-        ))\n+            subprocess.run(\n+                command,\n+                env={\n+                    'FUZZ': t\n+                },\n+                check=True,\n+                stderr=subprocess.PIPE,\n+                universal_newlines=True,\n+            ).stderr))\n \n     futures = []\n     for target in targets:\n         target_seed_dir = os.path.join(seed_dir, target)\n         os.makedirs(target_seed_dir, exist_ok=True)\n         command = [\n-            os.path.join(build_dir, \"src\", \"test\", \"fuzz\", target),\n+            os.path.join(build_dir, 'src', 'test', 'fuzz', 'fuzz'),\n             \"-runs=100000\",\n             target_seed_dir,\n         ]\n-        futures.append(fuzz_pool.submit(job, command))\n+        futures.append(fuzz_pool.submit(job, command, target))\n \n     for future in as_completed(futures):\n         future.result()\n@@ -205,7 +214,7 @@ def merge_inputs(*, fuzz_pool, corpus, test_list, build_dir, merge_dir):\n     jobs = []\n     for t in test_list:\n         args = [\n-            os.path.join(build_dir, 'src', 'test', 'fuzz', t),\n+            os.path.join(build_dir, 'src', 'test', 'fuzz', 'fuzz'),\n             '-merge=1',\n             '-use_value_profile=1',  # Also done by oss-fuzz https://github.com/google/oss-fuzz/issues/1406#issuecomment-387790487\n             os.path.join(corpus, t),\n@@ -216,7 +225,15 @@ def merge_inputs(*, fuzz_pool, corpus, test_list, build_dir, merge_dir):\n \n         def job(t, args):\n             output = 'Run {} with args {}\\n'.format(t, \" \".join(args))\n-            output += subprocess.run(args, check=True, stderr=subprocess.PIPE, universal_newlines=True).stderr\n+            output += subprocess.run(\n+                args,\n+                env={\n+                    'FUZZ': t\n+                },\n+                check=True,\n+                stderr=subprocess.PIPE,\n+                universal_newlines=True,\n+            ).stderr\n             logging.debug(output)\n \n         jobs.append(fuzz_pool.submit(job, t, args))\n@@ -231,7 +248,7 @@ def run_once(*, fuzz_pool, corpus, test_list, build_dir, use_valgrind):\n         corpus_path = os.path.join(corpus, t)\n         os.makedirs(corpus_path, exist_ok=True)\n         args = [\n-            os.path.join(build_dir, 'src', 'test', 'fuzz', t),\n+            os.path.join(build_dir, 'src', 'test', 'fuzz', 'fuzz'),\n             '-runs=1',\n             corpus_path,\n         ]\n@@ -240,7 +257,7 @@ def run_once(*, fuzz_pool, corpus, test_list, build_dir, use_valgrind):\n \n         def job(t, args):\n             output = 'Run {} with args {}'.format(t, args)\n-            result = subprocess.run(args, stderr=subprocess.PIPE, universal_newlines=True)\n+            result = subprocess.run(args, env={'FUZZ': t}, stderr=subprocess.PIPE, universal_newlines=True)\n             output += result.stderr\n             return output, result\n \n@@ -260,20 +277,16 @@ def job(t, args):\n             sys.exit(1)\n \n \n-def parse_test_list(makefile):\n-    with open(makefile, encoding='utf-8') as makefile_test:\n-        test_list_all = []\n-        read_targets = False\n-        for line in makefile_test.readlines():\n-            line = line.strip().replace('test/fuzz/', '').replace(' \\\\', '')\n-            if read_targets:\n-                if not line:\n-                    break\n-                test_list_all.append(line)\n-                continue\n-\n-            if line == 'FUZZ_TARGETS =':\n-                read_targets = True\n+def parse_test_list(*, fuzz_bin):\n+    test_list_all = subprocess.run(\n+        fuzz_bin,\n+        env={\n+            'PRINT_ALL_FUZZ_TARGETS_AND_ABORT': ''\n+        },\n+        stdout=subprocess.PIPE,\n+        stderr=subprocess.DEVNULL,\n+        universal_newlines=True,\n+    ).stdout.splitlines()\n     return test_list_all\n \n "
      }
    ]
  },
  {
    "sha": "fa13e1b0c52738492310b6b421d8e38cb04da5b1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTEzZTFiMGM1MjczODQ5MjMxMGI2YjQyMWQ4ZTM4Y2IwNGRhNWIx",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-14T14:52:39Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-14T15:55:56Z"
      },
      "message": "build: Add option --enable-danger-fuzz-link-all",
      "tree": {
        "sha": "61d52e5545a70dd21ad1b36861a5463397d4ab1f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/61d52e5545a70dd21ad1b36861a5463397d4ab1f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa13e1b0c52738492310b6b421d8e38cb04da5b1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiw5QwAtxVrismmGw/GsbvxRjflA9PP4b6PMUt1W04IQxxeMkW1plJ+qpjZCqZB\nBcOHRKSbPnwlS2D3CZzwOCQ1CouxcYrAX/3Hsj+OY5g+XLSyjw2RZgY/K6kFXE3m\n7UEnRDmpnurMDMsGgK7/FEtINE+m0NQnZ4SZ/NtHN9Z52epaR5KhYu16Oo+bLLWe\nkLzDwUv0nvFRHgkjDXOzdhIZIfdICbL7pALNDtcNafNmlqJKIXAmt5bGkeKy094u\nfsY+jKIkKAzn5X2NXElcIxm88k3aJUy87Ip0+I5kyJgOJ63XOsC2Ht63B/oSKvU7\nT7ZJ5Qfc6tr2ZVMNPnbR1cQL3GOQjT/4O8wYLlIsGwoe8eoNbLa3j7NvJsm+fxTE\ntOwYrIelBsqHkYVJrQrawMIiZ9HddeYIE8bU8u9c7BGQDA+gV286xAdOrYyjGxF4\njwnZP/o43JQDp5fDbLqbu38z/Kera7TNmtoI2TPRVNMsmW9V+y19MkMB//HjR8XP\ncSVKVdJB\n=rrrB\n-----END PGP SIGNATURE-----",
        "payload": "tree 61d52e5545a70dd21ad1b36861a5463397d4ab1f\nparent 44444ba759480237172d83f42374c5c29c76eda0\nauthor MarcoFalke <falke.marco@gmail.com> 1607957559 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1607961356 +0100\n\nbuild: Add option --enable-danger-fuzz-link-all\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa13e1b0c52738492310b6b421d8e38cb04da5b1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa13e1b0c52738492310b6b421d8e38cb04da5b1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa13e1b0c52738492310b6b421d8e38cb04da5b1/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "44444ba759480237172d83f42374c5c29c76eda0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44444ba759480237172d83f42374c5c29c76eda0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/44444ba759480237172d83f42374c5c29c76eda0"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 42,
      "deletions": 1
    },
    "files": [
      {
        "sha": "7615eb3420a6122a21ecfe18205f6939f938ec9e",
        "filename": ".fuzzbuzz.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa13e1b0c52738492310b6b421d8e38cb04da5b1/.fuzzbuzz.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa13e1b0c52738492310b6b421d8e38cb04da5b1/.fuzzbuzz.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.fuzzbuzz.yml?ref=fa13e1b0c52738492310b6b421d8e38cb04da5b1",
        "patch": "@@ -7,7 +7,7 @@ setup:\n   - sudo apt-get update\n   - sudo apt-get install -y autoconf bsdmainutils clang git libboost-all-dev libboost-program-options-dev libc++1 libc++abi1 libc++abi-dev libc++-dev libclang1 libclang-dev libdb5.3++ libevent-dev libllvm-ocaml-dev libomp5 libomp-dev libprotobuf-dev libqt5core5a libqt5dbus5 libqt5gui5 libssl-dev libtool llvm llvm-dev llvm-runtime pkg-config protobuf-compiler qttools5-dev qttools5-dev-tools software-properties-common\n   - ./autogen.sh\n-  - CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+  - CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined --enable-danger-fuzz-link-all\n   - make\n   - git clone https://github.com/bitcoin-core/qa-assets\n auto_targets:"
      },
      {
        "sha": "04dc8b17f88997b63a255ea9c951e8763498b652",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa13e1b0c52738492310b6b421d8e38cb04da5b1/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa13e1b0c52738492310b6b421d8e38cb04da5b1/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=fa13e1b0c52738492310b6b421d8e38cb04da5b1",
        "patch": "@@ -167,6 +167,12 @@ AC_ARG_ENABLE([fuzz],\n     [enable_fuzz=$enableval],\n     [enable_fuzz=no])\n \n+AC_ARG_ENABLE([danger_fuzz_link_all],\n+    AS_HELP_STRING([--enable-danger-fuzz-link-all],\n+    [Danger! Modifies source code. Needs git and gnu sed installed. Link each fuzz target (default no).]),\n+    [enable_danger_fuzz_link_all=$enableval],\n+    [enable_danger_fuzz_link_all=no])\n+\n AC_ARG_WITH([qrencode],\n   [AS_HELP_STRING([--with-qrencode],\n   [enable QR code support (default is yes if qt is enabled and libqrencode is found)])],\n@@ -1612,6 +1618,7 @@ AM_CONDITIONAL([USE_SQLITE], [test \"x$use_sqlite\" = \"xyes\"])\n AM_CONDITIONAL([USE_BDB], [test \"x$use_bdb\" = \"xyes\"])\n AM_CONDITIONAL([ENABLE_TESTS],[test x$BUILD_TEST = xyes])\n AM_CONDITIONAL([ENABLE_FUZZ],[test x$enable_fuzz = xyes])\n+AM_CONDITIONAL([ENABLE_FUZZ_LINK_ALL],[test x$enable_danger_fuzz_link_all = xyes])\n AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])\n AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$BUILD_TEST_QT = xyes])\n AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])"
      },
      {
        "sha": "cbfe93df0a827e28b31c316ec124b49a997b3177",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa13e1b0c52738492310b6b421d8e38cb04da5b1/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa13e1b0c52738492310b6b421d8e38cb04da5b1/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=fa13e1b0c52738492310b6b421d8e38cb04da5b1",
        "patch": "@@ -10,6 +10,7 @@ endif\n \n TEST_SRCDIR = test\n TEST_BINARY=test/test_bitcoin$(EXEEXT)\n+FUZZ_BINARY=test/fuzz/fuzz$(EXEEXT)\n \n JSON_TEST_FILES = \\\n   test/data/script_tests.json \\\n@@ -320,6 +321,11 @@ if EMBEDDED_UNIVALUE\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C univalue check\n endif\n \n+if ENABLE_FUZZ_LINK_ALL\n+all-local: $(FUZZ_BINARY)\n+\tbash ./test/fuzz/danger_link_all.sh\n+endif\n+\n %.cpp.test: %.cpp\n \t@echo Running tests: `cat $< | grep -E \"(BOOST_FIXTURE_TEST_SUITE\\\\(|BOOST_AUTO_TEST_SUITE\\\\()\" | cut -d '(' -f 2 | cut -d ',' -f 1 | cut -d ')' -f 1` from $<\n \t$(AM_V_at)$(TEST_BINARY) --catch_system_errors=no -l test_suite -t \"`cat $< | grep -E \"(BOOST_FIXTURE_TEST_SUITE\\\\(|BOOST_AUTO_TEST_SUITE\\\\()\" | cut -d '(' -f 2 | cut -d ',' -f 1 | cut -d ')' -f 1`\" -- DEBUG_LOG_OUT > $<.log 2>&1 || (cat $<.log && false)"
      },
      {
        "sha": "2ddd00c658dc7cfa2a46e0b09371d86818e981e9",
        "filename": "src/test/fuzz/danger_link_all.sh",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa13e1b0c52738492310b6b421d8e38cb04da5b1/src/test/fuzz/danger_link_all.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa13e1b0c52738492310b6b421d8e38cb04da5b1/src/test/fuzz/danger_link_all.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/danger_link_all.sh?ref=fa13e1b0c52738492310b6b421d8e38cb04da5b1",
        "patch": "@@ -0,0 +1,28 @@\n+#!/usr/bin/env bash\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+set -e\n+\n+ROOT_DIR=\"$(git rev-parse --show-toplevel)\"\n+\n+# Run only once (break make recursion)\n+if [ -d \"${ROOT_DIR}/lock_fuzz_link_all\" ]; then\n+  exit\n+fi\n+mkdir \"${ROOT_DIR}/lock_fuzz_link_all\"\n+\n+echo \"Linking each fuzz target separately.\"\n+for FUZZING_HARNESS in $(PRINT_ALL_FUZZ_TARGETS_AND_ABORT=1 \"${ROOT_DIR}/src/test/fuzz/fuzz\" | sort -u); do\n+    echo \"Building src/test/fuzz/${FUZZING_HARNESS} ...\"\n+    git checkout -- \"${ROOT_DIR}/src/test/fuzz/fuzz.cpp\"\n+    sed -i \"s/std::getenv(\\\"FUZZ\\\")/\\\"${FUZZING_HARNESS}\\\"/g\" \"${ROOT_DIR}/src/test/fuzz/fuzz.cpp\"\n+    make\n+    mv \"${ROOT_DIR}/src/test/fuzz/fuzz\" \"${ROOT_DIR}/src/test/fuzz/${FUZZING_HARNESS}\"\n+done\n+git checkout -- \"${ROOT_DIR}/src/test/fuzz/fuzz.cpp\"\n+rmdir \"${ROOT_DIR}/lock_fuzz_link_all\"\n+echo \"Successfully built all fuzz targets.\""
      }
    ]
  }
]