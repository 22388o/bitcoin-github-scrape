[
  {
    "sha": "a7d0d70207cec729a06854422d709faac8e4b385",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphN2QwZDcwMjA3Y2VjNzI5YTA2ODU0NDIyZDcwOWZhYWM4ZTRiMzg1",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-03-22T21:08:13Z"
      },
      "committer": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-03-23T19:45:30Z"
      },
      "message": "[Qt] optionally show debug window as main tab",
      "tree": {
        "sha": "4653b09cb9eebad81f993418f6f749385b26901c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4653b09cb9eebad81f993418f6f749385b26901c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a7d0d70207cec729a06854422d709faac8e4b385",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7d0d70207cec729a06854422d709faac8e4b385",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a7d0d70207cec729a06854422d709faac8e4b385",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7d0d70207cec729a06854422d709faac8e4b385/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d3c3210fa376a9c1ce55c537a3f4439202783624",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3c3210fa376a9c1ce55c537a3f4439202783624",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d3c3210fa376a9c1ce55c537a3f4439202783624"
      }
    ],
    "stats": {
      "total": 199,
      "additions": 144,
      "deletions": 55
    },
    "files": [
      {
        "sha": "8032172438734db0444dd314464e230d1e3d15bd",
        "filename": "src/qt/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7d0d70207cec729a06854422d709faac8e4b385/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7d0d70207cec729a06854422d709faac8e4b385/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=a7d0d70207cec729a06854422d709faac8e4b385",
        "patch": "@@ -233,6 +233,7 @@ RES_ICONS = \\\n   res/icons/connect3_16.png \\\n   res/icons/connect4_16.png \\\n   res/icons/debugwindow.png \\\n+  res/icons/debugtab.png \\\n   res/icons/edit.png \\\n   res/icons/editcopy.png \\\n   res/icons/editpaste.png \\"
      },
      {
        "sha": "4831596cc59561fd900c1003deb4e6f533d43417",
        "filename": "src/qt/bitcoin.qrc",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7d0d70207cec729a06854422d709faac8e4b385/src/qt/bitcoin.qrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7d0d70207cec729a06854422d709faac8e4b385/src/qt/bitcoin.qrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.qrc?ref=a7d0d70207cec729a06854422d709faac8e4b385",
        "patch": "@@ -41,6 +41,7 @@\n         <file alias=\"filesave\">res/icons/filesave.png</file>\n         <file alias=\"qrcode\">res/icons/qrcode.png</file>\n         <file alias=\"debugwindow\">res/icons/debugwindow.png</file>\n+        <file alias=\"debugtab\">res/icons/debugtab.png</file>\n     </qresource>\n     <qresource prefix=\"/images\">\n         <file alias=\"about\">res/images/about.png</file>"
      },
      {
        "sha": "d23ff5e5c9a729a5825f27a362bdc3cca6ffe64e",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 73,
        "deletions": 52,
        "changes": 125,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7d0d70207cec729a06854422d709faac8e4b385/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7d0d70207cec729a06854422d709faac8e4b385/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=a7d0d70207cec729a06854422d709faac8e4b385",
        "patch": "@@ -75,9 +75,9 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n     QString windowTitle = tr(\"Bitcoin Core\") + \" - \";\n #ifdef ENABLE_WALLET\n     /* if compiled with wallet support, -disablewallet can still disable the wallet */\n-    bool enableWallet = !GetBoolArg(\"-disablewallet\", false);\n+    enableWallet = !GetBoolArg(\"-disablewallet\", false);\n #else\n-    bool enableWallet = false;\n+    enableWallet = false;\n #endif\n     if(enableWallet)\n     {\n@@ -113,21 +113,11 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n     setUnifiedTitleAndToolBarOnMac(true);\n #endif\n \n-    rpcConsole = new RPCConsole(enableWallet ? this : 0);\n-#ifdef ENABLE_WALLET\n-    if(enableWallet)\n-    {\n-        /** Create wallet frame and make it the central widget */\n-        walletFrame = new WalletFrame(this);\n-        setCentralWidget(walletFrame);\n-    } else\n-#endif\n-    {\n-        /* When compiled without wallet or -disablewallet is provided,\n-         * the central widget is the rpc console.\n-         */\n-        setCentralWidget(rpcConsole);\n-    }\n+    rpcConsole = new RPCConsole(this);\n+\n+    /** Create wallet frame and make it the central widget */\n+    walletFrame = new WalletFrame(this);\n+    setCentralWidget(walletFrame);\n \n     // Accept D&D of URIs\n     setAcceptDrops(true);\n@@ -186,7 +176,7 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n     statusBar()->addWidget(progressBar);\n     statusBar()->addPermanentWidget(frameBlocks);\n \n-    connect(openRPCConsoleAction, SIGNAL(triggered()), rpcConsole, SLOT(show()));\n+    connect(openRPCConsoleAction, SIGNAL(triggered()), this, SLOT(debugWindowClicked()));\n \n     // prevents an oben debug window from becoming stuck/unusable on client shutdown\n     connect(quitAction, SIGNAL(triggered()), rpcConsole, SLOT(hide()));\n@@ -247,6 +237,14 @@ void BitcoinGUI::createActions(bool fIsTestnet)\n     historyAction->setShortcut(QKeySequence(Qt::ALT + Qt::Key_4));\n     tabGroup->addAction(historyAction);\n \n+    debugAction = new QAction(QIcon(\":/icons/debugtab\"), tr(\"&Debug\"), this);\n+    debugAction->setStatusTip(tr(\"Open debugging and diagnostic console\"));\n+    debugAction->setToolTip(debugAction->statusTip());\n+    debugAction->setCheckable(true);\n+    debugAction->setShortcut(QKeySequence(Qt::ALT + Qt::Key_5));\n+    debugAction->setVisible(false);\n+    tabGroup->addAction(debugAction);\n+\n     // These showNormalIfMinimized are needed because Send Coins and Receive Coins\n     // can be triggered from the tray menu, and need to show the GUI to be useful.\n     connect(overviewAction, SIGNAL(triggered()), this, SLOT(showNormalIfMinimized()));\n@@ -257,6 +255,8 @@ void BitcoinGUI::createActions(bool fIsTestnet)\n     connect(receiveCoinsAction, SIGNAL(triggered()), this, SLOT(gotoReceiveCoinsPage()));\n     connect(historyAction, SIGNAL(triggered()), this, SLOT(showNormalIfMinimized()));\n     connect(historyAction, SIGNAL(triggered()), this, SLOT(gotoHistoryPage()));\n+    connect(debugAction, SIGNAL(triggered()), this, SLOT(showNormalIfMinimized()));\n+    connect(debugAction, SIGNAL(triggered()), this, SLOT(gotoDebugPage()));\n \n     quitAction = new QAction(QIcon(\":/icons/quit\"), tr(\"E&xit\"), this);\n     quitAction->setStatusTip(tr(\"Quit application\"));\n@@ -317,7 +317,7 @@ void BitcoinGUI::createActions(bool fIsTestnet)\n     connect(toggleHideAction, SIGNAL(triggered()), this, SLOT(toggleHidden()));\n     connect(showHelpMessageAction, SIGNAL(triggered()), this, SLOT(showHelpMessageClicked()));\n #ifdef ENABLE_WALLET\n-    if(walletFrame)\n+    if(enableWallet)\n     {\n         connect(encryptWalletAction, SIGNAL(triggered(bool)), walletFrame, SLOT(encryptWallet(bool)));\n         connect(backupWalletAction, SIGNAL(triggered()), walletFrame, SLOT(backupWallet()));\n@@ -343,7 +343,7 @@ void BitcoinGUI::createMenuBar()\n \n     // Configure the menus\n     QMenu *file = appMenuBar->addMenu(tr(\"&File\"));\n-    if(walletFrame)\n+    if(enableWallet)\n     {\n         file->addAction(openAction);\n         file->addAction(backupWalletAction);\n@@ -357,7 +357,7 @@ void BitcoinGUI::createMenuBar()\n     file->addAction(quitAction);\n \n     QMenu *settings = appMenuBar->addMenu(tr(\"&Settings\"));\n-    if(walletFrame)\n+    if(enableWallet)\n     {\n         settings->addAction(encryptWalletAction);\n         settings->addAction(changePassphraseAction);\n@@ -366,7 +366,7 @@ void BitcoinGUI::createMenuBar()\n     settings->addAction(optionsAction);\n \n     QMenu *help = appMenuBar->addMenu(tr(\"&Help\"));\n-    if(walletFrame)\n+    if(enableWallet)\n     {\n         help->addAction(openRPCConsoleAction);\n     }\n@@ -378,14 +378,15 @@ void BitcoinGUI::createMenuBar()\n \n void BitcoinGUI::createToolBars()\n {\n-    if(walletFrame)\n+    if(enableWallet)\n     {\n         QToolBar *toolbar = addToolBar(tr(\"Tabs toolbar\"));\n         toolbar->setToolButtonStyle(Qt::ToolButtonTextBesideIcon);\n         toolbar->addAction(overviewAction);\n         toolbar->addAction(sendCoinsAction);\n         toolbar->addAction(receiveCoinsAction);\n         toolbar->addAction(historyAction);\n+        toolbar->addAction(debugAction);\n         overviewAction->setChecked(true);\n     }\n }\n@@ -410,34 +411,39 @@ void BitcoinGUI::setClientModel(ClientModel *clientModel)\n         connect(clientModel, SIGNAL(message(QString,QString,unsigned int)), this, SLOT(message(QString,QString,unsigned int)));\n \n         rpcConsole->setClientModel(clientModel);\n-#ifdef ENABLE_WALLET\n-        if(walletFrame)\n+\n+        // in no-wallet mode always show debug tab or if checkbox set by user\n+        if (!enableWallet || (clientModel->getOptionsModel() && clientModel->getOptionsModel()->getDebugTab()))\n         {\n-            walletFrame->setClientModel(clientModel);\n+            debugAction->setVisible(true);\n+            walletFrame->addWidget(rpcConsole);\n+            if (!enableWallet)\n+                gotoDebugPage();\n         }\n-#endif\n+\n+        walletFrame->setClientModel(clientModel);\n     }\n }\n \n #ifdef ENABLE_WALLET\n bool BitcoinGUI::addWallet(const QString& name, WalletModel *walletModel)\n {\n-    if(!walletFrame)\n+    if(!enableWallet)\n         return false;\n     setWalletActionsEnabled(true);\n     return walletFrame->addWallet(name, walletModel);\n }\n \n bool BitcoinGUI::setCurrentWallet(const QString& name)\n {\n-    if(!walletFrame)\n+    if(!enableWallet)\n         return false;\n     return walletFrame->setCurrentWallet(name);\n }\n \n void BitcoinGUI::removeAllWallets()\n {\n-    if(!walletFrame)\n+    if(!enableWallet)\n         return;\n     setWalletActionsEnabled(false);\n     walletFrame->removeAllWallets();\n@@ -505,14 +511,18 @@ void BitcoinGUI::createTrayIconMenu()\n     // Configuration of the tray icon (or dock icon) icon menu\n     trayIconMenu->addAction(toggleHideAction);\n     trayIconMenu->addSeparator();\n-    trayIconMenu->addAction(sendCoinsAction);\n-    trayIconMenu->addAction(receiveCoinsAction);\n-    trayIconMenu->addSeparator();\n-    trayIconMenu->addAction(signMessageAction);\n-    trayIconMenu->addAction(verifyMessageAction);\n-    trayIconMenu->addSeparator();\n+    if(enableWallet)\n+    {\n+        trayIconMenu->addAction(sendCoinsAction);\n+        trayIconMenu->addAction(receiveCoinsAction);\n+        trayIconMenu->addSeparator();\n+        trayIconMenu->addAction(signMessageAction);\n+        trayIconMenu->addAction(verifyMessageAction);\n+        trayIconMenu->addSeparator();\n+    }\n     trayIconMenu->addAction(optionsAction);\n-    trayIconMenu->addAction(openRPCConsoleAction);\n+    if(enableWallet)\n+        trayIconMenu->addAction(openRPCConsoleAction);\n #ifndef Q_OS_MAC // This is built-in on Mac\n     trayIconMenu->addSeparator();\n     trayIconMenu->addAction(quitAction);\n@@ -557,6 +567,17 @@ void BitcoinGUI::showHelpMessageClicked()\n     help->show();\n }\n \n+void BitcoinGUI::debugWindowClicked()\n+{\n+    if (debugAction->isVisible())\n+    {\n+        showNormalIfMinimized();\n+        gotoDebugPage();\n+    }\n+    else\n+        rpcConsole->show();\n+}\n+\n #ifdef ENABLE_WALLET\n void BitcoinGUI::openClicked()\n {\n@@ -570,35 +591,41 @@ void BitcoinGUI::openClicked()\n void BitcoinGUI::gotoOverviewPage()\n {\n     overviewAction->setChecked(true);\n-    if (walletFrame) walletFrame->gotoOverviewPage();\n+    walletFrame->gotoOverviewPage();\n }\n \n void BitcoinGUI::gotoHistoryPage()\n {\n     historyAction->setChecked(true);\n-    if (walletFrame) walletFrame->gotoHistoryPage();\n+    walletFrame->gotoHistoryPage();\n }\n \n void BitcoinGUI::gotoReceiveCoinsPage()\n {\n     receiveCoinsAction->setChecked(true);\n-    if (walletFrame) walletFrame->gotoReceiveCoinsPage();\n+    walletFrame->gotoReceiveCoinsPage();\n }\n \n void BitcoinGUI::gotoSendCoinsPage(QString addr)\n {\n     sendCoinsAction->setChecked(true);\n-    if (walletFrame) walletFrame->gotoSendCoinsPage(addr);\n+    walletFrame->gotoSendCoinsPage(addr);\n+}\n+\n+void BitcoinGUI::gotoDebugPage()\n+{\n+    debugAction->setChecked(true);\n+    walletFrame->gotoDebugPage();\n }\n \n void BitcoinGUI::gotoSignMessageTab(QString addr)\n {\n-    if (walletFrame) walletFrame->gotoSignMessageTab(addr);\n+    walletFrame->gotoSignMessageTab(addr);\n }\n \n void BitcoinGUI::gotoVerifyMessageTab(QString addr)\n {\n-    if (walletFrame) walletFrame->gotoVerifyMessageTab(addr);\n+    walletFrame->gotoVerifyMessageTab(addr);\n }\n #endif\n \n@@ -661,10 +688,7 @@ void BitcoinGUI::setNumBlocks(int count, int nTotalBlocks)\n         tooltip = tr(\"Up to date\") + QString(\".<br>\") + tooltip;\n         labelBlocksIcon->setPixmap(QIcon(\":/icons/synced\").pixmap(STATUSBAR_ICONSIZE, STATUSBAR_ICONSIZE));\n \n-#ifdef ENABLE_WALLET\n-        if(walletFrame)\n-            walletFrame->showOutOfSyncWarning(false);\n-#endif\n+        walletFrame->showOutOfSyncWarning(false);\n \n         progressBarLabel->setVisible(false);\n         progressBar->setVisible(false);\n@@ -712,10 +736,7 @@ void BitcoinGUI::setNumBlocks(int count, int nTotalBlocks)\n         }\n         prevBlocks = count;\n \n-#ifdef ENABLE_WALLET\n-        if(walletFrame)\n-            walletFrame->showOutOfSyncWarning(true);\n-#endif\n+        walletFrame->showOutOfSyncWarning(true);\n \n         tooltip += QString(\"<br>\");\n         tooltip += tr(\"Last received block was generated %1 ago.\").arg(timeBehindText);\n@@ -879,7 +900,7 @@ bool BitcoinGUI::eventFilter(QObject *object, QEvent *event)\n bool BitcoinGUI::handlePaymentRequest(const SendCoinsRecipient& recipient)\n {\n     // URI has to be valid\n-    if (walletFrame && walletFrame->handlePaymentRequest(recipient))\n+    if (enableWallet && walletFrame->handlePaymentRequest(recipient))\n     {\n         showNormalIfMinimized();\n         gotoSendCoinsPage();"
      },
      {
        "sha": "420861e45e9af9ce0997c42e7ef236795e20d80e",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7d0d70207cec729a06854422d709faac8e4b385/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7d0d70207cec729a06854422d709faac8e4b385/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=a7d0d70207cec729a06854422d709faac8e4b385",
        "patch": "@@ -47,6 +47,8 @@ class BitcoinGUI : public QMainWindow\n     */\n     void setClientModel(ClientModel *clientModel);\n \n+    RPCConsole *rpcConsole;\n+\n #ifdef ENABLE_WALLET\n     /** Set the wallet model.\n         The wallet model represents a bitcoin wallet, and offers access to the list of transactions, address book and sending\n@@ -68,6 +70,8 @@ class BitcoinGUI : public QMainWindow\n     ClientModel *clientModel;\n     WalletFrame *walletFrame;\n \n+    bool enableWallet;\n+\n     QLabel *labelEncryptionIcon;\n     QLabel *labelConnectionsIcon;\n     QLabel *labelBlocksIcon;\n@@ -77,6 +81,7 @@ class BitcoinGUI : public QMainWindow\n     QMenuBar *appMenuBar;\n     QAction *overviewAction;\n     QAction *historyAction;\n+    QAction *debugAction;\n     QAction *quitAction;\n     QAction *sendCoinsAction;\n     QAction *usedSendingAddressesAction;\n@@ -97,7 +102,6 @@ class BitcoinGUI : public QMainWindow\n \n     QSystemTrayIcon *trayIcon;\n     Notificator *notificator;\n-    RPCConsole *rpcConsole;\n \n     /** Keep track of previous number of blocks, to detect progress */\n     int prevBlocks;\n@@ -164,6 +168,8 @@ private slots:\n     void gotoReceiveCoinsPage();\n     /** Switch to send coins page */\n     void gotoSendCoinsPage(QString addr = \"\");\n+    /** Switch to debug page */\n+    void gotoDebugPage();\n \n     /** Show Sign/Verify Message dialog and switch to sign message tab */\n     void gotoSignMessageTab(QString addr = \"\");\n@@ -179,6 +185,8 @@ private slots:\n     void aboutClicked();\n     /** Show help message dialog */\n     void showHelpMessageClicked();\n+    /** Open debugging and diagnostic console */\n+    void debugWindowClicked();\n #ifndef Q_OS_MAC\n     /** Handle tray icon clicked */\n     void trayIconActivated(QSystemTrayIcon::ActivationReason reason);"
      },
      {
        "sha": "a7e511269d7318dc08f9fd93843bc67cc87812b9",
        "filename": "src/qt/forms/optionsdialog.ui",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7d0d70207cec729a06854422d709faac8e4b385/src/qt/forms/optionsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7d0d70207cec729a06854422d709faac8e4b385/src/qt/forms/optionsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/optionsdialog.ui?ref=a7d0d70207cec729a06854422d709faac8e4b385",
        "patch": "@@ -477,6 +477,16 @@\n          </property>\n         </widget>\n        </item>\n+       <item>\n+        <widget class=\"QCheckBox\" name=\"debugTab\">\n+         <property name=\"toolTip\">\n+          <string>Adds a new tab to the main tab bar showing the debug window.</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>&amp;Show debug window as main tab</string>\n+         </property>\n+        </widget>\n+       </item>\n        <item>\n         <spacer name=\"verticalSpacer_Display\">\n          <property name=\"orientation\">"
      },
      {
        "sha": "453d0d308768cc4e4ce8daac0a5984086f4624b5",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7d0d70207cec729a06854422d709faac8e4b385/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7d0d70207cec729a06854422d709faac8e4b385/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=a7d0d70207cec729a06854422d709faac8e4b385",
        "patch": "@@ -143,10 +143,13 @@ void OptionsDialog::setModel(OptionsModel *model)\n     /* Main */\n     connect(ui->databaseCache, SIGNAL(valueChanged(int)), this, SLOT(showRestartWarning()));\n     connect(ui->threadsScriptVerif, SIGNAL(valueChanged(int)), this, SLOT(showRestartWarning()));\n+    /* Wallet */\n+    connect(ui->spendZeroConfChange, SIGNAL(stateChanged(int)), this, SLOT(showRestartWarning()));\n     /* Network */\n     connect(ui->connectSocks, SIGNAL(clicked(bool)), this, SLOT(showRestartWarning()));\n     /* Display */\n     connect(ui->lang, SIGNAL(valueChanged()), this, SLOT(showRestartWarning()));\n+    connect(ui->debugTab, SIGNAL(stateChanged(int)), this, SLOT(showRestartWarning()));\n }\n \n void OptionsDialog::setMapper()\n@@ -179,6 +182,7 @@ void OptionsDialog::setMapper()\n     mapper->addMapping(ui->lang, OptionsModel::Language);\n     mapper->addMapping(ui->unit, OptionsModel::DisplayUnit);\n     mapper->addMapping(ui->displayAddresses, OptionsModel::DisplayAddresses);\n+    mapper->addMapping(ui->debugTab, OptionsModel::DebugTab);\n }\n \n void OptionsDialog::enableOkButton()"
      },
      {
        "sha": "7b662574eb4f6b897cc3480d0da201fd7c7075db",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7d0d70207cec729a06854422d709faac8e4b385/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7d0d70207cec729a06854422d709faac8e4b385/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=a7d0d70207cec729a06854422d709faac8e4b385",
        "patch": "@@ -63,6 +63,10 @@ void OptionsModel::Init()\n         settings.setValue(\"bDisplayAddresses\", false);\n     bDisplayAddresses = settings.value(\"bDisplayAddresses\", false).toBool();\n \n+    if (!settings.contains(\"fDebugTab\"))\n+        settings.setValue(\"fDebugTab\", false);\n+    fDebugTab = settings.value(\"fDebugTab\", false).toBool();\n+\n     if (!settings.contains(\"fCoinControlFeatures\"))\n         settings.setValue(\"fCoinControlFeatures\", false);\n     fCoinControlFeatures = settings.value(\"fCoinControlFeatures\", false).toBool();\n@@ -202,6 +206,8 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n             return nDisplayUnit;\n         case DisplayAddresses:\n             return bDisplayAddresses;\n+        case DebugTab:\n+            return fDebugTab;\n         case Language:\n             return settings.value(\"language\");\n         case CoinControlFeatures:\n@@ -303,6 +309,14 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             bDisplayAddresses = value.toBool();\n             settings.setValue(\"bDisplayAddresses\", bDisplayAddresses);\n             break;\n+        case DebugTab:\n+            if (fDebugTab != value.toBool())\n+            {\n+                fDebugTab = value.toBool();\n+                settings.setValue(\"fDebugTab\", fDebugTab);\n+                setRestartRequired(true);\n+            }\n+            break;\n         case Language:\n             if (settings.value(\"language\") != value) {\n                 settings.setValue(\"language\", value);"
      },
      {
        "sha": "8094672add962cc465aa538bc7779e3822d9c000",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7d0d70207cec729a06854422d709faac8e4b385/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7d0d70207cec729a06854422d709faac8e4b385/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=a7d0d70207cec729a06854422d709faac8e4b385",
        "patch": "@@ -41,6 +41,7 @@ class OptionsModel : public QAbstractListModel\n         ThreadsScriptVerif,     // int\n         DatabaseCache,          // int\n         SpendZeroConfChange,    // bool\n+        DebugTab,               // bool\n         OptionIDRowCount,\n     };\n \n@@ -56,6 +57,7 @@ class OptionsModel : public QAbstractListModel\n     bool getMinimizeOnClose() { return fMinimizeOnClose; }\n     int getDisplayUnit() { return nDisplayUnit; }\n     bool getDisplayAddresses() { return bDisplayAddresses; }\n+    bool getDebugTab() { return fDebugTab; }\n     bool getProxySettings(QNetworkProxy& proxy) const;\n     bool getCoinControlFeatures() { return fCoinControlFeatures; }\n     const QString& getOverriddenByCommandLine() { return strOverriddenByCommandLine; }\n@@ -71,6 +73,7 @@ class OptionsModel : public QAbstractListModel\n     QString language;\n     int nDisplayUnit;\n     bool bDisplayAddresses;\n+    bool fDebugTab;\n     bool fCoinControlFeatures;\n     /* settings that were overriden by command-line */\n     QString strOverriddenByCommandLine;"
      },
      {
        "sha": "32f6a4970e02f133f386f04c314a730fc2169433",
        "filename": "src/qt/res/icons/debugtab.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7d0d70207cec729a06854422d709faac8e4b385/src/qt/res/icons/debugtab.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7d0d70207cec729a06854422d709faac8e4b385/src/qt/res/icons/debugtab.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/debugtab.png?ref=a7d0d70207cec729a06854422d709faac8e4b385"
      },
      {
        "sha": "6c58cc84d5e3847ef3e9ffcd3bfa3ae92383b39b",
        "filename": "src/qt/walletframe.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 2,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7d0d70207cec729a06854422d709faac8e4b385/src/qt/walletframe.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7d0d70207cec729a06854422d709faac8e4b385/src/qt/walletframe.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.cpp?ref=a7d0d70207cec729a06854422d709faac8e4b385",
        "patch": "@@ -5,6 +5,7 @@\n #include \"walletframe.h\"\n \n #include \"bitcoingui.h\"\n+#include \"rpcconsole.h\"\n #include \"walletview.h\"\n \n #include <cstdio>\n@@ -19,9 +20,13 @@ WalletFrame::WalletFrame(BitcoinGUI *_gui) :\n     // Leave HBox hook for adding a list view later\n     QHBoxLayout *walletFrameLayout = new QHBoxLayout(this);\n     setContentsMargins(0,0,0,0);\n-    walletStack = new QStackedWidget(this);\n+    frameStack = new QStackedWidget(this);\n+    walletStack = new QStackedWidget(frameStack);\n+    widgetStack = new QStackedWidget(frameStack);\n+    frameStack->addWidget(walletStack);\n+    frameStack->addWidget(widgetStack);\n     walletFrameLayout->setContentsMargins(0,0,0,0);\n-    walletFrameLayout->addWidget(walletStack);\n+    walletFrameLayout->addWidget(frameStack);\n \n     QLabel *noWallet = new QLabel(tr(\"No wallet has been loaded.\"));\n     noWallet->setAlignment(Qt::AlignCenter);\n@@ -107,32 +112,42 @@ void WalletFrame::showOutOfSyncWarning(bool fShow)\n \n void WalletFrame::gotoOverviewPage()\n {\n+    frameStack->setCurrentWidget(walletStack);\n     QMap<QString, WalletView*>::const_iterator i;\n     for (i = mapWalletViews.constBegin(); i != mapWalletViews.constEnd(); ++i)\n         i.value()->gotoOverviewPage();\n }\n \n void WalletFrame::gotoHistoryPage()\n {\n+    frameStack->setCurrentWidget(walletStack);\n     QMap<QString, WalletView*>::const_iterator i;\n     for (i = mapWalletViews.constBegin(); i != mapWalletViews.constEnd(); ++i)\n         i.value()->gotoHistoryPage();\n }\n \n void WalletFrame::gotoReceiveCoinsPage()\n {\n+    frameStack->setCurrentWidget(walletStack);\n     QMap<QString, WalletView*>::const_iterator i;\n     for (i = mapWalletViews.constBegin(); i != mapWalletViews.constEnd(); ++i)\n         i.value()->gotoReceiveCoinsPage();\n }\n \n void WalletFrame::gotoSendCoinsPage(QString addr)\n {\n+    frameStack->setCurrentWidget(walletStack);\n     QMap<QString, WalletView*>::const_iterator i;\n     for (i = mapWalletViews.constBegin(); i != mapWalletViews.constEnd(); ++i)\n         i.value()->gotoSendCoinsPage(addr);\n }\n \n+void WalletFrame::gotoDebugPage()\n+{\n+    frameStack->setCurrentWidget(widgetStack);\n+    widgetStack->setCurrentWidget(gui->rpcConsole);\n+}\n+\n void WalletFrame::gotoSignMessageTab(QString addr)\n {\n     WalletView *walletView = currentWalletView();\n@@ -194,3 +209,8 @@ WalletView *WalletFrame::currentWalletView()\n     return qobject_cast<WalletView*>(walletStack->currentWidget());\n }\n \n+void WalletFrame::addWidget(QWidget *widget)\n+{\n+    widgetStack->addWidget(widget);\n+}\n+"
      },
      {
        "sha": "9e473337214a579879b1d77078d6a519519a3f43",
        "filename": "src/qt/walletframe.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7d0d70207cec729a06854422d709faac8e4b385/src/qt/walletframe.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7d0d70207cec729a06854422d709faac8e4b385/src/qt/walletframe.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.h?ref=a7d0d70207cec729a06854422d709faac8e4b385",
        "patch": "@@ -16,6 +16,7 @@ class WalletView;\n \n QT_BEGIN_NAMESPACE\n class QStackedWidget;\n+class QWidget;\n QT_END_NAMESPACE\n \n class WalletFrame : public QFrame\n@@ -37,8 +38,12 @@ class WalletFrame : public QFrame\n \n     void showOutOfSyncWarning(bool fShow);\n \n+    void addWidget(QWidget *widget);\n+\n private:\n+    QStackedWidget *frameStack;\n     QStackedWidget *walletStack;\n+    QStackedWidget *widgetStack;\n     BitcoinGUI *gui;\n     ClientModel *clientModel;\n     QMap<QString, WalletView*> mapWalletViews;\n@@ -56,6 +61,8 @@ public slots:\n     void gotoReceiveCoinsPage();\n     /** Switch to send coins page */\n     void gotoSendCoinsPage(QString addr = \"\");\n+    /** Switch to debug page */\n+    void gotoDebugPage();\n \n     /** Show Sign/Verify Message dialog and switch to sign message tab */\n     void gotoSignMessageTab(QString addr = \"\");"
      }
    ]
  }
]