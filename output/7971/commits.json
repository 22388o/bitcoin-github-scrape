[
  {
    "sha": "fabbf6bd62c1d8a290841b63fb1e5acec42ba3b0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWJiZjZiZDYyYzFkOGEyOTA4NDFiNjNmYjFlNWFjZWM0MmJhM2Iw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-04-27T20:29:52Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-05-06T10:43:34Z"
      },
      "message": "[qa] Refactor test_framework and pull tester\n\n* log to stdout\n* increase range for p2p and rpc ports\n* UPPERCASE_CONSTANTS\n* Stop nodes on CTRL+C",
      "tree": {
        "sha": "3f4a6a90e0d7db5d13ce126b3d854537c29409e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3f4a6a90e0d7db5d13ce126b3d854537c29409e2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fabbf6bd62c1d8a290841b63fb1e5acec42ba3b0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fabbf6bd62c1d8a290841b63fb1e5acec42ba3b0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fabbf6bd62c1d8a290841b63fb1e5acec42ba3b0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fabbf6bd62c1d8a290841b63fb1e5acec42ba3b0/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "77b637f20e8cb91cf007bf416b603ca362385cdb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77b637f20e8cb91cf007bf416b603ca362385cdb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/77b637f20e8cb91cf007bf416b603ca362385cdb"
      }
    ],
    "stats": {
      "total": 106,
      "additions": 56,
      "deletions": 50
    },
    "files": [
      {
        "sha": "e8434b4a6059a7c9b7acc9dc46852472ce64cf72",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 39,
        "deletions": 44,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fabbf6bd62c1d8a290841b63fb1e5acec42ba3b0/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fabbf6bd62c1d8a290841b63fb1e5acec42ba3b0/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=fabbf6bd62c1d8a290841b63fb1e5acec42ba3b0",
        "patch": "@@ -31,6 +31,14 @@\n \n from tests_config import *\n \n+BOLD = (\"\",\"\")\n+if os.name == 'posix':\n+    # primitive formatting on supported\n+    # terminal via ANSI escape sequences:\n+    BOLD = ('\\033[0m', '\\033[1m')\n+\n+RPC_TESTS_DIR = BUILDDIR + '/qa/rpc-tests/'\n+\n #If imported values are not defined then set to zero (or disabled)\n if 'ENABLE_WALLET' not in vars():\n     ENABLE_WALLET=0\n@@ -43,29 +51,29 @@\n \n ENABLE_COVERAGE=0\n \n-#Create a set to store arguments and create the passOn string\n+#Create a set to store arguments and create the passon string\n opts = set()\n-passOn = \"\"\n-p = re.compile(\"^--\")\n+passon_args = \"\"\n+PASSON_REGEX = re.compile(\"^--\")\n \n-bold = (\"\",\"\")\n-if (os.name == 'posix'):\n-    bold = ('\\033[0m', '\\033[1m')\n+print_help = False\n \n for arg in sys.argv[1:]:\n+    if arg == \"--help\" or arg == \"-h\" or arg == \"-?\":\n+        print_help = True\n+        break\n     if arg == '--coverage':\n         ENABLE_COVERAGE = 1\n-    elif (p.match(arg) or arg == \"-h\"):\n-        passOn += \" \" + arg\n+    elif PASSON_REGEX.match(arg):\n+        passon_args += \" \" + arg\n     else:\n         opts.add(arg)\n \n #Set env vars\n-buildDir = BUILDDIR\n if \"BITCOIND\" not in os.environ:\n-    os.environ[\"BITCOIND\"] = buildDir + '/src/bitcoind' + EXEEXT\n+    os.environ[\"BITCOIND\"] = BUILDDIR + '/src/bitcoind' + EXEEXT\n if \"BITCOINCLI\" not in os.environ:\n-    os.environ[\"BITCOINCLI\"] = buildDir + '/src/bitcoin-cli' + EXEEXT\n+    os.environ[\"BITCOINCLI\"] = BUILDDIR + '/src/bitcoin-cli' + EXEEXT\n \n if EXEEXT == \".exe\" and \"-win\" not in opts:\n     # https://github.com/bitcoin/bitcoin/commit/d52802551752140cf41f0d9a225a43e84404d3e9\n@@ -153,48 +161,35 @@\n ]\n \n def runtests():\n+    test_list = []\n+    if '-extended' in opts:\n+        test_list = testScripts + testScriptsExt\n+    elif len(opts) == 0 or (len(opts) == 1 and \"-win\" in opts):\n+        test_list = testScripts\n+    else:\n+        for t in testScripts + testScriptsExt:\n+            if t in opts or re.sub(\".py$\", \"\", t) in opts:\n+                test_list.append(t)\n+\n+    if print_help:\n+        # Help should be the same for all scripts, so just\n+        # call the first and exit\n+        subprocess.check_call(RPC_TESTS_DIR + test_list[0] + ' -h', shell=True)\n+        sys.exit(0)\n+\n     coverage = None\n \n     if ENABLE_COVERAGE:\n         coverage = RPCCoverage()\n         print(\"Initializing coverage directory at %s\\n\" % coverage.dir)\n-\n-    rpcTestDir = buildDir + '/qa/rpc-tests/'\n-    run_extended = '-extended' in opts\n-    cov_flag = coverage.flag if coverage else ''\n-    flags = \" --srcdir %s/src %s %s\" % (buildDir, cov_flag, passOn)\n+    flags = \" --srcdir %s/src %s %s\" % (BUILDDIR, coverage.flag if coverage else '', passon_args)\n \n     #Run Tests\n-    for i in range(len(testScripts)):\n-        if (len(opts) == 0\n-                or (len(opts) == 1 and \"-win\" in opts )\n-                or run_extended\n-                or testScripts[i] in opts\n-                or re.sub(\".py$\", \"\", testScripts[i]) in opts ):\n-\n-            print(\"Running testscript %s%s%s ...\" % (bold[1], testScripts[i], bold[0]))\n-            time0 = time.time()\n-            subprocess.check_call(\n-                rpcTestDir + testScripts[i] + flags, shell=True)\n-            print(\"Duration: %s s\\n\" % (int(time.time() - time0)))\n-\n-            # exit if help is called so we print just one set of\n-            # instructions\n-            p = re.compile(\" -h| --help\")\n-            if p.match(passOn):\n-                sys.exit(0)\n-\n-    # Run Extended Tests\n-    for i in range(len(testScriptsExt)):\n-        if (run_extended or testScriptsExt[i] in opts\n-                or re.sub(\".py$\", \"\", testScriptsExt[i]) in opts):\n-\n-            print(\n-                \"Running 2nd level testscript \"\n-                + \"%s%s%s ...\" % (bold[1], testScriptsExt[i], bold[0]))\n+    for t in test_list:\n+            print(\"Running testscript %s%s%s ...\" % (BOLD[1], t, BOLD[0]))\n             time0 = time.time()\n             subprocess.check_call(\n-                rpcTestDir + testScriptsExt[i] + flags, shell=True)\n+                RPC_TESTS_DIR + t + flags, shell=True)\n             print(\"Duration: %s s\\n\" % (int(time.time() - time0)))\n \n     if coverage:"
      },
      {
        "sha": "103d9a068aa3aeffc072f33809ca77d360d4e1f8",
        "filename": "qa/rpc-tests/test_framework/test_framework.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fabbf6bd62c1d8a290841b63fb1e5acec42ba3b0/qa/rpc-tests/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fabbf6bd62c1d8a290841b63fb1e5acec42ba3b0/qa/rpc-tests/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/test_framework.py?ref=fabbf6bd62c1d8a290841b63fb1e5acec42ba3b0",
        "patch": "@@ -115,7 +115,7 @@ def main(self):\n \n         if self.options.trace_rpc:\n             import logging\n-            logging.basicConfig(level=logging.DEBUG)\n+            logging.basicConfig(level=logging.DEBUG, stream=sys.stdout)\n \n         if self.options.coveragedir:\n             enable_coverage(self.options.coveragedir)\n@@ -148,6 +148,8 @@ def main(self):\n         except Exception as e:\n             print(\"Unexpected exception caught during testing: \" + repr(e))\n             traceback.print_tb(sys.exc_info()[2])\n+        except KeyboardInterrupt as e:\n+            print(\"Exiting after \" + repr(e))\n \n         if not self.options.noshutdown:\n             print(\"Stopping nodes\")"
      },
      {
        "sha": "4c129b78b543406548b98afc00682daf8d46eb92",
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "modified",
        "additions": 13,
        "deletions": 4,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fabbf6bd62c1d8a290841b63fb1e5acec42ba3b0/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fabbf6bd62c1d8a290841b63fb1e5acec42ba3b0/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=fabbf6bd62c1d8a290841b63fb1e5acec42ba3b0",
        "patch": "@@ -28,6 +28,13 @@\n \n COVERAGE_DIR = None\n \n+# The maximum number of nodes a single test can spawn\n+MAX_NODES = 8\n+# Don't assign rpc or p2p ports lower than this\n+PORT_MIN = 11000\n+# The number of ports to \"reserve\" for p2p and rpc, each\n+PORT_RANGE = 5000\n+\n #Set Mocktime default to OFF.\n #MOCKTIME is only needed for scripts that use the\n #cached version of the blockchain.  If the cached\n@@ -82,9 +89,11 @@ def get_rpc_proxy(url, node_number, timeout=None):\n \n \n def p2p_port(n):\n-    return 11000 + n + os.getpid()%999\n+    assert(n <= MAX_NODES)\n+    return PORT_MIN + n + (MAX_NODES * os.getpid()) % (PORT_RANGE - 1 - MAX_NODES)\n+\n def rpc_port(n):\n-    return 12000 + n + os.getpid()%999\n+    return PORT_MIN + PORT_RANGE + n + (MAX_NODES * os.getpid()) % (PORT_RANGE -1 - MAX_NODES)\n \n def check_json_precision():\n     \"\"\"Make sure json library being used does not lose precision converting BTC values\"\"\"\n@@ -292,8 +301,8 @@ def start_nodes(num_nodes, dirname, extra_args=None, rpchost=None, binary=None):\n     \"\"\"\n     Start multiple bitcoinds, return RPC connections to them\n     \"\"\"\n-    if extra_args is None: extra_args = [ None for i in range(num_nodes) ]\n-    if binary is None: binary = [ None for i in range(num_nodes) ]\n+    if extra_args is None: extra_args = [ None for _ in range(num_nodes) ]\n+    if binary is None: binary = [ None for _ in range(num_nodes) ]\n     rpcs = []\n     try:\n         for i in range(num_nodes):"
      },
      {
        "sha": "c3d53669c9fa4563f8093f1822dd2576d713d50a",
        "filename": "qa/rpc-tests/walletbackup.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fabbf6bd62c1d8a290841b63fb1e5acec42ba3b0/qa/rpc-tests/walletbackup.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fabbf6bd62c1d8a290841b63fb1e5acec42ba3b0/qa/rpc-tests/walletbackup.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/walletbackup.py?ref=fabbf6bd62c1d8a290841b63fb1e5acec42ba3b0",
        "patch": "@@ -37,7 +37,7 @@\n from test_framework.util import *\n from random import randint\n import logging\n-logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.INFO)\n+logging.basicConfig(format='%(levelname)s: %(message)s', level=logging.INFO, stream=sys.stdout)\n \n class WalletBackupTest(BitcoinTestFramework):\n "
      }
    ]
  },
  {
    "sha": "2222dae6e31c433f83aa9fd0e8f028cbee59199b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMjIyZGFlNmUzMWM0MzNmODNhYTlmZDBlOGYwMjhjYmVlNTkxOTli",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-04-29T22:03:06Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-05-06T10:43:46Z"
      },
      "message": "[qa] Update README.md",
      "tree": {
        "sha": "c403bec67c98155b3c391687745b72615e7f1fe6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c403bec67c98155b3c391687745b72615e7f1fe6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2222dae6e31c433f83aa9fd0e8f028cbee59199b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2222dae6e31c433f83aa9fd0e8f028cbee59199b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2222dae6e31c433f83aa9fd0e8f028cbee59199b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2222dae6e31c433f83aa9fd0e8f028cbee59199b/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fabbf6bd62c1d8a290841b63fb1e5acec42ba3b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fabbf6bd62c1d8a290841b63fb1e5acec42ba3b0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fabbf6bd62c1d8a290841b63fb1e5acec42ba3b0"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 15,
      "deletions": 5
    },
    "files": [
      {
        "sha": "c7e574ff70ef42b589c61e5503d8c349aa1f5982",
        "filename": "qa/README.md",
        "status": "modified",
        "additions": 15,
        "deletions": 5,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2222dae6e31c433f83aa9fd0e8f028cbee59199b/qa/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2222dae6e31c433f83aa9fd0e8f028cbee59199b/qa/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/README.md?ref=2222dae6e31c433f83aa9fd0e8f028cbee59199b",
        "patch": "@@ -19,15 +19,25 @@ sudo apt-get install python3-zmq\n Running tests\n =============\n \n-You can run any single test by calling `qa/pull-tester/rpc-tests.py <testname>`.\n+You can run any single test by calling\n \n-Or you can run any combination of tests by calling `qa/pull-tester/rpc-tests.py <testname1> <testname2> <testname3> ...`\n+    qa/pull-tester/rpc-tests.py <testname>\n \n-Run the regression test suite with `qa/pull-tester/rpc-tests.py`\n+Or you can run any combination of tests by calling\n \n-Run all possible tests with `qa/pull-tester/rpc-tests.py -extended`\n+    qa/pull-tester/rpc-tests.py <testname1> <testname2> <testname3> ...\n \n-Possible options:\n+Run the regression test suite with\n+\n+    qa/pull-tester/rpc-tests.py\n+\n+Run all possible tests with\n+\n+    qa/pull-tester/rpc-tests.py -extended\n+\n+If you want to create a basic coverage report for the rpc test suite, append `--coverage`.\n+\n+Possible options, which apply to each individual test run:\n \n ```\n   -h, --help            show this help message and exit"
      }
    ]
  },
  {
    "sha": "fafb33cdefd2d8ce065263978075d26a1672b630",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWZiMzNjZGVmZDJkOGNlMDY1MjYzOTc4MDc1ZDI2YTE2NzJiNjMw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-04-30T12:55:31Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-05-06T10:44:03Z"
      },
      "message": "[qa] Stop other nodes, even when one fails to stop",
      "tree": {
        "sha": "a3f144fbfb8dec3455fe4f7a071b5f50855eb073",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a3f144fbfb8dec3455fe4f7a071b5f50855eb073"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fafb33cdefd2d8ce065263978075d26a1672b630",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fafb33cdefd2d8ce065263978075d26a1672b630",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fafb33cdefd2d8ce065263978075d26a1672b630",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fafb33cdefd2d8ce065263978075d26a1672b630/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2222dae6e31c433f83aa9fd0e8f028cbee59199b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2222dae6e31c433f83aa9fd0e8f028cbee59199b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2222dae6e31c433f83aa9fd0e8f028cbee59199b"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 9,
      "deletions": 2
    },
    "files": [
      {
        "sha": "6dc685ea1b46f37f7ccd71b29779d0aba3133789",
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fafb33cdefd2d8ce065263978075d26a1672b630/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fafb33cdefd2d8ce065263978075d26a1672b630/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=fafb33cdefd2d8ce065263978075d26a1672b630",
        "patch": "@@ -16,6 +16,7 @@\n from base64 import b64encode\n from decimal import Decimal, ROUND_DOWN\n import json\n+import http.client\n import random\n import shutil\n import subprocess\n@@ -316,13 +317,19 @@ def log_filename(dirname, n_node, logname):\n     return os.path.join(dirname, \"node\"+str(n_node), \"regtest\", logname)\n \n def stop_node(node, i):\n-    node.stop()\n+    try:\n+        node.stop()\n+    except http.client.CannotSendRequest as e:\n+        print(\"WARN: Unable to stop node: \" + repr(e))\n     bitcoind_processes[i].wait()\n     del bitcoind_processes[i]\n \n def stop_nodes(nodes):\n     for node in nodes:\n-        node.stop()\n+        try:\n+            node.stop()\n+        except http.client.CannotSendRequest as e:\n+            print(\"WARN: Unable to stop node: \" + repr(e))\n     del nodes[:] # Emptying array closes connections as a side effect\n \n def set_node_times(nodes, t):"
      }
    ]
  },
  {
    "sha": "fad336648c848c7a4b3e32bae68ea9a22f97e668",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWQzMzY2NDhjODQ4YzdhNGIzZTMyYmFlNjhlYTlhMjJmOTdlNjY4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-05-08T12:09:49Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-05-08T12:09:14Z"
      },
      "message": "[qa] pull-tester: Adjust comment",
      "tree": {
        "sha": "0910539b3d12d8b63a5b80caeda7a2b2710c661c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0910539b3d12d8b63a5b80caeda7a2b2710c661c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fad336648c848c7a4b3e32bae68ea9a22f97e668",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad336648c848c7a4b3e32bae68ea9a22f97e668",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fad336648c848c7a4b3e32bae68ea9a22f97e668",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad336648c848c7a4b3e32bae68ea9a22f97e668/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fafb33cdefd2d8ce065263978075d26a1672b630",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fafb33cdefd2d8ce065263978075d26a1672b630",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fafb33cdefd2d8ce065263978075d26a1672b630"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c6f91f8cb334209a9e8c351031e3c483445664a8",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad336648c848c7a4b3e32bae68ea9a22f97e668/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad336648c848c7a4b3e32bae68ea9a22f97e668/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=fad336648c848c7a4b3e32bae68ea9a22f97e668",
        "patch": "@@ -172,8 +172,7 @@ def runtests():\n                 test_list.append(t)\n \n     if print_help:\n-        # Help should be the same for all scripts, so just\n-        # call the first and exit\n+        # Only print help of the first script and exit\n         subprocess.check_call(RPC_TESTS_DIR + test_list[0] + ' -h', shell=True)\n         sys.exit(0)\n "
      }
    ]
  }
]