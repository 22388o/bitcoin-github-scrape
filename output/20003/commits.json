[
  {
    "sha": "9b4fa0af40cd88ed25dd77962235fbf268bdcaa7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YjRmYTBhZjQwY2Q4OGVkMjVkZDc3OTYyMjM1ZmJmMjY4YmRjYWE3",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-09-23T12:30:02Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-09-23T15:41:49Z"
      },
      "message": "net: Print error message if -proxy is specified without arguments (instead of continuing without proxy server)",
      "tree": {
        "sha": "90da0d2256ca9b3a2af3dacebed89fc28eb20619",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/90da0d2256ca9b3a2af3dacebed89fc28eb20619"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b4fa0af40cd88ed25dd77962235fbf268bdcaa7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b4fa0af40cd88ed25dd77962235fbf268bdcaa7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9b4fa0af40cd88ed25dd77962235fbf268bdcaa7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b4fa0af40cd88ed25dd77962235fbf268bdcaa7/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9e217f5a6f08c50aff9975aa4c079e2aab2fe371",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e217f5a6f08c50aff9975aa4c079e2aab2fe371",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9e217f5a6f08c50aff9975aa4c079e2aab2fe371"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 11,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ee9ec633b57ec240ad53a3ec5b9baa94b6be4b83",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b4fa0af40cd88ed25dd77962235fbf268bdcaa7/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b4fa0af40cd88ed25dd77962235fbf268bdcaa7/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=9b4fa0af40cd88ed25dd77962235fbf268bdcaa7",
        "patch": "@@ -1176,6 +1176,10 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n \n     nMaxTipAge = args.GetArg(\"-maxtipage\", DEFAULT_MAX_TIP_AGE);\n \n+    if (args.IsArgSet(\"-proxy\") && args.GetArg(\"-proxy\", \"\").empty()) {\n+        return InitError(_(\"No proxy server specified. Use -proxy=<ip> or -proxy=<ip:port>.\"));\n+    }\n+\n     return true;\n }\n "
      },
      {
        "sha": "b4355a65875b2c17a2ee024fcd50e4b09bc3ef08",
        "filename": "test/functional/feature_config_args.py",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b4fa0af40cd88ed25dd77962235fbf268bdcaa7/test/functional/feature_config_args.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b4fa0af40cd88ed25dd77962235fbf268bdcaa7/test/functional/feature_config_args.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_config_args.py?ref=9b4fa0af40cd88ed25dd77962235fbf268bdcaa7",
        "patch": "@@ -78,6 +78,12 @@ def test_config_file_parser(self):\n         with open(inc_conf_file2_path, 'w', encoding='utf-8') as conf:\n             conf.write('')  # clear\n \n+    def test_invalid_command_line_options(self):\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg='Error: No proxy server specified. Use -proxy=<ip> or -proxy=<ip:port>.',\n+            extra_args=['-proxy'],\n+        )\n+\n     def test_log_buffer(self):\n         with self.nodes[0].assert_debug_log(expected_msgs=['Warning: parsed potentially confusing double-negative -connect=0\\n']):\n             self.start_node(0, extra_args=['-noconnect=0'])\n@@ -146,6 +152,7 @@ def run_test(self):\n         self.test_networkactive()\n \n         self.test_config_file_parser()\n+        self.test_invalid_command_line_options()\n \n         # Remove the -datadir argument so it doesn't override the config file\n         self.nodes[0].args = [arg for arg in self.nodes[0].args if not arg.startswith(\"-datadir\")]"
      }
    ]
  }
]