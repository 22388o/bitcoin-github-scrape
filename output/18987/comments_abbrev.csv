DrahtBot,2020-05-16 17:54:07,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18354 (Protect wallet by using shared pointers by bvbfan)\n* #15367 (feature: Added ability for users to add a startup co",https://github.com/bitcoin/bitcoin/pull/18987#issuecomment-629683561,629683561,
DrahtBot,2020-05-23 12:05:57,<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).,https://github.com/bitcoin/bitcoin/pull/18987#issuecomment-633038617,633038617,
0xB10C,2021-08-03 13:33:00,"I haven't looked at this PR closer, but I think anomaly detection could be done via [USDT](https://github.com/bitcoin/bitcoin/blob/master/doc/tracing.md) in an external application hooking into Bitcoin Core internals too.\n\n> bandwidth consumption surges\n\nThis could be done with [the `net` tracepoints](https://github.com/bitcoin/bitcoin/blob/master/doc/tracing.md#context-net) for inbound / ",https://github.com/bitcoin/bitcoin/pull/18987#issuecomment-891850721,891850721,
ariard,2021-08-04 00:50:15,"Honestly, I've not been that far in the design of a specific hook interface servicing watchdog/statistical tools.\n\nThis PoC was relying on a `CWatchdogInterface` inspired from the current `CValidationInterface`. Though one of the prevailing feedback I received with this proposal was that it would be far better to have the module separated in another runtime, and even external to Bitcoin Core i",https://github.com/bitcoin/bitcoin/pull/18987#issuecomment-892271290,892271290,
