TheBlueMatt,2014-10-12T02:39:54Z,I would just assert this one?\n,https://github.com/bitcoin/bitcoin/pull/5078#issuecomment-58771570,58771570,
luke-jr,2014-10-12T02:51:55Z,@TheBlueMatt I'm not sure under what conditions this might occur. Tip() explicitly returns NULL in some cases... Don't want running a miner to crash your Bitcoin node.\n,https://github.com/bitcoin/bitcoin/pull/5078#issuecomment-58771744,58771744,
TheBlueMatt,2014-10-12T02:54:58Z,"It should never return null unless you havent loaded even the genesis block, I think\n",https://github.com/bitcoin/bitcoin/pull/5078#issuecomment-58771784,58771784,
sipa,2014-10-12T04:58:37Z,Correct. chainActive.Tip should never be NULL after AppInit. Either LoadBlockIndex or InitBlockIndex fixed that.\n,https://github.com/bitcoin/bitcoin/pull/5078#issuecomment-58773634,58773634,
luke-jr,2014-10-12T05:01:53Z,"@sipa Would you object to making Tip() return a reference rather than a pointer, then?\n",https://github.com/bitcoin/bitcoin/pull/5078#issuecomment-58773695,58773695,
sipa,2014-10-12T05:06:02Z,"We use CBlockIndex\* variables everywhere as identifiers for blocks, so yes, I would rather not change that. Also, it is effectively useful inside the initialization code to detect the we're-not-yet-initialized case.\n",https://github.com/bitcoin/bitcoin/pull/5078#issuecomment-58773764,58773764,
laanwj,2014-10-13T11:53:51Z,> Correct. chainActive.Tip should never be NULL after AppInit. Either LoadBlockIndex or InitBlockIndex fixed that.\n\nThis post https://github.com/bitcoin/bitcoin/pull/4995#issuecomment-57161037 in #4995 claims that in the case of -reindex it can be NULL (note: haven't checked this myself).\n,https://github.com/bitcoin/bitcoin/pull/5078#issuecomment-58881796,58881796,
jgarzik,2014-10-13T14:55:14Z,"This is an assert, not a normal one.  Should be impossible for this condition to occur, even with reindex.\n\nreindex always hand-builds the genesis block.\n",https://github.com/bitcoin/bitcoin/pull/5078#issuecomment-58903583,58903583,
sipa,2014-10-13T15:40:56Z,"Oh, no, indeed. If you reindex, InitBlockIndex bypassing rebuilding the\ngenesis block, as the one already on disk will be used.\n",https://github.com/bitcoin/bitcoin/pull/5078#issuecomment-58910533,58910533,
TheBlueMatt,2014-10-13T18:09:15Z,"@laanwj Hmm, would it not make more sense to fix that by making sure Tip() always points to at least genesis, instead of letting it be NULL?\n",https://github.com/bitcoin/bitcoin/pull/5078#issuecomment-58931778,58931778,
sipa,2014-10-13T18:34:11Z,"When you're reindexing, there is no genesis CBlockIndex before you start\nthe reindex (as you don't know where it is on disk yet).\n",https://github.com/bitcoin/bitcoin/pull/5078#issuecomment-58935026,58935026,
TheBlueMatt,2014-10-13T18:39:34Z,"OK, so we should wait to return from AppInit before we at least have the genesis block reindexed?\n",https://github.com/bitcoin/bitcoin/pull/5078#issuecomment-58935713,58935713,
laanwj,2014-10-14T10:02:10Z,"Now that we've established that `chainActive.Tip()` can return NULL, I suppose the most straightforward way forward is document this behaviour and make the code robust against it where necessary.\n\nJust delaying the return won't solve anything. @TheBlueMatt  To be precise we'd have to wait after starting ThreadImport, before starting the node and RPC threads and internal miner. It would be anothe",https://github.com/bitcoin/bitcoin/pull/5078#issuecomment-59017041,59017041,
TheBlueMatt,2014-10-14T17:24:53Z,"@laanwj Yes, I was going for less impact. It certainly seems rather strange to start import in init, and then finish initializing everything else before we have even initialized the genesis block (which should be one of the first blocks imported, no?).\n",https://github.com/bitcoin/bitcoin/pull/5078#issuecomment-59083206,59083206,
laanwj,2014-10-15T08:51:56Z,"OK. Then cleanest would be to split up reindex into a 'locate genesis block' and 'reindex chain' part, the first part being executed from AppInit2. This avoids ugly constructions with waiting for `ThreadImport`.\n",https://github.com/bitcoin/bitcoin/pull/5078#issuecomment-59175795,59175795,
laanwj,2014-10-15T13:25:53Z,"Correct me if wrong: when reindexing, even with headers-first, the genesis block is always the first block in the first block file (blk00000.dat). If not we are reindexing the wrong chain, for example a testnet block chain on a mainnet node or dealing with a corrupted block file. In that case it acceptable to throw an initialization error.\n\nI can't think of any exceptions to this.\n",https://github.com/bitcoin/bitcoin/pull/5078#issuecomment-59204232,59204232,
sipa,2014-10-15T17:45:25Z,"The genesis block should be the first one yes, as it's not received from network but put there in InitBlockIndex, If it is not, there's a problem.\n",https://github.com/bitcoin/bitcoin/pull/5078#issuecomment-59245752,59245752,
sipa,2014-11-06T17:32:02Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/5078#issuecomment-62017881,62017881,
TheBlueMatt,2014-11-08T07:29:10Z,"Ive always considered the chainActive.Tip() never returning NULL to be a rule, so I'd prefer to wait in init for it to be the case (ie #5243)\n",https://github.com/bitcoin/bitcoin/pull/5078#issuecomment-62249017,62249017,
laanwj,2014-12-05T10:20:37Z,Closing in favor of #5243.\n,https://github.com/bitcoin/bitcoin/pull/5078#issuecomment-65771053,65771053,
