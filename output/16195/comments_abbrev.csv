practicalswift,2019-06-12 16:13:19,"@jkczyz Nice first-time contribution! Welcome as a contributor! \n\nWhat compiler is it that is failing to compile?",https://github.com/bitcoin/bitcoin/pull/16195#issuecomment-501345642,501345642,
jkczyz,2019-06-12 17:14:14,"@practicalswift Thanks! My organization uses a customized STL. It provides a char* specialization for std::hash, which contains a static_assert that always fails. This is to prevent code from keying by pointers when keying by the pointed-to string is what is probably desired.",https://github.com/bitcoin/bitcoin/pull/16195#issuecomment-501370908,501370908,
practicalswift,2019-06-12 20:55:08,"@jkczyz Thanks for the clarification! Please squash into one commit.\n\nPlease report any other issues or warnings you encounter when using your organisations' compiler environment. Diversity in testing is good :-)",https://github.com/bitcoin/bitcoin/pull/16195#issuecomment-501451820,501451820,
DrahtBot,2019-06-12 21:12:10,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/16195#issuecomment-501457264,501457264,
laanwj,2019-06-13 10:47:26,"Concept ACK\n\n@sipa can you please comment on this? you seem to have a good grasp around subtle issues with regard to UB around pointer casts",https://github.com/bitcoin/bitcoin/pull/16195#issuecomment-501651730,501651730,
sipa,2019-07-30 06:14:39,My understanding is that casting something to void* and then back to the correct pointer type before use is always fine.\n\nWill review the code soon.,https://github.com/bitcoin/bitcoin/pull/16195#issuecomment-516278820,516278820,
fanquake,2019-11-20 14:56:58,@jkczyz Can you rebase this. @sipa Could you follow up after that?,https://github.com/bitcoin/bitcoin/pull/16195#issuecomment-556039193,556039193,
jkczyz,2019-11-21 02:30:21,"> @jkczyz Can you rebase this. @sipa Could you follow up after that?\n\nDone.",https://github.com/bitcoin/bitcoin/pull/16195#issuecomment-556858947,556858947,
promag,2019-06-12 15:54:02,"nit,\n```\nstd::pair<char*, size_t> freed{static_cast<char*>(i->first), i->second};\n```\nor\n```\nauto freed = std::make_pair(static_cast<char*>(i->first), i->second);\n```",https://github.com/bitcoin/bitcoin/pull/16195#discussion_r292991730,292991730,src/support/lockedpool.cpp
promag,2019-06-12 15:55:37,make `free_chunk` const?,https://github.com/bitcoin/bitcoin/pull/16195#discussion_r292992487,292992487,src/support/lockedpool.cpp
