[
  {
    "sha": "b460242a36c7d2398ab840777653fe24f425c23e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNDYwMjQyYTM2YzdkMjM5OGFiODQwNzc3NjUzZmUyNGY0MjVjMjNl",
    "commit": {
      "author": {
        "name": "Alin Rus",
        "email": "alin@fsck.ro",
        "date": "2018-01-11T19:23:41Z"
      },
      "committer": {
        "name": "Alin Rus",
        "email": "alin@fsck.ro",
        "date": "2018-01-11T19:23:41Z"
      },
      "message": "Avoid unnecessary copy of objects.\n\n* removed unnecessary value arguments.\n* removed unnecessary copy initialization.\n* removed unnecessary for range copy.",
      "tree": {
        "sha": "ba49d33415b2d300005247c0e7cb33f88b0105f6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ba49d33415b2d300005247c0e7cb33f88b0105f6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b460242a36c7d2398ab840777653fe24f425c23e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b460242a36c7d2398ab840777653fe24f425c23e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b460242a36c7d2398ab840777653fe24f425c23e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b460242a36c7d2398ab840777653fe24f425c23e/comments",
    "author": {
      "login": "flipbitsnotburgers",
      "id": 48412190,
      "node_id": "MDQ6VXNlcjQ4NDEyMTkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/48412190?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flipbitsnotburgers",
      "html_url": "https://github.com/flipbitsnotburgers",
      "followers_url": "https://api.github.com/users/flipbitsnotburgers/followers",
      "following_url": "https://api.github.com/users/flipbitsnotburgers/following{/other_user}",
      "gists_url": "https://api.github.com/users/flipbitsnotburgers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flipbitsnotburgers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flipbitsnotburgers/subscriptions",
      "organizations_url": "https://api.github.com/users/flipbitsnotburgers/orgs",
      "repos_url": "https://api.github.com/users/flipbitsnotburgers/repos",
      "events_url": "https://api.github.com/users/flipbitsnotburgers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flipbitsnotburgers/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "flipbitsnotburgers",
      "id": 48412190,
      "node_id": "MDQ6VXNlcjQ4NDEyMTkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/48412190?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flipbitsnotburgers",
      "html_url": "https://github.com/flipbitsnotburgers",
      "followers_url": "https://api.github.com/users/flipbitsnotburgers/followers",
      "following_url": "https://api.github.com/users/flipbitsnotburgers/following{/other_user}",
      "gists_url": "https://api.github.com/users/flipbitsnotburgers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flipbitsnotburgers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flipbitsnotburgers/subscriptions",
      "organizations_url": "https://api.github.com/users/flipbitsnotburgers/orgs",
      "repos_url": "https://api.github.com/users/flipbitsnotburgers/repos",
      "events_url": "https://api.github.com/users/flipbitsnotburgers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flipbitsnotburgers/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1d2eaba300bc13c556e3cb05420dcc91ae12e1d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d2eaba300bc13c556e3cb05420dcc91ae12e1d0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1d2eaba300bc13c556e3cb05420dcc91ae12e1d0"
      }
    ],
    "stats": {
      "total": 203,
      "additions": 107,
      "deletions": 96
    },
    "files": [
      {
        "sha": "11def9a420dea205d5312a61265beeeffd835736",
        "filename": "src/bench/bench.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/bench/bench.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/bench/bench.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -11,6 +11,7 @@\n #include <algorithm>\n #include <regex>\n #include <numeric>\n+#include <utility>\n \n void benchmark::ConsolePrinter::header()\n {\n@@ -45,7 +46,7 @@ void benchmark::ConsolePrinter::result(const State& state)\n \n void benchmark::ConsolePrinter::footer() {}\n benchmark::PlotlyPrinter::PlotlyPrinter(std::string plotly_url, int64_t width, int64_t height)\n-    : m_plotly_url(plotly_url), m_width(width), m_height(height)\n+    : m_plotly_url(std::move(plotly_url)), m_width(width), m_height(height)\n {\n }\n \n@@ -91,7 +92,7 @@ benchmark::BenchRunner::BenchmarkMap& benchmark::BenchRunner::benchmarks()\n \n benchmark::BenchRunner::BenchRunner(std::string name, benchmark::BenchFunction func, uint64_t num_iters_for_one_second)\n {\n-    benchmarks().insert(std::make_pair(name, Bench{func, num_iters_for_one_second}));\n+    benchmarks().insert(std::make_pair(name, Bench{std::move(func), num_iters_for_one_second}));\n }\n \n void benchmark::BenchRunner::RunAll(Printer& printer, uint64_t num_evals, double scaling, const std::string& filter, bool is_list_only)"
      },
      {
        "sha": "7587d069809b3a9b834fd386802b90183cc450d9",
        "filename": "src/httprpc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/httprpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/httprpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httprpc.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -83,7 +83,7 @@ static void JSONErrorReply(HTTPRequest* req, const UniValue& objError, const Uni\n \n //This function checks username and password against -rpcauth\n //entries from config file.\n-static bool multiUserAuthorized(std::string strUserPass)\n+static bool multiUserAuthorized(const std::string& strUserPass)\n {    \n     if (strUserPass.find(\":\") == std::string::npos) {\n         return false;"
      },
      {
        "sha": "ab810798a9686b13408e0227cabd6b8c24037dd2",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -21,6 +21,7 @@\n #include <sys/stat.h>\n #include <signal.h>\n #include <future>\n+#include <utility>\n \n #include <event2/thread.h>\n #include <event2/buffer.h>\n@@ -154,7 +155,7 @@ struct HTTPPathHandler\n {\n     HTTPPathHandler() {}\n     HTTPPathHandler(std::string _prefix, bool _exactMatch, HTTPRequestHandler _handler):\n-        prefix(_prefix), exactMatch(_exactMatch), handler(_handler)\n+        prefix(std::move(_prefix)), exactMatch(_exactMatch), handler(std::move(_handler))\n     {\n     }\n     std::string prefix;"
      },
      {
        "sha": "6dae4460ddde7d5ecbf25ccef3abc2e9d5badaed",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -2846,7 +2846,7 @@ void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n         RecordBytesSent(nBytesSent);\n }\n \n-bool CConnman::ForNode(NodeId id, std::function<bool(CNode* pnode)> func)\n+bool CConnman::ForNode(NodeId id, const std::function<bool(CNode* pnode)>& func)\n {\n     CNode* found = nullptr;\n     LOCK(cs_vNodes);"
      },
      {
        "sha": "c8940c0dab7906c77a770151b7a927aac4a96c33",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -180,7 +180,7 @@ class CConnman\n     bool OpenNetworkConnection(const CAddress& addrConnect, bool fCountFailure, CSemaphoreGrant *grantOutbound = nullptr, const char *strDest = nullptr, bool fOneShot = false, bool fFeeler = false, bool manual_connection = false);\n     bool CheckIncomingNonce(uint64_t nonce);\n \n-    bool ForNode(NodeId id, std::function<bool(CNode* pnode)> func);\n+    bool ForNode(NodeId id, const std::function<bool(CNode* pnode)>& func);\n \n     void PushMessage(CNode* pnode, CSerializedNetMsg&& msg);\n "
      },
      {
        "sha": "ea41a71f34d90b88ca4a275acf23d5896d454e98",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -30,6 +30,8 @@\n #include <utilmoneystr.h>\n #include <utilstrencodings.h>\n \n+#include <utility>\n+\n #if defined(NDEBUG)\n # error \"Bitcoin cannot be compiled without assertions.\"\n #endif\n@@ -237,7 +239,7 @@ struct CNodeState {\n     //! Time of last new block announcement\n     int64_t m_last_block_announcement;\n \n-    CNodeState(CAddress addrIn, std::string addrNameIn) : address(addrIn), name(addrNameIn) {\n+    CNodeState(CAddress addrIn, std::string addrNameIn) : address(addrIn), name(std::move(addrNameIn)) {\n         fCurrentlyConnected = false;\n         nMisbehavior = 0;\n         fShouldBan = false;"
      },
      {
        "sha": "909653d7ea80e609759ec9233d9cbaceff07dda7",
        "filename": "src/primitives/transaction.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/primitives/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/primitives/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -9,6 +9,8 @@\n #include <tinyformat.h>\n #include <utilstrencodings.h>\n \n+#include <utility>\n+\n std::string COutPoint::ToString() const\n {\n     return strprintf(\"COutPoint(%s, %u)\", hash.ToString().substr(0,10), n);\n@@ -17,14 +19,14 @@ std::string COutPoint::ToString() const\n CTxIn::CTxIn(COutPoint prevoutIn, CScript scriptSigIn, uint32_t nSequenceIn)\n {\n     prevout = prevoutIn;\n-    scriptSig = scriptSigIn;\n+    scriptSig = std::move(scriptSigIn);\n     nSequence = nSequenceIn;\n }\n \n CTxIn::CTxIn(uint256 hashPrevTx, uint32_t nOut, CScript scriptSigIn, uint32_t nSequenceIn)\n {\n     prevout = COutPoint(hashPrevTx, nOut);\n-    scriptSig = scriptSigIn;\n+    scriptSig = std::move(scriptSigIn);\n     nSequence = nSequenceIn;\n }\n \n@@ -46,7 +48,7 @@ std::string CTxIn::ToString() const\n CTxOut::CTxOut(const CAmount& nValueIn, CScript scriptPubKeyIn)\n {\n     nValue = nValueIn;\n-    scriptPubKey = scriptPubKeyIn;\n+    scriptPubKey = std::move(scriptPubKeyIn);\n }\n \n std::string CTxOut::ToString() const"
      },
      {
        "sha": "be79828c2e7ee6c37e16f84624f5a8e1d50f7951",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -697,18 +697,18 @@ void BitcoinGUI::gotoReceiveCoinsPage()\n     if (walletFrame) walletFrame->gotoReceiveCoinsPage();\n }\n \n-void BitcoinGUI::gotoSendCoinsPage(QString addr)\n+void BitcoinGUI::gotoSendCoinsPage(const QString& addr)\n {\n     sendCoinsAction->setChecked(true);\n     if (walletFrame) walletFrame->gotoSendCoinsPage(addr);\n }\n \n-void BitcoinGUI::gotoSignMessageTab(QString addr)\n+void BitcoinGUI::gotoSignMessageTab(const QString& addr)\n {\n     if (walletFrame) walletFrame->gotoSignMessageTab(addr);\n }\n \n-void BitcoinGUI::gotoVerifyMessageTab(QString addr)\n+void BitcoinGUI::gotoVerifyMessageTab(const QString& addr)\n {\n     if (walletFrame) walletFrame->gotoVerifyMessageTab(addr);\n }"
      },
      {
        "sha": "4505e52002f646c9e27e1b96e396d01c06af68e9",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -198,12 +198,12 @@ private Q_SLOTS:\n     /** Switch to receive coins page */\n     void gotoReceiveCoinsPage();\n     /** Switch to send coins page */\n-    void gotoSendCoinsPage(QString addr = \"\");\n+    void gotoSendCoinsPage(const QString& addr = \"\");\n \n     /** Show Sign/Verify Message dialog and switch to sign message tab */\n-    void gotoSignMessageTab(QString addr = \"\");\n+    void gotoSignMessageTab(const QString& addr = \"\");\n     /** Show Sign/Verify Message dialog and switch to verify message tab */\n-    void gotoVerifyMessageTab(QString addr = \"\");\n+    void gotoVerifyMessageTab(const QString& addr = \"\");\n \n     /** Show open dialog */\n     void openClicked();"
      },
      {
        "sha": "6497a04906ebf4000d6791ce742655c8fc4529b1",
        "filename": "src/qt/paymentrequestplus.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/qt/paymentrequestplus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/qt/paymentrequestplus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentrequestplus.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -22,7 +22,7 @@\n class SSLVerifyError : public std::runtime_error\n {\n public:\n-    explicit SSLVerifyError(std::string err) : std::runtime_error(err) { }\n+    explicit SSLVerifyError(const std::string& err) : std::runtime_error(err) { }\n };\n \n bool PaymentRequestPlus::parse(const QByteArray& data)"
      },
      {
        "sha": "6797100230c04d43e6875559211c9275fd748c2f",
        "filename": "src/qt/receivecoinsdialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/qt/receivecoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/qt/receivecoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -184,7 +184,7 @@ void ReceiveCoinsDialog::on_removeRequestButton_clicked()\n     if(selection.empty())\n         return;\n     // correct for selection mode ContiguousSelection\n-    QModelIndex firstIndex = selection.at(0);\n+    const QModelIndex& firstIndex = selection.at(0);\n     model->getRecentRequestsTableModel()->removeRows(firstIndex.row(), selection.length(), firstIndex.parent());\n }\n \n@@ -220,7 +220,7 @@ QModelIndex ReceiveCoinsDialog::selectedRow()\n     if(selection.empty())\n         return QModelIndex();\n     // correct for selection mode ContiguousSelection\n-    QModelIndex firstIndex = selection.at(0);\n+    const QModelIndex& firstIndex = selection.at(0);\n     return firstIndex;\n }\n "
      },
      {
        "sha": "2637cb38555a4b8ed57688cee8279b507ce2163c",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -26,7 +26,7 @@\n #include <QPainter>\n #include <QRadialGradient>\n \n-SplashScreen::SplashScreen(Qt::WindowFlags f, const NetworkStyle *networkStyle) :\n+SplashScreen::SplashScreen(const Qt::WindowFlags& f, const NetworkStyle *networkStyle) :\n     QWidget(0, f), curAlignment(0)\n {\n     // set reference point, paddings\n@@ -45,7 +45,7 @@ SplashScreen::SplashScreen(Qt::WindowFlags f, const NetworkStyle *networkStyle)\n     QString titleText       = tr(PACKAGE_NAME);\n     QString versionText     = QString(\"Version %1\").arg(QString::fromStdString(FormatFullVersion()));\n     QString copyrightText   = QString::fromUtf8(CopyrightHolders(strprintf(\"\\xc2\\xA9 %u-%u \", 2009, COPYRIGHT_YEAR)).c_str());\n-    QString titleAddText    = networkStyle->getTitleAddText();\n+    const QString& titleAddText    = networkStyle->getTitleAddText();\n \n     QString font            = QApplication::font().toString();\n "
      },
      {
        "sha": "2d9ec670d86c4f855df3c7a60dfe5d5748c9ce75",
        "filename": "src/qt/splashscreen.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/qt/splashscreen.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/qt/splashscreen.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.h?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -22,7 +22,7 @@ class SplashScreen : public QWidget\n     Q_OBJECT\n \n public:\n-    explicit SplashScreen(Qt::WindowFlags f, const NetworkStyle *networkStyle);\n+    explicit SplashScreen(const Qt::WindowFlags& f, const NetworkStyle *networkStyle);\n     ~SplashScreen();\n \n protected:"
      },
      {
        "sha": "6a2bf900ee6ac81813c4a0fc971caa779fa52de7",
        "filename": "src/qt/test/wallettests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/qt/test/wallettests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/qt/test/wallettests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/wallettests.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -109,7 +109,7 @@ void RequestContextMenu(QWidget* widget)\n }\n \n //! Invoke bumpfee on txid and check results.\n-void BumpFee(TransactionView& view, const uint256& txid, bool expectDisabled, std::string expectError, bool cancel)\n+void BumpFee(TransactionView& view, const uint256& txid, bool expectDisabled, const std::string& expectError, bool cancel)\n {\n     QTableView* table = view.findChild<QTableView*>(\"transactionView\");\n     QModelIndex index = FindTx(*table->selectionModel()->model(), txid);"
      },
      {
        "sha": "ca179973466ff9082eb80d68890f341e0c5be7f7",
        "filename": "src/qt/utilitydialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/qt/utilitydialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/qt/utilitydialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -161,7 +161,7 @@ void HelpMessageDialog::on_okButton_accepted()\n \n \n /** \"Shutdown\" window */\n-ShutdownWindow::ShutdownWindow(QWidget *parent, Qt::WindowFlags f):\n+ShutdownWindow::ShutdownWindow(QWidget *parent, const Qt::WindowFlags& f):\n     QWidget(parent, f)\n {\n     QVBoxLayout *layout = new QVBoxLayout();"
      },
      {
        "sha": "744f814c952ad2c5cac56e011e96617dc8344036",
        "filename": "src/qt/utilitydialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/qt/utilitydialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/qt/utilitydialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.h?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -41,7 +41,7 @@ class ShutdownWindow : public QWidget\n     Q_OBJECT\n \n public:\n-    explicit ShutdownWindow(QWidget *parent=0, Qt::WindowFlags f=0);\n+    explicit ShutdownWindow(QWidget *parent=0, const Qt::WindowFlags& f=0);\n     static QWidget *showShutdownWindow(BitcoinGUI *window);\n \n protected:"
      },
      {
        "sha": "7421d960e995372c2da38b131587ef920edd032c",
        "filename": "src/qt/walletframe.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/qt/walletframe.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/qt/walletframe.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -131,21 +131,21 @@ void WalletFrame::gotoReceiveCoinsPage()\n         i.value()->gotoReceiveCoinsPage();\n }\n \n-void WalletFrame::gotoSendCoinsPage(QString addr)\n+void WalletFrame::gotoSendCoinsPage(const QString& addr)\n {\n     QMap<QString, WalletView*>::const_iterator i;\n     for (i = mapWalletViews.constBegin(); i != mapWalletViews.constEnd(); ++i)\n         i.value()->gotoSendCoinsPage(addr);\n }\n \n-void WalletFrame::gotoSignMessageTab(QString addr)\n+void WalletFrame::gotoSignMessageTab(const QString& addr)\n {\n     WalletView *walletView = currentWalletView();\n     if (walletView)\n         walletView->gotoSignMessageTab(addr);\n }\n \n-void WalletFrame::gotoVerifyMessageTab(QString addr)\n+void WalletFrame::gotoVerifyMessageTab(const QString& addr)\n {\n     WalletView *walletView = currentWalletView();\n     if (walletView)"
      },
      {
        "sha": "cab3eff90d9c1113640bb7f83636c7c714f12da0",
        "filename": "src/qt/walletframe.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/qt/walletframe.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/qt/walletframe.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.h?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -69,12 +69,12 @@ public Q_SLOTS:\n     /** Switch to receive coins page */\n     void gotoReceiveCoinsPage();\n     /** Switch to send coins page */\n-    void gotoSendCoinsPage(QString addr = \"\");\n+    void gotoSendCoinsPage(const QString& addr = \"\");\n \n     /** Show Sign/Verify Message dialog and switch to sign message tab */\n-    void gotoSignMessageTab(QString addr = \"\");\n+    void gotoSignMessageTab(const QString& addr = \"\");\n     /** Show Sign/Verify Message dialog and switch to verify message tab */\n-    void gotoVerifyMessageTab(QString addr = \"\");\n+    void gotoVerifyMessageTab(const QString& addr = \"\");\n \n     /** Encrypt the wallet */\n     void encryptWallet(bool status);"
      },
      {
        "sha": "b2c35a0ad3f813e4aabcd21059704465372a66d7",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -184,15 +184,15 @@ void WalletView::gotoReceiveCoinsPage()\n     setCurrentWidget(receiveCoinsPage);\n }\n \n-void WalletView::gotoSendCoinsPage(QString addr)\n+void WalletView::gotoSendCoinsPage(const QString& addr)\n {\n     setCurrentWidget(sendCoinsPage);\n \n     if (!addr.isEmpty())\n         sendCoinsPage->setAddress(addr);\n }\n \n-void WalletView::gotoSignMessageTab(QString addr)\n+void WalletView::gotoSignMessageTab(const QString& addr)\n {\n     // calls show() in showTab_SM()\n     SignVerifyMessageDialog *signVerifyMessageDialog = new SignVerifyMessageDialog(platformStyle, this);\n@@ -204,7 +204,7 @@ void WalletView::gotoSignMessageTab(QString addr)\n         signVerifyMessageDialog->setAddress_SM(addr);\n }\n \n-void WalletView::gotoVerifyMessageTab(QString addr)\n+void WalletView::gotoVerifyMessageTab(const QString& addr)\n {\n     // calls show() in showTab_VM()\n     SignVerifyMessageDialog *signVerifyMessageDialog = new SignVerifyMessageDialog(platformStyle, this);"
      },
      {
        "sha": "6cf98aa8376ea1a2f67ebc396f2d62f6fe02b73b",
        "filename": "src/qt/walletview.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/qt/walletview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/qt/walletview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.h?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -78,12 +78,12 @@ public Q_SLOTS:\n     /** Switch to receive coins page */\n     void gotoReceiveCoinsPage();\n     /** Switch to send coins page */\n-    void gotoSendCoinsPage(QString addr = \"\");\n+    void gotoSendCoinsPage(const QString& addr = \"\");\n \n     /** Show Sign/Verify Message dialog and switch to sign message tab */\n-    void gotoSignMessageTab(QString addr = \"\");\n+    void gotoSignMessageTab(const QString& addr = \"\");\n     /** Show Sign/Verify Message dialog and switch to verify message tab */\n-    void gotoVerifyMessageTab(QString addr = \"\");\n+    void gotoVerifyMessageTab(const QString& addr = \"\");\n \n     /** Show incoming transaction notification for new transactions.\n "
      },
      {
        "sha": "13feb5d9bf593edfd00efad28e1130103bedc36f",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -60,7 +60,7 @@ struct CCoin {\n     }\n };\n \n-static bool RESTERR(HTTPRequest* req, enum HTTPStatusCode status, std::string message)\n+static bool RESTERR(HTTPRequest* req, enum HTTPStatusCode status, const std::string& message)\n {\n     req->WriteHeader(\"Content-Type\", \"text/plain\");\n     req->WriteReply(status, message + \"\\r\\n\");"
      },
      {
        "sha": "62be0152cf00f2449e5f4d679dd432bc815f1810",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -808,7 +808,7 @@ static void ApplyStats(CCoinsStats &stats, CHashWriter& ss, const uint256& hash,\n     ss << hash;\n     ss << VARINT(outputs.begin()->second.nHeight * 2 + outputs.begin()->second.fCoinBase);\n     stats.nTransactions++;\n-    for (const auto output : outputs) {\n+    for (const auto& output : outputs) {\n         ss << VARINT(output.first + 1);\n         ss << output.second.out.scriptPubKey;\n         ss << VARINT(output.second.out.nValue);"
      },
      {
        "sha": "6179c82750a0214d4220fe6344197e4becdd9858",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -103,7 +103,7 @@ UniValue getnetworkhashps(const JSONRPCRequest& request)\n     return GetNetworkHashPS(!request.params[0].isNull() ? request.params[0].get_int() : 120, !request.params[1].isNull() ? request.params[1].get_int() : -1);\n }\n \n-UniValue generateBlocks(std::shared_ptr<CReserveScript> coinbaseScript, int nGenerate, uint64_t nMaxTries, bool keepScript)\n+UniValue generateBlocks(const std::shared_ptr<CReserveScript>& coinbaseScript, int nGenerate, uint64_t nMaxTries, bool keepScript)\n {\n     static const int nInnerLoopCount = 0x10000;\n     int nHeightEnd = 0;\n@@ -459,7 +459,7 @@ UniValue getblocktemplate(const JSONRPCRequest& request)\n         if (lpval.isStr())\n         {\n             // Format: <hashBestChain><nTransactionsUpdatedLast>\n-            std::string lpstr = lpval.get_str();\n+            const std::string& lpstr = lpval.get_str();\n \n             hashWatchedChain.SetHex(lpstr.substr(0, 64));\n             nTransactionsUpdatedLastLP = atoi64(lpstr.substr(64));"
      },
      {
        "sha": "a4ebed6682e5a62bb065d6c76c6d1e3e82205540",
        "filename": "src/rpc/mining.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/rpc/mining.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/rpc/mining.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.h?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -10,7 +10,7 @@\n #include <univalue.h>\n \n /** Generate blocks (mine) */\n-UniValue generateBlocks(std::shared_ptr<CReserveScript> coinbaseScript, int nGenerate, uint64_t nMaxTries, bool keepScript);\n+UniValue generateBlocks(const std::shared_ptr<CReserveScript>& coinbaseScript, int nGenerate, uint64_t nMaxTries, bool keepScript);\n \n /** Check bounds on a command line confirm target */\n unsigned int ParseConfirmTarget(const UniValue& value);"
      },
      {
        "sha": "bfac0ce42d99fdda449a9a649ae01858e69db3e7",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -791,7 +791,7 @@ UniValue signrawtransaction(const JSONRPCRequest& request)\n             if (!p.isObject())\n                 throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"expected object with {\\\"txid'\\\",\\\"vout\\\",\\\"scriptPubKey\\\"}\");\n \n-            UniValue prevOut = p.get_obj();\n+            const UniValue& prevOut = p.get_obj();\n \n             RPCTypeCheckObj(prevOut,\n                 {"
      },
      {
        "sha": "8e78b65838290ac19f319f8b9378e9929d937e58",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -39,12 +39,12 @@ static struct CRPCSignals\n     boost::signals2::signal<void (const CRPCCommand&)> PreCommand;\n } g_rpcSignals;\n \n-void RPCServer::OnStarted(std::function<void ()> slot)\n+void RPCServer::OnStarted(const std::function<void ()>& slot)\n {\n     g_rpcSignals.Started.connect(slot);\n }\n \n-void RPCServer::OnStopped(std::function<void ()> slot)\n+void RPCServer::OnStopped(const std::function<void ()>& slot)\n {\n     g_rpcSignals.Stopped.connect(slot);\n }\n@@ -116,7 +116,7 @@ CAmount AmountFromValue(const UniValue& value)\n     return amount;\n }\n \n-uint256 ParseHashV(const UniValue& v, std::string strName)\n+uint256 ParseHashV(const UniValue& v, const std::string& strName)\n {\n     std::string strHex;\n     if (v.isStr())\n@@ -129,11 +129,11 @@ uint256 ParseHashV(const UniValue& v, std::string strName)\n     result.SetHex(strHex);\n     return result;\n }\n-uint256 ParseHashO(const UniValue& o, std::string strKey)\n+uint256 ParseHashO(const UniValue& o, const std::string& strKey)\n {\n     return ParseHashV(find_value(o, strKey), strKey);\n }\n-std::vector<unsigned char> ParseHexV(const UniValue& v, std::string strName)\n+std::vector<unsigned char> ParseHexV(const UniValue& v, const std::string& strName)\n {\n     std::string strHex;\n     if (v.isStr())\n@@ -142,7 +142,7 @@ std::vector<unsigned char> ParseHexV(const UniValue& v, std::string strName)\n         throw JSONRPCError(RPC_INVALID_PARAMETER, strName+\" must be hexadecimal string (not '\"+strHex+\"')\");\n     return ParseHex(strHex);\n }\n-std::vector<unsigned char> ParseHexO(const UniValue& o, std::string strKey)\n+std::vector<unsigned char> ParseHexO(const UniValue& o, const std::string& strKey)\n {\n     return ParseHexV(find_value(o, strKey), strKey);\n }"
      },
      {
        "sha": "504543a5a944c30915dac09bbd87f5e7c5d007ac",
        "filename": "src/rpc/server.h",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/rpc/server.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/rpc/server.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.h?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -23,8 +23,8 @@ class CRPCCommand;\n \n namespace RPCServer\n {\n-    void OnStarted(std::function<void ()> slot);\n-    void OnStopped(std::function<void ()> slot);\n+    void OnStarted(const std::function<void ()>& slot);\n+    void OnStopped(const std::function<void ()>& slot);\n }\n \n /** Wrapper for UniValue::VType, which includes typeAny:\n@@ -179,10 +179,10 @@ extern CRPCTable tableRPC;\n  * Utilities: convert hex-encoded Values\n  * (throws error if not hex).\n  */\n-extern uint256 ParseHashV(const UniValue& v, std::string strName);\n-extern uint256 ParseHashO(const UniValue& o, std::string strKey);\n-extern std::vector<unsigned char> ParseHexV(const UniValue& v, std::string strName);\n-extern std::vector<unsigned char> ParseHexO(const UniValue& o, std::string strKey);\n+extern uint256 ParseHashV(const UniValue& v, const std::string& strName);\n+extern uint256 ParseHashO(const UniValue& o, const std::string& strKey);\n+extern std::vector<unsigned char> ParseHexV(const UniValue& v, const std::string& strName);\n+extern std::vector<unsigned char> ParseHexO(const UniValue& o, const std::string& strKey);\n \n extern CAmount AmountFromValue(const UniValue& value);\n extern std::string HelpExampleCli(const std::string& methodname, const std::string& args);"
      },
      {
        "sha": "1a39e3007f3abb5d9ba28b7aefaf7233170fff6f",
        "filename": "src/scheduler.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/scheduler.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/scheduler.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scheduler.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -114,18 +114,18 @@ void CScheduler::schedule(CScheduler::Function f, boost::chrono::system_clock::t\n \n void CScheduler::scheduleFromNow(CScheduler::Function f, int64_t deltaMilliSeconds)\n {\n-    schedule(f, boost::chrono::system_clock::now() + boost::chrono::milliseconds(deltaMilliSeconds));\n+    schedule(std::move(f), boost::chrono::system_clock::now() + boost::chrono::milliseconds(deltaMilliSeconds));\n }\n \n-static void Repeat(CScheduler* s, CScheduler::Function f, int64_t deltaMilliSeconds)\n+static void Repeat(CScheduler* s, const CScheduler::Function& f, int64_t deltaMilliSeconds)\n {\n     f();\n     s->scheduleFromNow(boost::bind(&Repeat, s, f, deltaMilliSeconds), deltaMilliSeconds);\n }\n \n void CScheduler::scheduleEvery(CScheduler::Function f, int64_t deltaMilliSeconds)\n {\n-    scheduleFromNow(boost::bind(&Repeat, this, f, deltaMilliSeconds), deltaMilliSeconds);\n+    scheduleFromNow(boost::bind(&Repeat, this, std::move(f), deltaMilliSeconds), deltaMilliSeconds);\n }\n \n size_t CScheduler::getQueueInfo(boost::chrono::system_clock::time_point &first,"
      },
      {
        "sha": "50d3697285f4d22e768f0af55c274498ed25b767",
        "filename": "src/test/addrman_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/test/addrman_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/test/addrman_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/addrman_tests.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -61,7 +61,7 @@ static CNetAddr ResolveIP(const char* ip)\n     return addr;\n }\n \n-static CNetAddr ResolveIP(std::string ip)\n+static CNetAddr ResolveIP(const std::string& ip)\n {\n     return ResolveIP(ip.c_str());\n }\n@@ -73,7 +73,7 @@ static CService ResolveService(const char* ip, int port = 0)\n     return serv;\n }\n \n-static CService ResolveService(std::string ip, int port = 0)\n+static CService ResolveService(const std::string& ip, int port = 0)\n {\n     return ResolveService(ip.c_str(), port);\n }"
      },
      {
        "sha": "cdcac7cdbb9e70e20c3aa5f9588742f179b5487c",
        "filename": "src/test/base58_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/test/base58_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/test/base58_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/base58_tests.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -193,7 +193,7 @@ BOOST_AUTO_TEST_CASE(base58_keys_invalid)\n         std::string exp_base58string = test[0].get_str();\n \n         // must be invalid as public and as private key\n-        for (auto chain : { CBaseChainParams::MAIN, CBaseChainParams::TESTNET, CBaseChainParams::REGTEST }) {\n+        for (const auto& chain : { CBaseChainParams::MAIN, CBaseChainParams::TESTNET, CBaseChainParams::REGTEST }) {\n             SelectParams(chain);\n             destination = DecodeDestination(exp_base58string);\n             BOOST_CHECK_MESSAGE(!IsValidDestination(destination), \"IsValid pubkey in mainnet:\" + strTest);"
      },
      {
        "sha": "b7415762b0289f9e2cb98da90ba041b8c63083ec",
        "filename": "src/test/bip32_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/test/bip32_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/test/bip32_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bip32_tests.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -12,6 +12,7 @@\n #include <test/test_bitcoin.h>\n \n #include <string>\n+#include <utility>\n #include <vector>\n \n struct TestDerivation {\n@@ -24,13 +25,13 @@ struct TestVector {\n     std::string strHexMaster;\n     std::vector<TestDerivation> vDerive;\n \n-    explicit TestVector(std::string strHexMasterIn) : strHexMaster(strHexMasterIn) {}\n+    explicit TestVector(std::string strHexMasterIn) : strHexMaster(std::move(strHexMasterIn)) {}\n \n     TestVector& operator()(std::string pub, std::string prv, unsigned int nChild) {\n         vDerive.push_back(TestDerivation());\n         TestDerivation &der = vDerive.back();\n-        der.pub = pub;\n-        der.prv = prv;\n+        der.pub = std::move(pub);\n+        der.prv = std::move(prv);\n         der.nChild = nChild;\n         return *this;\n     }"
      },
      {
        "sha": "f51abcdb6e56a3dd4df4bb4306b620d54fe1047f",
        "filename": "src/test/miner_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/test/miner_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/test/miner_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/miner_tests.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -99,7 +99,7 @@ bool TestSequenceLocks(const CTransaction &tx, int flags)\n // Test suite for ancestor feerate transaction selection.\n // Implemented as an additional function, rather than a separate test case,\n // to allow reusing the blockchain created in CreateNewBlock_validity.\n-void TestPackageSelection(const CChainParams& chainparams, CScript scriptPubKey, std::vector<CTransactionRef>& txFirst)\n+void TestPackageSelection(const CChainParams& chainparams, const CScript& scriptPubKey, std::vector<CTransactionRef>& txFirst)\n {\n     // Test the ancestor feerate transaction selection.\n     TestMemPoolEntryHelper entry;"
      },
      {
        "sha": "49260fdfef8d4059dd4cb096cb4d551f39566f35",
        "filename": "src/test/multisig_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/test/multisig_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/test/multisig_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/multisig_tests.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -19,7 +19,7 @@\n BOOST_FIXTURE_TEST_SUITE(multisig_tests, BasicTestingSetup)\n \n CScript\n-sign_multisig(CScript scriptPubKey, std::vector<CKey> keys, CTransaction transaction, int whichIn)\n+sign_multisig(const CScript& scriptPubKey, std::vector<CKey> keys, const CTransaction& transaction, int whichIn)\n {\n     uint256 hash = SignatureHash(scriptPubKey, transaction, whichIn, SIGHASH_ALL, 0, SIGVERSION_BASE);\n "
      },
      {
        "sha": "1092e8a5930e154be0da11709be52df6fdb06f93",
        "filename": "src/test/netbase_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/test/netbase_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/test/netbase_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/netbase_tests.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -9,6 +9,7 @@\n #include <string>\n \n #include <boost/test/unit_test.hpp>\n+#include <utility>\n \n BOOST_FIXTURE_TEST_SUITE(netbase_tests, BasicTestingSetup)\n \n@@ -72,11 +73,11 @@ BOOST_AUTO_TEST_CASE(netbase_properties)\n \n }\n \n-bool static TestSplitHost(std::string test, std::string host, int port)\n+bool static TestSplitHost(std::string test, const std::string& host, int port)\n {\n     std::string hostOut;\n     int portOut = -1;\n-    SplitHostPort(test, portOut, hostOut);\n+    SplitHostPort(std::move(test), portOut, hostOut);\n     return hostOut == host && port == portOut;\n }\n \n@@ -99,7 +100,7 @@ BOOST_AUTO_TEST_CASE(netbase_splithost)\n     BOOST_CHECK(TestSplitHost(\"\", \"\", -1));\n }\n \n-bool static TestParse(std::string src, std::string canon)\n+bool static TestParse(const std::string& src, const std::string& canon)\n {\n     CService addr(LookupNumeric(src.c_str(), 65535));\n     return canon == addr.ToString();"
      },
      {
        "sha": "8f5c96b225e35a4a8956ed528d630caab6f34de3",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -22,6 +22,7 @@\n #include <fstream>\n #include <stdint.h>\n #include <string>\n+#include <utility>\n #include <vector>\n \n #include <boost/test/unit_test.hpp>\n@@ -1029,7 +1030,7 @@ BOOST_AUTO_TEST_CASE(script_PushData)\n }\n \n CScript\n-sign_multisig(CScript scriptPubKey, std::vector<CKey> keys, CTransaction transaction)\n+sign_multisig(const CScript& scriptPubKey, std::vector<CKey> keys, const CTransaction& transaction)\n {\n     uint256 hash = SignatureHash(scriptPubKey, transaction, 0, SIGHASH_ALL, 0, SIGVERSION_BASE);\n \n@@ -1057,7 +1058,7 @@ sign_multisig(CScript scriptPubKey, const CKey &key, CTransaction transaction)\n {\n     std::vector<CKey> keys;\n     keys.push_back(key);\n-    return sign_multisig(scriptPubKey, keys, transaction);\n+    return sign_multisig(std::move(scriptPubKey), keys, std::move(transaction));\n }\n \n BOOST_AUTO_TEST_CASE(script_CHECKMULTISIG12)"
      },
      {
        "sha": "f969bd8187cc962befabe8ac8f9d972ae297c435",
        "filename": "src/test/torcontrol_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/test/torcontrol_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/test/torcontrol_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/torcontrol_tests.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -10,7 +10,7 @@\n \n BOOST_FIXTURE_TEST_SUITE(torcontrol_tests, BasicTestingSetup)\n \n-void CheckSplitTorReplyLine(std::string input, std::string command, std::string args)\n+void CheckSplitTorReplyLine(const std::string& input, const std::string& command, const std::string& args)\n {\n     BOOST_TEST_MESSAGE(std::string(\"CheckSplitTorReplyLine(\") + input + \")\");\n     auto ret = SplitTorReplyLine(input);\n@@ -51,7 +51,7 @@ BOOST_AUTO_TEST_CASE(util_SplitTorReplyLine)\n     CheckSplitTorReplyLine(\"COMMAND   EVEN+more  ARGS\", \"COMMAND\", \"  EVEN+more  ARGS\");\n }\n \n-void CheckParseTorReplyMapping(std::string input, std::map<std::string,std::string> expected)\n+void CheckParseTorReplyMapping(const std::string& input, std::map<std::string,std::string> expected)\n {\n     BOOST_TEST_MESSAGE(std::string(\"CheckParseTorReplyMapping(\") + input + \")\");\n     auto ret = ParseTorReplyMapping(input);"
      },
      {
        "sha": "eb4f1c8f41393722a16dbbeaf3f61fdd660e7569",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -64,7 +64,7 @@ unsigned int ParseScriptFlags(std::string strFlags)\n     std::vector<std::string> words;\n     boost::algorithm::split(words, strFlags, boost::algorithm::is_any_of(\",\"));\n \n-    for (std::string word : words)\n+    for (const std::string& word : words)\n     {\n         if (!mapFlagNames.count(word))\n             BOOST_ERROR(\"Bad test: unknown verification flag '\" << word << \"'\");\n@@ -126,7 +126,7 @@ BOOST_AUTO_TEST_CASE(tx_valid)\n                     fValid = false;\n                     break;\n                 }\n-                UniValue vinput = input.get_array();\n+                const UniValue& vinput = input.get_array();\n                 if (vinput.size() < 3 || vinput.size() > 4)\n                 {\n                     fValid = false;\n@@ -213,7 +213,7 @@ BOOST_AUTO_TEST_CASE(tx_invalid)\n                     fValid = false;\n                     break;\n                 }\n-                UniValue vinput = input.get_array();\n+                const UniValue& vinput = input.get_array();\n                 if (vinput.size() < 3 || vinput.size() > 4)\n                 {\n                     fValid = false;"
      },
      {
        "sha": "515efaf481f4c43fcb11c9d115f79e8c294329ba",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -259,7 +259,7 @@ bool CBlockTreeDB::ReadFlag(const std::string &name, bool &fValue) {\n     return true;\n }\n \n-bool CBlockTreeDB::LoadBlockIndexGuts(const Consensus::Params& consensusParams, std::function<CBlockIndex*(const uint256&)> insertBlockIndex)\n+bool CBlockTreeDB::LoadBlockIndexGuts(const Consensus::Params& consensusParams, const std::function<CBlockIndex*(const uint256&)>& insertBlockIndex)\n {\n     std::unique_ptr<CDBIterator> pcursor(NewIterator());\n "
      },
      {
        "sha": "677a4c4b3c60f2c37188697418b70ca3b370a304",
        "filename": "src/txdb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/txdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/txdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.h?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -123,7 +123,7 @@ class CBlockTreeDB : public CDBWrapper\n     bool WriteTxIndex(const std::vector<std::pair<uint256, CDiskTxPos> > &vect);\n     bool WriteFlag(const std::string &name, bool fValue);\n     bool ReadFlag(const std::string &name, bool &fValue);\n-    bool LoadBlockIndexGuts(const Consensus::Params& consensusParams, std::function<CBlockIndex*(const uint256&)> insertBlockIndex);\n+    bool LoadBlockIndexGuts(const Consensus::Params& consensusParams, const std::function<CBlockIndex*(const uint256&)>& insertBlockIndex);\n };\n \n #endif // BITCOIN_TXDB_H"
      },
      {
        "sha": "024211a55c69941827cdabd57bcb08445f53b418",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -657,7 +657,7 @@ void CreatePidFile(const fs::path &path, pid_t pid)\n }\n #endif\n \n-bool RenameOver(fs::path src, fs::path dest)\n+bool RenameOver(const fs::path& src, const fs::path& dest)\n {\n #ifdef WIN32\n     return MoveFileExA(src.string().c_str(), dest.string().c_str(),"
      },
      {
        "sha": "1ba1136f16810dbc44b0b6d86f8269a7e3b023a7",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -172,7 +172,7 @@ void FileCommit(FILE *file);\n bool TruncateFile(FILE *file, unsigned int length);\n int RaiseFileDescriptorLimit(int nMinFD);\n void AllocateFileRange(FILE *file, unsigned int offset, unsigned int length);\n-bool RenameOver(fs::path src, fs::path dest);\n+bool RenameOver(const fs::path& src, const fs::path& dest);\n bool TryCreateDirectories(const fs::path& p);\n fs::path GetDefaultDataDir();\n const fs::path &GetDataDir(bool fNetSpecific = true);"
      },
      {
        "sha": "07187e8df618a88833d9aeece5b634d19161a864",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -636,7 +636,7 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n         view.SetBackend(viewMemPool);\n \n         // do all inputs exist?\n-        for (const CTxIn txin : tx.vin) {\n+        for (const CTxIn& txin : tx.vin) {\n             if (!pcoinsTip->HaveCoinInCache(txin.prevout)) {\n                 coins_to_uncache.push_back(txin.prevout);\n             }\n@@ -3391,7 +3391,7 @@ bool CChainState::AcceptBlock(const std::shared_ptr<const CBlock>& pblock, CVali\n     return true;\n }\n \n-bool ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<const CBlock> pblock, bool fForceProcessing, bool *fNewBlock)\n+bool ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<const CBlock>& pblock, bool fForceProcessing, bool *fNewBlock)\n {\n     AssertLockNotHeld(cs_main);\n "
      },
      {
        "sha": "a683540fcac8033b356325ffa1f99253d9564abb",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -238,7 +238,7 @@ static const uint64_t MIN_DISK_SPACE_FOR_BLOCK_FILES = 550 * 1024 * 1024;\n  * @param[out]  fNewBlock A boolean which is set to indicate if the block was first received via this call\n  * @return True if state.IsValid()\n  */\n-bool ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<const CBlock> pblock, bool fForceProcessing, bool* fNewBlock);\n+bool ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<const CBlock>& pblock, bool fForceProcessing, bool* fNewBlock);\n \n /**\n  * Process incoming block headers."
      },
      {
        "sha": "14bc8f1319f093f63b474431622ab5d609774932",
        "filename": "src/validationinterface.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/validationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/validationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -130,7 +130,7 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n-void CMainSignals::MempoolEntryRemoved(CTransactionRef ptx, MemPoolRemovalReason reason) {\n+void CMainSignals::MempoolEntryRemoved(const CTransactionRef& ptx, MemPoolRemovalReason reason) {\n     if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n         m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n             m_internals->TransactionRemovedFromMempool(ptx);"
      },
      {
        "sha": "77daa2e755ec2f53363b88314d6de5e16e735df0",
        "filename": "src/validationinterface.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/validationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/validationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.h?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -131,7 +131,7 @@ class CMainSignals {\n     friend void ::UnregisterAllValidationInterfaces();\n     friend void ::CallFunctionInValidationInterfaceQueue(std::function<void ()> func);\n \n-    void MempoolEntryRemoved(CTransactionRef tx, MemPoolRemovalReason reason);\n+    void MempoolEntryRemoved(const CTransactionRef& tx, MemPoolRemovalReason reason);\n \n public:\n     /** Register a CScheduler to give callbacks which should run in the background (may only be called once) */"
      },
      {
        "sha": "ed8359808f28a98ff47cb8b074d9b4608287f3a3",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -34,6 +34,8 @@\n \n #include <univalue.h>\n \n+#include <utility>\n+\n static const std::string WALLET_ENDPOINT_BASE = \"/wallet/\";\n \n CWallet *GetWalletForJSONRPCRequest(const JSONRPCRequest& request)\n@@ -188,7 +190,7 @@ UniValue getnewaddress(const JSONRPCRequest& request)\n CTxDestination GetAccountDestination(CWallet* const pwallet, std::string strAccount, bool bForceNew=false)\n {\n     CTxDestination dest;\n-    if (!pwallet->GetAccountDestination(dest, strAccount, bForceNew)) {\n+    if (!pwallet->GetAccountDestination(dest, std::move(strAccount), bForceNew)) {\n         throw JSONRPCError(RPC_WALLET_KEYPOOL_RAN_OUT, \"Error: Keypool ran out, please call keypoolrefill first\");\n     }\n "
      },
      {
        "sha": "09693eb01533d12f664cc0d1b67497bd9f3c4944",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -68,7 +68,7 @@ static void empty_wallet(void)\n     wtxn.clear();\n }\n \n-static bool equal_sets(CoinSet a, CoinSet b)\n+static bool equal_sets(const CoinSet& a, const CoinSet& b)\n {\n     std::pair<CoinSet::iterator, CoinSet::iterator> ret = mismatch(a.begin(), a.end(), b.begin());\n     return ret.first == a.end() && ret.second == b.end();\n@@ -618,7 +618,7 @@ class ListCoinsTestingSetup : public TestChain100Setup\n         ::bitdb.Reset();\n     }\n \n-    CWalletTx& AddTx(CRecipient recipient)\n+    CWalletTx& AddTx(const CRecipient& recipient)\n     {\n         CWalletTx wtx;\n         CReserveKey reservekey(wallet.get());"
      },
      {
        "sha": "9ac1ad5e4ade844ab1e965a3590711790b4bb423",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -789,7 +789,7 @@ int64_t CWallet::IncOrderPosNext(CWalletDB *pwalletdb)\n     return nRet;\n }\n \n-bool CWallet::AccountMove(std::string strFrom, std::string strTo, CAmount nAmount, std::string strComment)\n+bool CWallet::AccountMove(const std::string& strFrom, const std::string& strTo, CAmount nAmount, const std::string& strComment)\n {\n     CWalletDB walletdb(*dbw);\n     if (!walletdb.TxnBegin())\n@@ -823,7 +823,7 @@ bool CWallet::AccountMove(std::string strFrom, std::string strTo, CAmount nAmoun\n     return true;\n }\n \n-bool CWallet::GetAccountDestination(CTxDestination &dest, std::string strAccount, bool bForceNew)\n+bool CWallet::GetAccountDestination(CTxDestination &dest, const std::string& strAccount, bool bForceNew)\n {\n     CWalletDB walletdb(*dbw);\n \n@@ -3534,7 +3534,7 @@ std::set< std::set<CTxDestination> > CWallet::GetAddressGroupings()\n         // make a set of all the groups hit by this new group\n         std::set< std::set<CTxDestination>* > hits;\n         std::map< CTxDestination, std::set<CTxDestination>* >::iterator it;\n-        for (CTxDestination address : _grouping)\n+        for (const CTxDestination& address : _grouping)\n             if ((it = setmap.find(address)) != setmap.end())\n                 hits.insert((*it).second);\n \n@@ -3549,7 +3549,7 @@ std::set< std::set<CTxDestination> > CWallet::GetAddressGroupings()\n         uniqueGroupings.insert(merged);\n \n         // update setmap\n-        for (CTxDestination element : *merged)\n+        for (const CTxDestination& element : *merged)\n             setmap[element] = merged;\n     }\n \n@@ -3853,7 +3853,7 @@ std::vector<std::string> CWallet::GetDestValues(const std::string& prefix) const\n     return values;\n }\n \n-CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n+CWallet* CWallet::CreateWalletFromFile(const std::string& walletFile)\n {\n     // needed to restore wallet transaction meta data after -zapwallettxes\n     std::vector<CWalletTx> vWtx;"
      },
      {
        "sha": "1b1b482cf90fdae1b78b4cb090657e4f58adbfca",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b460242a36c7d2398ab840777653fe24f425c23e/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b460242a36c7d2398ab840777653fe24f425c23e/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=b460242a36c7d2398ab840777653fe24f425c23e",
        "patch": "@@ -935,8 +935,8 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n      */\n     int64_t IncOrderPosNext(CWalletDB *pwalletdb = nullptr);\n     DBErrors ReorderTransactions();\n-    bool AccountMove(std::string strFrom, std::string strTo, CAmount nAmount, std::string strComment = \"\");\n-    bool GetAccountDestination(CTxDestination &dest, std::string strAccount, bool bForceNew = false);\n+    bool AccountMove(const std::string& strFrom, const std::string& strTo, CAmount nAmount, const std::string& strComment = \"\");\n+    bool GetAccountDestination(CTxDestination &dest, const std::string& strAccount, bool bForceNew = false);\n \n     void MarkDirty();\n     bool AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose=true);\n@@ -1109,7 +1109,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     bool MarkReplaced(const uint256& originalHash, const uint256& newHash);\n \n     /* Initializes the wallet, returns a new CWallet instance or a null pointer in case of an error */\n-    static CWallet* CreateWalletFromFile(const std::string walletFile);\n+    static CWallet* CreateWalletFromFile(const std::string& walletFile);\n \n     /**\n      * Wallet post-init setup"
      }
    ]
  },
  {
    "sha": "7a385e8e7205e2e74fae12ade1fedd4d280a5839",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YTM4NWU4ZTcyMDVlMmU3NGZhZTEyYWRlMWZlZGQ0ZDI4MGE1ODM5",
    "commit": {
      "author": {
        "name": "Alin Rus",
        "email": "alin@fsck.ro",
        "date": "2018-01-11T21:35:18Z"
      },
      "committer": {
        "name": "Alin Rus",
        "email": "alin@fsck.ro",
        "date": "2018-01-11T21:35:18Z"
      },
      "message": "Remove shared_ptr from mining interface.",
      "tree": {
        "sha": "be30f8db3065243151f77dc7a54395251cc6dbb4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/be30f8db3065243151f77dc7a54395251cc6dbb4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7a385e8e7205e2e74fae12ade1fedd4d280a5839",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a385e8e7205e2e74fae12ade1fedd4d280a5839",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7a385e8e7205e2e74fae12ade1fedd4d280a5839",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a385e8e7205e2e74fae12ade1fedd4d280a5839/comments",
    "author": {
      "login": "flipbitsnotburgers",
      "id": 48412190,
      "node_id": "MDQ6VXNlcjQ4NDEyMTkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/48412190?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flipbitsnotburgers",
      "html_url": "https://github.com/flipbitsnotburgers",
      "followers_url": "https://api.github.com/users/flipbitsnotburgers/followers",
      "following_url": "https://api.github.com/users/flipbitsnotburgers/following{/other_user}",
      "gists_url": "https://api.github.com/users/flipbitsnotburgers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flipbitsnotburgers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flipbitsnotburgers/subscriptions",
      "organizations_url": "https://api.github.com/users/flipbitsnotburgers/orgs",
      "repos_url": "https://api.github.com/users/flipbitsnotburgers/repos",
      "events_url": "https://api.github.com/users/flipbitsnotburgers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flipbitsnotburgers/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "flipbitsnotburgers",
      "id": 48412190,
      "node_id": "MDQ6VXNlcjQ4NDEyMTkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/48412190?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flipbitsnotburgers",
      "html_url": "https://github.com/flipbitsnotburgers",
      "followers_url": "https://api.github.com/users/flipbitsnotburgers/followers",
      "following_url": "https://api.github.com/users/flipbitsnotburgers/following{/other_user}",
      "gists_url": "https://api.github.com/users/flipbitsnotburgers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flipbitsnotburgers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flipbitsnotburgers/subscriptions",
      "organizations_url": "https://api.github.com/users/flipbitsnotburgers/orgs",
      "repos_url": "https://api.github.com/users/flipbitsnotburgers/repos",
      "events_url": "https://api.github.com/users/flipbitsnotburgers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flipbitsnotburgers/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b460242a36c7d2398ab840777653fe24f425c23e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b460242a36c7d2398ab840777653fe24f425c23e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b460242a36c7d2398ab840777653fe24f425c23e"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 14,
      "deletions": 13
    },
    "files": [
      {
        "sha": "a3343ff85343baa83ef6477d3800265e7c2acc0c",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a385e8e7205e2e74fae12ade1fedd4d280a5839/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a385e8e7205e2e74fae12ade1fedd4d280a5839/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=7a385e8e7205e2e74fae12ade1fedd4d280a5839",
        "patch": "@@ -20,6 +20,7 @@\n #include <rpc/blockchain.h>\n #include <rpc/mining.h>\n #include <rpc/server.h>\n+#include <script/script.h>\n #include <txmempool.h>\n #include <util.h>\n #include <utilstrencodings.h>\n@@ -103,7 +104,7 @@ UniValue getnetworkhashps(const JSONRPCRequest& request)\n     return GetNetworkHashPS(!request.params[0].isNull() ? request.params[0].get_int() : 120, !request.params[1].isNull() ? request.params[1].get_int() : -1);\n }\n \n-UniValue generateBlocks(const std::shared_ptr<CReserveScript>& coinbaseScript, int nGenerate, uint64_t nMaxTries, bool keepScript)\n+UniValue generateBlocks(CReserveScript* coinbaseScript, int nGenerate, uint64_t nMaxTries, bool keepScript)\n {\n     static const int nInnerLoopCount = 0x10000;\n     int nHeightEnd = 0;\n@@ -179,10 +180,10 @@ UniValue generatetoaddress(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Error: Invalid address\");\n     }\n \n-    std::shared_ptr<CReserveScript> coinbaseScript = std::make_shared<CReserveScript>();\n+    std::unique_ptr<CReserveScript> coinbaseScript(new CReserveScript);\n     coinbaseScript->reserveScript = GetScriptForDestination(destination);\n \n-    return generateBlocks(coinbaseScript, nGenerate, nMaxTries, false);\n+    return generateBlocks(coinbaseScript.get(), nGenerate, nMaxTries, false);\n }\n \n UniValue getmininginfo(const JSONRPCRequest& request)"
      },
      {
        "sha": "c72a1054974d41bc06c6b739baf194c4fcd450ee",
        "filename": "src/rpc/mining.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a385e8e7205e2e74fae12ade1fedd4d280a5839/src/rpc/mining.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a385e8e7205e2e74fae12ade1fedd4d280a5839/src/rpc/mining.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.h?ref=7a385e8e7205e2e74fae12ade1fedd4d280a5839",
        "patch": "@@ -5,12 +5,12 @@\n #ifndef BITCOIN_RPC_MINING_H\n #define BITCOIN_RPC_MINING_H\n \n-#include <script/script.h>\n-\n #include <univalue.h>\n \n+class CReserveScript;\n+\n /** Generate blocks (mine) */\n-UniValue generateBlocks(const std::shared_ptr<CReserveScript>& coinbaseScript, int nGenerate, uint64_t nMaxTries, bool keepScript);\n+UniValue generateBlocks(CReserveScript* coinbaseScript, int nGenerate, uint64_t nMaxTries, bool keepScript);\n \n /** Check bounds on a command line confirm target */\n unsigned int ParseConfirmTarget(const UniValue& value);"
      },
      {
        "sha": "0d0c40629e2aa3e297d44149c3b116299aa0d3fa",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a385e8e7205e2e74fae12ade1fedd4d280a5839/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a385e8e7205e2e74fae12ade1fedd4d280a5839/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=7a385e8e7205e2e74fae12ade1fedd4d280a5839",
        "patch": "@@ -3359,7 +3359,7 @@ UniValue generate(const JSONRPCRequest& request)\n         max_tries = request.params[1].get_int();\n     }\n \n-    std::shared_ptr<CReserveScript> coinbase_script;\n+    std::unique_ptr<CReserveScript> coinbase_script;\n     pwallet->GetScriptForMining(coinbase_script);\n \n     // If the keypool is exhausted, no script is returned at all.  Catch this.\n@@ -3372,7 +3372,7 @@ UniValue generate(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_INTERNAL_ERROR, \"No coinbase script available\");\n     }\n \n-    return generateBlocks(coinbase_script, num_generate, max_tries, true);\n+    return generateBlocks(coinbase_script.get(), num_generate, max_tries, true);\n }\n \n UniValue rescanblockchain(const JSONRPCRequest& request)"
      },
      {
        "sha": "27aa01d05b9b70cb1430285711086b4fb4413a87",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a385e8e7205e2e74fae12ade1fedd4d280a5839/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a385e8e7205e2e74fae12ade1fedd4d280a5839/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=7a385e8e7205e2e74fae12ade1fedd4d280a5839",
        "patch": "@@ -3636,14 +3636,14 @@ void CWallet::MarkReserveKeysAsUsed(int64_t keypool_id)\n     }\n }\n \n-void CWallet::GetScriptForMining(std::shared_ptr<CReserveScript> &script)\n+void CWallet::GetScriptForMining(std::unique_ptr<CReserveScript>& script)\n {\n-    std::shared_ptr<CReserveKey> rKey = std::make_shared<CReserveKey>(this);\n+    std::unique_ptr<CReserveKey> rKey(new CReserveKey(this));\n     CPubKey pubkey;\n     if (!rKey->GetReservedKey(pubkey))\n         return;\n \n-    script = rKey;\n+    script.reset(rKey.release());\n     script->reserveScript = CScript() << ToByteVector(pubkey) << OP_CHECKSIG;\n }\n "
      },
      {
        "sha": "11c4b31dad4eb7259a710a3d9d4e31e7a780362e",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a385e8e7205e2e74fae12ade1fedd4d280a5839/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a385e8e7205e2e74fae12ade1fedd4d280a5839/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=7a385e8e7205e2e74fae12ade1fedd4d280a5839",
        "patch": "@@ -1046,8 +1046,8 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n         }\n     }\n \n-    void GetScriptForMining(std::shared_ptr<CReserveScript> &script);\n-    \n+    void GetScriptForMining(std::unique_ptr<CReserveScript>& script);\n+\n     unsigned int GetKeyPoolSize()\n     {\n         AssertLockHeld(cs_wallet); // set{Ex,In}ternalKeyPool"
      }
    ]
  }
]