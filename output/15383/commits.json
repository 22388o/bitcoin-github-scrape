[
  {
    "sha": "fa178a6385bf300499fb18940051fc4142fb5b6b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTE3OGE2Mzg1YmYzMDA0OTlmYjE4OTQwMDUxZmM0MTQyZmI1YjZi",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-02-11T16:59:34Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-02-12T16:34:57Z"
      },
      "message": "[rpc] mining: Omit uninitialized currentblockweight, currentblocktx",
      "tree": {
        "sha": "65c7d92724a4d7b91c06c4a6b9d0eaf3e37189ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/65c7d92724a4d7b91c06c4a6b9d0eaf3e37189ad"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa178a6385bf300499fb18940051fc4142fb5b6b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJcYvWxAAoJEM4rdWl+aaVIdtsL/iBDWp5bfelPkjCo0fVyPcWh\n3w/3JAx5urwz7AeCeFdXiDocfgGRbIPPH/PNaHjA+4MR3LG9OiVJF7eHhrJgSt7V\nckDzebF7kGUq+gLIUMSlhH8UpVJ81C+gsg9UWodK+yDQrYtlP4lOjkoNR641TGG4\nHPrw8RLRepK1hvun1oBAuPmLMbMrFC2KdIJjRnd4kBlfc+gke0XzLJXLOVilMJOP\n6wEdmuw5OSxjQWP1dAne0WnHxNbVkv/GhPFnGkZ8GnZrKk/uQg8F/IbElorCtXoo\nXmrN+9ImYmbdDe/N1ZaXZX3y9z1WwF+uXxZCaYVMZ0L2pbe6TJ+fG2GSf4NuBuJc\nf2gs0ud+5cwtTcXs0WMv4MJx44CmyYFsSklbkLEiAeRozbw7eW4+PeCebk+5aOa1\nk14Y1KVaInNLdeJGe/tdoGvJgVCwaJJVmfEAeQDiqfGHj1StQYoqqqiGc0r5ZOHy\n8L4oPvoXafgO3fRn0GoXbA16tY8jlkEVp5L8YWTfOA==\n=mra4\n-----END PGP SIGNATURE-----",
        "payload": "tree 65c7d92724a4d7b91c06c4a6b9d0eaf3e37189ad\nparent ad039aa0d3e8a831559434022b1da1de4d72a847\nauthor MarcoFalke <falke.marco@gmail.com> 1549904374 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1549989297 -0500\n\n[rpc] mining: Omit uninitialized currentblockweight, currentblocktx\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa178a6385bf300499fb18940051fc4142fb5b6b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa178a6385bf300499fb18940051fc4142fb5b6b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa178a6385bf300499fb18940051fc4142fb5b6b/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ad039aa0d3e8a831559434022b1da1de4d72a847",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad039aa0d3e8a831559434022b1da1de4d72a847",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ad039aa0d3e8a831559434022b1da1de4d72a847"
      }
    ],
    "stats": {
      "total": 101,
      "additions": 62,
      "deletions": 39
    },
    "files": [
      {
        "sha": "a6408cf1e6b73fb6c713be2bbfae9164315f527c",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa178a6385bf300499fb18940051fc4142fb5b6b/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa178a6385bf300499fb18940051fc4142fb5b6b/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=fa178a6385bf300499fb18940051fc4142fb5b6b",
        "patch": "@@ -263,6 +263,9 @@ in the Low-level Changes section below.\n \n - See the [Mining](#mining) section for changes to `getblocktemplate`.\n \n+- The `getmininginfo` RPC now omits `currentblockweight` and `currentblocktx`\n+  when a block was never assembled via RPC on this node.\n+\n - The `getrawtransaction` RPC & REST endpoints no longer check the\n   unspent UTXO set for a transaction. The remaining behaviors are as\n   follows: 1. If a blockhash is provided, check the corresponding block."
      },
      {
        "sha": "80a2f8f018073a7bf6f81009feb364850141178e",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 13,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa178a6385bf300499fb18940051fc4142fb5b6b/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa178a6385bf300499fb18940051fc4142fb5b6b/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=fa178a6385bf300499fb18940051fc4142fb5b6b",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2018 The Bitcoin Core developers\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -10,8 +10,8 @@\n #include <chainparams.h>\n #include <coins.h>\n #include <consensus/consensus.h>\n-#include <consensus/tx_verify.h>\n #include <consensus/merkle.h>\n+#include <consensus/tx_verify.h>\n #include <consensus/validation.h>\n #include <hash.h>\n #include <net.h>\n@@ -21,22 +21,14 @@\n #include <primitives/transaction.h>\n #include <script/standard.h>\n #include <timedata.h>\n-#include <util/system.h>\n #include <util/moneystr.h>\n+#include <util/system.h>\n #include <validationinterface.h>\n \n #include <algorithm>\n #include <queue>\n #include <utility>\n \n-// Unconfirmed transactions in the memory pool often depend on other\n-// transactions in the memory pool. When we select transactions from the\n-// pool, we select by highest fee rate of a transaction combined with all\n-// its ancestors.\n-\n-uint64_t nLastBlockTx = 0;\n-uint64_t nLastBlockWeight = 0;\n-\n int64_t UpdateTime(CBlockHeader* pblock, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev)\n {\n     int64_t nOldTime = pblock->nTime;\n@@ -95,6 +87,9 @@ void BlockAssembler::resetBlock()\n     nFees = 0;\n }\n \n+Optional<int64_t> BlockAssembler::m_last_block_num_txs{nullopt};\n+Optional<int64_t> BlockAssembler::m_last_block_weight{nullopt};\n+\n std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& scriptPubKeyIn)\n {\n     int64_t nTimeStart = GetTimeMicros();\n@@ -147,8 +142,8 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& sc\n \n     int64_t nTime1 = GetTimeMicros();\n \n-    nLastBlockTx = nBlockTx;\n-    nLastBlockWeight = nBlockWeight;\n+    m_last_block_num_txs = nBlockTx;\n+    m_last_block_weight = nBlockWeight;\n \n     // Create coinbase transaction.\n     CMutableTransaction coinbaseTx;"
      },
      {
        "sha": "7c4c455072ed660fdf04cf6231876e5ac0f619af",
        "filename": "src/miner.h",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa178a6385bf300499fb18940051fc4142fb5b6b/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa178a6385bf300499fb18940051fc4142fb5b6b/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=fa178a6385bf300499fb18940051fc4142fb5b6b",
        "patch": "@@ -1,17 +1,19 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2018 The Bitcoin Core developers\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #ifndef BITCOIN_MINER_H\n #define BITCOIN_MINER_H\n \n+#include <optional.h>\n #include <primitives/block.h>\n #include <txmempool.h>\n #include <validation.h>\n \n-#include <stdint.h>\n #include <memory>\n+#include <stdint.h>\n+\n #include <boost/multi_index_container.hpp>\n #include <boost/multi_index/ordered_index.hpp>\n \n@@ -159,6 +161,9 @@ class BlockAssembler\n     /** Construct a new block template with coinbase to scriptPubKeyIn */\n     std::unique_ptr<CBlockTemplate> CreateNewBlock(const CScript& scriptPubKeyIn);\n \n+    static Optional<int64_t> m_last_block_num_txs;\n+    static Optional<int64_t> m_last_block_weight;\n+\n private:\n     // utility functions\n     /** Clear the block's state and prepare for assembling a new block */"
      },
      {
        "sha": "3cdda5123ceb789c87e0a41e9ff00a6b7075cf51",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa178a6385bf300499fb18940051fc4142fb5b6b/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa178a6385bf300499fb18940051fc4142fb5b6b/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=fa178a6385bf300499fb18940051fc4142fb5b6b",
        "patch": "@@ -187,36 +187,36 @@ static UniValue generatetoaddress(const JSONRPCRequest& request)\n \n static UniValue getmininginfo(const JSONRPCRequest& request)\n {\n-    if (request.fHelp || request.params.size() != 0)\n+    if (request.fHelp || request.params.size() != 0) {\n         throw std::runtime_error(\n             RPCHelpMan{\"getmininginfo\",\n                 \"\\nReturns a json object containing mining-related information.\",\n                 {},\n                 RPCResult{\n-            \"{\\n\"\n-            \"  \\\"blocks\\\": nnn,             (numeric) The current block\\n\"\n-            \"  \\\"currentblockweight\\\": nnn, (numeric) The last block weight\\n\"\n-            \"  \\\"currentblocktx\\\": nnn,     (numeric) The last block transaction\\n\"\n-            \"  \\\"difficulty\\\": xxx.xxxxx    (numeric) The current difficulty\\n\"\n-            \"  \\\"networkhashps\\\": nnn,      (numeric) The network hashes per second\\n\"\n-            \"  \\\"pooledtx\\\": n              (numeric) The size of the mempool\\n\"\n-            \"  \\\"chain\\\": \\\"xxxx\\\",           (string) current network name as defined in BIP70 (main, test, regtest)\\n\"\n-            \"  \\\"warnings\\\": \\\"...\\\"          (string) any network and blockchain warnings\\n\"\n-            \"}\\n\"\n+                    \"{\\n\"\n+                    \"  \\\"blocks\\\": nnn,             (numeric) The current block\\n\"\n+                    \"  \\\"currentblockweight\\\": nnn, (numeric, optional) The block weight of the last assembled block (only present if a block was ever assembled)\\n\"\n+                    \"  \\\"currentblocktx\\\": nnn,     (numeric, optional) The number of block transactions of the last assembled block (only present if a block was ever assembled)\\n\"\n+                    \"  \\\"difficulty\\\": xxx.xxxxx    (numeric) The current difficulty\\n\"\n+                    \"  \\\"networkhashps\\\": nnn,      (numeric) The network hashes per second\\n\"\n+                    \"  \\\"pooledtx\\\": n              (numeric) The size of the mempool\\n\"\n+                    \"  \\\"chain\\\": \\\"xxxx\\\",           (string) current network name as defined in BIP70 (main, test, regtest)\\n\"\n+                    \"  \\\"warnings\\\": \\\"...\\\"          (string) any network and blockchain warnings\\n\"\n+                    \"}\\n\"\n                 },\n                 RPCExamples{\n                     HelpExampleCli(\"getmininginfo\", \"\")\n             + HelpExampleRpc(\"getmininginfo\", \"\")\n                 },\n             }.ToString());\n-\n+    }\n \n     LOCK(cs_main);\n \n     UniValue obj(UniValue::VOBJ);\n     obj.pushKV(\"blocks\",           (int)chainActive.Height());\n-    obj.pushKV(\"currentblockweight\", (uint64_t)nLastBlockWeight);\n-    obj.pushKV(\"currentblocktx\",   (uint64_t)nLastBlockTx);\n+    if (BlockAssembler::m_last_block_weight) obj.pushKV(\"currentblockweight\", *BlockAssembler::m_last_block_weight);\n+    if (BlockAssembler::m_last_block_num_txs) obj.pushKV(\"currentblocktx\", *BlockAssembler::m_last_block_num_txs);\n     obj.pushKV(\"difficulty\",       (double)GetDifficulty(chainActive.Tip()));\n     obj.pushKV(\"networkhashps\",    getnetworkhashps(request));\n     obj.pushKV(\"pooledtx\",         (uint64_t)mempool.size());"
      },
      {
        "sha": "1975846b69f85bf9e663f0494021a9c80232182f",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa178a6385bf300499fb18940051fc4142fb5b6b/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa178a6385bf300499fb18940051fc4142fb5b6b/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=fa178a6385bf300499fb18940051fc4142fb5b6b",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2018 The Bitcoin Core developers\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -14,8 +14,8 @@\n #include <coins.h>\n #include <crypto/common.h> // for ReadLE64\n #include <fs.h>\n-#include <protocol.h> // For CMessageHeader::MessageStartChars\n #include <policy/feerate.h>\n+#include <protocol.h> // For CMessageHeader::MessageStartChars\n #include <script/script_error.h>\n #include <sync.h>\n #include <versionbits.h>\n@@ -152,8 +152,6 @@ extern CTxMemPool mempool;\n extern std::atomic_bool g_is_mempool_loaded;\n typedef std::unordered_map<uint256, CBlockIndex*, BlockHasher> BlockMap;\n extern BlockMap& mapBlockIndex GUARDED_BY(cs_main);\n-extern uint64_t nLastBlockTx;\n-extern uint64_t nLastBlockWeight;\n extern const std::string strMessageMagic;\n extern Mutex g_best_block_mutex;\n extern std::condition_variable g_best_block_cv;"
      },
      {
        "sha": "6298dde3a010ccdbf6cda23808d802e53b105bf3",
        "filename": "test/functional/mining_basic.py",
        "status": "modified",
        "additions": 23,
        "deletions": 5,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa178a6385bf300499fb18940051fc4142fb5b6b/test/functional/mining_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa178a6385bf300499fb18940051fc4142fb5b6b/test/functional/mining_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mining_basic.py?ref=fa178a6385bf300499fb18940051fc4142fb5b6b",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2018 The Bitcoin Core developers\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test mining RPCs\n@@ -11,7 +11,10 @@\n import copy\n from decimal import Decimal\n \n-from test_framework.blocktools import create_coinbase\n+from test_framework.blocktools import (\n+    create_coinbase,\n+    TIME_GENESIS_BLOCK,\n+)\n from test_framework.messages import (\n     CBlock,\n     CBlockHeader,\n@@ -24,9 +27,11 @@\n     assert_equal,\n     assert_raises_rpc_error,\n     bytes_to_hex_str as b2x,\n+    connect_nodes_bi,\n )\n from test_framework.script import CScriptNum\n \n+\n def assert_template(node, block, expect, rehash=True):\n     if rehash:\n         block.hashMerkleRoot = block.calc_merkle_root()\n@@ -37,9 +42,22 @@ def assert_template(node, block, expect, rehash=True):\n class MiningTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n-        self.setup_clean_chain = False\n+        self.setup_clean_chain = True\n+\n+    def mine_chain(self):\n+        self.log.info('Create some old blocks')\n+        for t in range(TIME_GENESIS_BLOCK, TIME_GENESIS_BLOCK + 200 * 600, 600):\n+            self.nodes[0].setmocktime(t)\n+            self.nodes[0].generate(1)\n+        mining_info = self.nodes[0].getmininginfo()\n+        assert_equal(mining_info['blocks'], 200)\n+        assert_equal(mining_info['currentblocktx'], 0)\n+        assert_equal(mining_info['currentblockweight'], 4000)\n+        self.restart_node(0)\n+        connect_nodes_bi(self.nodes, 0, 1)\n \n     def run_test(self):\n+        self.mine_chain()\n         node = self.nodes[0]\n \n         def assert_submitblock(block, result_str_1, result_str_2=None):\n@@ -52,8 +70,8 @@ def assert_submitblock(block, result_str_1, result_str_2=None):\n         mining_info = node.getmininginfo()\n         assert_equal(mining_info['blocks'], 200)\n         assert_equal(mining_info['chain'], 'regtest')\n-        assert_equal(mining_info['currentblocktx'], 0)\n-        assert_equal(mining_info['currentblockweight'], 0)\n+        assert 'currentblocktx' not in mining_info\n+        assert 'currentblockweight' not in mining_info\n         assert_equal(mining_info['difficulty'], Decimal('4.656542373906925E-10'))\n         assert_equal(mining_info['networkhashps'], Decimal('0.003333333333333334'))\n         assert_equal(mining_info['pooledtx'], 0)"
      },
      {
        "sha": "15f4502994da9a395e2d63873d018a79754c417e",
        "filename": "test/functional/test_framework/blocktools.py",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa178a6385bf300499fb18940051fc4142fb5b6b/test/functional/test_framework/blocktools.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa178a6385bf300499fb18940051fc4142fb5b6b/test/functional/test_framework/blocktools.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/blocktools.py?ref=fa178a6385bf300499fb18940051fc4142fb5b6b",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2018 The Bitcoin Core developers\n+# Copyright (c) 2015-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Utilities for manipulating blocks and transactions.\"\"\"\n@@ -43,9 +43,13 @@\n \n MAX_BLOCK_SIGOPS = 20000\n \n+# Genesis block time (regtest)\n+TIME_GENESIS_BLOCK = 1296688602\n+\n # From BIP141\n WITNESS_COMMITMENT_HEADER = b\"\\xaa\\x21\\xa9\\xed\"\n \n+\n def create_block(hashprev, coinbase, ntime=None, *, version=1):\n     \"\"\"Create a block (with regtest difficulty).\"\"\"\n     block = CBlock()"
      }
    ]
  }
]