sipa,2013-11-29T18:06:39Z,"Didn't test, but I really like this!\n",https://github.com/bitcoin/bitcoin/pull/3332#issuecomment-29530528,29530528,
ttys2,2013-12-01T06:32:07Z,"I have tested this patch. \n- Configure and compile passes on my system with `--disable-wallet` set. \n- Configure and compile passes on my system with `--disable-wallet` unset. \n- `disablewallet=0` and `--disable-wallet` causes no failure, the wallet remains disabled while `No wallet compiled in!` is printed to the debug log. \n",https://github.com/bitcoin/bitcoin/pull/3332#issuecomment-29568376,29568376,
laanwj,2013-12-01T08:25:21Z,Thanks for testing @ttys2\n,https://github.com/bitcoin/bitcoin/pull/3332#issuecomment-29569453,29569453,
BitcoinPullTester,2013-12-04T12:21:34Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5094f8d46fe3a0f0bcee913d6f1586dcef35749e for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/3332#issuecomment-29800324,29800324,
sipa,2013-12-07T16:49:03Z,"ACK, seems to work fine.\n",https://github.com/bitcoin/bitcoin/pull/3332#issuecomment-30058955,30058955,
sipa,2013-11-29T18:03:57Z,Do you need keystore and crypter without wallet?\n,https://github.com/bitcoin/bitcoin/pull/3332#discussion_r8006263,8006263,src/Makefile.am
sipa,2013-11-29T18:06:18Z,"I don't think this really belongs in util; why can't it stay in init? Alternatively, some common.cpp or so?\n",https://github.com/bitcoin/bitcoin/pull/3332#discussion_r8006281,8006281,src/util.cpp
laanwj,2013-11-29T18:38:54Z,"Yes, at least if we want signrawtransaction, which creates a local keystore. In turn, this depends on crypter.\n",https://github.com/bitcoin/bitcoin/pull/3332#discussion_r8006603,8006603,src/Makefile.am
laanwj,2013-11-29T18:45:23Z,"It can't stay in init because bitcoin-cli uses the function, and putting init.cpp in libbitcoin_common would not make sense as it's really part of the server (and would pull in a lot of other stuff...).\n\nI'm fine with a common.cpp, but didn't want to create a new file for one function. Maybe some other things from util.cpp could be moved there as well.\n",https://github.com/bitcoin/bitcoin/pull/3332#discussion_r8006659,8006659,src/util.cpp
laanwj,2013-11-29T18:48:13Z,"Also: after dropping the -cli functionality from bitcoind, which will happen eventually but not yet, we can stop pretending this is common functionality and simply copy the function (as few options will apply to both)\n",https://github.com/bitcoin/bitcoin/pull/3332#discussion_r8006684,8006684,src/util.cpp
sipa,2013-11-30T00:07:38Z,You could move CCryptoKeyStore to crypter to break the dependency of rawtransaction on crypter.\n,https://github.com/bitcoin/bitcoin/pull/3332#discussion_r8009258,8009258,src/Makefile.am
laanwj,2013-11-30T05:10:43Z,"Ok, good point, done\n",https://github.com/bitcoin/bitcoin/pull/3332#discussion_r8010057,8010057,src/Makefile.am
laanwj,2013-11-30T05:21:17Z,"I have a possible solution for this too: split up the help function and put a part  in rpcclient.cpp and a part in init.cpp. Bitcoind can call both for now to get all the options.\n\nThat reminds me, there are some wallet-specific options as well. We don't want to show them in --disable-wallet builds.\n",https://github.com/bitcoin/bitcoin/pull/3332#discussion_r8010088,8010088,src/util.cpp
