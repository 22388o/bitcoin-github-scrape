[
  {
    "sha": "fa5d709fb266c97d4db15006bf855e887a6c123b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTVkNzA5ZmIyNjZjOTdkNGRiMTUwMDZiZjg1NWU4ODdhNmMxMjNi",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-17T18:33:58Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-01-03T12:03:46Z"
      },
      "message": "ci: Move wrap-qemu into separate script",
      "tree": {
        "sha": "dc1f7479478a06d71a5db5fdc14b9d2742f7d7b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dc1f7479478a06d71a5db5fdc14b9d2742f7d7b5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa5d709fb266c97d4db15006bf855e887a6c123b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgdQQv/dItWmLNEjU3Ad3GnUsqWW7W7SwjyBO67JSXEpA2+Tkm0hBWQaGbn1TC3\nUEJRz5GeL2+kjIbp3IT9wHoQErMv6gd4Dxxh4uWcqTMj/INqm9+VFBxvMMvyC161\njfR2/SBhMbY9uDnLl3EmVYUuH7h/z5DJTu8uKEZJvlBWQrvCIay5bm+gjOB7G52Q\nt88RXPFiiTM99gUQWbxGKQHZBkttbWTXNvoi7RXJOCY2TFtBCvXPwclcPa+UBst3\nR1BFNBRfTTlX73e96cxYoIsOll8byLExVzkPaGy5aLD4fgez8/1SoQRDrnbmgGvk\nqv2xVTHRdWrCOeLFJA2juErttkxcmhRBLMT71qalPVONH/Dfvc1a2inN2NS1jm8g\nsh5g+uOYw3OcA09XL9PmDKE5lqxW7WLo0f3gGPVoRrm2+aVvrolRPvHDhgD5d4Wv\ny/NgVS0T+5qDUVleIsi4D8fc+1iC+yq75HBzvHmBo7n9qBELvXltwXTtki0rDOJz\nWwIO8lH7\n=Ezwa\n-----END PGP SIGNATURE-----",
        "payload": "tree dc1f7479478a06d71a5db5fdc14b9d2742f7d7b5\nparent 890eac8f8286496bbae664792cd2a1e56991c669\nauthor MarcoFalke <falke.marco@gmail.com> 1576607638 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1578053026 -0500\n\nci: Move wrap-qemu into separate script\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa5d709fb266c97d4db15006bf855e887a6c123b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa5d709fb266c97d4db15006bf855e887a6c123b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa5d709fb266c97d4db15006bf855e887a6c123b/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "890eac8f8286496bbae664792cd2a1e56991c669",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/890eac8f8286496bbae664792cd2a1e56991c669",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/890eac8f8286496bbae664792cd2a1e56991c669"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 19,
      "deletions": 10
    },
    "files": [
      {
        "sha": "139894e7c6fdc795561aa2115313e7200d79139b",
        "filename": "ci/test/06_script_b.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 10,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5d709fb266c97d4db15006bf855e887a6c123b/ci/test/06_script_b.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5d709fb266c97d4db15006bf855e887a6c123b/ci/test/06_script_b.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_b.sh?ref=fa5d709fb266c97d4db15006bf855e887a6c123b",
        "patch": "@@ -11,16 +11,7 @@ if [ -n \"$QEMU_USER_CMD\" ]; then\n   # Generate all binaries, so that they can be wrapped\n   DOCKER_EXEC make $MAKEJOBS -C src/secp256k1 VERBOSE=1\n   DOCKER_EXEC make $MAKEJOBS -C src/univalue VERBOSE=1\n-  for b_name in {\"${BASE_OUTDIR}/bin\"/*,src/secp256k1/*tests,src/univalue/{no_nul,test_json,unitester,object}}; do\n-    # shellcheck disable=SC2044\n-    for b in $(find \"${BASE_ROOT_DIR}\" -executable -type f -name $(basename $b_name)); do\n-      echo \"Wrap $b ...\"\n-      DOCKER_EXEC mv \"$b\" \"${b}_orig\"\n-      DOCKER_EXEC echo \"\\#\\!/usr/bin/env bash\" \\> \"$b\"\n-      DOCKER_EXEC echo \"$QEMU_USER_CMD \\\\\\\"${b}_orig\\\\\\\" \\\\\\\"\\\\\\$@\\\\\\\"\" \\>\\> \"$b\"\n-      DOCKER_EXEC chmod +x \"$b\"\n-    done\n-  done\n+  DOCKER_EXEC \"${BASE_ROOT_DIR}/ci/test/wrap-qemu.sh\"\n   END_FOLD\n fi\n "
      },
      {
        "sha": "f1d30887482a5b374c2ef3ec50eb70b5d943b8fe",
        "filename": "ci/test/wrap-qemu.sh",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5d709fb266c97d4db15006bf855e887a6c123b/ci/test/wrap-qemu.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5d709fb266c97d4db15006bf855e887a6c123b/ci/test/wrap-qemu.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/wrap-qemu.sh?ref=fa5d709fb266c97d4db15006bf855e887a6c123b",
        "patch": "@@ -0,0 +1,18 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+for b_name in {\"${BASE_OUTDIR}/bin\"/*,src/secp256k1/*tests,src/univalue/{no_nul,test_json,unitester,object}}; do\n+    # shellcheck disable=SC2044\n+    for b in $(find \"${BASE_ROOT_DIR}\" -executable -type f -name $(basename $b_name)); do\n+      echo \"Wrap $b ...\"\n+      mv \"$b\" \"${b}_orig\"\n+      echo '#!/usr/bin/env bash' > \"$b\"\n+      echo \"$QEMU_USER_CMD \\\"${b}_orig\\\" \\\"\\$@\\\"\" >> \"$b\"\n+      chmod +x \"$b\"\n+    done\n+done"
      }
    ]
  },
  {
    "sha": "faba4672b64fb5ba89e5cb6299479887494b571a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWJhNDY3MmI2NGZiNWJhODllNWNiNjI5OTQ3OTg4NzQ5NGI1NzFh",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-17T19:16:48Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-01-03T12:04:45Z"
      },
      "message": "ci: Fix QEMU_USER_CMD parse issues\n\n* Fix bash syntax by adding missing -\n\n* Disable QEMU_USER_CMD fallback when it is set\n\n  Apparently bash can't distinguish an unset variable from a variable\n  that is set to the empty string\n\n* Export the environment variable to the docker env, otherwise it\n  couldn't be used there",
      "tree": {
        "sha": "d4070d7b946f7684548dc4b0452700cec5df5d05",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d4070d7b946f7684548dc4b0452700cec5df5d05"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faba4672b64fb5ba89e5cb6299479887494b571a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUitBQv+J52+f6kxGKKZkHJka+5xy3p27frejpoSvZEnzcENwSP0CBmVB8HwZJeI\nqUOPgmr9hSdjhVWVr8tZfGE8LrS6ytdUwJrbjWfWClEdozuRu8hR7FALxSYgF1y2\n7K4bQHE4ID+7J7QqB4XUji44+TQji2rd54QQQ9cj4D/XqajTlrCLjHZMjo1S2Xgj\nHgdVrOauQ0E+ABWEQndfJOW/bmRR8EvoXKaAZ2LNspN2yVL42hR5RW35tJSesVJc\nW5qRsNuJZ7IOCcR2Z/NWoJJBgbDkSNaP3vB1JTZF3xA4Ettf9NoEkPq3Cn0B8rvF\nc0haiKegzC8JPJWLbIH+sY7fUkvniSSeScu6VRF8y87CHeO+SYIvuFB0baioz24M\nb7S2gTGXMpAWG4qrREevneSyBtpepmcaVrwbcfL6A5h5J+RR0kbgt4uufMEE6my+\nsy7tvd+CBQIRiRspG11koSgsqd8F6Q7yCk3C5hWs+iR+moUcpFeE3f/wCUKjQ5nR\n6CqOgrrD\n=qm8Z\n-----END PGP SIGNATURE-----",
        "payload": "tree d4070d7b946f7684548dc4b0452700cec5df5d05\nparent fa5d709fb266c97d4db15006bf855e887a6c123b\nauthor MarcoFalke <falke.marco@gmail.com> 1576610208 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1578053085 -0500\n\nci: Fix QEMU_USER_CMD parse issues\n\n* Fix bash syntax by adding missing -\n\n* Disable QEMU_USER_CMD fallback when it is set\n\n  Apparently bash can't distinguish an unset variable from a variable\n  that is set to the empty string\n\n* Export the environment variable to the docker env, otherwise it\n  couldn't be used there\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faba4672b64fb5ba89e5cb6299479887494b571a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faba4672b64fb5ba89e5cb6299479887494b571a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faba4672b64fb5ba89e5cb6299479887494b571a/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa5d709fb266c97d4db15006bf855e887a6c123b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa5d709fb266c97d4db15006bf855e887a6c123b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa5d709fb266c97d4db15006bf855e887a6c123b"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "4047f8ed8d93a1ea44b75432107498e21d567eb6",
        "filename": "ci/test/00_setup_env_arm.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faba4672b64fb5ba89e5cb6299479887494b571a/ci/test/00_setup_env_arm.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faba4672b64fb5ba89e5cb6299479887494b571a/ci/test/00_setup_env_arm.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_arm.sh?ref=faba4672b64fb5ba89e5cb6299479887494b571a",
        "patch": "@@ -9,7 +9,7 @@ export LC_ALL=C.UTF-8\n export HOST=arm-linux-gnueabihf\n # The host arch is unknown, so we run the tests through qemu.\n # If the host is arm and wants to run the tests natively, it can set QEMU_USER_CMD to the empty string.\n-export QEMU_USER_CMD=\"${QEMU_USER_CMD:\"qemu-arm -L /usr/arm-linux-gnueabihf/\"}\"\n+if [ -z ${QEMU_USER_CMD+x} ]; then export QEMU_USER_CMD=\"${QEMU_USER_CMD:-\"qemu-arm -L /usr/arm-linux-gnueabihf/\"}\"; fi\n # We don't know whether the host can run the cross compiled binaries. To run them, either qemu-user or libc6:armhf for\n # the target is required, so install both.\n export DPKG_ADD_ARCH=\"armhf\""
      },
      {
        "sha": "a4f4841848a7d25ef5b550da97dab1f95ceacb9b",
        "filename": "ci/test/00_setup_env_s390x.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faba4672b64fb5ba89e5cb6299479887494b571a/ci/test/00_setup_env_s390x.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faba4672b64fb5ba89e5cb6299479887494b571a/ci/test/00_setup_env_s390x.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_s390x.sh?ref=faba4672b64fb5ba89e5cb6299479887494b571a",
        "patch": "@@ -9,7 +9,7 @@ export LC_ALL=C.UTF-8\n export HOST=s390x-linux-gnu\n # The host arch is unknown, so we run the tests through qemu.\n # If the host is s390x and wants to run the tests natively, it can set QEMU_USER_CMD to the empty string.\n-export QEMU_USER_CMD=\"${QEMU_USER_CMD:\"qemu-s390x\"}\"\n+if [ -z ${QEMU_USER_CMD+x} ]; then export QEMU_USER_CMD=\"${QEMU_USER_CMD:-\"qemu-s390x\"}\"; fi\n export PACKAGES=\"python3-zmq bsdmainutils qemu-user\"\n export RUN_UNIT_TESTS=true\n export RUN_FUNCTIONAL_TESTS=true"
      },
      {
        "sha": "cf2b39c68dafa727a5436c80513476dd66ef29e2",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faba4672b64fb5ba89e5cb6299479887494b571a/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faba4672b64fb5ba89e5cb6299479887494b571a/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=faba4672b64fb5ba89e5cb6299479887494b571a",
        "patch": "@@ -41,7 +41,7 @@ export ASAN_OPTIONS=\"detect_stack_use_after_return=1:check_initialization_order=\n export LSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/lsan\"\n export TSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/tsan:log_path=${BASE_SCRATCH_DIR}/sanitizer-output/tsan\"\n export UBSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1:report_error_type=1\"\n-env | grep -E '^(BITCOIN_CONFIG|BASE_|CCACHE_|WINEDEBUG|LC_ALL|BOOST_TEST_RANDOM|CONFIG_SHELL|(ASAN|LSAN|TSAN|UBSAN)_OPTIONS)' | tee /tmp/env\n+env | grep -E '^(BITCOIN_CONFIG|BASE_|QEMU_|CCACHE_|WINEDEBUG|LC_ALL|BOOST_TEST_RANDOM|CONFIG_SHELL|(ASAN|LSAN|TSAN|UBSAN)_OPTIONS)' | tee /tmp/env\n if [[ $HOST = *-mingw32 ]]; then\n   DOCKER_ADMIN=\"--cap-add SYS_ADMIN\"\n elif [[ $BITCOIN_CONFIG = *--with-sanitizers=*address* ]]; then # If ran with (ASan + LSan), Docker needs access to ptrace (https://github.com/google/sanitizers/issues/764)"
      }
    ]
  },
  {
    "sha": "fabb946090be2f604da3d7d4b1bbe93b79baf23e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWJiOTQ2MDkwYmUyZjYwNGRhM2Q3ZDRiMWJiZTkzYjc5YmFmMjNl",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-17T20:24:03Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-01-03T12:05:39Z"
      },
      "message": "ci: Install needed gcc and qemu-user iff cross-compiling",
      "tree": {
        "sha": "c12d10a84953faa40622bdeafdfb9d6ec8058b47",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c12d10a84953faa40622bdeafdfb9d6ec8058b47"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fabb946090be2f604da3d7d4b1bbe93b79baf23e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhZvwwAza/XOD/VmsMcQNGtWX5g9juNtvtD4VqO9qjS/HI0QZgdBibKFg8/uHJO\ntVpkhLoWYUFZphZPtModRz/GnrPZeZ49cmJX+CZOldOhE+yA4qJKC9ymH6P7VeSs\nRdpwo9kxNTFMVLclJwC8dPMqkNy2NSokuE+WxVR5HIV5OqbBTa1acR61VnxQVkNJ\nsN7CJ/KFtGTYSOrL+rMEuqEBoNvoIAGBflhjsWa99wyKlWKPOuqYgBol5eGLnib1\no3LJkHurbvJSkr4C3vIJL0ESYeFgRa/5qtbwtnb92TDuCr5oq9u2er8+tGssi2Ds\nkaJxtUc2YW4POCXqsx8ShJXDQZj9Lpbl4efqN1SBnClfazPtqZxJna6hgmfZjELF\n4fc61hkhZzlZAlTS0T3Zs6Rb/CYrfRH7pRaaH5HmwqQQTHnfSVHcCaHmvljjAYvv\nbbqmH9P2l44OSpYz6ZBMBp/cBoJsIG0tfOiYhXcBTkXti2eM3CuYN1eWsjhdWsii\n6bOexUEo\n=Y2lI\n-----END PGP SIGNATURE-----",
        "payload": "tree c12d10a84953faa40622bdeafdfb9d6ec8058b47\nparent faba4672b64fb5ba89e5cb6299479887494b571a\nauthor MarcoFalke <falke.marco@gmail.com> 1576614243 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1578053139 -0500\n\nci: Install needed gcc and qemu-user iff cross-compiling\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fabb946090be2f604da3d7d4b1bbe93b79baf23e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fabb946090be2f604da3d7d4b1bbe93b79baf23e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fabb946090be2f604da3d7d4b1bbe93b79baf23e/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "faba4672b64fb5ba89e5cb6299479887494b571a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faba4672b64fb5ba89e5cb6299479887494b571a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/faba4672b64fb5ba89e5cb6299479887494b571a"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 11,
      "deletions": 4
    },
    "files": [
      {
        "sha": "b98b39a83aad54d92ba914d16391a4258f45dce7",
        "filename": "ci/test/00_setup_env_arm.sh",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fabb946090be2f604da3d7d4b1bbe93b79baf23e/ci/test/00_setup_env_arm.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fabb946090be2f604da3d7d4b1bbe93b79baf23e/ci/test/00_setup_env_arm.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_arm.sh?ref=fabb946090be2f604da3d7d4b1bbe93b79baf23e",
        "patch": "@@ -10,10 +10,12 @@ export HOST=arm-linux-gnueabihf\n # The host arch is unknown, so we run the tests through qemu.\n # If the host is arm and wants to run the tests natively, it can set QEMU_USER_CMD to the empty string.\n if [ -z ${QEMU_USER_CMD+x} ]; then export QEMU_USER_CMD=\"${QEMU_USER_CMD:-\"qemu-arm -L /usr/arm-linux-gnueabihf/\"}\"; fi\n-# We don't know whether the host can run the cross compiled binaries. To run them, either qemu-user or libc6:armhf for\n-# the target is required, so install both.\n export DPKG_ADD_ARCH=\"armhf\"\n-export PACKAGES=\"python3 g++-arm-linux-gnueabihf busybox qemu-user libc6:armhf libstdc++6:armhf libfontconfig1:armhf libxcb1:armhf\"\n+export PACKAGES=\"python3-zmq g++-arm-linux-gnueabihf busybox libc6:armhf libstdc++6:armhf libfontconfig1:armhf libxcb1:armhf\"\n+if [ -n \"$QEMU_USER_CMD\" ]; then\n+  # Likely cross-compiling, so install the needed gcc and qemu-user\n+  export PACKAGES=\"$PACKAGES qemu-user\"\n+fi\n export USE_BUSY_BOX=true\n export RUN_UNIT_TESTS=true\n export RUN_FUNCTIONAL_TESTS=true"
      },
      {
        "sha": "c0499949440bae60fe2838cafc0fe63056ba148d",
        "filename": "ci/test/00_setup_env_s390x.sh",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fabb946090be2f604da3d7d4b1bbe93b79baf23e/ci/test/00_setup_env_s390x.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fabb946090be2f604da3d7d4b1bbe93b79baf23e/ci/test/00_setup_env_s390x.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_s390x.sh?ref=fabb946090be2f604da3d7d4b1bbe93b79baf23e",
        "patch": "@@ -10,7 +10,12 @@ export HOST=s390x-linux-gnu\n # The host arch is unknown, so we run the tests through qemu.\n # If the host is s390x and wants to run the tests natively, it can set QEMU_USER_CMD to the empty string.\n if [ -z ${QEMU_USER_CMD+x} ]; then export QEMU_USER_CMD=\"${QEMU_USER_CMD:-\"qemu-s390x\"}\"; fi\n-export PACKAGES=\"python3-zmq bsdmainutils qemu-user\"\n+export PACKAGES=\"python3-zmq\"\n+if [ -n \"$QEMU_USER_CMD\" ]; then\n+  # Likely cross-compiling, so install the needed gcc and qemu-user\n+  export DPKG_ADD_ARCH=\"s390x\"\n+  export PACKAGES=\"$PACKAGES g++-s390x-linux-gnu qemu-user libc6:s390x libstdc++6:s390x libfontconfig1:s390x libxcb1:s390x\"\n+fi\n export RUN_UNIT_TESTS=true\n export RUN_FUNCTIONAL_TESTS=true\n export GOAL=\"install\""
      }
    ]
  },
  {
    "sha": "fa3d77623ecb25dde6b5f4be11626ed16966eb29",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTNkNzc2MjNlY2IyNWRkZTZiNWY0YmUxMTYyNmVkMTY5NjZlYjI5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-17T20:22:41Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-01-03T12:06:12Z"
      },
      "message": "ci: Use debian to avoid apt install 404 errors\n\nThe default ubuntu mirror does not have s390x or armhf packages:\n\nGet:1 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]\nGet:2 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]\nGet:3 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]\nIgn:4 http://security.ubuntu.com/ubuntu bionic-security/multiverse armhf Packages\nGet:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]\nGet:6 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [19.2 kB]\nGet:7 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [6781 B]\nIgn:8 http://security.ubuntu.com/ubuntu bionic-security/universe armhf Packages\nGet:9 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [761 kB]\nIgn:10 http://archive.ubuntu.com/ubuntu bionic/main armhf Packages\nIgn:11 http://archive.ubuntu.com/ubuntu bionic/restricted armhf Packages\nGet:12 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]\nIgn:13 http://archive.ubuntu.com/ubuntu bionic/multiverse armhf Packages\nGet:14 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]\nIgn:15 http://security.ubuntu.com/ubuntu bionic-security/main armhf Packages\nIgn:16 http://security.ubuntu.com/ubuntu bionic-security/restricted armhf Packages\nGet:17 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [795 kB]\nGet:18 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]\nGet:19 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]\nIgn:4 http://security.ubuntu.com/ubuntu bionic-security/multiverse armhf Packages\nIgn:8 http://security.ubuntu.com/ubuntu bionic-security/universe armhf Packages\nIgn:15 http://security.ubuntu.com/ubuntu bionic-security/main armhf Packages\nIgn:16 http://security.ubuntu.com/ubuntu bionic-security/restricted armhf Packages\nIgn:4 http://security.ubuntu.com/ubuntu bionic-security/multiverse armhf Packages\nIgn:8 http://security.ubuntu.com/ubuntu bionic-security/universe armhf Packages\nIgn:15 http://security.ubuntu.com/ubuntu bionic-security/main armhf Packages\nIgn:16 http://security.ubuntu.com/ubuntu bionic-security/restricted armhf Packages\nErr:4 http://security.ubuntu.com/ubuntu bionic-security/multiverse armhf Packages\n  404  Not Found [IP: 91.189.88.174 80]\nIgn:8 http://security.ubuntu.com/ubuntu bionic-security/universe armhf Packages\nIgn:15 http://security.ubuntu.com/ubuntu bionic-security/main armhf Packages\nIgn:16 http://security.ubuntu.com/ubuntu bionic-security/restricted armhf Packages\nIgn:20 http://archive.ubuntu.com/ubuntu bionic/universe armhf Packages\nIgn:10 http://archive.ubuntu.com/ubuntu bionic/main armhf Packages\nIgn:11 http://archive.ubuntu.com/ubuntu bionic/restricted armhf Packages\nIgn:13 http://archive.ubuntu.com/ubuntu bionic/multiverse armhf Packages\nGet:21 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [1057 kB]\nIgn:22 http://archive.ubuntu.com/ubuntu bionic-updates/restricted armhf Packages\nGet:23 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [10.5 kB]\nIgn:24 http://archive.ubuntu.com/ubuntu bionic-updates/main armhf Packages\nIgn:25 http://archive.ubuntu.com/ubuntu bionic-updates/universe armhf Packages\nGet:26 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [1322 kB]\nGet:27 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [32.7 kB]\nIgn:28 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse armhf Packages\nIgn:29 http://archive.ubuntu.com/ubuntu bionic-backports/main armhf Packages\nGet:30 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [4244 B]\nIgn:31 http://archive.ubuntu.com/ubuntu bionic-backports/universe armhf Packages\nGet:32 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [2496 B]\nIgn:20 http://archive.ubuntu.com/ubuntu bionic/universe armhf Packages\nIgn:10 http://archive.ubuntu.com/ubuntu bionic/main armhf Packages\nIgn:11 http://archive.ubuntu.com/ubuntu bionic/restricted armhf Packages\nIgn:13 http://archive.ubuntu.com/ubuntu bionic/multiverse armhf Packages\nIgn:22 http://archive.ubuntu.com/ubuntu bionic-updates/restricted armhf Packages\nIgn:24 http://archive.ubuntu.com/ubuntu bionic-updates/main armhf Packages\nIgn:25 http://archive.ubuntu.com/ubuntu bionic-updates/universe armhf Packages\nIgn:28 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse armhf Packages\nIgn:29 http://archive.ubuntu.com/ubuntu bionic-backports/main armhf Packages\nIgn:31 http://archive.ubuntu.com/ubuntu bionic-backports/universe armhf Packages\nIgn:20 http://archive.ubuntu.com/ubuntu bionic/universe armhf Packages\nErr:10 http://archive.ubuntu.com/ubuntu bionic/main armhf Packages\n  404  Not Found [IP: 91.189.88.149 80]\nIgn:11 http://archive.ubuntu.com/ubuntu bionic/restricted armhf Packages\nIgn:13 http://archive.ubuntu.com/ubuntu bionic/multiverse armhf Packages\nIgn:22 http://archive.ubuntu.com/ubuntu bionic-updates/restricted armhf Packages\nIgn:24 http://archive.ubuntu.com/ubuntu bionic-updates/main armhf Packages\nIgn:25 http://archive.ubuntu.com/ubuntu bionic-updates/universe armhf Packages\nIgn:28 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse armhf Packages\nIgn:29 http://archive.ubuntu.com/ubuntu bionic-backports/main armhf Packages\nIgn:31 http://archive.ubuntu.com/ubuntu bionic-backports/universe armhf Packages\nIgn:20 http://archive.ubuntu.com/ubuntu bionic/universe armhf Packages\nErr:22 http://archive.ubuntu.com/ubuntu bionic-updates/restricted armhf Packages\n  404  Not Found [IP: 91.189.88.149 80]\nIgn:24 http://archive.ubuntu.com/ubuntu bionic-updates/main armhf Packages\nIgn:25 http://archive.ubuntu.com/ubuntu bionic-updates/universe armhf Packages\nIgn:28 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse armhf Packages\nErr:29 http://archive.ubuntu.com/ubuntu bionic-backports/main armhf Packages\n  404  Not Found [IP: 91.189.88.149 80]\nIgn:31 http://archive.ubuntu.com/ubuntu bionic-backports/universe armhf Packages\nFetched 17.4 MB in 2s (7076 kB/s)\nReading package lists...\nE: Failed to fetch http://security.ubuntu.com/ubuntu/dists/bionic-security/multiverse/binary-armhf/Packages  404  Not Found [IP: 91.189.88.174 80]\nE: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/bionic/main/binary-armhf/Packages  404  Not Found [IP: 91.189.88.149 80]\nE: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/bionic-updates/restricted/binary-armhf/Packages  404  Not Found [IP: 91.189.88.149 80]\nE: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/bionic-backports/main/binary-armhf/Packages  404  Not Found [IP: 91.189.88.149 80]\nE: Some index files failed to download. They have been ignored, or old ones used instead.",
      "tree": {
        "sha": "6f699837c0d5e507edcb9e8762d0274853b3b914",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6f699837c0d5e507edcb9e8762d0274853b3b914"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa3d77623ecb25dde6b5f4be11626ed16966eb29",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjiTgwApBeJ8GaiU5hUxKtK/lTPHcPCvbZ+LPQMWMfO60AqSDD/UkRN0qT/bLPX\n5GcnEMTZ4J0j343//qdSqGLWx64CF+dGN2mNh9Q/4kGU3moBtv3s9gaEIbjIR0pq\np91fv/q00/MNUpQDVC9TON/HsYePAowzClGA3z6qwG9B6mo3/UTtRKOf9Wuv5M5u\nMbQ4//rDSDPtvDRee1z6RqvmQ5MrEfxbTKtop3OTZJcoNK6mNBcGjAyfeIrVfMDy\n21LkCdYJhzU54eY0ag9DO21t1VAPPxnvA2WXzWY1jJIdSiRT9QbG9g06q/dEFamA\n3OeZ1b8nrxl31b9Goz/1UzYXd86/4uY6QMl7Zd9ngqHhdWr2Td4TXNvvjQ0aP0Kx\nX/3X3hBGNoNu6U6sHt2Y85MxdbWEUF9iVUu/Fj05F+rcm89PKeCql4QSdChPxYOu\ntVGdr1gmSs24htaQtIUj68SmU4IMn37FpWSBNVQIFDguvBE1VkCfHT7UqE2veiyF\nsyPQDBum\n=qkMD\n-----END PGP SIGNATURE-----",
        "payload": "tree 6f699837c0d5e507edcb9e8762d0274853b3b914\nparent fabb946090be2f604da3d7d4b1bbe93b79baf23e\nauthor MarcoFalke <falke.marco@gmail.com> 1576614161 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1578053172 -0500\n\nci: Use debian to avoid apt install 404 errors\n\nThe default ubuntu mirror does not have s390x or armhf packages:\n\nGet:1 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]\nGet:2 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]\nGet:3 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]\nIgn:4 http://security.ubuntu.com/ubuntu bionic-security/multiverse armhf Packages\nGet:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]\nGet:6 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [19.2 kB]\nGet:7 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [6781 B]\nIgn:8 http://security.ubuntu.com/ubuntu bionic-security/universe armhf Packages\nGet:9 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [761 kB]\nIgn:10 http://archive.ubuntu.com/ubuntu bionic/main armhf Packages\nIgn:11 http://archive.ubuntu.com/ubuntu bionic/restricted armhf Packages\nGet:12 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]\nIgn:13 http://archive.ubuntu.com/ubuntu bionic/multiverse armhf Packages\nGet:14 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]\nIgn:15 http://security.ubuntu.com/ubuntu bionic-security/main armhf Packages\nIgn:16 http://security.ubuntu.com/ubuntu bionic-security/restricted armhf Packages\nGet:17 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [795 kB]\nGet:18 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]\nGet:19 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]\nIgn:4 http://security.ubuntu.com/ubuntu bionic-security/multiverse armhf Packages\nIgn:8 http://security.ubuntu.com/ubuntu bionic-security/universe armhf Packages\nIgn:15 http://security.ubuntu.com/ubuntu bionic-security/main armhf Packages\nIgn:16 http://security.ubuntu.com/ubuntu bionic-security/restricted armhf Packages\nIgn:4 http://security.ubuntu.com/ubuntu bionic-security/multiverse armhf Packages\nIgn:8 http://security.ubuntu.com/ubuntu bionic-security/universe armhf Packages\nIgn:15 http://security.ubuntu.com/ubuntu bionic-security/main armhf Packages\nIgn:16 http://security.ubuntu.com/ubuntu bionic-security/restricted armhf Packages\nErr:4 http://security.ubuntu.com/ubuntu bionic-security/multiverse armhf Packages\n  404  Not Found [IP: 91.189.88.174 80]\nIgn:8 http://security.ubuntu.com/ubuntu bionic-security/universe armhf Packages\nIgn:15 http://security.ubuntu.com/ubuntu bionic-security/main armhf Packages\nIgn:16 http://security.ubuntu.com/ubuntu bionic-security/restricted armhf Packages\nIgn:20 http://archive.ubuntu.com/ubuntu bionic/universe armhf Packages\nIgn:10 http://archive.ubuntu.com/ubuntu bionic/main armhf Packages\nIgn:11 http://archive.ubuntu.com/ubuntu bionic/restricted armhf Packages\nIgn:13 http://archive.ubuntu.com/ubuntu bionic/multiverse armhf Packages\nGet:21 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [1057 kB]\nIgn:22 http://archive.ubuntu.com/ubuntu bionic-updates/restricted armhf Packages\nGet:23 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [10.5 kB]\nIgn:24 http://archive.ubuntu.com/ubuntu bionic-updates/main armhf Packages\nIgn:25 http://archive.ubuntu.com/ubuntu bionic-updates/universe armhf Packages\nGet:26 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [1322 kB]\nGet:27 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [32.7 kB]\nIgn:28 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse armhf Packages\nIgn:29 http://archive.ubuntu.com/ubuntu bionic-backports/main armhf Packages\nGet:30 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [4244 B]\nIgn:31 http://archive.ubuntu.com/ubuntu bionic-backports/universe armhf Packages\nGet:32 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [2496 B]\nIgn:20 http://archive.ubuntu.com/ubuntu bionic/universe armhf Packages\nIgn:10 http://archive.ubuntu.com/ubuntu bionic/main armhf Packages\nIgn:11 http://archive.ubuntu.com/ubuntu bionic/restricted armhf Packages\nIgn:13 http://archive.ubuntu.com/ubuntu bionic/multiverse armhf Packages\nIgn:22 http://archive.ubuntu.com/ubuntu bionic-updates/restricted armhf Packages\nIgn:24 http://archive.ubuntu.com/ubuntu bionic-updates/main armhf Packages\nIgn:25 http://archive.ubuntu.com/ubuntu bionic-updates/universe armhf Packages\nIgn:28 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse armhf Packages\nIgn:29 http://archive.ubuntu.com/ubuntu bionic-backports/main armhf Packages\nIgn:31 http://archive.ubuntu.com/ubuntu bionic-backports/universe armhf Packages\nIgn:20 http://archive.ubuntu.com/ubuntu bionic/universe armhf Packages\nErr:10 http://archive.ubuntu.com/ubuntu bionic/main armhf Packages\n  404  Not Found [IP: 91.189.88.149 80]\nIgn:11 http://archive.ubuntu.com/ubuntu bionic/restricted armhf Packages\nIgn:13 http://archive.ubuntu.com/ubuntu bionic/multiverse armhf Packages\nIgn:22 http://archive.ubuntu.com/ubuntu bionic-updates/restricted armhf Packages\nIgn:24 http://archive.ubuntu.com/ubuntu bionic-updates/main armhf Packages\nIgn:25 http://archive.ubuntu.com/ubuntu bionic-updates/universe armhf Packages\nIgn:28 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse armhf Packages\nIgn:29 http://archive.ubuntu.com/ubuntu bionic-backports/main armhf Packages\nIgn:31 http://archive.ubuntu.com/ubuntu bionic-backports/universe armhf Packages\nIgn:20 http://archive.ubuntu.com/ubuntu bionic/universe armhf Packages\nErr:22 http://archive.ubuntu.com/ubuntu bionic-updates/restricted armhf Packages\n  404  Not Found [IP: 91.189.88.149 80]\nIgn:24 http://archive.ubuntu.com/ubuntu bionic-updates/main armhf Packages\nIgn:25 http://archive.ubuntu.com/ubuntu bionic-updates/universe armhf Packages\nIgn:28 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse armhf Packages\nErr:29 http://archive.ubuntu.com/ubuntu bionic-backports/main armhf Packages\n  404  Not Found [IP: 91.189.88.149 80]\nIgn:31 http://archive.ubuntu.com/ubuntu bionic-backports/universe armhf Packages\nFetched 17.4 MB in 2s (7076 kB/s)\nReading package lists...\nE: Failed to fetch http://security.ubuntu.com/ubuntu/dists/bionic-security/multiverse/binary-armhf/Packages  404  Not Found [IP: 91.189.88.174 80]\nE: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/bionic/main/binary-armhf/Packages  404  Not Found [IP: 91.189.88.149 80]\nE: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/bionic-updates/restricted/binary-armhf/Packages  404  Not Found [IP: 91.189.88.149 80]\nE: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/bionic-backports/main/binary-armhf/Packages  404  Not Found [IP: 91.189.88.149 80]\nE: Some index files failed to download. They have been ignored, or old ones used instead.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa3d77623ecb25dde6b5f4be11626ed16966eb29",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa3d77623ecb25dde6b5f4be11626ed16966eb29",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa3d77623ecb25dde6b5f4be11626ed16966eb29/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fabb946090be2f604da3d7d4b1bbe93b79baf23e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fabb946090be2f604da3d7d4b1bbe93b79baf23e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fabb946090be2f604da3d7d4b1bbe93b79baf23e"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 17,
      "deletions": 13
    },
    "files": [
      {
        "sha": "7bb349f36ad8b9f54a8aecd8c657a8e18bc5e000",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa3d77623ecb25dde6b5f4be11626ed16966eb29/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa3d77623ecb25dde6b5f4be11626ed16966eb29/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=fa3d77623ecb25dde6b5f4be11626ed16966eb29",
        "patch": "@@ -82,14 +82,14 @@ jobs:\n         - set -o errexit; source ./ci/lint/06_script.sh\n \n     - stage: test\n-      name: 'ARM  [GOAL: install]  [bionic]  [unit tests, functional tests]'\n+      name: 'ARM  [GOAL: install]  [buster]  [unit tests, functional tests]'\n       arch: arm64\n       env: >-\n         FILE_ENV=\"./ci/test/00_setup_env_arm.sh\"\n         QEMU_USER_CMD=\"\"  # Can run the tests natively without qemu\n \n     - stage: test\n-      name: 'S390x  [GOAL: install]  [bionic]  [unit tests, functional tests]'\n+      name: 'S390x  [GOAL: install]  [buster]  [unit tests, functional tests]'\n       arch: s390x\n       env: >-\n         FILE_ENV=\"./ci/test/00_setup_env_s390x.sh\""
      },
      {
        "sha": "a008d515236dc566570d62bf5829e75c2db00afc",
        "filename": "ci/test/00_setup_env.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa3d77623ecb25dde6b5f4be11626ed16966eb29/ci/test/00_setup_env.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa3d77623ecb25dde6b5f4be11626ed16966eb29/ci/test/00_setup_env.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env.sh?ref=fa3d77623ecb25dde6b5f4be11626ed16966eb29",
        "patch": "@@ -51,7 +51,7 @@ export DEPENDS_DIR=${DEPENDS_DIR:-$BASE_ROOT_DIR/depends}\n export BASE_OUTDIR=${BASE_OUTDIR:-$BASE_SCRATCH_DIR/out/$HOST}\n export SDK_URL=${SDK_URL:-https://bitcoincore.org/depends-sources/sdks}\n export WINEDEBUG=${WINEDEBUG:-fixme-all}\n-export DOCKER_PACKAGES=${DOCKER_PACKAGES:-build-essential libtool autotools-dev automake pkg-config bsdmainutils curl ca-certificates ccache python3 rsync git}\n+export DOCKER_PACKAGES=${DOCKER_PACKAGES:-build-essential libtool autotools-dev automake pkg-config bsdmainutils curl ca-certificates ccache python3 rsync git procps}\n export GOAL=${GOAL:-install}\n export DIR_QA_ASSETS=${DIR_QA_ASSETS:-${BASE_SCRATCH_DIR}/qa-assets}\n export PATH=${BASE_ROOT_DIR}/ci/retry:$PATH"
      },
      {
        "sha": "2a522f5a8f05c56da10b6c12c08dd50d41f262ba",
        "filename": "ci/test/00_setup_env_arm.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa3d77623ecb25dde6b5f4be11626ed16966eb29/ci/test/00_setup_env_arm.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa3d77623ecb25dde6b5f4be11626ed16966eb29/ci/test/00_setup_env_arm.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_arm.sh?ref=fa3d77623ecb25dde6b5f4be11626ed16966eb29",
        "patch": "@@ -16,6 +16,8 @@ if [ -n \"$QEMU_USER_CMD\" ]; then\n   # Likely cross-compiling, so install the needed gcc and qemu-user\n   export PACKAGES=\"$PACKAGES qemu-user\"\n fi\n+# Use debian to avoid 404 apt errors when cross compiling\n+export DOCKER_NAME_TAG=\"debian:buster\"\n export USE_BUSY_BOX=true\n export RUN_UNIT_TESTS=true\n export RUN_FUNCTIONAL_TESTS=true"
      },
      {
        "sha": "6452feb5f2c9dcd8d489929f3d77c276b6ff9e44",
        "filename": "ci/test/00_setup_env_s390x.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa3d77623ecb25dde6b5f4be11626ed16966eb29/ci/test/00_setup_env_s390x.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa3d77623ecb25dde6b5f4be11626ed16966eb29/ci/test/00_setup_env_s390x.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_s390x.sh?ref=fa3d77623ecb25dde6b5f4be11626ed16966eb29",
        "patch": "@@ -16,6 +16,8 @@ if [ -n \"$QEMU_USER_CMD\" ]; then\n   export DPKG_ADD_ARCH=\"s390x\"\n   export PACKAGES=\"$PACKAGES g++-s390x-linux-gnu qemu-user libc6:s390x libstdc++6:s390x libfontconfig1:s390x libxcb1:s390x\"\n fi\n+# Use debian to avoid 404 apt errors\n+export DOCKER_NAME_TAG=\"debian:buster\"\n export RUN_UNIT_TESTS=true\n export RUN_FUNCTIONAL_TESTS=true\n export GOAL=\"install\""
      },
      {
        "sha": "68fd98302f2150d3e9278cd55d845e6ddb078113",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa3d77623ecb25dde6b5f4be11626ed16966eb29/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa3d77623ecb25dde6b5f4be11626ed16966eb29/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=fa3d77623ecb25dde6b5f4be11626ed16966eb29",
        "patch": "@@ -72,16 +72,6 @@ else\n   }\n fi\n \n-if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n-  top -l 1 -s 0 | awk ' /PhysMem/ {print}'\n-  echo \"Number of CPUs: $(sysctl -n hw.logicalcpu)\"\n-else\n-  DOCKER_EXEC free -m -h\n-  DOCKER_EXEC echo \"Number of CPUs \\(nproc\\):\" \\$\\(nproc\\)\n-  DOCKER_EXEC echo \"Free disk space:\"\n-  DOCKER_EXEC df -h\n-fi\n-\n if [ -n \"$DPKG_ADD_ARCH\" ]; then\n   DOCKER_EXEC dpkg --add-architecture \"$DPKG_ADD_ARCH\"\n fi\n@@ -94,6 +84,16 @@ elif [ \"$TRAVIS_OS_NAME\" != \"osx\" ]; then\n   ${CI_RETRY_EXE} DOCKER_EXEC apt-get install --no-install-recommends --no-upgrade -y $PACKAGES $DOCKER_PACKAGES\n fi\n \n+if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n+  top -l 1 -s 0 | awk ' /PhysMem/ {print}'\n+  echo \"Number of CPUs: $(sysctl -n hw.logicalcpu)\"\n+else\n+  DOCKER_EXEC free -m -h\n+  DOCKER_EXEC echo \"Number of CPUs \\(nproc\\):\" \\$\\(nproc\\)\n+  DOCKER_EXEC echo \"Free disk space:\"\n+  DOCKER_EXEC df -h\n+fi\n+\n if [ ! -d ${DIR_QA_ASSETS} ]; then\n   DOCKER_EXEC git clone https://github.com/bitcoin-core/qa-assets ${DIR_QA_ASSETS}\n fi"
      }
    ]
  },
  {
    "sha": "fa569e1a9c5ad1bf8bdf866235b21aff56112224",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTU2OWUxYTljNWFkMWJmOGJkZjg2NjIzNWIyMWFmZjU2MTEyMjI0",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-18T03:02:48Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-01-03T12:07:11Z"
      },
      "message": "ci: Set LC_ALL=C when running in qemu-s390x\n\nThis avoids std::runtime_error in the unit tests of the type\n\"locale::facet::_S_create_c_locale name not valid\"",
      "tree": {
        "sha": "7e8a1df40931711893662e579d6257a459166b38",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7e8a1df40931711893662e579d6257a459166b38"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa569e1a9c5ad1bf8bdf866235b21aff56112224",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUh7zQwAqAX3QN3N8y51joWOhxwA/12U3Oi4x2wfNqO4mnBglRSQ5EcaxcNhI0kg\nX2fj2kBfMO4ZpKpnBIK37eRVll19xGnZ688EZZMuMyuH3YqCkcgMcaYkeRj+6nQY\nKwRffjpEEtWfb9F4Xd8j1z4sV+PJfAfp4l7eNxQ6qQcHEvtsbK72VqF0Mnf55GFy\n8ffD2SKY44OUWm7hcGwuQs+roY4W1988XHG8qdZgXeGPUjyeJahcAju9dzcIfN+1\nN0cMKLRQWMqWX4DeVVamMUIqttikf2DMmzHM3oaaKd0Hg6+dCD6bMzBgXm+0znSi\nP5rDyCZciw5k1pe/1kSjTHqfXVGTwOcB65jhVFzeLEGU8R/f8vjSJ9izI6kZ9IbS\noywxVhNsiA5pjtqY1cEfcd8TGhqtvBXb+OW4knm94dzzdlKl9LP8eRH7htwJEksm\nHIR335uM2SLxbdvSvwAfqQ/jq+KnAxazmyseycRbubl15j6lM1XU45BfCLnVWp1J\nF1G+TNws\n=4FTA\n-----END PGP SIGNATURE-----",
        "payload": "tree 7e8a1df40931711893662e579d6257a459166b38\nparent fa3d77623ecb25dde6b5f4be11626ed16966eb29\nauthor MarcoFalke <falke.marco@gmail.com> 1576638168 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1578053231 -0500\n\nci: Set LC_ALL=C when running in qemu-s390x\n\nThis avoids std::runtime_error in the unit tests of the type\n\"locale::facet::_S_create_c_locale name not valid\"\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa569e1a9c5ad1bf8bdf866235b21aff56112224",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa569e1a9c5ad1bf8bdf866235b21aff56112224",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa569e1a9c5ad1bf8bdf866235b21aff56112224/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa3d77623ecb25dde6b5f4be11626ed16966eb29",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa3d77623ecb25dde6b5f4be11626ed16966eb29",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa3d77623ecb25dde6b5f4be11626ed16966eb29"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2b5a9a53571b40f273627a7013a4e00f8d13ff21",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa569e1a9c5ad1bf8bdf866235b21aff56112224/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa569e1a9c5ad1bf8bdf866235b21aff56112224/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=fa569e1a9c5ad1bf8bdf866235b21aff56112224",
        "patch": "@@ -9,6 +9,9 @@ export LC_ALL=C.UTF-8\n if [[ $DOCKER_NAME_TAG == centos* ]]; then\n   export LC_ALL=en_US.utf8\n fi\n+if [[ $QEMU_USER_CMD == qemu-s390* ]]; then\n+  export LC_ALL=C\n+fi\n \n if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n   set +o errexit"
      }
    ]
  }
]