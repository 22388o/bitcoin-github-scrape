[
  {
    "sha": "d1d86760a36248924fe089b86fe1c4fab5816db2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMWQ4Njc2MGEzNjI0ODkyNGZlMDg5Yjg2ZmUxYzRmYWI1ODE2ZGIy",
    "commit": {
      "author": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2016-12-23T16:04:59Z"
      },
      "committer": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2016-12-24T06:19:30Z"
      },
      "message": "Request announcement by cmpctblock AFTER requesting cmpctblock/blocktxn\n\nThis will speed up block propagation since the annoucement request can wait until after we have requested the block data.",
      "tree": {
        "sha": "cc5472567bbd7da2c5252e7d1189eecf5585f5ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cc5472567bbd7da2c5252e7d1189eecf5585f5ed"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d1d86760a36248924fe089b86fe1c4fab5816db2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJYXhN0AAoJEJYWlWnKgEH5MZoP/iRl4ib39PGf2s3FZCqcPXYX\nzAJOhkY+M8YKbOhEgyO41y8aa0A3wOGxCUQUYfLGAubGp3vctdDTMCOO5Sb2Xk4d\n8Y8UI9QrCoDKo2qMAHuIqDFfROjh2T6N2S2QOL7DK92ZDtcWAq/Rtae6PhxAWf1H\nDSoFueFKVIcbpkYIWXKgeSwqcxiDhw6WzM4zN/OiF31Uqihuzuc2VQL11ARoeHOM\nSzLzXInMOF0eqV5xIwE3u028uADaN2aMOVy06xY7csfIuOOxP4v1ZUhJAJBSF4Nj\nUBMjjykkGTmB6jGuJwV3yai3AK99dPWCeaO0qS75+CApHeo47sbjPNQlfOb3z3JA\nfrNo6Jo+/VWizjHcsLFglNJL0A7Co9ITsfGHGNM+EKa+IE2likOLzOJ9YTbpUXmN\nP+WZzCeQ75jMEY51iflxhBFSH35dibVKOsijZModV4H8zgTK18PTM4ws04/KeDap\nAX2NAcJ10+TWBfXA2Vot8gG5O35lEdBJqZ4SOJT5DuO+Z33DKUNlWalp3dcEHhJx\nhwzy5MG0gxVhMBD+MQwlM0DjDdxbOa6OR7tyS7NlOtAhrBxyFvOmU6DuTccLJ2Am\nn8NEqJxiU2D0150ZlebCO5mAxtmbRtwRqr3OCAy3TVr/bixRdcUsYTL+CTnDmG6j\n2Gz11vNahTdeaNEzUj/0\n=FI8/\n-----END PGP SIGNATURE-----",
        "payload": "tree cc5472567bbd7da2c5252e7d1189eecf5585f5ed\nparent 0f921e6a0492c4e9f037a9ed91f474885032d68c\nauthor R E Broadley <rebroad+github@gmail.com> 1482509099 +0700\ncommitter R E Broadley <rebroad+github@gmail.com> 1482560370 +0700\n\nRequest announcement by cmpctblock AFTER requesting cmpctblock/blocktxn\n\nThis will speed up block propagation since the annoucement request can wait until after we have requested the block data.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1d86760a36248924fe089b86fe1c4fab5816db2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d1d86760a36248924fe089b86fe1c4fab5816db2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1d86760a36248924fe089b86fe1c4fab5816db2/comments",
    "author": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0f921e6a0492c4e9f037a9ed91f474885032d68c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f921e6a0492c4e9f037a9ed91f474885032d68c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0f921e6a0492c4e9f037a9ed91f474885032d68c"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 10,
      "deletions": 7
    },
    "files": [
      {
        "sha": "4f622ea4eb9256630a5ea453fdeb98e22e5cfe6f",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 7,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1d86760a36248924fe089b86fe1c4fab5816db2/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1d86760a36248924fe089b86fe1c4fab5816db2/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=d1d86760a36248924fe089b86fe1c4fab5816db2",
        "patch": "@@ -1853,18 +1853,14 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                     return true;\n                 }\n \n-                if (!fAlreadyInFlight && mapBlocksInFlight.size() == 1 && pindex->pprev->IsValid(BLOCK_VALID_CHAIN)) {\n-                    // We seem to be rather well-synced, so it appears pfrom was the first to provide us\n-                    // with this block! Let's get them to announce using compact blocks in the future.\n-                    MaybeSetPeerAsAnnouncingHeaderAndIDs(nodestate, pfrom, connman);\n-                }\n-\n                 BlockTransactionsRequest req;\n                 for (size_t i = 0; i < cmpctblock.BlockTxCount(); i++) {\n                     if (!partialBlock.IsTxAvailable(i))\n                         req.indexes.push_back(i);\n                 }\n                 if (req.indexes.empty()) {\n+                    if (!fAlreadyInFlight && mapBlocksInFlight.size() == 1 && pindex->pprev->IsValid(BLOCK_VALID_CHAIN))\n+                        MaybeSetPeerAsAnnouncingHeaderAndIDs(nodestate, pfrom, connman);\n                     // Dirty hack to jump to BLOCKTXN code (TODO: move message handling into their own functions)\n                     BlockTransactions txn;\n                     txn.blockhash = cmpctblock.header.GetHash();\n@@ -1874,6 +1870,10 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                 } else {\n                     req.blockhash = pindex->GetBlockHash();\n                     connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETBLOCKTXN, req));\n+                    if (!fAlreadyInFlight && mapBlocksInFlight.size() == 1 && pindex->pprev->IsValid(BLOCK_VALID_CHAIN))\n+                        // We seem to be rather well-synced, so it appears pfrom was the first to provide us\n+                        // with this block! Let's get them to announce using compact blocks in the future.\n+                        MaybeSetPeerAsAnnouncingHeaderAndIDs(nodestate, pfrom, connman);\n                 }\n             } else {\n                 // This block is either already in flight from a different\n@@ -2142,14 +2142,17 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                             pindexLast->GetBlockHash().ToString(), pindexLast->nHeight);\n                 }\n                 if (vGetData.size() > 0) {\n+                    bool fMaybe = false;\n                     if (nodestate->fSupportsDesiredCmpctVersion && vGetData.size() == 1 && mapBlocksInFlight.size() == 1 && pindexLast->pprev->IsValid(BLOCK_VALID_CHAIN)) {\n                         // We seem to be rather well-synced, so it appears pfrom was the first to provide us\n                         // with this block! Let's get them to announce using compact blocks in the future.\n-                        MaybeSetPeerAsAnnouncingHeaderAndIDs(nodestate, pfrom, connman);\n+                        fMaybe = true;\n                         // In any case, we want to download using a compact block, not a regular one\n                         vGetData[0] = CInv(MSG_CMPCT_BLOCK, vGetData[0].hash);\n                     }\n                     connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETDATA, vGetData));\n+                    if (fMaybe)\n+                        MaybeSetPeerAsAnnouncingHeaderAndIDs(nodestate, pfrom, connman);\n                 }\n             }\n         }"
      }
    ]
  }
]