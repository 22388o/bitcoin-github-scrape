[
  {
    "sha": "904681cf3adc5ada0e28232f8133bf6781f8ec6a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MDQ2ODFjZjNhZGM1YWRhMGUyODIzMmY4MTMzYmY2NzgxZjhlYzZh",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-04-12T07:59:20Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-04-12T07:59:20Z"
      },
      "message": "log: Increase signal-to-noise in non-debug logging. Don't print debug output \"Pre-allocating to position\" and \"Leaving block file\" when running with -nodebug.",
      "tree": {
        "sha": "4da2964d338dbc96540e6a359ed7ed6a38522d77",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4da2964d338dbc96540e6a359ed7ed6a38522d77"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/904681cf3adc5ada0e28232f8133bf6781f8ec6a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/904681cf3adc5ada0e28232f8133bf6781f8ec6a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/904681cf3adc5ada0e28232f8133bf6781f8ec6a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/904681cf3adc5ada0e28232f8133bf6781f8ec6a/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0e9cb2d24dbf982cd13d568c9318308b90b024ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e9cb2d24dbf982cd13d568c9318308b90b024ea",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0e9cb2d24dbf982cd13d568c9318308b90b024ea"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 6,
      "deletions": 2
    },
    "files": [
      {
        "sha": "8963caa6582c222158f4419f8d745fae01df929d",
        "filename": "src/flatfile.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/904681cf3adc5ada0e28232f8133bf6781f8ec6a/src/flatfile.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/904681cf3adc5ada0e28232f8133bf6781f8ec6a/src/flatfile.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/flatfile.cpp?ref=904681cf3adc5ada0e28232f8133bf6781f8ec6a",
        "patch": "@@ -66,7 +66,7 @@ size_t FlatFileSeq::Allocate(const FlatFilePos& pos, size_t add_size, bool& out_\n         if (CheckDiskSpace(m_dir, inc_size)) {\n             FILE *file = Open(pos);\n             if (file) {\n-                LogPrintf(\"Pre-allocating up to position 0x%x in %s%05u.dat\\n\", new_size, m_prefix, pos.nFile);\n+                LogPrint(BCLog::FLATFILE, \"Pre-allocating up to position 0x%x in %s%05u.dat\\n\", new_size, m_prefix, pos.nFile);\n                 AllocateFileRange(file, pos.nPos, inc_size);\n                 fclose(file);\n                 return inc_size;"
      },
      {
        "sha": "115c02de82d5794cef6c40e418d815ebe9d393df",
        "filename": "src/logging.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/904681cf3adc5ada0e28232f8133bf6781f8ec6a/src/logging.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/904681cf3adc5ada0e28232f8133bf6781f8ec6a/src/logging.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.cpp?ref=904681cf3adc5ada0e28232f8133bf6781f8ec6a",
        "patch": "@@ -125,6 +125,8 @@ const CLogCategoryDesc LogCategories[] =\n     {BCLog::COINDB, \"coindb\"},\n     {BCLog::QT, \"qt\"},\n     {BCLog::LEVELDB, \"leveldb\"},\n+    {BCLog::FLATFILE, \"flatfile\"},\n+    {BCLog::VALIDATION, \"validation\"},\n     {BCLog::ALL, \"1\"},\n     {BCLog::ALL, \"all\"},\n };"
      },
      {
        "sha": "cb37b9e6a81dd53cc20960e26877a00ebb1ee049",
        "filename": "src/logging.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/904681cf3adc5ada0e28232f8133bf6781f8ec6a/src/logging.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/904681cf3adc5ada0e28232f8133bf6781f8ec6a/src/logging.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.h?ref=904681cf3adc5ada0e28232f8133bf6781f8ec6a",
        "patch": "@@ -53,6 +53,8 @@ namespace BCLog {\n         COINDB      = (1 << 18),\n         QT          = (1 << 19),\n         LEVELDB     = (1 << 20),\n+        FLATFILE    = (1 << 21),\n+        VALIDATION  = (1 << 22),\n         ALL         = ~(uint32_t)0,\n     };\n "
      },
      {
        "sha": "7428c4e5e1fb26f1a042ba9da8b49dfed39e266e",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/904681cf3adc5ada0e28232f8133bf6781f8ec6a/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/904681cf3adc5ada0e28232f8133bf6781f8ec6a/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=904681cf3adc5ada0e28232f8133bf6781f8ec6a",
        "patch": "@@ -2999,7 +2999,7 @@ static bool FindBlockPos(FlatFilePos &pos, unsigned int nAddSize, unsigned int n\n \n     if ((int)nFile != nLastBlockFile) {\n         if (!fKnown) {\n-            LogPrintf(\"Leaving block file %i: %s\\n\", nLastBlockFile, vinfoBlockFile[nLastBlockFile].ToString());\n+            LogPrint(BCLog::VALIDATION, \"Leaving block file %i: %s\\n\", nLastBlockFile, vinfoBlockFile[nLastBlockFile].ToString());\n         }\n         FlushBlockFile(!fKnown);\n         nLastBlockFile = nFile;"
      }
    ]
  }
]