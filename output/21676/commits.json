[
  {
    "sha": "fa78590a8fffdfc7e98ddb1f81218f05b1935a0a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTc4NTkwYThmZmZkZmM3ZTk4ZGRiMWY4MTIxOGYwNWIxOTM1YTBh",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-14T08:03:39Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-14T08:05:09Z"
      },
      "message": "test: Use mocktime to avoid intermittent failure",
      "tree": {
        "sha": "c15c163234096e2688c5bc1e3ff391f1d0ac8b81",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c15c163234096e2688c5bc1e3ff391f1d0ac8b81"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa78590a8fffdfc7e98ddb1f81218f05b1935a0a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgexQwAqJ8I3yDDa2iXIT7JZELLoB6AIqVmtTzt5VgJzFiZRx1BAuOR1pBbW5uC\n5VYSnz8gqZKRYEbaxvEvydHFk8aAc/+OFRUyAyvvL8UedOFdFMwMHkHXkQ1i09vJ\ndagDX/mIMuEBB4KkD1eRpR2fEH/LvJcdSSGydsfCIaU4BVQKSSSaCk8BHBU9JK3l\n76n5xrdVMDYATZiMag1zJbTqA+9kjIjen+Sx1JtTst7JHciS3BtIZ4Eu9OdUhbqS\nBGPX2VU8Ir/3qe4wNF2Ogl3BZO0Y/mjcNB3yIEP6bH+kym2elh+vmjFCSZazW5y7\n9yBvKVy47m3iPxR/9k+3hMA5HyC8jwlZ7xFQvIZLBG9LzLKpIOaaQ1HROSf8GLCk\nZYcslRNtxED5WxLvpmTlLqeaoSpw/OPzkytPHP97c5OqwVRT/g+DqM2DUZMg1EuG\nkOlyic7fBXensCGQHZPH2iC5bsnoxS4iF7M8sqd46EUwVY+ACjcJt4rBBo8sP4X+\n2xY6wA7i\n=w7Kj\n-----END PGP SIGNATURE-----",
        "payload": "tree c15c163234096e2688c5bc1e3ff391f1d0ac8b81\nparent b8e5bbdf93e5b3b35557d3b0e57a426492d568c1\nauthor MarcoFalke <falke.marco@gmail.com> 1618387419 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1618387509 +0200\n\ntest: Use mocktime to avoid intermittent failure\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa78590a8fffdfc7e98ddb1f81218f05b1935a0a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa78590a8fffdfc7e98ddb1f81218f05b1935a0a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa78590a8fffdfc7e98ddb1f81218f05b1935a0a/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b8e5bbdf93e5b3b35557d3b0e57a426492d568c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b8e5bbdf93e5b3b35557d3b0e57a426492d568c1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b8e5bbdf93e5b3b35557d3b0e57a426492d568c1"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 7,
      "deletions": 4
    },
    "files": [
      {
        "sha": "a1ad33b86634a0261505c388b0924673d9da45d4",
        "filename": "src/test/rpc_tests.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa78590a8fffdfc7e98ddb1f81218f05b1935a0a/src/test/rpc_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa78590a8fffdfc7e98ddb1f81218f05b1935a0a/src/test/rpc_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_tests.cpp?ref=fa78590a8fffdfc7e98ddb1f81218f05b1935a0a",
        "patch": "@@ -275,7 +275,11 @@ BOOST_AUTO_TEST_CASE(rpc_ban)\n \n     BOOST_CHECK_NO_THROW(CallRPC(std::string(\"clearbanned\")));\n \n+    auto now = 10'000s;\n+    SetMockTime(now);\n     BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"setban 127.0.0.0/24 add 200\")));\n+    SetMockTime(now += 2s);\n+    const int64_t time_remaining_expected{198};\n     BOOST_CHECK_NO_THROW(r = CallRPC(std::string(\"listbanned\")));\n     ar = r.get_array();\n     o1 = ar[0].get_obj();\n@@ -284,12 +288,10 @@ BOOST_AUTO_TEST_CASE(rpc_ban)\n     const int64_t ban_created{find_value(o1, \"ban_created\").get_int64()};\n     const int64_t ban_duration{find_value(o1, \"ban_duration\").get_int64()};\n     const int64_t time_remaining{find_value(o1, \"time_remaining\").get_int64()};\n-    const int64_t now{GetTime()};\n     BOOST_CHECK_EQUAL(adr.get_str(), \"127.0.0.0/24\");\n-    BOOST_CHECK(banned_until > now);\n-    BOOST_CHECK(banned_until - now <= 200);\n+    BOOST_CHECK_EQUAL(banned_until, time_remaining_expected + now.count());\n     BOOST_CHECK_EQUAL(ban_duration, banned_until - ban_created);\n-    BOOST_CHECK_EQUAL(time_remaining, banned_until - now);\n+    BOOST_CHECK_EQUAL(time_remaining, time_remaining_expected);\n \n     // must throw an exception because 127.0.0.1 is in already banned subnet range\n     BOOST_CHECK_THROW(r = CallRPC(std::string(\"setban 127.0.0.1 add\")), std::runtime_error);\n@@ -333,6 +335,7 @@ BOOST_AUTO_TEST_CASE(rpc_ban)\n     o1 = ar[0].get_obj();\n     adr = find_value(o1, \"address\");\n     BOOST_CHECK_EQUAL(adr.get_str(), \"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/128\");\n+    SetMockTime(0s);\n }\n \n BOOST_AUTO_TEST_CASE(rpc_convert_values_generatetoaddress)"
      }
    ]
  },
  {
    "sha": "fa40d6a1c47ac7f3dc6c11a2e6642cfef95422c1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTQwZDZhMWM0N2FjN2YzZGM2YzExYTJlNjY0MmNmZWY5NTQyMmMx",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-14T08:30:01Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-14T15:38:07Z"
      },
      "message": "test: Reset mocktime in the common setup\n\nDoing it there will reduce code bloat and also ensure no test can \"forget\" to reset it",
      "tree": {
        "sha": "9dbce99e4f02d4b59e8889f0cb607c88fcecaab3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9dbce99e4f02d4b59e8889f0cb607c88fcecaab3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa40d6a1c47ac7f3dc6c11a2e6642cfef95422c1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUia5wv/QC5saqL8TA/H1E3R9kEVtVh11Jz6gdgHTihnLhfxiU98O13F/X8tw9KC\nwCGKB6EOXosMgyZDOiETwECQ3zF2uXvwFStLAt9DqCjfT25S9Lh4DIqElgeuH9FA\nuMPFagIOrOLGbH/le38CzIkI37eLJZ7vNlIkbbS04qxuOGlLztZE9DCDP0jtM0oW\nY5k5tIheEZj8eGbaHkK02QjLGji1JBgOUtkR09YpGm0F2+D6uRbj6hRxJBOkLnxx\nh2xWjzr5qY27oqkFbn+UVhdRhomu2e63ttkq4YklMiI/+oBCSmiXkfZcc8RZ7u8R\n6vdyAa/1G5eg2EhQdwSX7CXqMCyv1mEcXOiOUjuonWkhjKBT9Wz1wCEw6L3bFI62\nH3dWICzALNxgiymEBeQQnqSURvhmuhNlKDEn6IdJICDTZT9AgBuo9WC1dsaIN1/a\n3q4Ly2491C6v6N8N9V8dRrW5IUa4n7AmHOevlu7FtxwtqcNSEiP5x2Z2zFgCP2OG\nEoY1S8Kq\n=PxWF\n-----END PGP SIGNATURE-----",
        "payload": "tree 9dbce99e4f02d4b59e8889f0cb607c88fcecaab3\nparent fa78590a8fffdfc7e98ddb1f81218f05b1935a0a\nauthor MarcoFalke <falke.marco@gmail.com> 1618389001 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1618414687 +0200\n\ntest: Reset mocktime in the common setup\n\nDoing it there will reduce code bloat and also ensure no test can \"forget\" to reset it\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa40d6a1c47ac7f3dc6c11a2e6642cfef95422c1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa40d6a1c47ac7f3dc6c11a2e6642cfef95422c1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa40d6a1c47ac7f3dc6c11a2e6642cfef95422c1/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa78590a8fffdfc7e98ddb1f81218f05b1935a0a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa78590a8fffdfc7e98ddb1f81218f05b1935a0a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa78590a8fffdfc7e98ddb1f81218f05b1935a0a"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 1,
      "deletions": 13
    },
    "files": [
      {
        "sha": "599e62868560e6a321537d08a14a886a9703725a",
        "filename": "src/test/denialofservice_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa40d6a1c47ac7f3dc6c11a2e6642cfef95422c1/src/test/denialofservice_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa40d6a1c47ac7f3dc6c11a2e6642cfef95422c1/src/test/denialofservice_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/denialofservice_tests.cpp?ref=fa40d6a1c47ac7f3dc6c11a2e6642cfef95422c1",
        "patch": "@@ -116,7 +116,6 @@ BOOST_AUTO_TEST_CASE(outbound_slow_chain_eviction)\n         BOOST_CHECK(peerLogic->SendMessages(&dummyNode1)); // should result in disconnect\n     }\n     BOOST_CHECK(dummyNode1.fDisconnect == true);\n-    SetMockTime(0);\n \n     peerLogic->FinalizeNode(dummyNode1);\n }"
      },
      {
        "sha": "e99c6e0fc8bd8e5a090fa44b4e49fa4663e83c22",
        "filename": "src/test/logging_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa40d6a1c47ac7f3dc6c11a2e6642cfef95422c1/src/test/logging_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa40d6a1c47ac7f3dc6c11a2e6642cfef95422c1/src/test/logging_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/logging_tests.cpp?ref=fa40d6a1c47ac7f3dc6c11a2e6642cfef95422c1",
        "patch": "@@ -14,7 +14,6 @@ BOOST_FIXTURE_TEST_SUITE(logging_tests, BasicTestingSetup)\n \n BOOST_AUTO_TEST_CASE(logging_timer)\n {\n-\n     SetMockTime(1);\n     auto sec_timer = BCLog::Timer<std::chrono::seconds>(\"tests\", \"end_msg\");\n     SetMockTime(2);\n@@ -29,8 +28,6 @@ BOOST_AUTO_TEST_CASE(logging_timer)\n     auto micro_timer = BCLog::Timer<std::chrono::microseconds>(\"tests\", \"end_msg\");\n     SetMockTime(2);\n     BOOST_CHECK_EQUAL(micro_timer.LogMsg(\"test micros\"), \"tests: test micros (1000000.00\u03bcs)\");\n-\n-    SetMockTime(0);\n }\n \n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "bf36f8a6c998f05ddd604ea10eee6d23b24c63ab",
        "filename": "src/test/mempool_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa40d6a1c47ac7f3dc6c11a2e6642cfef95422c1/src/test/mempool_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa40d6a1c47ac7f3dc6c11a2e6642cfef95422c1/src/test/mempool_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/mempool_tests.cpp?ref=fa40d6a1c47ac7f3dc6c11a2e6642cfef95422c1",
        "patch": "@@ -571,8 +571,6 @@ BOOST_AUTO_TEST_CASE(MempoolSizeLimitTest)\n     SetMockTime(42 + 8*CTxMemPool::ROLLING_FEE_HALFLIFE + CTxMemPool::ROLLING_FEE_HALFLIFE/2 + CTxMemPool::ROLLING_FEE_HALFLIFE/4);\n     BOOST_CHECK_EQUAL(pool.GetMinFee(1).GetFeePerK(), 0);\n     // ... unless it has gone all the way to 0 (after getting past 1000/2)\n-\n-    SetMockTime(0);\n }\n \n inline CTransactionRef make_tx(std::vector<CAmount>&& output_values, std::vector<CTransactionRef>&& inputs=std::vector<CTransactionRef>(), std::vector<uint32_t>&& input_indices=std::vector<uint32_t>())"
      },
      {
        "sha": "67fbc9f8a2cf4e4e2423e343f2ea7e2379cb74e1",
        "filename": "src/test/rpc_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa40d6a1c47ac7f3dc6c11a2e6642cfef95422c1/src/test/rpc_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa40d6a1c47ac7f3dc6c11a2e6642cfef95422c1/src/test/rpc_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_tests.cpp?ref=fa40d6a1c47ac7f3dc6c11a2e6642cfef95422c1",
        "patch": "@@ -335,7 +335,6 @@ BOOST_AUTO_TEST_CASE(rpc_ban)\n     o1 = ar[0].get_obj();\n     adr = find_value(o1, \"address\");\n     BOOST_CHECK_EQUAL(adr.get_str(), \"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/128\");\n-    SetMockTime(0s);\n }\n \n BOOST_AUTO_TEST_CASE(rpc_convert_values_generatetoaddress)"
      },
      {
        "sha": "d644dd23275adfe1c741db6d646257671ba50805",
        "filename": "src/test/util/setup_common.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa40d6a1c47ac7f3dc6c11a2e6642cfef95422c1/src/test/util/setup_common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa40d6a1c47ac7f3dc6c11a2e6642cfef95422c1/src/test/util/setup_common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.cpp?ref=fa40d6a1c47ac7f3dc6c11a2e6642cfef95422c1",
        "patch": "@@ -120,6 +120,7 @@ BasicTestingSetup::BasicTestingSetup(const std::string& chainName, const std::ve\n \n BasicTestingSetup::~BasicTestingSetup()\n {\n+    SetMockTime(0s); // Reset mocktime for following tests\n     LogInstance().DisconnectTestLogger();\n     fs::remove_all(m_path_root);\n     gArgs.ClearArgs();\n@@ -303,7 +304,6 @@ CMutableTransaction TestChain100Setup::CreateValidMempoolTransaction(CTransactio\n TestChain100Setup::~TestChain100Setup()\n {\n     gArgs.ForceSetArg(\"-segwitheight\", \"0\");\n-    SetMockTime(0);\n }\n \n CTxMemPoolEntry TestMemPoolEntryHelper::FromTx(const CMutableTransaction& tx) const"
      },
      {
        "sha": "011d59ecaf6be5b5cbe1fea8cce29542d5ceaa46",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa40d6a1c47ac7f3dc6c11a2e6642cfef95422c1/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa40d6a1c47ac7f3dc6c11a2e6642cfef95422c1/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=fa40d6a1c47ac7f3dc6c11a2e6642cfef95422c1",
        "patch": "@@ -295,8 +295,6 @@ BOOST_FIXTURE_TEST_CASE(importwallet_rescan, TestChain100Setup)\n             BOOST_CHECK_EQUAL(found, expected);\n         }\n     }\n-\n-    SetMockTime(0);\n }\n \n // Check that GetImmatureCredit() returns a newly calculated value instead of\n@@ -377,9 +375,6 @@ BOOST_AUTO_TEST_CASE(ComputeTimeSmart)\n     // If there are future entries, new transaction should use time of the\n     // newest entry that is no more than 300 seconds ahead of the clock time.\n     BOOST_CHECK_EQUAL(AddTx(*m_node.chainman, m_wallet, 5, 50, 600), 300);\n-\n-    // Reset mock time for other tests.\n-    SetMockTime(0);\n }\n \n BOOST_AUTO_TEST_CASE(LoadReceiveRequests)"
      }
    ]
  }
]