laanwj,2013-10-11T11:08:03Z,Encapsulating some of the global state is a great idea either way.\n,https://github.com/bitcoin/bitcoin/pull/3077#issuecomment-26129497,26129497,
jgarzik,2013-10-11T13:14:24Z,"Seems OK except for some English that bugs me:  ""tip"" does not necessarily imply ""best tip"" to me.\n",https://github.com/bitcoin/bitcoin/pull/3077#issuecomment-26135767,26135767,
sipa,2013-10-11T14:10:48Z,"If you're talking about CChain, that's intentional: it's just a chain of blocks, and a chain has a tip. It has no concept of ""best"".\n\nOne particular (and for now, only) instance of CChain, chainBlocks, represents the currently active (=synchronized) block chain, which indeed follows the notion of best chain (but during a reorganization for example, it's not ""best"" either).\n\nMore generically, t",https://github.com/bitcoin/bitcoin/pull/3077#issuecomment-26139826,26139826,
jgarzik,2013-10-11T14:21:19Z,"In the local context of the CChain class itself, ""tip"" makes sense.\n\nIn the wider context of the entire codebase, it makes the code less readable, because our blockchain can have multiple tips, only one of which is active/best.\n",https://github.com/bitcoin/bitcoin/pull/3077#issuecomment-26140666,26140666,
sipa,2013-10-11T14:25:17Z,"I see what you mean. I think part of the problem is that many people use the term ""block chain"" to in fact refer to the entire block tree, which consists of many chains - while in this context it actually refers to just the active chain within it.\n\nSuggestion: call it chainActive or chainSynchronized instead of chainBlocks? chainBest is a possibility as well, but equally ambiguous imho.\n",https://github.com/bitcoin/bitcoin/pull/3077#issuecomment-26140936,26140936,
jgarzik,2013-10-11T14:32:42Z,@sipa You've got it.  Any of those suggestions is fine.\n,https://github.com/bitcoin/bitcoin/pull/3077#issuecomment-26141505,26141505,
RayDillinger,2013-10-11T16:32:23Z,"On 10/10/2013 02:10 PM, Pieter Wuille wrote:\n\n> This removes several globals (pindexBest, hashBestChain, nBestHeight, nBestChainWork, vBlockIndexByHeight), and turns them into an instance of a CChain class, chainBlocks.\n> \n> This is a preparation for a second iteration of headersfirst which I&#39;m implementing, which will add a second instance (chainHeaders). This pull request shouldn&#39;t c",https://github.com/bitcoin/bitcoin/pull/3077#issuecomment-26151319,26151319,
sipa,2013-10-11T16:39:19Z,"That is completely outside of the scope of this (or any single) pull request, and requires pretty much a full redesign of how Bitcoin's consensus mechanism works.\n\nIf you don't want to download or process the whole blockchain, run an SPV client (multibit, bitcoin wallet for android, ...). There are proposals that would enable non-full nodes to contribute back to the network, but they are far mor",https://github.com/bitcoin/bitcoin/pull/3077#issuecomment-26151839,26151839,
sipa,2013-10-11T16:55:41Z,@jgarzik Updated the variable name to chainActive.\n,https://github.com/bitcoin/bitcoin/pull/3077#issuecomment-26152995,26152995,
jgarzik,2013-10-11T16:59:08Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/3077#issuecomment-26153246,26153246,
sipa,2013-10-12T13:05:22Z,(moving some extra commits to another pullreq)\n,https://github.com/bitcoin/bitcoin/pull/3077#issuecomment-26197113,26197113,
BitcoinPullTester,2013-10-12T13:17:58Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4c6d41b8b653ef90639b1a32f6aab0bb1cef90c5 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/3077#issuecomment-26197281,26197281,
jgarzik,2013-10-15T02:30:55Z,re-ACK\n,https://github.com/bitcoin/bitcoin/pull/3077#issuecomment-26305185,26305185,
gavinandresen,2013-10-15T03:38:46Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/3077#issuecomment-26307214,26307214,
rebroad,2014-09-06T11:19:03Z,When should this be used in preference to chainActive.Height() please?\n,https://github.com/bitcoin/bitcoin/pull/3077#discussion_r17208075,17208075,src/main.cpp
laanwj,2014-09-06T12:09:18Z,Well it's a signal handler for nodeSignals.GetHeight - you aren't supposed to use this function directly.\n,https://github.com/bitcoin/bitcoin/pull/3077#discussion_r17208243,17208243,src/main.cpp
sipa,2014-09-06T12:12:32Z,"chainActive is an internal data structure in main (which is, for now, more widely accessible than it should be). GetHeight() is a way to expose part of the information contained in it in a safe way.\n",https://github.com/bitcoin/bitcoin/pull/3077#discussion_r17208253,17208253,src/main.cpp
laanwj,2014-09-06T12:50:57Z,@sipa Isn't nodeSignals only supposed to be used by net?\n,https://github.com/bitcoin/bitcoin/pull/3077#discussion_r17208377,17208377,src/main.cpp
rebroad,2014-09-07T08:34:34Z,"@sipa ah, ok, thanks. ...Safer in what way?\n",https://github.com/bitcoin/bitcoin/pull/3077#discussion_r17213609,17213609,src/main.cpp
