[
  {
    "sha": "cc975745d585edf6ae3a9313f45da6dbdee16cf6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYzk3NTc0NWQ1ODVlZGY2YWUzYTkzMTNmNDVkYTZkYmRlZTE2Y2Y2",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-11-16T14:33:40Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-11-17T12:03:59Z"
      },
      "message": "[qa] Split README.md to /qa and /qa/rpc-tests\n\n+ Update with new -help message",
      "tree": {
        "sha": "4dce55cd6a8046c22c3faf7a312b9e4478fee853",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4dce55cd6a8046c22c3faf7a312b9e4478fee853"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cc975745d585edf6ae3a9313f45da6dbdee16cf6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc975745d585edf6ae3a9313f45da6dbdee16cf6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cc975745d585edf6ae3a9313f45da6dbdee16cf6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc975745d585edf6ae3a9313f45da6dbdee16cf6/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e54ebbf6009716a7abcd4d8d3f7bd910e88decdc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e54ebbf6009716a7abcd4d8d3f7bd910e88decdc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e54ebbf6009716a7abcd4d8d3f7bd910e88decdc"
      }
    ],
    "stats": {
      "total": 89,
      "additions": 46,
      "deletions": 43
    },
    "files": [
      {
        "sha": "93157f4f1f93ceadfe4b05bd64ea74b3d0b26f1e",
        "filename": "qa/README.md",
        "status": "added",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cc975745d585edf6ae3a9313f45da6dbdee16cf6/qa/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cc975745d585edf6ae3a9313f45da6dbdee16cf6/qa/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/README.md?ref=cc975745d585edf6ae3a9313f45da6dbdee16cf6",
        "patch": "@@ -0,0 +1,46 @@\n+Notes\n+=====\n+\n+You can run any single test by calling `qa/pull-tester/rpc-tests.py <testname>`.\n+\n+Or you can run any combination of tests by calling `qa/pull-tester/rpc-tests.py <testname1> <testname2> <testname3> ...`\n+\n+Run the regression test suite with `qa/pull-tester/rpc-tests.py`\n+\n+Run all possible tests with `qa/pull-tester/rpc-tests.py -extended`\n+\n+Possible options:\n+\n+```\n+  -h, --help            show this help message and exit\n+  --nocleanup           Leave bitcoinds and test.* datadir on exit or error\n+  --noshutdown          Don't stop bitcoinds after the test execution\n+  --srcdir=SRCDIR       Source directory containing bitcoind/bitcoin-cli\n+                        (default: ../../src)\n+  --tmpdir=TMPDIR       Root directory for datadirs\n+  --tracerpc            Print out all RPC calls as they are made\n+  --coveragedir=COVERAGEDIR\n+                        Write tested RPC commands into this directory\n+```\n+\n+If you set the environment variable `PYTHON_DEBUG=1` you will get some debug output (example: `PYTHON_DEBUG=1 qa/pull-tester/rpc-tests.py wallet`). \n+\n+A 200-block -regtest blockchain and wallets for four nodes\n+is created the first time a regression test is run and\n+is stored in the cache/ directory. Each node has 25 mature\n+blocks (25*50=1250 BTC) in its wallet.\n+\n+After the first run, the cache/ blockchain and wallets are\n+copied into a temporary directory and used as the initial\n+test state.\n+\n+If you get into a bad state, you should be able\n+to recover with:\n+\n+```bash\n+rm -rf cache\n+killall bitcoind\n+```\n+\n+Further information about the test framework and individual rpc\n+tests is found in [qa/rpc-tests/README.md](/qa/rpc-tests/README.md)."
      },
      {
        "sha": "e8d77f7ef292209af29175f07673a0530affe1fa",
        "filename": "qa/rpc-tests/README.md",
        "status": "modified",
        "additions": 0,
        "deletions": 43,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cc975745d585edf6ae3a9313f45da6dbdee16cf6/qa/rpc-tests/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cc975745d585edf6ae3a9313f45da6dbdee16cf6/qa/rpc-tests/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/README.md?ref=cc975745d585edf6ae3a9313f45da6dbdee16cf6",
        "patch": "@@ -33,49 +33,6 @@ Helpers for script.py\n ### [test_framework/blocktools.py](test_framework/blocktools.py)\n Helper functions for creating blocks and transactions.\n \n-\n-Notes\n-=====\n-\n-You can run any single test by calling `qa/pull-tester/rpc-tests.py <testname>`.\n-\n-Or you can run any combination of tests by calling `qa/pull-tester/rpc-tests.py <testname1> <testname2> <testname3> ...`\n-\n-Run the regression test suite with `qa/pull-tester/rpc-tests.py`\n-\n-Run all possible tests with `qa/pull-tester/rpc-tests.py -extended`\n-\n-Possible options:\n-\n-```\n--h, --help       show this help message and exit\n-  --nocleanup      Leave bitcoinds and test.* datadir on exit or error\n-  --noshutdown     Don't stop bitcoinds after the test execution\n-  --srcdir=SRCDIR  Source directory containing bitcoind/bitcoin-cli (default:\n-                   ../../src)\n-  --tmpdir=TMPDIR  Root directory for datadirs\n-  --tracerpc       Print out all RPC calls as they are made\n-```\n-\n-If you set the environment variable `PYTHON_DEBUG=1` you will get some debug output (example: `PYTHON_DEBUG=1 qa/pull-tester/rpc-tests.py wallet`). \n-\n-A 200-block -regtest blockchain and wallets for four nodes\n-is created the first time a regression test is run and\n-is stored in the cache/ directory. Each node has 25 mature\n-blocks (25*50=1250 BTC) in its wallet.\n-\n-After the first run, the cache/ blockchain and wallets are\n-copied into a temporary directory and used as the initial\n-test state.\n-\n-If you get into a bad state, you should be able\n-to recover with:\n-\n-```bash\n-rm -rf cache\n-killall bitcoind\n-```\n-\n P2P test design notes\n ---------------------\n "
      }
    ]
  },
  {
    "sha": "e16ee1cd1e1fd604ab9c2c4a715166d3fb40a53b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMTZlZTFjZDFlMWZkNjA0YWI5YzJjNGE3MTUxNjZkM2ZiNDBhNTNi",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-11-17T23:26:07Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-11-18T10:59:12Z"
      },
      "message": "[qa] Extend README.md",
      "tree": {
        "sha": "07f4fbb374397226d6d4c1469f0aeba6f1edd7a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/07f4fbb374397226d6d4c1469f0aeba6f1edd7a9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e16ee1cd1e1fd604ab9c2c4a715166d3fb40a53b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e16ee1cd1e1fd604ab9c2c4a715166d3fb40a53b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e16ee1cd1e1fd604ab9c2c4a715166d3fb40a53b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e16ee1cd1e1fd604ab9c2c4a715166d3fb40a53b/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cc975745d585edf6ae3a9313f45da6dbdee16cf6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc975745d585edf6ae3a9313f45da6dbdee16cf6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cc975745d585edf6ae3a9313f45da6dbdee16cf6"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 18,
      "deletions": 6
    },
    "files": [
      {
        "sha": "b40ad0e3967b98021e9bf36fd8f381aefd5dbe76",
        "filename": "README.md",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e16ee1cd1e1fd604ab9c2c4a715166d3fb40a53b/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e16ee1cd1e1fd604ab9c2c4a715166d3fb40a53b/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=e16ee1cd1e1fd604ab9c2c4a715166d3fb40a53b",
        "patch": "@@ -49,9 +49,10 @@ lots of money.\n ### Automated Testing\n \n Developers are strongly encouraged to write unit tests for new code, and to\n-submit new unit tests for old code. Unit tests can be compiled and run (assuming they weren't disabled in configure) with: `make check`\n+submit new unit tests for old code. Unit tests can be compiled and run\n+(assuming they weren't disabled in configure) with: `make check`\n \n-There are also regression and integration tests of the RPC interface, written\n+There are also [regression and integration tests](/qa) of the RPC interface, written\n in Python, that are run automatically on the build server.\n These tests can be run with: `qa/pull-tester/rpc-tests.py`\n "
      },
      {
        "sha": "758d1f47e5ec658cceeb96d9c8e3e06a14fe993e",
        "filename": "qa/README.md",
        "status": "modified",
        "additions": 15,
        "deletions": 4,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e16ee1cd1e1fd604ab9c2c4a715166d3fb40a53b/qa/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e16ee1cd1e1fd604ab9c2c4a715166d3fb40a53b/qa/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/README.md?ref=e16ee1cd1e1fd604ab9c2c4a715166d3fb40a53b",
        "patch": "@@ -1,5 +1,12 @@\n-Notes\n-=====\n+The [pull-tester](/qa/pull-tester/) folder contains a script to call\n+multiple tests from the [rpc-tests](/qa/rpc-tests/) folder.\n+\n+Every pull request to the bitcoin repository is built and run through\n+the regression test suite. You can also run all or only individual\n+tests locally.\n+\n+Running tests\n+=============\n \n You can run any single test by calling `qa/pull-tester/rpc-tests.py <testname>`.\n \n@@ -23,7 +30,8 @@ Possible options:\n                         Write tested RPC commands into this directory\n ```\n \n-If you set the environment variable `PYTHON_DEBUG=1` you will get some debug output (example: `PYTHON_DEBUG=1 qa/pull-tester/rpc-tests.py wallet`). \n+If you set the environment variable `PYTHON_DEBUG=1` you will get some debug\n+output (example: `PYTHON_DEBUG=1 qa/pull-tester/rpc-tests.py wallet`).\n \n A 200-block -regtest blockchain and wallets for four nodes\n is created the first time a regression test is run and\n@@ -42,5 +50,8 @@ rm -rf cache\n killall bitcoind\n ```\n \n+Writing tests\n+=============\n+You are encouraged to write tests for new or existing features.\n Further information about the test framework and individual rpc\n-tests is found in [qa/rpc-tests/README.md](/qa/rpc-tests/README.md).\n+tests is found in [qa/rpc-tests](/qa/rpc-tests)."
      }
    ]
  }
]