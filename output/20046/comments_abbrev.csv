ryanofsky,2020-09-30 14:29:01,"This commit was originally part of #19160 but I'm making it a standalone PR because it seems to be causing travis timeouts on the macOS 10.12 build that I don't know how to fix:\n\n- https://travis-ci.org/github/bitcoin/bitcoin/jobs/730006940\n- https://travis-ci.org/github/bitcoin/bitcoin/jobs/730937293\n- https://travis-ci.org/github/bitcoin/bitcoin/jobs/730939841\n- https://travis-ci.org/g",https://github.com/bitcoin/bitcoin/pull/20046#issuecomment-701427950,701427950,
ryanofsky,2020-09-30 15:41:28,"Reproduced the travis macOS 10.12 timeout again:\n\n- https://travis-ci.org/github/bitcoin/bitcoin/jobs/731609242\n\n@MarcoFalke do you know any way to debug or fix this? I don't think this PR is actually changing the build results. I think maybe all it is doing is invalidating the travis cache, and that macOS 10.12 travis build is too slow to update the cache. Does this sound right?\n",https://github.com/bitcoin/bitcoin/pull/20046#issuecomment-701473374,701473374,
MarcoFalke,2020-09-30 16:59:54,"The build is probably failing altogether. For temporary debugging, you can remove the `&> ""/dev/null""`. Though, the `&> ""/dev/null""` can't be removed from master, because other builds would fail on travis due to too much output.",https://github.com/bitcoin/bitcoin/pull/20046#issuecomment-701518125,701518125,
ryanofsky,2020-09-30 22:48:21,"Thanks @MarcoFalke! It still looks to me that this PR might be uncovering a pre-existing problem with the macOS 10.12 build, and not actually causing the failure. Removing >/dev/null in d9dc091b257e9736d67ca8eeecbaf2da6682a3e5 shows the error ""configure: error: Qt5Core >= 5.5.1 not found"" (https://travis-ci.org/github/bitcoin/bitcoin/jobs/731743605#L2010) with debug output:\n\n```\nconfigure:27",https://github.com/bitcoin/bitcoin/pull/20046#issuecomment-701686770,701686770,
dongcarl,2020-09-30 22:59:30,"FWIW I'm fairly certain the failure in #19683 is unrelated. As it's due to over-specifying `-fuse-ld=` which `clang` treats as a `-Wunused-command-line-argument` warning, but because we also have `-Werror` on, it turns into an error.",https://github.com/bitcoin/bitcoin/pull/20046#issuecomment-701690196,701690196,
ryanofsky,2020-09-30 23:03:17,"> FWIW I'm fairly certain the failure in #19683 is unrelated. As it's due to over-specifying `-fuse-ld=` which `clang` treats as a `-Wunused-command-line-argument` warning, but because we also have `-Werror` on, it turns into an error.\n\nI'm also sure it's unrelated. But since it happens before my error, if you fix it you might see the same problem there",https://github.com/bitcoin/bitcoin/pull/20046#issuecomment-701691387,701691387,
ryanofsky,2020-10-01 00:46:39,"It does appear the Qt5Core error is not related to the change in this PR. If I revert the original commit da6c9b7089d2cd0f5380d64882bd18f8794675f1, and just add a comment to funcs.mk 7472ee73d1541d822048c53157adc5030fbef5be, the error still happens: `configure: error: Qt5Core >= 5.5.1 not found`:\n\n- [Diff](https://github.com/ryanofsky/bitcoin/compare/72affcb16cad45bd9e08ca163b2147fd01b84b70..p",https://github.com/bitcoin/bitcoin/pull/20046#issuecomment-701721329,701721329,
ryanofsky,2020-10-01 00:55:26,"I think I see why the Qt5Core error is happening. I was trying to debug in https://github.com/bitcoin/bitcoin/commit/d9dc091b257e9736d67ca8eeecbaf2da6682a3e5 by replacing `source ./ci/test/05_before_script.sh &> ""/dev/null""` with `source ./ci/test/05_before_script.sh &`, but actually I need to drop the trailing `&` character, otherwise the before_script command doesn't block at all.",https://github.com/bitcoin/bitcoin/pull/20046#issuecomment-701723936,701723936,
ryanofsky,2020-10-01 02:48:11,"After pushing e5d6dd00509d84de788d9f9f2d5511e2fe7c4c40, was able to reproduce the original macOS 10.12 error and get debug information: https://travis-ci.org/github/bitcoin/bitcoin/jobs/731786312#L4517. The error was `CMake Error: TRY_RUN() invoked in cross-compiling mode` building the `native_cdrkit` package\n\n\n---\n\n\nAdded 1 commits da6c9b7089d2cd0f5380d64882bd18f8794675f1 -> d9dc091b2",https://github.com/bitcoin/bitcoin/pull/20046#issuecomment-701786973,701786973,
DrahtBot,2020-10-01 04:51:20,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/20046#issuecomment-701882466,701882466,
DrahtBot,2020-10-02 07:52:12,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 3487e421a7fef4b28381efcf21a7e38483946cec<br>(master) | commit 6ca87c668789f3d8055a5c5421083f4a4cd3b6ef<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`610763669e7e3cb7...`](https://drahtbot.space/gitian/bitcoin/bitcoin/3487e421a7fef4b28381efcf21a7e38483946cec/bitcoin-3487e421a7fe-aarch64-l,https://github.com/bitcoin/bitcoin/pull/20046#issuecomment-702582966,702582966,
DrahtBot,2020-10-03 14:47:33,<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit 171cd05ae3413e18fd6382572c86f2bb21ab2fd9<br>(master) | commit 0dc72add5b576b15598893d9c85eede50bbafd97<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`2544005fe8e12a29...`](https://drahtbot.space/guix/bitcoin/bitcoin/171cd05ae3413e18fd6382572c86f2bb21ab2fd9/bitcoin-171cd05ae341-aarch64-linux,https://github.com/bitcoin/bitcoin/pull/20046#issuecomment-703115092,703115092,
fanquake,2020-12-09 08:27:47,"ACK 7d0271b5c30f86e4af175a5ab7df5e593cd85195 - I haven't looked in depth, but I've re-read through #19981 and checked the failure by testing #19160 (with this reverted):\n```bash\n  CXX      bitcoin_node-bitcoind.o\n  CXX      init/bitcoin_node-bitcoin-node.o\n  GEN      ipc/capnp/echo.capnp.c++\n/home/ubuntu/bitcoin/depends/x86_64-pc-linux-gnu/native/bin/mpgen: error while loading shared lib",https://github.com/bitcoin/bitcoin/pull/20046#issuecomment-741616846,741616846,
ryanofsky,2020-12-09 17:45:51,"Thanks for looking fanquake. Note original version of this PR was more complicated and ugly. Now that it's is just setting CMAKE_INSTALL_RPATH for native packages, I think it's pretty clean and straightforward. It may even a be good thing to set rpath explicitly and be clear the build looks for depends libraries ahead of system libraries",https://github.com/bitcoin/bitcoin/pull/20046#issuecomment-741939772,741939772,
dongcarl,2020-12-09 21:44:27,"ACK 7d0271b Looked into this a bit, it makes sense that for the things we build in depends, we want the library search to start in depends. It seems reasonable to expect this to happen automatically when `CMAKE_INSTALL_PREFIX` and `INSTALL_RPATH_USE_LINK_PATH` are set, but oh well...\n\n-----\n\nI looked into the CMake codebase a bit, but couldn't find a definite culprit for the weird CMAKE_IN",https://github.com/bitcoin/bitcoin/pull/20046#issuecomment-742082025,742082025,
