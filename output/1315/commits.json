[
  {
    "sha": "385f730f31ab7218d8c0fcc76f5c7a2b35783c6a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozODVmNzMwZjMxYWI3MjE4ZDhjMGZjYzc2ZjVjN2EyYjM1NzgzYzZh",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-05-07T19:36:30Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-05-15T15:53:46Z"
      },
      "message": "Hopefully final fix for the stuck blockchain issue\n\nImmediately issue a \"getblocks\", instead of a \"getdata\" (which will\ntrigger the relevant \"inv\" to be sent anyway), and only do so when\nthe previous set of invs led us into a known and attached part of\nthe block tree.",
      "tree": {
        "sha": "8dcac2bad7eba078e1b20a83fcc82df347151aac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8dcac2bad7eba078e1b20a83fcc82df347151aac"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/385f730f31ab7218d8c0fcc76f5c7a2b35783c6a",
      "comment_count": 8,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/385f730f31ab7218d8c0fcc76f5c7a2b35783c6a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/385f730f31ab7218d8c0fcc76f5c7a2b35783c6a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/385f730f31ab7218d8c0fcc76f5c7a2b35783c6a/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "790fe2e558d93572f87b7f4117a54d899903c5bf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/790fe2e558d93572f87b7f4117a54d899903c5bf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/790fe2e558d93572f87b7f4117a54d899903c5bf"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 13,
      "deletions": 11
    },
    "files": [
      {
        "sha": "e40acf6d32daf1d93ca5291a54188d0bfc73ef9c",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 11,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/385f730f31ab7218d8c0fcc76f5c7a2b35783c6a/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/385f730f31ab7218d8c0fcc76f5c7a2b35783c6a/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=385f730f31ab7218d8c0fcc76f5c7a2b35783c6a",
        "patch": "@@ -2482,8 +2482,10 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         // find last block in inv vector\n         unsigned int nLastBlock = (unsigned int)(-1);\n         for (unsigned int nInv = 0; nInv < vInv.size(); nInv++) {\n-            if (vInv[vInv.size() - 1 - nInv].type == MSG_BLOCK)\n+            if (vInv[vInv.size() - 1 - nInv].type == MSG_BLOCK) {\n                 nLastBlock = vInv.size() - 1 - nInv;\n+                break;\n+            }\n         }\n         CTxDB txdb(\"r\");\n         for (unsigned int nInv = 0; nInv < vInv.size(); nInv++)\n@@ -2498,19 +2500,19 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n             if (fDebug)\n                 printf(\"  got inventory: %s  %s\\n\", inv.ToString().c_str(), fAlreadyHave ? \"have\" : \"new\");\n \n-            // Always request the last block in an inv bundle (even if we already have it), as it is the\n-            // trigger for the other side to send further invs. If we are stuck on a (very long) side chain,\n-            // this is necessary to connect earlier received orphan blocks to the chain again.\n-            if (fAlreadyHave && nInv == nLastBlock) {\n-                // bypass mapAskFor, and send request directly; it must go through.\n-                std::vector<CInv> vGetData(1,inv);\n-                pfrom->PushMessage(\"getdata\", vGetData);\n-            }\n-\n             if (!fAlreadyHave)\n                 pfrom->AskFor(inv);\n-            else if (inv.type == MSG_BLOCK && mapOrphanBlocks.count(inv.hash))\n+            else if (inv.type == MSG_BLOCK && mapOrphanBlocks.count(inv.hash)) {\n                 pfrom->PushGetBlocks(pindexBest, GetOrphanRoot(mapOrphanBlocks[inv.hash]));\n+            } else if (nInv == nLastBlock) {\n+                // In case we are on a very long side-chain, it is possible that we already have\n+                // the last block in an inv bundle sent in response to getblocks. Try to detect\n+                // this situation and push another getblocks to continue.\n+                std::vector<CInv> vGetData(1,inv);\n+                pfrom->PushGetBlocks(mapBlockIndex[inv.hash], uint256(0));\n+                if (fDebug)\n+                    printf(\"force request: %s\\n\", inv.ToString().c_str());\n+            }\n \n             // Track requests for our stuff\n             Inventory(inv.hash);"
      }
    ]
  }
]