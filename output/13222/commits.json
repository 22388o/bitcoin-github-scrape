[
  {
    "sha": "1be3226f1c7b0bd0a96787f7b4a8904bd05aec9f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYmUzMjI2ZjFjN2IwYmQwYTk2Nzg3ZjdiNGE4OTA0YmQwNWFlYzlm",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-05-12T03:17:55Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-07-25T15:27:40Z"
      },
      "message": "test: Add testing of value_ret for SelectCoinsBnB",
      "tree": {
        "sha": "f8c41c512eee59e481a50f753c36e1359d49919c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f8c41c512eee59e481a50f753c36e1359d49919c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1be3226f1c7b0bd0a96787f7b4a8904bd05aec9f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJbWJbsAAoJEG7l83hfeLNFsBUH/A5iIFf6rK8iM0d+SByBRVxN\nJ4vuNt5ypHhFEPdvRP2MgX3TZz4FJf+uEi5+TfWmugbXQZs8SCdy6vTobOlnhPoF\nBQCRq0bGfdhb9lTyrwTLirzbVf6iHZHTHFVsyuFJOzBpDJSpjDmWvQXWCco7Q9mb\n+g5rHjT7vxGWGknS1JQfeq65do8GwzVIqXO9yIIixVZwp1pI1akOtuKTj367IYsF\ndkgAzjbfjE5x243UROHLYS1JTdimO3tgT7YFXkdzNLft4P6RukjNhNXJ9gvHAAsk\nc4a3/7i87bnN8bxm/K6qSGH55JNI8ixz6+6Q7ZcQLFcU2gO+HivK1OUApF00+IE=\n=FkdF\n-----END PGP SIGNATURE-----",
        "payload": "tree f8c41c512eee59e481a50f753c36e1359d49919c\nparent 29b4ee64695f79511912ae127e66e0fe82f7a0d1\nauthor Ben Woosley <ben.woosley@gmail.com> 1526095075 -0700\ncommitter Ben Woosley <ben.woosley@gmail.com> 1532532460 -0400\n\ntest: Add testing of value_ret for SelectCoinsBnB\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1be3226f1c7b0bd0a96787f7b4a8904bd05aec9f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1be3226f1c7b0bd0a96787f7b4a8904bd05aec9f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1be3226f1c7b0bd0a96787f7b4a8904bd05aec9f/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "29b4ee64695f79511912ae127e66e0fe82f7a0d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29b4ee64695f79511912ae127e66e0fe82f7a0d1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/29b4ee64695f79511912ae127e66e0fe82f7a0d1"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f36b2243448ef72fa9874610ec1411e81d276057",
        "filename": "src/wallet/test/coinselector_tests.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1be3226f1c7b0bd0a96787f7b4a8904bd05aec9f/src/wallet/test/coinselector_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1be3226f1c7b0bd0a96787f7b4a8904bd05aec9f/src/wallet/test/coinselector_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/coinselector_tests.cpp?ref=1be3226f1c7b0bd0a96787f7b4a8904bd05aec9f",
        "patch": "@@ -150,13 +150,15 @@ BOOST_AUTO_TEST_CASE(bnb_search_test)\n     add_coin(1 * CENT, 1, actual_selection);\n     BOOST_CHECK(SelectCoinsBnB(GroupCoins(utxo_pool), 1 * CENT, 0.5 * CENT, selection, value_ret, not_input_fees));\n     BOOST_CHECK(equal_sets(selection, actual_selection));\n+    BOOST_CHECK_EQUAL(value_ret, 1 * CENT);\n     actual_selection.clear();\n     selection.clear();\n \n     // Select 2 Cent\n     add_coin(2 * CENT, 2, actual_selection);\n     BOOST_CHECK(SelectCoinsBnB(GroupCoins(utxo_pool), 2 * CENT, 0.5 * CENT, selection, value_ret, not_input_fees));\n     BOOST_CHECK(equal_sets(selection, actual_selection));\n+    BOOST_CHECK_EQUAL(value_ret, 2 * CENT);\n     actual_selection.clear();\n     selection.clear();\n \n@@ -165,6 +167,7 @@ BOOST_AUTO_TEST_CASE(bnb_search_test)\n     add_coin(2 * CENT, 2, actual_selection);\n     BOOST_CHECK(SelectCoinsBnB(GroupCoins(utxo_pool), 5 * CENT, 0.5 * CENT, selection, value_ret, not_input_fees));\n     BOOST_CHECK(equal_sets(selection, actual_selection));\n+    BOOST_CHECK_EQUAL(value_ret, 5 * CENT);\n     actual_selection.clear();\n     selection.clear();\n \n@@ -181,6 +184,7 @@ BOOST_AUTO_TEST_CASE(bnb_search_test)\n     add_coin(1 * CENT, 1, actual_selection);\n     BOOST_CHECK(SelectCoinsBnB(GroupCoins(utxo_pool), 10 * CENT, 0.5 * CENT, selection, value_ret, not_input_fees));\n     BOOST_CHECK(equal_sets(selection, actual_selection));\n+    BOOST_CHECK_EQUAL(value_ret, 10 * CENT);\n     actual_selection.clear();\n     selection.clear();\n \n@@ -190,6 +194,9 @@ BOOST_AUTO_TEST_CASE(bnb_search_test)\n     add_coin(3 * CENT, 3, actual_selection);\n     add_coin(2 * CENT, 2, actual_selection);\n     BOOST_CHECK(SelectCoinsBnB(GroupCoins(utxo_pool), 10 * CENT, 5000, selection, value_ret, not_input_fees));\n+    BOOST_CHECK_EQUAL(value_ret, 10 * CENT);\n+    // FIXME: this test is redundant with the above, because 1 Cent is selected, not \"too small\"\n+    // BOOST_CHECK(equal_sets(selection, actual_selection));\n \n     // Select 0.25 Cent, not possible\n     BOOST_CHECK(!SelectCoinsBnB(GroupCoins(utxo_pool), 0.25 * CENT, 0.5 * CENT, selection, value_ret, not_input_fees));\n@@ -203,6 +210,7 @@ BOOST_AUTO_TEST_CASE(bnb_search_test)\n     BOOST_CHECK(SelectCoinsBnB(GroupCoins(utxo_pool), target, 0, selection, value_ret, not_input_fees)); // Should not exhaust\n \n     // Test same value early bailout optimization\n+    utxo_pool.clear();\n     add_coin(7 * CENT, 7, actual_selection);\n     add_coin(7 * CENT, 7, actual_selection);\n     add_coin(7 * CENT, 7, actual_selection);\n@@ -217,6 +225,8 @@ BOOST_AUTO_TEST_CASE(bnb_search_test)\n         add_coin(5 * CENT, 7, utxo_pool);\n     }\n     BOOST_CHECK(SelectCoinsBnB(GroupCoins(utxo_pool), 30 * CENT, 5000, selection, value_ret, not_input_fees));\n+    BOOST_CHECK_EQUAL(value_ret, 30 * CENT);\n+    BOOST_CHECK(equal_sets(selection, actual_selection));\n \n     ////////////////////\n     // Behavior tests //"
      }
    ]
  },
  {
    "sha": "469bff55edf5686e9fdd3192888745e71a07173b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NjliZmY1NWVkZjU2ODZlOWZkZDMxOTI4ODg3NDVlNzFhMDcxNzNi",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-05-12T21:54:47Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-08-03T05:13:42Z"
      },
      "message": "test: Fix SelectCoinsBnB negative effective value tests\n\nThis test did not previously test the condition, because it did not supply\nutxos with negative effective value.\n\nIn order to make the condition testable, I switched from `assert` to\n`std::domain_error`, because throws are testable.",
      "tree": {
        "sha": "106c51ae55f356f87c909644b00c39b0c020c31e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/106c51ae55f356f87c909644b00c39b0c020c31e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/469bff55edf5686e9fdd3192888745e71a07173b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJbY+SIAAoJEG7l83hfeLNFVA4IALaMAiJ+1cGDiI8ltpVv3cLp\nDfYUYrqgpkcBGwSq0rqEwuQSXJlF9vQc38w97+l1NWfgQSyLoug0qw+EbbDsW/u8\nieSAFFrQF1cAuKOYo1WssW87BW0NmGcNmEg1ay+DCv86ihd70Y6iE1Fsqm15nL1v\nr5/8IevZUs07RfNaSxCXhqEK/vAMS0HWFIzGauuxkIzgQIhU+k338EE8u1SqbNLe\nw1JMYrByz2zSD5B3zLdAJ6EjyZ9VZxRGBuxGQszno8xNPIiWdYDrIfNyWtgI8jNp\nAqFpuiZAdPvo8Eh4h4Zu/0/oNj6xWcpUvDuRjHZ4sFJAh1bEJ6WrYHNY5NRSrvo=\n=xEk5\n-----END PGP SIGNATURE-----",
        "payload": "tree 106c51ae55f356f87c909644b00c39b0c020c31e\nparent 1be3226f1c7b0bd0a96787f7b4a8904bd05aec9f\nauthor Ben Woosley <ben.woosley@gmail.com> 1526162087 -0700\ncommitter Ben Woosley <ben.woosley@gmail.com> 1533273222 -0400\n\ntest: Fix SelectCoinsBnB negative effective value tests\n\nThis test did not previously test the condition, because it did not supply\nutxos with negative effective value.\n\nIn order to make the condition testable, I switched from `assert` to\n`std::domain_error`, because throws are testable.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/469bff55edf5686e9fdd3192888745e71a07173b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/469bff55edf5686e9fdd3192888745e71a07173b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/469bff55edf5686e9fdd3192888745e71a07173b/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1be3226f1c7b0bd0a96787f7b4a8904bd05aec9f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1be3226f1c7b0bd0a96787f7b4a8904bd05aec9f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1be3226f1c7b0bd0a96787f7b4a8904bd05aec9f"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 19,
      "deletions": 12
    },
    "files": [
      {
        "sha": "0a686c931b615b63638f5ace31cdf46ea64fc2bb",
        "filename": "src/wallet/coinselection.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/469bff55edf5686e9fdd3192888745e71a07173b/src/wallet/coinselection.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/469bff55edf5686e9fdd3192888745e71a07173b/src/wallet/coinselection.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/coinselection.cpp?ref=469bff55edf5686e9fdd3192888745e71a07173b",
        "patch": "@@ -6,6 +6,8 @@\n #include <util.h>\n #include <utilmoneystr.h>\n \n+#include <stdexcept>\n+\n // Descending order comparator\n struct {\n     bool operator()(const OutputGroup& a, const OutputGroup& b) const\n@@ -55,6 +57,7 @@ struct {\n  *        that were selected.\n  * @param CAmount not_input_fees -> The fees that need to be paid for the outputs and fixed size\n  *        overhead (version, locktime, marker and flag)\n+ * @throws std::domain_error if utxo_pool includes utxos with negative or zero effective_value\n  */\n \n static const size_t TOTAL_TRIES = 100000;\n@@ -71,8 +74,10 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_v\n     // Calculate curr_available_value\n     CAmount curr_available_value = 0;\n     for (const OutputGroup& utxo : utxo_pool) {\n-        // Assert that this utxo is not negative. It should never be negative, effective value calculation should have removed it\n-        assert(utxo.effective_value > 0);\n+        if (utxo.effective_value <= 0) {\n+            // It should never be negative or zero, effective value calculation should have removed it\n+            throw std::domain_error(\"utxo effective_value should be positive\");\n+        }\n         curr_available_value += utxo.effective_value;\n     }\n     if (curr_available_value < actual_target) {"
      },
      {
        "sha": "04890303cc02d5fa231fc0dfc6a017b757f89e3f",
        "filename": "src/wallet/test/coinselector_tests.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 10,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/469bff55edf5686e9fdd3192888745e71a07173b/src/wallet/test/coinselector_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/469bff55edf5686e9fdd3192888745e71a07173b/src/wallet/test/coinselector_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/coinselector_tests.cpp?ref=469bff55edf5686e9fdd3192888745e71a07173b",
        "patch": "@@ -13,6 +13,7 @@\n \n #include <boost/test/unit_test.hpp>\n #include <random>\n+#include <stdexcept>\n \n BOOST_FIXTURE_TEST_SUITE(coinselector_tests, WalletTestingSetup)\n \n@@ -188,16 +189,6 @@ BOOST_AUTO_TEST_CASE(bnb_search_test)\n     actual_selection.clear();\n     selection.clear();\n \n-    // Negative effective value\n-    // Select 10 Cent but have 1 Cent not be possible because too small\n-    add_coin(5 * CENT, 5, actual_selection);\n-    add_coin(3 * CENT, 3, actual_selection);\n-    add_coin(2 * CENT, 2, actual_selection);\n-    BOOST_CHECK(SelectCoinsBnB(GroupCoins(utxo_pool), 10 * CENT, 5000, selection, value_ret, not_input_fees));\n-    BOOST_CHECK_EQUAL(value_ret, 10 * CENT);\n-    // FIXME: this test is redundant with the above, because 1 Cent is selected, not \"too small\"\n-    // BOOST_CHECK(equal_sets(selection, actual_selection));\n-\n     // Select 0.25 Cent, not possible\n     BOOST_CHECK(!SelectCoinsBnB(GroupCoins(utxo_pool), 0.25 * CENT, 0.5 * CENT, selection, value_ret, not_input_fees));\n     actual_selection.clear();\n@@ -209,6 +200,17 @@ BOOST_AUTO_TEST_CASE(bnb_search_test)\n     target = make_hard_case(14, utxo_pool);\n     BOOST_CHECK(SelectCoinsBnB(GroupCoins(utxo_pool), target, 0, selection, value_ret, not_input_fees)); // Should not exhaust\n \n+    // Negative effective value\n+    utxo_pool.clear();\n+    add_coin(0, 5, utxo_pool);\n+    BOOST_REQUIRE_THROW(SelectCoinsBnB(GroupCoins(utxo_pool), 10 * CENT, 5000, selection, value_ret, not_input_fees),\n+        std::domain_error);\n+\n+    utxo_pool.clear();\n+    add_coin(-1 * CENT, 5, utxo_pool);\n+    BOOST_REQUIRE_THROW(SelectCoinsBnB(GroupCoins(utxo_pool), 10 * CENT, 5000, selection, value_ret, not_input_fees),\n+        std::domain_error);\n+\n     // Test same value early bailout optimization\n     utxo_pool.clear();\n     add_coin(7 * CENT, 7, actual_selection);"
      }
    ]
  }
]