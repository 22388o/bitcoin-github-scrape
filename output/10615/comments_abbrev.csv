jnewbery,2017-06-28T13:20:35Z,"Multi-user for multiwallet is definitely a very useful feature and one that we should be aiming for long-term, so this is good to see. I think the implementation some more work before its ready:\n\n- most importantly, having individual user wallet access authentication will give users the impression that it's safe to open RPC access to multiple users, which it absolutely isn't. Just using the st",https://github.com/bitcoin/bitcoin/pull/10615#issuecomment-311657757,311657757,
luke-jr,2018-11-02T05:21:37Z,Rebased,https://github.com/bitcoin/bitcoin/pull/10615#issuecomment-435274276,435274276,
DrahtBot,2018-11-02T08:43:43Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#13756](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13756.html) (wallet: ""avoid_reuse"" wallet flag for impro",https://github.com/bitcoin/bitcoin/pull/10615#issuecomment-435309667,435309667,
jnewbery,2018-11-02T17:41:57Z,"Concept ACK. I still have a few concerns about RPC security and the level of coupling between RPC users and wallets. I think the first thing to do is add release notes explaining the exact model, and update the PR description to match.",https://github.com/bitcoin/bitcoin/pull/10615#issuecomment-435456311,435456311,
DrahtBot,2019-06-19T00:00:51Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/10615#issuecomment-503354877,503354877,
laanwj,2019-09-30T11:57:56Z,"This seems to have been inactive for a long time, and it was controversial in the first place, closing.",https://github.com/bitcoin/bitcoin/pull/10615#issuecomment-536528974,536528974,
ryanofsky,2017-06-16T21:10:45Z,It seems like you could eliminate a bunch of ifdefs if you got rid of the JSONRPCRequest wallet pointer and did this mapping in GetWalletForJSONRPCRequest instead of here. This would keep core rpc code a little more independent from the wallet.,https://github.com/bitcoin/bitcoin/pull/10615#discussion_r122534461,122534461,src/httprpc.cpp
luke-jr,2017-06-19T21:45:42Z,"That would be less clean when calling in from GUI, tests, etc. But maybe a `void*` would make sense on the class?",https://github.com/bitcoin/bitcoin/pull/10615#discussion_r122833127,122833127,src/httprpc.cpp
ryanofsky,2017-06-19T22:15:15Z,"> That would be less clean when calling in from GUI, tests, etc.\n\nI can see how deriving the wallet pointer in GetWalletForJSONRPCRequest could make gui & test code messier depending on how it was written, but if you provided an inverse function that set up the request object given the wallet name or pointer, I think that would keep things clean and isolated.\n\nAnyway, this is just a though",https://github.com/bitcoin/bitcoin/pull/10615#discussion_r122838637,122838637,src/httprpc.cpp
ryanofsky,2017-06-20T13:18:13Z,"In commit ""RPC: Pass wallet through JSONRPCRequest""\n\nConsider dropping this ifdef. It saves an insignificant amount of memory and seems like noise.",https://github.com/bitcoin/bitcoin/pull/10615#discussion_r122972358,122972358,src/rpc/server.h
ryanofsky,2017-06-20T13:18:48Z,"In commit ""RPC: Pass wallet through JSONRPCRequest""\n\nCould drop this ifdef also.",https://github.com/bitcoin/bitcoin/pull/10615#discussion_r122972500,122972500,src/rpc/server.h
ryanofsky,2017-06-20T13:21:51Z,"In commit ""RPC: Allow rpcauth configs to specify...""\n\nShould update `-rpcauth` documentation to mention the new field.",https://github.com/bitcoin/bitcoin/pull/10615#discussion_r122973289,122973289,src/httprpc.cpp
ryanofsky,2017-06-20T14:16:18Z,"In commit ""RPC: Allow rpcauth configs to specify...""\n\nI think instead of interpreting the 4th rpcauth field as a wallet filename field, it might be better to treat it as a generic options field (similar to the field in `fstab` files for mount options). E.g. instead of:\n\n```\nrpcauth=user:salt:hash:filename.dat\n```\n\nYou would write:\n\n```\nrpcauth=user:salt:hash:wallet=filename.d",https://github.com/bitcoin/bitcoin/pull/10615#discussion_r122988254,122988254,src/httprpc.cpp
promag,2017-08-04T21:45:42Z,Also add a test for the new parameter?,https://github.com/bitcoin/bitcoin/pull/10615#discussion_r131492915,131492915,src/httprpc.cpp
promag,2017-08-04T21:46:22Z,Just `wallet_name`?,https://github.com/bitcoin/bitcoin/pull/10615#discussion_r131493030,131493030,src/httprpc.cpp
promag,2017-08-04T21:46:45Z,`wallet_name`.,https://github.com/bitcoin/bitcoin/pull/10615#discussion_r131493081,131493081,src/httprpc.cpp
promag,2017-08-04T22:03:05Z,Agree with @ryanofsky. There has been an effort to avoid more wallet dependencies.,https://github.com/bitcoin/bitcoin/pull/10615#discussion_r131495519,131495519,src/httprpc.cpp
TheBlueMatt,2017-09-21T22:15:19Z,Can we not allow an enumeration of possible users here and then have the user->wallet mapping checked in rpcwallet.cpp?,https://github.com/bitcoin/bitcoin/pull/10615#discussion_r140373004,140373004,src/httprpc.cpp
luke-jr,2017-09-21T23:17:05Z,"`rpcwallet.cpp` is already past the point where the GUI and RPC abstractions combine.\n\nAlso, we are already enumerating the possible users here. To move it would mean two enumerations...",https://github.com/bitcoin/bitcoin/pull/10615#discussion_r140381709,140381709,src/httprpc.cpp
TheBlueMatt,2017-09-22T21:57:12Z,"I was primarily echoing @jnewbery's comments above about needing cleanups, especially not introducing a bunch more ifdef ENABLE_WALLETs, and this is maybe an obvious case where you seem to be possible-needlessly moving code from src/wallet to src/httprpc. It may be a bit more effecient, but I'm not sure its worth mucking up more wallet stuff in httprpc here.",https://github.com/bitcoin/bitcoin/pull/10615#discussion_r140605237,140605237,src/httprpc.cpp
luke-jr,2017-09-22T22:21:34Z,"There is no src/wallet code that is strictly for RPC. I could make a function there, I suppose, and call it from here, but that seems just plain ugly?",https://github.com/bitcoin/bitcoin/pull/10615#discussion_r140608261,140608261,src/httprpc.cpp
TheBlueMatt,2017-09-26T21:04:00Z,"Why not throw some additional registration stuff in src/wallet/rpcwallet? There's already registration stuff there now. httprpc should be, IMO, as much as possible, a ""dumb dispatcher"" - wallet should tell RPC what it wants, and RPC can pass in the parameters it was given by the client and rpcwallet.cpp can handle how to deal with them.",https://github.com/bitcoin/bitcoin/pull/10615#discussion_r141184050,141184050,src/httprpc.cpp
