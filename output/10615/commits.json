[
  {
    "sha": "43b92a9bb8939108b2865f5911aeaf1690441e61",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0M2I5MmE5YmI4OTM5MTA4YjI4NjVmNTkxMWFlYWYxNjkwNDQxZTYx",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-09-09T11:15:09Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-11-02T05:20:40Z"
      },
      "message": "RPC: Allow rpcauth configs to specify a 4th parameter naming a specific wallet",
      "tree": {
        "sha": "cb1bc96e4c7af138d5995b0228d1568e74cc01f6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cb1bc96e4c7af138d5995b0228d1568e74cc01f6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/43b92a9bb8939108b2865f5911aeaf1690441e61",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43b92a9bb8939108b2865f5911aeaf1690441e61",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/43b92a9bb8939108b2865f5911aeaf1690441e61",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43b92a9bb8939108b2865f5911aeaf1690441e61/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8a9ffec0a257da659ba54c5073bfc820986ae9c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a9ffec0a257da659ba54c5073bfc820986ae9c1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8a9ffec0a257da659ba54c5073bfc820986ae9c1"
      }
    ],
    "stats": {
      "total": 56,
      "additions": 48,
      "deletions": 8
    },
    "files": [
      {
        "sha": "e2f91a3c0de69c2073ac6ef5007cd8366c819aa5",
        "filename": "src/httprpc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/43b92a9bb8939108b2865f5911aeaf1690441e61/src/httprpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/43b92a9bb8939108b2865f5911aeaf1690441e61/src/httprpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httprpc.cpp?ref=43b92a9bb8939108b2865f5911aeaf1690441e61",
        "patch": "@@ -97,7 +97,7 @@ static bool multiUserAuthorized(std::string strUserPass)\n         //Search for multi-user login/pass \"rpcauth\" from config\n         std::vector<std::string> vFields;\n         boost::split(vFields, strRPCAuth, boost::is_any_of(\":$\"));\n-        if (vFields.size() != 3) {\n+        if (vFields.size() < 3 || vFields.size() > 4) {\n             //Incorrect formatting in config file\n             continue;\n         }"
      },
      {
        "sha": "f61c30e040c8c17d4ae965224a104771e4282138",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 47,
        "deletions": 7,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/43b92a9bb8939108b2865f5911aeaf1690441e61/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/43b92a9bb8939108b2865f5911aeaf1690441e61/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=43b92a9bb8939108b2865f5911aeaf1690441e61",
        "patch": "@@ -38,8 +38,30 @@\n \n #include <functional>\n \n+#include <boost/algorithm/string.hpp>  // boost::split\n+\n static const std::string WALLET_ENDPOINT_BASE = \"/wallet/\";\n \n+std::string GetWalletAllowedFromJSONRPCRequest(const JSONRPCRequest& request)\n+{\n+    for (const std::string& rpcauth_arg : gArgs.GetArgs(\"-rpcauth\")) {\n+        // Search for multi-user login/pass \"rpcauth\" from config\n+        std::vector<std::string> fields;\n+        boost::split(fields, rpcauth_arg, boost::is_any_of(\":$\"));\n+        if (fields.size() < 3 || fields.size() > 4) {\n+            // Incorrect formatting in config file\n+            continue;\n+        }\n+\n+        if (fields[0] != request.authUser) continue;\n+\n+        if (fields.size() > 3) {\n+            return fields[3];\n+        }\n+    }\n+    return std::string();\n+}\n+\n bool GetWalletNameFromJSONRPCRequest(const JSONRPCRequest& request, std::string& wallet_name)\n {\n     if (request.URI.substr(0, WALLET_ENDPOINT_BASE.size()) == WALLET_ENDPOINT_BASE) {\n@@ -52,15 +74,33 @@ bool GetWalletNameFromJSONRPCRequest(const JSONRPCRequest& request, std::string&\n \n std::shared_ptr<CWallet> GetWalletForJSONRPCRequest(const JSONRPCRequest& request)\n {\n-    std::string wallet_name;\n-    if (GetWalletNameFromJSONRPCRequest(request, wallet_name)) {\n-        std::shared_ptr<CWallet> pwallet = GetWallet(wallet_name);\n-        if (!pwallet) throw JSONRPCError(RPC_WALLET_NOT_FOUND, \"Requested wallet does not exist or is not loaded\");\n-        return pwallet;\n+    const std::string authorized_wallet_name = GetWalletAllowedFromJSONRPCRequest(request);\n+    std::string requested_wallet_name;\n+    if (!GetWalletNameFromJSONRPCRequest(request, requested_wallet_name)) {\n+        requested_wallet_name.clear();\n+    }\n+\n+    std::shared_ptr<CWallet> pwallet;\n+\n+    if (authorized_wallet_name.empty()) {\n+        // Any wallet is permitted; select by endpoint, or use the sole wallet\n+        if (!requested_wallet_name.empty()) {\n+            pwallet = GetWallet(requested_wallet_name);\n+        } else {\n+            std::vector<std::shared_ptr<CWallet>> wallets = GetWallets();\n+            if (wallets.size() == 1 || (request.fHelp && wallets.size() > 0)) {\n+                pwallet = wallets[0];\n+            }\n+        }\n+    } else if (authorized_wallet_name == \"-\") {\n+        // Block wallet access always\n+    } else if (requested_wallet_name.empty() || requested_wallet_name == authorized_wallet_name) {\n+        // Select specifically the authorized wallet\n+        pwallet = GetWallet(authorized_wallet_name);\n     }\n \n-    std::vector<std::shared_ptr<CWallet>> wallets = GetWallets();\n-    return wallets.size() == 1 || (request.fHelp && wallets.size() > 0) ? wallets[0] : nullptr;\n+    if (!pwallet) throw JSONRPCError(RPC_WALLET_NOT_FOUND, \"Requested wallet does not exist or is not loaded\");\n+    return pwallet;\n }\n \n std::string HelpRequiringPassphrase(CWallet * const pwallet)"
      }
    ]
  }
]