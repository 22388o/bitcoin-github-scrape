[
  {
    "sha": "cde857f2d977fbe3f96c093f6ca3c9810494191d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZGU4NTdmMmQ5NzdmYmUzZjk2YzA5M2Y2Y2EzYzk4MTA0OTQxOTFk",
    "commit": {
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2015-11-24T15:27:38Z"
      },
      "committer": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2015-11-26T10:14:31Z"
      },
      "message": "Connect to Tor hidden services by default\n\nAdds 127.0.0.1:9050 for the .onion proxy if we can succesfully connect\nto the control port.\n\nNatural followup to creating hidden services automatically.",
      "tree": {
        "sha": "39ba7a01ccf66a0748f287facbd69596c64bcf39",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/39ba7a01ccf66a0748f287facbd69596c64bcf39"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cde857f2d977fbe3f96c093f6ca3c9810494191d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGrBAABCACVBQJWVtuJXhSAAAAAABUAQGJsb2NraGFzaEBiaXRjb2luLm9yZzAw\nMDAwMDAwMDAwMDAwMDAwZTU0OTQ2YWIwNDYxYzA4OTMzZmJkZDljOTMwZjNjZjMz\nMzliMGJjNWZmNzc4YWMvFIAAAAAAFQARcGthLWFkZHJlc3NAZ251cGcub3JncGV0\nZUBwZXRlcnRvZC5vcmcACgkQJIFAPaXwkftJdggAslQew/0H3+CTYMRlJg+BpmUj\nlcO6n/F0wvST4huDztjKmjKhB6AA3ZBmOR8lTxN9CSIrRT28FGzOr67jE7eGwGTm\nFPJ89kKSDnhVBTbRgWLE/TEVtOibgFcuvqEa0+qQB34NPxUp8cjJkcdYSPSWTpZF\ne8VZwGA1jdheVG2nw28IcQXK/tDxs+GA7Q9s4Vqw0gLsR3qmyV0Wv3Yb0LvtVAXB\nOVRdGNJndA72+N+bzAQX0NYhqIM5XExNVPxW+GB6XgFt34VM7QiFc0atDXL2wYEQ\njGrfYVF7++74h7mhH/kuIcG8XXeiSV1IVNtuEE9lPPbrF59SPAGRT9AnsAGTAg==\n=zx7L\n-----END PGP SIGNATURE-----",
        "payload": "tree 39ba7a01ccf66a0748f287facbd69596c64bcf39\nparent 0b0fc179ab8795463e0a0f07e989ec6f592a1f90\nauthor Peter Todd <pete@petertodd.org> 1448378858 -0500\ncommitter Peter Todd <pete@petertodd.org> 1448532871 -0500\n\nConnect to Tor hidden services by default\n\nAdds 127.0.0.1:9050 for the .onion proxy if we can succesfully connect\nto the control port.\n\nNatural followup to creating hidden services automatically.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cde857f2d977fbe3f96c093f6ca3c9810494191d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cde857f2d977fbe3f96c093f6ca3c9810494191d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cde857f2d977fbe3f96c093f6ca3c9810494191d/comments",
    "author": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0b0fc179ab8795463e0a0f07e989ec6f592a1f90",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b0fc179ab8795463e0a0f07e989ec6f592a1f90",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b0fc179ab8795463e0a0f07e989ec6f592a1f90"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 14,
      "deletions": 4
    },
    "files": [
      {
        "sha": "009baaed516a98f0e40c1480c29e3be93aeda4a7",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cde857f2d977fbe3f96c093f6ca3c9810494191d/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cde857f2d977fbe3f96c093f6ca3c9810494191d/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=cde857f2d977fbe3f96c093f6ca3c9810494191d",
        "patch": "@@ -151,17 +151,18 @@ mining with the getblocktemplate protocol to a pool: this will affect you at\n the pool operator's discretion, which must be no later than BIP65 achieving its\n 951/1001 status.\n \n-Automatically listen on Tor\n-----------------------------\n+Automatically use Tor hidden services\n+-------------------------------------\n \n Starting with Tor version 0.2.7.1 it is possible, through Tor's control socket\n API, to create and destroy 'ephemeral' hidden services programmatically.\n Bitcoin Core has been updated to make use of this.\n \n This means that if Tor is running (and proper authorization is available),\n Bitcoin Core automatically creates a hidden service to listen on, without\n-manual configuration. This will positively affect the number of available\n-.onion nodes.\n+manual configuration. Bitcoin Core will also use Tor automatically to connect\n+to other .onion nodes if the control socket can be successfully opened. This\n+will positively affect the number of available .onion nodes and their usage.\n \n This new feature is enabled by default if Bitcoin Core is listening, and\n a connection to Tor can be made. It can be configured with the `-listenonion`,"
      },
      {
        "sha": "31a2917203f12f673f6cfb90c87df3d3c54d3dfb",
        "filename": "src/torcontrol.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cde857f2d977fbe3f96c093f6ca3c9810494191d/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cde857f2d977fbe3f96c093f6ca3c9810494191d/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=cde857f2d977fbe3f96c093f6ca3c9810494191d",
        "patch": "@@ -449,6 +449,15 @@ void TorController::auth_cb(TorControlConnection& conn, const TorControlReply& r\n {\n     if (reply.code == 250) {\n         LogPrint(\"tor\", \"tor: Authentication succesful\\n\");\n+\n+        // Now that we know Tor is running setup the proxy for onion addresses\n+        // if -onion isn't set to something else.\n+        if (GetArg(\"-onion\", \"\") == \"\") {\n+            proxyType addrOnion = proxyType(CService(\"127.0.0.1\", 9050), true);\n+            SetProxy(NET_TOR, addrOnion);\n+            SetReachable(NET_TOR);\n+        }\n+\n         // Finally - now create the service\n         if (private_key.empty()) // No private key, generate one\n             private_key = \"NEW:BEST\";"
      }
    ]
  }
]