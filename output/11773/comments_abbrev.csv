jnewbery,2017-11-29T13:25:06Z,"Thanks for your input @JohnVonNeumann. Three of your nits are on comments that are already in the code, and the last is to revert a pep8 fix (pep8 states that 'inline comments should be separated by at least two spaces from the statement. They should start with a # and a single space.')\n\nthe invalidtxrequest and invalidblockrequest refactors are covered by #11771 and #11772. If you have functi",https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-347859204,347859204,
JohnVonNeumann,2017-11-29T18:48:04Z,"Is it typically best off to leave preexisting nits for other PRs? Is that something I could fix myself and submit as a PR? Would that be the typical way to address it? I assume you look to keep the PRs clean otherwise people would just keep bringing up little things and it would be difficult to tell what was actually being added in the PR itself?\n\nApologies on the last PEP8 spacing comment too",https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-347957605,347957605,
jnewbery,2017-11-29T18:52:09Z,"> Is it typically best off to leave preexisting nits for other PRs? Is that something I could fix myself and submit as a PR? Would that be the typical way to address it? I assume you look to keep the PRs clean otherwise people would just keep bringing up little things and it would be difficult to tell what was actually being added in the PR itself?\n\nI usually clean up style nits as I go, and p",https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-347958810,347958810,
JohnVonNeumann,2017-11-29T18:58:30Z,"Ok this makes sense, although I disagree that all my comments were related directly to my personal preference, for me it was just about keeping the standards throughout the code, for example with the redundant inline comment, I don't see any of them throughout the newly written code, so it would make sense to not have them in the old code. However, you are probably right, and I'll happily defer to",https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-347960754,347960754,
jnewbery,2017-12-02T16:24:10Z,"This requires rebase, but I'll leave it as it is until #11771 is reviewed/merged.",https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-348702673,348702673,
jnewbery,2018-02-14T03:23:55Z,Rebased now that #11771 has been merged.,https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-365484221,365484221,
conscott,2018-02-15T18:47:18Z,ACK,https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-366023674,366023674,
practicalswift,2018-02-15T18:49:41Z,"utACK 061f4d8cfba58d299dd913bd96f88bddebae8276\n\nThanks for a very nice cleanup! Looking forward to seeing this merged!",https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-366024380,366024380,
jnewbery,2018-02-15T18:55:22Z,"I saw Travis fail on this, but the trace wasn't printed because of https://github.com/bitcoin/bitcoin/pull/12438.\n\nI reran the job and it passed. It seems that there may be an intermittent failure in the test. I'll rebase on master to get #12438 and try kicking Travis a few times.",https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-366025989,366025989,
jnewbery,2018-03-19T13:33:55Z,Rebased,https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-374212872,374212872,
MarcoFalke,2018-03-19T18:09:37Z,"utACK 1f7a8662cdf2c7775942e3abc90c3745c2adaecc\n\nGitHub hiding my review is probably a bug on their end.",https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-374311412,374311412,
jnewbery,2018-03-19T18:32:15Z,Thanks for the review @MarcoFalke - I think I've addressed your comments,https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-374318731,374318731,
MarcoFalke,2018-03-19T18:47:34Z,Thanks re-utACK 265d7c44b1aae06aee93f745a865807732218a73,https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-374323597,374323597,
conscott,2018-03-20T13:27:21Z,Test re-ACK 265d7c44b1aae06aee93f745a865807732218a73,https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-374596825,374596825,
jamesob,2018-03-27T13:20:40Z,Ready for merge?,https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-376522188,376522188,
MarcoFalke,2018-03-27T14:48:52Z,"Needs more (re) acks\n\nOn Tue, Mar 27, 2018, 09:21 jamesob <notifications@github.com> wrote:\n\n> Ready for merge?\n>\n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-376522188>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AGGmv32N2D39OikZv_aE",https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-376553468,376553468,
jnewbery,2018-03-27T14:53:41Z,@ryanofsky @practicalswift - care to reACK?,https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-376555284,376555284,
jnewbery,2018-03-27T19:45:36Z,4 ACKs. Ready for merge @MarcoFalke ?,https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-376650940,376650940,
practicalswift,2018-03-27T20:35:24Z,utACK 265d7c44b1aae06aee93f745a865807732218a73,https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-376666080,376666080,
MarcoFalke,2018-03-27T22:11:03Z,"@laanwj Could you please merge this, since I am using my travel laptop for the next few days?",https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-376692703,376692703,
ajtowns,2018-03-31T07:10:02Z,"It looks like ebf053ac6135941907ecfebccc778da34b585fac is causing feature_block.py to use about 5GB of RSS memory instead of about 1GB, haven't had time to look into quite why yet. It's causing MemoryError exceptions on my 4GB vm :(",https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-377672312,377672312,
jnewbery,2018-04-02T19:45:21Z,@ajtowns - I think your memory problem is fixed in #12861,https://github.com/bitcoin/bitcoin/pull/11773#issuecomment-378023123,378023123,
JohnVonNeumann,2017-11-29T06:04:18Z,"Unsure if you guys adhere directly to PEP8 but this comment looks like it could be removed, seems redundant.",https://github.com/bitcoin/bitcoin/pull/11773#discussion_r153699992,153699992,test/functional/invalidblockrequest.py
JohnVonNeumann,2017-11-29T06:07:06Z,Would imagine this would be best moved inline as opposed to on it's own line to keep convention with inline comments like on line 32 and 29.,https://github.com/bitcoin/bitcoin/pull/11773#discussion_r153700278,153700278,test/functional/invalidblockrequest.py
JohnVonNeumann,2017-11-29T06:17:49Z,"Would assume this block comment should be moved into a docstring block like in test/functional/test_framework/mininode.py P2PStub class. Seems like the standard are great in there, I'm assuming that's down to this section being a refactor.",https://github.com/bitcoin/bitcoin/pull/11773#discussion_r153701261,153701261,test/functional/invalidblockrequest.py
JohnVonNeumann,2017-11-29T06:18:49Z,Newly added whitespace can be removed.,https://github.com/bitcoin/bitcoin/pull/11773#discussion_r153701345,153701345,test/functional/invalidtxrequest.py
ryanofsky,2017-12-20T20:32:32Z,"In commit ""Tidy up p2pfullblocktest""\n\nCan you note that this option was removed in the commit message (and maybe say why it wasn't useful?)",https://github.com/bitcoin/bitcoin/pull/11773#discussion_r158128644,158128644,test/functional/p2p-fullblocktest.py
jnewbery,2018-02-14T03:23:13Z,Yep. Added to commit message.,https://github.com/bitcoin/bitcoin/pull/11773#discussion_r168069256,168069256,test/functional/p2p-fullblocktest.py
MarcoFalke,2018-03-19T17:01:22Z,"nit: Could mention in a comment that this is only needed because `connect_p2p` assumes the thread is already running.\n\nnit: Could rename `connect_p2p` to `reconnect_p2p`, since it only works when the thread is already running?",https://github.com/bitcoin/bitcoin/pull/11773#discussion_r175510431,175510431,test/functional/feature_block.py
MarcoFalke,2018-03-19T17:33:39Z,"Why are you changing this comment?\n\nBlock 7 spends the output 2 (c.f. line 165)",https://github.com/bitcoin/bitcoin/pull/11773#discussion_r175521812,175521812,test/functional/feature_block.py
MarcoFalke,2018-03-19T17:42:57Z,The comment above `(b12 added last)` is no longer true with this change.,https://github.com/bitcoin/bitcoin/pull/11773#discussion_r175525042,175525042,test/functional/feature_block.py
MarcoFalke,2018-03-19T18:00:40Z,"Why are you changing this to `1`? We are building blocks on top of block with id `88`, so naming them `""alt89""` ... seems appropriate.",https://github.com/bitcoin/bitcoin/pull/11773#discussion_r175531218,175531218,test/functional/feature_block.py
MarcoFalke,2018-03-19T18:06:34Z,"In commit 06d512f11998d9b935edf8b032eb76e491cfb7cc:\n\nWhy are you adding this comment? The `ser_uint256` symbol is not imported and it will unsurprisingly be all zeros, since it was set to 0.",https://github.com/bitcoin/bitcoin/pull/11773#discussion_r175533248,175533248,test/functional/feature_block.py
MarcoFalke,2018-03-19T18:15:18Z,"In the last commit:\n\nI think you meant `inspect.getsource`, since the line itself won't help when the file name is unknown. And the Traceback already shows the line number and file name (as well as the predicate, in case it fits into a single line).",https://github.com/bitcoin/bitcoin/pull/11773#discussion_r175535906,175535906,test/functional/test_framework/util.py
jnewbery,2018-03-19T18:15:35Z,Sounds good. Done both.,https://github.com/bitcoin/bitcoin/pull/11773#discussion_r175536022,175536022,test/functional/feature_block.py
MarcoFalke,2018-03-19T18:16:34Z,"Imo we could do without `inspect`, since it doesn't seem to add information unless I am missing something.",https://github.com/bitcoin/bitcoin/pull/11773#discussion_r175536419,175536419,test/functional/test_framework/util.py
jnewbery,2018-03-19T18:18:02Z,Yes - you're right. Fixed,https://github.com/bitcoin/bitcoin/pull/11773#discussion_r175536935,175536935,test/functional/feature_block.py
jnewbery,2018-03-19T18:20:53Z,yes - removed,https://github.com/bitcoin/bitcoin/pull/11773#discussion_r175537883,175537883,test/functional/feature_block.py
jnewbery,2018-03-19T18:22:39Z,removed,https://github.com/bitcoin/bitcoin/pull/11773#discussion_r175538493,175538493,test/functional/feature_block.py
jnewbery,2018-03-19T18:31:02Z,"I think this provides useful information when the `wait_until()` fails.\n\nWithout this change:\n\n```\n2018-03-19T18:29:56.324000Z TestFramework (ERROR): Assertion failed\nTraceback (most recent call last):\n  File ""/home/ubuntu/bitcoin/test/functional/test_framework/test_framework.py"", line 126, in main\n    self.run_test()\n  File ""./feature_block.py"", line 502, in run_test\n    self.",https://github.com/bitcoin/bitcoin/pull/11773#discussion_r175541170,175541170,test/functional/test_framework/util.py
jamesob,2018-03-27T19:04:01Z,"I'm pretty sure this functionality gets repeated in several other tests. If so, we should move this somewhere more general and consolidate usages later on.",https://github.com/bitcoin/bitcoin/pull/11773#discussion_r177537490,177537490,test/functional/feature_block.py
jnewbery,2018-03-27T19:44:58Z,"Sure, but let's save that for a future PR.",https://github.com/bitcoin/bitcoin/pull/11773#discussion_r177549532,177549532,test/functional/feature_block.py
jamesob,2018-03-27T20:14:02Z,"Yeah, definitely later.",https://github.com/bitcoin/bitcoin/pull/11773#discussion_r177557271,177557271,test/functional/feature_block.py
sdaftuar,2018-05-09T18:58:34Z,"This results in a spurious error message when `wait_until` is used and failure is expected, for instance in the `p2p_segwit.py` test where we advertise a txid from a not-NODE_WITNESS peer and ensure that a subsequence announcement from a NODE_WITNESS peer does not result in a duplicate getdata (while the first request is outstanding).",https://github.com/bitcoin/bitcoin/pull/11773#discussion_r187142427,187142427,test/functional/test_framework/util.py
jnewbery,2018-05-09T19:53:57Z,Fixed here: #13205 ,https://github.com/bitcoin/bitcoin/pull/11773#discussion_r187156756,187156756,test/functional/test_framework/util.py
