[
  {
    "sha": "a880b29cab0fe95161b54b61159321021d5a3219",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphODgwYjI5Y2FiMGZlOTUxNjFiNTRiNjExNTkzMjEwMjFkNWEzMjE5",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-12-14T06:03:55Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-12-14T06:06:21Z"
      },
      "message": "Bugfix: fForRelay should be false when deciding required fee to include in blocks\n\nDuring the rushed transition from 0.01 BTC to 0.0005 BTC fees, we took the\napproach of dropping the relay and block-inclusion fee to 0.0005 BTC\nimmediately, and only delayed adjusting the sending fee for the next release.\nAfterward, the relay fee was lowered to 0.0001 BTC to avoid having the same\nproblem in the future. However, the block inclusion code was left setting\nfForRelay to true! This fixes that, so the lower 0.0001 BTC allowance is (as\nintended) only permitted for real relaying.",
      "tree": {
        "sha": "6373c718e5627140857662490c90e1686015e01a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6373c718e5627140857662490c90e1686015e01a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a880b29cab0fe95161b54b61159321021d5a3219",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a880b29cab0fe95161b54b61159321021d5a3219",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a880b29cab0fe95161b54b61159321021d5a3219",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a880b29cab0fe95161b54b61159321021d5a3219/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c7eb151ad0ed441d6fd598551059a9bbfb09e99e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7eb151ad0ed441d6fd598551059a9bbfb09e99e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c7eb151ad0ed441d6fd598551059a9bbfb09e99e"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "59db0aaf047389eb8d146cfc50b9cbc3ab32532a",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a880b29cab0fe95161b54b61159321021d5a3219/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a880b29cab0fe95161b54b61159321021d5a3219/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=a880b29cab0fe95161b54b61159321021d5a3219",
        "patch": "@@ -2757,7 +2757,7 @@ CBlock* CreateNewBlock(CReserveKey& reservekey)\n \n             // Transaction fee required depends on block size\n             bool fAllowFree = (nBlockSize + nTxSize < 4000 || CTransaction::AllowFree(dPriority));\n-            int64 nMinFee = tx.GetMinFee(nBlockSize, fAllowFree, true);\n+            int64 nMinFee = tx.GetMinFee(nBlockSize, fAllowFree);\n \n             // Connecting shouldn't fail due to dependency on other memory pool transactions\n             // because we're already processing them in order of dependency"
      }
    ]
  },
  {
    "sha": "dbbf1d4a48c8761a67a4477bef48f17c0badef7b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYmJmMWQ0YTQ4Yzg3NjFhNjdhNDQ3N2JlZjQ4ZjE3YzBiYWRlZjdi",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-10-03T16:55:47Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-12-14T06:07:43Z"
      },
      "message": "GetMinFee takes a mode parameter (GMF_{BLOCK,RELAY,SEND}) instead of fForRelay",
      "tree": {
        "sha": "86c34a2d373dd816cd13d48d21a1505d5c227737",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/86c34a2d373dd816cd13d48d21a1505d5c227737"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dbbf1d4a48c8761a67a4477bef48f17c0badef7b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dbbf1d4a48c8761a67a4477bef48f17c0badef7b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dbbf1d4a48c8761a67a4477bef48f17c0badef7b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dbbf1d4a48c8761a67a4477bef48f17c0badef7b/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a880b29cab0fe95161b54b61159321021d5a3219",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a880b29cab0fe95161b54b61159321021d5a3219",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a880b29cab0fe95161b54b61159321021d5a3219"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 13,
      "deletions": 5
    },
    "files": [
      {
        "sha": "807279a55366f78dd03dcbeaa45369778d7e6309",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbbf1d4a48c8761a67a4477bef48f17c0badef7b/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbbf1d4a48c8761a67a4477bef48f17c0badef7b/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=dbbf1d4a48c8761a67a4477bef48f17c0badef7b",
        "patch": "@@ -419,7 +419,7 @@ bool CTransaction::AcceptToMemoryPool(CTxDB& txdb, bool fCheckInputs, bool* pfMi\n         }\n \n         // Don't accept it if it can't get into a block\n-        if (nFees < GetMinFee(1000, true, true))\n+        if (nFees < GetMinFee(1000, true, GMF_RELAY))\n             return error(\"AcceptToMemoryPool() : not enough fees\");\n \n         // Continuously rate-limit free transactions\n@@ -2757,7 +2757,7 @@ CBlock* CreateNewBlock(CReserveKey& reservekey)\n \n             // Transaction fee required depends on block size\n             bool fAllowFree = (nBlockSize + nTxSize < 4000 || CTransaction::AllowFree(dPriority));\n-            int64 nMinFee = tx.GetMinFee(nBlockSize, fAllowFree);\n+            int64 nMinFee = tx.GetMinFee(nBlockSize, fAllowFree, GMF_BLOCK);\n \n             // Connecting shouldn't fail due to dependency on other memory pool transactions\n             // because we're already processing them in order of dependency"
      },
      {
        "sha": "a699331884daf33563f44a826673364b5610b889",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbbf1d4a48c8761a67a4477bef48f17c0badef7b/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbbf1d4a48c8761a67a4477bef48f17c0badef7b/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=dbbf1d4a48c8761a67a4477bef48f17c0badef7b",
        "patch": "@@ -387,6 +387,13 @@ class CTxOut\n \n \n \n+enum GetMinFee_mode\n+{\n+    GMF_BLOCK,\n+    GMF_RELAY,\n+    GMF_SEND,\n+};\n+\n //\n // The basic transaction that is broadcasted on the network and contained in\n // blocks.  A transaction can contain multiple inputs and outputs.\n@@ -523,10 +530,10 @@ class CTransaction\n         return dPriority > COIN * 144 / 250;\n     }\n \n-    int64 GetMinFee(unsigned int nBlockSize=1, bool fAllowFree=true, bool fForRelay=false) const\n+    int64 GetMinFee(unsigned int nBlockSize=1, bool fAllowFree=true, enum GetMinFee_mode mode=GMF_BLOCK) const\n     {\n         // Base fee is either MIN_TX_FEE or MIN_RELAY_TX_FEE\n-        int64 nBaseFee = fForRelay ? MIN_RELAY_TX_FEE : MIN_TX_FEE;\n+        int64 nBaseFee = (mode == GMF_RELAY) ? MIN_RELAY_TX_FEE : MIN_TX_FEE;\n \n         unsigned int nBytes = ::GetSerializeSize(*this, SER_NETWORK);\n         unsigned int nNewBlockSize = nBlockSize + nBytes;"
      },
      {
        "sha": "2c5aa03aad0a223824d8a44a8008ef09dd37c640",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbbf1d4a48c8761a67a4477bef48f17c0badef7b/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbbf1d4a48c8761a67a4477bef48f17c0badef7b/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=dbbf1d4a48c8761a67a4477bef48f17c0badef7b",
        "patch": "@@ -931,6 +931,7 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, int64> >& vecSend, CW\n                 int64 nChange = nValueIn - nValue - nFeeRet;\n                 // if sub-cent change is required, the fee must be raised to at least MIN_TX_FEE\n                 // or until nChange becomes zero\n+                // NOTE: this depends on the exact behaviour of GetMinFee\n                 if (nFeeRet < MIN_TX_FEE && nChange > 0 && nChange < CENT)\n                 {\n                     int64 nMoveToFee = min(nChange, MIN_TX_FEE - nFeeRet);\n@@ -984,7 +985,7 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, int64> >& vecSend, CW\n                 // Check that enough fee is included\n                 int64 nPayFee = nTransactionFee * (1 + (int64)nBytes / 1000);\n                 bool fAllowFree = CTransaction::AllowFree(dPriority);\n-                int64 nMinFee = wtxNew.GetMinFee(1, fAllowFree);\n+                int64 nMinFee = wtxNew.GetMinFee(1, fAllowFree, GMF_SEND);\n                 if (nFeeRet < max(nPayFee, nMinFee))\n                 {\n                     nFeeRet = max(nPayFee, nMinFee);"
      }
    ]
  }
]