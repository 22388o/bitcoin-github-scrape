[
  {
    "sha": "cdd79eb70fe163a92531a6f11c72bce6d228dac6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZGQ3OWViNzBmZTE2M2E5MjUzMWE2ZjExYzcyYmNlNmQyMjhkYWM2",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-08-30T20:41:56Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-09-01T17:05:07Z"
      },
      "message": "C++11: s/boost::scoped_ptr/std::unique_ptr/",
      "tree": {
        "sha": "9f615eba78aece231ab3fc37e0252c971b70ac7c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9f615eba78aece231ab3fc37e0252c971b70ac7c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cdd79eb70fe163a92531a6f11c72bce6d228dac6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdd79eb70fe163a92531a6f11c72bce6d228dac6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cdd79eb70fe163a92531a6f11c72bce6d228dac6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdd79eb70fe163a92531a6f11c72bce6d228dac6/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2b23dbaee5b88d7237144e14eff01391e2cc201d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b23dbaee5b88d7237144e14eff01391e2cc201d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2b23dbaee5b88d7237144e14eff01391e2cc201d"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 11,
      "deletions": 12
    },
    "files": [
      {
        "sha": "cb863bda191f809353a43f67cd52990c0ba87420",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdd79eb70fe163a92531a6f11c72bce6d228dac6/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdd79eb70fe163a92531a6f11c72bce6d228dac6/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=cdd79eb70fe163a92531a6f11c72bce6d228dac6",
        "patch": "@@ -515,7 +515,7 @@ class Secp256k1Init\n static void MutateTx(CMutableTransaction& tx, const string& command,\n                      const string& commandVal)\n {\n-    boost::scoped_ptr<Secp256k1Init> ecc;\n+    std::unique_ptr<Secp256k1Init> ecc;\n \n     if (command == \"nversion\")\n         MutateTxVersion(tx, commandVal);"
      },
      {
        "sha": "4fa06135d286f6ea8447638c2fa714ddcfbf75dc",
        "filename": "src/dbwrapper.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdd79eb70fe163a92531a6f11c72bce6d228dac6/src/dbwrapper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdd79eb70fe163a92531a6f11c72bce6d228dac6/src/dbwrapper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.cpp?ref=cdd79eb70fe163a92531a6f11c72bce6d228dac6",
        "patch": "@@ -117,7 +117,7 @@ std::vector<unsigned char> CDBWrapper::CreateObfuscateKey() const\n \n bool CDBWrapper::IsEmpty()\n {\n-    boost::scoped_ptr<CDBIterator> it(NewIterator());\n+    std::unique_ptr<CDBIterator> it(NewIterator());\n     it->SeekToFirst();\n     return !(it->Valid());\n }"
      },
      {
        "sha": "27843fa882318333b4d510977c66e8a2f7ebd212",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdd79eb70fe163a92531a6f11c72bce6d228dac6/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdd79eb70fe163a92531a6f11c72bce6d228dac6/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=cdd79eb70fe163a92531a6f11c72bce6d228dac6",
        "patch": "@@ -162,7 +162,7 @@ class CCoinsViewErrorCatcher : public CCoinsViewBacked\n \n static CCoinsViewDB *pcoinsdbview = NULL;\n static CCoinsViewErrorCatcher *pcoinscatcher = NULL;\n-static boost::scoped_ptr<ECCVerifyHandle> globalVerifyHandle;\n+static std::unique_ptr<ECCVerifyHandle> globalVerifyHandle;\n \n void Interrupt(boost::thread_group& threadGroup)\n {"
      },
      {
        "sha": "f19fada113b01c9cda04648c101a6cacb658d5d6",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdd79eb70fe163a92531a6f11c72bce6d228dac6/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdd79eb70fe163a92531a6f11c72bce6d228dac6/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=cdd79eb70fe163a92531a6f11c72bce6d228dac6",
        "patch": "@@ -196,7 +196,7 @@ namespace {\n      *\n      * Memory used: 1.3 MB\n      */\n-    boost::scoped_ptr<CRollingBloomFilter> recentRejects;\n+    std::unique_ptr<CRollingBloomFilter> recentRejects;\n     uint256 hashRecentRejectsChainTip;\n \n     /** Blocks that are in flight, and that are in the queue to be downloaded. Protected by cs_main. */"
      },
      {
        "sha": "0f3edde1457454240a6efac68214ed86211dd33e",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdd79eb70fe163a92531a6f11c72bce6d228dac6/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdd79eb70fe163a92531a6f11c72bce6d228dac6/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=cdd79eb70fe163a92531a6f11c72bce6d228dac6",
        "patch": "@@ -632,7 +632,7 @@ struct CCoinsStats\n //! Calculate statistics about the unspent transaction output set\n static bool GetUTXOStats(CCoinsView *view, CCoinsStats &stats)\n {\n-    boost::scoped_ptr<CCoinsViewCursor> pcursor(view->Cursor());\n+    std::unique_ptr<CCoinsViewCursor> pcursor(view->Cursor());\n \n     CHashWriter ss(SER_GETHASH, PROTOCOL_VERSION);\n     stats.hashBlock = pcursor->GetBestBlock();"
      },
      {
        "sha": "d4d825d199406bc45590228fe909fa002dd063f9",
        "filename": "src/test/dbwrapper_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdd79eb70fe163a92531a6f11c72bce6d228dac6/src/test/dbwrapper_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdd79eb70fe163a92531a6f11c72bce6d228dac6/src/test/dbwrapper_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/dbwrapper_tests.cpp?ref=cdd79eb70fe163a92531a6f11c72bce6d228dac6",
        "patch": "@@ -101,7 +101,7 @@ BOOST_AUTO_TEST_CASE(dbwrapper_iterator)\n         uint256 in2 = GetRandHash();\n         BOOST_CHECK(dbw.Write(key2, in2));\n \n-        boost::scoped_ptr<CDBIterator> it(const_cast<CDBWrapper*>(&dbw)->NewIterator());\n+        std::unique_ptr<CDBIterator> it(const_cast<CDBWrapper*>(&dbw)->NewIterator());\n \n         // Be sure to seek past the obfuscation key (if it exists)\n         it->Seek(key);\n@@ -214,7 +214,7 @@ BOOST_AUTO_TEST_CASE(iterator_ordering)\n         BOOST_CHECK(dbw.Write(key, value));\n     }\n \n-    boost::scoped_ptr<CDBIterator> it(const_cast<CDBWrapper*>(&dbw)->NewIterator());\n+    std::unique_ptr<CDBIterator> it(const_cast<CDBWrapper*>(&dbw)->NewIterator());\n     for (int c=0; c<2; ++c) {\n         int seek_start;\n         if (c == 0)\n@@ -290,7 +290,7 @@ BOOST_AUTO_TEST_CASE(iterator_string_ordering)\n         }\n     }\n \n-    boost::scoped_ptr<CDBIterator> it(const_cast<CDBWrapper*>(&dbw)->NewIterator());\n+    std::unique_ptr<CDBIterator> it(const_cast<CDBWrapper*>(&dbw)->NewIterator());\n     for (int c=0; c<2; ++c) {\n         int seek_start;\n         if (c == 0)"
      },
      {
        "sha": "4f11c7b95172ea3ef02839ec94a0e97b6de41130",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdd79eb70fe163a92531a6f11c72bce6d228dac6/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdd79eb70fe163a92531a6f11c72bce6d228dac6/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=cdd79eb70fe163a92531a6f11c72bce6d228dac6",
        "patch": "@@ -173,7 +173,7 @@ bool CBlockTreeDB::ReadFlag(const std::string &name, bool &fValue) {\n \n bool CBlockTreeDB::LoadBlockIndexGuts(boost::function<CBlockIndex*(const uint256&)> insertBlockIndex)\n {\n-    boost::scoped_ptr<CDBIterator> pcursor(NewIterator());\n+    std::unique_ptr<CDBIterator> pcursor(NewIterator());\n \n     pcursor->Seek(make_pair(DB_BLOCK_INDEX, uint256()));\n "
      },
      {
        "sha": "adb3f663272233a5a7a3b5a65898e368d4867391",
        "filename": "src/txdb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdd79eb70fe163a92531a6f11c72bce6d228dac6/src/txdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdd79eb70fe163a92531a6f11c72bce6d228dac6/src/txdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.h?ref=cdd79eb70fe163a92531a6f11c72bce6d228dac6",
        "patch": "@@ -92,7 +92,7 @@ class CCoinsViewDBCursor: public CCoinsViewCursor\n private:\n     CCoinsViewDBCursor(CDBIterator* pcursorIn, const uint256 &hashBlockIn):\n         CCoinsViewCursor(hashBlockIn), pcursor(pcursorIn) {}\n-    boost::scoped_ptr<CDBIterator> pcursor;\n+    std::unique_ptr<CDBIterator> pcursor;\n     std::pair<char, uint256> keyTmp;\n \n     friend class CCoinsViewDB;"
      },
      {
        "sha": "239b1ac9b548acebadbe2b84e143d7ebdb617e72",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdd79eb70fe163a92531a6f11c72bce6d228dac6/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdd79eb70fe163a92531a6f11c72bce6d228dac6/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=cdd79eb70fe163a92531a6f11c72bce6d228dac6",
        "patch": "@@ -18,7 +18,6 @@\n #include <boost/version.hpp>\n #include <boost/filesystem.hpp>\n #include <boost/foreach.hpp>\n-#include <boost/scoped_ptr.hpp>\n #include <boost/thread.hpp>\n \n using namespace std;\n@@ -941,7 +940,7 @@ bool CWalletDB::Recover(CDBEnv& dbenv, const std::string& filename, bool fOnlyKe\n     }\n     LogPrintf(\"Salvage(aggressive) found %u records\\n\", salvagedData.size());\n \n-    boost::scoped_ptr<Db> pdbCopy(new Db(dbenv.dbenv, 0));\n+    std::unique_ptr<Db> pdbCopy(new Db(dbenv.dbenv, 0));\n     int ret = pdbCopy->open(NULL,               // Txn pointer\n                             filename.c_str(),   // Filename\n                             \"main\",             // Logical db name"
      }
    ]
  }
]