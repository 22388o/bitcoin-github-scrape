[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575910591",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17957#issuecomment-575910591",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17957",
    "id": 575910591,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTkxMDU5MQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-18T15:47:47Z",
    "updated_at": "2020-01-18T15:47:47Z",
    "author_association": "MEMBER",
    "body": "Ping @ryanofsky, as you volunteered to review further PRs in this series. I've made an additional change compared to the old big PR, namely the introduction of FORMATTER_METHODS (and then rewriting SERIALIZE_METHODS in function of FORMATTER_METHODS, which follows pretty naturally).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575910591/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575920740",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17957#issuecomment-575920740",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17957",
    "id": 575920740,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTkyMDc0MA==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-18T17:27:53Z",
    "updated_at": "2020-01-18T17:29:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "https://github.com/bitcoin/bitcoin/blob/fd691da3b032e439936672e084b7c49086ec9ebc/src/coins.h#L59-L65\r\n\r\nA signed integer overflow will take place on L62 in case of serialising a coin with a very large `nHeight` value.\r\n\r\nIt wasn't introduced in this PR, but since you're making changes to the coin serialization/deserialization functions here it might be worth fixing in the same go :)\r\n\r\nAlso the `Unserialize` function should probably be adjusted to not accept `block_height`s above `(std::numeric_limits<uint32_t>::max() - 1) / 2`.\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/fd691da3b032e439936672e084b7c49086ec9ebc/src/coins.h#L67-L74",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575920740/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575921551",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17957#issuecomment-575921551",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17957",
    "id": 575921551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTkyMTU1MQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-18T17:37:02Z",
    "updated_at": "2020-01-18T17:37:02Z",
    "author_association": "MEMBER",
    "body": "@practicalswift How about we address that when coins.h itself is updated to the new serialization framework (here it's just adjusting for changes in compression.h)?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575921551/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/577739397",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17957#issuecomment-577739397",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17957",
    "id": 577739397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzczOTM5Nw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-23T15:45:42Z",
    "updated_at": "2020-01-23T15:45:42Z",
    "author_association": "MEMBER",
    "body": "code review ACK 4de934b9b5b4be1bac8fe205f4ee9a79e772dc34",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/577739397/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369155232",
    "pull_request_review_id": 346078349,
    "id": 369155232,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE1NTIzMg==",
    "diff_hunk": "@@ -32,7 +32,7 @@ class TxInUndoSerializer\n             // Required to maintain compatibility with older undo format.\n             ::Serialize(s, (unsigned char)0);\n         }\n-        ::Serialize(s, CTxOutCompressor(REF(txout->out)));\n+        ::Serialize(s, Using<TxOutCompression>(REF(txout->out)));",
    "path": "src/undo.h",
    "position": 5,
    "original_position": 5,
    "commit_id": "4de934b9b5b4be1bac8fe205f4ee9a79e772dc34",
    "original_commit_id": "fd691da3b032e439936672e084b7c49086ec9ebc",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Convert compression.h to new serialization framework\" (fd691da3b032e439936672e084b7c49086ec9ebc)\r\n\r\nCan you drop uses of `REF` macro here and below?",
    "created_at": "2020-01-21T18:00:16Z",
    "updated_at": "2020-01-22T04:30:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17957#discussion_r369155232",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17957",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369155232"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17957#discussion_r369155232"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17957"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369155232/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 35,
    "original_line": 35,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369160059",
    "pull_request_review_id": 346078349,
    "id": 369160059,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE2MDA1OQ==",
    "diff_hunk": "@@ -211,17 +235,15 @@ template<typename X> const X& ReadWriteAsHelper(const X& x) { return x; }\n     void Serialize(Stream& s) const                                                 \\\n     {                                                                               \\\n         static_assert(std::is_same<const cls&, decltype(*this)>::value, \"Serialize type mismatch\"); \\\n-        SerializationOps(*this, s, CSerActionSerialize());                          \\\n+        Ser(s, *this);                                                              \\\n     }                                                                               \\\n     template<typename Stream>                                                       \\\n     void Unserialize(Stream& s)                                                     \\\n     {                                                                               \\\n         static_assert(std::is_same<cls&, decltype(*this)>::value, \"Unserialize type mismatch\"); \\\n-        SerializationOps(*this, s, CSerActionUnserialize());                        \\\n+        Unser(s, *this);                                                            \\\n     }                                                                               \\\n-    template<typename Stream, typename Type, typename Operation>                    \\\n-    static inline void SerializationOps(Type& obj, Stream& s, Operation ser_action) \\\n-\n+    FORMATTER_METHODS(cls, obj)",
    "path": "src/serialize.h",
    "position": 48,
    "original_position": 48,
    "commit_id": "4de934b9b5b4be1bac8fe205f4ee9a79e772dc34",
    "original_commit_id": "ca34c5cba5fbb9b046b074a234f06ecf6ed5d610",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Add FORMATTER_METHODS, similar to SERIALIZE_METHODS, but for formatters\" (ca34c5cba5fbb9b046b074a234f06ecf6ed5d610)\r\n\r\nIt's a little surprising to see SERIALIZE_METHODS depend on FORMATTER_METHODS, but I guess it saves some repetition, and it seems reasonable",
    "created_at": "2020-01-21T18:10:45Z",
    "updated_at": "2020-01-22T04:30:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17957#discussion_r369160059",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17957",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369160059"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17957#discussion_r369160059"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17957"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369160059/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 246,
    "original_line": 246,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369365864",
    "pull_request_review_id": 346340394,
    "id": 369365864,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM2NTg2NA==",
    "diff_hunk": "@@ -32,7 +32,7 @@ class TxInUndoSerializer\n             // Required to maintain compatibility with older undo format.\n             ::Serialize(s, (unsigned char)0);\n         }\n-        ::Serialize(s, CTxOutCompressor(REF(txout->out)));\n+        ::Serialize(s, Using<TxOutCompression>(REF(txout->out)));",
    "path": "src/undo.h",
    "position": 5,
    "original_position": 5,
    "commit_id": "4de934b9b5b4be1bac8fe205f4ee9a79e772dc34",
    "original_commit_id": "fd691da3b032e439936672e084b7c49086ec9ebc",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Indeed, done.",
    "created_at": "2020-01-22T04:30:51Z",
    "updated_at": "2020-01-22T04:30:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17957#discussion_r369365864",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17957",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369365864"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17957#discussion_r369365864"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17957"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369365864/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 35,
    "original_line": 35,
    "side": "RIGHT",
    "in_reply_to_id": 369155232
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369366273",
    "pull_request_review_id": 346340872,
    "id": 369366273,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM2NjI3Mw==",
    "diff_hunk": "@@ -211,17 +235,15 @@ template<typename X> const X& ReadWriteAsHelper(const X& x) { return x; }\n     void Serialize(Stream& s) const                                                 \\\n     {                                                                               \\\n         static_assert(std::is_same<const cls&, decltype(*this)>::value, \"Serialize type mismatch\"); \\\n-        SerializationOps(*this, s, CSerActionSerialize());                          \\\n+        Ser(s, *this);                                                              \\\n     }                                                                               \\\n     template<typename Stream>                                                       \\\n     void Unserialize(Stream& s)                                                     \\\n     {                                                                               \\\n         static_assert(std::is_same<cls&, decltype(*this)>::value, \"Unserialize type mismatch\"); \\\n-        SerializationOps(*this, s, CSerActionUnserialize());                        \\\n+        Unser(s, *this);                                                            \\\n     }                                                                               \\\n-    template<typename Stream, typename Type, typename Operation>                    \\\n-    static inline void SerializationOps(Type& obj, Stream& s, Operation ser_action) \\\n-\n+    FORMATTER_METHODS(cls, obj)",
    "path": "src/serialize.h",
    "position": 48,
    "original_position": 48,
    "commit_id": "4de934b9b5b4be1bac8fe205f4ee9a79e772dc34",
    "original_commit_id": "ca34c5cba5fbb9b046b074a234f06ecf6ed5d610",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think it makes sense: every class gets the ability to function as a formatter. Both FORMATTER_METHODS and SERIALIZE_METHODS help do that; with the first it's for an arbitrary type, with the latter it's for objects of the class it's being defined it. The latter then also hooks up the Serialize/Unserialize functions to the self-formatter.\r\n\r\nDo you suggest documenting this better, or have some other suggestion?",
    "created_at": "2020-01-22T04:33:18Z",
    "updated_at": "2020-01-22T04:33:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17957#discussion_r369366273",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17957",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369366273"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17957#discussion_r369366273"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17957"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369366273/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 246,
    "original_line": 246,
    "side": "RIGHT",
    "in_reply_to_id": 369160059
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369612363",
    "pull_request_review_id": 346655796,
    "id": 369612363,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYxMjM2Mw==",
    "diff_hunk": "@@ -211,17 +235,15 @@ template<typename X> const X& ReadWriteAsHelper(const X& x) { return x; }\n     void Serialize(Stream& s) const                                                 \\\n     {                                                                               \\\n         static_assert(std::is_same<const cls&, decltype(*this)>::value, \"Serialize type mismatch\"); \\\n-        SerializationOps(*this, s, CSerActionSerialize());                          \\\n+        Ser(s, *this);                                                              \\\n     }                                                                               \\\n     template<typename Stream>                                                       \\\n     void Unserialize(Stream& s)                                                     \\\n     {                                                                               \\\n         static_assert(std::is_same<cls&, decltype(*this)>::value, \"Unserialize type mismatch\"); \\\n-        SerializationOps(*this, s, CSerActionUnserialize());                        \\\n+        Unser(s, *this);                                                            \\\n     }                                                                               \\\n-    template<typename Stream, typename Type, typename Operation>                    \\\n-    static inline void SerializationOps(Type& obj, Stream& s, Operation ser_action) \\\n-\n+    FORMATTER_METHODS(cls, obj)",
    "path": "src/serialize.h",
    "position": 48,
    "original_position": 48,
    "commit_id": "4de934b9b5b4be1bac8fe205f4ee9a79e772dc34",
    "original_commit_id": "ca34c5cba5fbb9b046b074a234f06ecf6ed5d610",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> > It's a little surprising to see SERIALIZE_METHODS depend on FORMATTER_METHODS, but I guess it saves some repetition, and it seems reasonable\r\n\r\n> I think it makes sense: every class gets the ability to function as a formatter. Both FORMATTER_METHODS and SERIALIZE_METHODS help do that; with the first it's for an arbitrary type, with the latter it's for objects of the class it's being defined it. The latter then also hooks up the Serialize/Unserialize functions to the self-formatter.\r\n\r\nI think it's fine. A formatter class with a formatter methods is a class that can serialize and deserialize objects in a particular format. A serializable type with serialize methods is a class whose instances can serialize and deserialize themselves. I wasn't expecting serializeable objects to now be able to format other objects of the same type, and I couldn't think of a use for that, but I think it's harmless.\r\n\r\n> Do you suggest documenting this better, or have some other suggestion?\r\n\r\nI guess the suggestion would be to keep the new FORMATTER_METHODS macro exactly like you have it here, but revert the changes to the SERIALIZE_METHODS macro, so it isn't affected by this PR. But only if you want to have a stronger distinction between formatter classes and serializable types. I'm fine either way.\r\n",
    "created_at": "2020-01-22T15:03:02Z",
    "updated_at": "2020-01-22T15:23:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17957#discussion_r369612363",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17957",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369612363"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17957#discussion_r369612363"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17957"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369612363/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 246,
    "original_line": 246,
    "side": "RIGHT",
    "in_reply_to_id": 369160059
  }
]