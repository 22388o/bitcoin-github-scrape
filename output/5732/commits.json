[
  {
    "sha": "1371e6f5db88941c3b3c70d7a13b0cbf150ebf66",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMzcxZTZmNWRiODg5NDFjM2IzYzcwZDdhMTNiMGNiZjE1MGViZjY2",
    "commit": {
      "author": {
        "name": "Daira Hopwood",
        "email": "daira@jacaranda.org",
        "date": "2015-01-31T02:54:55Z"
      },
      "committer": {
        "name": "Daira Hopwood",
        "email": "daira@jacaranda.org",
        "date": "2015-01-31T23:23:20Z"
      },
      "message": "Change \"insane\" to \"absurd\" (referring to high fees) in text strings and identifiers.\n\nNote that this will also require translation changes in Transifex for the key\n\"A fee higher than %1 is considered an insanely high fee.\" which is now\n\"A fee higher than %1 is considered an absurdly high fee.\"\n\nSigned-off-by: Daira Hopwood <daira@jacaranda.org>",
      "tree": {
        "sha": "f5526ecad0a1277ea6ee0acf5147968bf19efe02",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f5526ecad0a1277ea6ee0acf5147968bf19efe02"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1371e6f5db88941c3b3c70d7a13b0cbf150ebf66",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1371e6f5db88941c3b3c70d7a13b0cbf150ebf66",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1371e6f5db88941c3b3c70d7a13b0cbf150ebf66",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1371e6f5db88941c3b3c70d7a13b0cbf150ebf66/comments",
    "author": {
      "login": "daira",
      "id": 643204,
      "node_id": "MDQ6VXNlcjY0MzIwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/643204?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daira",
      "html_url": "https://github.com/daira",
      "followers_url": "https://api.github.com/users/daira/followers",
      "following_url": "https://api.github.com/users/daira/following{/other_user}",
      "gists_url": "https://api.github.com/users/daira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daira/subscriptions",
      "organizations_url": "https://api.github.com/users/daira/orgs",
      "repos_url": "https://api.github.com/users/daira/repos",
      "events_url": "https://api.github.com/users/daira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daira/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "daira",
      "id": 643204,
      "node_id": "MDQ6VXNlcjY0MzIwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/643204?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daira",
      "html_url": "https://github.com/daira",
      "followers_url": "https://api.github.com/users/daira/followers",
      "following_url": "https://api.github.com/users/daira/following{/other_user}",
      "gists_url": "https://api.github.com/users/daira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daira/subscriptions",
      "organizations_url": "https://api.github.com/users/daira/orgs",
      "repos_url": "https://api.github.com/users/daira/repos",
      "events_url": "https://api.github.com/users/daira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daira/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6af674ecdc99db2eb741b8dc79e44bd0202e3855",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6af674ecdc99db2eb741b8dc79e44bd0202e3855",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6af674ecdc99db2eb741b8dc79e44bd0202e3855"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 12,
      "deletions": 12
    },
    "files": [
      {
        "sha": "35118cebe5c025bac42eb5152f64473f1ef46325",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1371e6f5db88941c3b3c70d7a13b0cbf150ebf66/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1371e6f5db88941c3b3c70d7a13b0cbf150ebf66/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=1371e6f5db88941c3b3c70d7a13b0cbf150ebf66",
        "patch": "@@ -904,7 +904,7 @@ CAmount GetMinRelayFee(const CTransaction& tx, unsigned int nBytes, bool fAllowF\n \n \n bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransaction &tx, bool fLimitFree,\n-                        bool* pfMissingInputs, bool fRejectInsaneFee)\n+                        bool* pfMissingInputs, bool fRejectAbsurdFee)\n {\n     AssertLockHeld(cs_main);\n     if (pfMissingInputs)\n@@ -1063,8 +1063,8 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             dFreeCount += nSize;\n         }\n \n-        if (fRejectInsaneFee && nFees > ::minRelayTxFee.GetFee(nSize) * 10000)\n-            return error(\"AcceptToMemoryPool: insane fees %s, %d > %d\",\n+        if (fRejectAbsurdFee && nFees > ::minRelayTxFee.GetFee(nSize) * 10000)\n+            return error(\"AcceptToMemoryPool: absurdly high fees %s, %d > %d\",\n                          hash.ToString(),\n                          nFees, ::minRelayTxFee.GetFee(nSize) * 10000);\n "
      },
      {
        "sha": "936cd43e99edb497ef022e0b7272d9df11c93be0",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1371e6f5db88941c3b3c70d7a13b0cbf150ebf66/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1371e6f5db88941c3b3c70d7a13b0cbf150ebf66/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=1371e6f5db88941c3b3c70d7a13b0cbf150ebf66",
        "patch": "@@ -205,7 +205,7 @@ void FlushStateToDisk();\n \n /** (try to) add transaction to memory pool **/\n bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransaction &tx, bool fLimitFree,\n-                        bool* pfMissingInputs, bool fRejectInsaneFee=false);\n+                        bool* pfMissingInputs, bool fRejectAbsurdFee=false);\n \n \n struct CNodeStateStats {"
      },
      {
        "sha": "5aef2d7539b1da6bd930d9bad9c8f46647b5ace6",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1371e6f5db88941c3b3c70d7a13b0cbf150ebf66/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1371e6f5db88941c3b3c70d7a13b0cbf150ebf66/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=1371e6f5db88941c3b3c70d7a13b0cbf150ebf66",
        "patch": "@@ -526,8 +526,8 @@ void SendCoinsDialog::processSendCoinsReturn(const WalletModel::SendCoinsReturn\n         msgParams.first = tr(\"The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.\");\n         msgParams.second = CClientUIInterface::MSG_ERROR;\n         break;\n-    case WalletModel::InsaneFee:\n-        msgParams.first = tr(\"A fee higher than %1 is considered an insanely high fee.\").arg(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), 10000000));\n+    case WalletModel::AbsurdFee:\n+        msgParams.first = tr(\"A fee higher than %1 is considered an absurdly high fee.\").arg(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), 10000000));\n         break;\n     case WalletModel::PaymentRequestExpired:\n         msgParams.first = tr(\"Payment request expired!\");"
      },
      {
        "sha": "3893def9c249326e85d82c8e627c707ba24394d5",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1371e6f5db88941c3b3c70d7a13b0cbf150ebf66/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1371e6f5db88941c3b3c70d7a13b0cbf150ebf66/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=1371e6f5db88941c3b3c70d7a13b0cbf150ebf66",
        "patch": "@@ -279,9 +279,9 @@ WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransact\n             return TransactionCreationFailed;\n         }\n \n-        // reject insane fee > 0.1 bitcoin\n+        // reject absurdly high fee > 0.1 bitcoin\n         if (nFeeRequired > 10000000)\n-            return InsaneFee;\n+            return AbsurdFee;\n     }\n \n     return SendCoinsReturn(OK);"
      },
      {
        "sha": "4a9a12beaa9d10c67f392fb8fd0ec668f12fc20f",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1371e6f5db88941c3b3c70d7a13b0cbf150ebf66/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1371e6f5db88941c3b3c70d7a13b0cbf150ebf66/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=1371e6f5db88941c3b3c70d7a13b0cbf150ebf66",
        "patch": "@@ -111,7 +111,7 @@ class WalletModel : public QObject\n         DuplicateAddress,\n         TransactionCreationFailed, // Error returned when wallet is still locked\n         TransactionCommitFailed,\n-        InsaneFee,\n+        AbsurdFee,\n         PaymentRequestExpired\n     };\n "
      },
      {
        "sha": "31ceda9c3168d0045a5905cbd113fa2751918cc4",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1371e6f5db88941c3b3c70d7a13b0cbf150ebf66/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1371e6f5db88941c3b3c70d7a13b0cbf150ebf66/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=1371e6f5db88941c3b3c70d7a13b0cbf150ebf66",
        "patch": "@@ -2365,9 +2365,9 @@ int CMerkleTx::GetBlocksToMaturity() const\n }\n \n \n-bool CMerkleTx::AcceptToMemoryPool(bool fLimitFree, bool fRejectInsaneFee)\n+bool CMerkleTx::AcceptToMemoryPool(bool fLimitFree, bool fRejectAbsurdFee)\n {\n     CValidationState state;\n-    return ::AcceptToMemoryPool(mempool, state, *this, fLimitFree, NULL, fRejectInsaneFee);\n+    return ::AcceptToMemoryPool(mempool, state, *this, fLimitFree, NULL, fRejectAbsurdFee);\n }\n "
      },
      {
        "sha": "71d9d1fb6b25826ad08989fa14c67e063df6d60d",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1371e6f5db88941c3b3c70d7a13b0cbf150ebf66/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1371e6f5db88941c3b3c70d7a13b0cbf150ebf66/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=1371e6f5db88941c3b3c70d7a13b0cbf150ebf66",
        "patch": "@@ -548,7 +548,7 @@ class CMerkleTx : public CTransaction\n     int GetDepthInMainChain() const { const CBlockIndex *pindexRet; return GetDepthInMainChain(pindexRet); }\n     bool IsInMainChain() const { const CBlockIndex *pindexRet; return GetDepthInMainChainINTERNAL(pindexRet) > 0; }\n     int GetBlocksToMaturity() const;\n-    bool AcceptToMemoryPool(bool fLimitFree=true, bool fRejectInsaneFee=true);\n+    bool AcceptToMemoryPool(bool fLimitFree=true, bool fRejectAbsurdFee=true);\n };\n \n /** "
      }
    ]
  }
]