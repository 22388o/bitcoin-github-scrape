practicalswift,2018-03-21T07:12:20Z,"Really nice! Let's get rid of Boost\n\nStrong concept ACK",https://github.com/bitcoin/bitcoin/pull/12744#issuecomment-374849738,374849738,
Empact,2018-03-21T07:40:22Z,"Another concept ACK\n\nSome nits:\n* Could you run clang-format against your patch, there are some formatting inconsistencies:\n`git diff -U0 --no-color bitcoin/master | contrib/devtools/clang-format-diff.py -i -p1`\n* It looks like `GetNegatedArgs` / `IsArgNegated` are exposed for testing purposes only. I would be in favor of removing those for the sake of simplicity - seems testing can be c",https://github.com/bitcoin/bitcoin/pull/12744#issuecomment-374854247,374854247,
Empact,2018-03-21T08:05:19Z,I saw the use of `GetNegatedArgs` / `IsNegatedArgs` in your other PRs. IMO best to make each PR minimal / independent and rebase as needed.,https://github.com/bitcoin/bitcoin/pull/12744#issuecomment-374859198,374859198,
jnewbery,2018-03-21T16:23:01Z,"One comment: config_file_iterator is able to parse sections: http://www.boost.org/doc/libs/1_66_0/doc/html/program_options/overview.html#id-1.3.31.5.10.2 . That feature isn't currently used in bitcoin but is required for #11862.\n\nHow much work would it be to enhance this PR to support INI-like config sections?\n\ncourtesy ping @ajtowns",https://github.com/bitcoin/bitcoin/pull/12744#issuecomment-375003995,375003995,
eklitzke,2018-03-21T23:47:08Z,"@jnewbery Seems pretty easy to add sections, INI format is literally just:\n\n```\nfoo = 'a global option'\nbar = 'another option'\n\n[Section One]\nmax-file-count = 100\n\n[Section Two]\nmax-file-count = 150\n```\n\nThe option parser needs to be updated to be section-aware anyway, as right now it stuffs everything in a global namespace.\n\nI looked at how Python checks their INI pa",https://github.com/bitcoin/bitcoin/pull/12744#issuecomment-375132334,375132334,
laanwj,2018-03-22T09:05:59Z,"> One comment: config_file_iterator is able to parse sections: \n\nConcept ACK - though as @jnewbery already mentions, I'd prioritize #11862 first, because adding a per-network configuration mechanism is something we've wanted for a long time. \n\nRemoving boost dependencies is what we want on the long run too, but shouldn't get in the way of providing functionality to users.\n",https://github.com/bitcoin/bitcoin/pull/12744#issuecomment-375225746,375225746,
Sjors,2018-04-03T16:44:47Z,"`make check` is happy on macOS.\n\nShouldn't you remove `llibboost-program-options-dev` from `travis.yml` and `control/debian/control` as well?",https://github.com/bitcoin/bitcoin/pull/12744#issuecomment-378317126,378317126,
theuni,2018-04-04T22:04:51Z,very nice! concept ACK. Will review in detail.,https://github.com/bitcoin/bitcoin/pull/12744#issuecomment-378760016,378760016,
MarcoFalke,2018-04-08T20:55:31Z,Needs rebase,https://github.com/bitcoin/bitcoin/pull/12744#issuecomment-379581857,379581857,
laanwj,2018-04-25T07:34:49Z,"> Removing boost dependencies is what we want on the long run too, but shouldn't get in the way of providing functionality to users.\n\nright - needs rebase now that per-network configuration sections have been introduced.",https://github.com/bitcoin/bitcoin/pull/12744#issuecomment-384188842,384188842,
luke-jr,2018-05-02T02:49:27Z,"Using dependencies is strictly better than re-inventing them, but all things considered (minimal size of the code, and future modification code needed for rwconf), I guess this case looks not totally unreasonable... :x",https://github.com/bitcoin/bitcoin/pull/12744#issuecomment-385849809,385849809,
promag,2018-05-30T00:37:26Z,Needs rebase.,https://github.com/bitcoin/bitcoin/pull/12744#issuecomment-392993170,392993170,
ken2812221,2018-06-02T14:14:41Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/12744#issuecomment-394090514,394090514,
MarcoFalke,2018-06-02T14:30:52Z,"Closing for now. Let me know when you start working on this again, so I can reopen. Also, this is up for grabs and can be rebased by any other contributor.",https://github.com/bitcoin/bitcoin/pull/12744#issuecomment-394091546,394091546,
ryanofsky,2018-03-21T17:17:25Z,"Current syntax seems to be described here:\n\nhttp://www.boost.org/doc/libs/1_66_0/doc/html/program_options/overview.html#id-1.3.31.5.10.2\n\nI wonder if for backwards compatibility or convenience the new implementation should be extended to support `#` comments.",https://github.com/bitcoin/bitcoin/pull/12744#discussion_r176166616,176166616,src/util.cpp
theuni,2018-04-04T22:18:06Z,"Looks like this will miss "" 0"" (whitespace), and ""-0"" (negative zero), which could happen as a typo on another argument.",https://github.com/bitcoin/bitcoin/pull/12744#discussion_r179300067,179300067,src/util.cpp
theuni,2018-04-04T22:34:25Z,+1,https://github.com/bitcoin/bitcoin/pull/12744#discussion_r179303356,179303356,src/util.cpp
