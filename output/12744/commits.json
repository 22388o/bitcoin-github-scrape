[
  {
    "sha": "6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2Yjk1ZDZiZDZlODEwMzA2MDVkNmI0YWQ0MmRkODNjZDNiYzY5YmZk",
    "commit": {
      "author": {
        "name": "Evan Klitzke",
        "email": "evan@eklitzke.org",
        "date": "2018-03-18T02:18:15Z"
      },
      "committer": {
        "name": "Evan Klitzke",
        "email": "evan@eklitzke.org",
        "date": "2018-03-21T07:05:04Z"
      },
      "message": "Improve boolean option parsing\n\nThis change split out from #12689",
      "tree": {
        "sha": "4102c68ae6f5b605da9703addbcfc87af0d394b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4102c68ae6f5b605da9703addbcfc87af0d394b6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEr5FzGLjELREnIWJdFX78rLxkhCIFAlqyBCcACgkQFX78rLxk\nhCJ6QxAArk+DrN/+SV71+vJO3O35QLRrkTSktaTEbYVTEzqP7KtDadvXP8LQkLwO\nTf0Jpwx4vuO42JIbDjsfX87DgMyHpBJXRG9cvRxI/e8MxHIJLzddPzCjA6Mr4Bmq\nl8weNEMA0S91K2Rp7MqxBFN7/AuFgTAzwdLrHDdj3x8MMR+Q2B/EF0zm2fvPzRq4\n+7XyODTukYQR9g54zdOLE0Qy3JnxIBfwntjDOjzgTrK5iOAqPIe2zN3v9L77yBqS\nKBkXFS+xKnoH6iO6jKmGQKKAt2XWMLg1MNbN18L33nnCLCEqD94nv1jSDYYCqeSr\n3AXkcGC7OluV8lZPWts+DGR2qW0c9n+7oZIXGHnckcAtJnK0sXL8RW6guSL9OArh\neFfQVjOHXrQGF54n62+X2zbyVRTI2VwmwkSMc72/5vz/3+fl6RVcI/nKUhHDHXNV\nwUJw8YzVw/ih/3/oHahkzt4+FY1+VdSr6d3ZTIt6QtjgNGRq+PPwIaQOUbpVD6vk\nU6k1FpTzVQeqVni4cgl0nLTYMQIC2Z6E+8Ydad31wuY5Nk2Chz8jefMv1Oy6jxgJ\n8HZ+cCoz5rpI9Db57SQ2S18HYMMLVlPdyGk0tAmuhwH5E0LUgjzDQMf/SNkLRo9D\nzDvHrhZArYGSIKskGYEaX6rbZMid0IPWJAx5d51bXqrGfVKq9Jg=\n=K+1e\n-----END PGP SIGNATURE-----",
        "payload": "tree 4102c68ae6f5b605da9703addbcfc87af0d394b6\nparent 9b8b1079ddab64ac955766536c38d23dc57bc499\nauthor Evan Klitzke <evan@eklitzke.org> 1521339495 -0700\ncommitter Evan Klitzke <evan@eklitzke.org> 1521615904 -0700\n\nImprove boolean option parsing\n\nThis change split out from #12689\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd/comments",
    "author": {
      "login": "eklitzke",
      "id": 2734,
      "node_id": "MDQ6VXNlcjI3MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eklitzke",
      "html_url": "https://github.com/eklitzke",
      "followers_url": "https://api.github.com/users/eklitzke/followers",
      "following_url": "https://api.github.com/users/eklitzke/following{/other_user}",
      "gists_url": "https://api.github.com/users/eklitzke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eklitzke/subscriptions",
      "organizations_url": "https://api.github.com/users/eklitzke/orgs",
      "repos_url": "https://api.github.com/users/eklitzke/repos",
      "events_url": "https://api.github.com/users/eklitzke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eklitzke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "eklitzke",
      "id": 2734,
      "node_id": "MDQ6VXNlcjI3MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eklitzke",
      "html_url": "https://github.com/eklitzke",
      "followers_url": "https://api.github.com/users/eklitzke/followers",
      "following_url": "https://api.github.com/users/eklitzke/following{/other_user}",
      "gists_url": "https://api.github.com/users/eklitzke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eklitzke/subscriptions",
      "organizations_url": "https://api.github.com/users/eklitzke/orgs",
      "repos_url": "https://api.github.com/users/eklitzke/repos",
      "events_url": "https://api.github.com/users/eklitzke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eklitzke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9b8b1079ddab64ac955766536c38d23dc57bc499",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b8b1079ddab64ac955766536c38d23dc57bc499",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9b8b1079ddab64ac955766536c38d23dc57bc499"
      }
    ],
    "stats": {
      "total": 162,
      "additions": 117,
      "deletions": 45
    },
    "files": [
      {
        "sha": "69696f990ada32273be21c76e07492964d529541",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 52,
        "deletions": 10,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd",
        "patch": "@@ -185,17 +185,11 @@ BOOST_AUTO_TEST_CASE(util_FormatISO8601Time)\n     BOOST_CHECK_EQUAL(FormatISO8601Time(1317425777), \"23:36:17Z\");\n }\n \n-class TestArgsManager : public ArgsManager\n+struct TestArgsManager : public ArgsManager\n {\n-public:\n-    std::map<std::string, std::string>& GetMapArgs()\n-    {\n-        return mapArgs;\n-    };\n-    const std::map<std::string, std::vector<std::string> >& GetMapMultiArgs()\n-    {\n-        return mapMultiArgs;\n-    };\n+    std::map<std::string, std::string>& GetMapArgs() { return mapArgs; }\n+    const std::map<std::string, std::vector<std::string> >& GetMapMultiArgs() { return mapMultiArgs; }\n+    const std::unordered_set<std::string>& GetNegatedArgs() { return m_negated_args; }\n };\n \n BOOST_AUTO_TEST_CASE(util_ParseParameters)\n@@ -223,6 +217,54 @@ BOOST_AUTO_TEST_CASE(util_ParseParameters)\n     BOOST_CHECK(testArgs.GetArgs(\"-ccc\").size() == 2);\n }\n \n+BOOST_AUTO_TEST_CASE(util_GetBoolArg)\n+{\n+    TestArgsManager testArgs;\n+    const char *argv_test[] = {\n+        \"ignored\", \"-a\", \"-nob\", \"-c=0\", \"-d=1\", \"-e=false\", \"-f=true\"};\n+    testArgs.ParseParameters(7, (char**)argv_test);\n+\n+    // Each letter should be set.\n+    for (char opt : \"abcdef\")\n+        BOOST_CHECK(testArgs.IsArgSet({'-', opt}) || !opt);\n+\n+    // Nothing else should be in the map\n+    BOOST_CHECK(testArgs.GetMapArgs().size() == 6 &&\n+                testArgs.GetMapMultiArgs().size() == 6);\n+\n+    // The -no prefix should get stripped on the way in.\n+    BOOST_CHECK(!testArgs.IsArgSet(\"-nob\"));\n+\n+    // The -b option is flagged as negated, and nothing else is\n+    BOOST_CHECK(testArgs.IsArgNegated(\"-b\"));\n+    BOOST_CHECK(testArgs.GetNegatedArgs().size() == 1);\n+    BOOST_CHECK(!testArgs.IsArgNegated(\"-a\"));\n+\n+    // Check expected values.\n+    BOOST_CHECK(testArgs.GetBoolArg(\"-a\", false) == true);\n+    BOOST_CHECK(testArgs.GetBoolArg(\"-b\", true) == false);\n+    BOOST_CHECK(testArgs.GetBoolArg(\"-c\", true) == false);\n+    BOOST_CHECK(testArgs.GetBoolArg(\"-d\", false) == true);\n+    BOOST_CHECK(testArgs.GetBoolArg(\"-e\", false) == true);\n+    BOOST_CHECK(testArgs.GetBoolArg(\"-f\", false) == true);\n+}\n+\n+BOOST_AUTO_TEST_CASE(util_GetBoolArgEdgeCases)\n+{\n+    // Test some awful edge cases that hopefully no user will ever exercise.\n+    TestArgsManager testArgs;\n+    const char *argv_test[] = {\"ignored\", \"-nofoo\", \"-foo\", \"-nobar=0\"};\n+    testArgs.ParseParameters(4, (char**)argv_test);\n+\n+    // This was passed twice, second one overrides the negative setting.\n+    BOOST_CHECK(!testArgs.IsArgNegated(\"-foo\"));\n+    BOOST_CHECK(testArgs.GetBoolArg(\"-foo\", false) == true);\n+\n+    // A double negative is a positive.\n+    BOOST_CHECK(testArgs.IsArgNegated(\"-bar\"));\n+    BOOST_CHECK(testArgs.GetBoolArg(\"-bar\", false) == true);\n+}\n+\n BOOST_AUTO_TEST_CASE(util_GetArg)\n {\n     TestArgsManager testArgs;"
      },
      {
        "sha": "28629c22965d56255f8230dcb43210a6586648ba",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 47,
        "deletions": 34,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd",
        "patch": "@@ -70,8 +70,6 @@\n #include <malloc.h>\n #endif\n \n-#include <boost/algorithm/string/case_conv.hpp> // for to_lower()\n-#include <boost/algorithm/string/predicate.hpp> // for startswith() and endswith()\n #include <boost/interprocess/sync/file_lock.hpp>\n #include <boost/program_options/detail/config_file.hpp>\n #include <boost/thread.hpp>\n@@ -420,20 +418,29 @@ void ReleaseDirectoryLocks()\n }\n \n /** Interpret string as boolean, for argument parsing */\n-static bool InterpretBool(const std::string& strValue)\n+static bool InterpretBool(const std::string& val)\n {\n-    if (strValue.empty())\n-        return true;\n-    return (atoi(strValue) != 0);\n+    return val != \"0\";\n }\n \n-/** Turn -noX into -X=0 */\n-static void InterpretNegativeSetting(std::string& strKey, std::string& strValue)\n+// Treat -nofoo as if the user supplied -foo=0. We also track that this was a\n+// negated option. This allows non-boolean options to have a \"disabled\" setting,\n+// e.g. -nodebuglogfile can be used to disable the -debuglogfile option.\n+void ArgsManager::InterpretNegatedOption(std::string &key, std::string &val)\n {\n-    if (strKey.length()>3 && strKey[0]=='-' && strKey[1]=='n' && strKey[2]=='o')\n-    {\n-        strKey = \"-\" + strKey.substr(3);\n-        strValue = InterpretBool(strValue) ? \"0\" : \"1\";\n+    if (key.substr(0, 3) == \"-no\") {\n+        bool bool_val = InterpretBool(val);\n+        if (!bool_val ) {\n+            // Double negatives like -nofoo=0 are supported (but discouraged)\n+            LogPrintf(\"Warning: parsed potentially confusing double-negative %s=%s\\n\", key, val);\n+        }\n+        key.erase(1, 2);\n+        m_negated_args.insert(key);\n+        val = bool_val ? \"0\" : \"1\";\n+    } else {\n+        // In an invocation like \"bitcoind -nofoo -foo\" we want to unmark -foo\n+        // as negated when we see the second option.\n+        m_negated_args.erase(key);\n     }\n }\n \n@@ -442,34 +449,34 @@ void ArgsManager::ParseParameters(int argc, const char* const argv[])\n     LOCK(cs_args);\n     mapArgs.clear();\n     mapMultiArgs.clear();\n-\n-    for (int i = 1; i < argc; i++)\n-    {\n-        std::string str(argv[i]);\n-        std::string strValue;\n-        size_t is_index = str.find('=');\n-        if (is_index != std::string::npos)\n-        {\n-            strValue = str.substr(is_index+1);\n-            str = str.substr(0, is_index);\n+    m_negated_args.clear();\n+\n+    for (int i = 1; i < argc; i++) {\n+        std::string key(argv[i]);\n+        std::string val;\n+        size_t is_index = key.find('=');\n+        if (is_index != std::string::npos) {\n+            val = key.substr(is_index + 1);\n+            key.erase(is_index);\n         }\n #ifdef WIN32\n-        boost::to_lower(str);\n-        if (boost::algorithm::starts_with(str, \"/\"))\n-            str = \"-\" + str.substr(1);\n+        std::transform(key.begin(), key.end(), key.begin(), ::tolower);\n+        if (key[0] == '/')\n+            key[0] = '-';\n #endif\n \n-        if (str[0] != '-')\n+        if (key[0] != '-')\n             break;\n \n-        // Interpret --foo as -foo.\n-        // If both --foo and -foo are set, the last takes effect.\n-        if (str.length() > 1 && str[1] == '-')\n-            str = str.substr(1);\n-        InterpretNegativeSetting(str, strValue);\n+        // Transform --foo to -foo\n+        if (key.length() > 1 && key[1] == '-')\n+            key.erase(0, 1);\n+\n+        // Transform -nofoo to -foo=0\n+        InterpretNegatedOption(key, val);\n \n-        mapArgs[str] = strValue;\n-        mapMultiArgs[str].push_back(strValue);\n+        mapArgs[key] = val;\n+        mapMultiArgs[key].push_back(val);\n     }\n }\n \n@@ -487,6 +494,12 @@ bool ArgsManager::IsArgSet(const std::string& strArg) const\n     return mapArgs.count(strArg);\n }\n \n+bool ArgsManager::IsArgNegated(const std::string& strArg) const\n+{\n+    LOCK(cs_args);\n+    return m_negated_args.find(strArg) != m_negated_args.end();\n+}\n+\n std::string ArgsManager::GetArg(const std::string& strArg, const std::string& strDefault) const\n {\n     LOCK(cs_args);\n@@ -665,7 +678,7 @@ void ArgsManager::ReadConfigFile(const std::string& confPath)\n             // Don't overwrite existing settings so command line settings override bitcoin.conf\n             std::string strKey = std::string(\"-\") + it->string_key;\n             std::string strValue = it->value[0];\n-            InterpretNegativeSetting(strKey, strValue);\n+            InterpretNegatedOption(strKey, strValue);\n             if (mapArgs.count(strKey) == 0)\n                 mapArgs[strKey] = strValue;\n             mapMultiArgs[strKey].push_back(strValue);"
      },
      {
        "sha": "3038f76d3918514767ce64c604a3b992e26b6988",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd",
        "patch": "@@ -25,6 +25,7 @@\n #include <map>\n #include <stdint.h>\n #include <string>\n+#include <unordered_set>\n #include <vector>\n \n #include <boost/signals2/signal.hpp>\n@@ -222,6 +223,8 @@ class ArgsManager\n     mutable CCriticalSection cs_args;\n     std::map<std::string, std::string> mapArgs;\n     std::map<std::string, std::vector<std::string>> mapMultiArgs;\n+    std::unordered_set<std::string> m_negated_args;\n+\n public:\n     void ParseParameters(int argc, const char*const argv[]);\n     void ReadConfigFile(const std::string& confPath);\n@@ -242,6 +245,15 @@ class ArgsManager\n      */\n     bool IsArgSet(const std::string& strArg) const;\n \n+    /**\n+     * Return true if the argument was originally passed as a negated option,\n+     * i.e. -nofoo.\n+     *\n+     * @param strArg Argument to get (e.g. \"-foo\")\n+     * @return true if the argument was passed negated\n+     */\n+    bool IsArgNegated(const std::string& strArg) const;\n+\n     /**\n      * Return string argument or default value\n      *\n@@ -290,6 +302,11 @@ class ArgsManager\n     // Forces an arg setting. Called by SoftSetArg() if the arg hasn't already\n     // been set. Also called directly in testing.\n     void ForceSetArg(const std::string& strArg, const std::string& strValue);\n+\n+private:\n+\n+    // Munge -nofoo into -foo=0 and track the value as negated.\n+    void InterpretNegatedOption(std::string &key, std::string &val);\n };\n \n extern ArgsManager gArgs;"
      },
      {
        "sha": "e0c188a33b19c971e4ad0039703d9059d9607a37",
        "filename": "test/functional/wallet_resendwallettransactions.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd/test/functional/wallet_resendwallettransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd/test/functional/wallet_resendwallettransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_resendwallettransactions.py?ref=6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd",
        "patch": "@@ -10,7 +10,7 @@\n class ResendWalletTransactionsTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n-        self.extra_args = [['--walletbroadcast=false']]\n+        self.extra_args = [['-walletbroadcast=0']]\n \n     def run_test(self):\n         # Should raise RPC_WALLET_ERROR (-4) if walletbroadcast is disabled."
      }
    ]
  },
  {
    "sha": "78bc52bf863fd0f212a9a29adb1c99651cc4a0eb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OGJjNTJiZjg2M2ZkMGYyMTJhOWEyOWFkYjFjOTk2NTFjYzRhMGVi",
    "commit": {
      "author": {
        "name": "Evan Klitzke",
        "email": "evan@eklitzke.org",
        "date": "2018-03-21T06:32:33Z"
      },
      "committer": {
        "name": "Evan Klitzke",
        "email": "evan@eklitzke.org",
        "date": "2018-03-21T07:08:27Z"
      },
      "message": "Completely eliminate boost::program_options dependency",
      "tree": {
        "sha": "5984dd8e7cfd69a90292bdc97f3979d3e26289d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5984dd8e7cfd69a90292bdc97f3979d3e26289d1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/78bc52bf863fd0f212a9a29adb1c99651cc4a0eb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEr5FzGLjELREnIWJdFX78rLxkhCIFAlqyBOsACgkQFX78rLxk\nhCLQZg//ZvQcqlCqifcxS5NUgXKb8NS+YOwbMJp7iKQmsJyDKsr9IohwMeAhrwRR\nkel8aLOIUGUTsN8lrRw5PrkEbpJ0PEmapYI4y6NK6/8hiW6Ake0z75652eqL1Rmz\nQbFSHCj/UEKNWxy0c9FQyZ1oteMy8a10J8uS7g0vkEIyB1BkO5015ZS/W4rqKSFx\nVhPs4r2UX1qdmatvnSJpZaTyuJfknQbcN5QnIrzVt7Zc3ifjeuh3Yxb1d/HBEZds\nIrM7sAnk91aqBjU1B2MTcGxoGmEHNiqftH8P/onw1OJ9zn2rtpy9YW3csAl4ldSU\ne6JJItNxJN9IVo73J3fH1R76BF1unZvOnkVWCwek4QjR1URtXq9ePXwcRTl8ub0T\ntuBUltoakTJ721T6dTV63QSb5v3R4eDkwANfSPocaS2NLsp5C88yoIwLhqVrzV0R\nZPSUXjL3mB2B+RHCuVsozjkrA5bN60pGZZ8kwDjoO+l+35Nyd3GgbkIUHx3xMcQ9\nGjH5AC69j8HnXFF43iJ6hJWYDEpWf3lLGiK1bNcLUaSaVwhWifwArzPKdmq0wxty\nnrEC8J/lu7HvKrhsy9C0m+WNg4plyHx/oMubrt/MglV6bmqNatxzbUOeS8tvhSKK\ndLx/6Py3eOyVysnvO2vJRsXQUxnTbqNfcxuM+vfYj8tcPFsaUI4=\n=JBzI\n-----END PGP SIGNATURE-----",
        "payload": "tree 5984dd8e7cfd69a90292bdc97f3979d3e26289d1\nparent 6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd\nauthor Evan Klitzke <evan@eklitzke.org> 1521613953 -0700\ncommitter Evan Klitzke <evan@eklitzke.org> 1521616107 -0700\n\nCompletely eliminate boost::program_options dependency\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78bc52bf863fd0f212a9a29adb1c99651cc4a0eb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/78bc52bf863fd0f212a9a29adb1c99651cc4a0eb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78bc52bf863fd0f212a9a29adb1c99651cc4a0eb/comments",
    "author": {
      "login": "eklitzke",
      "id": 2734,
      "node_id": "MDQ6VXNlcjI3MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eklitzke",
      "html_url": "https://github.com/eklitzke",
      "followers_url": "https://api.github.com/users/eklitzke/followers",
      "following_url": "https://api.github.com/users/eklitzke/following{/other_user}",
      "gists_url": "https://api.github.com/users/eklitzke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eklitzke/subscriptions",
      "organizations_url": "https://api.github.com/users/eklitzke/orgs",
      "repos_url": "https://api.github.com/users/eklitzke/repos",
      "events_url": "https://api.github.com/users/eklitzke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eklitzke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "eklitzke",
      "id": 2734,
      "node_id": "MDQ6VXNlcjI3MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eklitzke",
      "html_url": "https://github.com/eklitzke",
      "followers_url": "https://api.github.com/users/eklitzke/followers",
      "following_url": "https://api.github.com/users/eklitzke/following{/other_user}",
      "gists_url": "https://api.github.com/users/eklitzke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eklitzke/subscriptions",
      "organizations_url": "https://api.github.com/users/eklitzke/orgs",
      "repos_url": "https://api.github.com/users/eklitzke/repos",
      "events_url": "https://api.github.com/users/eklitzke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eklitzke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd"
      }
    ],
    "stats": {
      "total": 162,
      "additions": 36,
      "deletions": 126
    },
    "files": [
      {
        "sha": "2bdb5937162e4207cf0f96586bc343653ae30da1",
        "filename": "build-aux/m4/ax_boost_program_options.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 108,
        "changes": 108,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd/build-aux/m4/ax_boost_program_options.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd/build-aux/m4/ax_boost_program_options.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_program_options.m4?ref=6b95d6bd6e81030605d6b4ad42dd83cd3bc69bfd",
        "patch": "@@ -1,108 +0,0 @@\n-# ============================================================================\n-#  http://www.gnu.org/software/autoconf-archive/ax_boost_program_options.html\n-# ============================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_PROGRAM_OPTIONS\n-#\n-# DESCRIPTION\n-#\n-#   Test for program options library from the Boost C++ libraries. The macro\n-#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n-#   available at <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_PROGRAM_OPTIONS\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 24\n-\n-AC_DEFUN([AX_BOOST_PROGRAM_OPTIONS],\n-[\n-\tAC_ARG_WITH([boost-program-options],\n-\t\tAS_HELP_STRING([--with-boost-program-options@<:@=special-lib@:>@],\n-                       [use the program options library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-program-options=boost_program_options-gcc-mt-1_33_1 ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_program_options_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_program_options_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-\t    export want_boost\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\t\tAC_CACHE_CHECK([whether the Boost::Program_Options library is available],\n-\t\t\t\t\t   ax_cv_boost_program_options,\n-\t\t\t\t\t   [AC_LANG_PUSH(C++)\n-\t\t\t\tAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/program_options/errors.hpp>\n-                                                          ]],\n-                                  [[boost::program_options::error err(\"Error message\");\n-                                   return 0;]])],\n-                           ax_cv_boost_program_options=yes, ax_cv_boost_program_options=no)\n-\t\t\t\t\tAC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"$ax_cv_boost_program_options\" = yes; then\n-\t\t\t\tAC_DEFINE(HAVE_BOOST_PROGRAM_OPTIONS,,[define if the Boost::PROGRAM_OPTIONS library is available])\n-                  BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-                if test \"x$ax_boost_user_program_options_lib\" = \"x\"; then\n-                for libextension in `ls $BOOSTLIBDIR/libboost_program_options*.so* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.so.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_program_options*.dylib* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.dylib.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_program_options*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n-                                 [link_program_options=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_program_options\" != \"xyes\"; then\n-                for libextension in `ls $BOOSTLIBDIR/boost_program_options*.dll* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_program_options.*\\)\\.dll.*$;\\1;'` `ls $BOOSTLIBDIR/boost_program_options*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_program_options.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n-                                 [link_program_options=\"no\"])\n-\t\t\t\tdone\n-                fi\n-                else\n-                  for ax_lib in $ax_boost_user_program_options_lib boost_program_options-$ax_boost_user_program_options_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, main,\n-                                   [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n-                                   [link_program_options=\"no\"])\n-                  done\n-                fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_program_options library!)\n-            fi\n-\t\t\t\tif test \"x$link_program_options\" != \"xyes\"; then\n-\t\t\t\t\tAC_MSG_ERROR([Could not link against [$ax_lib] !])\n-\t\t\t\tfi\n-\t\tfi\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "08b6def013096884154645e254fb60a636466c3a",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78bc52bf863fd0f212a9a29adb1c99651cc4a0eb/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78bc52bf863fd0f212a9a29adb1c99651cc4a0eb/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=78bc52bf863fd0f212a9a29adb1c99651cc4a0eb",
        "patch": "@@ -783,7 +783,6 @@ if test x$want_boost = xno; then\n fi\n AX_BOOST_SYSTEM\n AX_BOOST_FILESYSTEM\n-AX_BOOST_PROGRAM_OPTIONS\n AX_BOOST_THREAD\n AX_BOOST_CHRONO\n \n@@ -852,7 +851,7 @@ fi\n \n if test x$use_boost = xyes; then\n \n-BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_PROGRAM_OPTIONS_LIB $BOOST_THREAD_LIB $BOOST_CHRONO_LIB\"\n+BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_THREAD_LIB $BOOST_CHRONO_LIB\"\n \n \n dnl If boost (prior to 1.57) was built without c++11, it emulated scoped enums"
      },
      {
        "sha": "61806c7509ef65d5984b7ed89dd20fb736065971",
        "filename": "depends/packages/boost.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78bc52bf863fd0f212a9a29adb1c99651cc4a0eb/depends/packages/boost.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78bc52bf863fd0f212a9a29adb1c99651cc4a0eb/depends/packages/boost.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/boost.mk?ref=78bc52bf863fd0f212a9a29adb1c99651cc4a0eb",
        "patch": "@@ -19,7 +19,7 @@ $(package)_toolset_$(host_os)=gcc\n $(package)_archiver_$(host_os)=$($(package)_ar)\n $(package)_toolset_darwin=darwin\n $(package)_archiver_darwin=$($(package)_libtool)\n-$(package)_config_libraries=chrono,filesystem,program_options,system,thread,test\n+$(package)_config_libraries=chrono,filesystem,system,thread,test\n $(package)_cxxflags=-std=c++11 -fvisibility=hidden\n $(package)_cxxflags_linux=-fPIC\n endef"
      },
      {
        "sha": "89aa14ec4242e46ed3ebbe8836a220f52f796410",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78bc52bf863fd0f212a9a29adb1c99651cc4a0eb/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78bc52bf863fd0f212a9a29adb1c99651cc4a0eb/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=78bc52bf863fd0f212a9a29adb1c99651cc4a0eb",
        "patch": "@@ -79,7 +79,7 @@ Options when installing required Boost library files:\n individual boost development packages, so the following can be used to only\n install necessary parts of boost:\n \n-        sudo apt-get install libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev\n+        sudo apt-get install libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev\n \n 2. If that doesn't work, you can install all boost development packages with:\n "
      },
      {
        "sha": "bd9c0663e5ea33d8436a9abbfb7e2758de021275",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 14,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78bc52bf863fd0f212a9a29adb1c99651cc4a0eb/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78bc52bf863fd0f212a9a29adb1c99651cc4a0eb/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=78bc52bf863fd0f212a9a29adb1c99651cc4a0eb",
        "patch": "@@ -71,7 +71,6 @@\n #endif\n \n #include <boost/interprocess/sync/file_lock.hpp>\n-#include <boost/program_options/detail/config_file.hpp>\n #include <boost/thread.hpp>\n #include <openssl/crypto.h>\n #include <openssl/rand.h>\n@@ -662,26 +661,46 @@ fs::path GetConfigFile(const std::string& confPath)\n     return AbsPathForConfigVal(fs::path(confPath), false);\n }\n \n+inline bool not_space(int c) { return !std::isspace(c); }\n+\n void ArgsManager::ReadConfigFile(const std::string& confPath)\n {\n-    fs::ifstream streamConfig(GetConfigFile(confPath));\n-    if (!streamConfig.good())\n+    fs::ifstream config_file(GetConfigFile(confPath));\n+    if (!config_file.good())\n         return; // No bitcoin.conf file is OK\n \n     {\n+        // left and right trim for strings\n+        auto ltrim = [](std::string &s) { s.erase(s.begin(), std::find_if(s.begin(), s.end(), not_space)); };\n+        auto rtrim = [](std::string &s) { s.erase(std::find_if(s.rbegin(), s.rend(), not_space).base(), s.end()); };\n+\n         LOCK(cs_args);\n-        std::set<std::string> setOptions;\n-        setOptions.insert(\"*\");\n+        std::string line;\n+        while (std::getline(config_file, line)) {\n+            size_t eqpos = line.find('=');\n+            std::string key, val;\n+            if (eqpos == std::string::npos) {\n+                key = line;\n+            } else {\n+                key = line.substr(0, eqpos);\n+                val = line.substr(eqpos + 1);\n+            }\n \n-        for (boost::program_options::detail::config_file_iterator it(streamConfig, setOptions), end; it != end; ++it)\n-        {\n-            // Don't overwrite existing settings so command line settings override bitcoin.conf\n-            std::string strKey = std::string(\"-\") + it->string_key;\n-            std::string strValue = it->value[0];\n-            InterpretNegatedOption(strKey, strValue);\n-            if (mapArgs.count(strKey) == 0)\n-                mapArgs[strKey] = strValue;\n-            mapMultiArgs[strKey].push_back(strValue);\n+            // trim whitespace on the key and value\n+            ltrim(key);\n+            rtrim(key);\n+            ltrim(val);\n+            rtrim(val);\n+\n+            // convert to cli argument form\n+            key = \"-\" + key;\n+\n+            // handle -nofoo options\n+            InterpretNegatedOption(key, val);\n+\n+            if (mapArgs.count(key) == 0)\n+                mapArgs[key] = val;\n+            mapMultiArgs[key].push_back(val);\n         }\n     }\n     // If datadir is changed in .conf file:"
      }
    ]
  }
]