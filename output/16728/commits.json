[
  {
    "sha": "8a3b2eb17572ca2131778d52cc25ec359470a90f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YTNiMmViMTc1NzJjYTIxMzE3NzhkNTJjYzI1ZWMzNTk0NzBhOTBm",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2019-03-28T15:41:01Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2019-08-27T15:51:56Z"
      },
      "message": "move-only: move coins statistics utils out of RPC\n\nThese procedures will later be used in the ChainstateManager to compute\nstatistics (particularly a content hash) for UTXO sets coming in from\nsnapshots.",
      "tree": {
        "sha": "c651ebf44320e96af435fcf180a11de3472e670c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c651ebf44320e96af435fcf180a11de3472e670c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8a3b2eb17572ca2131778d52cc25ec359470a90f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a3b2eb17572ca2131778d52cc25ec359470a90f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8a3b2eb17572ca2131778d52cc25ec359470a90f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a3b2eb17572ca2131778d52cc25ec359470a90f/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "adff8fe32101b2c007a85415c3ec565a7f137252",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/adff8fe32101b2c007a85415c3ec565a7f137252",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/adff8fe32101b2c007a85415c3ec565a7f137252"
      }
    ],
    "stats": {
      "total": 184,
      "additions": 113,
      "deletions": 71
    },
    "files": [
      {
        "sha": "8fc7f61d4b78e2585b56785f59eda50e7e799040",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a3b2eb17572ca2131778d52cc25ec359470a90f/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a3b2eb17572ca2131778d52cc25ec359470a90f/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=8a3b2eb17572ca2131778d52cc25ec359470a90f",
        "patch": "@@ -156,6 +156,7 @@ BITCOIN_CORE_H = \\\n   netbase.h \\\n   netmessagemaker.h \\\n   node/coin.h \\\n+  node/coinstats.h \\\n   node/psbt.h \\\n   node/transaction.h \\\n   noui.h \\\n@@ -278,6 +279,7 @@ libbitcoin_server_a_SOURCES = \\\n   net.cpp \\\n   net_processing.cpp \\\n   node/coin.cpp \\\n+  node/coinstats.cpp \\\n   node/psbt.cpp \\\n   node/transaction.cpp \\\n   noui.cpp \\"
      },
      {
        "sha": "e1891b9898732fae3ec053ba1306e3629cfce105",
        "filename": "src/node/coinstats.cpp",
        "status": "added",
        "additions": 77,
        "deletions": 0,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a3b2eb17572ca2131778d52cc25ec359470a90f/src/node/coinstats.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a3b2eb17572ca2131778d52cc25ec359470a90f/src/node/coinstats.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/coinstats.cpp?ref=8a3b2eb17572ca2131778d52cc25ec359470a90f",
        "patch": "@@ -0,0 +1,77 @@\n+// Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <node/coinstats.h>\n+\n+#include <amount.h>\n+#include <coins.h>\n+#include <chain.h>\n+#include <hash.h>\n+#include <serialize.h>\n+#include <validation.h>\n+#include <uint256.h>\n+#include <util/system.h>\n+\n+#include <map>\n+\n+#include <boost/thread.hpp>\n+\n+\n+static void ApplyStats(CCoinsStats &stats, CHashWriter& ss, const uint256& hash, const std::map<uint32_t, Coin>& outputs)\n+{\n+    assert(!outputs.empty());\n+    ss << hash;\n+    ss << VARINT(outputs.begin()->second.nHeight * 2 + outputs.begin()->second.fCoinBase ? 1u : 0u);\n+    stats.nTransactions++;\n+    for (const auto& output : outputs) {\n+        ss << VARINT(output.first + 1);\n+        ss << output.second.out.scriptPubKey;\n+        ss << VARINT(output.second.out.nValue, VarIntMode::NONNEGATIVE_SIGNED);\n+        stats.nTransactionOutputs++;\n+        stats.nTotalAmount += output.second.out.nValue;\n+        stats.nBogoSize += 32 /* txid */ + 4 /* vout index */ + 4 /* height + coinbase */ + 8 /* amount */ +\n+                           2 /* scriptPubKey len */ + output.second.out.scriptPubKey.size() /* scriptPubKey */;\n+    }\n+    ss << VARINT(0u);\n+}\n+\n+//! Calculate statistics about the unspent transaction output set\n+bool GetUTXOStats(CCoinsView *view, CCoinsStats &stats)\n+{\n+    std::unique_ptr<CCoinsViewCursor> pcursor(view->Cursor());\n+    assert(pcursor);\n+\n+    CHashWriter ss(SER_GETHASH, PROTOCOL_VERSION);\n+    stats.hashBlock = pcursor->GetBestBlock();\n+    {\n+        LOCK(cs_main);\n+        stats.nHeight = LookupBlockIndex(stats.hashBlock)->nHeight;\n+    }\n+    ss << stats.hashBlock;\n+    uint256 prevkey;\n+    std::map<uint32_t, Coin> outputs;\n+    while (pcursor->Valid()) {\n+        boost::this_thread::interruption_point();\n+        COutPoint key;\n+        Coin coin;\n+        if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n+            if (!outputs.empty() && key.hash != prevkey) {\n+                ApplyStats(stats, ss, prevkey, outputs);\n+                outputs.clear();\n+            }\n+            prevkey = key.hash;\n+            outputs[key.n] = std::move(coin);\n+        } else {\n+            return error(\"%s: unable to read value\", __func__);\n+        }\n+        pcursor->Next();\n+    }\n+    if (!outputs.empty()) {\n+        ApplyStats(stats, ss, prevkey, outputs);\n+    }\n+    stats.hashSerialized = ss.GetHash();\n+    stats.nDiskSize = view->EstimateSize();\n+    return true;\n+}"
      },
      {
        "sha": "7c11aab8bd0d4e88e2d33cf9dc4eca5ef5d0c358",
        "filename": "src/node/coinstats.h",
        "status": "added",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a3b2eb17572ca2131778d52cc25ec359470a90f/src/node/coinstats.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a3b2eb17572ca2131778d52cc25ec359470a90f/src/node/coinstats.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/coinstats.h?ref=8a3b2eb17572ca2131778d52cc25ec359470a90f",
        "patch": "@@ -0,0 +1,33 @@\n+// Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_NODE_COINSTATS_H\n+#define BITCOIN_NODE_COINSTATS_H\n+\n+#include <amount.h>\n+#include <uint256.h>\n+\n+#include <cstdint>\n+\n+class CCoinsView;\n+\n+struct CCoinsStats\n+{\n+    int nHeight;\n+    uint256 hashBlock;\n+    uint64_t nTransactions;\n+    uint64_t nTransactionOutputs;\n+    uint64_t nBogoSize;\n+    uint256 hashSerialized;\n+    uint64_t nDiskSize;\n+    CAmount nTotalAmount;\n+\n+    CCoinsStats() : nHeight(0), nTransactions(0), nTransactionOutputs(0), nBogoSize(0), nDiskSize(0), nTotalAmount(0) {}\n+};\n+\n+//! Calculate statistics about the unspent transaction output set\n+bool GetUTXOStats(CCoinsView* view, CCoinsStats& stats);\n+\n+#endif // BITCOIN_NODE_COINSTATS_H"
      },
      {
        "sha": "7161c39ffdfde5bf6145c756dd7f130eb21757f6",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 71,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a3b2eb17572ca2131778d52cc25ec359470a90f/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a3b2eb17572ca2131778d52cc25ec359470a90f/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=8a3b2eb17572ca2131778d52cc25ec359470a90f",
        "patch": "@@ -10,6 +10,7 @@\n #include <chain.h>\n #include <chainparams.h>\n #include <coins.h>\n+#include <node/coinstats.h>\n #include <consensus/validation.h>\n #include <core_io.h>\n #include <hash.h>\n@@ -909,77 +910,6 @@ static UniValue getblock(const JSONRPCRequest& request)\n     return blockToJSON(block, tip, pblockindex, verbosity >= 2);\n }\n \n-struct CCoinsStats\n-{\n-    int nHeight;\n-    uint256 hashBlock;\n-    uint64_t nTransactions;\n-    uint64_t nTransactionOutputs;\n-    uint64_t nBogoSize;\n-    uint256 hashSerialized;\n-    uint64_t nDiskSize;\n-    CAmount nTotalAmount;\n-\n-    CCoinsStats() : nHeight(0), nTransactions(0), nTransactionOutputs(0), nBogoSize(0), nDiskSize(0), nTotalAmount(0) {}\n-};\n-\n-static void ApplyStats(CCoinsStats &stats, CHashWriter& ss, const uint256& hash, const std::map<uint32_t, Coin>& outputs)\n-{\n-    assert(!outputs.empty());\n-    ss << hash;\n-    ss << VARINT(outputs.begin()->second.nHeight * 2 + outputs.begin()->second.fCoinBase ? 1u : 0u);\n-    stats.nTransactions++;\n-    for (const auto& output : outputs) {\n-        ss << VARINT(output.first + 1);\n-        ss << output.second.out.scriptPubKey;\n-        ss << VARINT(output.second.out.nValue, VarIntMode::NONNEGATIVE_SIGNED);\n-        stats.nTransactionOutputs++;\n-        stats.nTotalAmount += output.second.out.nValue;\n-        stats.nBogoSize += 32 /* txid */ + 4 /* vout index */ + 4 /* height + coinbase */ + 8 /* amount */ +\n-                           2 /* scriptPubKey len */ + output.second.out.scriptPubKey.size() /* scriptPubKey */;\n-    }\n-    ss << VARINT(0u);\n-}\n-\n-//! Calculate statistics about the unspent transaction output set\n-static bool GetUTXOStats(CCoinsView *view, CCoinsStats &stats)\n-{\n-    std::unique_ptr<CCoinsViewCursor> pcursor(view->Cursor());\n-    assert(pcursor);\n-\n-    CHashWriter ss(SER_GETHASH, PROTOCOL_VERSION);\n-    stats.hashBlock = pcursor->GetBestBlock();\n-    {\n-        LOCK(cs_main);\n-        stats.nHeight = LookupBlockIndex(stats.hashBlock)->nHeight;\n-    }\n-    ss << stats.hashBlock;\n-    uint256 prevkey;\n-    std::map<uint32_t, Coin> outputs;\n-    while (pcursor->Valid()) {\n-        boost::this_thread::interruption_point();\n-        COutPoint key;\n-        Coin coin;\n-        if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n-            if (!outputs.empty() && key.hash != prevkey) {\n-                ApplyStats(stats, ss, prevkey, outputs);\n-                outputs.clear();\n-            }\n-            prevkey = key.hash;\n-            outputs[key.n] = std::move(coin);\n-        } else {\n-            return error(\"%s: unable to read value\", __func__);\n-        }\n-        pcursor->Next();\n-    }\n-    if (!outputs.empty()) {\n-        ApplyStats(stats, ss, prevkey, outputs);\n-    }\n-    stats.hashSerialized = ss.GetHash();\n-    stats.nDiskSize = view->EstimateSize();\n-    return true;\n-}\n-\n static UniValue pruneblockchain(const JSONRPCRequest& request)\n {\n             RPCHelpMan{\"pruneblockchain\", \"\","
      }
    ]
  }
]