jamesob,2019-08-26 17:43:13,Thanks for the quick feedback @MarcoFalke. Fixed and pushed.,https://github.com/bitcoin/bitcoin/pull/16728#issuecomment-524956343,524956343,
DrahtBot,2019-08-26 19:12:53,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16345](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16345.html) (rpc: Add getblockbyheight method by emileng",https://github.com/bitcoin/bitcoin/pull/16728#issuecomment-524991217,524991217,
jamesob,2019-08-26 20:08:57,"[`au.coinstast.1`](https://github.com/jamesob/bitcoin/tree/au.coinstast.1) -> [`au.coinstast.2`](https://github.com/jamesob/bitcoin/tree/au.coinstast.2) [(change)](https://github.com/bitcoin/bitcoin/compare/07da7c422d875e54176a81b37de011a4761966cc..4a76e68e7ff0fcc67e810c18ed088860d9c5bfa5)\n\nPushed fixes for feedback from Marco and Russ.",https://github.com/bitcoin/bitcoin/pull/16728#issuecomment-525011752,525011752,
jamesob,2019-08-27 15:54:53,"[`au.coinstast.3`](https://github.com/jamesob/bitcoin/tree/au.coinstast.3) -> [`au.coinstast.4`](https://github.com/jamesob/bitcoin/tree/au.coinstast.4) [(change)](https://github.com/bitcoin/bitcoin/compare/8f394b5809a5ccf042e7ddf4d3921acb3a7a67a2..8a3b2eb17572ca2131778d52cc25ec359470a90f)\n\nThanks for the reviews and suggestions, everyone. I've cleaned up some of the imports and reverted the `",https://github.com/bitcoin/bitcoin/pull/16728#issuecomment-525365939,525365939,
MarcoFalke,2019-08-27 16:01:10,"ACK 8a3b2eb17572ca2131778d52cc25ec359470a90f, checked --color-moved=dimmed-zebra\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK 8a3b2eb17572ca2131778d52cc25ec359470a90f, checked --color-moved=dimmed-zebra\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQz",https://github.com/bitcoin/bitcoin/pull/16728#issuecomment-525368761,525368761,
MarcoFalke,2019-08-27 17:03:00,This will be merged after one more ACK,https://github.com/bitcoin/bitcoin/pull/16728#issuecomment-525393084,525393084,
promag,2019-08-27 17:03:34,ACK,https://github.com/bitcoin/bitcoin/pull/16728#issuecomment-525393326,525393326,
MarcoFalke,2019-08-26 15:47:12,"please keep this list sorted, as before",https://github.com/bitcoin/bitcoin/pull/16728#discussion_r317667358,317667358,src/Makefile.am
MarcoFalke,2019-08-26 15:52:47,"This includes `serialize.h`, which takes quite a long time to parse. Why not replace those two includes with a simple forward decl?\n\n```diff\n+#include <amount.h>\n+class CBlockIndex;\n+class CCoinsView;\n",https://github.com/bitcoin/bitcoin/pull/16728#discussion_r317669821,317669821,src/coinstats.h
MarcoFalke,2019-08-26 15:53:28,what is this?,https://github.com/bitcoin/bitcoin/pull/16728#discussion_r317670117,317670117,src/coinstats.h
MarcoFalke,2019-08-26 17:21:27,"```\nIn file included from rpc/blockchain.cpp:33:\n./validation.h:406:14: warning: redundant redeclaration of ‘CBlockIndex* LookupBlockIndex(const uint256&)’ in same scope [-Wredundant-decls]\n  406 | CBlockIndex* LookupBlockIndex(const uint256& hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n      |              ^~~~~~~~~~~~~~~~\nIn file included from rpc/blockchain.cpp:13:\n./coinstats.h:18:14: ",https://github.com/bitcoin/bitcoin/pull/16728#discussion_r317706370,317706370,src/coinstats.h
ryanofsky,2019-08-26 17:56:04,"In commit ""move-only: move coins statistics utils out of RPC"" (07da7c422d875e54176a81b37de011a4761966cc)\n\nNote: previous line was\n\n```c++\nstats.nHeight = LookupBlockIndex(stats.hashBlock)->nHeight;\n```\n\nwhich crashes if LookupBlockIndex returns null. Otherwise there's no change.",https://github.com/bitcoin/bitcoin/pull/16728#discussion_r317721655,317721655,src/coinstats.cpp
ryanofsky,2019-08-26 17:58:30,"In commit ""move-only: move coins statistics utils out of RPC"" (07da7c422d875e54176a81b37de011a4761966cc)\n\nCould consider moving moving these files to `src/node/`. IMO better to make use of node/, wallet/, qt/, util/, etc subdirectories instead of adding things at the top level. Some notes about this in #15732.",https://github.com/bitcoin/bitcoin/pull/16728#discussion_r317722802,317722802,src/Makefile.am
MarcoFalke,2019-08-26 18:06:05,Why are you removing the lock annotation? Can't you just include the header?,https://github.com/bitcoin/bitcoin/pull/16728#discussion_r317726258,317726258,src/coinstats.cpp
MarcoFalke,2019-08-26 18:08:57,"Just to be clear on the rationale here: `LookupBlockIndex` accesses a global that is only properly initialized in the node process. Thus, the coinstats module should be in the `src/node` folder?",https://github.com/bitcoin/bitcoin/pull/16728#discussion_r317727590,317727590,src/Makefile.am
MarcoFalke,2019-08-26 18:11:53,"This should never crash, unless there is a data corruption. I'd prefer to keep the previous code or throw an exception instead of withholding the fact that data is corrupted from the user.",https://github.com/bitcoin/bitcoin/pull/16728#discussion_r317728840,317728840,src/coinstats.cpp
ryanofsky,2019-08-26 19:05:29,"> Just to be clear on the rationale here\n\nCalling LookupBlockIndex and accessing globals is a more of a rationale for including this code in the `libbitcoin_server.a` library instead of `libbitcoin_util.a` or another library.\n\nThere is `libbitcoin_server.a` code in the top-level directory, but there is also a code from other libraries there. I just think it's nice to use node/, wallet/, qt",https://github.com/bitcoin/bitcoin/pull/16728#discussion_r317751843,317751843,src/Makefile.am
MarcoFalke,2019-08-26 19:13:58,"> more of a rationale for including this code in the libbitcoin_server.a library\n\nI think we agree then. `src/node` should eventually be the folder for libbitcoin_server.",https://github.com/bitcoin/bitcoin/pull/16728#discussion_r317755014,317755014,src/Makefile.am
jamesob,2019-08-26 19:26:47,"`validation.cpp` will eventually include this file (for use validationg snapshots) and I didn't want to create a circular dep. My mistake, forgot this would remove the lock annotation for uses in this file, will add back.",https://github.com/bitcoin/bitcoin/pull/16728#discussion_r317759824,317759824,src/coinstats.cpp
MarcoFalke,2019-08-26 19:41:00,"This would be the first time that we solved a circular dependency by copy-pasting parts of a header file. \n\n> validation.cpp will eventually include this file \n\nIf, and when, this happens, you can either document the circular dependency or remove the include via this hack. No need to do it now.",https://github.com/bitcoin/bitcoin/pull/16728#discussion_r317765101,317765101,src/coinstats.cpp
jamesob,2019-08-26 19:58:39,"@ryanofsky thanks for the pointer, forgot about these. Will move.",https://github.com/bitcoin/bitcoin/pull/16728#discussion_r317771756,317771756,src/Makefile.am
MarcoFalke,2019-08-26 20:29:17,"Alternatively, you could use `error()`, as done later on in this function. I don't think the current code makes sense, unless you can give an explanation or code comment to motivate it",https://github.com/bitcoin/bitcoin/pull/16728#discussion_r317784165,317784165,src/coinstats.cpp
ariard,2019-08-27 03:56:08,"Could be an opportunity to comment fields structures like bytes unit of `nDiskSize` and bitcoin unit of `nTotalAmount`, why `hashSerialized` is hash_serilalized_2, what's the purpose of `nBogoSize`",https://github.com/bitcoin/bitcoin/pull/16728#discussion_r317883971,317883971,src/node/coinstats.h
Sjors,2019-08-27 13:12:44,This change deserves its own commit? Assertion works for me too as @MarcoFalke suggested: https://github.com/bitcoin/bitcoin/pull/16728#discussion_r317784165,https://github.com/bitcoin/bitcoin/pull/16728#discussion_r318071588,318071588,src/node/coinstats.cpp
promag,2019-08-27 14:27:07,Agree with the separate commit.,https://github.com/bitcoin/bitcoin/pull/16728#discussion_r318113016,318113016,src/node/coinstats.cpp
promag,2019-08-27 14:28:12,Could fix format in this new line (space before arg name).,https://github.com/bitcoin/bitcoin/pull/16728#discussion_r318113653,318113653,src/node/coinstats.h
promag,2019-08-27 14:29:42,"If you are going to push a separate commit then you could also drop the constructor and initialize members in place, like `int nHeight{0};`.",https://github.com/bitcoin/bitcoin/pull/16728#discussion_r318114542,318114542,src/node/coinstats.h
promag,2019-08-27 14:33:15,What is this for?,https://github.com/bitcoin/bitcoin/pull/16728#discussion_r318116570,318116570,src/node/coinstats.h
promag,2019-08-27 14:33:32,Should `#include <cstdint>`.,https://github.com/bitcoin/bitcoin/pull/16728#discussion_r318116742,318116742,src/node/coinstats.h
jamesob,2019-08-27 15:39:00,"Ah my mistake, I don't actually remember changing this code (it's been a while since I wrote the original patch). I'll revert to current behavior to keep move-onlyness.",https://github.com/bitcoin/bitcoin/pull/16728#discussion_r318153518,318153518,src/coinstats.cpp
jamesob,2019-08-27 15:39:44,Good suggestions. Will add if I have to invalidate the move-onlyness for some reason.,https://github.com/bitcoin/bitcoin/pull/16728#discussion_r318153875,318153875,src/node/coinstats.h
jamesob,2019-08-27 15:47:46,Good point - stale.,https://github.com/bitcoin/bitcoin/pull/16728#discussion_r318158161,318158161,src/node/coinstats.h
promag,2019-08-27 16:12:06,nit sort :trollface: ,https://github.com/bitcoin/bitcoin/pull/16728#discussion_r318170203,318170203,src/node/coinstats.cpp
MarcoFalke,2019-08-27 16:58:40,Can be done the next time this file is touched. ,https://github.com/bitcoin/bitcoin/pull/16728#discussion_r318191400,318191400,src/node/coinstats.cpp
