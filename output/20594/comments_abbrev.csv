laanwj,2020-12-07 21:25:59,"Code review ACK 836a3dc02c72f917db5be386b9b4787a59d48610\nAgree with making the weak link check Linux specific. It will pretty much pass on every platform with weak linking otherwise, redundantly.",https://github.com/bitcoin/bitcoin/pull/20594#issuecomment-740189454,740189454,
jonatack,2020-12-07 21:31:38,utACK 836a3dc02c72f917db5be386b9b4787a59d48610,https://github.com/bitcoin/bitcoin/pull/20594#issuecomment-740192175,740192175,
MarcoFalke,2020-12-08 15:21:46,"#20358 is marked for backport, so should this be marked as well or neither?",https://github.com/bitcoin/bitcoin/pull/20594#issuecomment-740684704,740684704,
jonasschnelli,2020-12-08 15:31:30,I don't think this qualifies a backport.,https://github.com/bitcoin/bitcoin/pull/20594#issuecomment-740691133,740691133,
laanwj,2020-12-10 10:40:20,"I don't think we're going to backport #20594, so this one shouldn't be needed to be backported either. ",https://github.com/bitcoin/bitcoin/pull/20594#issuecomment-742438039,742438039,
DrahtBot,2020-12-11 04:33:15,<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit c8fdbb46bd921575be84cf87e2966a455c3f5274<br>(master) | commit b7b41d9d616d4f1e2d5c22d197e922dacc5457fc<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`3deed2da45b62eec...`](https://drahtbot.space/guix/bitcoin/bitcoin/c8fdbb46bd921575be84cf87e2966a455c3f5274/bitcoin-c8fdbb46bd92-aarch64-linux,https://github.com/bitcoin/bitcoin/pull/20594#issuecomment-742962196,742962196,
DrahtBot,2020-12-12 03:07:25,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 736eb4d8083862a6c3dd79e65afca6217cf7939d<br>(master) | commit 1dca7741d66d8e342154698ad3baa3cd89852e23<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`2be2a11a222f573c...`](https://drahtbot.space/gitian/bitcoin/bitcoin/736eb4d8083862a6c3dd79e65afca6217cf7939d/bitcoin-736eb4d80838-aarch64-l,https://github.com/bitcoin/bitcoin/pull/20594#issuecomment-743691528,743691528,
laanwj,2020-12-14 19:58:14,"I think this fix is fine. Removing the weak check completely is something that could be considered, but might interfere with Android. It doesn't need to be decided in this PR.",https://github.com/bitcoin/bitcoin/pull/20594#issuecomment-744674925,744674925,
luke-jr,2020-12-14 04:12:24,"```suggestion\n [\n     AC_MSG_RESULT(yes)\n     HAVE_STRONG_GETAUXVAL=1\n     AC_DEFINE(HAVE_STRONG_GETAUXVAL, 1, [Define this symbol to build code that uses getauxval)])\n   ],\n```",https://github.com/bitcoin/bitcoin/pull/20594#discussion_r542099511,542099511,configure.ac
luke-jr,2020-12-14 04:12:59,"```suggestion\n [\n   AC_MSG_RESULT(yes)\n   HAVE_WEAK_GETAUXVAL=1\n   AC_DEFINE(HAVE_WEAK_GETAUXVAL, 1, [Define this symbol to build code that uses getauxval (weak linking)])\n ],\n```",https://github.com/bitcoin/bitcoin/pull/20594#discussion_r542099690,542099690,configure.ac
luke-jr,2020-12-14 04:14:36,This seems very fragile. On what target is getauxval *only* weak?,https://github.com/bitcoin/bitcoin/pull/20594#discussion_r542100170,542100170,configure.ac
jonasschnelli,2020-12-14 07:33:19,"Why would it be (more) fragile? Weak linking is already pretty fragile AFAIK.\nIMO this weak linking passes always. See masters [Win64 build](https://bitcoinbuilds.org/index.php?ansilog=0c93cb58-e6da-4394-b703-6399079e7bef.log#l593) as an example.\n\nAFAIK this check is part of googles crc32c suite.\nLimiting it to linux makes absolute sense to me since `getauxval` (it doesn't exists on Mac/wi",https://github.com/bitcoin/bitcoin/pull/20594#discussion_r542166308,542166308,configure.ac
luke-jr,2020-12-14 15:33:22,"Sorry, I do mean the weak linking entirely. What do we lose, if we *only* check for strong linking?",https://github.com/bitcoin/bitcoin/pull/20594#discussion_r542477962,542477962,configure.ac
jonasschnelli,2020-12-14 17:14:32,"That's a valid question.\nAFAIK the google crc32c `getauxval` weak linking check is for android (< API level 20).\nCrc32c is an upstream upstream subtree. I guess if we don't want to check for the weak linking, we might want to PR that there.",https://github.com/bitcoin/bitcoin/pull/20594#discussion_r542558112,542558112,configure.ac
luke-jr,2020-12-14 17:44:21,"I assume if we just don't define it, that code block simply won't be used?",https://github.com/bitcoin/bitcoin/pull/20594#discussion_r542579825,542579825,configure.ac
laanwj,2020-12-14 19:55:32,"> This seems very fragile. On what target is getauxval only weak?\n\na) getauxval only exists on Linux (OSes with the Linux kernel, I mean)\nb) by nature of weak linking, it *could* weakly link on every platform, this makes no sense though\n",https://github.com/bitcoin/bitcoin/pull/20594#discussion_r542711463,542711463,configure.ac
