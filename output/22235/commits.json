[
  {
    "sha": "e7b89a3037ad32cdea17e48b57808c55fc33c5e6",
    "node_id": "C_kwDOABII59oAKGU3Yjg5YTMwMzdhZDMyY2RlYTE3ZTQ4YjU3ODA4YzU1ZmMzM2M1ZTY",
    "commit": {
      "author": {
        "name": "Josiah Baker",
        "email": "josibake@protonmail.com",
        "date": "2021-06-13T18:13:20Z"
      },
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2021-10-19T09:07:10Z"
      },
      "message": "add script to generate example bitcoin.conf\n\nthis ensures bitcoind option help is the source of truth, but also\ngives an example conf file for users to customize and copy to their\ndata directory. this file is generated during make install\n\nincludes changes to init.cpp to indicate -conf can only be used\nfrom the command line.\n\nupdates the configure and make scripts to have this run during\nmake install.\n\nadds a note to bitcoin-conf.md to document the script.\n\nremoves the existing out-of-date example file so going\nforward, any documentation on how to use options should be\nadded to init.cpp\n\ncloses #10746",
      "tree": {
        "sha": "fa5653d383306b24c27cc1892cfe102c449eedd3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fa5653d383306b24c27cc1892cfe102c449eedd3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e7b89a3037ad32cdea17e48b57808c55fc33c5e6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmFuiugACgkQity1WMTz\nPWVabRAAtelJNXXNpLc6t0BCyIKEy24pc4vL/KBOGmXZPih+OAS8hoolQreOToSZ\nk3GXiz2kszBxZB04pwBz/DQSgRY5JCwrPw9GM74fYpQwh53XRbX1dBzbCTkUziEy\n8qI/BDc4L9Xv0fBMMvzoyUB+xG+GdMAKqAXOmPsDO1+9tdkmV5dC9Yh+H1aUxkPS\nFWkTscf/Bj4wjjnPYQE4cE4d5b6yOijk189t8IchkayLXdvjihdOy4ofAUwPGZcu\nIw0F/ZGMm+JJdkypRlvZMZ8cqHxsrnfWYzLyEosVZmYylQBj5eHWXvgSntPpLn7q\nCS+zuaYJPaiGwIqsdHgr8qEzHVOoUaDGDRXACT6vcgwfbgywmS6wcJ+VJUa8SP1I\nHXPeUd+8kqX2x2UcyxceFC57MkiKFzamHQe1gOAYMs263Nfl7z8U/+TmQFkhoPP+\nmsW1lXlrXLDislJZgktc3zNnu0SlTU/aLK6vaLGawU7MbBHbVQ2YNQMd/kFw6zse\nGSebN+tdjk/EcL9hvIFNZhxG6ehV+dh+mcrrccdb/h0mTCHKkAEdjc//Z+9LKnT5\n4HAp6ukadQsh+juCfdfHuvrOMRyW7GZJBjPU0X6R9bn5luzUy4j8NgaadW9zWK9F\nQISEWV8iMES2fgmvks2yE7JoA3FnvjH+HC2iL5W7jhFcs1lxA4o=\n=mB6f\n-----END PGP SIGNATURE-----",
        "payload": "tree fa5653d383306b24c27cc1892cfe102c449eedd3\nparent 4b24f6bbb51a40e77fcc7f1010eb14187567bc9a\nauthor Josiah Baker <josibake@protonmail.com> 1623608000 +0200\ncommitter josibake <josibake@protonmail.com> 1634634430 +0200\n\nadd script to generate example bitcoin.conf\n\nthis ensures bitcoind option help is the source of truth, but also\ngives an example conf file for users to customize and copy to their\ndata directory. this file is generated during make install\n\nincludes changes to init.cpp to indicate -conf can only be used\nfrom the command line.\n\nupdates the configure and make scripts to have this run during\nmake install.\n\nadds a note to bitcoin-conf.md to document the script.\n\nremoves the existing out-of-date example file so going\nforward, any documentation on how to use options should be\nadded to init.cpp\n\ncloses #10746\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7b89a3037ad32cdea17e48b57808c55fc33c5e6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e7b89a3037ad32cdea17e48b57808c55fc33c5e6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7b89a3037ad32cdea17e48b57808c55fc33c5e6/comments",
    "author": {
      "login": "josibake",
      "id": 7444140,
      "node_id": "MDQ6VXNlcjc0NDQxNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josibake",
      "html_url": "https://github.com/josibake",
      "followers_url": "https://api.github.com/users/josibake/followers",
      "following_url": "https://api.github.com/users/josibake/following{/other_user}",
      "gists_url": "https://api.github.com/users/josibake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josibake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
      "organizations_url": "https://api.github.com/users/josibake/orgs",
      "repos_url": "https://api.github.com/users/josibake/repos",
      "events_url": "https://api.github.com/users/josibake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josibake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "josibake",
      "id": 7444140,
      "node_id": "MDQ6VXNlcjc0NDQxNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josibake",
      "html_url": "https://github.com/josibake",
      "followers_url": "https://api.github.com/users/josibake/followers",
      "following_url": "https://api.github.com/users/josibake/following{/other_user}",
      "gists_url": "https://api.github.com/users/josibake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josibake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
      "organizations_url": "https://api.github.com/users/josibake/orgs",
      "repos_url": "https://api.github.com/users/josibake/repos",
      "events_url": "https://api.github.com/users/josibake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josibake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4b24f6bbb51a40e77fcc7f1010eb14187567bc9a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b24f6bbb51a40e77fcc7f1010eb14187567bc9a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4b24f6bbb51a40e77fcc7f1010eb14187567bc9a"
      }
    ],
    "stats": {
      "total": 261,
      "additions": 69,
      "deletions": 192
    },
    "files": [
      {
        "sha": "b8281ffa16ccd19c7c4690b8440433c467fef9fb",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7b89a3037ad32cdea17e48b57808c55fc33c5e6/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7b89a3037ad32cdea17e48b57808c55fc33c5e6/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=e7b89a3037ad32cdea17e48b57808c55fc33c5e6",
        "patch": "@@ -89,6 +89,9 @@ src/qt/bitcoin-qt.includes\n *.lo\n *.la\n \n+# Generated by build\n+share/examples/bitcoin.conf\n+\n # Compilation and Qt preprocessor part\n *.qm\n Makefile"
      },
      {
        "sha": "0379074626827c602e62c6d92ede528be6d580b9",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7b89a3037ad32cdea17e48b57808c55fc33c5e6/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7b89a3037ad32cdea17e48b57808c55fc33c5e6/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=e7b89a3037ad32cdea17e48b57808c55fc33c5e6",
        "patch": "@@ -377,3 +377,10 @@ if TARGET_LINUX\n \t$(AM_V_at) CC='$(CC)' CFLAGS='$(CFLAGS)' CPPFLAGS='$(CPPFLAGS)' LDFLAGS='$(LDFLAGS)' $(PYTHON) $(top_srcdir)/contrib/devtools/test-security-check.py TestSecurityChecks.test_ELF\n \t$(AM_V_at) CC='$(CC)' CFLAGS='$(CFLAGS)' CPPFLAGS='$(CPPFLAGS)' LDFLAGS='$(LDFLAGS)' $(PYTHON) $(top_srcdir)/contrib/devtools/test-symbol-check.py TestSymbolChecks.test_ELF\n endif\n+\n+share/examples/bitcoin.conf:\n+\t$(MKDIR_P) $(@D)\n+\t$(AM_V_at) touch $@\n+\n+install-exec-local: share/examples/bitcoin.conf\n+\t$(top_srcdir)/contrib/generate-example-bitcoin-conf.sh"
      },
      {
        "sha": "5fee257397168eb97fb4d76da780e99c094e6c09",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7b89a3037ad32cdea17e48b57808c55fc33c5e6/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7b89a3037ad32cdea17e48b57808c55fc33c5e6/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=e7b89a3037ad32cdea17e48b57808c55fc33c5e6",
        "patch": "@@ -1884,6 +1884,7 @@ AC_CONFIG_LINKS([contrib/devtools/symbol-check.py:contrib/devtools/symbol-check.\n AC_CONFIG_LINKS([contrib/devtools/test-security-check.py:contrib/devtools/test-security-check.py])\n AC_CONFIG_LINKS([contrib/devtools/test-symbol-check.py:contrib/devtools/test-symbol-check.py])\n AC_CONFIG_LINKS([contrib/filter-lcov.py:contrib/filter-lcov.py])\n+AC_CONFIG_LINKS([contrib/generate-example-bitcoin-conf.sh:contrib/generate-example-bitcoin-conf.sh])\n AC_CONFIG_LINKS([test/functional/test_runner.py:test/functional/test_runner.py])\n AC_CONFIG_LINKS([test/fuzz/test_runner.py:test/fuzz/test_runner.py])\n AC_CONFIG_LINKS([test/util/test_runner.py:test/util/test_runner.py])"
      },
      {
        "sha": "9b504a0034bc1c775210693e8eb5d743e69e15e2",
        "filename": "contrib/generate-example-bitcoin-conf.sh",
        "status": "added",
        "additions": 57,
        "deletions": 0,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7b89a3037ad32cdea17e48b57808c55fc33c5e6/contrib/generate-example-bitcoin-conf.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7b89a3037ad32cdea17e48b57808c55fc33c5e6/contrib/generate-example-bitcoin-conf.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/generate-example-bitcoin-conf.sh?ref=e7b89a3037ad32cdea17e48b57808c55fc33c5e6",
        "patch": "@@ -0,0 +1,57 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+\n+# script for generating an example bitcoin.conf file from bitcoind -h\n+export LC_ALL=C\n+\n+EXAMPLE_CONF_FILE=${1:-share/examples/bitcoin.conf}\n+\n+echo 'Generating example bitcoin.conf file in share/examples/'\n+\n+# create the header text\n+cat > ${EXAMPLE_CONF_FILE} << 'EOF'\n+##\n+## bitcoin.conf configuration file. Lines beginning with # are comments.\n+## All possible configuration options are provided. To use, copy this file\n+## to your data directory (default or specified by -datadir), uncomment and\n+## edit options you would like to change, and save the file.\n+##\n+\n+\n+### Options\n+EOF\n+\n+# parse the output from bitcoind --help\n+src/bitcoind --help | sed '1,/Print this help message and exit/d' \\\n+\t| sed -E 's/^[[:space:]]{2}\\-/#/' \\\n+\t| sed -E 's/^[[:space:]]{7}/# /' \\\n+\t| sed -E '/[=[:space:]]/!s/#.*$/&=1/' \\\n+\t| awk '/^#[a-z]/{x=$0;next}{if (NF==0) print x\"\\n\",x=\"\";else print}' \\\n+\t| sed 's,\\(^[[:upper:]].*\\)\\:$,\\n### \\1,' >> ${EXAMPLE_CONF_FILE}\n+\n+# create the footer text\n+cat >> ${EXAMPLE_CONF_FILE} << 'EOF'\n+\n+# [Sections]\n+# Most options will apply to all networks. To confine an option to a specific\n+# network, add it under the relevant section below.\n+#\n+# Note: If not specified under a network section, the options addnode, connect,\n+# port, bind, rpcport, rpcbind, and wallet will only apply to mainnet.\n+\n+# Options for mainnet\n+[main]\n+\n+# Options for testnet\n+[test]\n+\n+# Options for signet\n+[signet]\n+\n+# Options for regtest\n+[regtest]\n+EOF"
      },
      {
        "sha": "c5b79709c71f0c506d627274e445f021293ba0fe",
        "filename": "share/examples/bitcoin.conf",
        "status": "removed",
        "additions": 0,
        "deletions": 191,
        "changes": 191,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b24f6bbb51a40e77fcc7f1010eb14187567bc9a/share/examples/bitcoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b24f6bbb51a40e77fcc7f1010eb14187567bc9a/share/examples/bitcoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/examples/bitcoin.conf?ref=4b24f6bbb51a40e77fcc7f1010eb14187567bc9a",
        "patch": "@@ -1,191 +0,0 @@\n-##\n-## bitcoin.conf configuration file. Lines beginning with # are comments.\n-##\n-\n-# Network-related settings:\n-\n-# Note that if you use testnet, signet or regtest, particularly with the options\n-# addnode, connect, port, bind, rpcport, rpcbind or wallet, you will also\n-# want to read \"[Sections]\" further down.\n-\n-# Run on the testnet network\n-#testnet=0\n-\n-# Run on a signet network\n-#signet=0\n-\n-# Run a regression test network\n-#regtest=0\n-\n-# Connect via a SOCKS5 proxy\n-#proxy=127.0.0.1:9050\n-\n-# Bind to given address and always listen on it. Use [host]:port notation for IPv6\n-#bind=<addr>\n-\n-# Bind to given address and add permission flags to peers connecting to it. Use [host]:port notation for IPv6\n-#whitebind=perm@<addr>\n-\n-##############################################################\n-##            Quick Primer on addnode vs connect            ##\n-##  Let's say for instance you use addnode=4.2.2.4          ##\n-##  addnode will connect you to and tell you about the      ##\n-##    nodes connected to 4.2.2.4.  In addition it will tell ##\n-##    the other nodes connected to it that you exist so     ##\n-##    they can connect to you.                              ##\n-##  connect will not do the above when you 'connect' to it. ##\n-##    It will *only* connect you to 4.2.2.4 and no one else.##\n-##                                                          ##\n-##  So if you're behind a firewall, or have other problems  ##\n-##  finding nodes, add some using 'addnode'.                ##\n-##                                                          ##\n-##  If you want to stay private, use 'connect' to only      ##\n-##  connect to \"trusted\" nodes.                             ##\n-##                                                          ##\n-##  If you run multiple nodes on a LAN, there's no need for ##\n-##  all of them to open lots of connections.  Instead       ##\n-##  'connect' them all to one node that is port forwarded   ##\n-##  and has lots of connections.                            ##\n-##       Thanks goes to [Noodle] on Freenode.               ##\n-##############################################################\n-\n-# Use as many addnode= settings as you like to connect to specific peers\n-#addnode=69.164.218.197\n-#addnode=10.0.0.2:8333\n-\n-# Alternatively use as many connect= settings as you like to connect ONLY to specific peers\n-#connect=69.164.218.197\n-#connect=10.0.0.1:8333\n-\n-# Listening mode, enabled by default except when 'connect' is being used\n-#listen=1\n-\n-# Port on which to listen for connections (default: 8333, testnet: 18333, signet: 38333, regtest: 18444)\n-#port=\n-\n-# Maximum number of inbound + outbound connections (default: 125). This option\n-# applies only if inbound connections are enabled; otherwise, the number of connections\n-# will not be more than 11: 8 full-relay connections, 2 block-relay-only ones, and\n-# occasionally 1 short-lived feeler or extra outbound block-relay-only connection.\n-# These limits do not apply to connections added manually with the -addnode\n-# configuration option or the addnode RPC, which have a separate limit of 8 connections.\n-#maxconnections=\n-\n-# Maximum upload bandwidth target in MiB per day (e.g. 'maxuploadtarget=1024' is 1 GiB per day).\n-# This limits the upload bandwidth for those with bandwidth limits. 0 = no limit (default: 0).\n-# -maxuploadtarget does not apply to peers with 'download' permission.\n-# For more information on reducing bandwidth utilization, see: doc/reduce-traffic.md.\n-#maxuploadtarget=\n-\n-#\n-# JSON-RPC options (for controlling a running Bitcoin/bitcoind process)\n-#\n-\n-# server=1 tells Bitcoin-Qt and bitcoind to accept JSON-RPC commands\n-#server=0\n-\n-# Bind to given address to listen for JSON-RPC connections.\n-# Refer to the manpage or bitcoind -help for further details.\n-#rpcbind=<addr>\n-\n-# If no rpcpassword is set, rpc cookie auth is sought. The default `-rpccookiefile` name\n-# is .cookie and found in the `-datadir` being used for bitcoind. This option is typically used\n-# when the server and client are run as the same user.\n-#\n-# If not, you must set rpcuser and rpcpassword to secure the JSON-RPC API.\n-#\n-# The config option `rpcauth` can be added to server startup argument. It is set at initialization time\n-# using the output from the script in share/rpcauth/rpcauth.py after providing a username:\n-#\n-# ./share/rpcauth/rpcauth.py alice\n-# String to be appended to bitcoin.conf:\n-# rpcauth=alice:f7efda5c189b999524f151318c0c86$d5b51b3beffbc02b724e5d095828e0bc8b2456e9ac8757ae3211a5d9b16a22ae\n-# Your password:\n-# DONT_USE_THIS_YOU_WILL_GET_ROBBED_8ak1gI25KFTvjovL3gAM967mies3E=\n-#\n-# On client-side, you add the normal user/password pair to send commands:\n-#rpcuser=alice\n-#rpcpassword=DONT_USE_THIS_YOU_WILL_GET_ROBBED_8ak1gI25KFTvjovL3gAM967mies3E=\n-#\n-# You can even add multiple entries of these to the server conf file, and client can use any of them:\n-# rpcauth=bob:b2dd077cb54591a2f3139e69a897ac$4e71f08d48b4347cf8eff3815c0e25ae2e9a4340474079f55705f40574f4ec99\n-\n-# How many seconds bitcoin will wait for a complete RPC HTTP request.\n-# after the HTTP connection is established.\n-#rpcclienttimeout=30\n-\n-# By default, only RPC connections from localhost are allowed.\n-# Specify as many rpcallowip= settings as you like to allow connections from other hosts,\n-# either as a single IPv4/IPv6 or with a subnet specification.\n-\n-# NOTE: opening up the RPC port to hosts outside your local trusted network is NOT RECOMMENDED,\n-# because the rpcpassword is transmitted over the network unencrypted.\n-\n-# server=1 tells Bitcoin-Qt to accept JSON-RPC commands.\n-# it is also read by bitcoind to determine if RPC should be enabled\n-#rpcallowip=10.1.1.34/255.255.255.0\n-#rpcallowip=1.2.3.4/24\n-#rpcallowip=2001:db8:85a3:0:0:8a2e:370:7334/96\n-\n-# Listen for RPC connections on this TCP port:\n-#rpcport=8332\n-\n-# You can use Bitcoin or bitcoind to send commands to Bitcoin/bitcoind\n-# running on another host using this option:\n-#rpcconnect=127.0.0.1\n-\n-# Wallet options\n-\n-# Specify where to find wallet, lockfile and logs. If not present, those files will be\n-# created as new.\n-#wallet=</path/to/dir>\n-\n-# Create transactions that have enough fees so they are likely to begin confirmation within n blocks (default: 6).\n-# This setting is over-ridden by the -paytxfee option.\n-#txconfirmtarget=n\n-\n-# Pay a transaction fee every time you send bitcoins.\n-#paytxfee=0.000x\n-\n-# Miscellaneous options\n-\n-# Pre-generate this many public/private key pairs, so wallet backups will be valid for\n-# both prior transactions and several dozen future transactions.\n-#keypool=100\n-\n-# Maintain coinstats index used by the gettxoutsetinfo RPC (default: 0).\n-#coinstatsindex=1\n-\n-# Enable pruning to reduce storage requirements by deleting old blocks.\n-# This mode is incompatible with -txindex and -coinstatsindex.\n-# 0 = default (no pruning).\n-# 1 = allows manual pruning via RPC.\n-# >=550 = target to stay under in MiB.\n-#prune=550\n-\n-# User interface options\n-\n-# Start Bitcoin minimized\n-#min=1\n-\n-# Minimize to the system tray\n-#minimizetotray=1\n-\n-# [Sections]\n-# Most options apply to mainnet, testnet, signet and regtest.\n-# If you want to confine an option to just one network, you should add it in the\n-# relevant section below.\n-# EXCEPTIONS: The options addnode, connect, port, bind, rpcport, rpcbind and wallet\n-# only apply to mainnet unless they appear in the appropriate section below.\n-\n-# Options only for mainnet\n-[main]\n-\n-# Options only for testnet\n-[test]\n-\n-# Options only for signet\n-[signet]\n-\n-# Options only for regtest\n-[regtest]"
      },
      {
        "sha": "da4873046b053f5fd24086a61c6f0061a7e1edfe",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7b89a3037ad32cdea17e48b57808c55fc33c5e6/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7b89a3037ad32cdea17e48b57808c55fc33c5e6/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=e7b89a3037ad32cdea17e48b57808c55fc33c5e6",
        "patch": "@@ -384,7 +384,7 @@ void SetupServerArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-blockreconstructionextratxn=<n>\", strprintf(\"Extra transactions to keep in memory for compact block reconstructions (default: %u)\", DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-blocksonly\", strprintf(\"Whether to reject transactions from network peers. Automatic broadcast and rebroadcast of any transactions from inbound peers is disabled, unless the peer has the 'forcerelay' permission. RPC transactions are not affected. (default: %u)\", DEFAULT_BLOCKSONLY), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-coinstatsindex\", strprintf(\"Maintain coinstats index used by the gettxoutsetinfo RPC (default: %u)\", DEFAULT_COINSTATSINDEX), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n-    argsman.AddArg(\"-conf=<file>\", strprintf(\"Specify path to read-only configuration file. Relative paths will be prefixed by datadir location. (default: %s)\", BITCOIN_CONF_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-conf=<file>\", strprintf(\"Specify path to read-only configuration file. Relative paths will be prefixed by datadir location (only useable from command line, not configuration file). (default: %s)\", BITCOIN_CONF_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-datadir=<dir>\", \"Specify data directory\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-dbbatchsize\", strprintf(\"Maximum database write batch size in bytes (default: %u)\", nDefaultDbBatchSize), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-dbcache=<n>\", strprintf(\"Maximum database cache size <n> MiB (%d to %d, default: %d). In addition, unused mempool memory is shared for this cache (see -maxmempool).\", nMinDbCache, nMaxDbCache, nDefaultDbCache), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);"
      }
    ]
  },
  {
    "sha": "b915efffa1d77497e1056cddd945632f414d3cad",
    "node_id": "C_kwDOABII59oAKGI5MTVlZmZmYTFkNzc0OTdlMTA1NmNkZGQ5NDU2MzJmNDE0ZDNjYWQ",
    "commit": {
      "author": {
        "name": "Josiah Baker",
        "email": "josibake@protonmail.com",
        "date": "2021-06-17T14:36:08Z"
      },
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2021-10-19T09:07:52Z"
      },
      "message": "update bitcoin-conf.md\n\ninclude instructions on how to run the script",
      "tree": {
        "sha": "730f39d8679e21714d666b1f46dce47410c4d668",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/730f39d8679e21714d666b1f46dce47410c4d668"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b915efffa1d77497e1056cddd945632f414d3cad",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmFuiugACgkQity1WMTz\nPWUdJg//aGawxQKqUsm91g/F5NpIkBd8PDL5z+RyY7zJw6HAd1J39NFU+2Qkyq2e\nrmFZJ3MsdBmR32rP5l9/gAB+JpzAgRofwkdCStDaIbVe4+e6AbJaK/GYL1tINbD9\nuSf0ICYIjZacG2DC8c3BdLaW0z+5BybFIWyYj/rkI+DP1gJCe6Tp6GjAwiG2h9RW\n8F7EMweodggBrXumFZESVf5Smx9tAUb3FKuw1ZDECp/RO5hgyrME7z5gw8jcRDka\nWf8/W9ImY96JLeQDFaauv8jFj8pZZD4Cp+pjh8m6/rKov9n3I+r30GWFbLM4H7OA\nNb8kAtI1SQpJAiEEaYGZJtboYAyjw9CbZawlHqf7ifUzohdN0d+K5B/AjS1JuU4N\nmb+NotlS2wMCWGAYHiWwUctchHj6W2vMRPntJdgDcc8Sl8kpkr7isus/w5RYckV5\nUUN7mEGPISHhpKFWGRTSJmLXGkmckhC24ruv7xRG1EidoFHl5z1HxUraKq+4P1J1\nMZXKRSh+rIdjCZJiPQr2uczFw9hQ4fyWPLjwWpXrrxEZZ/IcyxkgcNz4TDk7hRW4\n0ui1GJZ2H9VN3f1i7G81T4RNBBdgz5DC+6NdNRaNCKluLcRWLaifiimSbRCwvpJY\n7HXZAmDME/S5yXKGIFwZ6F2V3NnBu6WVnZawOQyhZ0LHIcnIbMY=\n=w6vJ\n-----END PGP SIGNATURE-----",
        "payload": "tree 730f39d8679e21714d666b1f46dce47410c4d668\nparent e7b89a3037ad32cdea17e48b57808c55fc33c5e6\nauthor Josiah Baker <josibake@protonmail.com> 1623940568 +0200\ncommitter josibake <josibake@protonmail.com> 1634634472 +0200\n\nupdate bitcoin-conf.md\n\ninclude instructions on how to run the script\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b915efffa1d77497e1056cddd945632f414d3cad",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b915efffa1d77497e1056cddd945632f414d3cad",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b915efffa1d77497e1056cddd945632f414d3cad/comments",
    "author": {
      "login": "josibake",
      "id": 7444140,
      "node_id": "MDQ6VXNlcjc0NDQxNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josibake",
      "html_url": "https://github.com/josibake",
      "followers_url": "https://api.github.com/users/josibake/followers",
      "following_url": "https://api.github.com/users/josibake/following{/other_user}",
      "gists_url": "https://api.github.com/users/josibake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josibake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
      "organizations_url": "https://api.github.com/users/josibake/orgs",
      "repos_url": "https://api.github.com/users/josibake/repos",
      "events_url": "https://api.github.com/users/josibake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josibake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "josibake",
      "id": 7444140,
      "node_id": "MDQ6VXNlcjc0NDQxNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josibake",
      "html_url": "https://github.com/josibake",
      "followers_url": "https://api.github.com/users/josibake/followers",
      "following_url": "https://api.github.com/users/josibake/following{/other_user}",
      "gists_url": "https://api.github.com/users/josibake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josibake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
      "organizations_url": "https://api.github.com/users/josibake/orgs",
      "repos_url": "https://api.github.com/users/josibake/repos",
      "events_url": "https://api.github.com/users/josibake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josibake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e7b89a3037ad32cdea17e48b57808c55fc33c5e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7b89a3037ad32cdea17e48b57808c55fc33c5e6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e7b89a3037ad32cdea17e48b57808c55fc33c5e6"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 9,
      "deletions": 1
    },
    "files": [
      {
        "sha": "0b2bc9117140650040b0985bb415d74e78ab8368",
        "filename": "doc/bitcoin-conf.md",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b915efffa1d77497e1056cddd945632f414d3cad/doc/bitcoin-conf.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b915efffa1d77497e1056cddd945632f414d3cad/doc/bitcoin-conf.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bitcoin-conf.md?ref=b915efffa1d77497e1056cddd945632f414d3cad",
        "patch": "@@ -61,4 +61,12 @@ Windows | `%APPDATA%\\Bitcoin\\` | `C:\\Users\\username\\AppData\\Roaming\\Bitcoin\\bitc\n Linux | `$HOME/.bitcoin/` | `/home/username/.bitcoin/bitcoin.conf`\n macOS | `$HOME/Library/Application Support/Bitcoin/` | `/Users/username/Library/Application Support/Bitcoin/bitcoin.conf`\n \n-You can find an example bitcoin.conf file in [share/examples/bitcoin.conf](../share/examples/bitcoin.conf).\n+An example configuration file can be generated by [contrib/generate-example-bitcoin-conf.sh](../contrib/generate-example-bitcoin-conf.sh).\n+You can run this script directly or have it automatically executed during `make install`.\n+The output is placed under `share/examples/bitcoin.conf`.\n+To use the generated configuration file, copy the example file into your data directory and edit it there, like so:\n+\n+```\n+# example copy command for linux user\n+cp share/examples/bitcoin.conf ~/.bitcoin\n+```"
      }
    ]
  }
]