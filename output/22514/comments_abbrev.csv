MarcoFalke,2021-07-21 06:18:53,Is this for backport?,https://github.com/bitcoin/bitcoin/pull/22514#issuecomment-883923664,883923664,
DrahtBot,2021-07-21 10:26:31,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23602](https://github.com/bitcoin/bitcoin/pull/23602) (wallet: Split stuff from rpcwallet by MarcoFalke)\n* [#23578](htt",https://github.com/bitcoin/bitcoin/pull/22514#issuecomment-884078711,884078711,
achow101,2021-07-21 16:37:31,"> Is this for backport?\n\nThere is no explicit PSBT support for Taproot yet, so I don't think so. Although we do still sign PSBTs that have Taproot inputs, but only if we make those inputs final.",https://github.com/bitcoin/bitcoin/pull/22514#issuecomment-884330126,884330126,
GeneFerneau,2021-08-05 17:28:28,Concept + code review ACK [96f78e](https://github.com/bitcoin/bitcoin/pull/22514/commits/96f78ed1fdd9c5de2fa5ff125f79b37bd75af9c1),https://github.com/bitcoin/bitcoin/pull/22514#issuecomment-893649344,893649344,
achow101,2021-11-12 22:36:34,"Apparently without this, we may end up creating final transactions with a lower feerate than expected.",https://github.com/bitcoin/bitcoin/pull/22514#issuecomment-967705694,967705694,
Sjors,2021-11-19 15:08:10,"Mmm, the help text was changed from defaulting to `ALL` to `SIGHASH_DEFAULT` in https://github.com/bitcoin/bitcoin/commit/458a345b0590fd2fa04c7d8d70beb8d57e34bbc8, but that change also made sure for non-taproot it's interpreted as `ALL`.\n\nLet's make the help text say `RPCArg::Default{""DEFAULT for Taproot, ALL otherwise""}` and behave accordingly.\n\nThe first commit 62621db looks good to me.",https://github.com/bitcoin/bitcoin/pull/22514#issuecomment-974151567,974151567,
achow101,2021-11-19 18:14:08,"> Let's make the help text say `RPCArg::Default{""DEFAULT for Taproot, ALL otherwise""}` and behave accordingly.\n\nAdded a commit for that.",https://github.com/bitcoin/bitcoin/pull/22514#issuecomment-974297682,974297682,
Sjors,2021-11-22 17:00:19,"utACK 322d117f6f39d8534b4ea77cd46fbe0635a7b3c5\n\nMaybe swap the last two commits for clarity (or add ""for taproot"" to ff1ec7b)",https://github.com/bitcoin/bitcoin/pull/22514#issuecomment-975730699,975730699,
sipa,2021-11-22 17:05:33,utACK 322d117f6f39d8534b4ea77cd46fbe0635a7b3c5,https://github.com/bitcoin/bitcoin/pull/22514#issuecomment-975735901,975735901,
DrahtBot,2021-11-29 16:46:09,"<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/22514#issuecomment-981815207,981815207,
theStack,2021-11-12 12:29:29,"Maybe I'm missing something obvious, but any reason why we use magic numbers with comments here (and also for the interface in `src/wallet/scriptpubkeyman.h`), rather than the enum directly?\n```suggestion\n                  int sighash_type = SIGHASH_DEFAULT,\n```",https://github.com/bitcoin/bitcoin/pull/22514#discussion_r748246806,748246806,src/wallet/wallet.h
achow101,2021-11-12 17:05:16,There was a time a while ago where that didn't work and this code has just been moved around to various places without changing. I've changed it to use `SIGHASH_DEFAULT` directly.,https://github.com/bitcoin/bitcoin/pull/22514#discussion_r748448908,748448908,src/wallet/wallet.h
sipa,2021-11-15 15:41:43,"Is this right? I think we should distinguish based on whether the PSBT having having a PSBT_IN_SIGHASH_TYPE record and not. I think the current code treats there not being a record, and the record being 0 as identical?",https://github.com/bitcoin/bitcoin/pull/22514#discussion_r749445449,749445449,src/wallet/scriptpubkeyman.cpp
achow101,2021-11-15 19:06:04,"Hmm, yes. I've changed `input.sighash_type` to be an optional. The issue this particular change fixed was test related, so I've updated the tests instead.",https://github.com/bitcoin/bitcoin/pull/22514#discussion_r749605036,749605036,src/wallet/scriptpubkeyman.cpp
sipa,2021-11-22 17:02:33,"In commit ""psbt: Make signhash_type std::optional<int>""\n\nNit: I think the ideomatic way of writing this would be `if (sighash_type.has_value())` or just `if (sighash_type)` (here and further).",https://github.com/bitcoin/bitcoin/pull/22514#discussion_r754472684,754472684,src/psbt.h
sipa,2021-11-22 17:04:58,"In commit ""psbt: Actually use SIGHASH_DEFAULT""\n\nWhat is this change for?",https://github.com/bitcoin/bitcoin/pull/22514#discussion_r754474555,754474555,test/functional/rpc_psbt.py
achow101,2021-11-22 17:08:35,"At least one of the tests sets the sighash type in the PSBT. However when we sign, if the sighash type given in the RPC does not match the sighash type in the PSBT, we fail to sign. So this change is to make sure that we do sign those PSBTs.",https://github.com/bitcoin/bitcoin/pull/22514#discussion_r754477334,754477334,test/functional/rpc_psbt.py
