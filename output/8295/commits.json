[
  {
    "sha": "f15c2cde455174c7c899833fd5792460ed49a472",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMTVjMmNkZTQ1NTE3NGM3Yzg5OTgzM2ZkNTc5MjQ2MGVkNDlhNDcy",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2016-06-27T14:58:58Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2016-06-27T14:58:58Z"
      },
      "message": "CreateNewBlock: add support for size-accounting to addPackageTxs\n\nIncludes a change to not continue to use size-accounting in addScoreTxs\nor addPackageTxs just because addPriorityTxs() is used.",
      "tree": {
        "sha": "3e47de82db62ba2b0158efd0ec10b1318ad59463",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3e47de82db62ba2b0158efd0ec10b1318ad59463"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f15c2cde455174c7c899833fd5792460ed49a472",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f15c2cde455174c7c899833fd5792460ed49a472",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f15c2cde455174c7c899833fd5792460ed49a472",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f15c2cde455174c7c899833fd5792460ed49a472/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1922e5a6545835ac57e8a56aa4c4a251c07fe9e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1922e5a6545835ac57e8a56aa4c4a251c07fe9e9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1922e5a6545835ac57e8a56aa4c4a251c07fe9e9"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 16,
      "deletions": 11
    },
    "files": [
      {
        "sha": "a3e29431d75527037e2b7c8cc80197785b460789",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 10,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f15c2cde455174c7c899833fd5792460ed49a472/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f15c2cde455174c7c899833fd5792460ed49a472/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=f15c2cde455174c7c899833fd5792460ed49a472",
        "patch": "@@ -94,6 +94,7 @@ BlockAssembler::BlockAssembler(const CChainParams& _chainparams)\n             nBlockMaxCost = nBlockMaxSize * WITNESS_SCALE_FACTOR;\n         }\n     }\n+\n     // Limit cost to between 4K and MAX_BLOCK_COST-4K for sanity:\n     nBlockMaxCost = std::max((unsigned int)4000, std::min((unsigned int)(MAX_BLOCK_COST-4000), nBlockMaxCost));\n     // Limit size to between 1K and MAX_BLOCK_SERIALIZED_SIZE-1K for sanity:\n@@ -167,13 +168,7 @@ CBlockTemplate* BlockAssembler::CreateNewBlock(const CScript& scriptPubKeyIn)\n     fIncludeWitness = IsWitnessEnabled(pindexPrev, chainparams.GetConsensus());\n \n     addPriorityTxs();\n-    if (fNeedSizeAccounting) {\n-        // addPackageTxs (the CPFP-based algorithm) cannot deal with size based\n-        // accounting, so fall back to the old algorithm.\n-        addScoreTxs();\n-    } else {\n-        addPackageTxs();\n-    }\n+    addPackageTxs();\n \n     nLastBlockTx = nBlockTx;\n     nLastBlockSize = nBlockSize;\n@@ -243,11 +238,19 @@ bool BlockAssembler::TestPackage(uint64_t packageSize, int64_t packageSigOpsCost\n \n // Block size and sigops have already been tested.  Check that all transactions\n // are final.\n-bool BlockAssembler::TestPackageFinality(const CTxMemPool::setEntries& package)\n+bool BlockAssembler::TestPackageFinalityAndSerializedSize(const CTxMemPool::setEntries& package)\n {\n+    uint64_t nPotentialBlockSize = nBlockSize; // only used with fNeedSizeAccounting\n     BOOST_FOREACH (const CTxMemPool::txiter it, package) {\n         if (!IsFinalTx(it->GetTx(), nHeight, nLockTimeCutoff))\n             return false;\n+        if (fNeedSizeAccounting) {\n+            uint64_t nTxSize = ::GetSerializeSize(it->GetTx(), SER_NETWORK, PROTOCOL_VERSION);\n+            if (nPotentialBlockSize + nTxSize >= nBlockMaxSize) {\n+                return false;\n+            }\n+            nPotentialBlockSize += nTxSize;\n+        }\n     }\n     return true;\n }\n@@ -539,7 +542,7 @@ void BlockAssembler::addPackageTxs()\n         ancestors.insert(iter);\n \n         // Test if all tx's are Final\n-        if (!TestPackageFinality(ancestors)) {\n+        if (!TestPackageFinalityAndSerializedSize(ancestors)) {\n             if (fUsingModified) {\n                 mapModifiedTx.get<ancestor_score>().erase(modit);\n                 failedTx.insert(iter);\n@@ -573,6 +576,7 @@ void BlockAssembler::addPriorityTxs()\n         return;\n     }\n \n+    bool fSizeAccounting = fNeedSizeAccounting;\n     fNeedSizeAccounting = true;\n \n     // This vector will be sorted into a priority queue:\n@@ -624,7 +628,7 @@ void BlockAssembler::addPriorityTxs()\n             // If now that this txs is added we've surpassed our desired priority size\n             // or have dropped below the AllowFreeThreshold, then we're done adding priority txs\n             if (nBlockSize >= nBlockPrioritySize || !AllowFree(actualPriority)) {\n-                return;\n+                break;\n             }\n \n             // This tx was successfully added, so\n@@ -640,6 +644,7 @@ void BlockAssembler::addPriorityTxs()\n             }\n         }\n     }\n+    fNeedSizeAccounting = fSizeAccounting;\n }\n \n void IncrementExtraNonce(CBlock* pblock, const CBlockIndex* pindexPrev, unsigned int& nExtraNonce)"
      },
      {
        "sha": "bc4da63da074f737b82a6d409d1c2026b752d626",
        "filename": "src/miner.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f15c2cde455174c7c899833fd5792460ed49a472/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f15c2cde455174c7c899833fd5792460ed49a472/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=f15c2cde455174c7c899833fd5792460ed49a472",
        "patch": "@@ -193,7 +193,7 @@ class BlockAssembler\n     /** Test if a new package would \"fit\" in the block */\n     bool TestPackage(uint64_t packageSize, int64_t packageSigOpsCost);\n     /** Test if a set of transactions are all final */\n-    bool TestPackageFinality(const CTxMemPool::setEntries& package);\n+    bool TestPackageFinalityAndSerializedSize(const CTxMemPool::setEntries& package);\n     /** Return true if given transaction from mapTx has already been evaluated,\n       * or if the transaction's cached data in mapTx is incorrect. */\n     bool SkipMapTxEntry(CTxMemPool::txiter it, indexed_modified_transaction_set &mapModifiedTx, CTxMemPool::setEntries &failedTx);"
      }
    ]
  },
  {
    "sha": "6dd4bc289c71f622ac561f6f9651546b9ec4fa3e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZGQ0YmMyODljNzFmNjIyYWM1NjFmNmY5NjUxNTQ2YjllYzRmYTNl",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2016-06-30T15:22:31Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2016-06-30T15:24:32Z"
      },
      "message": "Exclude witness transactions in addPackageTxs() pre-segwit activation",
      "tree": {
        "sha": "52ba0383e80b30d7c0f1590f8f4d301929c64cf6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/52ba0383e80b30d7c0f1590f8f4d301929c64cf6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6dd4bc289c71f622ac561f6f9651546b9ec4fa3e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6dd4bc289c71f622ac561f6f9651546b9ec4fa3e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6dd4bc289c71f622ac561f6f9651546b9ec4fa3e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6dd4bc289c71f622ac561f6f9651546b9ec4fa3e/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f15c2cde455174c7c899833fd5792460ed49a472",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f15c2cde455174c7c899833fd5792460ed49a472",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f15c2cde455174c7c899833fd5792460ed49a472"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 14,
      "deletions": 6
    },
    "files": [
      {
        "sha": "f2ad1018b2bd0890fb9641a28cd5d45adaa8c2a5",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 4,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6dd4bc289c71f622ac561f6f9651546b9ec4fa3e/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6dd4bc289c71f622ac561f6f9651546b9ec4fa3e/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=6dd4bc289c71f622ac561f6f9651546b9ec4fa3e",
        "patch": "@@ -236,14 +236,19 @@ bool BlockAssembler::TestPackage(uint64_t packageSize, int64_t packageSigOpsCost\n     return true;\n }\n \n-// Block size and sigops have already been tested.  Check that all transactions\n-// are final.\n-bool BlockAssembler::TestPackageFinalityAndSerializedSize(const CTxMemPool::setEntries& package)\n+// Perform transaction-level checks before adding to block:\n+// - transaction finality (locktime)\n+// - premature witness (in case segwit transactions are added to mempool before\n+//   segwit activation)\n+// - serialized size (in case -blockmaxsize is in use)\n+bool BlockAssembler::TestPackageTransactions(const CTxMemPool::setEntries& package)\n {\n     uint64_t nPotentialBlockSize = nBlockSize; // only used with fNeedSizeAccounting\n     BOOST_FOREACH (const CTxMemPool::txiter it, package) {\n         if (!IsFinalTx(it->GetTx(), nHeight, nLockTimeCutoff))\n             return false;\n+        if (!fIncludeWitness && !it->GetTx().wit.IsNull())\n+            return false;\n         if (fNeedSizeAccounting) {\n             uint64_t nTxSize = ::GetSerializeSize(it->GetTx(), SER_NETWORK, PROTOCOL_VERSION);\n             if (nPotentialBlockSize + nTxSize >= nBlockMaxSize) {\n@@ -542,7 +547,7 @@ void BlockAssembler::addPackageTxs()\n         ancestors.insert(iter);\n \n         // Test if all tx's are Final\n-        if (!TestPackageFinalityAndSerializedSize(ancestors)) {\n+        if (!TestPackageTransactions(ancestors)) {\n             if (fUsingModified) {\n                 mapModifiedTx.get<ancestor_score>().erase(modit);\n                 failedTx.insert(iter);"
      },
      {
        "sha": "9fab55611e829cd8b63655421bcb4d7766d378b7",
        "filename": "src/miner.h",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6dd4bc289c71f622ac561f6f9651546b9ec4fa3e/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6dd4bc289c71f622ac561f6f9651546b9ec4fa3e/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=6dd4bc289c71f622ac561f6f9651546b9ec4fa3e",
        "patch": "@@ -192,8 +192,11 @@ class BlockAssembler\n     void onlyUnconfirmed(CTxMemPool::setEntries& testSet);\n     /** Test if a new package would \"fit\" in the block */\n     bool TestPackage(uint64_t packageSize, int64_t packageSigOpsCost);\n-    /** Test if a set of transactions are all final */\n-    bool TestPackageFinalityAndSerializedSize(const CTxMemPool::setEntries& package);\n+    /** Perform checks on each transaction in a package:\n+      * locktime, premature-witness, serialized size (if necessary)\n+      * These checks should always succeed, and they're here\n+      * only as an extra check in case of suboptimal node configuration */\n+    bool TestPackageTransactions(const CTxMemPool::setEntries& package);\n     /** Return true if given transaction from mapTx has already been evaluated,\n       * or if the transaction's cached data in mapTx is incorrect. */\n     bool SkipMapTxEntry(CTxMemPool::txiter it, indexed_modified_transaction_set &mapModifiedTx, CTxMemPool::setEntries &failedTx);"
      }
    ]
  },
  {
    "sha": "d2e46e1b5cf6c08829ec3bb2a923b4ba149ab3b7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMmU0NmUxYjVjZjZjMDg4MjllYzNiYjJhOTIzYjRiYTE0OWFiM2I3",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2016-06-30T15:37:38Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2016-06-30T15:37:38Z"
      },
      "message": "Remove addScoreTxs()",
      "tree": {
        "sha": "7e65f65a35c2ddbd8cae92df61c32eb92b12537a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7e65f65a35c2ddbd8cae92df61c32eb92b12537a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2e46e1b5cf6c08829ec3bb2a923b4ba149ab3b7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2e46e1b5cf6c08829ec3bb2a923b4ba149ab3b7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d2e46e1b5cf6c08829ec3bb2a923b4ba149ab3b7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2e46e1b5cf6c08829ec3bb2a923b4ba149ab3b7/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6dd4bc289c71f622ac561f6f9651546b9ec4fa3e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6dd4bc289c71f622ac561f6f9651546b9ec4fa3e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6dd4bc289c71f622ac561f6f9651546b9ec4fa3e"
      }
    ],
    "stats": {
      "total": 66,
      "additions": 2,
      "deletions": 64
    },
    "files": [
      {
        "sha": "eb71355e7abc0a5fde39dd1f18c5e568f2f4c732",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 60,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2e46e1b5cf6c08829ec3bb2a923b4ba149ab3b7/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2e46e1b5cf6c08829ec3bb2a923b4ba149ab3b7/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=d2e46e1b5cf6c08829ec3bb2a923b4ba149ab3b7",
        "patch": "@@ -338,66 +338,6 @@ void BlockAssembler::AddToBlock(CTxMemPool::txiter iter)\n     }\n }\n \n-void BlockAssembler::addScoreTxs()\n-{\n-    std::priority_queue<CTxMemPool::txiter, std::vector<CTxMemPool::txiter>, ScoreCompare> clearedTxs;\n-    CTxMemPool::setEntries waitSet;\n-    CTxMemPool::indexed_transaction_set::index<mining_score>::type::iterator mi = mempool.mapTx.get<mining_score>().begin();\n-    CTxMemPool::txiter iter;\n-    while (!blockFinished && (mi != mempool.mapTx.get<mining_score>().end() || !clearedTxs.empty()))\n-    {\n-        // If no txs that were previously postponed are available to try\n-        // again, then try the next highest score tx\n-        if (clearedTxs.empty()) {\n-            iter = mempool.mapTx.project<0>(mi);\n-            mi++;\n-        }\n-        // If a previously postponed tx is available to try again, then it\n-        // has higher score than all untried so far txs\n-        else {\n-            iter = clearedTxs.top();\n-            clearedTxs.pop();\n-        }\n-\n-        // If tx already in block, skip  (added by addPriorityTxs)\n-        if (inBlock.count(iter)) {\n-            continue;\n-        }\n-\n-        // cannot accept witness transactions into a non-witness block\n-        if (!fIncludeWitness && !iter->GetTx().wit.IsNull())\n-            continue;\n-\n-        // If tx is dependent on other mempool txs which haven't yet been included\n-        // then put it in the waitSet\n-        if (isStillDependent(iter)) {\n-            waitSet.insert(iter);\n-            continue;\n-        }\n-\n-        // If the fee rate is below the min fee rate for mining, then we're done\n-        // adding txs based on score (fee rate)\n-        if (iter->GetModifiedFee() < ::minRelayTxFee.GetFee(iter->GetTxSize()) && nBlockSize >= nBlockMinSize) {\n-            return;\n-        }\n-\n-        // If this tx fits in the block add it, otherwise keep looping\n-        if (TestForBlock(iter)) {\n-            AddToBlock(iter);\n-\n-            // This tx was successfully added, so\n-            // add transactions that depend on this one to the priority queue to try again\n-            BOOST_FOREACH(CTxMemPool::txiter child, mempool.GetMemPoolChildren(iter))\n-            {\n-                if (waitSet.count(child)) {\n-                    clearedTxs.push(child);\n-                    waitSet.erase(child);\n-                }\n-            }\n-        }\n-    }\n-}\n-\n void BlockAssembler::UpdatePackagesForAdded(const CTxMemPool::setEntries& alreadyAdded,\n         indexed_modified_transaction_set &mapModifiedTx)\n {"
      },
      {
        "sha": "037639b2be841b96b5695ad05ddec3cb42456fa3",
        "filename": "src/miner.h",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2e46e1b5cf6c08829ec3bb2a923b4ba149ab3b7/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2e46e1b5cf6c08829ec3bb2a923b4ba149ab3b7/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=d2e46e1b5cf6c08829ec3bb2a923b4ba149ab3b7",
        "patch": "@@ -157,7 +157,7 @@ class BlockAssembler\n     int64_t nLockTimeCutoff;\n     const CChainParams& chainparams;\n \n-    // Variables used for addScoreTxs and addPriorityTxs\n+    // Variables used for addPriorityTxs\n     int lastFewTxs;\n     bool blockFinished;\n \n@@ -174,14 +174,12 @@ class BlockAssembler\n     void AddToBlock(CTxMemPool::txiter iter);\n \n     // Methods for how to add transactions to a block.\n-    /** Add transactions based on modified feerate */\n-    void addScoreTxs();\n     /** Add transactions based on tx \"priority\" */\n     void addPriorityTxs();\n     /** Add transactions based on feerate including unconfirmed ancestors */\n     void addPackageTxs();\n \n-    // helper function for addScoreTxs and addPriorityTxs\n+    // helper function for addPriorityTxs\n     /** Test if tx will still \"fit\" in the block */\n     bool TestForBlock(CTxMemPool::txiter iter);\n     /** Test if tx still has unconfirmed parents not yet in block */"
      }
    ]
  },
  {
    "sha": "27362dda4d583a43ebf687ae097d2f45ba1c4c32",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNzM2MmRkYTRkNTgzYTQzZWJmNjg3YWUwOTdkMmY0NWJhMWM0YzMy",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2016-06-30T15:41:13Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2016-06-30T15:41:13Z"
      },
      "message": "Remove -blockminsize option",
      "tree": {
        "sha": "07ec4f2ba52830055a7ae572bec68d0e7016175c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/07ec4f2ba52830055a7ae572bec68d0e7016175c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27362dda4d583a43ebf687ae097d2f45ba1c4c32",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27362dda4d583a43ebf687ae097d2f45ba1c4c32",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/27362dda4d583a43ebf687ae097d2f45ba1c4c32",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27362dda4d583a43ebf687ae097d2f45ba1c4c32/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d2e46e1b5cf6c08829ec3bb2a923b4ba149ab3b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2e46e1b5cf6c08829ec3bb2a923b4ba149ab3b7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d2e46e1b5cf6c08829ec3bb2a923b4ba149ab3b7"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 3,
      "deletions": 10
    },
    "files": [
      {
        "sha": "fdf6301d2ade39c859d97019fc69c724fd829543",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27362dda4d583a43ebf687ae097d2f45ba1c4c32/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27362dda4d583a43ebf687ae097d2f45ba1c4c32/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=27362dda4d583a43ebf687ae097d2f45ba1c4c32",
        "patch": "@@ -453,7 +453,6 @@ std::string HelpMessage(HelpMessageMode mode)\n \n     strUsage += HelpMessageGroup(_(\"Block creation options:\"));\n     strUsage += HelpMessageOpt(\"-blockmaxcost=<n>\", strprintf(_(\"Set maximum block cost (default: %d)\"), DEFAULT_BLOCK_MAX_COST));\n-    strUsage += HelpMessageOpt(\"-blockminsize=<n>\", strprintf(_(\"Set minimum block size in bytes (default: %u)\"), DEFAULT_BLOCK_MIN_SIZE));\n     strUsage += HelpMessageOpt(\"-blockmaxsize=<n>\", strprintf(_(\"Set maximum block size in bytes (default: %d)\"), DEFAULT_BLOCK_MAX_SIZE));\n     strUsage += HelpMessageOpt(\"-blockprioritysize=<n>\", strprintf(_(\"Set maximum size of high-priority/low-fee transactions in bytes (default: %d)\"), DEFAULT_BLOCK_PRIORITY_SIZE));\n     if (showDebug)"
      },
      {
        "sha": "8153fb9f9ecdda8eb8c17ba23d002533453971ed",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27362dda4d583a43ebf687ae097d2f45ba1c4c32/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27362dda4d583a43ebf687ae097d2f45ba1c4c32/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=27362dda4d583a43ebf687ae097d2f45ba1c4c32",
        "patch": "@@ -100,13 +100,8 @@ BlockAssembler::BlockAssembler(const CChainParams& _chainparams)\n     // Limit size to between 1K and MAX_BLOCK_SERIALIZED_SIZE-1K for sanity:\n     nBlockMaxSize = std::max((unsigned int)1000, std::min((unsigned int)(MAX_BLOCK_SERIALIZED_SIZE-1000), nBlockMaxSize));\n \n-    // Minimum block size you want to create; block will be filled with free transactions\n-    // until there are no more or the block reaches this size:\n-    nBlockMinSize = GetArg(\"-blockminsize\", DEFAULT_BLOCK_MIN_SIZE);\n-    nBlockMinSize = std::min(nBlockMaxSize, nBlockMinSize);\n-\n     // Whether we need to account for byte usage (in addition to cost usage)\n-    fNeedSizeAccounting = (nBlockMaxSize < MAX_BLOCK_SERIALIZED_SIZE-1000) || (nBlockMinSize > 0);\n+    fNeedSizeAccounting = (nBlockMaxSize < MAX_BLOCK_SERIALIZED_SIZE-1000);\n }\n \n void BlockAssembler::resetBlock()"
      },
      {
        "sha": "d16e37bb599bb47ee18b84044e7c07905b59624f",
        "filename": "src/miner.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27362dda4d583a43ebf687ae097d2f45ba1c4c32/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27362dda4d583a43ebf687ae097d2f45ba1c4c32/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=27362dda4d583a43ebf687ae097d2f45ba1c4c32",
        "patch": "@@ -141,7 +141,7 @@ class BlockAssembler\n \n     // Configuration parameters for the block size\n     bool fIncludeWitness;\n-    unsigned int nBlockMaxCost, nBlockMaxSize, nBlockMinSize;\n+    unsigned int nBlockMaxCost, nBlockMaxSize;\n     bool fNeedSizeAccounting;\n \n     // Information on the current status of the block"
      },
      {
        "sha": "29a8cc57c20fff29b1905900a210d225dec5ef01",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27362dda4d583a43ebf687ae097d2f45ba1c4c32/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27362dda4d583a43ebf687ae097d2f45ba1c4c32/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=27362dda4d583a43ebf687ae097d2f45ba1c4c32",
        "patch": "@@ -14,9 +14,8 @@\n \n class CCoinsViewCache;\n \n-/** Default for -blockmaxsize and -blockminsize, which control the range of sizes the mining code will create **/\n+/** Default for -blockmaxsize, which controls the maximum size of block the mining code will create **/\n static const unsigned int DEFAULT_BLOCK_MAX_SIZE = 750000;\n-static const unsigned int DEFAULT_BLOCK_MIN_SIZE = 0;\n /** Default for -blockprioritysize, maximum space for zero/low-fee transactions **/\n static const unsigned int DEFAULT_BLOCK_PRIORITY_SIZE = 0;\n /** Default for -blockmaxcost, which control the range of block costs the mining code will create **/"
      }
    ]
  },
  {
    "sha": "c1d61fbd080bcc29589b8d467df98efb7e89d231",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMWQ2MWZiZDA4MGJjYzI5NTg5YjhkNDY3ZGY5OGVmYjdlODlkMjMx",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2016-07-05T19:50:48Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2016-07-05T23:57:45Z"
      },
      "message": "Add warning if -blockminsize is used.",
      "tree": {
        "sha": "aa9fc656d5f107f80f664ac614f6895cc1faf6ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aa9fc656d5f107f80f664ac614f6895cc1faf6ca"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c1d61fbd080bcc29589b8d467df98efb7e89d231",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1d61fbd080bcc29589b8d467df98efb7e89d231",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c1d61fbd080bcc29589b8d467df98efb7e89d231",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1d61fbd080bcc29589b8d467df98efb7e89d231/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "27362dda4d583a43ebf687ae097d2f45ba1c4c32",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27362dda4d583a43ebf687ae097d2f45ba1c4c32",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/27362dda4d583a43ebf687ae097d2f45ba1c4c32"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "9ea0131ac3aa4933d4ebc45b78a9282805974a73",
        "filename": "contrib/devtools/check-doc.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1d61fbd080bcc29589b8d467df98efb7e89d231/contrib/devtools/check-doc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1d61fbd080bcc29589b8d467df98efb7e89d231/contrib/devtools/check-doc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/check-doc.py?ref=c1d61fbd080bcc29589b8d467df98efb7e89d231",
        "patch": "@@ -21,7 +21,7 @@\n REGEX_ARG = re.compile(r'(?:map(?:Multi)?Args(?:\\.count\\(|\\[)|Get(?:Bool)?Arg\\()\\\"(\\-[^\\\"]+?)\\\"')\n REGEX_DOC = re.compile(r'HelpMessageOpt\\(\\\"(\\-[^\\\"=]+?)(?:=|\\\")')\n # list unsupported, deprecated and duplicate args as they need no documentation\n-SET_DOC_OPTIONAL = set(['-rpcssl', '-benchmark', '-h', '-help', '-socks', '-tor', '-debugnet', '-whitelistalwaysrelay', '-prematurewitness', '-walletprematurewitness', '-promiscuousmempoolflags'])\n+SET_DOC_OPTIONAL = set(['-rpcssl', '-benchmark', '-h', '-help', '-socks', '-tor', '-debugnet', '-whitelistalwaysrelay', '-prematurewitness', '-walletprematurewitness', '-promiscuousmempoolflags', '-blockminsize'])\n \n def main():\n   used = check_output(CMD_GREP_ARGS, shell=True)"
      },
      {
        "sha": "7f82893286b1627b000b755b3459f9d01ad7d7b8",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1d61fbd080bcc29589b8d467df98efb7e89d231/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1d61fbd080bcc29589b8d467df98efb7e89d231/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=c1d61fbd080bcc29589b8d467df98efb7e89d231",
        "patch": "@@ -876,6 +876,9 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     if (GetBoolArg(\"-whitelistalwaysrelay\", false))\n         InitWarning(_(\"Unsupported argument -whitelistalwaysrelay ignored, use -whitelistrelay and/or -whitelistforcerelay.\"));\n \n+    if (mapArgs.count(\"-blockminsize\"))\n+        InitWarning(\"Unsupported argument -blockminsize ignored.\");\n+\n     // Checkmempool and checkblockindex default to true in regtest mode\n     int ratio = std::min<int>(std::max<int>(GetArg(\"-checkmempool\", chainparams.DefaultConsistencyChecks() ? 1 : 0), 0), 1000000);\n     if (ratio != 0) {"
      }
    ]
  }
]