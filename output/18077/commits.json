[
  {
    "sha": "02ccf69dd6b772423acb343d16ef2bdbb3e3da03",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMmNjZjY5ZGQ2Yjc3MjQyM2FjYjM0M2QxNmVmMmJkYmIzZTNkYTAz",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-02-06T17:00:26Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-07T16:06:58Z"
      },
      "message": "refactor: Move port mapping code to its own module\n\nThis commit does not change behavior.",
      "tree": {
        "sha": "105a82f38003a255a4c9df8e713155455a2e130f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/105a82f38003a255a4c9df8e713155455a2e130f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/02ccf69dd6b772423acb343d16ef2bdbb3e3da03",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/3MaIACgkQQQEIES5+\nqB/vWg/9FDBHM8JeDfa3+eKrRBVeneSySfcZsz52N0hx08wEvK6A09pYHj2Pz34Z\n055zlkrStaK204qzrTQTkPiHMDlcF+eFUdzCWlNQzkBp9lWVJ82eTFCu47kLBZCz\nlDqwUKz6GNjNhx/slNTtU4l6RA2pupWWGUCvxG5xzR85plQaxkn9psH9a+rHy6y3\n+8C7y7MTeZO6/yktngCGjoO62Rw50zzBkX3T873BfyvgDzziL60GQGo3K6UsqBFh\n1bzIqmxqmOKJGbPzAr9YeeasGNM7SzR1Lq/YKrsp3HlxHDU9JIZht9GXhtS07Ao5\nfS1rqPiXnThGlCQPUDqnETY6gmVh8oO8d7TpZOEMCTRNgDaiRuacSA6qkm7h4PAk\nbE+EJmgmvhcRAMJVlKw82yBd/hB2+wuUFJ5thVRWwaXZhgEaGlOyE47mo1WNBk/E\neNlueQ+SGdtRbCr0udbPkg8eR3eXjy7T+VgyVQWSHYFgS9HdvQ6JnnTwblSs7ChK\nRELlnNXU3QJFre10mnkRQvG3czyTuNfqnO2eOyW0A0TandCgO3Gs1/Wqay/E16aU\nhdPhh6sOVWcVd27bkYu+bKSfOidj9x9H9cBABhcWTlexjh1oS3dS6ALS64++ULrB\nCfTp6jq8tT79lE0jKI0FHtxEn19ypUecTx/Q9T+lJzCm0HFDjfA=\n=hN6R\n-----END PGP SIGNATURE-----",
        "payload": "tree 105a82f38003a255a4c9df8e713155455a2e130f\nparent 4b8b71e630415647c75fa95d5407690b372bceff\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1581008426 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610035618 +0200\n\nrefactor: Move port mapping code to its own module\n\nThis commit does not change behavior.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02ccf69dd6b772423acb343d16ef2bdbb3e3da03",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/02ccf69dd6b772423acb343d16ef2bdbb3e3da03",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02ccf69dd6b772423acb343d16ef2bdbb3e3da03/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4b8b71e630415647c75fa95d5407690b372bceff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b8b71e630415647c75fa95d5407690b372bceff",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4b8b71e630415647c75fa95d5407690b372bceff"
      }
    ],
    "stats": {
      "total": 298,
      "additions": 163,
      "deletions": 135
    },
    "files": [
      {
        "sha": "ec697515d95c4bbd47e6c39d3194baf6d484c814",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02ccf69dd6b772423acb343d16ef2bdbb3e3da03/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02ccf69dd6b772423acb343d16ef2bdbb3e3da03/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=02ccf69dd6b772423acb343d16ef2bdbb3e3da03",
        "patch": "@@ -152,6 +152,7 @@ BITCOIN_CORE_H = \\\n   key_io.h \\\n   logging.h \\\n   logging/timer.h \\\n+  mapport.h \\\n   memusage.h \\\n   merkleblock.h \\\n   miner.h \\\n@@ -299,6 +300,7 @@ libbitcoin_server_a_SOURCES = \\\n   index/blockfilterindex.cpp \\\n   index/txindex.cpp \\\n   init.cpp \\\n+  mapport.cpp \\\n   miner.cpp \\\n   net.cpp \\\n   net_processing.cpp \\"
      },
      {
        "sha": "5c244902153a1476a67aad08965db92cf57c97c6",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02ccf69dd6b772423acb343d16ef2bdbb3e3da03/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02ccf69dd6b772423acb343d16ef2bdbb3e3da03/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=02ccf69dd6b772423acb343d16ef2bdbb3e3da03",
        "patch": "@@ -26,6 +26,7 @@\n #include <interfaces/chain.h>\n #include <interfaces/node.h>\n #include <key.h>\n+#include <mapport.h>\n #include <miner.h>\n #include <net.h>\n #include <net_permissions.h>"
      },
      {
        "sha": "a45d4d9060f72460f8962472a9c37fed80ca654d",
        "filename": "src/mapport.cpp",
        "status": "added",
        "additions": 137,
        "deletions": 0,
        "changes": 137,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02ccf69dd6b772423acb343d16ef2bdbb3e3da03/src/mapport.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02ccf69dd6b772423acb343d16ef2bdbb3e3da03/src/mapport.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/mapport.cpp?ref=02ccf69dd6b772423acb343d16ef2bdbb3e3da03",
        "patch": "@@ -0,0 +1,137 @@\n+// Copyright (c) 2011-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#ifdef USE_UPNP\n+static CThreadInterrupt g_upnp_interrupt;\n+static std::thread g_upnp_thread;\n+static void ThreadMapPort()\n+{\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_UPNP);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+            } else {\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_upnp_interrupt.sleep_for(std::chrono::minutes(20)));\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+}\n+\n+void StartMapPort()\n+{\n+    if (!g_upnp_thread.joinable()) {\n+        assert(!g_upnp_interrupt);\n+        g_upnp_thread = std::thread((std::bind(&TraceThread<void (*)()>, \"upnp\", &ThreadMapPort)));\n+    }\n+}\n+\n+void InterruptMapPort()\n+{\n+    if(g_upnp_thread.joinable()) {\n+        g_upnp_interrupt();\n+    }\n+}\n+\n+void StopMapPort()\n+{\n+    if(g_upnp_thread.joinable()) {\n+        g_upnp_thread.join();\n+        g_upnp_interrupt.reset();\n+    }\n+}\n+\n+#else\n+void StartMapPort()\n+{\n+    // Intentionally left blank.\n+}\n+void InterruptMapPort()\n+{\n+    // Intentionally left blank.\n+}\n+void StopMapPort()\n+{\n+    // Intentionally left blank.\n+}\n+#endif"
      },
      {
        "sha": "25ff2fd1ebece66715a639b034f305159045b35a",
        "filename": "src/mapport.h",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02ccf69dd6b772423acb343d16ef2bdbb3e3da03/src/mapport.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02ccf69dd6b772423acb343d16ef2bdbb3e3da03/src/mapport.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/mapport.h?ref=02ccf69dd6b772423acb343d16ef2bdbb3e3da03",
        "patch": "@@ -0,0 +1,19 @@\n+// Copyright (c) 2011-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_MAPPORT_H\n+#define BITCOIN_MAPPORT_H\n+\n+/** -upnp default */\n+#ifdef USE_UPNP\n+static const bool DEFAULT_UPNP = USE_UPNP;\n+#else\n+static const bool DEFAULT_UPNP = false;\n+#endif\n+\n+void StartMapPort();\n+void InterruptMapPort();\n+void StopMapPort();\n+\n+#endif // BITCOIN_MAPPORT_H"
      },
      {
        "sha": "6e5a271945c64dbc8d68fd5c1339fef129fc1bfb",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 124,
        "changes": 124,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02ccf69dd6b772423acb343d16ef2bdbb3e3da03/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02ccf69dd6b772423acb343d16ef2bdbb3e3da03/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=02ccf69dd6b772423acb343d16ef2bdbb3e3da03",
        "patch": "@@ -33,15 +33,6 @@\n #include <poll.h>\n #endif\n \n-#ifdef USE_UPNP\n-#include <miniupnpc/miniupnpc.h>\n-#include <miniupnpc/upnpcommands.h>\n-#include <miniupnpc/upnperrors.h>\n-// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n-// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n-static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n-#endif\n-\n #include <algorithm>\n #include <cstdint>\n #include <unordered_map>\n@@ -1539,121 +1530,6 @@ void CConnman::WakeMessageHandler()\n     condMsgProc.notify_one();\n }\n \n-\n-\n-\n-\n-\n-#ifdef USE_UPNP\n-static CThreadInterrupt g_upnp_interrupt;\n-static std::thread g_upnp_thread;\n-static void ThreadMapPort()\n-{\n-    std::string port = strprintf(\"%u\", GetListenPort());\n-    const char * multicastif = nullptr;\n-    const char * minissdpdpath = nullptr;\n-    struct UPNPDev * devlist = nullptr;\n-    char lanaddr[64];\n-\n-    int error = 0;\n-#if MINIUPNPC_API_VERSION < 14\n-    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n-#else\n-    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n-#endif\n-\n-    struct UPNPUrls urls;\n-    struct IGDdatas data;\n-    int r;\n-\n-    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n-    if (r == 1)\n-    {\n-        if (fDiscover) {\n-            char externalIPAddress[40];\n-            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n-            if (r != UPNPCOMMAND_SUCCESS) {\n-                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n-            } else {\n-                if (externalIPAddress[0]) {\n-                    CNetAddr resolved;\n-                    if (LookupHost(externalIPAddress, resolved, false)) {\n-                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n-                        AddLocal(resolved, LOCAL_UPNP);\n-                    }\n-                } else {\n-                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n-                }\n-            }\n-        }\n-\n-        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n-\n-        do {\n-            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n-\n-            if (r != UPNPCOMMAND_SUCCESS) {\n-                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n-            } else {\n-                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n-            }\n-        } while (g_upnp_interrupt.sleep_for(std::chrono::minutes(20)));\n-\n-        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n-        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n-        freeUPNPDevlist(devlist); devlist = nullptr;\n-        FreeUPNPUrls(&urls);\n-    } else {\n-        LogPrintf(\"No valid UPnP IGDs found\\n\");\n-        freeUPNPDevlist(devlist); devlist = nullptr;\n-        if (r != 0)\n-            FreeUPNPUrls(&urls);\n-    }\n-}\n-\n-void StartMapPort()\n-{\n-    if (!g_upnp_thread.joinable()) {\n-        assert(!g_upnp_interrupt);\n-        g_upnp_thread = std::thread((std::bind(&TraceThread<void (*)()>, \"upnp\", &ThreadMapPort)));\n-    }\n-}\n-\n-void InterruptMapPort()\n-{\n-    if(g_upnp_thread.joinable()) {\n-        g_upnp_interrupt();\n-    }\n-}\n-\n-void StopMapPort()\n-{\n-    if(g_upnp_thread.joinable()) {\n-        g_upnp_thread.join();\n-        g_upnp_interrupt.reset();\n-    }\n-}\n-\n-#else\n-void StartMapPort()\n-{\n-    // Intentionally left blank.\n-}\n-void InterruptMapPort()\n-{\n-    // Intentionally left blank.\n-}\n-void StopMapPort()\n-{\n-    // Intentionally left blank.\n-}\n-#endif\n-\n-\n-\n-\n-\n-\n void CConnman::ThreadDNSAddressSeed()\n {\n     FastRandomContext rng;"
      },
      {
        "sha": "6827c6897f4c14df486f7d22167aa6c1954b7bd2",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02ccf69dd6b772423acb343d16ef2bdbb3e3da03/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02ccf69dd6b772423acb343d16ef2bdbb3e3da03/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=02ccf69dd6b772423acb343d16ef2bdbb3e3da03",
        "patch": "@@ -67,12 +67,6 @@ static const int MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2;\n static const int MAX_FEELER_CONNECTIONS = 1;\n /** -listen default */\n static const bool DEFAULT_LISTEN = true;\n-/** -upnp default */\n-#ifdef USE_UPNP\n-static const bool DEFAULT_UPNP = USE_UPNP;\n-#else\n-static const bool DEFAULT_UPNP = false;\n-#endif\n /** The maximum number of peer connections to maintain. */\n static const unsigned int DEFAULT_MAX_PEER_CONNECTIONS = 125;\n /** The default for -maxuploadtarget. 0 = Unlimited */\n@@ -181,9 +175,6 @@ enum class ConnectionType {\n };\n \n void Discover();\n-void StartMapPort();\n-void InterruptMapPort();\n-void StopMapPort();\n uint16_t GetListenPort();\n \n enum"
      },
      {
        "sha": "ff6c9bf6b37902cece3f900e80dac145c653edd7",
        "filename": "src/node/interfaces.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02ccf69dd6b772423acb343d16ef2bdbb3e3da03/src/node/interfaces.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02ccf69dd6b772423acb343d16ef2bdbb3e3da03/src/node/interfaces.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/interfaces.cpp?ref=02ccf69dd6b772423acb343d16ef2bdbb3e3da03",
        "patch": "@@ -12,6 +12,7 @@\n #include <interfaces/handler.h>\n #include <interfaces/node.h>\n #include <interfaces/wallet.h>\n+#include <mapport.h>\n #include <net.h>\n #include <net_processing.h>\n #include <netaddress.h>"
      },
      {
        "sha": "c1b8a06be8e0205faf57ee816ae0e16739e6b9a9",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02ccf69dd6b772423acb343d16ef2bdbb3e3da03/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02ccf69dd6b772423acb343d16ef2bdbb3e3da03/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=02ccf69dd6b772423acb343d16ef2bdbb3e3da03",
        "patch": "@@ -13,11 +13,12 @@\n #include <qt/guiutil.h>\n \n #include <interfaces/node.h>\n-#include <validation.h> // For DEFAULT_SCRIPTCHECK_THREADS\n+#include <mapport.h>\n #include <net.h>\n #include <netbase.h>\n-#include <txdb.h> // for -dbcache defaults\n+#include <txdb.h>       // for -dbcache defaults\n #include <util/string.h>\n+#include <validation.h> // For DEFAULT_SCRIPTCHECK_THREADS\n \n #include <QDebug>\n #include <QSettings>"
      }
    ]
  },
  {
    "sha": "28e2961fd6a2a9101fc08fb748430989291aaf7e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOGUyOTYxZmQ2YTJhOTEwMWZjMDhmYjc0ODQzMDk4OTI5MWFhZjdl",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-02-16T14:37:46Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-07T16:07:07Z"
      },
      "message": "refactor: Replace magic number with named constant",
      "tree": {
        "sha": "c3fe71dbb68c12822cbf4a9a7fd3dab92756266c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c3fe71dbb68c12822cbf4a9a7fd3dab92756266c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/28e2961fd6a2a9101fc08fb748430989291aaf7e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/3MasACgkQQQEIES5+\nqB94XhAAnHIEINe0lV4BYpOjfMo92c7egmBF0qkwzxs/cMus6os7Y98+WfMcu6Wc\n7CvyozR0Xtrcee4QuN7tzKqvY+yzn8Qepicsom0UVhjijEvU/ukbxu2tIDnVkDMq\nZYqwrLTJu1+1wjYizVJyQoqXHkwXoyqYt314y1jq20qEFWrVSfkvppcDdkvV8yzT\ninK8TEFttMeMHDrBbXJWyZAI/ZE1UbeZZqBOFfLFPz9jBdXf9ofzggeCiqpHHW7G\nQH36vlnInXz/vfDk1b2vVXe5dg4orNwuEYmBT3WZ41AFFBK2Chbxy0CTFIiDhmNr\nyzLYvDDBU3mi2DhYCpZ3wJgz63uT5AdJ27azfFgJzjBdGHaARoBsam4ZM1t5kUWQ\naxoX60rg1cfonMw+vxMbg1EdZsVMI/zMQR3R0yCHSSYdcKK+w667GOl4ucYstIpP\nNLNyDO0ZMHArDAoL7581R667IWFVafd4CFrBvQLz/93pHkOx8R1RQhYRNZiGw0UG\nVwd+VSafGxIm6H2Sx0/9XhS10GWkSWaZDHlJ+Cw9JAcksuoWcf6LaSnaBoHqlHkI\n8xYjMQVxQy7VxQlWr7ymJC3nk/Bvdh6B2mFaTcrE1pg8RuEa6JpLacbs84HwUhQH\n2yGc0msRJmu6vLgfLlItlhYJEoHAMzgQsEqa/qjziPDhXANVvoE=\n=HDaq\n-----END PGP SIGNATURE-----",
        "payload": "tree c3fe71dbb68c12822cbf4a9a7fd3dab92756266c\nparent 02ccf69dd6b772423acb343d16ef2bdbb3e3da03\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1581863866 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610035627 +0200\n\nrefactor: Replace magic number with named constant\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28e2961fd6a2a9101fc08fb748430989291aaf7e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/28e2961fd6a2a9101fc08fb748430989291aaf7e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28e2961fd6a2a9101fc08fb748430989291aaf7e/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "02ccf69dd6b772423acb343d16ef2bdbb3e3da03",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02ccf69dd6b772423acb343d16ef2bdbb3e3da03",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/02ccf69dd6b772423acb343d16ef2bdbb3e3da03"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "1f24b757088c975e542607567a0f02de7e056731",
        "filename": "src/mapport.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/28e2961fd6a2a9101fc08fb748430989291aaf7e/src/mapport.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/28e2961fd6a2a9101fc08fb748430989291aaf7e/src/mapport.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/mapport.cpp?ref=28e2961fd6a2a9101fc08fb748430989291aaf7e",
        "patch": "@@ -34,6 +34,10 @@ static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\"\n #ifdef USE_UPNP\n static CThreadInterrupt g_upnp_interrupt;\n static std::thread g_upnp_thread;\n+\n+using namespace std::chrono_literals;\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD{20min};\n+\n static void ThreadMapPort()\n {\n     std::string port = strprintf(\"%u\", GetListenPort());\n@@ -84,7 +88,7 @@ static void ThreadMapPort()\n             } else {\n                 LogPrintf(\"UPnP Port Mapping successful.\\n\");\n             }\n-        } while (g_upnp_interrupt.sleep_for(std::chrono::minutes(20)));\n+        } while (g_upnp_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n \n         r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n         LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);"
      }
    ]
  },
  {
    "sha": "8b50d1b5bb29b7d1ea0245ba75a8df3144e312dc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YjUwZDFiNWJiMjliN2QxZWEwMjQ1YmE3NWE4ZGYzMTQ0ZTMxMmRj",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-02-18T21:23:30Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-07T16:07:07Z"
      },
      "message": "net: Keep trying to use UPnP when -upnp=1",
      "tree": {
        "sha": "e00bef9a28115a324be84547f39ef7e84884e81f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e00bef9a28115a324be84547f39ef7e84884e81f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b50d1b5bb29b7d1ea0245ba75a8df3144e312dc",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/3MasACgkQQQEIES5+\nqB9QrxAAlS0SoGdCwDLgJhKdG39LBBvgU5ITJJ0D5Eya642Xb7PjkqujisT7dkI/\ni808t9bIBrI4BrjCPxBrLQlmnAn3F/6CL4/+jyI1qQL+5CFVIiEejOUUa+5go2d0\nlbr+ja/B//J5wHxsftDqTh0CnhH9iSMEu9BHgYC2U18fMosGm6cNfPVhegnkjO1q\nlztH3n9Q+3mLW+xcORmOx7G8xWyTPc6KAXq8CrIX4lcjE/WrDyIZGlJCnbAtEmwg\nb5AoT2GtlmobfeRTSoSRXS58Xvu6W8UBHpqnuVbNFh/P1fEAMVJC088N8FTQ7VaI\nQVtajjuuvjHaJQ+7lMgXiPq7dRypaLSqDyb90+WXhQXNx+uSyYe9/sQhfS4xOIH8\nlbaeTe3TleMxYRyqihTLVKNDjPch6L/+XekSknN5zU77RSvcbvcnmUGaR/m+V0R5\nQS+lobpTyH2/kauFdbGCkuAhYbNhq6sVloGz0PmVoNs01jECBCLrVKLceFN6HRU2\nhFhUnRk2lh66ApQQ0ZOeD/2t7R4ohXQ0Sm09HMsfXAOZlwES6k9v/AZSVw0u8BaE\njZLsW3z8ilv7LjTOmDOgjZ0oDBWGTgIYiVrvwsfSrkhxMeAQHy0XOcwB2TYGxDIS\nCbUdIX5lymQLVv58vtqoKd7esJZHEG/zGzeFU6KXVgRWULpIj+8=\n=bdEC\n-----END PGP SIGNATURE-----",
        "payload": "tree e00bef9a28115a324be84547f39ef7e84884e81f\nparent 28e2961fd6a2a9101fc08fb748430989291aaf7e\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1582061010 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610035627 +0200\n\nnet: Keep trying to use UPnP when -upnp=1\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b50d1b5bb29b7d1ea0245ba75a8df3144e312dc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8b50d1b5bb29b7d1ea0245ba75a8df3144e312dc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b50d1b5bb29b7d1ea0245ba75a8df3144e312dc/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "28e2961fd6a2a9101fc08fb748430989291aaf7e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28e2961fd6a2a9101fc08fb748430989291aaf7e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/28e2961fd6a2a9101fc08fb748430989291aaf7e"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 16,
      "deletions": 1
    },
    "files": [
      {
        "sha": "ced2b773f327839d7ff076d08b59de0fb870b32f",
        "filename": "src/mapport.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 1,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b50d1b5bb29b7d1ea0245ba75a8df3144e312dc/src/mapport.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b50d1b5bb29b7d1ea0245ba75a8df3144e312dc/src/mapport.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/mapport.cpp?ref=8b50d1b5bb29b7d1ea0245ba75a8df3144e312dc",
        "patch": "@@ -37,9 +37,11 @@ static std::thread g_upnp_thread;\n \n using namespace std::chrono_literals;\n static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD{20min};\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD{5min};\n \n-static void ThreadMapPort()\n+static bool ProcessUpnp()\n {\n+    bool ret = false;\n     std::string port = strprintf(\"%u\", GetListenPort());\n     const char * multicastif = nullptr;\n     const char * minissdpdpath = nullptr;\n@@ -84,11 +86,15 @@ static void ThreadMapPort()\n             r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n \n             if (r != UPNPCOMMAND_SUCCESS) {\n+                ret = false;\n                 LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+                break;\n             } else {\n+                ret = true;\n                 LogPrintf(\"UPnP Port Mapping successful.\\n\");\n             }\n         } while (g_upnp_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+        g_upnp_interrupt.reset();\n \n         r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n         LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n@@ -100,6 +106,15 @@ static void ThreadMapPort()\n         if (r != 0)\n             FreeUPNPUrls(&urls);\n     }\n+\n+    return ret;\n+}\n+\n+static void ThreadMapPort()\n+{\n+    do {\n+        if (ProcessUpnp()) return;\n+    } while (g_upnp_interrupt.sleep_for(PORT_MAPPING_RETRY_PERIOD));\n }\n \n void StartMapPort()"
      }
    ]
  },
  {
    "sha": "4e91b1e24d96e0cdccdd2a3ed034413f3ba6bae6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZTkxYjFlMjRkOTZlMGNkY2NkZDJhM2VkMDM0NDEzZjNiYTZiYWU2",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-02-22T22:10:48Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-07T16:07:08Z"
      },
      "message": "net: Add flags for port mapping protocols",
      "tree": {
        "sha": "01f7e01ff0f66e58d98b5f3805780f571570476c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/01f7e01ff0f66e58d98b5f3805780f571570476c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e91b1e24d96e0cdccdd2a3ed034413f3ba6bae6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/3MawACgkQQQEIES5+\nqB8D+xAAl72vEy8yKzQrJmDVnBS0rg8t729wwVQPTErvu6dyAqSQwZ8iOPfVapWL\n3OX5+DKgJlI+75dh4/Lld4e7I3VrleKpm8jhrbbKdIDuvanxaHFLM5hXWK72b+f/\nmON62rOuWF0FmCKB3HYvxGYw7oCdeuONw0ckRgKBlSHhseThNRqngy7SCHEDHp+K\nhnunTspiL6qRfjHdC3eE76mXEhCWBX0UDEwyuKm7zgO6JDNHG2vSVKfgn0UfW/ZH\n19BVDk01ihE9yqF8pdd7lSB4iYygPtt3zw2UguyaS294Z2kmbRhj9h2fqKSAvj8c\nRdE2sJWt5wHdIeeqxoHjT9I9JlnnyG1OFGlyjpAU8K+sj4OCWRFTIZaf1kA7SDS9\nwM8cCkISPznozOEf1rmFnOW3ii6sp1mR6iX+0PiJUpWf6ETQRzYn/pBa7V0QB0Pu\nH5aDQE5HXDU/B6Dz/0RhZcCeNSx/GyykrLV1+RjaGGB6k1ClRZqmhj4f7Z6tzwZ0\nldhhsWBkQulhnDjfBRLrZv8Et4IRvDRoArsMiERIymjAcoKJ1qqUGTHe3dy7Pr2a\nNeSXHeLt2rKQmAuUP8VaWHaPxV34Ac8039EcNLxPuZchsjHqwH+8D8bzTZuPocc5\npoa5loKlBXaxH1PhrilF/GXdTqdnHsTcX8Annmf/5ckylvdyvrQ=\n=Bf1P\n-----END PGP SIGNATURE-----",
        "payload": "tree 01f7e01ff0f66e58d98b5f3805780f571570476c\nparent 8b50d1b5bb29b7d1ea0245ba75a8df3144e312dc\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1582409448 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610035628 +0200\n\nnet: Add flags for port mapping protocols\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e91b1e24d96e0cdccdd2a3ed034413f3ba6bae6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4e91b1e24d96e0cdccdd2a3ed034413f3ba6bae6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e91b1e24d96e0cdccdd2a3ed034413f3ba6bae6/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8b50d1b5bb29b7d1ea0245ba75a8df3144e312dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b50d1b5bb29b7d1ea0245ba75a8df3144e312dc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8b50d1b5bb29b7d1ea0245ba75a8df3144e312dc"
      }
    ],
    "stats": {
      "total": 52,
      "additions": 37,
      "deletions": 15
    },
    "files": [
      {
        "sha": "8a260a3df2abd9680fd2fb8adf823b0d43451be5",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4e91b1e24d96e0cdccdd2a3ed034413f3ba6bae6/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4e91b1e24d96e0cdccdd2a3ed034413f3ba6bae6/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=4e91b1e24d96e0cdccdd2a3ed034413f3ba6bae6",
        "patch": "@@ -1900,9 +1900,7 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n     Discover();\n \n     // Map ports with UPnP\n-    if (args.GetBoolArg(\"-upnp\", DEFAULT_UPNP)) {\n-        StartMapPort();\n-    }\n+    StartMapPort(args.GetBoolArg(\"-upnp\", DEFAULT_UPNP));\n \n     CConnman::Options connOptions;\n     connOptions.nLocalServices = nLocalServices;"
      },
      {
        "sha": "5091e9f44d8f93df81c24b47ba027fc64b8865c6",
        "filename": "src/mapport.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 2,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4e91b1e24d96e0cdccdd2a3ed034413f3ba6bae6/src/mapport.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4e91b1e24d96e0cdccdd2a3ed034413f3ba6bae6/src/mapport.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/mapport.cpp?ref=4e91b1e24d96e0cdccdd2a3ed034413f3ba6bae6",
        "patch": "@@ -25,6 +25,7 @@\n static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n #endif\n \n+#include <atomic>\n #include <cassert>\n #include <chrono>\n #include <functional>\n@@ -34,6 +35,7 @@ static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\"\n #ifdef USE_UPNP\n static CThreadInterrupt g_upnp_interrupt;\n static std::thread g_upnp_thread;\n+static std::atomic_uint g_mapport_target_proto{MapPortProtoFlag::NONE};\n \n using namespace std::chrono_literals;\n static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD{20min};\n@@ -117,14 +119,39 @@ static void ThreadMapPort()\n     } while (g_upnp_interrupt.sleep_for(PORT_MAPPING_RETRY_PERIOD));\n }\n \n-void StartMapPort()\n+void StartThreadMapPort()\n {\n     if (!g_upnp_thread.joinable()) {\n         assert(!g_upnp_interrupt);\n         g_upnp_thread = std::thread((std::bind(&TraceThread<void (*)()>, \"upnp\", &ThreadMapPort)));\n     }\n }\n \n+static void DispatchMapPort()\n+{\n+    if (g_mapport_target_proto == MapPortProtoFlag::UPNP) {\n+        StartThreadMapPort();\n+    } else {\n+        InterruptMapPort();\n+        StopMapPort();\n+    }\n+}\n+\n+static void MapPortProtoSetEnabled(MapPortProtoFlag proto, bool enabled)\n+{\n+    if (enabled) {\n+        g_mapport_target_proto |= proto;\n+    } else {\n+        g_mapport_target_proto &= ~proto;\n+    }\n+}\n+\n+void StartMapPort(bool use_upnp)\n+{\n+    MapPortProtoSetEnabled(MapPortProtoFlag::UPNP, use_upnp);\n+    DispatchMapPort();\n+}\n+\n void InterruptMapPort()\n {\n     if(g_upnp_thread.joinable()) {\n@@ -141,7 +168,7 @@ void StopMapPort()\n }\n \n #else\n-void StartMapPort()\n+void StartMapPort(bool use_upnp)\n {\n     // Intentionally left blank.\n }"
      },
      {
        "sha": "6e33b6ef74e470f1adcc7c840f470819b7838908",
        "filename": "src/mapport.h",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4e91b1e24d96e0cdccdd2a3ed034413f3ba6bae6/src/mapport.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4e91b1e24d96e0cdccdd2a3ed034413f3ba6bae6/src/mapport.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/mapport.h?ref=4e91b1e24d96e0cdccdd2a3ed034413f3ba6bae6",
        "patch": "@@ -12,7 +12,12 @@ static const bool DEFAULT_UPNP = USE_UPNP;\n static const bool DEFAULT_UPNP = false;\n #endif\n \n-void StartMapPort();\n+enum MapPortProtoFlag : unsigned int {\n+    NONE = 0x00,\n+    UPNP = 0x01,\n+};\n+\n+void StartMapPort(bool use_upnp);\n void InterruptMapPort();\n void StopMapPort();\n "
      },
      {
        "sha": "6b84cb0f05968723fd7ee5261715403657b57584",
        "filename": "src/node/interfaces.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 9,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4e91b1e24d96e0cdccdd2a3ed034413f3ba6bae6/src/node/interfaces.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4e91b1e24d96e0cdccdd2a3ed034413f3ba6bae6/src/node/interfaces.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/interfaces.cpp?ref=4e91b1e24d96e0cdccdd2a3ed034413f3ba6bae6",
        "patch": "@@ -94,15 +94,7 @@ class NodeImpl : public Node\n         }\n     }\n     bool shutdownRequested() override { return ShutdownRequested(); }\n-    void mapPort(bool use_upnp) override\n-    {\n-        if (use_upnp) {\n-            StartMapPort();\n-        } else {\n-            InterruptMapPort();\n-            StopMapPort();\n-        }\n-    }\n+    void mapPort(bool use_upnp) override { StartMapPort(use_upnp); }\n     bool getProxy(Network net, proxyType& proxy_info) override { return GetProxy(net, proxy_info); }\n     size_t getNodeCount(CConnman::NumConnections flags) override\n     {"
      }
    ]
  },
  {
    "sha": "cf151cc68c95a8943e43e3fa4061e176262779e7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZjE1MWNjNjhjOTVhODk0M2U0M2UzZmE0MDYxZTE3NjI2Mjc3OWU3",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-02-22T22:57:47Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-07T16:07:08Z"
      },
      "message": "scripted-diff: Rename UPnP stuff\n\n-BEGIN VERIFY SCRIPT-\nsed -i 's/g_upnp_interrupt/g_mapport_interrupt/' src/mapport.cpp\nsed -i 's/if(g_upnp_thread/if (g_mapport_thread/' src/mapport.cpp\nsed -i 's/g_upnp_thread/g_mapport_thread/' src/mapport.cpp\nsed -i 's/LOCAL_UPNP/LOCAL_MAPPED/' src/mapport.cpp\nsed -i 's/\\bupnp\\b/mapport/' src/mapport.cpp\nsed -i 's/LOCAL_UPNP,  /LOCAL_MAPPED,/' src/net.h\n-END VERIFY SCRIPT-",
      "tree": {
        "sha": "acae4c5db77ebd79648dad54806f3b02caf8e6d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/acae4c5db77ebd79648dad54806f3b02caf8e6d9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cf151cc68c95a8943e43e3fa4061e176262779e7",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/3MawACgkQQQEIES5+\nqB8n1Q//RCwIL2AZonyaGnznJU78UY6e3G6GflB13zQaaL8TBN1iPyl8aIxa73T/\n/fDXBer6wYnJmtB0DfmzaTaFbv0qnOFK7qwyTk8DDk2/GLwFDgq+oxPyaOOmf1p+\nwDGG2eFzH1/uF+/i2KeZGBXXnGknwXCWRYfjPHMBUjDUtfn4/SZYREb2V3AQBrNy\nNdgJEhewlbpI4bR9LoPJ3r97Bi30NMIKkwLg+82TDH9yzlnsnlKShLrqC/RK6qff\ndhsWg5vCdP7Q3PijTf+jOOv5k5B8U4xx7ahqycyb45qQvfnspJrYrRw7l3RX/12g\nEfNfwfdV66FTtCETTDVedlorNwrsIHjjMYPs6SRpE4jtcayjAt3KN8J+IDC9ofkN\nG/QeHYEJIl6aCgRhMe2nGD7bpshDpGRdet9Ub/v6vmnxeujFzGKX1FuoouTWqYvT\n+xVZjUyBlOIfZxpMVMnKwMuDL+5fodakEJM/zf8mdcSP/typOE+PfiZ2eegms40h\nO9KLdXtAuHC7Bu5er5hfpqxaTI+jAFqXaGFyaw7swX+ZWBJdFByFvRBR8oIwWMYF\nIz/6YydI+7vFh0tt7VpBF22C9pCJDNEEmuuhZLe9jkCPotLo1m8cbM5VDKcQyWkq\nn7v8Oema91qQHBy8g1+B1BwA26FOIvJPmm3iuudHIpkahYnSV6c=\n=VU2i\n-----END PGP SIGNATURE-----",
        "payload": "tree acae4c5db77ebd79648dad54806f3b02caf8e6d9\nparent 4e91b1e24d96e0cdccdd2a3ed034413f3ba6bae6\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1582412267 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610035628 +0200\n\nscripted-diff: Rename UPnP stuff\n\n-BEGIN VERIFY SCRIPT-\nsed -i 's/g_upnp_interrupt/g_mapport_interrupt/' src/mapport.cpp\nsed -i 's/if(g_upnp_thread/if (g_mapport_thread/' src/mapport.cpp\nsed -i 's/g_upnp_thread/g_mapport_thread/' src/mapport.cpp\nsed -i 's/LOCAL_UPNP/LOCAL_MAPPED/' src/mapport.cpp\nsed -i 's/\\bupnp\\b/mapport/' src/mapport.cpp\nsed -i 's/LOCAL_UPNP,  /LOCAL_MAPPED,/' src/net.h\n-END VERIFY SCRIPT-\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf151cc68c95a8943e43e3fa4061e176262779e7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cf151cc68c95a8943e43e3fa4061e176262779e7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf151cc68c95a8943e43e3fa4061e176262779e7/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4e91b1e24d96e0cdccdd2a3ed034413f3ba6bae6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e91b1e24d96e0cdccdd2a3ed034413f3ba6bae6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4e91b1e24d96e0cdccdd2a3ed034413f3ba6bae6"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 15,
      "deletions": 15
    },
    "files": [
      {
        "sha": "5f0aeb5e40efedd730b5da22d1e7f66cc9edbde8",
        "filename": "src/mapport.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf151cc68c95a8943e43e3fa4061e176262779e7/src/mapport.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf151cc68c95a8943e43e3fa4061e176262779e7/src/mapport.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/mapport.cpp?ref=cf151cc68c95a8943e43e3fa4061e176262779e7",
        "patch": "@@ -33,8 +33,8 @@ static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\"\n #include <thread>\n \n #ifdef USE_UPNP\n-static CThreadInterrupt g_upnp_interrupt;\n-static std::thread g_upnp_thread;\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n static std::atomic_uint g_mapport_target_proto{MapPortProtoFlag::NONE};\n \n using namespace std::chrono_literals;\n@@ -74,7 +74,7 @@ static bool ProcessUpnp()\n                     CNetAddr resolved;\n                     if (LookupHost(externalIPAddress, resolved, false)) {\n                         LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n-                        AddLocal(resolved, LOCAL_UPNP);\n+                        AddLocal(resolved, LOCAL_MAPPED);\n                     }\n                 } else {\n                     LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n@@ -95,8 +95,8 @@ static bool ProcessUpnp()\n                 ret = true;\n                 LogPrintf(\"UPnP Port Mapping successful.\\n\");\n             }\n-        } while (g_upnp_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n-        g_upnp_interrupt.reset();\n+        } while (g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+        g_mapport_interrupt.reset();\n \n         r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n         LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n@@ -116,14 +116,14 @@ static void ThreadMapPort()\n {\n     do {\n         if (ProcessUpnp()) return;\n-    } while (g_upnp_interrupt.sleep_for(PORT_MAPPING_RETRY_PERIOD));\n+    } while (g_mapport_interrupt.sleep_for(PORT_MAPPING_RETRY_PERIOD));\n }\n \n void StartThreadMapPort()\n {\n-    if (!g_upnp_thread.joinable()) {\n-        assert(!g_upnp_interrupt);\n-        g_upnp_thread = std::thread((std::bind(&TraceThread<void (*)()>, \"upnp\", &ThreadMapPort)));\n+    if (!g_mapport_thread.joinable()) {\n+        assert(!g_mapport_interrupt);\n+        g_mapport_thread = std::thread((std::bind(&TraceThread<void (*)()>, \"mapport\", &ThreadMapPort)));\n     }\n }\n \n@@ -154,16 +154,16 @@ void StartMapPort(bool use_upnp)\n \n void InterruptMapPort()\n {\n-    if(g_upnp_thread.joinable()) {\n-        g_upnp_interrupt();\n+    if (g_mapport_thread.joinable()) {\n+        g_mapport_interrupt();\n     }\n }\n \n void StopMapPort()\n {\n-    if(g_upnp_thread.joinable()) {\n-        g_upnp_thread.join();\n-        g_upnp_interrupt.reset();\n+    if (g_mapport_thread.joinable()) {\n+        g_mapport_thread.join();\n+        g_mapport_interrupt.reset();\n     }\n }\n "
      },
      {
        "sha": "2f4576016dae937a3634d237d219647caa40348e",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf151cc68c95a8943e43e3fa4061e176262779e7/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf151cc68c95a8943e43e3fa4061e176262779e7/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=cf151cc68c95a8943e43e3fa4061e176262779e7",
        "patch": "@@ -182,7 +182,7 @@ enum\n     LOCAL_NONE,   // unknown\n     LOCAL_IF,     // address a local interface listens on\n     LOCAL_BIND,   // address explicit bound to\n-    LOCAL_UPNP,   // address reported by UPnP\n+    LOCAL_MAPPED, // address reported by UPnP\n     LOCAL_MANUAL, // address explicitly specified (-externalip=)\n \n     LOCAL_MAX"
      }
    ]
  },
  {
    "sha": "58e8364dcdc4e57b0caac09f8402e6535301de9b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OGU4MzY0ZGNkYzRlNTdiMGNhYWMwOWY4NDAyZTY1MzUzMDFkZTli",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-02-22T23:24:36Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-07T16:07:08Z"
      },
      "message": "gui: Apply port mapping changes on dialog exit\n\nThis commit does not change behavior. It is a prerequisite for NAT-PMP\nsupport adding.",
      "tree": {
        "sha": "dcfc4960eeb31b81c6fbcaedc31bd2424d4ecb28",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dcfc4960eeb31b81c6fbcaedc31bd2424d4ecb28"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/58e8364dcdc4e57b0caac09f8402e6535301de9b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/3MawACgkQQQEIES5+\nqB/bIg/+NDNRlsrw6g+cCEjIrD30KxLN1qX7c3gUcurfDaI1mC9CM3tDbOy1vCdN\n67bbBMrj5CtgJ8KGZGSU6bqBy2ASw3IYukP80b+R7g5f3+Km3fKkXl1cHltS0mqp\n58dqK8U5dw8cdtSNS04+5gYykUZ0pxY3Kl9iAS7bA66+527EQkVEB5d2KVtTelHl\nS7hGK5BWFp8gH9o4qFGl3Dm6duCZjM0Aff+BFBTKejm0m09gV4JRtmRi7BwgYS2v\ncaWj+vWojPJF/WKYSt3WggLRMRtw4gfJ2N6dZ8E5wFqLj/WoHgWfFKzzTzNpZUUi\neHM5VfiJK889/+bwAhjITewKEQQp/GJWNemmkC/ci4zWVDIvYe0wRky0YW3aTe3f\n4Kq3z9/EMN1OhsyC/givXuqilrUMqjvNYLy12WqExyvNP4KA/aYQIm8QdfpeT5Zn\nuEtRP7DJwbaMiiUx38S/AOXIkJpy8fmHgOI78ijOC0M25RjtSkFSxL4Dk4fp1ITX\nYXilxmjLTh509Thdo/Eq4JJU7SqOin/XyRXIjHI9rKd5f3tFWZhvJNA29jzYFSiN\neluJPcBSW6woP8fD5VVyHjDnYJ4dW64ooQgO3W7BqTPcU79GrOxbUDXSki6WFZVz\nFYklftNuyk3nREOTo5E3KX1Xbivf/7M4koztepe0dhk8iEcFhq8=\n=o7eZ\n-----END PGP SIGNATURE-----",
        "payload": "tree dcfc4960eeb31b81c6fbcaedc31bd2424d4ecb28\nparent cf151cc68c95a8943e43e3fa4061e176262779e7\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1582413876 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610035628 +0200\n\ngui: Apply port mapping changes on dialog exit\n\nThis commit does not change behavior. It is a prerequisite for NAT-PMP\nsupport adding.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58e8364dcdc4e57b0caac09f8402e6535301de9b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/58e8364dcdc4e57b0caac09f8402e6535301de9b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58e8364dcdc4e57b0caac09f8402e6535301de9b/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cf151cc68c95a8943e43e3fa4061e176262779e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf151cc68c95a8943e43e3fa4061e176262779e7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cf151cc68c95a8943e43e3fa4061e176262779e7"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "d3677f0773b34423328ee27d6f44070a5e8aaf71",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58e8364dcdc4e57b0caac09f8402e6535301de9b/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58e8364dcdc4e57b0caac09f8402e6535301de9b/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=58e8364dcdc4e57b0caac09f8402e6535301de9b",
        "patch": "@@ -24,6 +24,7 @@\n #include <QIntValidator>\n #include <QLocale>\n #include <QMessageBox>\n+#include <QSettings>\n #include <QSystemTrayIcon>\n #include <QTimer>\n \n@@ -50,6 +51,10 @@ OptionsDialog::OptionsDialog(QWidget *parent, bool enableWallet) :\n #ifndef USE_UPNP\n     ui->mapPortUpnp->setEnabled(false);\n #endif\n+    connect(this, &QDialog::accepted, [this](){\n+        QSettings settings;\n+        model->node().mapPort(settings.value(\"fUseUPnP\").toBool());\n+    });\n \n     ui->proxyIp->setEnabled(false);\n     ui->proxyPort->setEnabled(false);"
      },
      {
        "sha": "81ebe3b8104abf294c5ae9fcb0d4cf7ad135d10a",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58e8364dcdc4e57b0caac09f8402e6535301de9b/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58e8364dcdc4e57b0caac09f8402e6535301de9b/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=58e8364dcdc4e57b0caac09f8402e6535301de9b",
        "patch": "@@ -355,7 +355,6 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             break;\n         case MapPortUPnP: // core option - can be changed on-the-fly\n             settings.setValue(\"fUseUPnP\", value.toBool());\n-            node().mapPort(value.toBool());\n             break;\n         case MinimizeOnClose:\n             fMinimizeOnClose = value.toBool();"
      }
    ]
  },
  {
    "sha": "a8d9f275d0ca64797cc89627f8003b48b3efef63",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOGQ5ZjI3NWQwY2E2NDc5N2NjODk2MjdmODAwM2I0OGIzZWZlZjYz",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-02-22T23:34:13Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-07T16:07:09Z"
      },
      "message": "net: Add libnatpmp support",
      "tree": {
        "sha": "69742a6269aad2f4b51d25410db8135726292e3e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/69742a6269aad2f4b51d25410db8135726292e3e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a8d9f275d0ca64797cc89627f8003b48b3efef63",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/3Ma0ACgkQQQEIES5+\nqB97kBAAkO4ecFjUqUFUxQmRFbDgZ7eS0dUwF51kpZMEUTuPoaRvwqXVTXv/9+64\nB+AKgFdu71lYIkAowoyyop56frG3X5SJqVZJmu4mNILKVQGJP81WBECpsPhbxr98\nTQCerhwmYvVqidNpOT5DFHxqEpvhR6pzkl9286dMNNWZxHath71odPqrX3VSo32S\nsfyZXegwVo7K1WlGSUdsVgldOt09AmNpG1dYw2DhooXDPRcI7AWpCBOhT9gSOSvf\nYWwICcYGTKPOH+7s7CvjefzfFnqWidWkEOG+OcNPVMJxY09U0ggGQWTa/58EvdAX\naNq2C5ijFN+qhPk+lDAGJUzEglPlDJ3gRXmt0FYJQ17CjpjZsIWzRBSt1esrdzPt\nOFMcpbf2wgDxRvBBqPzt6XeBA1wN02elwj1vOgyswlB9DFMa1D1XhhywM60YRPDw\noStdcoWTkDymik8viZxtbjPie8dBRGcc95VLKkhsw5tqxDhxRJ78bsIRzSQAVjTY\nGnQuNb5OSzqOlsPjuBlYJzQKbvuEp3iKKyqqKA+pLfY7FTq8DM1K/ahg6HSQLAfZ\n65a8DXc2eFPYj1nQ/4VylK/sFW+lIHoEREruqL2mCxRKGBo8fihFKhTimr6YhHdy\nZZSWS+uizki02uyT1bx3GuFj7AEl2BY6ZK/0QY9zWHgAqo9kFgs=\n=0jsT\n-----END PGP SIGNATURE-----",
        "payload": "tree 69742a6269aad2f4b51d25410db8135726292e3e\nparent 58e8364dcdc4e57b0caac09f8402e6535301de9b\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1582414453 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610035629 +0200\n\nnet: Add libnatpmp support\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8d9f275d0ca64797cc89627f8003b48b3efef63",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a8d9f275d0ca64797cc89627f8003b48b3efef63",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8d9f275d0ca64797cc89627f8003b48b3efef63/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "58e8364dcdc4e57b0caac09f8402e6535301de9b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58e8364dcdc4e57b0caac09f8402e6535301de9b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/58e8364dcdc4e57b0caac09f8402e6535301de9b"
      }
    ],
    "stats": {
      "total": 208,
      "additions": 195,
      "deletions": 13
    },
    "files": [
      {
        "sha": "567145fe47325c461968aba947a839f25bf646cf",
        "filename": "ci/test/00_setup_env_native_qt5.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8d9f275d0ca64797cc89627f8003b48b3efef63/ci/test/00_setup_env_native_qt5.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8d9f275d0ca64797cc89627f8003b48b3efef63/ci/test/00_setup_env_native_qt5.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_qt5.sh?ref=a8d9f275d0ca64797cc89627f8003b48b3efef63",
        "patch": "@@ -9,7 +9,7 @@ export LC_ALL=C.UTF-8\n export CONTAINER_NAME=ci_native_qt5\n export DOCKER_NAME_TAG=ubuntu:18.04  # Check that bionic gcc-7 can compile our c++17 and run our functional tests in python3, see doc/dependencies.md\n export PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools libdbus-1-dev libharfbuzz-dev\"\n-export DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\"\n+export DEP_OPTS=\"NO_QT=1 NO_UPNP=1 NO_NATPMP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\"\n export TEST_RUNNER_EXTRA=\"--previous-releases --coverage --extended --exclude feature_dbcrash\"  # Run extended tests so that coverage does not fail, but exclude the very slow dbcrash\n export RUN_SECURITY_TESTS=\"true\"\n export RUN_UNIT_TESTS_SEQUENTIAL=\"true\""
      },
      {
        "sha": "352e7aaee7e0836ad336231e9a59b738a48f37a2",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 47,
        "deletions": 0,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8d9f275d0ca64797cc89627f8003b48b3efef63/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8d9f275d0ca64797cc89627f8003b48b3efef63/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=a8d9f275d0ca64797cc89627f8003b48b3efef63",
        "patch": "@@ -143,6 +143,18 @@ AC_ARG_ENABLE([upnp-default],\n   [use_upnp_default=$enableval],\n   [use_upnp_default=no])\n \n+AC_ARG_WITH([natpmp],\n+            [AS_HELP_STRING([--with-natpmp],\n+                            [enable NAT-PMP (default is yes if libnatpmp is found)])],\n+            [use_natpmp=$withval],\n+            [use_natpmp=auto])\n+\n+AC_ARG_ENABLE([natpmp-default],\n+              [AS_HELP_STRING([--enable-natpmp-default],\n+                              [if NAT-PMP is enabled, turn it on at startup (default is no)])],\n+              [use_natpmp_default=$enableval],\n+              [use_natpmp_default=no])\n+\n AC_ARG_ENABLE(tests,\n     AS_HELP_STRING([--disable-tests],[do not compile tests (default is to compile)]),\n     [use_tests=$enableval],\n@@ -1203,6 +1215,7 @@ if test \"x$enable_fuzz\" = \"xyes\"; then\n   enable_wallet=no\n   use_bench=no\n   use_upnp=no\n+  use_natpmp=no\n   use_zmq=no\n \n   AX_CHECK_PREPROC_FLAG([-DABORT_ON_FAILED_ASSUME],[[DEBUG_CPPFLAGS=\"$DEBUG_CPPFLAGS -DABORT_ON_FAILED_ASSUME\"]],,[[$CXXFLAG_WERROR]])\n@@ -1300,6 +1313,13 @@ if test x$have_miniupnpc != xno; then\n fi\n fi\n \n+dnl Check for libnatpmp (optional).\n+if test \"x$use_natpmp\" != xno; then\n+  AC_CHECK_HEADERS([natpmp.h],\n+                   [AC_CHECK_LIB([natpmp], [initnatpmp], [NATPMP_LIBS=-lnatpmp], [have_natpmp=no])],\n+                   [have_natpmp=no])\n+fi\n+\n if test x$build_bitcoin_wallet$build_bitcoin_cli$build_bitcoin_tx$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononononono; then\n     use_boost=no\n else\n@@ -1558,6 +1578,31 @@ else\n   fi\n fi\n \n+dnl Enable NAT-PMP support.\n+AC_MSG_CHECKING([whether to build with support for NAT-PMP])\n+if test \"x$have_natpmp\" = xno; then\n+  if test \"x$use_natpmp\" = xyes; then\n+     AC_MSG_ERROR([NAT-PMP requested but cannot be built. Use --without-natpmp])\n+  fi\n+  AC_MSG_RESULT([no])\n+  use_natpmp=no\n+else\n+  if test \"x$use_natpmp\" != xno; then\n+    AC_MSG_RESULT([yes])\n+    AC_MSG_CHECKING([whether to build with NAT-PMP enabled by default])\n+    use_natpmp=yes\n+    natpmp_setting=0\n+    if test \"x$use_natpmp_default\" != xno; then\n+      use_natpmp_default=yes\n+      natpmp_setting=1\n+    fi\n+    AC_MSG_RESULT($use_natpmp_default)\n+    AC_DEFINE_UNQUOTED([USE_NATPMP], [$natpmp_setting], [NAT-PMP support not compiled if undefined, otherwise value (0 or 1) determines default state])\n+  else\n+    AC_MSG_RESULT([no])\n+  fi\n+fi\n+\n dnl these are only used when qt is enabled\n BUILD_TEST_QT=\"\"\n if test x$bitcoin_enable_qt != xno; then\n@@ -1704,6 +1749,7 @@ AC_SUBST(SQLITE_LIBS)\n AC_SUBST(TESTDEFS)\n AC_SUBST(MINIUPNPC_CPPFLAGS)\n AC_SUBST(MINIUPNPC_LIBS)\n+AC_SUBST(NATPMP_LIBS)\n AC_SUBST(EVENT_LIBS)\n AC_SUBST(EVENT_PTHREADS_LIBS)\n AC_SUBST(ZMQ_LIBS)\n@@ -1791,6 +1837,7 @@ else\n fi\n echo \"  with bench    = $use_bench\"\n echo \"  with upnp     = $use_upnp\"\n+echo \"  with natpmp   = $use_natpmp\"\n echo \"  use asm       = $use_asm\"\n echo \"  sanitizers    = $use_sanitizers\"\n echo \"  debug enabled = $enable_debug\""
      },
      {
        "sha": "0de98f8e3cd728486c97b43bf7377a9f9c89ea03",
        "filename": "depends/Makefile",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8d9f275d0ca64797cc89627f8003b48b3efef63/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8d9f275d0ca64797cc89627f8003b48b3efef63/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=a8d9f275d0ca64797cc89627f8003b48b3efef63",
        "patch": "@@ -37,6 +37,7 @@ NO_QR ?=\n NO_WALLET ?=\n NO_ZMQ ?=\n NO_UPNP ?=\n+NO_NATPMP ?=\n MULTIPROCESS ?=\n FALLBACK_DOWNLOAD_PATH ?= https://bitcoincore.org/depends-sources\n \n@@ -139,10 +140,12 @@ sqlite_packages_$(NO_SQLITE) = $(sqlite_packages)\n wallet_packages_$(NO_WALLET) = $(bdb_packages_) $(sqlite_packages_)\n \n upnp_packages_$(NO_UPNP) = $(upnp_packages)\n+natpmp_packages_$(NO_NATPMP) = $(natpmp_packages)\n+\n zmq_packages_$(NO_ZMQ) = $(zmq_packages)\n multiprocess_packages_$(MULTIPROCESS) = $(multiprocess_packages)\n \n-packages += $($(host_arch)_$(host_os)_packages) $($(host_os)_packages) $(qt_packages_) $(wallet_packages_) $(upnp_packages_)\n+packages += $($(host_arch)_$(host_os)_packages) $($(host_os)_packages) $(qt_packages_) $(wallet_packages_) $(upnp_packages_) $(natpmp_packages_)\n native_packages += $($(host_arch)_$(host_os)_native_packages) $($(host_os)_native_packages)\n \n ifneq ($(zmq_packages_),)\n@@ -200,6 +203,7 @@ $(host_prefix)/share/config.site : config.site.in $(host_prefix)/.stamp_$(final_\n             -e 's|@no_zmq@|$(NO_ZMQ)|' \\\n             -e 's|@no_wallet@|$(NO_WALLET)|' \\\n             -e 's|@no_upnp@|$(NO_UPNP)|' \\\n+            -e 's|@no_natpmp@|$(NO_NATPMP)|' \\\n             -e 's|@multiprocess@|$(MULTIPROCESS)|' \\\n             -e 's|@debug@|$(DEBUG)|' \\\n             $< > $@"
      },
      {
        "sha": "bbfbd4246050215aaa16ef81745ea13711bdfef6",
        "filename": "depends/config.site.in",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8d9f275d0ca64797cc89627f8003b48b3efef63/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8d9f275d0ca64797cc89627f8003b48b3efef63/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=a8d9f275d0ca64797cc89627f8003b48b3efef63",
        "patch": "@@ -46,6 +46,10 @@ if test -z $with_miniupnpc && test -n \"@no_upnp@\"; then\n   with_miniupnpc=no\n fi\n \n+if test -z $with_natpmp && test -n \"@no_natpmp@\"; then\n+  with_natpmp=no\n+fi\n+\n if test -z $with_gui && test -n \"@no_qt@\"; then\n   with_gui=no\n fi"
      },
      {
        "sha": "a24f201859a03aefdbb41122f2927a0a27516e01",
        "filename": "depends/packages/libnatpmp.mk",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8d9f275d0ca64797cc89627f8003b48b3efef63/depends/packages/libnatpmp.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8d9f275d0ca64797cc89627f8003b48b3efef63/depends/packages/libnatpmp.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libnatpmp.mk?ref=a8d9f275d0ca64797cc89627f8003b48b3efef63",
        "patch": "@@ -0,0 +1,19 @@\n+package=libnatpmp\n+$(package)_version=20150609\n+$(package)_download_path=https://miniupnp.tuxfamily.org/files/\n+$(package)_file_name=$(package)-$($(package)_version).tar.gz\n+$(package)_sha256_hash=e1aa9c4c4219bc06943d6b2130f664daee213fb262fcb94dd355815b8f4536b0\n+\n+define $(package)_set_vars\n+  $(package)_build_opts=CC=\"$($(package)_cc)\"\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) libnatpmp.a $($(package)_build_opts)\n+endef\n+\n+define $(package)_stage_cmds\n+  mkdir -p $($(package)_staging_prefix_dir)/include $($(package)_staging_prefix_dir)/lib &&\\\n+  install *.h $($(package)_staging_prefix_dir)/include &&\\\n+  install libnatpmp.a $($(package)_staging_prefix_dir)/lib\n+endef"
      },
      {
        "sha": "0f35ca0d2d53a606fb203992bfd925221e9a5439",
        "filename": "depends/packages/packages.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8d9f275d0ca64797cc89627f8003b48b3efef63/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8d9f275d0ca64797cc89627f8003b48b3efef63/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=a8d9f275d0ca64797cc89627f8003b48b3efef63",
        "patch": "@@ -16,6 +16,7 @@ sqlite_packages=sqlite\n zmq_packages=zeromq\n \n upnp_packages=miniupnpc\n+natpmp_packages=libnatpmp\n \n multiprocess_packages = libmultiprocess capnp\n multiprocess_native_packages = native_libmultiprocess native_capnp"
      },
      {
        "sha": "d5975ccc792149b8619871cb7c97a50af78aa0d4",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8d9f275d0ca64797cc89627f8003b48b3efef63/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8d9f275d0ca64797cc89627f8003b48b3efef63/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=a8d9f275d0ca64797cc89627f8003b48b3efef63",
        "patch": "@@ -598,7 +598,7 @@ bitcoin_bin_ldadd = \\\n   $(LIBMEMENV) \\\n   $(LIBSECP256K1)\n \n-bitcoin_bin_ldadd += $(BOOST_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS) $(SQLITE_LIBS)\n+bitcoin_bin_ldadd += $(BOOST_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(NATPMP_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS) $(SQLITE_LIBS)\n \n bitcoind_SOURCES = $(bitcoin_daemon_sources)\n bitcoind_CPPFLAGS = $(bitcoin_bin_cppflags)"
      },
      {
        "sha": "56b8ca8ce686dfd5206ec3d03277e98516a532db",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8d9f275d0ca64797cc89627f8003b48b3efef63/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8d9f275d0ca64797cc89627f8003b48b3efef63/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=a8d9f275d0ca64797cc89627f8003b48b3efef63",
        "patch": "@@ -74,7 +74,7 @@ bench_bench_bitcoin_SOURCES += bench/coin_selection.cpp\n bench_bench_bitcoin_SOURCES += bench/wallet_balance.cpp\n endif\n \n-bench_bench_bitcoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(MINIUPNPC_LIBS) $(SQLITE_LIBS)\n+bench_bench_bitcoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(MINIUPNPC_LIBS) $(NATPMP_LIBS) $(SQLITE_LIBS)\n bench_bench_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)\n \n CLEAN_BITCOIN_BENCH = bench/*.gcda bench/*.gcno $(GENERATED_BENCH_FILES)"
      },
      {
        "sha": "3d41d203d3c279265475b2b5eb4e9a7850f4da17",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8d9f275d0ca64797cc89627f8003b48b3efef63/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8d9f275d0ca64797cc89627f8003b48b3efef63/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=a8d9f275d0ca64797cc89627f8003b48b3efef63",
        "patch": "@@ -320,7 +320,7 @@ if ENABLE_ZMQ\n bitcoin_qt_ldadd += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n bitcoin_qt_ldadd += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) \\\n-  $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n+  $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(NATPMP_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(SQLITE_LIBS)\n bitcoin_qt_ldflags = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)\n bitcoin_qt_libtoolflags = $(AM_LIBTOOLFLAGS) --tag CXX"
      },
      {
        "sha": "a6a857d9520805541b9cf3e30d007e5f7ed263be",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8d9f275d0ca64797cc89627f8003b48b3efef63/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8d9f275d0ca64797cc89627f8003b48b3efef63/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=a8d9f275d0ca64797cc89627f8003b48b3efef63",
        "patch": "@@ -55,7 +55,7 @@ qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) \\\n   $(LIBLEVELDB_SSE42) $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n-  $(QR_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n+  $(QR_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(NATPMP_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(SQLITE_LIBS)\n qt_test_test_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)\n qt_test_test_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)"
      },
      {
        "sha": "4abf388bcc1123abcbb8ee5a9e62f4f446c92f9a",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8d9f275d0ca64797cc89627f8003b48b3efef63/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8d9f275d0ca64797cc89627f8003b48b3efef63/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=a8d9f275d0ca64797cc89627f8003b48b3efef63",
        "patch": "@@ -167,7 +167,7 @@ test_test_bitcoin_LDADD += $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_C\n   $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1) $(EVENT_LIBS) $(EVENT_PTHREADS_LIBS)\n test_test_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n \n-test_test_bitcoin_LDADD += $(BDB_LIBS) $(MINIUPNPC_LIBS) $(SQLITE_LIBS)\n+test_test_bitcoin_LDADD += $(BDB_LIBS) $(MINIUPNPC_LIBS) $(NATPMP_LIBS) $(SQLITE_LIBS)\n test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS) -static\n \n if ENABLE_ZMQ"
      },
      {
        "sha": "f3ede623a3664f82fd663e809f9e6d8cbf3af41c",
        "filename": "src/mapport.cpp",
        "status": "modified",
        "additions": 111,
        "deletions": 5,
        "changes": 116,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8d9f275d0ca64797cc89627f8003b48b3efef63/src/mapport.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8d9f275d0ca64797cc89627f8003b48b3efef63/src/mapport.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/mapport.cpp?ref=a8d9f275d0ca64797cc89627f8003b48b3efef63",
        "patch": "@@ -16,14 +16,19 @@\n #include <threadinterrupt.h>\n #include <util/system.h>\n \n+#ifdef USE_NATPMP\n+#include <compat.h>\n+#include <natpmp.h>\n+#endif // USE_NATPMP\n+\n #ifdef USE_UPNP\n #include <miniupnpc/miniupnpc.h>\n #include <miniupnpc/upnpcommands.h>\n #include <miniupnpc/upnperrors.h>\n // The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n // with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n-#endif\n+#endif // USE_UPNP\n \n #include <atomic>\n #include <cassert>\n@@ -32,7 +37,7 @@ static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\"\n #include <string>\n #include <thread>\n \n-#ifdef USE_UPNP\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n static CThreadInterrupt g_mapport_interrupt;\n static std::thread g_mapport_thread;\n static std::atomic_uint g_mapport_target_proto{MapPortProtoFlag::NONE};\n@@ -41,6 +46,106 @@ using namespace std::chrono_literals;\n static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD{20min};\n static constexpr auto PORT_MAPPING_RETRY_PERIOD{5min};\n \n+#ifdef USE_NATPMP\n+static uint16_t g_mapport_external_port = 0;\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"natpmp: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+    } else {\n+        LogPrintf(\"natpmp: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+                LogPrintf(\"natpmp: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"natpmp: Port mapping failed.\\n\");\n+            }\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+    } else {\n+        LogPrintf(\"natpmp: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ProcessNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;\n+        const uint16_t private_port = GetListenPort();\n+        do {\n+            ret = NatpmpMapping(&natpmp, external_ipv4_addr, private_port, external_ip_discovered);\n+        } while (ret && g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+        g_mapport_interrupt.reset();\n+\n+        const int r_send = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, private_port, g_mapport_external_port, /* remove a port mapping */ 0);\n+        g_mapport_external_port = 0;\n+        if (r_send == 12 /* OK */) {\n+            LogPrintf(\"natpmp: Port mapping removed successfully.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: sendnewportmappingrequest(0) failed with %d error.\\n\", r_send);\n+        }\n+    }\n+\n+    closenatpmp(&natpmp);\n+    return ret;\n+}\n+#endif // USE_NATPMP\n+\n+#ifdef USE_UPNP\n static bool ProcessUpnp()\n {\n     bool ret = false;\n@@ -111,6 +216,7 @@ static bool ProcessUpnp()\n \n     return ret;\n }\n+#endif // USE_UPNP\n \n static void ThreadMapPort()\n {\n@@ -123,7 +229,7 @@ void StartThreadMapPort()\n {\n     if (!g_mapport_thread.joinable()) {\n         assert(!g_mapport_interrupt);\n-        g_mapport_thread = std::thread((std::bind(&TraceThread<void (*)()>, \"mapport\", &ThreadMapPort)));\n+        g_mapport_thread = std::thread(std::bind(&TraceThread<void (*)()>, \"mapport\", &ThreadMapPort));\n     }\n }\n \n@@ -167,7 +273,7 @@ void StopMapPort()\n     }\n }\n \n-#else\n+#else  // #if defined(USE_NATPMP) || defined(USE_UPNP)\n void StartMapPort(bool use_upnp)\n {\n     // Intentionally left blank.\n@@ -180,4 +286,4 @@ void StopMapPort()\n {\n     // Intentionally left blank.\n }\n-#endif\n+#endif // #if defined(USE_NATPMP) || defined(USE_UPNP)"
      },
      {
        "sha": "2cdde775d3d46d64962459af7e056eab458d3e24",
        "filename": "src/mapport.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8d9f275d0ca64797cc89627f8003b48b3efef63/src/mapport.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8d9f275d0ca64797cc89627f8003b48b3efef63/src/mapport.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/mapport.h?ref=a8d9f275d0ca64797cc89627f8003b48b3efef63",
        "patch": "@@ -15,6 +15,7 @@ static const bool DEFAULT_UPNP = false;\n enum MapPortProtoFlag : unsigned int {\n     NONE = 0x00,\n     UPNP = 0x01,\n+    NAT_PMP = 0x02,\n };\n \n void StartMapPort(bool use_upnp);"
      },
      {
        "sha": "6c167954df28fe5c99e9c17889f002e630ab6caa",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8d9f275d0ca64797cc89627f8003b48b3efef63/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8d9f275d0ca64797cc89627f8003b48b3efef63/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=a8d9f275d0ca64797cc89627f8003b48b3efef63",
        "patch": "@@ -182,7 +182,7 @@ enum\n     LOCAL_NONE,   // unknown\n     LOCAL_IF,     // address a local interface listens on\n     LOCAL_BIND,   // address explicit bound to\n-    LOCAL_MAPPED, // address reported by UPnP\n+    LOCAL_MAPPED, // address reported by UPnP or NAT-PMP\n     LOCAL_MANUAL, // address explicitly specified (-externalip=)\n \n     LOCAL_MAX"
      }
    ]
  },
  {
    "sha": "28acffd9d53ec437e908abb8c84497a4f41b91ed",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOGFjZmZkOWQ1M2VjNDM3ZTkwOGFiYjhjODQ0OTdhNGY0MWI5MWVk",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-02-22T23:51:45Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-07T16:07:09Z"
      },
      "message": "net: Add NAT-PMP to port mapping loop",
      "tree": {
        "sha": "642ae90c83a0afc5ba32c4445d553aa0486192a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/642ae90c83a0afc5ba32c4445d553aa0486192a9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/28acffd9d53ec437e908abb8c84497a4f41b91ed",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/3Ma0ACgkQQQEIES5+\nqB+8hQ/+NQWa/B6o10or0lGBKYIDdCdObZ2FlCJJ+wIatMDeNA+2Gm+ZYqOCDpMm\nxbJ1/NV0BvkXge/4demA2B4u6aN4OBTVBEihjetXxg/00O1B39O3OC/Ru6UxQjKg\nwMWIiMnl2k0FDz4SsuyoeKLtGk79EKv2JPv5YmG8u1XuvQrqCAtr3Oh8L5jaGNr9\npU509HU6bE/v/RP8Df6QyrLITS7Gp0aF4fLpOgoRkKLxVzBTy0cDILoG7qnZxF26\nBIoJw+m11M0Tf1xZNeK892+by+wbvTDfp1ad+pS/pjpgk1HtOrdI5Gbyit9iJgpD\nQ44UIHDQr+E51yMzuAIOQ2kYwxdbOpULgYkDSjLnMirtHa6di8YqSUduxydTcm7N\nqFuPhpO6p9xCgSWqtU5rW7Dc0M7vFN0emjL09TebTj2efIBrnPvRbfArdjmEP+/c\n3cqJdopJagGfcjG5EnSWHiwZ+0+O+oKSEO4mXBUvhJiHaX1VjmfogRVYTiPHaiAp\n5PWxvZLdMeDWX1Sj6yarStjylbJakjrVvMDIxGDOjCkJwyhpaPBmjEa7FLJvKMLR\nqf1/n41csntA2YL0SQQKXJVPN6vsWRokA1RE1VfQh1wV/Myj2nRSnPUJDTYdbFFP\nPQjBOkg2R4WnIs5lJgvfVjrbhUb2JX2gSfdGtV4UCofkFsCxpeI=\n=5pX4\n-----END PGP SIGNATURE-----",
        "payload": "tree 642ae90c83a0afc5ba32c4445d553aa0486192a9\nparent a8d9f275d0ca64797cc89627f8003b48b3efef63\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1582415505 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610035629 +0200\n\nnet: Add NAT-PMP to port mapping loop\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28acffd9d53ec437e908abb8c84497a4f41b91ed",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/28acffd9d53ec437e908abb8c84497a4f41b91ed",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28acffd9d53ec437e908abb8c84497a4f41b91ed/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a8d9f275d0ca64797cc89627f8003b48b3efef63",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8d9f275d0ca64797cc89627f8003b48b3efef63",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a8d9f275d0ca64797cc89627f8003b48b3efef63"
      }
    ],
    "stats": {
      "total": 60,
      "additions": 53,
      "deletions": 7
    },
    "files": [
      {
        "sha": "bb5cc477975c173481e6c2b40877f870b428d827",
        "filename": "src/mapport.cpp",
        "status": "modified",
        "additions": 53,
        "deletions": 7,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/28acffd9d53ec437e908abb8c84497a4f41b91ed/src/mapport.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/28acffd9d53ec437e908abb8c84497a4f41b91ed/src/mapport.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/mapport.cpp?ref=28acffd9d53ec437e908abb8c84497a4f41b91ed",
        "patch": "@@ -40,7 +40,8 @@ static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\"\n #if defined(USE_NATPMP) || defined(USE_UPNP)\n static CThreadInterrupt g_mapport_interrupt;\n static std::thread g_mapport_thread;\n-static std::atomic_uint g_mapport_target_proto{MapPortProtoFlag::NONE};\n+static std::atomic_uint g_mapport_enabled_protos{MapPortProtoFlag::NONE};\n+static std::atomic<MapPortProtoFlag> g_mapport_current_proto{MapPortProtoFlag::NONE};\n \n using namespace std::chrono_literals;\n static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD{20min};\n@@ -220,9 +221,34 @@ static bool ProcessUpnp()\n \n static void ThreadMapPort()\n {\n+    bool ok;\n     do {\n-        if (ProcessUpnp()) return;\n-    } while (g_mapport_interrupt.sleep_for(PORT_MAPPING_RETRY_PERIOD));\n+        ok = false;\n+\n+#ifdef USE_UPNP\n+        // High priority protocol.\n+        if (g_mapport_enabled_protos & MapPortProtoFlag::UPNP) {\n+            g_mapport_current_proto = MapPortProtoFlag::UPNP;\n+            ok = ProcessUpnp();\n+            if (ok) continue;\n+        }\n+#endif // USE_UPNP\n+\n+#ifdef USE_NATPMP\n+        // Low priority protocol.\n+        if (g_mapport_enabled_protos & MapPortProtoFlag::NAT_PMP) {\n+            g_mapport_current_proto = MapPortProtoFlag::NAT_PMP;\n+            ok = ProcessNatpmp();\n+            if (ok) continue;\n+        }\n+#endif // USE_NATPMP\n+\n+        g_mapport_current_proto = MapPortProtoFlag::NONE;\n+        if (g_mapport_enabled_protos == MapPortProtoFlag::NONE) {\n+            return;\n+        }\n+\n+    } while (ok || g_mapport_interrupt.sleep_for(PORT_MAPPING_RETRY_PERIOD));\n }\n \n void StartThreadMapPort()\n@@ -235,20 +261,39 @@ void StartThreadMapPort()\n \n static void DispatchMapPort()\n {\n-    if (g_mapport_target_proto == MapPortProtoFlag::UPNP) {\n+    if (g_mapport_current_proto == MapPortProtoFlag::NONE && g_mapport_enabled_protos == MapPortProtoFlag::NONE) {\n+        return;\n+    }\n+\n+    if (g_mapport_current_proto == MapPortProtoFlag::NONE && g_mapport_enabled_protos != MapPortProtoFlag::NONE) {\n         StartThreadMapPort();\n-    } else {\n+        return;\n+    }\n+\n+    if (g_mapport_current_proto != MapPortProtoFlag::NONE && g_mapport_enabled_protos == MapPortProtoFlag::NONE) {\n         InterruptMapPort();\n         StopMapPort();\n+        return;\n+    }\n+\n+    if (g_mapport_enabled_protos & g_mapport_current_proto) {\n+        // Enabling another protocol does not cause switching from the currently used one.\n+        return;\n     }\n+\n+    assert(g_mapport_thread.joinable());\n+    assert(!g_mapport_interrupt);\n+    // Interrupt a protocol-specific loop in the ThreadUpnp() or in the ThreadNatpmp()\n+    // to force trying the next protocol in the ThreadMapPort() loop.\n+    g_mapport_interrupt();\n }\n \n static void MapPortProtoSetEnabled(MapPortProtoFlag proto, bool enabled)\n {\n     if (enabled) {\n-        g_mapport_target_proto |= proto;\n+        g_mapport_enabled_protos |= proto;\n     } else {\n-        g_mapport_target_proto &= ~proto;\n+        g_mapport_enabled_protos &= ~proto;\n     }\n }\n \n@@ -260,6 +305,7 @@ void StartMapPort(bool use_upnp)\n \n void InterruptMapPort()\n {\n+    g_mapport_enabled_protos = MapPortProtoFlag::NONE;\n     if (g_mapport_thread.joinable()) {\n         g_mapport_interrupt();\n     }"
      }
    ]
  },
  {
    "sha": "a39f7336a3b493d46a4486c4c94fdca1b3151370",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMzlmNzMzNmEzYjQ5M2Q0NmE0NDg2YzRjOTRmZGNhMWIzMTUxMzcw",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-02-23T00:12:19Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-07T16:07:09Z"
      },
      "message": "net: Add -natpmp command line option",
      "tree": {
        "sha": "4adf1ae61b5b02f5081b5dbcee09b64503b0947f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4adf1ae61b5b02f5081b5dbcee09b64503b0947f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a39f7336a3b493d46a4486c4c94fdca1b3151370",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/3Ma0ACgkQQQEIES5+\nqB/MkA/8D7FUJBJNNr/NY81W15LLBe/G+SrBiZZnsDxguToENusVgDBRlrP4fjL/\nio3kv8mhNXj9mv78ON37zuNbqHE1gnDUsM9SyjifNatPjNUSEufwuBvF45Ptw+eN\njO4/t6O2gx24Ehlaam/0mrnBxs//CulITSu/KNSwXoU7+Z46r8Uv8QRRhVDtW7D0\nHCPFPEFqRk3SDnFerEZZROPI/4K6PU0h5me29gNy9rR16/Dy4wIVM4oVHUAsSdX6\npkjPfF1xv3JpaX3/oGurzFn406r5oOiR8Bs4rKrwXGGTZH027G8v5cpNYu2YbbWN\n2xYzhZrdxGOgIllmQg1XAjOEw0e1ELprxAh+NxtFXjOgtPNjqHxNTY0FcknLwgCu\nM11/2FQU5wfjPdkYGPL+Hbu2QTyESTZXBi6xKr4QZNcX58bcP3Jxui/eZwgSWxGA\neaCSkpcIwTXi5ak7PCJPriWR1csEVwL8JrZJtiGXvakr+GlgDXG46icemtBtDWnh\nZ73o3NkPE1cYloyX+XrZ6uG7Ooqq4s7nZBfLgnw08XnnZaniON1iKSZT+E9Y6R+w\ntkcIQ4tGPB3D4UmnTfNdHFoStE4W71wLUMDwSGDLootiuiJnIIrjIvJEhVtLao1i\nJ21M3Q/jGfiYP0OhsGEsxxcO/RvumdWs557GOaGiPCQBc10dHIY=\n=VU45\n-----END PGP SIGNATURE-----",
        "payload": "tree 4adf1ae61b5b02f5081b5dbcee09b64503b0947f\nparent 28acffd9d53ec437e908abb8c84497a4f41b91ed\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1582416739 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610035629 +0200\n\nnet: Add -natpmp command line option\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a39f7336a3b493d46a4486c4c94fdca1b3151370",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a39f7336a3b493d46a4486c4c94fdca1b3151370",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a39f7336a3b493d46a4486c4c94fdca1b3151370/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "28acffd9d53ec437e908abb8c84497a4f41b91ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28acffd9d53ec437e908abb8c84497a4f41b91ed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/28acffd9d53ec437e908abb8c84497a4f41b91ed"
      }
    ],
    "stats": {
      "total": 63,
      "additions": 49,
      "deletions": 14
    },
    "files": [
      {
        "sha": "9a63fe0e030cc3af8db79f4cbc8c64fad2393217",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 3,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a39f7336a3b493d46a4486c4c94fdca1b3151370/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a39f7336a3b493d46a4486c4c94fdca1b3151370/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=a39f7336a3b493d46a4486c4c94fdca1b3151370",
        "patch": "@@ -469,6 +469,11 @@ void SetupServerArgs(NodeContext& node)\n #else\n     hidden_args.emplace_back(\"-upnp\");\n #endif\n+#ifdef USE_NATPMP\n+    argsman.AddArg(\"-natpmp\", strprintf(\"Use NAT-PMP to map the listening port (default: %s)\", DEFAULT_NATPMP ? \"1 when listening and no -proxy\" : \"0\"), ArgsManager::ALLOW_BOOL, OptionsCategory::CONNECTION);\n+#else\n+    hidden_args.emplace_back(\"-natpmp\");\n+#endif // USE_NATPMP\n     argsman.AddArg(\"-whitebind=<[permissions@]addr>\", \"Bind to the given address and add permission flags to the peers connecting to it. \"\n         \"Use [host]:port notation for IPv6. Allowed permissions: \" + Join(NET_PERMISSIONS_DOC, \", \") + \". \"\n         \"Specify multiple permissions separated by commas (default: download,noban,mempool,relay). Can be specified multiple times.\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n@@ -813,10 +818,13 @@ void InitParameterInteraction(ArgsManager& args)\n         // to protect privacy, do not listen by default if a default proxy server is specified\n         if (args.SoftSetBoolArg(\"-listen\", false))\n             LogPrintf(\"%s: parameter interaction: -proxy set -> setting -listen=0\\n\", __func__);\n-        // to protect privacy, do not use UPNP when a proxy is set. The user may still specify -listen=1\n+        // to protect privacy, do not map ports when a proxy is set. The user may still specify -listen=1\n         // to listen locally, so don't rely on this happening through -listen below.\n         if (args.SoftSetBoolArg(\"-upnp\", false))\n             LogPrintf(\"%s: parameter interaction: -proxy set -> setting -upnp=0\\n\", __func__);\n+        if (args.SoftSetBoolArg(\"-natpmp\", false)) {\n+            LogPrintf(\"%s: parameter interaction: -proxy set -> setting -natpmp=0\\n\", __func__);\n+        }\n         // to protect privacy, do not discover addresses by default\n         if (args.SoftSetBoolArg(\"-discover\", false))\n             LogPrintf(\"%s: parameter interaction: -proxy set -> setting -discover=0\\n\", __func__);\n@@ -826,6 +834,9 @@ void InitParameterInteraction(ArgsManager& args)\n         // do not map ports or try to retrieve public IP when not listening (pointless)\n         if (args.SoftSetBoolArg(\"-upnp\", false))\n             LogPrintf(\"%s: parameter interaction: -listen=0 -> setting -upnp=0\\n\", __func__);\n+        if (args.SoftSetBoolArg(\"-natpmp\", false)) {\n+            LogPrintf(\"%s: parameter interaction: -listen=0 -> setting -natpmp=0\\n\", __func__);\n+        }\n         if (args.SoftSetBoolArg(\"-discover\", false))\n             LogPrintf(\"%s: parameter interaction: -listen=0 -> setting -discover=0\\n\", __func__);\n         if (args.SoftSetBoolArg(\"-listenonion\", false))\n@@ -1899,8 +1910,8 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n \n     Discover();\n \n-    // Map ports with UPnP\n-    StartMapPort(args.GetBoolArg(\"-upnp\", DEFAULT_UPNP));\n+    // Map ports with UPnP or NAT-PMP.\n+    StartMapPort(args.GetBoolArg(\"-upnp\", DEFAULT_UPNP), gArgs.GetBoolArg(\"-natpmp\", DEFAULT_NATPMP));\n \n     CConnman::Options connOptions;\n     connOptions.nLocalServices = nLocalServices;"
      },
      {
        "sha": "15f7ef6256462d499c2591a603b46a0d9819cd59",
        "filename": "src/interfaces/node.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a39f7336a3b493d46a4486c4c94fdca1b3151370/src/interfaces/node.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a39f7336a3b493d46a4486c4c94fdca1b3151370/src/interfaces/node.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.h?ref=a39f7336a3b493d46a4486c4c94fdca1b3151370",
        "patch": "@@ -82,7 +82,7 @@ class Node\n     virtual bool shutdownRequested() = 0;\n \n     //! Map port.\n-    virtual void mapPort(bool use_upnp) = 0;\n+    virtual void mapPort(bool use_upnp, bool use_natpmp) = 0;\n \n     //! Get proxy.\n     virtual bool getProxy(Network net, proxyType& proxy_info) = 0;"
      },
      {
        "sha": "2df4ce45d2fdc4038ec1a1d73bba8d108a920288",
        "filename": "src/mapport.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a39f7336a3b493d46a4486c4c94fdca1b3151370/src/mapport.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a39f7336a3b493d46a4486c4c94fdca1b3151370/src/mapport.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/mapport.cpp?ref=a39f7336a3b493d46a4486c4c94fdca1b3151370",
        "patch": "@@ -297,9 +297,10 @@ static void MapPortProtoSetEnabled(MapPortProtoFlag proto, bool enabled)\n     }\n }\n \n-void StartMapPort(bool use_upnp)\n+void StartMapPort(bool use_upnp, bool use_natpmp)\n {\n     MapPortProtoSetEnabled(MapPortProtoFlag::UPNP, use_upnp);\n+    MapPortProtoSetEnabled(MapPortProtoFlag::NAT_PMP, use_natpmp);\n     DispatchMapPort();\n }\n \n@@ -320,7 +321,7 @@ void StopMapPort()\n }\n \n #else  // #if defined(USE_NATPMP) || defined(USE_UPNP)\n-void StartMapPort(bool use_upnp)\n+void StartMapPort(bool use_upnp, bool use_natpmp)\n {\n     // Intentionally left blank.\n }"
      },
      {
        "sha": "279d65167f509902ef1ce4648ca03a61c19d917c",
        "filename": "src/mapport.h",
        "status": "modified",
        "additions": 10,
        "deletions": 5,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a39f7336a3b493d46a4486c4c94fdca1b3151370/src/mapport.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a39f7336a3b493d46a4486c4c94fdca1b3151370/src/mapport.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/mapport.h?ref=a39f7336a3b493d46a4486c4c94fdca1b3151370",
        "patch": "@@ -5,20 +5,25 @@\n #ifndef BITCOIN_MAPPORT_H\n #define BITCOIN_MAPPORT_H\n \n-/** -upnp default */\n #ifdef USE_UPNP\n-static const bool DEFAULT_UPNP = USE_UPNP;\n+static constexpr bool DEFAULT_UPNP = USE_UPNP;\n #else\n-static const bool DEFAULT_UPNP = false;\n-#endif\n+static constexpr bool DEFAULT_UPNP = false;\n+#endif // USE_UPNP\n+\n+#ifdef USE_NATPMP\n+static constexpr bool DEFAULT_NATPMP = USE_NATPMP;\n+#else\n+static constexpr bool DEFAULT_NATPMP = false;\n+#endif // USE_NATPMP\n \n enum MapPortProtoFlag : unsigned int {\n     NONE = 0x00,\n     UPNP = 0x01,\n     NAT_PMP = 0x02,\n };\n \n-void StartMapPort(bool use_upnp);\n+void StartMapPort(bool use_upnp, bool use_natpmp);\n void InterruptMapPort();\n void StopMapPort();\n "
      },
      {
        "sha": "e07eaa33d81655ce47fe44f4747873ae1fa5751f",
        "filename": "src/node/interfaces.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a39f7336a3b493d46a4486c4c94fdca1b3151370/src/node/interfaces.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a39f7336a3b493d46a4486c4c94fdca1b3151370/src/node/interfaces.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/interfaces.cpp?ref=a39f7336a3b493d46a4486c4c94fdca1b3151370",
        "patch": "@@ -94,7 +94,7 @@ class NodeImpl : public Node\n         }\n     }\n     bool shutdownRequested() override { return ShutdownRequested(); }\n-    void mapPort(bool use_upnp) override { StartMapPort(use_upnp); }\n+    void mapPort(bool use_upnp, bool use_natpmp) override { StartMapPort(use_upnp, use_natpmp); }\n     bool getProxy(Network net, proxyType& proxy_info) override { return GetProxy(net, proxy_info); }\n     size_t getNodeCount(CConnman::NumConnections flags) override\n     {"
      },
      {
        "sha": "4057712a41ece2eda5660abf22adb2c174f78656",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a39f7336a3b493d46a4486c4c94fdca1b3151370/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a39f7336a3b493d46a4486c4c94fdca1b3151370/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=a39f7336a3b493d46a4486c4c94fdca1b3151370",
        "patch": "@@ -53,7 +53,7 @@ OptionsDialog::OptionsDialog(QWidget *parent, bool enableWallet) :\n #endif\n     connect(this, &QDialog::accepted, [this](){\n         QSettings settings;\n-        model->node().mapPort(settings.value(\"fUseUPnP\").toBool());\n+        model->node().mapPort(settings.value(\"fUseUPnP\").toBool(), settings.value(\"fUseNatpmp\").toBool());\n     });\n \n     ui->proxyIp->setEnabled(false);"
      },
      {
        "sha": "1e0391a35c54630ab5bcd813871f25f432f9a464",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 1,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a39f7336a3b493d46a4486c4c94fdca1b3151370/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a39f7336a3b493d46a4486c4c94fdca1b3151370/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=a39f7336a3b493d46a4486c4c94fdca1b3151370",
        "patch": "@@ -124,6 +124,13 @@ void OptionsModel::Init(bool resetSettings)\n     if (!gArgs.SoftSetBoolArg(\"-upnp\", settings.value(\"fUseUPnP\").toBool()))\n         addOverriddenOption(\"-upnp\");\n \n+    if (!settings.contains(\"fUseNatpmp\")) {\n+        settings.setValue(\"fUseNatpmp\", DEFAULT_NATPMP);\n+    }\n+    if (!gArgs.SoftSetBoolArg(\"-natpmp\", settings.value(\"fUseNatpmp\").toBool())) {\n+        addOverriddenOption(\"-natpmp\");\n+    }\n+\n     if (!settings.contains(\"fListen\"))\n         settings.setValue(\"fListen\", DEFAULT_LISTEN);\n     if (!gArgs.SoftSetBoolArg(\"-listen\", settings.value(\"fListen\").toBool()))\n@@ -283,7 +290,13 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n             return settings.value(\"fUseUPnP\");\n #else\n             return false;\n-#endif\n+#endif // USE_UPNP\n+        case MapPortNatpmp:\n+#ifdef USE_NATPMP\n+            return settings.value(\"fUseNatpmp\");\n+#else\n+            return false;\n+#endif // USE_NATPMP\n         case MinimizeOnClose:\n             return fMinimizeOnClose;\n \n@@ -356,6 +369,9 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n         case MapPortUPnP: // core option - can be changed on-the-fly\n             settings.setValue(\"fUseUPnP\", value.toBool());\n             break;\n+        case MapPortNatpmp: // core option - can be changed on-the-fly\n+            settings.setValue(\"fUseNatpmp\", value.toBool());\n+            break;\n         case MinimizeOnClose:\n             fMinimizeOnClose = value.toBool();\n             settings.setValue(\"fMinimizeOnClose\", fMinimizeOnClose);"
      },
      {
        "sha": "f7171951a108629c147d35128fac581fce33c349",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a39f7336a3b493d46a4486c4c94fdca1b3151370/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a39f7336a3b493d46a4486c4c94fdca1b3151370/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=a39f7336a3b493d46a4486c4c94fdca1b3151370",
        "patch": "@@ -48,6 +48,7 @@ class OptionsModel : public QAbstractListModel\n         ShowTrayIcon,           // bool\n         MinimizeToTray,         // bool\n         MapPortUPnP,            // bool\n+        MapPortNatpmp,          // bool\n         MinimizeOnClose,        // bool\n         ProxyUse,               // bool\n         ProxyIP,                // QString"
      },
      {
        "sha": "b3eb2d61a705dc4241cdc7ad5cbda2be75086bbc",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a39f7336a3b493d46a4486c4c94fdca1b3151370/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a39f7336a3b493d46a4486c4c94fdca1b3151370/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=a39f7336a3b493d46a4486c4c94fdca1b3151370",
        "patch": "@@ -362,6 +362,7 @@ def initialize_datadir(dirname, n, chain):\n         f.write(\"listenonion=0\\n\")\n         f.write(\"printtoconsole=0\\n\")\n         f.write(\"upnp=0\\n\")\n+        f.write(\"natpmp=0\\n\")\n         f.write(\"shrinkdebugfile=0\\n\")\n         os.makedirs(os.path.join(datadir, 'stderr'), exist_ok=True)\n         os.makedirs(os.path.join(datadir, 'stdout'), exist_ok=True)"
      }
    ]
  },
  {
    "sha": "5a0185b6c9c838290103314916190a0330ed9a82",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YTAxODViNmM5YzgzODI5MDEwMzMxNDkxNjE5MGEwMzMwZWQ5YTgy",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-02-23T00:25:21Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-07T16:07:10Z"
      },
      "message": "gui: Add NAT-PMP network option",
      "tree": {
        "sha": "eeb3e1eec3249d4fc22080604a5dc004af554057",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eeb3e1eec3249d4fc22080604a5dc004af554057"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5a0185b6c9c838290103314916190a0330ed9a82",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/3Ma4ACgkQQQEIES5+\nqB9jig/+Jz/MBFSG79YrUCI1h3aAiZIEZGmHk5GE26v7ZZlY+zsfPU7M9m1Bv7IC\nwrNVsuOwylILFT0d4e98bWkz131y5j8EI2ymf6VX+FBS02qZcWBgmIogq1fuMkZR\nP4KKt2f96hjGGJyS9YhzkOZCmCyhlC1sqt84yfmSfMNWQZxmQR12JuoRSz/q6Trt\n4zhnQYoOkfJDMpWm07JqjrKZv+eNLYYBb9sDdpcmhfCx10xHWP1d3YIuHyQtRntw\nW8xw2TQyjfNuh7xzwNv2Lpc4HkjL8QS+U2fz3MPsGHloKTREfCmiBgmGiZPqjG8o\n9MpDjUezNDPz5ZQzLngTHGFukCZB+rupGDA3MU12DeCuegTeUQxr51KwurXjxXsW\nUcLIs3zuzA5H+b0ZEaNl9MZKhHLNeBdRVDEGYpJH+j7A4fjH/CDDMznPmiUJW6Ux\nS7s3pid7OjuSVWbeHoovILeLPU91ezs6+QKj3ELowmBSF3RshaB3zvXlwUpRCvSJ\n5zGwf1O9kUS5EDelI9jj4Tc9/eis90gma9Zxr8axptsbErUvBreXb4EU9joLzd7r\nuuAPaCOqoCa7R4kILGbYHHvIoLBARi6ssXeWyoYnBUXFZzxVde1k0JeDzk747Gfk\nj/HanrVuK4Ba1U+GpItQAo8sXVhG8bB+VQqp3hfgIMjTt/iukgo=\n=fcIW\n-----END PGP SIGNATURE-----",
        "payload": "tree eeb3e1eec3249d4fc22080604a5dc004af554057\nparent a39f7336a3b493d46a4486c4c94fdca1b3151370\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1582417521 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610035630 +0200\n\ngui: Add NAT-PMP network option\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a0185b6c9c838290103314916190a0330ed9a82",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5a0185b6c9c838290103314916190a0330ed9a82",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a0185b6c9c838290103314916190a0330ed9a82/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a39f7336a3b493d46a4486c4c94fdca1b3151370",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a39f7336a3b493d46a4486c4c94fdca1b3151370",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a39f7336a3b493d46a4486c4c94fdca1b3151370"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 14,
      "deletions": 0
    },
    "files": [
      {
        "sha": "8181cc47e2b4df01e316147ef7c920bb7daeaa9f",
        "filename": "src/qt/forms/optionsdialog.ui",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a0185b6c9c838290103314916190a0330ed9a82/src/qt/forms/optionsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a0185b6c9c838290103314916190a0330ed9a82/src/qt/forms/optionsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/optionsdialog.ui?ref=5a0185b6c9c838290103314916190a0330ed9a82",
        "patch": "@@ -259,6 +259,16 @@\n          </property>\n         </widget>\n        </item>\n+       <item>\n+        <widget class=\"QCheckBox\" name=\"mapPortNatpmp\">\n+         <property name=\"toolTip\">\n+          <string>Automatically open the Bitcoin client port on the router. This only works when your router supports NAT-PMP and it is enabled. The external port could be random.</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>Map port using NA&amp;T-PMP</string>\n+         </property>\n+        </widget>\n+       </item>\n        <item>\n         <widget class=\"QCheckBox\" name=\"allowIncoming\">\n          <property name=\"toolTip\">"
      },
      {
        "sha": "416b9c83c90398f38b2da6af465891749bd48b6c",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a0185b6c9c838290103314916190a0330ed9a82/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a0185b6c9c838290103314916190a0330ed9a82/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=5a0185b6c9c838290103314916190a0330ed9a82",
        "patch": "@@ -50,6 +50,9 @@ OptionsDialog::OptionsDialog(QWidget *parent, bool enableWallet) :\n     /* Network elements init */\n #ifndef USE_UPNP\n     ui->mapPortUpnp->setEnabled(false);\n+#endif\n+#ifndef USE_NATPMP\n+    ui->mapPortNatpmp->setEnabled(false);\n #endif\n     connect(this, &QDialog::accepted, [this](){\n         QSettings settings;\n@@ -219,6 +222,7 @@ void OptionsDialog::setMapper()\n \n     /* Network */\n     mapper->addMapping(ui->mapPortUpnp, OptionsModel::MapPortUPnP);\n+    mapper->addMapping(ui->mapPortNatpmp, OptionsModel::MapPortNatpmp);\n     mapper->addMapping(ui->allowIncoming, OptionsModel::Listen);\n \n     mapper->addMapping(ui->connectSocks, OptionsModel::ProxyUse);"
      }
    ]
  },
  {
    "sha": "e28f9be87a0f3c59a9184d602fe7947526df6a97",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMjhmOWJlODdhMGYzYzU5YTkxODRkNjAyZmU3OTQ3NTI2ZGY2YTk3",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-02-23T00:33:35Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-07T16:07:10Z"
      },
      "message": "ci: Add libnatpmp-dev package to some builds",
      "tree": {
        "sha": "a6c0a3195611144bdb6474caed1f8cdd8f728982",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a6c0a3195611144bdb6474caed1f8cdd8f728982"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e28f9be87a0f3c59a9184d602fe7947526df6a97",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/3Ma4ACgkQQQEIES5+\nqB+O0Q//ZrhhZ7/QDh2n7F7GuoC9vaLgMjhZQZUxkDFd82srWGT+U4Xr2+PQ91uJ\nbCQBCL57O+wGEvXPpNWvWtxhAdo/nD6b4WKnR59HY3VoPHUY7VPlaaNls5Oqq6I3\nglx1gRJoviTWTaRYJIlI0YmpUwy2Cv33QlxHxj8kxj5tiEtpWNnNnU/oEHbKh5pS\n6z+b8X+1CPR95NUStjn6pMpUUE56ymr1i/XKYuXJ2H2Cj1x1eWeWFgQapgDx2B5Y\nKCNl/l9Dacpn5zbxfiUTtUs50/yozeR9z/8rt+xxMa02/lP/pC1tddLFrl1rREMX\nfW8r++N7KrInj3nsOV/RxxRH3tG/oXw94QNEFBmfbc6zjpL00+MJLe5M2W/fEk4e\nxxEVPeVyVbyUI6zx4tkBMQckB23MDO/mn82RW/vd7dhHq9dNUQRhlSF4GZCEizCn\nSLxY+4X7vGMJKJIKQfMLgrj0CGK8FgBEtkSv1WkE8aEFofmZa2wqShZFmLWHjmW3\nGXeWLswTBZ9Xcd2WZUrTP+CTMlIh3C3Dj2jCfjkiFJghCjB3bi9A1QD+m4pKaJuO\nsZZAnRdZlL96kzkEIm5a5xdtC6wjyq9IQDuocI0jph7xpNyM/jg5wePuTi5Y8Oae\nVK6304mA+lLU/0LeW5/QH05v5zTThj5tiBxxQSdJkZsyzTHtn3w=\n=OcGq\n-----END PGP SIGNATURE-----",
        "payload": "tree a6c0a3195611144bdb6474caed1f8cdd8f728982\nparent 5a0185b6c9c838290103314916190a0330ed9a82\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1582418015 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610035630 +0200\n\nci: Add libnatpmp-dev package to some builds\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e28f9be87a0f3c59a9184d602fe7947526df6a97",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e28f9be87a0f3c59a9184d602fe7947526df6a97",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e28f9be87a0f3c59a9184d602fe7947526df6a97/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5a0185b6c9c838290103314916190a0330ed9a82",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a0185b6c9c838290103314916190a0330ed9a82",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5a0185b6c9c838290103314916190a0330ed9a82"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "b915cfabc7b17836d0b5a11d85963911427385e4",
        "filename": ".cirrus.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e28f9be87a0f3c59a9184d602fe7947526df6a97/.cirrus.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e28f9be87a0f3c59a9184d602fe7947526df6a97/.cirrus.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.cirrus.yml?ref=e28f9be87a0f3c59a9184d602fe7947526df6a97",
        "patch": "@@ -170,7 +170,7 @@ task:\n task:\n   name: 'macOS 10.15 native [gui] [no depends]'\n   macos_brew_addon_script:\n-    - brew install boost libevent berkeley-db4 qt miniupnpc ccache zeromq qrencode sqlite libtool automake pkg-config gnu-getopt\n+    - brew install boost libevent berkeley-db4 qt miniupnpc libnatpmp ccache zeromq qrencode sqlite libtool automake pkg-config gnu-getopt\n   << : *GLOBAL_TASK_TEMPLATE\n   osx_instance:\n     # Use latest image, but hardcode version to avoid silent upgrades (and breaks)"
      },
      {
        "sha": "f682486088fffc38dd44a94f20072d95b9e0bb10",
        "filename": "ci/test/00_setup_env_native_asan.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e28f9be87a0f3c59a9184d602fe7947526df6a97/ci/test/00_setup_env_native_asan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e28f9be87a0f3c59a9184d602fe7947526df6a97/ci/test/00_setup_env_native_asan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_asan.sh?ref=e28f9be87a0f3c59a9184d602fe7947526df6a97",
        "patch": "@@ -7,7 +7,7 @@\n export LC_ALL=C.UTF-8\n \n export CONTAINER_NAME=ci_native_asan\n-export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev libsqlite3-dev\"\n+export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libnatpmp-dev libzmq3-dev libqrencode-dev libsqlite3-dev\"\n export DOCKER_NAME_TAG=ubuntu:20.04\n export NO_DEPENDS=1\n export GOAL=\"install\""
      },
      {
        "sha": "f0c153158b237011ae2e799fc7406b08990a7253",
        "filename": "ci/test/00_setup_env_native_valgrind.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e28f9be87a0f3c59a9184d602fe7947526df6a97/ci/test/00_setup_env_native_valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e28f9be87a0f3c59a9184d602fe7947526df6a97/ci/test/00_setup_env_native_valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_valgrind.sh?ref=e28f9be87a0f3c59a9184d602fe7947526df6a97",
        "patch": "@@ -7,7 +7,7 @@\n export LC_ALL=C.UTF-8\n \n export CONTAINER_NAME=ci_native_valgrind\n-export PACKAGES=\"valgrind clang llvm python3-zmq libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libsqlite3-dev\"\n+export PACKAGES=\"valgrind clang llvm python3-zmq libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libnatpmp-dev libzmq3-dev libsqlite3-dev\"\n export USE_VALGRIND=1\n export NO_DEPENDS=1\n export TEST_RUNNER_EXTRA=\"--exclude rpc_bind\"  # Excluded for now, see https://github.com/bitcoin/bitcoin/issues/17765#issuecomment-602068547"
      }
    ]
  },
  {
    "sha": "ae749d12ddbaf592fbdb65d98ca35a0ff5566992",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZTc0OWQxMmRkYmFmNTkyZmJkYjY1ZDk4Y2EzNWEwZmY1NTY2OTky",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-02-23T00:35:10Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-07T16:07:10Z"
      },
      "message": "doc: Add libnatpmp stuff",
      "tree": {
        "sha": "9c26ef361bee1b59d7911f7ffcd072873a4cbeb1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9c26ef361bee1b59d7911f7ffcd072873a4cbeb1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ae749d12ddbaf592fbdb65d98ca35a0ff5566992",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/3Ma4ACgkQQQEIES5+\nqB91NxAAoWzul7W8DZb5VOh5HqcI7hs7PHsZ+7MLbEvxyFBR7TiIDOMYCTXyY4rF\n4Irrv1nyFaLP3AbFWCHyXHECuiclOGcJGh14H+O9XcYqeaWPYGaMvnBm1P6+giSF\nPBC8lmtsPqaQId48aKyeeOugFJUvwHoskbCoYYhm8PvmDda4O1t94KqxJlsApDuX\nsV2y37DWmS8XHT5myWOs5d46YSEMdtpcpIEL52IS5Zk8VNAVHZ1R3E1Vjr3Qn62D\nRSR5+qDOMXQQ9vurigw8M6ydDhSJef0oYBWibxpbybz1WObMx0880/riqKGa2gj4\nC+Opm3blvoq4+GSShciGE2nzrgZfhUrVCHbbEzOt/qnBXtaJellIizkmyJh9gRWe\nj1x6MEfNYR6FNn6mbRLh7p7CkqWNJZvbHQamqXe5xdgJ+zMddjJIXTPRnRUNJBQT\nKU48Y4NlzeIjN+aX6v/MitHgfcxZ2xi31kUyliuzaNHvl8qsrZNxC5zs4Ejphnj+\nnWwDE/27/ZIXUvn47NweBFiafQKzXYwuVGuhbO092bw636I14f5g2eFydvXta15w\nNYFYJ2sovG4PqT1aN2IoMgVVTBDT46zxXTrdhczXxFbNeGmnpTb6gXiBc8DoD99I\nirXgL5Teu47zKctZnot47EElbO/ubOmxGBOxl86zOncScnRuFXI=\n=HBg6\n-----END PGP SIGNATURE-----",
        "payload": "tree 9c26ef361bee1b59d7911f7ffcd072873a4cbeb1\nparent e28f9be87a0f3c59a9184d602fe7947526df6a97\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1582418110 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610035630 +0200\n\ndoc: Add libnatpmp stuff\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae749d12ddbaf592fbdb65d98ca35a0ff5566992",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ae749d12ddbaf592fbdb65d98ca35a0ff5566992",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae749d12ddbaf592fbdb65d98ca35a0ff5566992/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e28f9be87a0f3c59a9184d602fe7947526df6a97",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e28f9be87a0f3c59a9184d602fe7947526df6a97",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e28f9be87a0f3c59a9184d602fe7947526df6a97"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 24,
      "deletions": 10
    },
    "files": [
      {
        "sha": "9bc9b6714b8f9a870b0825198c58e3a390358c05",
        "filename": "depends/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae749d12ddbaf592fbdb65d98ca35a0ff5566992/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae749d12ddbaf592fbdb65d98ca35a0ff5566992/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=ae749d12ddbaf592fbdb65d98ca35a0ff5566992",
        "patch": "@@ -94,6 +94,7 @@ The following can be set when running make: `make FOO=bar`\n - `NO_BDB`: Don't download/build/cache BerkeleyDB\n - `NO_SQLITE`: Don't download/build/cache SQLite\n - `NO_UPNP`: Don't download/build/cache packages needed for enabling UPnP\n+- `NO_NATPMP`: Don't download/build/cache packages needed for enabling NAT-PMP</dd>\n - `ALLOW_HOST_PACKAGES`: Packages that are missed in dependencies (due to `NO_*` option or\n   build script logic) are searched for among the host system packages using\n   `pkg-config`. It allows building with packages of other (newer) versions"
      },
      {
        "sha": "b46bf61c4b7caa5636ac963b5f9421635bf57492",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae749d12ddbaf592fbdb65d98ca35a0ff5566992/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae749d12ddbaf592fbdb65d98ca35a0ff5566992/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=ae749d12ddbaf592fbdb65d98ca35a0ff5566992",
        "patch": "@@ -19,7 +19,7 @@ Then install [Homebrew](https://brew.sh).\n \n ## Dependencies\n ```shell\n-brew install automake libtool boost miniupnpc pkg-config python qt libevent qrencode\n+brew install automake libtool boost miniupnpc libnatpmp pkg-config python qt libevent qrencode\n ```\n \n If you run into issues, check [Homebrew's troubleshooting page](https://docs.brew.sh/Troubleshooting)."
      },
      {
        "sha": "5c24886dbfdc34923dcbf09f2342080986630294",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 17,
        "deletions": 7,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae749d12ddbaf592fbdb65d98ca35a0ff5566992/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae749d12ddbaf592fbdb65d98ca35a0ff5566992/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=ae749d12ddbaf592fbdb65d98ca35a0ff5566992",
        "patch": "@@ -41,6 +41,7 @@ Optional dependencies:\n  Library     | Purpose          | Description\n  ------------|------------------|----------------------\n  miniupnpc   | UPnP Support     | Firewall-jumping support\n+ libnatpmp   | NAT-PMP Support  | Firewall-jumping support\n  libdb4.8    | Berkeley DB      | Optional, wallet storage (only needed when wallet enabled)\n  qt          | GUI              | GUI toolkit (only needed when GUI enabled)\n  libqrencode | QR codes in GUI  | Optional for generating QR codes (only needed when GUI enabled)\n@@ -99,9 +100,9 @@ SQLite is required for the wallet:\n To build Bitcoin Core without wallet, see [*Disable-wallet mode*](/doc/build-unix.md#disable-wallet-mode)\n \n \n-Optional (see `--with-miniupnpc` and `--enable-upnp-default`):\n+Optional port mapping libraries (see: `--with-miniupnpc`, and `--enable-upnp-default`, `--with-natpmp`, `--enable-natpmp-default`):\n \n-    sudo apt-get install libminiupnpc-dev\n+    sudo apt install libminiupnpc-dev libnatpmp-dev\n \n ZMQ dependencies (provides ZMQ API):\n \n@@ -133,9 +134,9 @@ Build requirements:\n \n     sudo dnf install gcc-c++ libtool make autoconf automake libevent-devel boost-devel libdb4-devel libdb4-cxx-devel python3\n \n-Optional (see `--with-miniupnpc` and `--enable-upnp-default`):\n+Optional port mapping libraries (see: `--with-miniupnpc`, and `--enable-upnp-default`, `--with-natpmp`, `--enable-natpmp-default`):\n \n-    sudo dnf install miniupnpc-devel\n+    sudo dnf install miniupnpc-devel libnatpmp-devel\n \n ZMQ dependencies (provides ZMQ API):\n \n@@ -158,18 +159,27 @@ Notes\n The release is built with GCC and then \"strip bitcoind\" to strip the debug\n symbols, which reduces the executable size by about 90%.\n \n-\n miniupnpc\n ---------\n \n [miniupnpc](https://miniupnp.tuxfamily.org) may be used for UPnP port mapping.  It can be downloaded from [here](\n https://miniupnp.tuxfamily.org/files/).  UPnP support is compiled in and\n-turned off by default.  See the configure options for upnp behavior desired:\n+turned off by default.  See the configure options for UPnP behavior desired:\n \n-\t--without-miniupnpc      No UPnP support miniupnp not required\n+\t--without-miniupnpc      No UPnP support, miniupnp not required\n \t--disable-upnp-default   (the default) UPnP support turned off by default at runtime\n \t--enable-upnp-default    UPnP support turned on by default at runtime\n \n+libnatpmp\n+---------\n+\n+[libnatpmp](https://miniupnp.tuxfamily.org/libnatpmp.html) may be used for NAT-PMP port mapping. It can be downloaded\n+from [here](https://miniupnp.tuxfamily.org/files/). NAT-PMP support is compiled in and\n+turned off by default. See the configure options for NAT-PMP behavior desired:\n+\n+\t--without-natpmp          No NAT-PMP support, libnatpmp not required\n+\t--disable-natpmp-default  (the default) NAT-PMP support turned off by default at runtime\n+\t--enable-natpmp-default   NAT-PMP support turned on by default at runtime\n \n Berkeley DB\n -----------"
      },
      {
        "sha": "6b2b904632e47ebc2133a2dc548feaa4d40eca0d",
        "filename": "doc/dependencies.md",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae749d12ddbaf592fbdb65d98ca35a0ff5566992/doc/dependencies.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae749d12ddbaf592fbdb65d98ca35a0ff5566992/doc/dependencies.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dependencies.md?ref=ae749d12ddbaf592fbdb65d98ca35a0ff5566992",
        "patch": "@@ -14,6 +14,7 @@ These are the dependencies currently used by Bitcoin Core. You can find instruct\n | GCC |  | [7+](https://gcc.gnu.org/) (C++17 support) |  |  |  |\n | HarfBuzz-NG |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk) |\n | libevent | [2.1.11-stable](https://github.com/libevent/libevent/releases) | [2.0.21](https://github.com/bitcoin/bitcoin/pull/18676) | No |  |  |\n+| libnatpmp | [20150609](https://miniupnp.tuxfamily.org/files) |  | No |  |  |\n | libpng |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk) |\n | librsvg | |  |  |  |  |\n | MiniUPnPc | [2.0.20180203](https://miniupnp.tuxfamily.org/files) |  | No |  |  |\n@@ -32,7 +33,8 @@ Controlling dependencies\n Some dependencies are not needed in all configurations. The following are some factors that affect the dependency list.\n \n #### Options passed to `./configure`\n-* MiniUPnPc is not needed with  `--with-miniupnpc=no`.\n+* MiniUPnPc is not needed with `--without-miniupnpc`.\n+* libnatpmp is not needed with `--without-natpmp`.\n * Berkeley DB is not needed with `--disable-wallet` or `--without-bdb`.\n * SQLite is not needed with `--disable-wallet` or `--without-sqlite`.\n * Qt is not needed with `--without-gui`."
      },
      {
        "sha": "a01c6f545db82f1c42bc40a201cc10ac9d5fac36",
        "filename": "doc/productivity.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae749d12ddbaf592fbdb65d98ca35a0ff5566992/doc/productivity.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae749d12ddbaf592fbdb65d98ca35a0ff5566992/doc/productivity.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/productivity.md?ref=ae749d12ddbaf592fbdb65d98ca35a0ff5566992",
        "patch": "@@ -51,6 +51,7 @@ After running `./autogen.sh`, which generates the `./configure` file, use `./con\n \n ```sh\n --without-miniupnpc\n+--without-natpmp\n --disable-bench\n --disable-wallet\n --without-gui"
      },
      {
        "sha": "1ba7137b8ed282b4dc55e2992af83b5ceef2586b",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae749d12ddbaf592fbdb65d98ca35a0ff5566992/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae749d12ddbaf592fbdb65d98ca35a0ff5566992/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=ae749d12ddbaf592fbdb65d98ca35a0ff5566992",
        "patch": "@@ -99,7 +99,7 @@ as well, use `discover` instead:\n \n \t./bitcoind ... -discover\n \n-and open port 8333 on your firewall (or use -upnp).\n+and open port 8333 on your firewall (or use port mapping, i.e., `-upnp` or `-natpmp`).\n \n If you only want to use Tor to reach .onion addresses, but not use it as a proxy\n for normal IPv4/IPv6 communication, use:"
      }
    ]
  },
  {
    "sha": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMTkxZTIzYjhlN2YwZTE5ZmMwMzU5ODI1ZWI3Y2EwZDQ3OTY2ZmE5",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-02-23T00:36:20Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-07T16:07:11Z"
      },
      "message": "doc: Add release notes",
      "tree": {
        "sha": "bb2146f62a0f0659c60b844d388d5996f4f9f4e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb2146f62a0f0659c60b844d388d5996f4f9f4e8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/3Ma8ACgkQQQEIES5+\nqB8Tag/9HlKQ1q6cdxyMYY001J/E8EEQAQoo2l/oj8Bj+SH8LU1py/TTKmvIZK2z\nIBURE+N26Z2kuLRe+gyV2Hr9VURgIRlEDjDXKVe4FWOd0AbMPxy+AEuo7L6lnpOD\nxk1ZDzBrS2Mi6BF+DPHzM1v6uKc7HA644UgYTOsv1y3KplDZfVA88esI613eKCTB\nglMwE2y7gPs8qPEy/7nXY9rOs0vRXCwfzjDX5ukhKD1IeJvTz4SWv/0Us5zAixIF\nW552ZzuJfbb9NKSP5vt56nvLpH/chiTBGenMLwNEzgle2SLtQ1rhy//wBk2KaIj7\n2SeWZTCYHNlCQLC/S6jMjmJmlVpjYY/OmbITarYSLtSzzO/Wp6xL0m0No+kNYG6N\ntHHW81UFm4CXp+DmQPTtpjCWFCC59QpWQJstfC7ZYU/YG0EdBevDyR0beGDcFe/Y\npztO3Gi6pLW5wH7EG2oJrCeEl+jHJbTct5DrDHJKPP8PyUS2uGPRfqNt4Pv8ahzg\nEFa5Bc2R5rZZwGB6L38vbsgzPUk7XqnFUCqV75TTnRZIKioj2xGYeovn4XhnDdMN\nTbIZDNRkPMQwLAue6Mn7upIqa6KX5JKvs9kCVM91r+cvzQxGZcMHl4cGg6JugOeV\nceOEZQjXuzwmHNUmUssGeSFf1Twe72NEwil5HhsOc/H1/CJGBBo=\n=g9t3\n-----END PGP SIGNATURE-----",
        "payload": "tree bb2146f62a0f0659c60b844d388d5996f4f9f4e8\nparent ae749d12ddbaf592fbdb65d98ca35a0ff5566992\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1582418180 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610035631 +0200\n\ndoc: Add release notes\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a191e23b8e7f0e19fc0359825eb7ca0d47966fa9/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ae749d12ddbaf592fbdb65d98ca35a0ff5566992",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae749d12ddbaf592fbdb65d98ca35a0ff5566992",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ae749d12ddbaf592fbdb65d98ca35a0ff5566992"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "4034a4c19c02cbec167cc5378bd652da001781d8",
        "filename": "doc/release-notes-18077.md",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a191e23b8e7f0e19fc0359825eb7ca0d47966fa9/doc/release-notes-18077.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a191e23b8e7f0e19fc0359825eb7ca0d47966fa9/doc/release-notes-18077.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-18077.md?ref=a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
        "patch": "@@ -0,0 +1,10 @@\n+P2P and network changes\n+-----------------------\n+\n+- Added NAT-PMP port mapping support via [`libnatpmp`](https://miniupnp.tuxfamily.org/libnatpmp.html)\n+\n+Command-line options\n+--------------------\n+\n+- The `-natpmp` option has been added to use NAT-PMP to map the listening port. If both UPnP\n+and NAT-PMP are enabled, a successful allocation from UPnP prevails over one from NAT-PMP."
      }
    ]
  }
]