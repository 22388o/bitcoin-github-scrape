[
  {
    "sha": "93394898a469f87bf76de6459429f54aeebd4e60",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MzM5NDg5OGE0NjlmODdiZjc2ZGU2NDU5NDI5ZjU0YWVlYmQ0ZTYw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-03-22T16:15:04Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-07-07T04:34:39Z"
      },
      "message": "contrib: gh-merge: Include review comments in merge commit\n\nGithub-Pull: #15643\nRebased-From: fa1c073154c6a39dca878f5c9a37abee8af0fd30",
      "tree": {
        "sha": "4537dab0cd848a70c5dcd009c876f295b28613b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4537dab0cd848a70c5dcd009c876f295b28613b0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/93394898a469f87bf76de6459429f54aeebd4e60",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl0hdrQACgkQLuufXMCV\nJsHXwA/9ELGC0AmvMwTtFD3KDFOjkzDU/HlaVr4ub39OI4f9UQC3j1fAoYt4RSNu\nYxABDGU6/OEeF879G2yPMlTnD76hDjdRMzxvGhbtfZ1J7yijGHJLNf40rnYN4mYd\nvkR1rkiEqqyGZEAwlpRTJ5aQ+bwcQ+MqO15ulBORuPGR+FJUk0sdh2k6R0v9kfRA\nMXQJ3iqHaJIzaFpoecrQfix06LNUqLih3OOmlo5Fy1nBp2BUJASu9yBbPUYqmm6v\nvXjXHBWBvJIcl/HAX6QamMewwpfP/974J7WeMu7fazEmdNKBVmcroutS8YqQzqVP\nCGvft9ftaFr8G56h1uxpMjP0Hv/zxZerneEVRmvq5Ozs73uAMt8QxYm6phwH1yTJ\n41ZXDlWG+kI9fclDG4h2RudZfDugqCf2jE1/S5ds/5DV4wXZd7kP73PcQrI/AnQn\nEA+VSfSATq0C5OXcV7b0N7qaGFTI7mFXsSOrmtcjeAZOzuctFnAE6DNWMlTUeZA3\njH4jNIc+sEZnxhqssYKKuqb1iDF5BXZbxtz0XMfe4voE3dsVgzOdpVg0rsb/iRhD\n2MaotgNSmJr0HwA9PROiOfd+N7Fce1Vcwx0ZT1OLiZ3VbsWI87FxlIkDV78Mwn2H\nIBuQRXwXZ1HdXg2TczltmSmP4TtCQ/uKgSrJHx+8MhgGHsk5sLU=\n=Q3x/\n-----END PGP SIGNATURE-----",
        "payload": "tree 4537dab0cd848a70c5dcd009c876f295b28613b0\nparent 1fb747a8007caa922b29a69408c2152ba5575db5\nauthor MarcoFalke <falke.marco@gmail.com> 1553271304 -0400\ncommitter fanquake <fanquake@gmail.com> 1562474079 +0800\n\ncontrib: gh-merge: Include review comments in merge commit\n\nGithub-Pull: #15643\nRebased-From: fa1c073154c6a39dca878f5c9a37abee8af0fd30\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93394898a469f87bf76de6459429f54aeebd4e60",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/93394898a469f87bf76de6459429f54aeebd4e60",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93394898a469f87bf76de6459429f54aeebd4e60/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1fb747a8007caa922b29a69408c2152ba5575db5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1fb747a8007caa922b29a69408c2152ba5575db5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1fb747a8007caa922b29a69408c2152ba5575db5"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 29,
      "deletions": 4
    },
    "files": [
      {
        "sha": "41a640b4643381bd776c08f15a7c0e88ae624764",
        "filename": "contrib/devtools/github-merge.py",
        "status": "modified",
        "additions": 29,
        "deletions": 4,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93394898a469f87bf76de6459429f54aeebd4e60/contrib/devtools/github-merge.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93394898a469f87bf76de6459429f54aeebd4e60/contrib/devtools/github-merge.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.py?ref=93394898a469f87bf76de6459429f54aeebd4e60",
        "patch": "@@ -47,13 +47,12 @@ def git_config_get(option, default=None):\n     except subprocess.CalledProcessError:\n         return default\n \n-def retrieve_pr_info(repo,pull,ghtoken):\n+def retrieve_json(req, ghtoken):\n     '''\n-    Retrieve pull request information from github.\n-    Return None if no title can be found, or an error happens.\n+    Retrieve json from github.\n+    Return None if an error happens.\n     '''\n     try:\n-        req = Request(\"https://api.github.com/repos/\"+repo+\"/pulls/\"+pull)\n         if ghtoken is not None:\n             req.add_header('Authorization', 'token ' + ghtoken)\n         result = urlopen(req)\n@@ -69,6 +68,18 @@ def retrieve_pr_info(repo,pull,ghtoken):\n         print('Warning: unable to retrieve pull information from github: %s' % e)\n         return None\n \n+def retrieve_pr_info(repo,pull,ghtoken):\n+    req = Request(\"https://api.github.com/repos/\"+repo+\"/pulls/\"+pull)\n+    return retrieve_json(req,ghtoken)\n+\n+def retrieve_pr_comments(repo,pull,ghtoken):\n+    req = Request(\"https://api.github.com/repos/\"+repo+\"/issues/\"+pull+\"/comments\")\n+    return retrieve_json(req,ghtoken)\n+\n+def retrieve_pr_reviews(repo,pull,ghtoken):\n+    req = Request(\"https://api.github.com/repos/\"+repo+\"/pulls/\"+pull+\"/reviews\")\n+    return retrieve_json(req,ghtoken)\n+\n def ask_prompt(text):\n     print(text,end=\" \",file=stderr)\n     stderr.flush()\n@@ -133,6 +144,16 @@ def tree_sha512sum(commit='HEAD'):\n         raise IOError('Non-zero return value executing git cat-file')\n     return overall.hexdigest()\n \n+def get_acks_from_comments(head_commit, comments):\n+    assert len(head_commit) == 6\n+    ack_str ='\\n\\nACKs for commit {}:\\n'.format(head_commit)\n+    for c in comments:\n+        review = [l for l in c['body'].split('\\r\\n') if 'ACK' in l and head_commit in l]\n+        if review:\n+            ack_str += '  {}:\\n'.format(c['user']['login'])\n+            ack_str += '    {}\\n'.format(review[0])\n+    return ack_str\n+\n def print_merge_details(pull, title, branch, base_branch, head_branch):\n     print('%s#%s%s %s %sinto %s%s' % (ATTR_RESET+ATTR_PR,pull,ATTR_RESET,title,ATTR_RESET+ATTR_PR,branch,ATTR_RESET))\n     subprocess.check_call([GIT,'log','--graph','--topo-order','--pretty=format:'+COMMIT_FORMAT,base_branch+'..'+head_branch])\n@@ -185,6 +206,9 @@ def main():\n     info = retrieve_pr_info(repo,pull,ghtoken)\n     if info is None:\n         sys.exit(1)\n+    comments = retrieve_pr_comments(repo,pull,ghtoken) + retrieve_pr_reviews(repo,pull,ghtoken)\n+    if comments is None:\n+        sys.exit(1)\n     title = info['title'].strip()\n     body = info['body'].strip()\n     # precedence order for destination branch argument:\n@@ -238,6 +262,7 @@ def main():\n         message = firstline + '\\n\\n'\n         message += subprocess.check_output([GIT,'log','--no-merges','--topo-order','--pretty=format:%h %s (%an)',base_branch+'..'+head_branch]).decode('utf-8')\n         message += '\\n\\nPull request description:\\n\\n  ' + body.replace('\\n', '\\n  ') + '\\n'\n+        message += get_acks_from_comments(head_commit=subprocess.check_output([GIT,'log','-1','--pretty=format:%H',head_branch]).decode('utf-8')[:6], comments=comments)\n         try:\n             subprocess.check_call([GIT,'merge','-q','--commit','--no-edit','--no-ff','-m',message.encode('utf-8'),head_branch])\n         except subprocess.CalledProcessError:"
      }
    ]
  },
  {
    "sha": "5ff91d2bfd2fe61d1bca22d9bc1ef5e8f5e51ea3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZmY5MWQyYmZkMmZlNjFkMWJjYTIyZDliYzFlZjVlOGY1ZTUxZWEz",
    "commit": {
      "author": {
        "name": "nkostoulas",
        "email": "nkostoulas@gmail.com",
        "date": "2019-04-17T16:25:27Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-07-07T04:36:24Z"
      },
      "message": "contrib: gh-merge: Use pagination to fetch all review comments\n\nGithub-Pull: #15838\nRebased-From: 942ff2054b41fe3f78f1b3d88cfd032bc95fd62f",
      "tree": {
        "sha": "f6159c24fcb8e10579902a97a2940c94e7cf1af1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f6159c24fcb8e10579902a97a2940c94e7cf1af1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5ff91d2bfd2fe61d1bca22d9bc1ef5e8f5e51ea3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl0hdtkACgkQLuufXMCV\nJsHadg/+JOcSGpWVyofE2l6qKd1RDMaoc995rBTTdTHmmrZmuRiQLxxDQvDSJjJB\neK1bJBMw0aMi95DdL8UPJ/hI+b7E+Qi78TSfQkHdP2QZDrbuJ5eext9orty1tN5o\niqIVGbe7/tLvGF8lYTT3g+TtcGdf6dmkvq7/dpLDBjtYL87GhSTcr3+miyld/MiB\nUYfTojslFU0K23rJtzvU13CBP4ddJo5lHjtDUasTX0rGcJ5RiSmWKuY9cd2Cqggb\nwH9rf7n/A0kNx+hhnenyHMxqoRA8PPiFBYwuUWBB4I9NfReeDrYLH525H+5piAJe\n08rn4EiDQKjO9ev96qDq26ne7mXEP6s2cHo+Kg8c1AZdvcZfDE5xvSUk9gYFK29j\n+x07HrA0YrosE+OVPbnMHfnpPRoSosB7jD/feME0lmWOgHEaXFTQo82zROb0+AEb\nFMppGl4Ix8oDOyFMVAan12OuHfLYOmCMBD2ugJ50cTQLN4+MSVnWI7jhwTmG9RJi\nf7hXNEgO1pRXWoRyqibu42g4zW8kkiLor351L28TrIjejEOJb5rstduwxHCALJ6I\nA/fpJpInNQNeG+KFyQjH75Cw1J6r3bheSUI5JDkc/6VBakXjsszDrPPYk9iWemTH\nw8T6uNI4MK1bQJgtEl8xgO6W8gNmIui0QcbHb+iMlyapjFvUZ24=\n=U55L\n-----END PGP SIGNATURE-----",
        "payload": "tree f6159c24fcb8e10579902a97a2940c94e7cf1af1\nparent 93394898a469f87bf76de6459429f54aeebd4e60\nauthor nkostoulas <nkostoulas@gmail.com> 1555518327 +0100\ncommitter fanquake <fanquake@gmail.com> 1562474184 +0800\n\ncontrib: gh-merge: Use pagination to fetch all review comments\n\nGithub-Pull: #15838\nRebased-From: 942ff2054b41fe3f78f1b3d88cfd032bc95fd62f\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ff91d2bfd2fe61d1bca22d9bc1ef5e8f5e51ea3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5ff91d2bfd2fe61d1bca22d9bc1ef5e8f5e51ea3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ff91d2bfd2fe61d1bca22d9bc1ef5e8f5e51ea3/comments",
    "author": {
      "login": "nkostoulas",
      "id": 14759579,
      "node_id": "MDQ6VXNlcjE0NzU5NTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14759579?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nkostoulas",
      "html_url": "https://github.com/nkostoulas",
      "followers_url": "https://api.github.com/users/nkostoulas/followers",
      "following_url": "https://api.github.com/users/nkostoulas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nkostoulas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nkostoulas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nkostoulas/subscriptions",
      "organizations_url": "https://api.github.com/users/nkostoulas/orgs",
      "repos_url": "https://api.github.com/users/nkostoulas/repos",
      "events_url": "https://api.github.com/users/nkostoulas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nkostoulas/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "93394898a469f87bf76de6459429f54aeebd4e60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93394898a469f87bf76de6459429f54aeebd4e60",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/93394898a469f87bf76de6459429f54aeebd4e60"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 30,
      "deletions": 11
    },
    "files": [
      {
        "sha": "a57ecf9818370af61eb321ddb6a93484b7d663f9",
        "filename": "contrib/devtools/github-merge.py",
        "status": "modified",
        "additions": 30,
        "deletions": 11,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ff91d2bfd2fe61d1bca22d9bc1ef5e8f5e51ea3/contrib/devtools/github-merge.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ff91d2bfd2fe61d1bca22d9bc1ef5e8f5e51ea3/contrib/devtools/github-merge.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.py?ref=5ff91d2bfd2fe61d1bca22d9bc1ef5e8f5e51ea3",
        "patch": "@@ -47,17 +47,36 @@ def git_config_get(option, default=None):\n     except subprocess.CalledProcessError:\n         return default\n \n-def retrieve_json(req, ghtoken):\n+def get_response(req_url, ghtoken):\n+    req = Request(req_url)\n+    if ghtoken is not None:\n+        req.add_header('Authorization', 'token ' + ghtoken)\n+    return urlopen(req)\n+\n+def retrieve_json(req_url, ghtoken, use_pagination=False):\n     '''\n     Retrieve json from github.\n     Return None if an error happens.\n     '''\n     try:\n-        if ghtoken is not None:\n-            req.add_header('Authorization', 'token ' + ghtoken)\n-        result = urlopen(req)\n         reader = codecs.getreader('utf-8')\n-        obj = json.load(reader(result))\n+        if not use_pagination:\n+            return json.load(reader(get_response(req_url, ghtoken)))\n+\n+        obj = []\n+        page_num = 1\n+        while True:\n+            req_url_page = '{}?page={}'.format(req_url, page_num)\n+            result = get_response(req_url_page, ghtoken)\n+            obj.extend(json.load(reader(result)))\n+\n+            link = result.headers.get('link', None)\n+            if link is not None:\n+                link_next = [l for l in link.split(',') if 'rel=\"next\"' in l]\n+                if len(link_next) > 0:\n+                    page_num = int(link_next[0][link_next[0].find(\"page=\")+5:link_next[0].find(\">\")])\n+                    continue\n+            break\n         return obj\n     except HTTPError as e:\n         error_message = e.read()\n@@ -69,16 +88,16 @@ def retrieve_json(req, ghtoken):\n         return None\n \n def retrieve_pr_info(repo,pull,ghtoken):\n-    req = Request(\"https://api.github.com/repos/\"+repo+\"/pulls/\"+pull)\n-    return retrieve_json(req,ghtoken)\n+    req_url = \"https://api.github.com/repos/\"+repo+\"/pulls/\"+pull\n+    return retrieve_json(req_url,ghtoken)\n \n def retrieve_pr_comments(repo,pull,ghtoken):\n-    req = Request(\"https://api.github.com/repos/\"+repo+\"/issues/\"+pull+\"/comments\")\n-    return retrieve_json(req,ghtoken)\n+    req_url = \"https://api.github.com/repos/\"+repo+\"/issues/\"+pull+\"/comments\"\n+    return retrieve_json(req_url,ghtoken,use_pagination=True)\n \n def retrieve_pr_reviews(repo,pull,ghtoken):\n-    req = Request(\"https://api.github.com/repos/\"+repo+\"/pulls/\"+pull+\"/reviews\")\n-    return retrieve_json(req,ghtoken)\n+    req_url = \"https://api.github.com/repos/\"+repo+\"/pulls/\"+pull+\"/reviews\"\n+    return retrieve_json(req_url,ghtoken,use_pagination=True)\n \n def ask_prompt(text):\n     print(text,end=\" \",file=stderr)"
      }
    ]
  },
  {
    "sha": "d1a09cfdb2b0109b823899dcb4fec7f098f95eda",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMWEwOWNmZGIyYjAxMDliODIzODk5ZGNiNGZlYzdmMDk4Zjk1ZWRh",
    "commit": {
      "author": {
        "name": "Steven Roose",
        "email": "steven@stevenroose.org",
        "date": "2019-05-31T18:22:02Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-07-07T04:37:02Z"
      },
      "message": "Don't GPG sign intermediate commits with github-merge tool\n\nGithub-Pull: #16130\nRebased-From: a352d2ae5f5e8a0204d49d66ff458a1505609de3",
      "tree": {
        "sha": "090d046b5f0ac5e445da9c5a0c546d2e6367c380",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/090d046b5f0ac5e445da9c5a0c546d2e6367c380"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d1a09cfdb2b0109b823899dcb4fec7f098f95eda",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl0hdwAACgkQLuufXMCV\nJsErOw/9G+23hhAYbyw99MHdOFi9mlwk6kHvAcSskafo0UWulGWijYwiHXdYHnxe\naaBujCriy77zeRD30fMqSgIgoGsTzK5xI1lzJFdJBSnggRqMxq/zW4Hhsic0yu5K\nBcalOfpc43sC33fUhkbnVuaLKKjQTKocb5CFHqthRE5bzKRG6PgNgjQ3Y4kQbq1b\nBloDTJP7AhcnCOw3VeVjMCspSFK+UTkQNWsjJzlPdpTZ9Ut5k3UWOh23BL4Mfown\nAlWMKFIs3aThh8aMHrwUY/rl4t+OzmnXXh1g+kHyrTQv2Lg9yzY1PkAHHQ0phTqg\njsramd0z5PeeJvPLBkg09hIUVqmyM/HwXFPEDBKs1n4kDZw4YigrUDD/tOSLZSUz\niPw821yp1uCykxUvUSL7l+Q2nnreLEn0fdnDF+AvbciMREzAhSZrYNYQBhXUb9vs\nFu0ynSjdj94sPRMBroUfsv0re1OM2/H1a2BqIlJPpBg+r6wMmF2clBxHQwZaoJUL\nvrF6GoksMS/pqrwrgRdo9skmiSZaIPm8pA3vWobOm6BGvkDIzPO+D9a0/RqkeqkH\nLOjsX4Z+YmGYZSTkq1nI6t/+q2zjOicuJKTwFT8EIvekavBrHSVZ0Kt2lKvy7/SA\nQE0IZxzR3rfXhtDRtuVfK2tmJ4VBEuYtPp0tlg/6WTOXW8s0nPI=\n=VZtx\n-----END PGP SIGNATURE-----",
        "payload": "tree 090d046b5f0ac5e445da9c5a0c546d2e6367c380\nparent 5ff91d2bfd2fe61d1bca22d9bc1ef5e8f5e51ea3\nauthor Steven Roose <steven@stevenroose.org> 1559326922 +0100\ncommitter fanquake <fanquake@gmail.com> 1562474222 +0800\n\nDon't GPG sign intermediate commits with github-merge tool\n\nGithub-Pull: #16130\nRebased-From: a352d2ae5f5e8a0204d49d66ff458a1505609de3\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1a09cfdb2b0109b823899dcb4fec7f098f95eda",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d1a09cfdb2b0109b823899dcb4fec7f098f95eda",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1a09cfdb2b0109b823899dcb4fec7f098f95eda/comments",
    "author": {
      "login": "stevenroose",
      "id": 853468,
      "node_id": "MDQ6VXNlcjg1MzQ2OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/853468?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stevenroose",
      "html_url": "https://github.com/stevenroose",
      "followers_url": "https://api.github.com/users/stevenroose/followers",
      "following_url": "https://api.github.com/users/stevenroose/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevenroose/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stevenroose/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevenroose/subscriptions",
      "organizations_url": "https://api.github.com/users/stevenroose/orgs",
      "repos_url": "https://api.github.com/users/stevenroose/repos",
      "events_url": "https://api.github.com/users/stevenroose/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stevenroose/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5ff91d2bfd2fe61d1bca22d9bc1ef5e8f5e51ea3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ff91d2bfd2fe61d1bca22d9bc1ef5e8f5e51ea3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5ff91d2bfd2fe61d1bca22d9bc1ef5e8f5e51ea3"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "df1f3c80242c9ba475112fd2635fff0b1406e4ed",
        "filename": "contrib/devtools/github-merge.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1a09cfdb2b0109b823899dcb4fec7f098f95eda/contrib/devtools/github-merge.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1a09cfdb2b0109b823899dcb4fec7f098f95eda/contrib/devtools/github-merge.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.py?ref=d1a09cfdb2b0109b823899dcb4fec7f098f95eda",
        "patch": "@@ -283,7 +283,7 @@ def main():\n         message += '\\n\\nPull request description:\\n\\n  ' + body.replace('\\n', '\\n  ') + '\\n'\n         message += get_acks_from_comments(head_commit=subprocess.check_output([GIT,'log','-1','--pretty=format:%H',head_branch]).decode('utf-8')[:6], comments=comments)\n         try:\n-            subprocess.check_call([GIT,'merge','-q','--commit','--no-edit','--no-ff','-m',message.encode('utf-8'),head_branch])\n+            subprocess.check_call([GIT,'merge','-q','--commit','--no-edit','--no-ff','--no-gpg-sign','-m',message.encode('utf-8'),head_branch])\n         except subprocess.CalledProcessError:\n             print(\"ERROR: Cannot be merged cleanly.\",file=stderr)\n             subprocess.check_call([GIT,'merge','--abort'])\n@@ -307,7 +307,7 @@ def main():\n             print(\"ERROR: Unable to compute tree hash\")\n             sys.exit(4)\n         try:\n-            subprocess.check_call([GIT,'commit','--amend','-m',message.encode('utf-8')])\n+            subprocess.check_call([GIT,'commit','--amend','--no-gpg-sign','-m',message.encode('utf-8')])\n         except subprocess.CalledProcessError:\n             print(\"ERROR: Cannot update message.\", file=stderr)\n             sys.exit(4)"
      }
    ]
  },
  {
    "sha": "ed218a21a1bb7a083addac4eabe21da77052dd35",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZDIxOGEyMWExYmI3YTA4M2FkZGFjNGVhYmUyMWRhNzcwNTJkZDM1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2019-06-13T08:21:36Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-07-07T04:37:37Z"
      },
      "message": "devtools: Always use unabbreviated commit IDs in github-merge.py\n\nAlways put the unabbreviated commit IDs in the generated commit messages\nand other places. This prevents the developer's `core.abbrev` git setting\nfrom leaking through and is better against ambiguity too.\n\nGithub-Pull: #16201\nRebased-From: 067fba56314f399674dd471c663e663040be52a3",
      "tree": {
        "sha": "531513a81a7ee082f1a6c5a9f0087187ec54f71a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/531513a81a7ee082f1a6c5a9f0087187ec54f71a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed218a21a1bb7a083addac4eabe21da77052dd35",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl0hdyAACgkQLuufXMCV\nJsEmZw//SCcp+B+aMsBBTukQCsZDo0UNPZle8szjEH7lbUz5cndvHKuxqBzgkZgr\n/pG9BQQ6WtJaY4iKnQc8FzvwNECQEywAbsEQgsuBgufn0z2Ol5C9a5fhhR7b8W8V\nJ+NtVA1AsbLen57rTqWUeBSMgDI5fFM4/dbfKxhha5e7pTLzYSMJd0d5Twa+wzs7\n/mVvEvDn8eYNlYO/lU7k44PQYIUAW2m92K2JF4OHbLcrI/VbUiS2W9l0+ZgoU/DL\nw8cj1IVk2VrT/ZGahiYkr2xT9kCYWADl6iisCICyEiMxd5NoSuhJ5fM9XtYCrMRr\nuZIaEKWSaYyPn7IVo6jXxKlEXuKXH135VzBWBxp+mX6t+uMY5+BnB+qg6O7BQuEl\nRO0jmJLkGQNxyBi2fvoydVpfNrIbhVTJzail/vRwFBl3HRiZyqtJwBBPhFbvMiuE\nTjvrOfoTusrTm4FJihmLdEYB6AASW0kYTIw/fgDiPMVnNtbUJZjUnAYou/SRj/Yq\na64donBlX9A9bzDT7PfGdrtFm0FnR4M1gMVAi+Bp+W7iUI18NaQfawVxA6WyC5m1\nm/Jvt6tOXh1h3Ch+vPRwU5akDrRi6woCvZTBzfNBIThgYFw1bzbJTh7JMkoRMOP/\n6mTRwgf4un6cD1OjPykL5i2bekYX/sYq/2LRAMDUxUiwSSZfqmg=\n=gFHi\n-----END PGP SIGNATURE-----",
        "payload": "tree 531513a81a7ee082f1a6c5a9f0087187ec54f71a\nparent d1a09cfdb2b0109b823899dcb4fec7f098f95eda\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1560414096 +0200\ncommitter fanquake <fanquake@gmail.com> 1562474257 +0800\n\ndevtools: Always use unabbreviated commit IDs in github-merge.py\n\nAlways put the unabbreviated commit IDs in the generated commit messages\nand other places. This prevents the developer's `core.abbrev` git setting\nfrom leaking through and is better against ambiguity too.\n\nGithub-Pull: #16201\nRebased-From: 067fba56314f399674dd471c663e663040be52a3\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed218a21a1bb7a083addac4eabe21da77052dd35",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ed218a21a1bb7a083addac4eabe21da77052dd35",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed218a21a1bb7a083addac4eabe21da77052dd35/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d1a09cfdb2b0109b823899dcb4fec7f098f95eda",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1a09cfdb2b0109b823899dcb4fec7f098f95eda",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d1a09cfdb2b0109b823899dcb4fec7f098f95eda"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "03179cec2475340946e34a867d788555af2969a8",
        "filename": "contrib/devtools/github-merge.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed218a21a1bb7a083addac4eabe21da77052dd35/contrib/devtools/github-merge.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed218a21a1bb7a083addac4eabe21da77052dd35/contrib/devtools/github-merge.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.py?ref=ed218a21a1bb7a083addac4eabe21da77052dd35",
        "patch": "@@ -32,11 +32,11 @@\n # OS specific configuration for terminal attributes\n ATTR_RESET = ''\n ATTR_PR = ''\n-COMMIT_FORMAT = '%h %s (%an)%d'\n+COMMIT_FORMAT = '%H %s (%an)%d'\n if os.name == 'posix': # if posix, assume we can use basic terminal escapes\n     ATTR_RESET = '\\033[0m'\n     ATTR_PR = '\\033[1;36m'\n-    COMMIT_FORMAT = '%C(bold blue)%h%Creset %s %C(cyan)(%an)%Creset%C(green)%d%Creset'\n+    COMMIT_FORMAT = '%C(bold blue)%H%Creset %s %C(cyan)(%an)%Creset%C(green)%d%Creset'\n \n def git_config_get(option, default=None):\n     '''\n@@ -279,7 +279,7 @@ def main():\n         else:\n             firstline = 'Merge #%s' % (pull,)\n         message = firstline + '\\n\\n'\n-        message += subprocess.check_output([GIT,'log','--no-merges','--topo-order','--pretty=format:%h %s (%an)',base_branch+'..'+head_branch]).decode('utf-8')\n+        message += subprocess.check_output([GIT,'log','--no-merges','--topo-order','--pretty=format:%H %s (%an)',base_branch+'..'+head_branch]).decode('utf-8')\n         message += '\\n\\nPull request description:\\n\\n  ' + body.replace('\\n', '\\n  ') + '\\n'\n         message += get_acks_from_comments(head_commit=subprocess.check_output([GIT,'log','-1','--pretty=format:%H',head_branch]).decode('utf-8')[:6], comments=comments)\n         try:"
      }
    ]
  },
  {
    "sha": "b58763ba0155ae1a73e3d4176fd59c48a4ac1a51",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNTg3NjNiYTAxNTVhZTFhNzNlM2Q0MTc2ZmQ1OWM0OGE0YWMxYTUx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2019-06-17T12:39:11Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-07-07T04:38:10Z"
      },
      "message": "devtools: Fetch and display ACKs at sign-off time in github-merge\n\n- Fetch the ACKs only at sign-off time. This makes sure that any\n  last-minute ACKs are included (fixes #16200)\n- Show a list of ACKs and their author before signing off, and warn if\n  there are none\n\nGithub-Pull: #16223\nRebased-From: 0e01e4522e0f9e2e994f80fc61f40d61a4a70d79",
      "tree": {
        "sha": "78485fdee449a2b50637b362d10debe9a0e77dad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/78485fdee449a2b50637b362d10debe9a0e77dad"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b58763ba0155ae1a73e3d4176fd59c48a4ac1a51",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl0hd0MACgkQLuufXMCV\nJsEfTA/+JwNH0sHtPjRL5BfefFZxOjvriG65vjzIu+LJK9myQkW/8mm7fz38+yFM\nfacZ1sujxdYnJ+Zw6GVstANYeYqCFB/JoenRIs03VNFQOhZ/1gHFU3JT2T/6gYW6\njfNQUHMo/QQPGf9ZM9mpSB1FfOLL3cnJYsrx5LNoA4jBNzy4f45DNKT3sDhf0oqQ\n7FZ+JbuW4Jy+xX18ef7k6RkBDYwT4Zr+ijWTptTsZj//6xLj8P3Q7W4gQ+fO3UxM\n0hUnS+W/hB4P+ks0s0WgqGyS1Accem6mrDLSnk1KgPb4nXuddq+I7iAcbHeIezcB\n7IXK+IxQ7UESbFp3yst6S4/NL50ueDUtD7Ap5e1U47AmbezhbP9dEgDpxbUIeCUl\ny084PG7GCR4aBuKY3AkTjq6nJp+x1wy3CSEik6LO+XCC5LuQspfMiDgw1mp7+lAc\neo8LGjSzvyL9hD1mMWR3AYMAS6dK2maGyHobrR+a4qMIivc3qu99fF3qT/x9ypNG\nMJtuuQW9IO1wtPa8HhUVw+WJnoEZgQ5YPrFNg5arp09F7+SqmHWiMW1QUJL2G37R\nHre0X3fSO3ehlM3+DSyIS0Kk81Xxfd6wIKt2Ydr66MqRS+cT88bRhAEq7zT1XNae\nZL6yAfpKmcb9zZqJIGKTKNTcCzeq3OlH9FjbJKRofkZ9E9wdgjo=\n=GyyT\n-----END PGP SIGNATURE-----",
        "payload": "tree 78485fdee449a2b50637b362d10debe9a0e77dad\nparent ed218a21a1bb7a083addac4eabe21da77052dd35\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1560775151 +0200\ncommitter fanquake <fanquake@gmail.com> 1562474290 +0800\n\ndevtools: Fetch and display ACKs at sign-off time in github-merge\n\n- Fetch the ACKs only at sign-off time. This makes sure that any\n  last-minute ACKs are included (fixes #16200)\n- Show a list of ACKs and their author before signing off, and warn if\n  there are none\n\nGithub-Pull: #16223\nRebased-From: 0e01e4522e0f9e2e994f80fc61f40d61a4a70d79\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b58763ba0155ae1a73e3d4176fd59c48a4ac1a51",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b58763ba0155ae1a73e3d4176fd59c48a4ac1a51",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b58763ba0155ae1a73e3d4176fd59c48a4ac1a51/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ed218a21a1bb7a083addac4eabe21da77052dd35",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed218a21a1bb7a083addac4eabe21da77052dd35",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ed218a21a1bb7a083addac4eabe21da77052dd35"
      }
    ],
    "stats": {
      "total": 68,
      "additions": 49,
      "deletions": 19
    },
    "files": [
      {
        "sha": "cd7a271e830c28662824cd29490be3475d2cfde8",
        "filename": "contrib/devtools/github-merge.py",
        "status": "modified",
        "additions": 49,
        "deletions": 19,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b58763ba0155ae1a73e3d4176fd59c48a4ac1a51/contrib/devtools/github-merge.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b58763ba0155ae1a73e3d4176fd59c48a4ac1a51/contrib/devtools/github-merge.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.py?ref=b58763ba0155ae1a73e3d4176fd59c48a4ac1a51",
        "patch": "@@ -32,10 +32,14 @@\n # OS specific configuration for terminal attributes\n ATTR_RESET = ''\n ATTR_PR = ''\n+ATTR_NAME = ''\n+ATTR_WARN = ''\n COMMIT_FORMAT = '%H %s (%an)%d'\n if os.name == 'posix': # if posix, assume we can use basic terminal escapes\n     ATTR_RESET = '\\033[0m'\n     ATTR_PR = '\\033[1;36m'\n+    ATTR_NAME = '\\033[0;36m'\n+    ATTR_WARN = '\\033[1;31m'\n     COMMIT_FORMAT = '%C(bold blue)%H%Creset %s %C(cyan)(%an)%Creset%C(green)%d%Creset'\n \n def git_config_get(option, default=None):\n@@ -164,18 +168,36 @@ def tree_sha512sum(commit='HEAD'):\n     return overall.hexdigest()\n \n def get_acks_from_comments(head_commit, comments):\n-    assert len(head_commit) == 6\n-    ack_str ='\\n\\nACKs for commit {}:\\n'.format(head_commit)\n+    # Look for abbreviated commit id, because not everyone wants to type/paste\n+    # the whole thing and the chance of collisions within a PR is small enough\n+    head_abbrev = head_commit[0:6]\n+    acks = []\n     for c in comments:\n-        review = [l for l in c['body'].split('\\r\\n') if 'ACK' in l and head_commit in l]\n+        review = [l for l in c['body'].split('\\r\\n') if 'ACK' in l and head_abbrev in l]\n         if review:\n-            ack_str += '  {}:\\n'.format(c['user']['login'])\n-            ack_str += '    {}\\n'.format(review[0])\n+            acks.append((c['user']['login'], review[0]))\n+    return acks\n+\n+def make_acks_message(head_commit, acks):\n+    if acks:\n+        ack_str ='\\n\\nACKs for top commit:\\n'.format(head_commit)\n+        for name, msg in acks:\n+            ack_str += '  {}:\\n'.format(name)\n+            ack_str += '    {}\\n'.format(msg)\n+    else:\n+        ack_str ='\\n\\nTop commit has no ACKs.\\n'\n     return ack_str\n \n-def print_merge_details(pull, title, branch, base_branch, head_branch):\n+def print_merge_details(pull, title, branch, base_branch, head_branch, acks):\n     print('%s#%s%s %s %sinto %s%s' % (ATTR_RESET+ATTR_PR,pull,ATTR_RESET,title,ATTR_RESET+ATTR_PR,branch,ATTR_RESET))\n     subprocess.check_call([GIT,'log','--graph','--topo-order','--pretty=format:'+COMMIT_FORMAT,base_branch+'..'+head_branch])\n+    if acks is not None:\n+        if acks:\n+            print('{}ACKs:{}'.format(ATTR_PR, ATTR_RESET))\n+            for (name, message) in acks:\n+                print('* {} {}({}){}'.format(message, ATTR_NAME, name, ATTR_RESET))\n+        else:\n+            print('{}Top commit has no ACKs!{}'.format(ATTR_WARN, ATTR_RESET))\n \n def parse_arguments():\n     epilog = '''\n@@ -225,9 +247,6 @@ def main():\n     info = retrieve_pr_info(repo,pull,ghtoken)\n     if info is None:\n         sys.exit(1)\n-    comments = retrieve_pr_comments(repo,pull,ghtoken) + retrieve_pr_reviews(repo,pull,ghtoken)\n-    if comments is None:\n-        sys.exit(1)\n     title = info['title'].strip()\n     body = info['body'].strip()\n     # precedence order for destination branch argument:\n@@ -257,6 +276,8 @@ def main():\n         sys.exit(3)\n     try:\n         subprocess.check_call([GIT,'log','-q','-1','refs/heads/'+head_branch], stdout=devnull, stderr=stdout)\n+        head_commit = subprocess.check_output([GIT,'log','-1','--pretty=format:%H',head_branch]).decode('utf-8')\n+        assert len(head_commit) == 40\n     except subprocess.CalledProcessError:\n         print(\"ERROR: Cannot find head of pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n         sys.exit(3)\n@@ -281,7 +302,6 @@ def main():\n         message = firstline + '\\n\\n'\n         message += subprocess.check_output([GIT,'log','--no-merges','--topo-order','--pretty=format:%H %s (%an)',base_branch+'..'+head_branch]).decode('utf-8')\n         message += '\\n\\nPull request description:\\n\\n  ' + body.replace('\\n', '\\n  ') + '\\n'\n-        message += get_acks_from_comments(head_commit=subprocess.check_output([GIT,'log','-1','--pretty=format:%H',head_branch]).decode('utf-8')[:6], comments=comments)\n         try:\n             subprocess.check_call([GIT,'merge','-q','--commit','--no-edit','--no-ff','--no-gpg-sign','-m',message.encode('utf-8'),head_branch])\n         except subprocess.CalledProcessError:\n@@ -299,20 +319,14 @@ def main():\n         if len(symlink_files) > 0:\n             sys.exit(4)\n \n-        # Put tree SHA512 into the message\n+        # Compute SHA512 of git tree (to be able to detect changes before sign-off)\n         try:\n             first_sha512 = tree_sha512sum()\n-            message += '\\n\\nTree-SHA512: ' + first_sha512\n         except subprocess.CalledProcessError:\n             print(\"ERROR: Unable to compute tree hash\")\n             sys.exit(4)\n-        try:\n-            subprocess.check_call([GIT,'commit','--amend','--no-gpg-sign','-m',message.encode('utf-8')])\n-        except subprocess.CalledProcessError:\n-            print(\"ERROR: Cannot update message.\", file=stderr)\n-            sys.exit(4)\n \n-        print_merge_details(pull, title, branch, base_branch, head_branch)\n+        print_merge_details(pull, title, branch, base_branch, head_branch, None)\n         print()\n \n         # Run test command if configured.\n@@ -345,8 +359,24 @@ def main():\n             print(\"ERROR: Tree hash changed unexpectedly\",file=stderr)\n             sys.exit(8)\n \n+        # Retrieve PR comments and ACKs and add to commit message, store ACKs to print them with commit\n+        # description\n+        comments = retrieve_pr_comments(repo,pull,ghtoken) + retrieve_pr_reviews(repo,pull,ghtoken)\n+        if comments is None:\n+            print(\"ERROR: Could not fetch PR comments and reviews\",file=stderr)\n+            sys.exit(1)\n+        acks = get_acks_from_comments(head_commit=head_commit, comments=comments)\n+        message += make_acks_message(head_commit=head_commit, acks=acks)\n+        # end message with SHA512 tree hash, then update message\n+        message += '\\n\\nTree-SHA512: ' + first_sha512\n+        try:\n+            subprocess.check_call([GIT,'commit','--amend','--no-gpg-sign','-m',message.encode('utf-8')])\n+        except subprocess.CalledProcessError:\n+            print(\"ERROR: Cannot update message.\", file=stderr)\n+            sys.exit(4)\n+\n         # Sign the merge commit.\n-        print_merge_details(pull, title, branch, base_branch, head_branch)\n+        print_merge_details(pull, title, branch, base_branch, head_branch, acks)\n         while True:\n             reply = ask_prompt(\"Type 's' to sign off on the above merge, or 'x' to reject and exit.\").lower()\n             if reply == 's':"
      }
    ]
  }
]