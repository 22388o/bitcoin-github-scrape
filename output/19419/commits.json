[
  {
    "sha": "da6eb3c2f8ed5c8e2a5acb878a1abcb9d6f1c02b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYTZlYjNjMmY4ZWQ1YzhlMmE1YWNiODc4YTFhYmNiOWQ2ZjFjMDJi",
    "commit": {
      "author": {
        "name": "saibato",
        "email": "saibato.naga@pm.me",
        "date": "2020-06-30T06:27:58Z"
      },
      "committer": {
        "name": "saibato",
        "email": "saibato.naga@pm.me",
        "date": "2020-10-08T10:29:47Z"
      },
      "message": "wallet: let ListWalletDir do not iterate trough our blocksdata.\n\nWhen WalletDir == DataDir we would have iterate trough our own node files\nto find wallets, that consumes time and could cause an unresponsive node.",
      "tree": {
        "sha": "f5c6930e84a925a558dfd4c9b4225e04caa6e520",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f5c6930e84a925a558dfd4c9b4225e04caa6e520"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da6eb3c2f8ed5c8e2a5acb878a1abcb9d6f1c02b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da6eb3c2f8ed5c8e2a5acb878a1abcb9d6f1c02b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/da6eb3c2f8ed5c8e2a5acb878a1abcb9d6f1c02b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da6eb3c2f8ed5c8e2a5acb878a1abcb9d6f1c02b/comments",
    "author": {
      "login": "Saibato",
      "id": 34917548,
      "node_id": "MDQ6VXNlcjM0OTE3NTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/34917548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Saibato",
      "html_url": "https://github.com/Saibato",
      "followers_url": "https://api.github.com/users/Saibato/followers",
      "following_url": "https://api.github.com/users/Saibato/following{/other_user}",
      "gists_url": "https://api.github.com/users/Saibato/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Saibato/subscriptions",
      "organizations_url": "https://api.github.com/users/Saibato/orgs",
      "repos_url": "https://api.github.com/users/Saibato/repos",
      "events_url": "https://api.github.com/users/Saibato/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Saibato/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Saibato",
      "id": 34917548,
      "node_id": "MDQ6VXNlcjM0OTE3NTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/34917548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Saibato",
      "html_url": "https://github.com/Saibato",
      "followers_url": "https://api.github.com/users/Saibato/followers",
      "following_url": "https://api.github.com/users/Saibato/following{/other_user}",
      "gists_url": "https://api.github.com/users/Saibato/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Saibato/subscriptions",
      "organizations_url": "https://api.github.com/users/Saibato/orgs",
      "repos_url": "https://api.github.com/users/Saibato/repos",
      "events_url": "https://api.github.com/users/Saibato/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Saibato/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9dd4de2832e298398436b957375d62de67f0a928",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9dd4de2832e298398436b957375d62de67f0a928",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9dd4de2832e298398436b957375d62de67f0a928"
      }
    ],
    "stats": {
      "total": 61,
      "additions": 43,
      "deletions": 18
    },
    "files": [
      {
        "sha": "53db1a065c94b6446c04868d0fde04ca20284c16",
        "filename": "src/wallet/walletutil.cpp",
        "status": "modified",
        "additions": 43,
        "deletions": 18,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da6eb3c2f8ed5c8e2a5acb878a1abcb9d6f1c02b/src/wallet/walletutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da6eb3c2f8ed5c8e2a5acb878a1abcb9d6f1c02b/src/wallet/walletutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletutil.cpp?ref=da6eb3c2f8ed5c8e2a5acb878a1abcb9d6f1c02b",
        "patch": "@@ -57,35 +57,60 @@ bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    // Those directories are referenced in doc/files.md\n+    const std::vector<fs::path> ignore_paths = {\n+                                        blocks_dir,\n+                                        data_dir / \"blktree\",\n+                                        data_dir / \"chainstate\",\n+                                        data_dir / \"coins\",\n+                                        data_dir / \"database\",\n+                                        data_dir / \"indexes\",\n+                                        data_dir / \"regtest\",\n+                                        data_dir / \"signet\",\n+                                        data_dir / \"testnet3\"\n+                                        };\n+\n     for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n         if (ec) {\n             LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n             continue;\n         }\n \n-        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n-        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n-        const fs::path path = it->path().string().substr(offset);\n-\n-        if (it->status().type() == fs::directory_file && IsBerkeleyBtree(it->path() / \"wallet.dat\")) {\n-            // Found a directory which contains wallet.dat btree file, add it as a wallet.\n-            paths.emplace_back(path);\n-        } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBerkeleyBtree(it->path())) {\n-            if (it->path().filename() == \"wallet.dat\") {\n-                // Found top-level wallet.dat btree file, add top level directory \"\"\n-                // as a wallet.\n-                paths.emplace_back();\n-            } else {\n-                // Found top-level btree file not called wallet.dat. Current bitcoin\n-                // software will never create these files but will allow them to be\n-                // opened in a shared database environment for backwards compatibility.\n-                // Add it to the list of available wallets.\n-                paths.emplace_back(path);\n+        // We don't want to iterate through those special node dirs\n+        if (std::count(ignore_paths.begin(), ignore_paths.end(), it->path())) {\n+            it.no_push();\n+            continue;\n+        }\n+\n+        try {\n+            if (it->status().type() == fs::directory_file && IsBerkeleyBtree(it->path() / \"wallet.dat\")) {\n+                // Found a directory which contains wallet.dat btree file, add it as a wallet.\n+                // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n+                // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n+                paths.emplace_back(it->path().string().substr(offset));\n+            } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBerkeleyBtree(it->path())) {\n+                if (it->path().filename() == \"wallet.dat\") {\n+                    // Found top-level wallet.dat btree file, add top level directory \"\"\n+                    // as a wallet.\n+                    paths.emplace_back();\n+                } else {\n+                    // Found top-level btree file not called wallet.dat. Current bitcoin\n+                    // software will never create these files but will allow them to be\n+                    // opened in a shared database environment for backwards compatibility.\n+                    // Add it to the list of available wallets.\n+                    paths.emplace_back(it->path().filename());\n+                }\n             }\n+        } catch (const std::exception& e) {\n+            LogPrintf(\"%s: Error scanning %s: %s\\n\", __func__, it->path().string(), e.what());\n         }\n     }\n "
      }
    ]
  },
  {
    "sha": "3f9cc0cd736e79c563dee3573f0dab01dac10622",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZjljYzBjZDczNmU3OWM1NjNkZWUzNTczZjBkYWIwMWRhYzEwNjIy",
    "commit": {
      "author": {
        "name": "saibato",
        "email": "saibato.naga@pm.me",
        "date": "2020-10-12T11:55:43Z"
      },
      "committer": {
        "name": "saibato",
        "email": "saibato.naga@pm.me",
        "date": "2020-10-12T11:55:43Z"
      },
      "message": "add #include <algorithm> to src/wallet/walletutil.h\n\nDesigned to be used on ranges of elements.",
      "tree": {
        "sha": "228a3287fb51d7c4b67b421b740cacacc29e0e42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/228a3287fb51d7c4b67b421b740cacacc29e0e42"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f9cc0cd736e79c563dee3573f0dab01dac10622",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3f9cc0cd736e79c563dee3573f0dab01dac10622",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f9cc0cd736e79c563dee3573f0dab01dac10622/comments",
    "author": {
      "login": "Saibato",
      "id": 34917548,
      "node_id": "MDQ6VXNlcjM0OTE3NTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/34917548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Saibato",
      "html_url": "https://github.com/Saibato",
      "followers_url": "https://api.github.com/users/Saibato/followers",
      "following_url": "https://api.github.com/users/Saibato/following{/other_user}",
      "gists_url": "https://api.github.com/users/Saibato/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Saibato/subscriptions",
      "organizations_url": "https://api.github.com/users/Saibato/orgs",
      "repos_url": "https://api.github.com/users/Saibato/repos",
      "events_url": "https://api.github.com/users/Saibato/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Saibato/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Saibato",
      "id": 34917548,
      "node_id": "MDQ6VXNlcjM0OTE3NTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/34917548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Saibato",
      "html_url": "https://github.com/Saibato",
      "followers_url": "https://api.github.com/users/Saibato/followers",
      "following_url": "https://api.github.com/users/Saibato/following{/other_user}",
      "gists_url": "https://api.github.com/users/Saibato/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Saibato/subscriptions",
      "organizations_url": "https://api.github.com/users/Saibato/orgs",
      "repos_url": "https://api.github.com/users/Saibato/repos",
      "events_url": "https://api.github.com/users/Saibato/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Saibato/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "da6eb3c2f8ed5c8e2a5acb878a1abcb9d6f1c02b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da6eb3c2f8ed5c8e2a5acb878a1abcb9d6f1c02b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da6eb3c2f8ed5c8e2a5acb878a1abcb9d6f1c02b"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a7f8a9166e856102ed562c66366362cc214a6c5e",
        "filename": "src/wallet/walletutil.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f9cc0cd736e79c563dee3573f0dab01dac10622/src/wallet/walletutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f9cc0cd736e79c563dee3573f0dab01dac10622/src/wallet/walletutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletutil.h?ref=3f9cc0cd736e79c563dee3573f0dab01dac10622",
        "patch": "@@ -5,6 +5,7 @@\n #ifndef BITCOIN_WALLET_WALLETUTIL_H\n #define BITCOIN_WALLET_WALLETUTIL_H\n \n+#include <algorithm>\n #include <fs.h>\n #include <script/descriptor.h>\n "
      }
    ]
  }
]