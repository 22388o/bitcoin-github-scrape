[
  {
    "sha": "30c2d9db48ab552a3deef2df504fd973200756da",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMGMyZDlkYjQ4YWI1NTJhM2RlZWYyZGY1MDRmZDk3MzIwMDc1NmRh",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-06-08T07:43:54Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-06-08T07:43:54Z"
      },
      "message": "[tests] Remove unused function InsecureRandBytes(size_t len)",
      "tree": {
        "sha": "6af36e11bc1c701cad0306a78821e059cb31441d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6af36e11bc1c701cad0306a78821e059cb31441d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/30c2d9db48ab552a3deef2df504fd973200756da",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30c2d9db48ab552a3deef2df504fd973200756da",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/30c2d9db48ab552a3deef2df504fd973200756da",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30c2d9db48ab552a3deef2df504fd973200756da/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e801084decf4542d57cf5ddb95820643766a172a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e801084decf4542d57cf5ddb95820643766a172a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e801084decf4542d57cf5ddb95820643766a172a"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 0,
      "deletions": 1
    },
    "files": [
      {
        "sha": "c9e4a3427fc393c6cc7ffc83ee583047960515b8",
        "filename": "src/test/test_bitcoin.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/30c2d9db48ab552a3deef2df504fd973200756da/src/test/test_bitcoin.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/30c2d9db48ab552a3deef2df504fd973200756da/src/test/test_bitcoin.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.h?ref=30c2d9db48ab552a3deef2df504fd973200756da",
        "patch": "@@ -33,7 +33,6 @@ static inline uint256 InsecureRand256() { return insecure_rand_ctx.rand256(); }\n static inline uint64_t InsecureRandBits(int bits) { return insecure_rand_ctx.randbits(bits); }\n static inline uint64_t InsecureRandRange(uint64_t range) { return insecure_rand_ctx.randrange(range); }\n static inline bool InsecureRandBool() { return insecure_rand_ctx.randbool(); }\n-static inline std::vector<unsigned char> InsecureRandBytes(size_t len) { return insecure_rand_ctx.randbytes(len); }\n \n /** Basic testing setup.\n  * This just configures logging and chain parameters."
      }
    ]
  },
  {
    "sha": "9f841a6c3d8ebc6a84ac646604eebcdb9d6763ef",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5Zjg0MWE2YzNkOGViYzZhODRhYzY0NjYwNGVlYmNkYjlkNjc2M2Vm",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-06-08T07:44:32Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-06-08T07:44:32Z"
      },
      "message": "[tests] Remove accidental trailing semicolon",
      "tree": {
        "sha": "dc138336a0a7448f1f0c673c2cfcb884c89212c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dc138336a0a7448f1f0c673c2cfcb884c89212c5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9f841a6c3d8ebc6a84ac646604eebcdb9d6763ef",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f841a6c3d8ebc6a84ac646604eebcdb9d6763ef",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9f841a6c3d8ebc6a84ac646604eebcdb9d6763ef",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f841a6c3d8ebc6a84ac646604eebcdb9d6763ef/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "30c2d9db48ab552a3deef2df504fd973200756da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30c2d9db48ab552a3deef2df504fd973200756da",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/30c2d9db48ab552a3deef2df504fd973200756da"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "d6bf3ea59fd3149e207115ebbcc8d98dffcc6dc4",
        "filename": "test/functional/replace-by-fee.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f841a6c3d8ebc6a84ac646604eebcdb9d6763ef/test/functional/replace-by-fee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f841a6c3d8ebc6a84ac646604eebcdb9d6763ef/test/functional/replace-by-fee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/replace-by-fee.py?ref=9f841a6c3d8ebc6a84ac646604eebcdb9d6763ef",
        "patch": "@@ -521,7 +521,7 @@ def test_prioritised_transactions(self):\n \n     def test_rpc(self):\n         us0 = self.nodes[0].listunspent()[0]\n-        ins = [us0];\n+        ins = [us0]\n         outs = {self.nodes[0].getnewaddress() : Decimal(1.0000000)}\n         rawtx0 = self.nodes[0].createrawtransaction(ins, outs, 0, True)\n         rawtx1 = self.nodes[0].createrawtransaction(ins, outs, 0, False)"
      }
    ]
  },
  {
    "sha": "67ca816849d0aa292a138e6c08edafd17ad6a948",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2N2NhODE2ODQ5ZDBhYTI5MmExMzhlNmMwOGVkYWZkMTdhZDZhOTQ4",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-06-08T10:06:09Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-06-11T13:44:01Z"
      },
      "message": "Simplify \"bool x = y ? true : false\" to \"bool x = y\"",
      "tree": {
        "sha": "e2ca124d75428396a34ea9308e644436de912268",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e2ca124d75428396a34ea9308e644436de912268"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/67ca816849d0aa292a138e6c08edafd17ad6a948",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/67ca816849d0aa292a138e6c08edafd17ad6a948",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/67ca816849d0aa292a138e6c08edafd17ad6a948",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/67ca816849d0aa292a138e6c08edafd17ad6a948/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9f841a6c3d8ebc6a84ac646604eebcdb9d6763ef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f841a6c3d8ebc6a84ac646604eebcdb9d6763ef",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9f841a6c3d8ebc6a84ac646604eebcdb9d6763ef"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "9cac10d2b8adc9d0f2b5353bb2ad205128cff8f6",
        "filename": "src/blockencodings.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/67ca816849d0aa292a138e6c08edafd17ad6a948/src/blockencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/67ca816849d0aa292a138e6c08edafd17ad6a948/src/blockencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockencodings.cpp?ref=67ca816849d0aa292a138e6c08edafd17ad6a948",
        "patch": "@@ -172,7 +172,7 @@ ReadStatus PartiallyDownloadedBlock::InitData(const CBlockHeaderAndShortTxIDs& c\n bool PartiallyDownloadedBlock::IsTxAvailable(size_t index) const {\n     assert(!header.IsNull());\n     assert(index < txn_available.size());\n-    return txn_available[index] ? true : false;\n+    return txn_available[index] != nullptr;\n }\n \n ReadStatus PartiallyDownloadedBlock::FillBlock(CBlock& block, const std::vector<CTransactionRef>& vtx_missing) {"
      },
      {
        "sha": "76aa7ec992a488e67c40d83b0c5a630c4ec30571",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/67ca816849d0aa292a138e6c08edafd17ad6a948/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/67ca816849d0aa292a138e6c08edafd17ad6a948/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=67ca816849d0aa292a138e6c08edafd17ad6a948",
        "patch": "@@ -212,8 +212,8 @@ UniValue validateaddress(const JSONRPCRequest& request)\n \n #ifdef ENABLE_WALLET\n         isminetype mine = pwallet ? IsMine(*pwallet, dest) : ISMINE_NO;\n-        ret.push_back(Pair(\"ismine\", (mine & ISMINE_SPENDABLE) ? true : false));\n-        ret.push_back(Pair(\"iswatchonly\", (mine & ISMINE_WATCH_ONLY) ? true: false));\n+        ret.push_back(Pair(\"ismine\", bool(mine & ISMINE_SPENDABLE)));\n+        ret.push_back(Pair(\"iswatchonly\", bool(mine & ISMINE_WATCH_ONLY)));\n         UniValue detail = boost::apply_visitor(DescribeAddressVisitor(pwallet), dest);\n         ret.pushKVs(detail);\n         if (pwallet && pwallet->mapAddressBook.count(dest)) {"
      },
      {
        "sha": "eaff2ac70d3b5204454cd09419ece7919aa90e83",
        "filename": "src/test/miner_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/67ca816849d0aa292a138e6c08edafd17ad6a948/src/test/miner_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/67ca816849d0aa292a138e6c08edafd17ad6a948/src/test/miner_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/miner_tests.cpp?ref=67ca816849d0aa292a138e6c08edafd17ad6a948",
        "patch": "@@ -260,7 +260,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     {\n         tx.vout[0].nValue -= LOWFEE;\n         hash = tx.GetHash();\n-        bool spendsCoinbase = (i == 0) ? true : false; // only first tx spends coinbase\n+        bool spendsCoinbase = i == 0; // only first tx spends coinbase\n         // If we don't set the # of sig ops in the CTxMemPoolEntry, template creation fails\n         mempool.addUnchecked(hash, entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(spendsCoinbase).FromTx(tx));\n         tx.vin[0].prevout.hash = hash;\n@@ -274,7 +274,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     {\n         tx.vout[0].nValue -= LOWFEE;\n         hash = tx.GetHash();\n-        bool spendsCoinbase = (i == 0) ? true : false; // only first tx spends coinbase\n+        bool spendsCoinbase = i == 0; // only first tx spends coinbase\n         // If we do set the # of sig ops in the CTxMemPoolEntry, template creation passes\n         mempool.addUnchecked(hash, entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(spendsCoinbase).SigOpsCost(80).FromTx(tx));\n         tx.vin[0].prevout.hash = hash;\n@@ -295,7 +295,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     {\n         tx.vout[0].nValue -= LOWFEE;\n         hash = tx.GetHash();\n-        bool spendsCoinbase = (i == 0) ? true : false; // only first tx spends coinbase\n+        bool spendsCoinbase = i == 0; // only first tx spends coinbase\n         mempool.addUnchecked(hash, entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(spendsCoinbase).FromTx(tx));\n         tx.vin[0].prevout.hash = hash;\n     }"
      }
    ]
  }
]