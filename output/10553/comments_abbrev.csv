achow101,2017-06-08T21:01:37Z,utACK a65124bc44515c60e13e74ec83f6adbb8cc48a68,https://github.com/bitcoin/bitcoin/pull/10553#issuecomment-307226335,307226335,
paveljanik,2017-06-09T11:49:30Z,utACK a65124b,https://github.com/bitcoin/bitcoin/pull/10553#issuecomment-307368338,307368338,
fanquake,2017-06-09T13:47:05Z,utACK a65124b,https://github.com/bitcoin/bitcoin/pull/10553#issuecomment-307393126,307393126,
practicalswift,2017-06-11T13:46:18Z,@laanwj Good point! Now using the suggested `bool(mine & ISMINE_SPENDABLE)` form.,https://github.com/bitcoin/bitcoin/pull/10553#issuecomment-307630044,307630044,
sipa,2017-06-12T21:59:40Z,utACK 67ca816849d0aa292a138e6c08edafd17ad6a948,https://github.com/bitcoin/bitcoin/pull/10553#issuecomment-307946369,307946369,
laanwj,2017-06-11T12:45:40Z,"Wouldn't simply `bool(mine & ISMINE_SPENDABLE)` work? I don't think we really want to re-interpret the value as a bool here, but instantiate a bool with the value `!=0`. I know static_cast doesn't reinterpret values, but it seems ugly...\nSpeaking of which, this could even be `(mine & ISMINE_SPENDABLE) != 0`?",https://github.com/bitcoin/bitcoin/pull/10553#discussion_r121280635,121280635,src/rpc/misc.cpp
