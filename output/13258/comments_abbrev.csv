Empact,2018-05-17T06:06:44Z,"All the `GetCheapHash` calls are relative to `CHashWriter` and `BlockHasher`, how about putting it higher up?\n\nI'm not crazy about the template approach because it's overly general and doesn't guarantee that there are 64 bits there to read.",https://github.com/bitcoin/bitcoin/pull/13258#issuecomment-389755168,389755168,
kallewoof,2018-05-17T06:20:42Z,"> I'm not crazy about the template approach because it's overly general and doesn't guarantee that there are 64 bits there to read.\n\nYeah, but a uint256 does not guarantee it is random, either, so you still have to use this cautiously, even before this patch.\n\nPutting it in `CHashWriter` may be a better idea, for sure. I'll try that and see what it looks like.",https://github.com/bitcoin/bitcoin/pull/13258#issuecomment-389757622,389757622,
kallewoof,2018-05-17T06:37:00Z,"@Empact Changed to your suggested approach. No more template, and code looks cleaner. Only gotcha here is people may be tempted to `GetHash().GetCheapHash()` which will do `double-double-SHA256`, instead of `double-SHA256`. Considering the limited use, I think that gotcha is acceptable.",https://github.com/bitcoin/bitcoin/pull/13258#issuecomment-389760584,389760584,
Empact,2018-05-17T06:41:27Z,"Nice, looks much better IMO.",https://github.com/bitcoin/bitcoin/pull/13258#issuecomment-389761435,389761435,
Empact,2018-05-17T06:53:51Z,utACK 015e0f7,https://github.com/bitcoin/bitcoin/pull/13258#issuecomment-389763950,389763950,
Empact,2018-05-17T06:58:13Z,"I'd close #13242 in favor of this - as this offers endianness consistency, test stability, and better code organization.",https://github.com/bitcoin/bitcoin/pull/13258#issuecomment-389764904,389764904,
kallewoof,2018-05-17T07:03:09Z,"Yeah, it got too big for the desired effect. I *do* want to get rid of the unnecessary endianness consistency, though, but I think rewriting those tests to be a bit more useful is a necessary middle-step.",https://github.com/bitcoin/bitcoin/pull/13258#issuecomment-389765949,389765949,
DrahtBot,2018-07-22T23:49:13Z,"<!--5d09a71f8925f3f132321140b44b946d-->The last travis run for this pull request was 66 days ago and is thus outdated. To trigger a fresh travis build, this pull request should be closed and re-opened.",https://github.com/bitcoin/bitcoin/pull/13258#issuecomment-406906678,406906678,
DrahtBot,2018-09-07T18:54:44Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14624](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14624.html) (Some simple improvements to the RNG code by",https://github.com/bitcoin/bitcoin/pull/13258#issuecomment-419533385,419533385,
sipa,2018-09-10T01:27:17Z,utACK 361ecbf3e9ffe83800e845426b6cc835267c1932,https://github.com/bitcoin/bitcoin/pull/13258#issuecomment-419762014,419762014,
MarcoFalke,2018-09-10T01:54:41Z,utACK 361ecbf3e9ffe83800e845426b6cc835267c1932,https://github.com/bitcoin/bitcoin/pull/13258#issuecomment-419765366,419765366,
Empact,2018-09-10T17:42:55Z,re-utACK 361ecbf,https://github.com/bitcoin/bitcoin/pull/13258#issuecomment-419999053,419999053,
ken2812221,2018-09-17T00:03:15Z,re-utACK 93baaf9,https://github.com/bitcoin/bitcoin/pull/13258#issuecomment-421856735,421856735,
MarcoFalke,2018-09-17T19:34:25Z,re-utACK 93baaf9c3e,https://github.com/bitcoin/bitcoin/pull/13258#issuecomment-422142035,422142035,
promag,2018-09-18T10:27:31Z,utACK bf2e010.,https://github.com/bitcoin/bitcoin/pull/13258#issuecomment-422340520,422340520,
MarcoFalke,2018-11-07T18:28:18Z,utACK bf2e010973,https://github.com/bitcoin/bitcoin/pull/13258#issuecomment-436728409,436728409,
Empact,2018-11-07T20:33:39Z,re-utACK bf2e010,https://github.com/bitcoin/bitcoin/pull/13258#issuecomment-436767522,436767522,
Empact,2018-05-17T06:41:57Z,Unnecessary include.,https://github.com/bitcoin/bitcoin/pull/13258#discussion_r188852331,188852331,src/addrman.cpp
kallewoof,2018-05-17T06:47:10Z,Thanks!,https://github.com/bitcoin/bitcoin/pull/13258#discussion_r188853266,188853266,src/addrman.cpp
Empact,2018-09-10T17:42:37Z,nit: Could benefit from a comment referencing `GetCheapHash` to explain the implementation.,https://github.com/bitcoin/bitcoin/pull/13258#discussion_r216412281,216412281,src/validation.h
kallewoof,2018-09-11T06:11:31Z,Okay. Got 3 utACKs so will fix this if another rebase becomes necessary or other changes are suggested.,https://github.com/bitcoin/bitcoin/pull/13258#discussion_r216554971,216554971,src/validation.h
MarcoFalke,2018-09-11T13:39:24Z,"Could add a commit with ""doc: bla..."" on top of the branch (not touching the existing commits)?",https://github.com/bitcoin/bitcoin/pull/13258#discussion_r216672353,216672353,src/validation.h
kallewoof,2018-09-12T01:58:08Z,Good idea. Done!,https://github.com/bitcoin/bitcoin/pull/13258#discussion_r216876608,216876608,src/validation.h
laanwj,2018-09-13T11:51:24Z,"I don't think this comment is still appropriate. As it samples the output, which went through a hash function, this requirement about the distribution of the input of the hash writer no longer holds.",https://github.com/bitcoin/bitcoin/pull/13258#discussion_r217354667,217354667,src/hash.h
kallewoof,2018-09-14T02:44:21Z,"Good point. I also wonder about the 'cheap' part here, as it's actually just taking the prefix of the real hash, but keeping for now.",https://github.com/bitcoin/bitcoin/pull/13258#discussion_r217588024,217588024,src/hash.h
promag,2018-09-17T22:16:14Z,"nit, sort.",https://github.com/bitcoin/bitcoin/pull/13258#discussion_r218245362,218245362,src/validation.h
kallewoof,2018-09-18T05:27:57Z,Damn. Fixed.,https://github.com/bitcoin/bitcoin/pull/13258#discussion_r218302251,218302251,src/validation.h
