hebasto,2019-01-06T10:49:55Z,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/15114#issuecomment-451732075,451732075,
luke-jr,2019-01-06T11:34:02Z,Rationale? Changing code style stuff for no reason isn't useful...,https://github.com/bitcoin/bitcoin/pull/15114#issuecomment-451734605,451734605,
practicalswift,2019-01-06T15:56:26Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/15114#issuecomment-451752379,451752379,
practicalswift,2019-01-06T16:00:21Z,"@luke-jr The change @Empact is suggesting is not a code style change.\n\nReasons to use `nullptr` include:\n* `nullptr` has a well-specified (very restrictive) type, and thus works in more scenarios where type deduction might do the wrong thing on `NULL` or `0`.\n* Improves readability.\n* Minimises surprises: `nullptr` cannot be confused with an `int`.\n\nEnabling `-Wzero-as-null-pointer-c",https://github.com/bitcoin/bitcoin/pull/15114#issuecomment-451752682,451752682,
practicalswift,2019-01-06T16:05:01Z,utACK 60a2a0b24275757dee767deafadd86d24889bdf8,https://github.com/bitcoin/bitcoin/pull/15114#issuecomment-451753028,451753028,
hebasto,2019-01-06T17:22:35Z,"utACK 60a2a0b24275757dee767deafadd86d24889bdf8.\nnit: could [clang-format-diff.py](https://github.com/bitcoin/bitcoin/tree/master/contrib/devtools#clang-format-diffpy) be applied?",https://github.com/bitcoin/bitcoin/pull/15114#issuecomment-451758587,451758587,
promag,2019-01-06T17:50:04Z,"Concept ACK, agree it improves code.\n\nI don't think this should be merged without something to prevent more zero-as-null-pointer.",https://github.com/bitcoin/bitcoin/pull/15114#issuecomment-451760480,451760480,
practicalswift,2019-01-06T17:56:35Z,"@promag That is taken care of in #15112, right? :-)",https://github.com/bitcoin/bitcoin/pull/15114#issuecomment-451760970,451760970,
laanwj,2019-01-07T14:33:19Z,"> I don't think this should be merged without something to prevent more zero-as-null-pointer.\n\nI agree, as discussed many times, we don't want PR after PR fixing 'straggler' occurrences. It's not *that* important that it warrants some kind of crusade.\n\nBut if #15112 enables failing the build on this I'm okay with that and they should probably be merged together.",https://github.com/bitcoin/bitcoin/pull/15114#issuecomment-451953456,451953456,
DrahtBot,2019-01-09T22:49:35Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15157](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15157.html) (rpc: Bumpfee units change, satoshis to BTC ",https://github.com/bitcoin/bitcoin/pull/15114#issuecomment-452898922,452898922,
Empact,2019-01-13T17:11:10Z,Rebased for #13216,https://github.com/bitcoin/bitcoin/pull/15114#issuecomment-453847291,453847291,
practicalswift,2019-01-14T08:37:23Z,utACK 3a0e76fc12b91b2846d756981e15f09b767a9c37,https://github.com/bitcoin/bitcoin/pull/15114#issuecomment-453930926,453930926,
laanwj,2019-01-14T14:21:25Z,utACK 3a0e76fc12b91b2846d756981e15f09b767a9c37,https://github.com/bitcoin/bitcoin/pull/15114#issuecomment-454020751,454020751,
Empact,2019-01-06T10:40:11Z,https://docs.oracle.com/cd/E17076_05/html/api_reference/CXX/envversion.html,https://github.com/bitcoin/bitcoin/pull/15114#discussion_r245503738,245503738,src/wallet/db.cpp
Empact,2019-01-06T11:12:58Z,http://doc.qt.io/qt-5/qt.html#ItemFlag-enum,https://github.com/bitcoin/bitcoin/pull/15114#discussion_r245504509,245504509,src/qt/addresstablemodel.cpp
Empact,2019-01-06T11:17:31Z,http://doc.qt.io/qt-5/qt.html#WindowType-enum,https://github.com/bitcoin/bitcoin/pull/15114#discussion_r245504623,245504623,src/qt/utilitydialog.h
