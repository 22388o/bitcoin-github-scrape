[
  {
    "sha": "08d9373e2faa2220b9417f8d8a59dc51000e823d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOGQ5MzczZTJmYWEyMjIwYjk0MTdmOGQ4YTU5ZGM1MTAwMGU4MjNk",
    "commit": {
      "author": {
        "name": "Michael Ford",
        "email": "fanquake@gmail.com",
        "date": "2015-05-18T09:11:06Z"
      },
      "committer": {
        "name": "Michael Ford",
        "email": "fanquake@gmail.com",
        "date": "2015-05-18T09:11:06Z"
      },
      "message": "Remove unused code from wallet and validation interface\n\nFixes #6109",
      "tree": {
        "sha": "b38e21beca088d2f49570b021c5baeed531d6ef7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b38e21beca088d2f49570b021c5baeed531d6ef7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/08d9373e2faa2220b9417f8d8a59dc51000e823d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08d9373e2faa2220b9417f8d8a59dc51000e823d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/08d9373e2faa2220b9417f8d8a59dc51000e823d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08d9373e2faa2220b9417f8d8a59dc51000e823d/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "26e08a16a6fb64b535d10f5d459183092deefa50",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26e08a16a6fb64b535d10f5d459183092deefa50",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/26e08a16a6fb64b535d10f5d459183092deefa50"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 0,
      "deletions": 19
    },
    "files": [
      {
        "sha": "0532da5f37cb22f74cb3504eb21349a1bce35f1d",
        "filename": "src/validationinterface.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08d9373e2faa2220b9417f8d8a59dc51000e823d/src/validationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08d9373e2faa2220b9417f8d8a59dc51000e823d/src/validationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.cpp?ref=08d9373e2faa2220b9417f8d8a59dc51000e823d",
        "patch": "@@ -14,7 +14,6 @@ CMainSignals& GetMainSignals()\n \n void RegisterValidationInterface(CValidationInterface* pwalletIn) {\n     g_signals.SyncTransaction.connect(boost::bind(&CValidationInterface::SyncTransaction, pwalletIn, _1, _2));\n-    g_signals.EraseTransaction.connect(boost::bind(&CValidationInterface::EraseFromWallet, pwalletIn, _1));\n     g_signals.UpdatedTransaction.connect(boost::bind(&CValidationInterface::UpdatedTransaction, pwalletIn, _1));\n     g_signals.SetBestChain.connect(boost::bind(&CValidationInterface::SetBestChain, pwalletIn, _1));\n     g_signals.Inventory.connect(boost::bind(&CValidationInterface::Inventory, pwalletIn, _1));\n@@ -28,7 +27,6 @@ void UnregisterValidationInterface(CValidationInterface* pwalletIn) {\n     g_signals.Inventory.disconnect(boost::bind(&CValidationInterface::Inventory, pwalletIn, _1));\n     g_signals.SetBestChain.disconnect(boost::bind(&CValidationInterface::SetBestChain, pwalletIn, _1));\n     g_signals.UpdatedTransaction.disconnect(boost::bind(&CValidationInterface::UpdatedTransaction, pwalletIn, _1));\n-    g_signals.EraseTransaction.disconnect(boost::bind(&CValidationInterface::EraseFromWallet, pwalletIn, _1));\n     g_signals.SyncTransaction.disconnect(boost::bind(&CValidationInterface::SyncTransaction, pwalletIn, _1, _2));\n }\n \n@@ -38,7 +36,6 @@ void UnregisterAllValidationInterfaces() {\n     g_signals.Inventory.disconnect_all_slots();\n     g_signals.SetBestChain.disconnect_all_slots();\n     g_signals.UpdatedTransaction.disconnect_all_slots();\n-    g_signals.EraseTransaction.disconnect_all_slots();\n     g_signals.SyncTransaction.disconnect_all_slots();\n }\n "
      },
      {
        "sha": "a911d1efeb5c9e40a340aff318545d26798b8257",
        "filename": "src/validationinterface.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08d9373e2faa2220b9417f8d8a59dc51000e823d/src/validationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08d9373e2faa2220b9417f8d8a59dc51000e823d/src/validationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.h?ref=08d9373e2faa2220b9417f8d8a59dc51000e823d",
        "patch": "@@ -29,7 +29,6 @@ void SyncWithWallets(const CTransaction& tx, const CBlock* pblock = NULL);\n class CValidationInterface {\n protected:\n     virtual void SyncTransaction(const CTransaction &tx, const CBlock *pblock) {}\n-    virtual void EraseFromWallet(const uint256 &hash) {}\n     virtual void SetBestChain(const CBlockLocator &locator) {}\n     virtual void UpdatedTransaction(const uint256 &hash) {}\n     virtual void Inventory(const uint256 &hash) {}\n@@ -43,8 +42,6 @@ class CValidationInterface {\n struct CMainSignals {\n     /** Notifies listeners of updated transaction data (transaction, and optionally the block it is found in. */\n     boost::signals2::signal<void (const CTransaction &, const CBlock *)> SyncTransaction;\n-    /** Notifies listeners of an erased transaction (currently disabled, requires transaction replacement). */\n-    boost::signals2::signal<void (const uint256 &)> EraseTransaction;\n     /** Notifies listeners of an updated transaction without new data (for now: a coinbase potentially becoming visible). */\n     boost::signals2::signal<void (const uint256 &)> UpdatedTransaction;\n     /** Notifies listeners of a new active block chain. */"
      },
      {
        "sha": "9e4964552e9247de821294271c56e308329492e0",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08d9373e2faa2220b9417f8d8a59dc51000e823d/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08d9373e2faa2220b9417f8d8a59dc51000e823d/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=08d9373e2faa2220b9417f8d8a59dc51000e823d",
        "patch": "@@ -775,18 +775,6 @@ void CWallet::SyncTransaction(const CTransaction& tx, const CBlock* pblock)\n     }\n }\n \n-void CWallet::EraseFromWallet(const uint256 &hash)\n-{\n-    if (!fFileBacked)\n-        return;\n-    {\n-        LOCK(cs_wallet);\n-        if (mapWallet.erase(hash))\n-            CWalletDB(strWalletFile).EraseTx(hash);\n-    }\n-    return;\n-}\n-\n \n isminetype CWallet::IsMine(const CTxIn &txin) const\n {"
      },
      {
        "sha": "5c99b87ceaec35ad2616a7e4d0651b0fc873d645",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08d9373e2faa2220b9417f8d8a59dc51000e823d/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08d9373e2faa2220b9417f8d8a59dc51000e823d/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=08d9373e2faa2220b9417f8d8a59dc51000e823d",
        "patch": "@@ -615,7 +615,6 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     bool AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet, CWalletDB* pwalletdb);\n     void SyncTransaction(const CTransaction& tx, const CBlock* pblock);\n     bool AddToWalletIfInvolvingMe(const CTransaction& tx, const CBlock* pblock, bool fUpdate);\n-    void EraseFromWallet(const uint256 &hash);\n     int ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate = false);\n     void ReacceptWalletTransactions();\n     void ResendWalletTransactions(int64_t nBestBlockTime);"
      }
    ]
  }
]