[
  {
    "sha": "9390ea5a241d4f21d1c29c8246ecdf14b0c842a7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MzkwZWE1YTI0MWQ0ZjIxZDFjMjljODI0NmVjZGYxNGIwYzg0MmE3",
    "commit": {
      "author": {
        "name": "JoelKatz",
        "email": "DavidJoelSchwartz@GMail.com",
        "date": "2011-07-23T05:54:19Z"
      },
      "committer": {
        "name": "JoelKatz",
        "email": "DavidJoelSchwartz@GMail.com",
        "date": "2011-07-23T05:54:19Z"
      },
      "message": "These are a subset of my bitcoin-4diff patches have been well-tested against\nthe latest release version.\n\nCache the RPC user and password in strRPCUser/strRPCPass so that they don't\nneed to be extracted on each RPC call.\n\nFix a memory leak in the pthreads version of CreateThread.",
      "tree": {
        "sha": "053ef8a836f7ec696f1591a6c07213381986f0c9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/053ef8a836f7ec696f1591a6c07213381986f0c9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9390ea5a241d4f21d1c29c8246ecdf14b0c842a7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9390ea5a241d4f21d1c29c8246ecdf14b0c842a7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9390ea5a241d4f21d1c29c8246ecdf14b0c842a7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9390ea5a241d4f21d1c29c8246ecdf14b0c842a7/comments",
    "author": {
      "login": "JoelKatz",
      "id": 877549,
      "node_id": "MDQ6VXNlcjg3NzU0OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/877549?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoelKatz",
      "html_url": "https://github.com/JoelKatz",
      "followers_url": "https://api.github.com/users/JoelKatz/followers",
      "following_url": "https://api.github.com/users/JoelKatz/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoelKatz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoelKatz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoelKatz/subscriptions",
      "organizations_url": "https://api.github.com/users/JoelKatz/orgs",
      "repos_url": "https://api.github.com/users/JoelKatz/repos",
      "events_url": "https://api.github.com/users/JoelKatz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoelKatz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "JoelKatz",
      "id": 877549,
      "node_id": "MDQ6VXNlcjg3NzU0OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/877549?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoelKatz",
      "html_url": "https://github.com/JoelKatz",
      "followers_url": "https://api.github.com/users/JoelKatz/followers",
      "following_url": "https://api.github.com/users/JoelKatz/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoelKatz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoelKatz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoelKatz/subscriptions",
      "organizations_url": "https://api.github.com/users/JoelKatz/orgs",
      "repos_url": "https://api.github.com/users/JoelKatz/repos",
      "events_url": "https://api.github.com/users/JoelKatz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoelKatz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "36cd1ad5c90957608f711f79c7c2d8ef8a05c252",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36cd1ad5c90957608f711f79c7c2d8ef8a05c252",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/36cd1ad5c90957608f711f79c7c2d8ef8a05c252"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 12,
      "deletions": 6
    },
    "files": [
      {
        "sha": "313361405f1d2ff31f6a1446abd47dad70d06500",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9390ea5a241d4f21d1c29c8246ecdf14b0c842a7/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9390ea5a241d4f21d1c29c8246ecdf14b0c842a7/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=9390ea5a241d4f21d1c29c8246ecdf14b0c842a7",
        "patch": "@@ -238,6 +238,9 @@ bool AppInit2(int argc, char* argv[])\n     else\n         fServer = GetBoolArg(\"-server\");\n \n+    strRPCUser = mapArgs[\"-rpcuser\"];\n+    strRPCPass = mapArgs[\"-rpcpassword\"];\n+\n     /* force fServer when running without GUI */\n #ifndef GUI\n     fServer = true;"
      },
      {
        "sha": "1b6149d4f3eb0a8e57a953a744dc3a5085085f9e",
        "filename": "src/rpc.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9390ea5a241d4f21d1c29c8246ecdf14b0c842a7/src/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9390ea5a241d4f21d1c29c8246ecdf14b0c842a7/src/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc.cpp?ref=9390ea5a241d4f21d1c29c8246ecdf14b0c842a7",
        "patch": "@@ -1960,7 +1960,7 @@ bool HTTPAuthorized(map<string, string>& mapHeaders)\n         return false;\n     string strUser = strUserPass.substr(0, nColon);\n     string strPassword = strUserPass.substr(nColon+1);\n-    return (strUser == mapArgs[\"-rpcuser\"] && strPassword == mapArgs[\"-rpcpassword\"]);\n+    return (strUser == strRPCUser && strPassword == strRPCPass);\n }\n \n //\n@@ -2093,7 +2093,7 @@ void ThreadRPCServer2(void* parg)\n {\n     printf(\"ThreadRPCServer started\\n\");\n \n-    if (mapArgs[\"-rpcuser\"] == \"\" && mapArgs[\"-rpcpassword\"] == \"\")\n+    if (strRPCUser == \"\" && strRPCPass == \"\")\n     {\n         string strWhatAmI = \"To use bitcoind\";\n         if (mapArgs.count(\"-server\"))\n@@ -2272,7 +2272,7 @@ void ThreadRPCServer2(void* parg)\n \n Object CallRPC(const string& strMethod, const Array& params)\n {\n-    if (mapArgs[\"-rpcuser\"] == \"\" && mapArgs[\"-rpcpassword\"] == \"\")\n+    if (strRPCUser == \"\" && strRPCPass == \"\")\n         throw runtime_error(strprintf(\n             _(\"You must set rpcpassword=<password> in the configuration file:\\n%s\\n\"\n               \"If the file does not exist, create it with owner-readable-only file permissions.\"),\n@@ -2300,7 +2300,7 @@ Object CallRPC(const string& strMethod, const Array& params)\n \n \n     // HTTP basic authentication\n-    string strUserPass64 = EncodeBase64(mapArgs[\"-rpcuser\"] + \":\" + mapArgs[\"-rpcpassword\"]);\n+    string strUserPass64 = EncodeBase64(strRPCUser + \":\" + strRPCPass);\n     map<string, string> mapRequestHeaders;\n     mapRequestHeaders[\"Authorization\"] = string(\"Basic \") + strUserPass64;\n "
      },
      {
        "sha": "d48010affc5a8217051842ee2be2390f2a54328e",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9390ea5a241d4f21d1c29c8246ecdf14b0c842a7/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9390ea5a241d4f21d1c29c8246ecdf14b0c842a7/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=9390ea5a241d4f21d1c29c8246ecdf14b0c842a7",
        "patch": "@@ -25,7 +25,7 @@ bool fShutdown = false;\n bool fDaemon = false;\n bool fServer = false;\n bool fCommandLine = false;\n-string strMiscWarning;\n+string strMiscWarning, strRPCUser, strRPCPass;\n bool fTestNet = false;\n bool fNoListen = false;\n bool fLogTimestamps = false;"
      },
      {
        "sha": "4750509f4df95c0282ffdb4346b90b2347cd9424",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9390ea5a241d4f21d1c29c8246ecdf14b0c842a7/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9390ea5a241d4f21d1c29c8246ecdf14b0c842a7/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=9390ea5a241d4f21d1c29c8246ecdf14b0c842a7",
        "patch": "@@ -167,7 +167,7 @@ extern bool fShutdown;\n extern bool fDaemon;\n extern bool fServer;\n extern bool fCommandLine;\n-extern std::string strMiscWarning;\n+extern std::string strMiscWarning, strRPCUser, strRPCPass;\n extern bool fTestNet;\n extern bool fNoListen;\n extern bool fLogTimestamps;\n@@ -623,7 +623,10 @@ inline pthread_t CreateThread(void(*pfn)(void*), void* parg, bool fWantHandle=fa\n         return (pthread_t)0;\n     }\n     if (!fWantHandle)\n+    {\n+        pthread_detach(hthread);\n         return (pthread_t)-1;\n+    }\n     return hthread;\n }\n "
      }
    ]
  },
  {
    "sha": "d0169de0f918c8aa7aff3149a041d673830da251",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMDE2OWRlMGY5MThjOGFhN2FmZjMxNDlhMDQxZDY3MzgzMGRhMjUx",
    "commit": {
      "author": {
        "name": "JoelKatz",
        "email": "DavidJoelSchwartz@GMail.com",
        "date": "2011-07-24T07:33:49Z"
      },
      "committer": {
        "name": "JoelKatz",
        "email": "DavidJoelSchwartz@GMail.com",
        "date": "2011-07-24T07:33:49Z"
      },
      "message": "Additional optimization from 4diff.",
      "tree": {
        "sha": "1e740eb1f0f78a2a818d58d2d39d1fb5cba8e08d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1e740eb1f0f78a2a818d58d2d39d1fb5cba8e08d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d0169de0f918c8aa7aff3149a041d673830da251",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0169de0f918c8aa7aff3149a041d673830da251",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d0169de0f918c8aa7aff3149a041d673830da251",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0169de0f918c8aa7aff3149a041d673830da251/comments",
    "author": {
      "login": "JoelKatz",
      "id": 877549,
      "node_id": "MDQ6VXNlcjg3NzU0OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/877549?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoelKatz",
      "html_url": "https://github.com/JoelKatz",
      "followers_url": "https://api.github.com/users/JoelKatz/followers",
      "following_url": "https://api.github.com/users/JoelKatz/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoelKatz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoelKatz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoelKatz/subscriptions",
      "organizations_url": "https://api.github.com/users/JoelKatz/orgs",
      "repos_url": "https://api.github.com/users/JoelKatz/repos",
      "events_url": "https://api.github.com/users/JoelKatz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoelKatz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "JoelKatz",
      "id": 877549,
      "node_id": "MDQ6VXNlcjg3NzU0OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/877549?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoelKatz",
      "html_url": "https://github.com/JoelKatz",
      "followers_url": "https://api.github.com/users/JoelKatz/followers",
      "following_url": "https://api.github.com/users/JoelKatz/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoelKatz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoelKatz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoelKatz/subscriptions",
      "organizations_url": "https://api.github.com/users/JoelKatz/orgs",
      "repos_url": "https://api.github.com/users/JoelKatz/repos",
      "events_url": "https://api.github.com/users/JoelKatz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoelKatz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9390ea5a241d4f21d1c29c8246ecdf14b0c842a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9390ea5a241d4f21d1c29c8246ecdf14b0c842a7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9390ea5a241d4f21d1c29c8246ecdf14b0c842a7"
      }
    ],
    "stats": {
      "total": 106,
      "additions": 84,
      "deletions": 22
    },
    "files": [
      {
        "sha": "e7942169b3b4727b91f892c8e00a6fa1c3f7c6d2",
        "filename": "src/rpc.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 22,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0169de0f918c8aa7aff3149a041d673830da251/src/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0169de0f918c8aa7aff3149a041d673830da251/src/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc.cpp?ref=d0169de0f918c8aa7aff3149a041d673830da251",
        "patch": "@@ -1642,15 +1642,16 @@ Value getwork(const Array& params, bool fHelp)\n         char pmidstate[32];\n         char pdata[128];\n         char phash1[64];\n+        char hexbuf[512];\n         FormatHashBuffers(pblock, pmidstate, pdata, phash1);\n \n         uint256 hashTarget = CBigNum().SetCompact(pblock->nBits).getuint256();\n \n         Object result;\n-        result.push_back(Pair(\"midstate\", HexStr(BEGIN(pmidstate), END(pmidstate))));\n-        result.push_back(Pair(\"data\",     HexStr(BEGIN(pdata), END(pdata))));\n-        result.push_back(Pair(\"hash1\",    HexStr(BEGIN(phash1), END(phash1))));\n-        result.push_back(Pair(\"target\",   HexStr(BEGIN(hashTarget), END(hashTarget))));\n+        result.push_back(Pair(\"midstate\", ToHex(pmidstate, 32, hexbuf)));\n+        result.push_back(Pair(\"data\",     ToHex(pdata, 128, hexbuf)));\n+        result.push_back(Pair(\"hash1\",    ToHex(phash1, 64, hexbuf)));\n+        result.push_back(Pair(\"target\",   ToHex((const char *) &hashTarget, sizeof(hashTarget), hexbuf)));\n         return result;\n     }\n     else\n@@ -1930,24 +1931,6 @@ string EncodeBase64(string s)\n     return result;\n }\n \n-string DecodeBase64(string s)\n-{\n-    BIO *b64, *bmem;\n-\n-    char* buffer = static_cast<char*>(calloc(s.size(), sizeof(char)));\n-\n-    b64 = BIO_new(BIO_f_base64());\n-    BIO_set_flags(b64, BIO_FLAGS_BASE64_NO_NL);\n-    bmem = BIO_new_mem_buf(const_cast<char*>(s.c_str()), s.size());\n-    bmem = BIO_push(b64, bmem);\n-    BIO_read(bmem, buffer, s.size());\n-    BIO_free_all(bmem);\n-\n-    string result(buffer);\n-    free(buffer);\n-    return result;\n-}\n-\n bool HTTPAuthorized(map<string, string>& mapHeaders)\n {\n     string strAuth = mapHeaders[\"authorization\"];"
      },
      {
        "sha": "41d38ac959a6b7698e3bd66398d50ed43b523e34",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 77,
        "deletions": 0,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0169de0f918c8aa7aff3149a041d673830da251/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0169de0f918c8aa7aff3149a041d673830da251/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=d0169de0f918c8aa7aff3149a041d673830da251",
        "patch": "@@ -471,6 +471,83 @@ void ParseParameters(int argc, char* argv[])\n     }\n }\n \n+static const int decode64_table[256]=\n+{\n+ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+ -1, -1, -1, 62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1,\n+ -1, -1, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\n+ 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28,\n+ 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48,\n+ 49, 50, 51, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1\n+};\n+\n+std::string DecodeBase64(const std::string &s)\n+{\n+    char buf[1024];\n+    if(s.length()>512) return \"\";\n+    char *optr=buf;\n+\n+    int dec, mode=0, left=0;\n+    size_t index=0;\n+    for (int i=0; i<s.length(); i++)\n+    {\n+         dec=decode64_table[s[i]];\n+         if(dec==-1) break;\n+         switch(mode)\n+         {\n+             case 0: // we have no bits and get 6\n+                 left = dec;\n+                 mode = 1;\n+                 break;\n+\n+              case 1: // we have 6 bits and keep 4\n+                 *optr++ = (left<<2) | (dec>>4);\n+                  left = dec & 15;\n+                  mode = 2;\n+                  break;\n+                  \n+             case 2: // we have 4 bits and get 6, we keep 2            \n+                  *optr++ = (left<<4) | (dec>>2);\n+                 left = dec & 3;\n+                 mode = 3;\n+                 break;\n+                 \n+             case 3: // we have 2 bits and get 6\n+                 *optr++ = (left<<6) | dec;\n+                 mode=0;\n+                 break;\n+         }\n+    }\n+\n+    *optr=0;   \n+    return buf;\n+}\n+\n+char* ToHex(const char *ptr, int len, char *outbuf)\n+{\n+    static char hexmap[16] = { '0', '1', '2', '3', '4', '5', '6', '7',\n+                               '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };\n+    char *outptr = outbuf;\n+    unsigned char *iptr = (unsigned char *) ptr; \n+\n+    while (len-- > 0)\n+    {\n+        *outptr++ = hexmap[*iptr>>4];\n+        *outptr++ = hexmap[*iptr&15];\n+        iptr++;\n+     }\n+\n+     *outptr=0;\n+     return outbuf;\n+}\n+\n \n const char* wxGetTranslation(const char* pszEnglish)\n {"
      },
      {
        "sha": "9288c8b33c26e3bb9de022b0e1cac26f1c0f1dc4",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0169de0f918c8aa7aff3149a041d673830da251/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0169de0f918c8aa7aff3149a041d673830da251/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=d0169de0f918c8aa7aff3149a041d673830da251",
        "patch": "@@ -209,6 +209,8 @@ int64 GetTime();\n int64 GetAdjustedTime();\n void AddTimeData(unsigned int ip, int64 nTime);\n std::string FormatFullVersion();\n+std::string DecodeBase64(const std::string &s);\n+char* ToHex(const char *ptr, int len, char *outbuf);\n \n \n "
      }
    ]
  }
]