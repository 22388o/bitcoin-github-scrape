MarcoFalke,2021-09-19 07:14:51,This was added by you to fix a build failure on uclibc in 330cb33985d0ce97c20f4a0f0bbda0fbffe098d4,https://github.com/bitcoin/bitcoin/pull/23030#issuecomment-922427341,922427341,
ffontaine,2021-09-19 07:57:45,"I know, I replaced `#ifdef __linux__` by `#if defined(HAVE_STRONG_GETAUXVAL) || defined(HAVE_WEAK_GETAUXVAL)` but `defined(HAVE_WEAK_GETAUXVAL)` should be removed as uclibc-ng don't have `sys/auxv.h`. I didn't notice this mistake until now because there was no build failure. However, the build fails now that those symbols are correctly defined in configure by  https://github.com/bitcoin/bitcoin/co",https://github.com/bitcoin/bitcoin/pull/23030#issuecomment-922432167,922432167,
laanwj,2021-09-20 12:43:46,"I wonder if it's time to get rid of `HAVE_WEAK_GETAUXVAL`. I think it's confusing. Either we build against a C library that has this functionality, or not. We don't do this weak linking thing for any other symbols and recently got rid of the other glibc backwards compatibility stuff.\n\nUnless there is still a current platform that really needs it (Android?), I'd prefer to remove it from the bui",https://github.com/bitcoin/bitcoin/pull/23030#issuecomment-922893367,922893367,
fanquake,2021-09-23 09:44:10,"> Unless there is still a current platform that really needs it (Android?), I'd prefer to remove it from the build system, it has caused enough issues.\n\nHad a look at this. The Android NDK docs claim that you can use `getauxval()` beginning with [API level 18 and later](https://developer.android.com/ndk/guides/cpu-features#features_using_libcs_getauxval3). However the docs in `crc32c_arm64_che",https://github.com/bitcoin/bitcoin/pull/23030#issuecomment-925658298,925658298,
laanwj,2021-09-23 13:43:50,"> Although, both of those may be irrelevant, given we are moving to using std::filesystem. Support for that only landed in NDK 22, so we should be able to assume getauxval() availability?\n\nThanks for checking! Yes, that makes sense.",https://github.com/bitcoin/bitcoin/pull/23030#issuecomment-925829295,925829295,
fanquake,2021-09-28 06:53:56,I'm going to close this in favour of #23082. @ffontaine can you test that PR against uclibc-ng?,https://github.com/bitcoin/bitcoin/pull/23030#issuecomment-928907705,928907705,
