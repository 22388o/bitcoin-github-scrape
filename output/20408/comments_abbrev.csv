ajtowns,2020-11-17 12:59:56,cc @practicalswift @MarcoFalke ; related: https://github.com/bitcoin/bitcoin/pull/20188#issuecomment-728911018,https://github.com/bitcoin/bitcoin/pull/20408#issuecomment-728911200,728911200,
DrahtBot,2020-11-17 13:49:14,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20253 (net: use std::chrono throughout maxOutbound logic by fanquake)\n* #20234 (net: don't extra bind for Tor if binds a",https://github.com/bitcoin/bitcoin/pull/20408#issuecomment-728939609,728939609,
MarcoFalke,2020-11-17 13:53:06,review ACK c401a1d83f119f11fe0e446193458c5de224adbf,https://github.com/bitcoin/bitcoin/pull/20408#issuecomment-728942017,728942017,
jnewbery,2020-11-17 14:48:44,"Is there any downside to just using default initialization for these data members?\n\n```diff\n-    uint64_t nMaxOutboundTotalBytesSentInCycle GUARDED_BY(cs_totalBytesSent);\n+    uint64_t nMaxOutboundTotalBytesSentInCycle GUARDED_BY(cs_totalBytesSent) {0};\n-    uint64_t nMaxOutboundCycleStartTime GUARDED_BY(cs_totalBytesSent);\n+    uint64_t nMaxOutboundCycleStartTime GUARDED_BY(cs_totalBy",https://github.com/bitcoin/bitcoin/pull/20408#issuecomment-728977242,728977242,
practicalswift,2020-11-17 14:48:48,"Thanks for noticing and fixing this @ajtowns!\n\nAny reason not to use in-class member initialisation?\n\nLike this:\n\n```diff\ndiff --git a/src/net.h b/src/net.h\nindex 77649247d..d8d7daf64 100644\n--- a/src/net.h\n+++ b/src/net.h\n@@ -478,10 +478,10 @@ private:\n     uint64_t nTotalBytesSent GUARDED_BY(cs_totalBytesSent) {0};\n\n     // outbound limit & stats\n-    uint64_t nMaxO",https://github.com/bitcoin/bitcoin/pull/20408#issuecomment-728977289,728977289,
practicalswift,2020-11-17 14:50:07,"What @jnewbery said literally 4 seconds before me :)\n",https://github.com/bitcoin/bitcoin/pull/20408#issuecomment-728978202,728978202,
MarcoFalke,2020-11-17 16:15:18,"I presumed that the `Start` method was provided so that connman could be stopped and started while core is running. Members would be re-initialized. Though, we don't do that right now and I don't think we will, so either approach is fine by me.",https://github.com/bitcoin/bitcoin/pull/20408#issuecomment-729035458,729035458,
ajtowns,2020-11-17 16:49:28,"I think it would be a large change to make it reasonable to call `Start()` twice, so moved init to declaration, without resetting them in `Start()`.",https://github.com/bitcoin/bitcoin/pull/20408#issuecomment-729056749,729056749,
practicalswift,2020-11-17 20:42:49,ACK 9d09132be4ff99f98ca905c342347d5f35f13350: patch looks correct!,https://github.com/bitcoin/bitcoin/pull/20408#issuecomment-729200858,729200858,
MarcoFalke,2020-11-18 07:13:09,"review ACK 9d09132be4ff99f98ca905c342347d5f35f13350 , checked that we call Start only once and in the same scope where connman is constructed (AppInitMain) ðŸ’¸\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nreview ACK 9d09132be4ff99f98ca905c342347d5f35f13350 , checked that we call Start only once and in ",https://github.com/bitcoin/bitcoin/pull/20408#issuecomment-729484666,729484666,
jnewbery,2020-11-18 10:58:39,Code review ACK 9d09132be4,https://github.com/bitcoin/bitcoin/pull/20408#issuecomment-729602887,729602887,
MarcoFalke,2020-11-17 13:11:28,Any reason to not move this as well?,https://github.com/bitcoin/bitcoin/pull/20408#discussion_r525141446,525141446,src/net.cpp
ajtowns,2020-11-17 13:16:12,"No reason to move it: it's already initialized to 0 at declaration, so it should already be safe; and moving it wouldn't reduce the number of locks. No reason not to move it either though, I think.",https://github.com/bitcoin/bitcoin/pull/20408#discussion_r525144337,525144337,src/net.cpp
ajtowns,2020-11-17 16:48:12,"Moved others to initialize at declaration, and no longer reinitializing any of them in Start()",https://github.com/bitcoin/bitcoin/pull/20408#discussion_r525316719,525316719,src/net.cpp
