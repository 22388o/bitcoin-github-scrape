[
  {
    "sha": "c46c18b788cb0862aafbb116fd37936cbed6a431",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNDZjMThiNzg4Y2IwODYyYWFmYmIxMTZmZDM3OTM2Y2JlZDZhNDMx",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-16T17:55:32Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-18T15:11:47Z"
      },
      "message": "wallet: refactor GetClosestWalletFeature()",
      "tree": {
        "sha": "8852d6d1334d1aa181bfc2f26ff388527f754800",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8852d6d1334d1aa181bfc2f26ff388527f754800"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c46c18b788cb0862aafbb116fd37936cbed6a431",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+1ObQACgkQT1chs9Dj\nkh2cGw/9EzvkN5swMFdhZNu6daW/ZQTQVEKq99HRmIxAej/4YoXcn6GyiNrX5p9R\nFHW0GF2F9jGKdyeDRjrTPbKBt30abQWIqh8VxIHGTbjshuchT8w1+onxUW7nowwI\nFMSadhVJPXImElRltSVFU5PkOPtFtW6H4xOpWIsvQDHQved9t/52R8e57DMUaNUw\n3PAmyl+voUaU/NxJwbLdDt+jhTC6a+ds8IjpYMcjz9dOgNh3+BsTcsaBMnWiqC47\nRTl9L5kIIPE/LKMTMyPY2v6Yr8pW45qqQMvsOzPpN/YanW6qz/EkfTNwgCcmDgX4\nk4YIKLxerp8hcYrDhVGImHDlTjqkaR6yREo4NEFXNqL1+sQ1hfX3d4fBmDps4VRi\naexsSmjtv6UBv9Wr9jTS0NduL1ZBKN85suSOifYDsaGKUskk7YhyAqMpexr5Vv15\nSSFd8M8s6yeFjB3bEIgPkYetYyrz13I1FAvRSfiFCQomRixU2oKLpudcpiwgcp28\no3VQ0DUrE+ZpIrZZK8rWgUE5jtNPTFijXqgwSoZy1Z60v/zubz3KEBKhJ5PhVE1a\nKcS/map4vi2teJwiNP3UsYYj9s7LYuYJQZYSzc/Y2oDHbQkhpL6Z+hIavozbrdtU\ndCwMFQrvOFwvPkspdy+2UzWQ6usTAktCKb7yqIip8Kt4snBAdnE=\n=ZALG\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIPEWR8t8MK8NfGb+tqDjshQZ2IFWo6Nl8zxrMzAi0dlfCP/wEC9USYw4ak+K\nWLnXhgL/DSAI8QRftTm28AgfE6PgSZqhrwCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQTtc1wQbjDoryVNu1\nqo9MzQjxBF+1ObXwCMCbc1eaRE7OAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMu\nY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQe/YAbsjwIdOs8nWtMAA8OQjx\nBF+1ObXwCAgVs4w1+ltqAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5j\nYXRhbGxheHkuY29t8BDgxNDQ/14QCSjRnxsjorZBCPEEX7U5ufAIUSbVWNNXmBAA\ng9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 8852d6d1334d1aa181bfc2f26ff388527f754800\nparent c463f70fb05ed45cfcc609324078a0ccb08c7f06\nauthor Jon Atack <jon@atack.com> 1605549332 +0100\ncommitter Jon Atack <jon@atack.com> 1605712307 +0100\n\nwallet: refactor GetClosestWalletFeature()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c46c18b788cb0862aafbb116fd37936cbed6a431",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c46c18b788cb0862aafbb116fd37936cbed6a431",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c46c18b788cb0862aafbb116fd37936cbed6a431/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c463f70fb05ed45cfcc609324078a0ccb08c7f06",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c463f70fb05ed45cfcc609324078a0ccb08c7f06",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c463f70fb05ed45cfcc609324078a0ccb08c7f06"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 4,
      "deletions": 8
    },
    "files": [
      {
        "sha": "88a52cdf63a8ff2ee14a68014c0e00de02ae0f54",
        "filename": "src/wallet/walletutil.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 8,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c46c18b788cb0862aafbb116fd37936cbed6a431/src/wallet/walletutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c46c18b788cb0862aafbb116fd37936cbed6a431/src/wallet/walletutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletutil.cpp?ref=c46c18b788cb0862aafbb116fd37936cbed6a431",
        "patch": "@@ -87,13 +87,9 @@ bool IsFeatureSupported(int wallet_version, int feature_version)\n \n WalletFeature GetClosestWalletFeature(int version)\n {\n-    if (version >= FEATURE_LATEST) return FEATURE_LATEST;\n-    if (version >= FEATURE_PRE_SPLIT_KEYPOOL) return FEATURE_PRE_SPLIT_KEYPOOL;\n-    if (version >= FEATURE_NO_DEFAULT_KEY) return FEATURE_NO_DEFAULT_KEY;\n-    if (version >= FEATURE_HD_SPLIT) return FEATURE_HD_SPLIT;\n-    if (version >= FEATURE_HD) return FEATURE_HD;\n-    if (version >= FEATURE_COMPRPUBKEY) return FEATURE_COMPRPUBKEY;\n-    if (version >= FEATURE_WALLETCRYPT) return FEATURE_WALLETCRYPT;\n-    if (version >= FEATURE_BASE) return FEATURE_BASE;\n+    const std::array<WalletFeature, 8> wallet_features{{FEATURE_LATEST, FEATURE_PRE_SPLIT_KEYPOOL, FEATURE_NO_DEFAULT_KEY, FEATURE_HD_SPLIT, FEATURE_HD, FEATURE_COMPRPUBKEY, FEATURE_WALLETCRYPT, FEATURE_BASE}};\n+    for (const WalletFeature& wf : wallet_features) {\n+        if (version >= wf) return wf;\n+    }\n     return static_cast<WalletFeature>(0);\n }"
      }
    ]
  },
  {
    "sha": "2498b04ce88696a3216fc38b7d393906b733e8b1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNDk4YjA0Y2U4ODY5NmEzMjE2ZmMzOGI3ZDM5MzkwNmI3MzNlOGIx",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-11-18T18:14:19Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-19T07:04:05Z"
      },
      "message": "Don't upgrade to HD split if it is already supported\n\nIt is unnecessary to upgrade to FEATURE_HD_SPLIT if this feature is\nalready supported by the wallet. Because upgrading to FEATURE_HD_SPLIT\nactually requires upgrading to FEATURE_PRE_SPLIT_KEYPOOL, users would\naccidentally be upgraded to FEATURE_PRE_SPLIT_KEYPOOL instead of nothing\nbeing done.\n\nFixes the issue described at\nhttps://github.com/bitcoin/bitcoin/pull/20403#discussion_r526063920",
      "tree": {
        "sha": "87b23a9701e5cc674360578e69594477da19b2fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/87b23a9701e5cc674360578e69594477da19b2fc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2498b04ce88696a3216fc38b7d393906b733e8b1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+2GOUACgkQT1chs9Dj\nkh2R2w/+ONRDuS31832eAMkD0QN5ia79Ms372egz0/+ikj0hmbbswGjRNUmvvATq\nvsOKDyPfU0axf/qzEGR7U93xbLk+/ZNiieXL771I0P6mvZAu3Un/6vsGEgyftpTP\nP1/l55fNlMO1MdM+QzYNIw87bEkBcoDR+3zRb7FCyjgiV5DOTglym5bpCfgCXoGF\nyZauy6Yf1iSsIGmZ9W/Muyv2zuSKDl14UBGnBDXgp6xAh/KCeFbvs2mG4SKk50gg\nH5z11sYx6w/O8J9t6ysgLr5FJ0sHRSR8ymWkm6R0S+Nk49sJSDhpvleys9df/g1Y\nHl6vLW0UM8ZxFLjFWDIeYHf+Hu7h0FdROFe/KbPy0zDw66iB1e6ycD1ZG/mkLDxn\nNza06RqvujdXlZzLkRUdMbfu7+hiabLO9q8dztcbgeIBLzg5scWSjSNuaylxzOvu\njDCOZxBeR+9LTGgyjTt5VFyy5iZYsAF1hyKxXJjk4vEZUS8Y+9mksy1Up/xG/1mw\nky3tfDkD2P+1Sq3HJ61IjhNAxKlozKH4eiVDz9BruG6QlqC/M2TUi29UdMOWFClT\nATezWD4KF9eGrz7g6UhFMFYGfD2dilZkf+8Fd6ktxkYxVhzmORyKH2lT17rCBIkE\nbPhLpuodsjew4qhVr2NDLo3i2c9PDpL3WK4u6WwwKbIMD1Ftsmc=\n=cC/o\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIG6J3cvW/P6pcXi8o4En9FYrKPPx5qIoDZ900IcWhbd0CP/wEEIsqV/mUoKl\n6+YKz6d5VgAI8CDboEfIYhFqlC5+DIBamDWOFpJGN2uTk5IKpazV3C9wsAjxBF+2\nGOfwCJW+YOpz9b6YAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRh\nci5vcGVudGltZXN0YW1wcy5vcmf/8BCXN3msbqKoSiyyYS06vBR7CPEg3Q13S3Kz\nOeVdv/HSNkZ3K74mqyTnt7xYMGPOV7PCGNsI8QRfthjn8Ahb7OL2lqTiqwCD3+MN\nLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9y\nZ//wEKjD1rrdRB8s/WnHr3ebyYcI8SAkSSllC80KpssY94s5Cn678LfxPG1pE35B\nBb3z9L+heAjxBF+2GOvwCPlRQ6KVGsO3AIPf4w0u+QyOKShodHRwczovL2Zpbm5l\neS5jYWxlbmRhci5ldGVybml0eXdhbGwuY29t8BDJ10M8o78/k1uk2kP0Vk2qCPEE\nX7YY5/AIkdleHKlIEMsAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNh\ndGFsbGF4eS5jb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 87b23a9701e5cc674360578e69594477da19b2fc\nparent c46c18b788cb0862aafbb116fd37936cbed6a431\nauthor Andrew Chow <achow101-github@achow101.com> 1605723259 -0500\ncommitter Jon Atack <jon@atack.com> 1605769445 +0100\n\nDon't upgrade to HD split if it is already supported\n\nIt is unnecessary to upgrade to FEATURE_HD_SPLIT if this feature is\nalready supported by the wallet. Because upgrading to FEATURE_HD_SPLIT\nactually requires upgrading to FEATURE_PRE_SPLIT_KEYPOOL, users would\naccidentally be upgraded to FEATURE_PRE_SPLIT_KEYPOOL instead of nothing\nbeing done.\n\nFixes the issue described at\nhttps://github.com/bitcoin/bitcoin/pull/20403#discussion_r526063920\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2498b04ce88696a3216fc38b7d393906b733e8b1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2498b04ce88696a3216fc38b7d393906b733e8b1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2498b04ce88696a3216fc38b7d393906b733e8b1/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c46c18b788cb0862aafbb116fd37936cbed6a431",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c46c18b788cb0862aafbb116fd37936cbed6a431",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c46c18b788cb0862aafbb116fd37936cbed6a431"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "7dbbf173020bbd06b50ef3c1d5196bf601ac2432",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2498b04ce88696a3216fc38b7d393906b733e8b1/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2498b04ce88696a3216fc38b7d393906b733e8b1/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=2498b04ce88696a3216fc38b7d393906b733e8b1",
        "patch": "@@ -453,7 +453,7 @@ bool LegacyScriptPubKeyMan::Upgrade(int prev_version, int new_version, bilingual\n         hd_upgrade = true;\n     }\n     // Upgrade to HD chain split if necessary\n-    if (IsFeatureSupported(new_version, FEATURE_HD_SPLIT)) {\n+    if (!IsFeatureSupported(prev_version, FEATURE_HD_SPLIT) && IsFeatureSupported(new_version, FEATURE_HD_SPLIT)) {\n         WalletLogPrintf(\"Upgrading wallet to use HD chain split\\n\");\n         m_storage.SetMinVersion(FEATURE_PRE_SPLIT_KEYPOOL);\n         split_upgrade = FEATURE_HD_SPLIT > prev_version;"
      },
      {
        "sha": "8d3cd16ffc4bef680489666bd24bb94bb3b8297d",
        "filename": "test/functional/wallet_upgradewallet.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2498b04ce88696a3216fc38b7d393906b733e8b1/test/functional/wallet_upgradewallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2498b04ce88696a3216fc38b7d393906b733e8b1/test/functional/wallet_upgradewallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_upgradewallet.py?ref=2498b04ce88696a3216fc38b7d393906b733e8b1",
        "patch": "@@ -338,6 +338,7 @@ def copy_split_hd():\n         new_kvs = dump_bdb_kv(node_master_wallet)\n         up_defaultkey = new_kvs[b'\\x0adefaultkey']\n         assert_equal(defaultkey, up_defaultkey)\n+        assert_equal(wallet.getwalletinfo()[\"walletversion\"], 159900)\n         # 0.16.3 doesn't have a default key\n         v16_3_kvs = dump_bdb_kv(v16_3_wallet)\n         assert b'\\x0adefaultkey' not in v16_3_kvs"
      }
    ]
  },
  {
    "sha": "99d56e357159c7154f69f28cb5587c5ca20d6594",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OWQ1NmUzNTcxNTljNzE1NGY2OWYyOGNiNTU4N2M1Y2EyMGQ2NTk0",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-16T17:23:10Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-19T19:00:50Z"
      },
      "message": "wallet: fix and improve upgradewallet result responses",
      "tree": {
        "sha": "93f3e455c85fd9586b75c7c90d29e5a64dfe188f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/93f3e455c85fd9586b75c7c90d29e5a64dfe188f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/99d56e357159c7154f69f28cb5587c5ca20d6594",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+2wOMACgkQT1chs9Dj\nkh0fEg/+NK35bs4eZ2ucJjgchllYRFNXQSx+nM7VpiZCNkeDQ0u7c+eLvovneVKf\nccrm9FzWZhjpK+/1GQbEJ35Cy+8jJh0iH7/qf8xC0OSpsGmUNYTkvS6KE6lFunSi\np9Yy7dAum+ZZ4qu0R/8Y1w/lfdgo4MUCDVIDH4w4oGWbkONEStF7MS1zOs3jxI+X\nvQMXnJxeKKp96qt41BxRY/qhetVYRVwAQasc2DptrRCPnhlgmfhTE2/n00+GXSGb\nj3S9GGi9um2f958FsqgIvWQk409XNJTkoElyIITdDGg/1cx0IS4t3Nl/WB+RFEHf\nz044ip/wkNwJTzwNJi3mRVhEx64JcyOjCh9gJ7Y20WBdGMBrffZ9N7dO2+NTh49l\n4EzjJvsqS2QkeeU06gy/PK7NeKBy2GaYo3b+O/wudgBvtveNg9G30R8CsyQL5q9s\n5C2xIQcvrAx/qbT89sq1X5Do1oMlBaOqph4bW+P13D5ysYgCUCujfc1fYcVXMwzO\ndqNPjhv06/22XtN9tNyuvRerjcqNdH576wgCzeZQMFtClCJxPOCvumFtYuPwWCOl\nmZyUNv0k3l49CJG50eviYw3nm/LV5heOv/cKBxf9lmfdede6sme/JfjNsOdNtOik\nw/FDzo/oUe5oyukNVqiNU8YTPxqPJ6EAs97D7s+TYe28E+kN/z8=\n=rVQP\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIO0ijrmzKil8qLiSGEp9PZPUyZuNaaBIsKpa3hWUL42dCP/wEACVpHxOcbMN\nDvIUJXhwoUYI8SDPG2rG3Tky9GvkKkkskKZG5M7i1gU5mZyHxE7JtjcUmAjxBF+2\nwOXwCMc59RtITqtpAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRh\nci5vcGVudGltZXN0YW1wcy5vcmf/8BAbSXn/diJ4COxDQPdtxAI7CPEEX7bA5fAI\n4WRlAc6R9IkAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4\neS5jb23/8BDFA2KXJSLcn9fzwH7/bNDFCPEEX7bA5fAIyrok9Vo6GT0Ag9/jDS75\nDI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5vcmfw\nENH/J4Nv90F75ZjhAarGzysI8QRftsDo8Ai6URpYuXlMzACD3+MNLvkMjikoaHR0\ncHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbQ==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 93f3e455c85fd9586b75c7c90d29e5a64dfe188f\nparent 2498b04ce88696a3216fc38b7d393906b733e8b1\nauthor Jon Atack <jon@atack.com> 1605547390 +0100\ncommitter Jon Atack <jon@atack.com> 1605812450 +0100\n\nwallet: fix and improve upgradewallet result responses\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99d56e357159c7154f69f28cb5587c5ca20d6594",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/99d56e357159c7154f69f28cb5587c5ca20d6594",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99d56e357159c7154f69f28cb5587c5ca20d6594/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2498b04ce88696a3216fc38b7d393906b733e8b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2498b04ce88696a3216fc38b7d393906b733e8b1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2498b04ce88696a3216fc38b7d393906b733e8b1"
      }
    ],
    "stats": {
      "total": 83,
      "additions": 51,
      "deletions": 32
    },
    "files": [
      {
        "sha": "ef8281bfe274a55c54c80734e2ae847211b550a4",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 4,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99d56e357159c7154f69f28cb5587c5ca20d6594/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99d56e357159c7154f69f28cb5587c5ca20d6594/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=99d56e357159c7154f69f28cb5587c5ca20d6594",
        "patch": "@@ -4214,7 +4214,7 @@ static RPCHelpMan sethdseed()\n \n     // Do not do anything to non-HD wallets\n     if (!pwallet->CanSupportFeature(FEATURE_HD)) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Cannot set a HD seed on a non-HD wallet. Use the upgradewallet RPC in order to upgrade a non-HD wallet to HD\");\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Cannot set an HD seed on a non-HD wallet. Use the upgradewallet RPC in order to upgrade a non-HD wallet to HD\");\n     }\n \n     EnsureWalletIsUnlocked(pwallet);\n@@ -4445,14 +4445,18 @@ static RPCHelpMan walletcreatefundedpsbt()\n static RPCHelpMan upgradewallet()\n {\n     return RPCHelpMan{\"upgradewallet\",\n-        \"\\nUpgrade the wallet. Upgrades to the latest version if no version number is specified\\n\"\n+        \"\\nUpgrade the wallet. Upgrades to the latest version if no version number is specified.\\n\"\n         \"New keys may be generated and a new wallet backup will need to be made.\",\n         {\n-            {\"version\", RPCArg::Type::NUM, /* default */ strprintf(\"%d\", FEATURE_LATEST), \"The version number to upgrade to. Default is the latest wallet version\"}\n+            {\"version\", RPCArg::Type::NUM, /* default */ strprintf(\"%d\", FEATURE_LATEST), \"The version number to upgrade to. Default is the latest wallet version.\"}\n         },\n         RPCResult{\n             RPCResult::Type::OBJ, \"\", \"\",\n             {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of wallet this operation was performed on\"},\n+                {RPCResult::Type::NUM, \"previous_version\", \"Version of wallet before this operation\"},\n+                {RPCResult::Type::NUM, \"current_version\", \"Version of wallet after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if no error\"},\n                 {RPCResult::Type::STR, \"error\", /* optional */ true, \"Error message (if there is one)\"}\n             },\n         },\n@@ -4475,10 +4479,26 @@ static RPCHelpMan upgradewallet()\n         version = request.params[0].get_int();\n     }\n     bilingual_str error;\n-    if (!pwallet->UpgradeWallet(version, error)) {\n+    const int previous_version{pwallet->GetVersion()};\n+    const bool wallet_upgraded{pwallet->UpgradeWallet(version, error)};\n+    const int current_version{pwallet->GetVersion()};\n+    std::string result;\n+\n+    if (!wallet_upgraded) {\n         throw JSONRPCError(RPC_WALLET_ERROR, error.original);\n+    } else if (previous_version == current_version) {\n+        result = \"Already at latest version. Wallet version unchanged.\";\n+    } else {\n+        result = strprintf(\"Wallet upgraded successfully from version %i to version %i.\", previous_version, current_version);\n     }\n+\n     UniValue obj(UniValue::VOBJ);\n+    obj.pushKV(\"wallet_name\", pwallet->GetName());\n+    obj.pushKV(\"previous_version\", previous_version);\n+    obj.pushKV(\"current_version\", current_version);\n+    if (!result.empty()) {\n+        obj.pushKV(\"result\", result);\n+    }\n     if (!error.empty()) {\n         obj.pushKV(\"error\", error.original);\n     }"
      },
      {
        "sha": "bcfa1a93f454179b88d9a8a7a07fc48a2dabdd8a",
        "filename": "test/functional/wallet_upgradewallet.py",
        "status": "modified",
        "additions": 27,
        "deletions": 28,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99d56e357159c7154f69f28cb5587c5ca20d6594/test/functional/wallet_upgradewallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99d56e357159c7154f69f28cb5587c5ca20d6594/test/functional/wallet_upgradewallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_upgradewallet.py?ref=99d56e357159c7154f69f28cb5587c5ca20d6594",
        "patch": "@@ -22,7 +22,6 @@\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n-    assert_greater_than,\n     assert_is_hex_string,\n     assert_raises_rpc_error,\n     sha256sum_file,\n@@ -92,6 +91,20 @@ def dumb_sync_blocks(self):\n             v16_3_node.submitblock(b)\n         assert_equal(v16_3_node.getblockcount(), to_height)\n \n+    def test_upgradewallet(self, wallet, previous_version, requested_version=None, expected_version=None):\n+        unchanged = expected_version == previous_version\n+        new_version = previous_version if unchanged else expected_version if expected_version else requested_version\n+        assert_equal(wallet.getwalletinfo()[\"walletversion\"], previous_version)\n+        assert_equal(wallet.upgradewallet(requested_version),\n+            {\n+                \"wallet_name\": \"\",\n+                \"previous_version\": previous_version,\n+                \"current_version\": new_version,\n+                \"result\": \"Already at latest version. Wallet version unchanged.\" if unchanged else \"Wallet upgraded successfully from version {} to version {}.\".format(previous_version, new_version),\n+            }\n+        )\n+        assert_equal(wallet.getwalletinfo()[\"walletversion\"], new_version)\n+\n     def run_test(self):\n         self.nodes[0].generatetoaddress(101, self.nodes[0].getnewaddress())\n         self.dumb_sync_blocks()\n@@ -158,40 +171,29 @@ def copy_split_hd():\n         self.restart_node(0)\n         copy_v16()\n         wallet = node_master.get_wallet_rpc(self.default_wallet_name)\n-        old_version = wallet.getwalletinfo()[\"walletversion\"]\n-\n-        # calling upgradewallet without version arguments\n-        # should return nothing if successful\n-        assert_equal(wallet.upgradewallet(), {})\n-        new_version = wallet.getwalletinfo()[\"walletversion\"]\n-        # upgraded wallet version should be greater than older one\n-        assert_greater_than(new_version, old_version)\n+        self.log.info(\"Test upgradewallet without a version argument\")\n+        self.test_upgradewallet(wallet, previous_version=159900, expected_version=169900)\n         # wallet should still contain the same balance\n         assert_equal(wallet.getbalance(), v16_3_balance)\n \n         copy_non_hd()\n         wallet = node_master.get_wallet_rpc(self.default_wallet_name)\n         # should have no master key hash before conversion\n         assert_equal('hdseedid' in wallet.getwalletinfo(), False)\n-        # calling upgradewallet with explicit version number\n-        # should return nothing if successful\n-        assert_equal(wallet.upgradewallet(169900), {})\n-        new_version = wallet.getwalletinfo()[\"walletversion\"]\n-        # upgraded wallet should have version 169900\n-        assert_equal(new_version, 169900)\n+        self.log.info(\"Test upgradewallet with explicit version number\")\n+        self.test_upgradewallet(wallet, previous_version=60000, requested_version=169900)\n         # after conversion master key hash should be present\n         assert_is_hex_string(wallet.getwalletinfo()['hdseedid'])\n \n-        self.log.info('Intermediary versions don\\'t effect anything')\n+        self.log.info(\"Intermediary versions don't effect anything\")\n         copy_non_hd()\n         # Wallet starts with 60000\n         assert_equal(60000, wallet.getwalletinfo()['walletversion'])\n         wallet.unloadwallet()\n         before_checksum = sha256sum_file(node_master_wallet)\n         node_master.loadwallet('')\n-        # Can \"upgrade\" to 129999 which should have no effect on the wallet\n-        wallet.upgradewallet(129999)\n-        assert_equal(60000, wallet.getwalletinfo()['walletversion'])\n+        # Test an \"upgrade\" from 60000 to 129999 has no effect, as the next version is 130000\n+        self.test_upgradewallet(wallet, previous_version=60000, requested_version=129999, expected_version=60000)\n         wallet.unloadwallet()\n         assert_equal(before_checksum, sha256sum_file(node_master_wallet))\n         node_master.loadwallet('')\n@@ -208,8 +210,7 @@ def copy_split_hd():\n         orig_kvs = dump_bdb_kv(node_master_wallet)\n         assert b'\\x07hdchain' not in orig_kvs\n         # Upgrade to HD, no split\n-        wallet.upgradewallet(130000)\n-        assert_equal(130000, wallet.getwalletinfo()['walletversion'])\n+        self.test_upgradewallet(wallet, previous_version=60000, requested_version=130000)\n         # Check that there is now a hd chain and it is version 1, no internal chain counter\n         new_kvs = dump_bdb_kv(node_master_wallet)\n         assert b'\\x07hdchain' in new_kvs\n@@ -244,8 +245,7 @@ def copy_split_hd():\n         assert_equal(130000, wallet.getwalletinfo()['walletversion'])\n \n         self.log.info('Upgrade HD to HD chain split')\n-        wallet.upgradewallet(169900)\n-        assert_equal(169900, wallet.getwalletinfo()['walletversion'])\n+        self.test_upgradewallet(wallet, previous_version=130000, requested_version=169900)\n         # Check that the hdchain updated correctly\n         new_kvs = dump_bdb_kv(node_master_wallet)\n         hd_chain = new_kvs[b'\\x07hdchain']\n@@ -271,8 +271,7 @@ def copy_split_hd():\n \n         self.log.info('Upgrade non-HD to HD chain split')\n         copy_non_hd()\n-        wallet.upgradewallet(169900)\n-        assert_equal(169900, wallet.getwalletinfo()['walletversion'])\n+        self.test_upgradewallet(wallet, previous_version=60000, requested_version=169900)\n         # Check that the hdchain updated correctly\n         new_kvs = dump_bdb_kv(node_master_wallet)\n         hd_chain = new_kvs[b'\\x07hdchain']\n@@ -333,15 +332,15 @@ def copy_split_hd():\n         # Check the wallet has a default key initially\n         old_kvs = dump_bdb_kv(node_master_wallet)\n         defaultkey = old_kvs[b'\\x0adefaultkey']\n-        # Upgrade the wallet. Should still have the same default key\n-        wallet.upgradewallet(159900)\n+        self.log.info(\"Upgrade the wallet. Should still have the same default key.\")\n+        self.test_upgradewallet(wallet, previous_version=139900, requested_version=159900)\n         new_kvs = dump_bdb_kv(node_master_wallet)\n         up_defaultkey = new_kvs[b'\\x0adefaultkey']\n         assert_equal(defaultkey, up_defaultkey)\n-        assert_equal(wallet.getwalletinfo()[\"walletversion\"], 159900)\n         # 0.16.3 doesn't have a default key\n         v16_3_kvs = dump_bdb_kv(v16_3_wallet)\n         assert b'\\x0adefaultkey' not in v16_3_kvs\n \n+\n if __name__ == '__main__':\n     UpgradeWalletTest().main()"
      }
    ]
  },
  {
    "sha": "ca8cd893bb56bf5d455154b0498b1f58f77d20ed",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYThjZDg5M2JiNTZiZjVkNDU1MTU0YjA0OThiMWY1OGY3N2QyMGVk",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-17T14:57:14Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-19T19:00:53Z"
      },
      "message": "wallet: fix and improve upgradewallet error responses",
      "tree": {
        "sha": "6d3ed90574f06145e8bbe4646a3c9a8beea65f0f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6d3ed90574f06145e8bbe4646a3c9a8beea65f0f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ca8cd893bb56bf5d455154b0498b1f58f77d20ed",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+2wOUACgkQT1chs9Dj\nkh1lcA/9FTOEGZFMFjekOgDSb7o/Y4G7AuwXqHVfEFC4rZCeP8BOf6KZf1Z+Pi0b\n3Fl8OF2x0AxyTXPEHlsJeFs1gZ+pe1wpjKYoZrYBHbM7Z9jCWof2YRHmLTe2hktd\neHAr4FtpLJbiKfHmauwmFvF5oWFWAVJjWLKhwU+rcsvuf1vFW84MbkpzoYHDkoaH\nEFU8OzwYi5HAE3fyuIMRuzb1xW/coJQRUT5mk1OWKxOiH0VU3qh+OLXiHlCpTFb0\nxazRGwLyRVh5RjYk1qKtTIEJVkXq3JNtGAMtG7B8egRhGK1CnkbN6n9cQ53Spfb9\nddDfyQBBLygr26JS0VMeeMwilkW1hOEvzmPDNI7BXjurjMVM+9ucZJnqAfAmrKgr\n2ZvxMM4U1sw53HHAwux83rYtSTw6QVoiikZUFksFGBDHVonY2fGLTawFPKyou4lE\n623zkv+Upbxd4YvlLal+kQFk0sY5mFWSFnzeGQRM5PNhgQxY+MErwth+tSEixiWU\nk5BL2qr2Ds1SrMaWNq3lCxFSPQskaeIQH67SvwhdKYiLZn3zhLk4+5I9eSAW7gBL\njenWaYoRpN+vLO2fOhOwGQU3YsHdG+VKXPqrb6k9PnjJQrO+aPV9P3zop92FJB6l\nVwwoiT6LvifCWX5xLxIx1DPKqAI/Hl/WrF1ErAX16RGyOjPHJNY=\n=zzIz\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIOc4g+SSwYVlSZZHAKe81kfBhdxgp7sh/Tm66/VS5hkWCP/wEE8o4gn8kS1j\nvSkCn9N5jtQI8QRftsDr8AjseAqZhLz3jwCD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEJvtbIKTQlHFUYYyO2RGZasI\n8QRftsDo8Ajy03OH/FQiGACD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIu\nY2F0YWxsYXh5LmNvbf/wEJzggZrAxP3nNsfeKpX0zhoI8QRftsDo8AhhxVzJBeE3\nGACD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIub3BlbnRpbWVz\ndGFtcHMub3Jn8BDsf9AS8Rw2PWzMqx2dK0yOCPEEX7bA6PAIvd9LRZNeS68Ag9/j\nDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 6d3ed90574f06145e8bbe4646a3c9a8beea65f0f\nparent 99d56e357159c7154f69f28cb5587c5ca20d6594\nauthor Jon Atack <jon@atack.com> 1605625034 +0100\ncommitter Jon Atack <jon@atack.com> 1605812453 +0100\n\nwallet: fix and improve upgradewallet error responses\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca8cd893bb56bf5d455154b0498b1f58f77d20ed",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ca8cd893bb56bf5d455154b0498b1f58f77d20ed",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca8cd893bb56bf5d455154b0498b1f58f77d20ed/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "99d56e357159c7154f69f28cb5587c5ca20d6594",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99d56e357159c7154f69f28cb5587c5ca20d6594",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/99d56e357159c7154f69f28cb5587c5ca20d6594"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 24,
      "deletions": 16
    },
    "files": [
      {
        "sha": "2e3b34cbe314c4fdb65ce15a94ecd91026e48d38",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca8cd893bb56bf5d455154b0498b1f58f77d20ed/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca8cd893bb56bf5d455154b0498b1f58f77d20ed/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=ca8cd893bb56bf5d455154b0498b1f58f77d20ed",
        "patch": "@@ -4484,12 +4484,12 @@ static RPCHelpMan upgradewallet()\n     const int current_version{pwallet->GetVersion()};\n     std::string result;\n \n-    if (!wallet_upgraded) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, error.original);\n-    } else if (previous_version == current_version) {\n-        result = \"Already at latest version. Wallet version unchanged.\";\n-    } else {\n-        result = strprintf(\"Wallet upgraded successfully from version %i to version %i.\", previous_version, current_version);\n+    if (wallet_upgraded) {\n+        if (previous_version == current_version) {\n+            result = \"Already at latest version. Wallet version unchanged.\";\n+        } else {\n+            result = strprintf(\"Wallet upgraded successfully from version %i to version %i.\", previous_version, current_version);\n+        }\n     }\n \n     UniValue obj(UniValue::VOBJ);\n@@ -4498,8 +4498,8 @@ static RPCHelpMan upgradewallet()\n     obj.pushKV(\"current_version\", current_version);\n     if (!result.empty()) {\n         obj.pushKV(\"result\", result);\n-    }\n-    if (!error.empty()) {\n+    } else {\n+        CHECK_NONFATAL(!error.empty());\n         obj.pushKV(\"error\", error.original);\n     }\n     return obj;"
      },
      {
        "sha": "9b8410e0d55438c2796f65a054a91d5558fe17a2",
        "filename": "test/functional/wallet_upgradewallet.py",
        "status": "modified",
        "additions": 16,
        "deletions": 8,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca8cd893bb56bf5d455154b0498b1f58f77d20ed/test/functional/wallet_upgradewallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca8cd893bb56bf5d455154b0498b1f58f77d20ed/test/functional/wallet_upgradewallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_upgradewallet.py?ref=ca8cd893bb56bf5d455154b0498b1f58f77d20ed",
        "patch": "@@ -23,7 +23,6 @@\n from test_framework.util import (\n     assert_equal,\n     assert_is_hex_string,\n-    assert_raises_rpc_error,\n     sha256sum_file,\n )\n \n@@ -105,6 +104,18 @@ def test_upgradewallet(self, wallet, previous_version, requested_version=None, e\n         )\n         assert_equal(wallet.getwalletinfo()[\"walletversion\"], new_version)\n \n+    def test_upgradewallet_error(self, wallet, previous_version, requested_version, msg):\n+        assert_equal(wallet.getwalletinfo()[\"walletversion\"], previous_version)\n+        assert_equal(wallet.upgradewallet(requested_version),\n+            {\n+                \"wallet_name\": \"\",\n+                \"previous_version\": previous_version,\n+                \"current_version\": previous_version,\n+                \"error\": msg,\n+            }\n+        )\n+        assert_equal(wallet.getwalletinfo()[\"walletversion\"], previous_version)\n+\n     def run_test(self):\n         self.nodes[0].generatetoaddress(101, self.nodes[0].getnewaddress())\n         self.dumb_sync_blocks()\n@@ -200,7 +211,7 @@ def copy_split_hd():\n \n         self.log.info('Wallets cannot be downgraded')\n         copy_non_hd()\n-        assert_raises_rpc_error(-4, 'Cannot downgrade wallet', wallet.upgradewallet, 40000)\n+        self.test_upgradewallet_error(wallet, previous_version=60000, requested_version=40000, msg=\"Cannot downgrade wallet\")\n         wallet.unloadwallet()\n         assert_equal(before_checksum, sha256sum_file(node_master_wallet))\n         node_master.loadwallet('')\n@@ -237,12 +248,9 @@ def copy_split_hd():\n         assert_equal('m/0\\'/0\\'/1\\'', info['hdkeypath'])\n \n         self.log.info('Cannot upgrade to HD Split, needs Pre Split Keypool')\n-        assert_raises_rpc_error(-4, 'Cannot upgrade a non HD split wallet without upgrading to support pre split keypool', wallet.upgradewallet, 139900)\n-        assert_equal(130000, wallet.getwalletinfo()['walletversion'])\n-        assert_raises_rpc_error(-4, 'Cannot upgrade a non HD split wallet without upgrading to support pre split keypool', wallet.upgradewallet, 159900)\n-        assert_equal(130000, wallet.getwalletinfo()['walletversion'])\n-        assert_raises_rpc_error(-4, 'Cannot upgrade a non HD split wallet without upgrading to support pre split keypool', wallet.upgradewallet, 169899)\n-        assert_equal(130000, wallet.getwalletinfo()['walletversion'])\n+        for version in [139900, 159900, 169899]:\n+            self.test_upgradewallet_error(wallet, previous_version=130000, requested_version=version,\n+                msg=\"Cannot upgrade a non HD split wallet without upgrading to support pre split keypool. Please use version 169900 or no version specified.\")\n \n         self.log.info('Upgrade HD to HD chain split')\n         self.test_upgradewallet(wallet, previous_version=130000, requested_version=169900)"
      }
    ]
  },
  {
    "sha": "3eb6f8b2e61c24a22ea9396d86672307845f35eb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZWI2ZjhiMmU2MWMyNGEyMmVhOTM5NmQ4NjY3MjMwNzg0NWYzNWVi",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-17T18:18:12Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-19T19:00:56Z"
      },
      "message": "wallet (not for backport): improve upgradewallet error messages",
      "tree": {
        "sha": "40b93928a05d3dba8a9a59863379291815679502",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/40b93928a05d3dba8a9a59863379291815679502"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3eb6f8b2e61c24a22ea9396d86672307845f35eb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+2wOgACgkQT1chs9Dj\nkh01xg//d/rVP0Mkdc/X0mLlE1SFVFjGDb069qpAYrBhwDZpPkah1XoD2SwXzBd7\n+VlP5iqXKNsJ4LQm12SOE3ufNy7Um+04w1SLxf4hER23/+qoH5tHo7nlfpAMr8y9\nKTM3VJrXeXnZbychnGnb/Hxc5f1Iaq1ziHtXTjmc+EXOXcxxX+CSuLMQDnkShqAj\nNKqVOk3MJd+qfDd0H1kUH7Kmgjlt4BBTISBJldWW/ie36sNqD7Mv/3M8pT+qIgGx\neZsBj1/0oGnfDlfX8rlz7A65WyhifpEm76fLVAyJe8l2HpxciyJHh0d6C9sJGTbz\ny+SR5uwdPCTsI8t4TgxMXxfgONnW5gi66Rrq7J68X8IKACqumz1hW/H65p38olXI\neTVtUYg78Kn+aaGW4wkpas8W99SGgK6iRM4p7SPtryojUvN5+wLtoRGo/0sdP+x2\nHrVj06t3Kl/wpc7JgPLfsFJ2lLd5ZI2VFMcUSYsy8C94JYnj3+Zp+e7w8E5ktlLd\nfSIxO2RuiSnuyGp4unWR9KHZ+A4guIxizsxsbisS5B2ZOEArEaM3J7EfJcW9UGwJ\nt6zbB7r6pNGWE0qqG3BOmdjmGsI+RR8CiXULMEQ6KQDvVmYZs+XjxmI4VRIBy1vj\nbQarvXxUANFcijAVzOwWI2iVV5pFXzYD1cEfz6Ii7krVIEMNTY4=\n=6B48\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIN4bZOiRQeodBmWS8p9jHJ1Av5vpYzgT8nPQBv36GHVBCP/wECWVghPGeuN6\nZDvld+YKogMI8CCFgNK2nJzYpZ86SDFxoXRGpMItRq/0GcCoiTcYEynxwgjxBF+2\nwOrwCFAKSNUD8YfuAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5jYXRh\nbGxheHkuY29t//AQNwE8p+DYdrAY7OY7uUoqQgjxBF+2wO7wCCX64k1extSVAIPf\n4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5ldGVybml0eXdhbGwuY29t\n//AQdal9qjwaggvAq/t//A0isgjxILEQ1x8mHJbC8t1svDrzXLYIp6tNufhYcoVK\nnTj7G/6uCPEEX7bA6vAIQx1YoIiyn2cAg9/jDS75DI4sK2h0dHBzOi8vYm9iLmJ0\nYy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5vcmfwEMled57P9alJ7lGDz8UiGwUI\n8QRftsDr8Ag5XGZ+9gN8OgCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2Fs\nZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 40b93928a05d3dba8a9a59863379291815679502\nparent ca8cd893bb56bf5d455154b0498b1f58f77d20ed\nauthor Jon Atack <jon@atack.com> 1605637092 +0100\ncommitter Jon Atack <jon@atack.com> 1605812456 +0100\n\nwallet (not for backport): improve upgradewallet error messages\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3eb6f8b2e61c24a22ea9396d86672307845f35eb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3eb6f8b2e61c24a22ea9396d86672307845f35eb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3eb6f8b2e61c24a22ea9396d86672307845f35eb/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ca8cd893bb56bf5d455154b0498b1f58f77d20ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca8cd893bb56bf5d455154b0498b1f58f77d20ed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ca8cd893bb56bf5d455154b0498b1f58f77d20ed"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 7,
      "deletions": 6
    },
    "files": [
      {
        "sha": "12a725b5a2e74571da3236868a766057d071486a",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eb6f8b2e61c24a22ea9396d86672307845f35eb/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eb6f8b2e61c24a22ea9396d86672307845f35eb/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=3eb6f8b2e61c24a22ea9396d86672307845f35eb",
        "patch": "@@ -4111,17 +4111,16 @@ bool CWallet::UpgradeWallet(int version, bilingual_str& error)\n     } else {\n         WalletLogPrintf(\"Allowing wallet upgrade up to %i\\n\", version);\n     }\n-    if (version < prev_version)\n-    {\n-        error = _(\"Cannot downgrade wallet\");\n+    if (version < prev_version) {\n+        error = strprintf(_(\"Cannot downgrade wallet from version %i to version %i. Wallet version unchanged.\"), prev_version, version);\n         return false;\n     }\n \n     LOCK(cs_wallet);\n \n     // Do not upgrade versions to any version between HD_SPLIT and FEATURE_PRE_SPLIT_KEYPOOL unless already supporting HD_SPLIT\n     if (!CanSupportFeature(FEATURE_HD_SPLIT) && version >= FEATURE_HD_SPLIT && version < FEATURE_PRE_SPLIT_KEYPOOL) {\n-        error = _(\"Cannot upgrade a non HD split wallet without upgrading to support pre split keypool. Please use version 169900 or no version specified.\");\n+        error = strprintf(_(\"Cannot upgrade a non HD split wallet from version %i to version %i without upgrading to support pre-split keypool. Please use version %i or no version specified.\"), prev_version, version, FEATURE_PRE_SPLIT_KEYPOOL);\n         return false;\n     }\n "
      },
      {
        "sha": "d0bb6135a88ccc43c487c6a48f5c21759c5a78dd",
        "filename": "test/functional/wallet_upgradewallet.py",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eb6f8b2e61c24a22ea9396d86672307845f35eb/test/functional/wallet_upgradewallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eb6f8b2e61c24a22ea9396d86672307845f35eb/test/functional/wallet_upgradewallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_upgradewallet.py?ref=3eb6f8b2e61c24a22ea9396d86672307845f35eb",
        "patch": "@@ -211,7 +211,8 @@ def copy_split_hd():\n \n         self.log.info('Wallets cannot be downgraded')\n         copy_non_hd()\n-        self.test_upgradewallet_error(wallet, previous_version=60000, requested_version=40000, msg=\"Cannot downgrade wallet\")\n+        self.test_upgradewallet_error(wallet, previous_version=60000, requested_version=40000,\n+            msg=\"Cannot downgrade wallet from version 60000 to version 40000. Wallet version unchanged.\")\n         wallet.unloadwallet()\n         assert_equal(before_checksum, sha256sum_file(node_master_wallet))\n         node_master.loadwallet('')\n@@ -250,7 +251,8 @@ def copy_split_hd():\n         self.log.info('Cannot upgrade to HD Split, needs Pre Split Keypool')\n         for version in [139900, 159900, 169899]:\n             self.test_upgradewallet_error(wallet, previous_version=130000, requested_version=version,\n-                msg=\"Cannot upgrade a non HD split wallet without upgrading to support pre split keypool. Please use version 169900 or no version specified.\")\n+                msg=\"Cannot upgrade a non HD split wallet from version {} to version {} without upgrading to \"\n+                    \"support pre-split keypool. Please use version 169900 or no version specified.\".format(130000, version))\n \n         self.log.info('Upgrade HD to HD chain split')\n         self.test_upgradewallet(wallet, previous_version=130000, requested_version=169900)"
      }
    ]
  }
]