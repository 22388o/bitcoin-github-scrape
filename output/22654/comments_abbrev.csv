wodry,2021-08-07 06:52:22,"Why don't you mention this PR in https://github.com/bitcoin/bitcoin/issues/22634#issuecomment-894463139 ?\n\nI have now rewritten my download&verfiy bash script already. It's true that I e.g. do not download into a subfolder ""x86_64-linux-gnu"", so as you said, I experienced that sha256sum -c --ignore-missing does not work.\n\nMy workaround was just to do `grep <Tarballname> SHA256SUMS` and the",https://github.com/bitcoin/bitcoin/pull/22654#issuecomment-894615278,894615278,
hebasto,2021-08-07 07:03:13,"Concept ACK. Arch is included in the output filenames, therefore, no name clash could be expected.",https://github.com/bitcoin/bitcoin/pull/22654#issuecomment-894616398,894616398,
Zero-1729,2021-08-09 03:47:51,"Great find @wodry! \n\n**EDIT**: Given using `$0` as a bash param is discouraged (see [here](https://github.com/bitcoin/bitcoin/pull/22654/files#r684927339)), this change is good to go.",https://github.com/bitcoin/bitcoin/pull/22654#issuecomment-894931738,894931738,
wodry,2021-08-09 07:51:54,"> Concept ACK. Arch is included in the output filenames, therefore, no name clash could be expected.\n\nJust asking, why arch subfolders at all, if every 22.0rc2 subfolder contains just one file with a unique name which contains the arch, except the folder x86_64-w64-mingw32/ which has two files in it, also without clash?",https://github.com/bitcoin/bitcoin/pull/22654#issuecomment-895021096,895021096,
laanwj,2021-08-10 09:26:52,"As I understand this makes the uploaded binaries have all files in one directory like previous releases? (e.g. https://bitcoincore.org/bin/bitcoin-core-0.21.1/ instead of https://bitcoincore.org/bin/bitcoin-core-22.0/test.rc2/)\n\nI didn't think nesting the directory per platform makes anything easier or better, but does add an inconvenient extra click when downloading. So concept ACK.\n\n> I ",https://github.com/bitcoin/bitcoin/pull/22654#issuecomment-895875906,895875906,
wodry,2021-08-10 10:26:46,"> As I understand this makes the uploaded binaries have all files in one directory like previous releases?\n\nI am not sure what you are referring to with ""this""?\nThis PR leaves the arch sub dir structure as is, only removes the directories from the SHA256SUMS file.\nNot sure what and why you ACK.",https://github.com/bitcoin/bitcoin/pull/22654#issuecomment-895914658,895914658,
laanwj,2021-08-10 13:32:25,"> Not sure what and why you ACK.\n\nHaving a single-level SHA256SUMS means that we can put the files in one directory again during upload (anyhow, that users are able to verify that without having to move files around or pre-process SHA256SUMS).\n",https://github.com/bitcoin/bitcoin/pull/22654#issuecomment-896032217,896032217,
achow101,2021-08-10 17:26:24,"> As I understand this makes the uploaded binaries have all files in one directory like previous releases?\n\nUnless the binary server validates the SHA256SUMS file, I don't think so. I don't think it really matters where the binaries are located. Regardless of the directory structure, users are still going to just download one binary file and the SHA256SUMS file into some Downloads directory an",https://github.com/bitcoin/bitcoin/pull/22654#issuecomment-896173947,896173947,
achow101,2021-08-10 19:11:11,"From IRC:\n\n```\n<dongcarl> The layout of the SHA256SUMS file is designed such that anyone can download any subtree (as torrent download tools allow you to do), then `cd path/to/all/output/basedir; sha256sum --check --ignore-missing` to verify their files. In that sense it needs to represent represent the tree somewhat accurately.\n```\n\nSo I guess the directory structure will need to chan",https://github.com/bitcoin/bitcoin/pull/22654#issuecomment-896245992,896245992,
dongcarl,2021-08-11 19:04:36,"Here's an alternative to 752235f0eb74be016ca2b986d8def39960a73391, which does the ""basenamification"" at attest-time (which I think makes a bit more sense):\n\n```diff\ndiff --git a/contrib/guix/guix-attest b/contrib/guix/guix-attest\nindex 1503c330b2..2e2ac0b411 100755\n--- a/contrib/guix/guix-attest\n+++ b/contrib/guix/guix-attest\n@@ -159,6 +159,18 @@ Hint: You may wish to remove the exis",https://github.com/bitcoin/bitcoin/pull/22654#issuecomment-897076815,897076815,
fanquake,2021-08-13 00:45:03,@achow101 can you incorporate Carls suggestion here.,https://github.com/bitcoin/bitcoin/pull/22654#issuecomment-898068172,898068172,
achow101,2021-08-13 00:53:25,I don't see the benefit of Carl's approach over what I have implemented already.,https://github.com/bitcoin/bitcoin/pull/22654#issuecomment-898071134,898071134,
wodry,2021-08-13 05:53:30,"In any case it could be good to use the suggested `basenameify_SHA256SUMS` (or should it be called ""basenamify_SHA256SUMS"" according to ""basenamification"", I am no English expert?), which is quite good readable.\nThat would make it possible to remove rather complex redundant code and it's comments. Not that important, though.",https://github.com/bitcoin/bitcoin/pull/22654#issuecomment-898208862,898208862,
dongcarl,2021-08-17 14:19:24,"For posterity: some previous thoughts from IRC on why it's good to keep the `output/` dir per-host. And flatten it last-minute: https://gnusha.org/bitcoin-builds/2021-08-12.log\n\n```\n11:50 < dongcarl> I think #22654 will work well. What it achieves is basically: 1. Updates release-notes.md to mention that we need to flatten the output hier when uploading, 2. Makes the resulting SHA256SUMS fil",https://github.com/bitcoin/bitcoin/pull/22654#issuecomment-900340300,900340300,
achow101,2021-08-18 19:31:59,Is it strongly preferred that this use @dongcarl's solution over the one implemented here?,https://github.com/bitcoin/bitcoin/pull/22654#issuecomment-901374850,901374850,
fanquake,2021-08-18 23:48:48,Yes I think so.,https://github.com/bitcoin/bitcoin/pull/22654#issuecomment-901502579,901502579,
achow101,2021-08-19 00:44:43,Changed to use @dongcarl's suggestion,https://github.com/bitcoin/bitcoin/pull/22654#issuecomment-901523377,901523377,
fanquake,2021-08-20 06:37:53,"Guix builds:\n```bash\n777a1ad25da672e72356d34638fef917649462307e6a857e0c2f4d78b8d3e363  guix-build-132cae44f2d0/output/aarch64-linux-gnu/SHA256SUMS.part\n5f307edda9d8785a7051bdc89e667500ddd932324f6a0b225d605a921236cdf5  guix-build-132cae44f2d0/output/aarch64-linux-gnu/bitcoin-132cae44f2d0-aarch64-linux-gnu-debug.tar.gz\n99c0fe0aa4952af02384ebd4b84c490351ad462290e4673af5c16d13929d929a  guix-bu",https://github.com/bitcoin/bitcoin/pull/22654#issuecomment-902468060,902468060,
hebasto,2021-08-20 07:15:10,Backported in #22629.,https://github.com/bitcoin/bitcoin/pull/22654#issuecomment-902487048,902487048,
hebasto,2021-08-07 07:18:14,"How does the `_` variable work here?\n\nThe Bash [doc](https://www.gnu.org/software/bash/manual/bash.html#Bash-Variables) did not help much.",https://github.com/bitcoin/bitcoin/pull/22654#discussion_r684597384,684597384,contrib/guix/libexec/build.sh
wodry,2021-08-07 07:36:27,"LOL I just tried for 30 min to figure out :) I am not bad in Bash, but this I just can not understand.",https://github.com/bitcoin/bitcoin/pull/22654#discussion_r684599060,684599060,contrib/guix/libexec/build.sh
Zero-1729,2021-08-07 07:47:38,"AFAIK, post shell startup, `_` stores the last argument of the last executed command. E.g. it stores `-G` after the `ls -G` command is executed, `~/Downloads` if `ls -G ~/Downloads` was executed, etc.\n\nSo in the case above, it should store the pathname `/outdir-base`, i.e. the argument of the last command executed before this line (`cd /outdir-base`). \n\nUnless I am missing something here.",https://github.com/bitcoin/bitcoin/pull/22654#discussion_r684600054,684600054,contrib/guix/libexec/build.sh
wodry,2021-08-07 07:53:28,"I guess the _ feeds the bash command, so it results in $1 there, but not sure :)",https://github.com/bitcoin/bitcoin/pull/22654#discussion_r684600597,684600597,contrib/guix/libexec/build.sh
Zero-1729,2021-08-07 08:18:28,"I would assume it works something like that, but honestly not sure at this point ¯\\\_(ツ)_/¯.",https://github.com/bitcoin/bitcoin/pull/22654#discussion_r684603131,684603131,contrib/guix/libexec/build.sh
achow101,2021-08-07 12:04:58,Shellcheck told me to do it this way: https://github.com/koalaman/shellcheck/wiki/SC2156,https://github.com/bitcoin/bitcoin/pull/22654#discussion_r684624917,684624917,contrib/guix/libexec/build.sh
hebasto,2021-08-07 12:13:09,"> Shellcheck told me to do it this way: https://github.com/koalaman/shellcheck/wiki/SC2156\n\nTIL, thanks!",https://github.com/bitcoin/bitcoin/pull/22654#discussion_r684625686,684625686,contrib/guix/libexec/build.sh
wodry,2021-08-07 19:41:39,"This is really Bash voodoo, I wonder how many people in the world understand this. Please add a comment, e.g. _""The _ is a dummy string that becomes $0 in the bash command. {} becomes $1 in the bash command. Recommended by shellcheck, see https://github.com/koalaman/shellcheck/wiki/SC2156""_ so more people can understand the code.",https://github.com/bitcoin/bitcoin/pull/22654#discussion_r684670218,684670218,contrib/guix/libexec/build.sh
Zero-1729,2021-08-07 19:50:55,ACK on adding that comment (or anything similar). It would save many hours of trying to grok this.,https://github.com/bitcoin/bitcoin/pull/22654#discussion_r684671057,684671057,contrib/guix/libexec/build.sh
achow101,2021-08-08 18:41:47,I've added a comment.,https://github.com/bitcoin/bitcoin/pull/22654#discussion_r684813377,684813377,contrib/guix/libexec/build.sh
hebasto,2021-08-08 19:07:13,"390954af00f63d69009e1e360d972270fc40e974\n\ntypo: preceeding ==> preceding",https://github.com/bitcoin/bitcoin/pull/22654#discussion_r684816113,684816113,contrib/guix/libexec/build.sh
achow101,2021-08-08 19:08:33,Fixed,https://github.com/bitcoin/bitcoin/pull/22654#discussion_r684816330,684816330,contrib/guix/libexec/build.sh
wodry,2021-08-09 03:31:44,"I had still the ambition to understand this strange `_` ""dummy"" parameter and to find any documentation about that, but as Hebasto said, Bash manpage does not help on `_`. After some testing I think I found out now :)\nManpage of Bash 5.0.3 for option `-c`:\n\n> If the -c option is present, then commands are read from the first non-option argument command_string.\n> If there are arguments afte",https://github.com/bitcoin/bitcoin/pull/22654#discussion_r684884983,684884983,contrib/guix/libexec/build.sh
achow101,2021-08-09 06:02:00,"I think it's generally discouraged to used `$0` as an actual parameter. Bash's parameter expansion (through `$*` and `$@`) always starts with 1 because 0 is always the filename. If you consider a general case, people may want to use `$*` or `$@` in their commands, in which case there would be an off by one error if this was not mentioned. We should probably have this discussion in the shellcheck r",https://github.com/bitcoin/bitcoin/pull/22654#discussion_r684927339,684927339,contrib/guix/libexec/build.sh
wodry,2021-08-09 06:12:54,"OK with dummy parameter then, I think you are right and have put up a good point with `$*` etc. I only would recommend to not name it ""_"" but ""dollarzero"" or something, like I have written, to avoid the confusion seen here.",https://github.com/bitcoin/bitcoin/pull/22654#discussion_r684930685,684930685,contrib/guix/libexec/build.sh
wodry,2021-08-09 06:52:48,"Just tested and can confirm:\n```\nbash -c 'echo $*' param1 param2\nparam2\n```",https://github.com/bitcoin/bitcoin/pull/22654#discussion_r684951482,684951482,contrib/guix/libexec/build.sh
wodry,2021-08-09 07:01:13,"So i think the confusion for non-Bash-Gurus, while technically being correct, can be boiled down to unluckily, because mistakable, dummy parameter name and insufficient documentation of the reasonability to use it. An appropriate update of the shellcheck wiki page would be great.",https://github.com/bitcoin/bitcoin/pull/22654#discussion_r684955160,684955160,contrib/guix/libexec/build.sh
wodry,2021-08-09 15:42:50,"> Manpage of Bash 5.0.3 for option `-c`:\n>\n> > The assignment to $0 sets the name of the shell, which is used in warning and error messages.\n\nI think what they mean is:\n""$0 in the shell command is used as the name of the shell, which is used in warning and error messages.""\n\nExamples:\n```\n$ provoke_error\nbash: provoke_error: command not found\n# -> ""bash"" is the name of the she",https://github.com/bitcoin/bitcoin/pull/22654#discussion_r685308832,685308832,contrib/guix/libexec/build.sh
wodry,2021-08-09 18:45:52,I have updated https://github.com/koalaman/shellcheck/wiki/SC2156,https://github.com/bitcoin/bitcoin/pull/22654#discussion_r685436535,685436535,contrib/guix/libexec/build.sh
achow101,2021-08-09 21:12:30,I've changed this to use `bash` instead of `_`.,https://github.com/bitcoin/bitcoin/pull/22654#discussion_r685524691,685524691,contrib/guix/libexec/build.sh
wodry,2021-08-11 10:50:43,"Generally I think it would be good to leave the preceding `./` path, because it is precise.\nThe verifying works with it on Linux, so the removing is not generally needed.\nI guess it shall be removed to be compatible with OSs that have other directory naming conventions, e.g. like Microsoft products?\nI would find a comment helpful, for what reason the `./` is needed to be removed.",https://github.com/bitcoin/bitcoin/pull/22654#discussion_r686717185,686717185,contrib/guix/libexec/build.sh
achow101,2021-08-11 17:36:57,Typically SHA256SUMS do not contain paths to the files. Seeing the `./` may be confusing to users who are not familiar with paths.,https://github.com/bitcoin/bitcoin/pull/22654#discussion_r687040048,687040048,contrib/guix/libexec/build.sh
wodry,2021-08-12 07:17:23,"BTW [here](http://www.gnu.org/software/coreutils/manual/coreutils.html#sha2-utilities) (leading to the doc of `md5sum --check` invocation) is the doc of SHA256SUMS file:\n_The input to this mode of md5sum is usually the output of a prior, checksum-generating run of ‘md5sum’._",https://github.com/bitcoin/bitcoin/pull/22654#discussion_r687451007,687451007,contrib/guix/libexec/build.sh
achow101,2021-08-12 20:41:21,"Yes, but many people do a visual comparison.",https://github.com/bitcoin/bitcoin/pull/22654#discussion_r688069833,688069833,contrib/guix/libexec/build.sh
wodry,2021-08-19 04:28:31,"Nit: I personally like stating directory names with a traling `/` when possible like here, so code readers can easily recognize that it is a directory, in this case ""each `./bitcoin/guix-build-${VERSION}/output/${HOST}/` directory"". In line 226 this is done with `/output/`",https://github.com/bitcoin/bitcoin/pull/22654#discussion_r691770203,691770203,doc/release-process.md
wodry,2021-08-19 04:28:59,Nit: `/var/www/bin/bitcoin-core-${VERSION}/`,https://github.com/bitcoin/bitcoin/pull/22654#discussion_r691770549,691770549,doc/release-process.md
achow101,2021-08-19 20:49:23,Done,https://github.com/bitcoin/bitcoin/pull/22654#discussion_r692477238,692477238,doc/release-process.md
achow101,2021-08-19 20:49:26,Done,https://github.com/bitcoin/bitcoin/pull/22654#discussion_r692477276,692477276,doc/release-process.md
