[
  {
    "sha": "17abc0fd52510bfeb85a7b5be04001075ec78b6b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxN2FiYzBmZDUyNTEwYmZlYjg1YTdiNWJlMDQwMDEwNzVlYzc4YjZi",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-01-12T11:47:04Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-02-04T12:20:42Z"
      },
      "message": "wallet: Factor out LoadWallet",
      "tree": {
        "sha": "dab3db76b7929f76ba8deedebdf57ebb40c3a24b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dab3db76b7929f76ba8deedebdf57ebb40c3a24b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/17abc0fd52510bfeb85a7b5be04001075ec78b6b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17abc0fd52510bfeb85a7b5be04001075ec78b6b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/17abc0fd52510bfeb85a7b5be04001075ec78b6b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17abc0fd52510bfeb85a7b5be04001075ec78b6b/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "64127b3098a1aab70200b6d07194dce072ad5cf2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64127b3098a1aab70200b6d07194dce072ad5cf2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/64127b3098a1aab70200b6d07194dce072ad5cf2"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 35,
      "deletions": 13
    },
    "files": [
      {
        "sha": "8a76021a5bff3356fc3d26c2e5cf0fc8bbd65246",
        "filename": "src/dummywallet.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17abc0fd52510bfeb85a7b5be04001075ec78b6b/src/dummywallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17abc0fd52510bfeb85a7b5be04001075ec78b6b/src/dummywallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dummywallet.cpp?ref=17abc0fd52510bfeb85a7b5be04001075ec78b6b",
        "patch": "@@ -8,6 +8,10 @@\n \n class CWallet;\n \n+namespace interfaces {\n+class Chain;\n+}\n+\n class DummyWalletInit : public WalletInitInterface {\n public:\n \n@@ -43,6 +47,11 @@ std::vector<std::shared_ptr<CWallet>> GetWallets()\n     throw std::logic_error(\"Wallet function called in non-wallet build.\");\n }\n \n+std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const std::string& name, std::string& error, std::string& warning)\n+{\n+    throw std::logic_error(\"Wallet function called in non-wallet build.\");\n+}\n+\n namespace interfaces {\n \n class Wallet;"
      },
      {
        "sha": "38942e9fcb264e335c695a8071eab81e647dd4b0",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 13,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17abc0fd52510bfeb85a7b5be04001075ec78b6b/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17abc0fd52510bfeb85a7b5be04001075ec78b6b/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=17abc0fd52510bfeb85a7b5be04001075ec78b6b",
        "patch": "@@ -2544,7 +2544,6 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n             }.ToString());\n \n     WalletLocation location(request.params[0].get_str());\n-    std::string error;\n \n     if (!location.Exists()) {\n         throw JSONRPCError(RPC_WALLET_NOT_FOUND, \"Wallet \" + location.GetName() + \" not found.\");\n@@ -2556,18 +2555,9 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n         }\n     }\n \n-    std::string warning;\n-    if (!CWallet::Verify(*g_rpc_interfaces->chain, location, false, error, warning)) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet file verification failed: \" + error);\n-    }\n-\n-    std::shared_ptr<CWallet> const wallet = CWallet::CreateWalletFromFile(*g_rpc_interfaces->chain, location);\n-    if (!wallet) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet loading failed.\");\n-    }\n-    AddWallet(wallet);\n-\n-    wallet->postInitProcess();\n+    std::string error, warning;\n+    std::shared_ptr<CWallet> const wallet = LoadWallet(*g_rpc_interfaces->chain, location, error, warning);\n+    if (!wallet) throw JSONRPCError(RPC_WALLET_ERROR, error);\n \n     UniValue obj(UniValue::VOBJ);\n     obj.pushKV(\"name\", wallet->GetName());"
      },
      {
        "sha": "2a39b5474d6c3fc9f1197bc1d1668e20ca828f1f",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17abc0fd52510bfeb85a7b5be04001075ec78b6b/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17abc0fd52510bfeb85a7b5be04001075ec78b6b/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=17abc0fd52510bfeb85a7b5be04001075ec78b6b",
        "patch": "@@ -130,6 +130,28 @@ void UnloadWallet(std::shared_ptr<CWallet>&& wallet)\n     }\n }\n \n+std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const WalletLocation& location, std::string& error, std::string& warning)\n+{\n+    if (!CWallet::Verify(chain, location, false, error, warning)) {\n+        error = \"Wallet file verification failed: \" + error;\n+        return nullptr;\n+    }\n+\n+    std::shared_ptr<CWallet> wallet = CWallet::CreateWalletFromFile(chain, location);\n+    if (!wallet) {\n+        error = \"Wallet loading failed.\";\n+        return nullptr;\n+    }\n+    AddWallet(wallet);\n+    wallet->postInitProcess();\n+    return wallet;\n+}\n+\n+std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const std::string& name, std::string& error, std::string& warning)\n+{\n+    return LoadWallet(chain, WalletLocation(name), error, warning);\n+}\n+\n const uint32_t BIP32_HARDENED_KEY_LIMIT = 0x80000000;\n \n const uint256 CMerkleTx::ABANDON_HASH(uint256S(\"0000000000000000000000000000000000000000000000000000000000000001\"));"
      },
      {
        "sha": "4727ddedadb0827df35720c8f29aade165e7752f",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17abc0fd52510bfeb85a7b5be04001075ec78b6b/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17abc0fd52510bfeb85a7b5be04001075ec78b6b/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=17abc0fd52510bfeb85a7b5be04001075ec78b6b",
        "patch": "@@ -66,6 +66,7 @@ bool RemoveWallet(const std::shared_ptr<CWallet>& wallet);\n bool HasWallets();\n std::vector<std::shared_ptr<CWallet>> GetWallets();\n std::shared_ptr<CWallet> GetWallet(const std::string& name);\n+std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const WalletLocation& location, std::string& error, std::string& warning);\n \n //! Default for -keypool\n static const unsigned int DEFAULT_KEYPOOL_SIZE = 1000;"
      }
    ]
  },
  {
    "sha": "ab288b4e59c52905343a1de628735b5c871d79a1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYjI4OGI0ZTU5YzUyOTA1MzQzYTFkZTYyODczNWI1Yzg3MWQ3OWEx",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-01-12T11:36:38Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-02-04T12:20:42Z"
      },
      "message": "interfaces: Add loadWallet to Node",
      "tree": {
        "sha": "602341604977e3b171477680bff7ab19ca08f47f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/602341604977e3b171477680bff7ab19ca08f47f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab288b4e59c52905343a1de628735b5c871d79a1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab288b4e59c52905343a1de628735b5c871d79a1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ab288b4e59c52905343a1de628735b5c871d79a1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab288b4e59c52905343a1de628735b5c871d79a1/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "17abc0fd52510bfeb85a7b5be04001075ec78b6b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17abc0fd52510bfeb85a7b5be04001075ec78b6b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/17abc0fd52510bfeb85a7b5be04001075ec78b6b"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f3e990fa47483dae57a73bf4a179deccbbecf289",
        "filename": "src/interfaces/node.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab288b4e59c52905343a1de628735b5c871d79a1/src/interfaces/node.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab288b4e59c52905343a1de628735b5c871d79a1/src/interfaces/node.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.cpp?ref=ab288b4e59c52905343a1de628735b5c871d79a1",
        "patch": "@@ -42,6 +42,7 @@ class CWallet;\n fs::path GetWalletDir();\n std::vector<fs::path> ListWalletDir();\n std::vector<std::shared_ptr<CWallet>> GetWallets();\n+std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const std::string& name, std::string& error, std::string& warning);\n \n namespace interfaces {\n \n@@ -252,6 +253,10 @@ class NodeImpl : public Node\n         }\n         return wallets;\n     }\n+    std::unique_ptr<Wallet> loadWallet(const std::string& name, std::string& error, std::string& warning) override\n+    {\n+        return MakeWallet(LoadWallet(*m_interfaces.chain, name, error, warning));\n+    }\n     std::unique_ptr<Handler> handleInitMessage(InitMessageFn fn) override\n     {\n         return MakeHandler(::uiInterface.InitMessage_connect(fn));"
      },
      {
        "sha": "76b93af234b8ce5d98eb6f5dd5e54b1ecd9afa4d",
        "filename": "src/interfaces/node.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab288b4e59c52905343a1de628735b5c871d79a1/src/interfaces/node.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab288b4e59c52905343a1de628735b5c871d79a1/src/interfaces/node.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.h?ref=ab288b4e59c52905343a1de628735b5c871d79a1",
        "patch": "@@ -192,6 +192,11 @@ class Node\n     //! Return interfaces for accessing wallets (if any).\n     virtual std::vector<std::unique_ptr<Wallet>> getWallets() = 0;\n \n+    //! Attempts to load a wallet from file or directory.\n+    //! The loaded wallet is also notified to handlers previously registered\n+    //! with handleLoadWallet.\n+    virtual std::unique_ptr<Wallet> loadWallet(const std::string& name, std::string& error, std::string& warning) = 0;\n+\n     //! Register handler for init messages.\n     using InitMessageFn = std::function<void(const std::string& message)>;\n     virtual std::unique_ptr<Handler> handleInitMessage(InitMessageFn fn) = 0;"
      }
    ]
  },
  {
    "sha": "32a8c6abfe32d5b89bf4505ca8397bdb44867614",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMmE4YzZhYmZlMzJkNWI4OWJmNDUwNWNhODM5N2JkYjQ0ODY3NjE0",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-01-12T11:34:05Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-02-04T12:20:42Z"
      },
      "message": "gui: Add openWallet and getWalletsAvailableToOpen to WalletController",
      "tree": {
        "sha": "f425a320c391dc8677d540bf590a6073ee09b1e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f425a320c391dc8677d540bf590a6073ee09b1e3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/32a8c6abfe32d5b89bf4505ca8397bdb44867614",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/32a8c6abfe32d5b89bf4505ca8397bdb44867614",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/32a8c6abfe32d5b89bf4505ca8397bdb44867614",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/32a8c6abfe32d5b89bf4505ca8397bdb44867614/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ab288b4e59c52905343a1de628735b5c871d79a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab288b4e59c52905343a1de628735b5c871d79a1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ab288b4e59c52905343a1de628735b5c871d79a1"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 28,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0730afca985ee31168a5ae12d1297ec155fc1e32",
        "filename": "src/qt/walletcontroller.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/32a8c6abfe32d5b89bf4505ca8397bdb44867614/src/qt/walletcontroller.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/32a8c6abfe32d5b89bf4505ca8397bdb44867614/src/qt/walletcontroller.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.cpp?ref=32a8c6abfe32d5b89bf4505ca8397bdb44867614",
        "patch": "@@ -9,6 +9,7 @@\n \n #include <algorithm>\n \n+#include <QMessageBox>\n #include <QMutexLocker>\n #include <QThread>\n \n@@ -37,6 +38,30 @@ std::vector<WalletModel*> WalletController::getWallets() const\n     return m_wallets;\n }\n \n+std::vector<std::string> WalletController::getWalletsAvailableToOpen() const\n+{\n+    QMutexLocker locker(&m_mutex);\n+    std::vector<std::string> wallets = m_node.listWalletDir();\n+    for (WalletModel* wallet_model : m_wallets) {\n+        auto it = std::remove(wallets.begin(), wallets.end(), wallet_model->wallet().getWalletName());\n+        if (it != wallets.end()) wallets.erase(it);\n+    }\n+    return wallets;\n+}\n+\n+WalletModel* WalletController::openWallet(const std::string& name, QWidget* parent)\n+{\n+    std::string error, warning;\n+    WalletModel* wallet_model = getOrCreateWallet(m_node.loadWallet(name, error, warning));\n+    if (!wallet_model) {\n+        QMessageBox::warning(parent, tr(\"Open Wallet\"), QString::fromStdString(error));\n+    }\n+    if (!warning.empty()) {\n+        QMessageBox::information(parent, tr(\"Open Wallet\"), QString::fromStdString(warning));\n+    }\n+    return wallet_model;\n+}\n+\n WalletModel* WalletController::getOrCreateWallet(std::unique_ptr<interfaces::Wallet> wallet)\n {\n     QMutexLocker locker(&m_mutex);"
      },
      {
        "sha": "523e47d27ad8d1e82ff62dc0b87b014d67742a4a",
        "filename": "src/qt/walletcontroller.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/32a8c6abfe32d5b89bf4505ca8397bdb44867614/src/qt/walletcontroller.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/32a8c6abfe32d5b89bf4505ca8397bdb44867614/src/qt/walletcontroller.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.h?ref=32a8c6abfe32d5b89bf4505ca8397bdb44867614",
        "patch": "@@ -37,6 +37,9 @@ class WalletController : public QObject\n     ~WalletController();\n \n     std::vector<WalletModel*> getWallets() const;\n+    std::vector<std::string> getWalletsAvailableToOpen() const;\n+\n+    WalletModel* openWallet(const std::string& name, QWidget* parent = nullptr);\n \n private Q_SLOTS:\n     void addWallet(WalletModel* wallet_model);"
      }
    ]
  },
  {
    "sha": "6c49a55b472fa4ec403e48ec718af85bfd402199",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YzQ5YTU1YjQ3MmZhNGVjNDAzZTQ4ZWM3MThhZjg1YmZkNDAyMTk5",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-01-12T11:40:30Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-02-04T12:20:42Z"
      },
      "message": "gui: Add Open Wallet menu",
      "tree": {
        "sha": "a8a544f65e1eb41ad0f439994a5dfaf21d4540a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a8a544f65e1eb41ad0f439994a5dfaf21d4540a1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6c49a55b472fa4ec403e48ec718af85bfd402199",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c49a55b472fa4ec403e48ec718af85bfd402199",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6c49a55b472fa4ec403e48ec718af85bfd402199",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c49a55b472fa4ec403e48ec718af85bfd402199/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "32a8c6abfe32d5b89bf4505ca8397bdb44867614",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/32a8c6abfe32d5b89bf4505ca8397bdb44867614",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/32a8c6abfe32d5b89bf4505ca8397bdb44867614"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 17,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e7279e12293a5ccf154d826bdb6787dc46fafe6e",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c49a55b472fa4ec403e48ec718af85bfd402199/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c49a55b472fa4ec403e48ec718af85bfd402199/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=6c49a55b472fa4ec403e48ec718af85bfd402199",
        "patch": "@@ -334,6 +334,10 @@ void BitcoinGUI::createActions()\n     openAction = new QAction(platformStyle->TextColorIcon(\":/icons/open\"), tr(\"Open &URI...\"), this);\n     openAction->setStatusTip(tr(\"Open a bitcoin: URI or payment request\"));\n \n+    m_open_wallet_action = new QAction(tr(\"Open Wallet\"), this);\n+    m_open_wallet_action->setMenu(new QMenu(this));\n+    m_open_wallet_action->setStatusTip(tr(\"Open a wallet\"));\n+\n     showHelpMessageAction = new QAction(platformStyle->TextColorIcon(\":/icons/info\"), tr(\"&Command-line options\"), this);\n     showHelpMessageAction->setMenuRole(QAction::NoRole);\n     showHelpMessageAction->setStatusTip(tr(\"Show the %1 help message to get a list with possible Bitcoin command-line options\").arg(tr(PACKAGE_NAME)));\n@@ -361,6 +365,16 @@ void BitcoinGUI::createActions()\n         connect(usedSendingAddressesAction, &QAction::triggered, walletFrame, &WalletFrame::usedSendingAddresses);\n         connect(usedReceivingAddressesAction, &QAction::triggered, walletFrame, &WalletFrame::usedReceivingAddresses);\n         connect(openAction, &QAction::triggered, this, &BitcoinGUI::openClicked);\n+        connect(m_open_wallet_action->menu(), &QMenu::aboutToShow, [this] {\n+            m_open_wallet_action->menu()->clear();\n+            for (std::string path : m_wallet_controller->getWalletsAvailableToOpen()) {\n+                QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n+                QAction* action = m_open_wallet_action->menu()->addAction(name);\n+                connect(action, &QAction::triggered, [this, path] {\n+                    setCurrentWallet(m_wallet_controller->openWallet(path));\n+                });\n+            }\n+        });\n     }\n #endif // ENABLE_WALLET\n \n@@ -382,6 +396,8 @@ void BitcoinGUI::createMenuBar()\n     QMenu *file = appMenuBar->addMenu(tr(\"&File\"));\n     if(walletFrame)\n     {\n+        file->addAction(m_open_wallet_action);\n+        file->addSeparator();\n         file->addAction(openAction);\n         file->addAction(backupWalletAction);\n         file->addAction(signMessageAction);"
      },
      {
        "sha": "c226494020a62f8940a5fc939bfc6b66e5d9dd02",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c49a55b472fa4ec403e48ec718af85bfd402199/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c49a55b472fa4ec403e48ec718af85bfd402199/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=6c49a55b472fa4ec403e48ec718af85bfd402199",
        "patch": "@@ -147,6 +147,7 @@ class BitcoinGUI : public QMainWindow\n     QAction* openRPCConsoleAction = nullptr;\n     QAction* openAction = nullptr;\n     QAction* showHelpMessageAction = nullptr;\n+    QAction* m_open_wallet_action{nullptr};\n     QAction* m_wallet_selector_label_action = nullptr;\n     QAction* m_wallet_selector_action = nullptr;\n "
      }
    ]
  },
  {
    "sha": "be82dea23c3e6931f9ae7ab8c6a8595ae950587f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZTgyZGVhMjNjM2U2OTMxZjlhZTdhYjhjNmE4NTk1YWU5NTA1ODdm",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-01-21T16:57:22Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-02-04T12:20:42Z"
      },
      "message": "gui: Add thread to run background activity in WalletController",
      "tree": {
        "sha": "cc6fbc6c0fb4c2682089b9b334c9afb031b5a3aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cc6fbc6c0fb4c2682089b9b334c9afb031b5a3aa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/be82dea23c3e6931f9ae7ab8c6a8595ae950587f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be82dea23c3e6931f9ae7ab8c6a8595ae950587f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/be82dea23c3e6931f9ae7ab8c6a8595ae950587f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be82dea23c3e6931f9ae7ab8c6a8595ae950587f/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6c49a55b472fa4ec403e48ec718af85bfd402199",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c49a55b472fa4ec403e48ec718af85bfd402199",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6c49a55b472fa4ec403e48ec718af85bfd402199"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 9,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a103f4c89be99d4eb6669255b7b5d6bf8051bd2c",
        "filename": "src/qt/walletcontroller.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/be82dea23c3e6931f9ae7ab8c6a8595ae950587f/src/qt/walletcontroller.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/be82dea23c3e6931f9ae7ab8c6a8595ae950587f/src/qt/walletcontroller.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.cpp?ref=be82dea23c3e6931f9ae7ab8c6a8595ae950587f",
        "patch": "@@ -26,11 +26,17 @@ WalletController::WalletController(interfaces::Node& node, const PlatformStyle*\n     for (std::unique_ptr<interfaces::Wallet>& wallet : m_node.getWallets()) {\n         getOrCreateWallet(std::move(wallet));\n     }\n+\n+    m_activity_thread.start();\n }\n \n // Not using the default destructor because not all member types definitions are\n // available in the header, just forward declared.\n-WalletController::~WalletController() {}\n+WalletController::~WalletController()\n+{\n+    m_activity_thread.quit();\n+    m_activity_thread.wait();\n+}\n \n std::vector<WalletModel*> WalletController::getWallets() const\n {"
      },
      {
        "sha": "1664fa6f3f41e877eeaa01635e757aa91541e9ba",
        "filename": "src/qt/walletcontroller.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/be82dea23c3e6931f9ae7ab8c6a8595ae950587f/src/qt/walletcontroller.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/be82dea23c3e6931f9ae7ab8c6a8595ae950587f/src/qt/walletcontroller.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.h?ref=be82dea23c3e6931f9ae7ab8c6a8595ae950587f",
        "patch": "@@ -13,6 +13,7 @@\n #include <vector>\n \n #include <QMutex>\n+#include <QThread>\n \n class OptionsModel;\n class PlatformStyle;\n@@ -51,6 +52,7 @@ private Q_SLOTS:\n     void coinsSent(WalletModel* wallet_model, SendCoinsRecipient recipient, QByteArray transaction);\n \n private:\n+    QThread m_activity_thread;\n     interfaces::Node& m_node;\n     const PlatformStyle* const m_platform_style;\n     OptionsModel* const m_options_model;"
      }
    ]
  },
  {
    "sha": "4c8982a88e3d9fae4f8fc147a2d9f9650a493da7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0Yzg5ODJhODhlM2Q5ZmFlNGY4ZmMxNDdhMmQ5Zjk2NTBhNDkzZGE3",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-01-22T15:09:57Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-02-04T12:20:42Z"
      },
      "message": "interfaces: Avoid interface instance if wallet is null",
      "tree": {
        "sha": "be7846f1c9cc9e55ff665ed9acfccdac3f14121d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/be7846f1c9cc9e55ff665ed9acfccdac3f14121d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4c8982a88e3d9fae4f8fc147a2d9f9650a493da7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4c8982a88e3d9fae4f8fc147a2d9f9650a493da7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4c8982a88e3d9fae4f8fc147a2d9f9650a493da7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4c8982a88e3d9fae4f8fc147a2d9f9650a493da7/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "be82dea23c3e6931f9ae7ab8c6a8595ae950587f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be82dea23c3e6931f9ae7ab8c6a8595ae950587f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/be82dea23c3e6931f9ae7ab8c6a8595ae950587f"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "62b057945698110e62100bfc1593d896f5d1cf71",
        "filename": "src/interfaces/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c8982a88e3d9fae4f8fc147a2d9f9650a493da7/src/interfaces/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c8982a88e3d9fae4f8fc147a2d9f9650a493da7/src/interfaces/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.cpp?ref=4c8982a88e3d9fae4f8fc147a2d9f9650a493da7",
        "patch": "@@ -523,7 +523,7 @@ class WalletClientImpl : public ChainClient\n \n } // namespace\n \n-std::unique_ptr<Wallet> MakeWallet(const std::shared_ptr<CWallet>& wallet) { return MakeUnique<WalletImpl>(wallet); }\n+std::unique_ptr<Wallet> MakeWallet(const std::shared_ptr<CWallet>& wallet) { return wallet ? MakeUnique<WalletImpl>(wallet) : nullptr; }\n \n std::unique_ptr<ChainClient> MakeWalletClient(Chain& chain, std::vector<std::string> wallet_filenames)\n {"
      }
    ]
  },
  {
    "sha": "8847cdaaaeb45c1ddee89f43ac4b8fafb20e5c0d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ODQ3Y2RhYWFlYjQ1YzFkZGVlODlmNDNhYzRiOGZhZmIyMGU1YzBk",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-01-21T16:58:20Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-02-04T12:23:40Z"
      },
      "message": "gui: Add OpenWalletActivity",
      "tree": {
        "sha": "321d97f44c2168eef5725b5e2528de375d96dbaf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/321d97f44c2168eef5725b5e2528de375d96dbaf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8847cdaaaeb45c1ddee89f43ac4b8fafb20e5c0d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8847cdaaaeb45c1ddee89f43ac4b8fafb20e5c0d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8847cdaaaeb45c1ddee89f43ac4b8fafb20e5c0d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8847cdaaaeb45c1ddee89f43ac4b8fafb20e5c0d/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4c8982a88e3d9fae4f8fc147a2d9f9650a493da7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4c8982a88e3d9fae4f8fc147a2d9f9650a493da7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4c8982a88e3d9fae4f8fc147a2d9f9650a493da7"
      }
    ],
    "stats": {
      "total": 69,
      "additions": 56,
      "deletions": 13
    },
    "files": [
      {
        "sha": "d6c6fd6e98ab13e36de1d979058154723c3ef972",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8847cdaaaeb45c1ddee89f43ac4b8fafb20e5c0d/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8847cdaaaeb45c1ddee89f43ac4b8fafb20e5c0d/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=8847cdaaaeb45c1ddee89f43ac4b8fafb20e5c0d",
        "patch": "@@ -456,7 +456,7 @@ int GuiMain(int argc, char* argv[])\n     //   IMPORTANT if it is no longer a typedef use the normal variant above\n     qRegisterMetaType< CAmount >(\"CAmount\");\n     qRegisterMetaType< std::function<void()> >(\"std::function<void()>\");\n-\n+    qRegisterMetaType<QMessageBox::Icon>(\"QMessageBox::Icon\");\n     /// 2. Parse command-line options. We do this after qt in order to show an error if there are problems parsing these\n     // Command-line options take precedence:\n     node->setupServerArgs();"
      },
      {
        "sha": "3622bd565760e954c430b2b94f86ca60da923c5d",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8847cdaaaeb45c1ddee89f43ac4b8fafb20e5c0d/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8847cdaaaeb45c1ddee89f43ac4b8fafb20e5c0d/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=8847cdaaaeb45c1ddee89f43ac4b8fafb20e5c0d",
        "patch": "@@ -371,7 +371,9 @@ void BitcoinGUI::createActions()\n                 QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n                 QAction* action = m_open_wallet_action->menu()->addAction(name);\n                 connect(action, &QAction::triggered, [this, path] {\n-                    setCurrentWallet(m_wallet_controller->openWallet(path));\n+                    OpenWalletActivity* activity = m_wallet_controller->openWallet(path);\n+                    connect(activity, &OpenWalletActivity::opened, this, &BitcoinGUI::setCurrentWallet);\n+                    connect(activity, &OpenWalletActivity::finished, activity, &QObject::deleteLater);\n                 });\n             }\n         });"
      },
      {
        "sha": "3483c75970c0e7a90c15bed0372b025268f993bb",
        "filename": "src/qt/walletcontroller.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 10,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8847cdaaaeb45c1ddee89f43ac4b8fafb20e5c0d/src/qt/walletcontroller.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8847cdaaaeb45c1ddee89f43ac4b8fafb20e5c0d/src/qt/walletcontroller.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.cpp?ref=8847cdaaaeb45c1ddee89f43ac4b8fafb20e5c0d",
        "patch": "@@ -55,17 +55,12 @@ std::vector<std::string> WalletController::getWalletsAvailableToOpen() const\n     return wallets;\n }\n \n-WalletModel* WalletController::openWallet(const std::string& name, QWidget* parent)\n+OpenWalletActivity* WalletController::openWallet(const std::string& name, QWidget* parent)\n {\n-    std::string error, warning;\n-    WalletModel* wallet_model = getOrCreateWallet(m_node.loadWallet(name, error, warning));\n-    if (!wallet_model) {\n-        QMessageBox::warning(parent, tr(\"Open Wallet\"), QString::fromStdString(error));\n-    }\n-    if (!warning.empty()) {\n-        QMessageBox::information(parent, tr(\"Open Wallet\"), QString::fromStdString(warning));\n-    }\n-    return wallet_model;\n+    OpenWalletActivity* activity = new OpenWalletActivity(this, name);\n+    activity->moveToThread(&m_activity_thread);\n+    QMetaObject::invokeMethod(activity, \"open\", Qt::QueuedConnection);\n+    return activity;\n }\n \n WalletModel* WalletController::getOrCreateWallet(std::unique_ptr<interfaces::Wallet> wallet)\n@@ -124,3 +119,24 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     // CWallet shared pointer.\n     delete wallet_model;\n }\n+\n+\n+OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n+    : m_wallet_controller(wallet_controller)\n+    , m_name(name)\n+{}\n+\n+void OpenWalletActivity::open()\n+{\n+    std::string error, warning;\n+    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n+    if (!warning.empty()) {\n+        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n+    }\n+    if (wallet) {\n+        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));\n+    } else {\n+        Q_EMIT message(QMessageBox::Critical, QString::fromStdString(error));\n+    }\n+    Q_EMIT finished();\n+}"
      },
      {
        "sha": "f19c0e1f3d7b66277f35785ece08dce397708a00",
        "filename": "src/qt/walletcontroller.h",
        "status": "modified",
        "additions": 26,
        "deletions": 1,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8847cdaaaeb45c1ddee89f43ac4b8fafb20e5c0d/src/qt/walletcontroller.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8847cdaaaeb45c1ddee89f43ac4b8fafb20e5c0d/src/qt/walletcontroller.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.h?ref=8847cdaaaeb45c1ddee89f43ac4b8fafb20e5c0d",
        "patch": "@@ -12,6 +12,7 @@\n #include <memory>\n #include <vector>\n \n+#include <QMessageBox>\n #include <QMutex>\n #include <QThread>\n \n@@ -23,6 +24,8 @@ class Handler;\n class Node;\n } // namespace interfaces\n \n+class OpenWalletActivity;\n+\n /**\n  * Controller between interfaces::Node, WalletModel instances and the GUI.\n  */\n@@ -40,7 +43,7 @@ class WalletController : public QObject\n     std::vector<WalletModel*> getWallets() const;\n     std::vector<std::string> getWalletsAvailableToOpen() const;\n \n-    WalletModel* openWallet(const std::string& name, QWidget* parent = nullptr);\n+    OpenWalletActivity* openWallet(const std::string& name, QWidget* parent = nullptr);\n \n private Q_SLOTS:\n     void addWallet(WalletModel* wallet_model);\n@@ -59,6 +62,28 @@ private Q_SLOTS:\n     mutable QMutex m_mutex;\n     std::vector<WalletModel*> m_wallets;\n     std::unique_ptr<interfaces::Handler> m_handler_load_wallet;\n+\n+    friend class OpenWalletActivity;\n+};\n+\n+class OpenWalletActivity : public QObject\n+{\n+    Q_OBJECT\n+\n+public:\n+    OpenWalletActivity(WalletController* wallet_controller, const std::string& name);\n+\n+public Q_SLOTS:\n+    void open();\n+\n+Q_SIGNALS:\n+    void message(QMessageBox::Icon icon, const QString text);\n+    void finished();\n+    void opened(WalletModel* wallet_model);\n+\n+private:\n+    WalletController* const m_wallet_controller;\n+    std::string const m_name;\n };\n \n #endif // BITCOIN_QT_WALLETCONTROLLER_H"
      }
    ]
  },
  {
    "sha": "1951ea4342db4122032660139248b79a02c574f3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOTUxZWE0MzQyZGI0MTIyMDMyNjYwMTM5MjQ4Yjc5YTAyYzU3NGYz",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-01-22T13:02:45Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-02-04T12:23:43Z"
      },
      "message": "gui: Show indeterminate progress dialog while opening walllet",
      "tree": {
        "sha": "ba3c41691de9ffcc419820edc37505eb12d7d95d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ba3c41691de9ffcc419820edc37505eb12d7d95d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1951ea4342db4122032660139248b79a02c574f3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1951ea4342db4122032660139248b79a02c574f3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1951ea4342db4122032660139248b79a02c574f3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1951ea4342db4122032660139248b79a02c574f3/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8847cdaaaeb45c1ddee89f43ac4b8fafb20e5c0d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8847cdaaaeb45c1ddee89f43ac4b8fafb20e5c0d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8847cdaaaeb45c1ddee89f43ac4b8fafb20e5c0d"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 20,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f7a4bad916c060cd10f29a87dbfc6e4f41ec45c4",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 1,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1951ea4342db4122032660139248b79a02c574f3/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1951ea4342db4122032660139248b79a02c574f3/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=1951ea4342db4122032660139248b79a02c574f3",
        "patch": "@@ -370,10 +370,29 @@ void BitcoinGUI::createActions()\n             for (std::string path : m_wallet_controller->getWalletsAvailableToOpen()) {\n                 QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n                 QAction* action = m_open_wallet_action->menu()->addAction(name);\n-                connect(action, &QAction::triggered, [this, path] {\n+                connect(action, &QAction::triggered, [this, name, path] {\n                     OpenWalletActivity* activity = m_wallet_controller->openWallet(path);\n+\n+                    QProgressDialog* dialog = new QProgressDialog(this);\n+                    dialog->setLabelText(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n+                    dialog->setRange(0, 0);\n+                    dialog->setCancelButton(nullptr);\n+                    dialog->setWindowModality(Qt::ApplicationModal);\n+                    dialog->show();\n+\n+                    connect(activity, &OpenWalletActivity::message, this, [this] (QMessageBox::Icon icon, QString text) {\n+                        QMessageBox box;\n+                        box.setIcon(icon);\n+                        box.setText(tr(\"Open Wallet Failed\"));\n+                        box.setInformativeText(text);\n+                        box.setStandardButtons(QMessageBox::Ok);\n+                        box.setDefaultButton(QMessageBox::Ok);\n+                        connect(this, &QObject::destroyed, &box, &QDialog::accept);\n+                        box.exec();\n+                    });\n                     connect(activity, &OpenWalletActivity::opened, this, &BitcoinGUI::setCurrentWallet);\n                     connect(activity, &OpenWalletActivity::finished, activity, &QObject::deleteLater);\n+                    connect(activity, &OpenWalletActivity::finished, dialog, &QObject::deleteLater);\n                 });\n             }\n         });"
      }
    ]
  }
]