[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/453749896",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-453749896",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
    "id": 453749896,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Mzc0OTg5Ng==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-12T14:01:16Z",
    "updated_at": "2019-02-04T13:39:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15204](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15204.html) (gui: Add Open External Wallet action by promag)\n* [#15202](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15202.html) (gui: Add Close All Wallets action by promag)\n* [#15195](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15195.html) (gui: Add Close Wallet action by promag)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/453749896/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/453835706",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-453835706",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
    "id": 453835706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzgzNTcwNg==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-13T14:48:20Z",
    "updated_at": "2019-01-13T14:48:20Z",
    "author_association": "MEMBER",
    "body": "Concept ACK.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/453835706/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455228356",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-455228356",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
    "id": 455228356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTIyODM1Ng==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T16:07:14Z",
    "updated_at": "2019-01-17T16:07:14Z",
    "author_association": "MEMBER",
    "body": "Concept ACK. Code looks good at first glance; will review once upstream is merged.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455228356/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455679884",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-455679884",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
    "id": 455679884,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTY3OTg4NA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-18T20:37:26Z",
    "updated_at": "2019-01-18T20:37:26Z",
    "author_association": "MEMBER",
    "body": "Rebased.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455679884/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455744004",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-455744004",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
    "id": 455744004,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0NDAwNA==",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-19T03:05:05Z",
    "updated_at": "2019-01-19T03:05:05Z",
    "author_association": "MEMBER",
    "body": "Concept ACK.\r\n\r\nHow should we handle opening a wallet that requires rescanning/is partialling rescanned? \r\n\r\ni.e with 67cdd14  if you start `bitcoin-qt` with `-rescan`, then open a wallet after the GUI has loaded, that wallet will be rescanned, which will block the UI with no output (expect for in `debug.log`).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455744004/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/456119940",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-456119940",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
    "id": 456119940,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjExOTk0MA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-21T15:54:16Z",
    "updated_at": "2019-01-21T15:54:31Z",
    "author_association": "MEMBER",
    "body": "@fanquake good point! I wonder if it's reasonable to tackle that later, to prevent further delays, **or** if it should be fixed now.\r\n\r\nATM I'm trying to come up with a simple solution.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/456119940/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/456141794",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-456141794",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
    "id": 456141794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjE0MTc5NA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-21T17:04:07Z",
    "updated_at": "2019-01-21T17:04:07Z",
    "author_association": "MEMBER",
    "body": "@fanquake updated with a WIP version of what could be temporary solution to loading the wallet asynchronously, making the UI usable. @ryanofsky I'd love your feedback here.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/456141794/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/456166501",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-456166501",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
    "id": 456166501,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjE2NjUwMQ==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-21T18:41:07Z",
    "updated_at": "2019-01-21T18:41:07Z",
    "author_association": "MEMBER",
    "body": "I opened a wallet that requires a rescan. The UI doesn't block, which is nice, but there's no indicator anywhere (except the log file). This should probably open the standard rescan modal window. Ideally the cancel button in that case cancels the wallet load.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/456166501/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/456424547",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-456424547",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
    "id": 456424547,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjQyNDU0Nw==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-22T14:44:29Z",
    "updated_at": "2019-01-22T14:48:04Z",
    "author_association": "MEMBER",
    "body": "I don't think the progress bar actually works. Try opening a wallet that's far behind. I also got a crash during or shortly after the rescan, not sure why (I think I canceled the rescan a while before the crash).\r\n\r\nSuggest renaming \"Loading\" to \"Scanning '[wallet name]' for new transactions...\"\r\n\r\nThen add an explanation text below: \"Closing this window may result in recent transactions not appearing in your wallet. To resume scanning for new transactions later, close and then re-open this wallet.\"\r\n\r\nIf not too hard, maybe add a QT test that opens a wallet normally, and one that opens a wallet on a (too far) pruned node.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/456424547/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/456438353",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-456438353",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
    "id": 456438353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjQzODM1Mw==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-22T15:21:20Z",
    "updated_at": "2019-01-22T15:21:20Z",
    "author_association": "MEMBER",
    "body": "Apply the following\r\n```diff\r\n--- a/src/wallet/wallet.cpp\r\n+++ b/src/wallet/wallet.cpp\r\n@@ -1684,6 +1684,8 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const CBlockIndex* const\r\n         }\r\n         double progress_current = progress_begin;\r\n         while (pindex && !fAbortRescan && !ShutdownRequested()) {\r\n+            fAbortRescan = true;\r\n+            MilliSleep(3000);\r\n             if (pindex->nHeight % 100 == 0 && progress_end - progress_begin > 0.0) {\r\n                 ShowProgress(strprintf(\"%s \" + _(\"Rescanning...\"), GetDisplayName()), std::max(1, std::min(99, (int)((progress_current - progress_begin) / (progress_end - progress_begin) * 100))));\r\n             }\r\n```\r\nLaunch the app:\r\n```shell\r\nbitcoin-qt -regtest -rescan -nowallet -debug -printtoconsole\r\n```\r\nThen open a wallet in File->Open Wallet.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/456438353/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/456480831",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-456480831",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
    "id": 456480831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjQ4MDgzMQ==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-22T17:09:02Z",
    "updated_at": "2019-01-22T17:09:02Z",
    "author_association": "MEMBER",
    "body": "Some relevant IRC chat:\r\n<img width=\"1100\" alt=\"schermafbeelding 2019-01-22 om 18 08 43\" src=\"https://user-images.githubusercontent.com/10217/51552389-c8782c00-1e70-11e9-86c5-403373a496d6.png\">\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/456480831/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/458370769",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-458370769",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
    "id": 458370769,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODM3MDc2OQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-29T01:28:35Z",
    "updated_at": "2019-01-29T01:28:35Z",
    "author_association": "MEMBER",
    "body": "Rebased on #15280.\r\n\r\n@Sjors apply\r\n```diff\r\n--- a/src/wallet/wallet.cpp\r\n+++ b/src/wallet/wallet.cpp\r\n@@ -1683,7 +1683,10 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const CBlockIndex* const\r\n             }\r\n         }\r\n         double progress_current = progress_begin;\r\n+        int n = 5;\r\n         while (pindex && !fAbortRescan && !ShutdownRequested()) {\r\n+            MilliSleep(1000);\r\n+            if (n-- == 0) fAbortRescan = true;\r\n             if (pindex->nHeight % 100 == 0 && progress_end - progress_begin > 0.0) {\r\n                 ShowProgress(strprintf(\"%s \" + _(\"Rescanning...\"), GetDisplayName()), std::max(1, std::min(99, (int)((progress_current - progress_begin) / (progress_end - progress_begin) * 100))));\r\n             }\r\n```\r\nthen wallet *File -> Open Wallet -> [default wallet]*. You can also cmd+q right after opening the wallet.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/458370769/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/458698186",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-458698186",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
    "id": 458698186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODY5ODE4Ng==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-29T20:39:06Z",
    "updated_at": "2019-01-29T20:39:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "This looks pretty good.\r\n@promag: can you answer, implement or reject @ryanofsky points and check if the rescan issue @Sjors mentioned?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/458698186/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/458758358",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-458758358",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
    "id": 458758358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODc1ODM1OA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-30T00:06:58Z",
    "updated_at": "2019-01-30T00:06:58Z",
    "author_association": "MEMBER",
    "body": "@Sjors thanks for the review. Sorry those trash messages.. Will improve that case the next push.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/458758358/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459617958",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-459617958",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
    "id": 459617958,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTYxNzk1OA==",
    "user": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-01T06:10:41Z",
    "updated_at": "2019-02-01T06:10:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Tested a bit on OS X (just the basics.) Looks good. :-)\r\n\r\nNit: When there are no more wallets to open, it's weird that clicking \"Open Wallet >\" does nothing. I think it's typical in this situation to either gray out the menu item, OR (better) open a popup with a single greyed out item reading something like \"(No wallets to open)\".",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459617958/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459642366",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-459642366",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
    "id": 459642366,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTY0MjM2Ng==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-01T08:17:40Z",
    "updated_at": "2019-02-01T08:17:40Z",
    "author_association": "MEMBER",
    "body": "> When there are no more wallets to open, it's weird that clicking \"Open Wallet >\" does nothing\r\n\r\n@gwillen another PR adds a fixed action in the menu \"Open Other...\" so that won't be an issue.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459642366/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/460800201",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-460800201",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
    "id": 460800201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDgwMDIwMQ==",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?u=447cdc9e2966cbee415545c8ff452954ee1209af&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-05T20:56:18Z",
    "updated_at": "2019-02-05T20:56:18Z",
    "author_association": "MEMBER",
    "body": "Concept ACK, I agree that we should try hard to get this into 0.18, will review shortly",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/460800201/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/460962533",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-460962533",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
    "id": 460962533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDk2MjUzMw==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-06T09:51:48Z",
    "updated_at": "2019-02-06T09:51:48Z",
    "author_association": "MEMBER",
    "body": "Here's a testnet wallet last synced in December 2017. When you open it it starts a rescan in the background. When you cancel it, that rescan doesn't stop afaik. Weird things then happen if you close QT or try to open another or even the same wallet.\r\n\r\nMaybe just calling abort rescan internally would be the easiest short term fix? Safest would be to make that blocking (so don't close the modal until the cancel is done). \r\n\r\n[old.dat.zip](https://github.com/bitcoin/bitcoin/files/2835697/old.dat.zip)\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/460962533/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/460966026",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-460966026",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
    "id": 460966026,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDk2NjAyNg==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-06T10:02:58Z",
    "updated_at": "2019-02-06T20:09:56Z",
    "author_association": "MEMBER",
    "body": "@Sjors can't abort rescan because the rescan happens before getting the wallet instance on the GUI. I plan to work on that next.\r\n\r\nIn more detail, `CWallet::CreateWalletFromFile` is a huge \"atomic\" operation \u2014 among other things it rescans \u2014 and as such it's not possible to abort the rescan.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/460966026/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461306772",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-461306772",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
    "id": 461306772,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTMwNjc3Mg==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-07T06:50:44Z",
    "updated_at": "2019-02-07T06:50:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Tested ACK 1951ea4342db4122032660139248b79a02c574f3\r\n\r\n@Sjors and @MeshCollider can you finalise your review (ack/nack/feedback)? It'd like to merge this asap. Non-Blocking opening and other improvements can be added later.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461306772/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461708784",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-461708784",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
    "id": 461708784,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTcwODc4NA==",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-08T06:53:40Z",
    "updated_at": "2019-02-08T06:53:40Z",
    "author_association": "MEMBER",
    "body": "tACK 1951ea4 on top of master (b9b26d9) on macOS 10.14.3\r\n\r\nTested basic loading/unloading opening wallets with the new menu (using regtest):\r\n\r\n`bitcoin-qt` with the default wallet loaded.\r\n![open-menu only default wallet](https://user-images.githubusercontent.com/863730/52461959-25335080-2bac-11e9-845f-e5019318a309.png)\r\n\r\n`src/bitcoin-cli -regtest createwallet example`\r\n\r\n![createwallet example](https://user-images.githubusercontent.com/863730/52461969-31b7a900-2bac-11e9-8c88-3d6d630d3ee3.png)\r\n\r\n`src/bitcoin-cli -regtest unloadwallet example`\r\n\r\n![after unloadwallet example](https://user-images.githubusercontent.com/863730/52462003-4eec7780-2bac-11e9-84cf-b50b48e7eba2.png)\r\n\r\nWhen loading the example wallet through the `Open` menu, there is a flash of the rescan/load dialogue (because the load/rescan is fast). \r\nIn future maybe this could be cleaned up somehow?, because the flashing modals could end up being confusing.\r\n\r\nAlso tested using mainnet, with wallets that would have long rescan times:\r\n\r\n```\r\nsrc/bitcoin-qt -rescan\r\nsrc/bitcoin-cli createwallet test\r\nsrc/bitcoin-cli -rpcwallet=test importaddress 18cBEMRxXHqzWWCxZNtU91F5sbUNKhL5PX \"lots of tx\" false\r\n```\r\n\r\nWhile a wallet is importing the `Open wallet` menu, and all other operations, are disabled:\r\n\r\n<img width=\"522\" alt=\"menu disabled during importing\" src=\"https://user-images.githubusercontent.com/863730/52462636-d804ae00-2bae-11e9-91a1-fd879aa663e2.png\">\r\n\r\nHowever, you can currently close the importing modal, then open the same wallet again, which results in the wallet opening (from the first open), the second opening will obviously fail:\r\n\r\n<img width=\"446\" alt=\"duplicate wallet loading\" src=\"https://user-images.githubusercontent.com/863730/52463206-071c1f00-2bb1-11e9-96e5-39dad321a575.png\">\r\n\r\nIn future this could be cleaned up, so that if you close the modal, the wallet that is being imported isn't still available in the Open menu.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461708784/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461746856",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-461746856",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
    "id": 461746856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTc0Njg1Ng==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-08T09:46:24Z",
    "updated_at": "2019-02-08T09:47:07Z",
    "author_association": "MEMBER",
    "body": "I can't reason about the things that might go wrong when a wallet keeps rescanning after a user cancels the load action. I fully expect users to just keep trying to open the same wallet, while that rescan is still going. Can it lead to data loss? Crashes? \r\n\r\nIf others think it's perfectly safe than do say so... But otherwise, fixing it later would block 0.18 release.\r\n\r\nHere's a few ideas:\r\n1. Put a warning text in the dialog like \"Please wait. Don't close this dialog.\"\r\n2. Prevent closing the dialog (quitting QT should still work)\r\n3. Shut down QT if the user closes the dialog",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461746856/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461816428",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-461816428",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
    "id": 461816428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTgxNjQyOA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-08T14:16:57Z",
    "updated_at": "2019-02-08T14:16:57Z",
    "author_association": "MEMBER",
    "body": "> while that rescan is still going. Can it lead to data loss? Crashes?\r\n\r\nThe same concerns are valid for `loadwallet` RPC. This PR doesn't make it worse IMO. The UX can be improved for sure!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461816428/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/462142640",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-462142640",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
    "id": 462142640,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjE0MjY0MA==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-10T15:37:06Z",
    "updated_at": "2019-02-10T15:37:14Z",
    "author_association": "MEMBER",
    "body": "@promag RPC users are usually far more technically sophisticated than GUI users. In particular, I expect them to be more aware of the risk of data corruption.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/462142640/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/462161354",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-462161354",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
    "id": 462161354,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjE2MTM1NA==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-10T19:01:54Z",
    "updated_at": "2019-02-10T19:01:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the rescan/dialog situation can be improved later... let's try to get this in and make progress. I see both points (RPC/Console `loadwallet` has the same flaw as well as the GUI should do more hand-holding).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/462161354/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/462913670",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-462913670",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
    "id": 462913670,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjkxMzY3MA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-12T20:05:57Z",
    "updated_at": "2019-02-12T20:05:57Z",
    "author_association": "MEMBER",
    "body": "I'll follow up improvements right after 0.18 branch.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/462913670/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463329877",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-463329877",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15153",
    "id": 463329877,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzMyOTg3Nw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-13T19:17:42Z",
    "updated_at": "2019-02-13T19:17:42Z",
    "author_association": "MEMBER",
    "body": "tested ACK 1951ea4342db4122032660139248b79a02c574f3. Glad to see this make it for 0.18!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463329877/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247490579",
    "pull_request_review_id": 192149970,
    "id": 247490579,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzQ5MDU3OQ==",
    "diff_hunk": "@@ -0,0 +1,110 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <qt/walletcontroller.h>\n+\n+#include <interfaces/handler.h>\n+#include <interfaces/node.h>\n+#include <QMutexLocker>\n+#include <QThread>\n+\n+WalletController::WalletController(interfaces::Node& node, const PlatformStyle* platform_style, OptionsModel* options_model, QObject* parent)\n+    : QObject(parent)\n+    , m_node(node)\n+    , m_platform_style(platform_style)\n+    , m_options_model(options_model)\n+{\n+    m_handler_load_wallet = m_node.handleLoadWallet([this](std::unique_ptr<interfaces::Wallet> wallet) {\n+        getOrCreateModel(std::move(wallet));\n+    });\n+\n+    for (auto& wallet : m_node.getWallets()) {\n+        getOrCreateModel(std::move(wallet));\n+    }\n+}\n+\n+// Not using the default destructor because not all member types definitions are\n+// available in the header, just forward declared.\n+WalletController::~WalletController() {}\n+\n+std::vector<WalletModel*> WalletController::getWalletModels() const\n+{\n+    QMutexLocker locker(&m_mutex);\n+    std::vector<WalletModel*> wallet_models;\n+    wallet_models.reserve(m_wallet_models.size());\n+    for (auto it : m_wallet_models) {\n+        wallet_models.push_back(it.second);\n+    }\n+    return wallet_models;\n+}\n+\n+std::vector<std::string> WalletController::getWalletsAvailableToLoad() const\n+{\n+    QMutexLocker locker(&m_mutex);\n+    std::vector<std::string> wallets;\n+    std::set<std::string> loaded;\n+    for (const std::string& name : m_node.listWalletDir()) {\n+        if (m_wallet_models.count(name) == 0) wallets.push_back(name);\n+    }\n+    return wallets;\n+}\n+\n+WalletModel* WalletController::loadWallet(const std::string& path)\n+{\n+    std::string error, warning;\n+    WalletModel* wallet_model = getOrCreateModel(m_node.loadWallet(path, error, warning));\n+    if (!wallet_model) {\n+        //QMessageBox::information(this, tr(\"Open Wallet\"), QString::fromStdString(error));\n+        return nullptr;\n+    }\n+    if (!warning.empty()) {\n+        //QMessageBox::information(this, tr(\"Open Wallet\"), QString::fromStdString(warning));\n+    }\n+    return wallet_model;\n+}\n+\n+WalletModel* WalletController::getOrCreateModel(std::unique_ptr<interfaces::Wallet> wallet)\n+{\n+    QMutexLocker locker(&m_mutex);\n+\n+    // Check if model instance already exists.\n+    auto name = wallet->getWalletName();\n+    auto it = m_wallet_models.find(name);\n+    if (it != m_wallet_models.end()) return it->second;\n+\n+    // Instantiate model and register it.\n+    WalletModel* wallet_model = new WalletModel(std::move(wallet), m_node, m_platform_style, m_options_model, nullptr);\n+    it = m_wallet_models.emplace(name, wallet_model).first;\n+\n+    connect(wallet_model, &WalletModel::unload, [this, it, wallet_model] {\n+        // Unregister wallet model and update current if necessary.\n+        {\n+            QMutexLocker locker(&m_mutex);",
    "path": "src/qt/walletcontroller.cpp",
    "position": null,
    "original_position": 83,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "cc906b3aa15ea2c60f2a04fa7f8887568896c122",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Avoid shadowing `locker` in the outer scope :-)",
    "created_at": "2019-01-14T13:28:14Z",
    "updated_at": "2019-02-04T12:24:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r247490579",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247490579"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r247490579"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247490579/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 83,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247491317",
    "pull_request_review_id": 192149970,
    "id": 247491317,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzQ5MTMxNw==",
    "diff_hunk": "@@ -0,0 +1,110 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <qt/walletcontroller.h>\n+\n+#include <interfaces/handler.h>\n+#include <interfaces/node.h>\n+#include <QMutexLocker>\n+#include <QThread>\n+\n+WalletController::WalletController(interfaces::Node& node, const PlatformStyle* platform_style, OptionsModel* options_model, QObject* parent)\n+    : QObject(parent)\n+    , m_node(node)\n+    , m_platform_style(platform_style)\n+    , m_options_model(options_model)\n+{\n+    m_handler_load_wallet = m_node.handleLoadWallet([this](std::unique_ptr<interfaces::Wallet> wallet) {\n+        getOrCreateModel(std::move(wallet));\n+    });\n+\n+    for (auto& wallet : m_node.getWallets()) {\n+        getOrCreateModel(std::move(wallet));\n+    }\n+}\n+\n+// Not using the default destructor because not all member types definitions are\n+// available in the header, just forward declared.\n+WalletController::~WalletController() {}\n+\n+std::vector<WalletModel*> WalletController::getWalletModels() const\n+{\n+    QMutexLocker locker(&m_mutex);\n+    std::vector<WalletModel*> wallet_models;\n+    wallet_models.reserve(m_wallet_models.size());\n+    for (auto it : m_wallet_models) {\n+        wallet_models.push_back(it.second);\n+    }\n+    return wallet_models;\n+}\n+\n+std::vector<std::string> WalletController::getWalletsAvailableToLoad() const\n+{\n+    QMutexLocker locker(&m_mutex);\n+    std::vector<std::string> wallets;\n+    std::set<std::string> loaded;\n+    for (const std::string& name : m_node.listWalletDir()) {\n+        if (m_wallet_models.count(name) == 0) wallets.push_back(name);\n+    }\n+    return wallets;\n+}\n+\n+WalletModel* WalletController::loadWallet(const std::string& path)",
    "path": "src/qt/walletcontroller.cpp",
    "position": null,
    "original_position": 53,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "cc906b3aa15ea2c60f2a04fa7f8887568896c122",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Make sure declaration parameter name matches definition parameter name :-)",
    "created_at": "2019-01-14T13:30:37Z",
    "updated_at": "2019-02-04T12:24:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r247491317",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247491317"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r247491317"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247491317/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 53,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247492039",
    "pull_request_review_id": 192149970,
    "id": 247492039,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzQ5MjAzOQ==",
    "diff_hunk": "@@ -0,0 +1,110 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <qt/walletcontroller.h>\n+\n+#include <interfaces/handler.h>\n+#include <interfaces/node.h>\n+#include <QMutexLocker>\n+#include <QThread>\n+\n+WalletController::WalletController(interfaces::Node& node, const PlatformStyle* platform_style, OptionsModel* options_model, QObject* parent)\n+    : QObject(parent)\n+    , m_node(node)\n+    , m_platform_style(platform_style)\n+    , m_options_model(options_model)\n+{\n+    m_handler_load_wallet = m_node.handleLoadWallet([this](std::unique_ptr<interfaces::Wallet> wallet) {\n+        getOrCreateModel(std::move(wallet));\n+    });\n+\n+    for (auto& wallet : m_node.getWallets()) {\n+        getOrCreateModel(std::move(wallet));\n+    }\n+}\n+\n+// Not using the default destructor because not all member types definitions are\n+// available in the header, just forward declared.\n+WalletController::~WalletController() {}\n+\n+std::vector<WalletModel*> WalletController::getWalletModels() const\n+{\n+    QMutexLocker locker(&m_mutex);\n+    std::vector<WalletModel*> wallet_models;\n+    wallet_models.reserve(m_wallet_models.size());\n+    for (auto it : m_wallet_models) {\n+        wallet_models.push_back(it.second);\n+    }\n+    return wallet_models;\n+}\n+\n+std::vector<std::string> WalletController::getWalletsAvailableToLoad() const\n+{\n+    QMutexLocker locker(&m_mutex);\n+    std::vector<std::string> wallets;\n+    std::set<std::string> loaded;\n+    for (const std::string& name : m_node.listWalletDir()) {\n+        if (m_wallet_models.count(name) == 0) wallets.push_back(name);\n+    }\n+    return wallets;\n+}\n+\n+WalletModel* WalletController::loadWallet(const std::string& path)\n+{\n+    std::string error, warning;\n+    WalletModel* wallet_model = getOrCreateModel(m_node.loadWallet(path, error, warning));\n+    if (!wallet_model) {\n+        //QMessageBox::information(this, tr(\"Open Wallet\"), QString::fromStdString(error));\n+        return nullptr;\n+    }\n+    if (!warning.empty()) {",
    "path": "src/qt/walletcontroller.cpp",
    "position": null,
    "original_position": 61,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "cc906b3aa15ea2c60f2a04fa7f8887568896c122",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Drop this since empty body?",
    "created_at": "2019-01-14T13:33:03Z",
    "updated_at": "2019-02-04T12:24:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r247492039",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247492039"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r247492039"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247492039/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 59,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247492155",
    "pull_request_review_id": 192149970,
    "id": 247492155,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzQ5MjE1NQ==",
    "diff_hunk": "@@ -0,0 +1,110 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <qt/walletcontroller.h>\n+\n+#include <interfaces/handler.h>\n+#include <interfaces/node.h>\n+#include <QMutexLocker>\n+#include <QThread>\n+\n+WalletController::WalletController(interfaces::Node& node, const PlatformStyle* platform_style, OptionsModel* options_model, QObject* parent)\n+    : QObject(parent)\n+    , m_node(node)\n+    , m_platform_style(platform_style)\n+    , m_options_model(options_model)\n+{\n+    m_handler_load_wallet = m_node.handleLoadWallet([this](std::unique_ptr<interfaces::Wallet> wallet) {\n+        getOrCreateModel(std::move(wallet));\n+    });\n+\n+    for (auto& wallet : m_node.getWallets()) {\n+        getOrCreateModel(std::move(wallet));\n+    }\n+}\n+\n+// Not using the default destructor because not all member types definitions are\n+// available in the header, just forward declared.\n+WalletController::~WalletController() {}\n+\n+std::vector<WalletModel*> WalletController::getWalletModels() const\n+{\n+    QMutexLocker locker(&m_mutex);\n+    std::vector<WalletModel*> wallet_models;\n+    wallet_models.reserve(m_wallet_models.size());\n+    for (auto it : m_wallet_models) {\n+        wallet_models.push_back(it.second);\n+    }\n+    return wallet_models;\n+}\n+\n+std::vector<std::string> WalletController::getWalletsAvailableToLoad() const\n+{\n+    QMutexLocker locker(&m_mutex);\n+    std::vector<std::string> wallets;\n+    std::set<std::string> loaded;",
    "path": "src/qt/walletcontroller.cpp",
    "position": null,
    "original_position": 46,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "cc906b3aa15ea2c60f2a04fa7f8887568896c122",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Unused? Please drop :-)",
    "created_at": "2019-01-14T13:33:29Z",
    "updated_at": "2019-02-04T12:24:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r247492155",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247492155"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r247492155"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247492155/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 46,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247493216",
    "pull_request_review_id": 192153484,
    "id": 247493216,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzQ5MzIxNg==",
    "diff_hunk": "@@ -0,0 +1,110 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <qt/walletcontroller.h>\n+\n+#include <interfaces/handler.h>\n+#include <interfaces/node.h>\n+#include <QMutexLocker>\n+#include <QThread>\n+\n+WalletController::WalletController(interfaces::Node& node, const PlatformStyle* platform_style, OptionsModel* options_model, QObject* parent)\n+    : QObject(parent)\n+    , m_node(node)\n+    , m_platform_style(platform_style)\n+    , m_options_model(options_model)\n+{\n+    m_handler_load_wallet = m_node.handleLoadWallet([this](std::unique_ptr<interfaces::Wallet> wallet) {\n+        getOrCreateModel(std::move(wallet));\n+    });\n+\n+    for (auto& wallet : m_node.getWallets()) {\n+        getOrCreateModel(std::move(wallet));\n+    }\n+}\n+\n+// Not using the default destructor because not all member types definitions are\n+// available in the header, just forward declared.\n+WalletController::~WalletController() {}\n+\n+std::vector<WalletModel*> WalletController::getWalletModels() const\n+{\n+    QMutexLocker locker(&m_mutex);\n+    std::vector<WalletModel*> wallet_models;\n+    wallet_models.reserve(m_wallet_models.size());\n+    for (auto it : m_wallet_models) {\n+        wallet_models.push_back(it.second);\n+    }\n+    return wallet_models;\n+}\n+\n+std::vector<std::string> WalletController::getWalletsAvailableToLoad() const\n+{\n+    QMutexLocker locker(&m_mutex);\n+    std::vector<std::string> wallets;\n+    std::set<std::string> loaded;\n+    for (const std::string& name : m_node.listWalletDir()) {\n+        if (m_wallet_models.count(name) == 0) wallets.push_back(name);\n+    }\n+    return wallets;\n+}\n+\n+WalletModel* WalletController::loadWallet(const std::string& path)\n+{\n+    std::string error, warning;\n+    WalletModel* wallet_model = getOrCreateModel(m_node.loadWallet(path, error, warning));\n+    if (!wallet_model) {\n+        //QMessageBox::information(this, tr(\"Open Wallet\"), QString::fromStdString(error));\n+        return nullptr;\n+    }\n+    if (!warning.empty()) {\n+        //QMessageBox::information(this, tr(\"Open Wallet\"), QString::fromStdString(warning));\n+    }\n+    return wallet_model;\n+}\n+\n+WalletModel* WalletController::getOrCreateModel(std::unique_ptr<interfaces::Wallet> wallet)\n+{\n+    QMutexLocker locker(&m_mutex);\n+\n+    // Check if model instance already exists.\n+    auto name = wallet->getWalletName();\n+    auto it = m_wallet_models.find(name);\n+    if (it != m_wallet_models.end()) return it->second;\n+\n+    // Instantiate model and register it.\n+    WalletModel* wallet_model = new WalletModel(std::move(wallet), m_node, m_platform_style, m_options_model, nullptr);\n+    it = m_wallet_models.emplace(name, wallet_model).first;\n+\n+    connect(wallet_model, &WalletModel::unload, [this, it, wallet_model] {\n+        // Unregister wallet model and update current if necessary.\n+        {\n+            QMutexLocker locker(&m_mutex);",
    "path": "src/qt/walletcontroller.cpp",
    "position": null,
    "original_position": 83,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "cc906b3aa15ea2c60f2a04fa7f8887568896c122",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Not shadowed, the above is not captured.",
    "created_at": "2019-01-14T13:36:48Z",
    "updated_at": "2019-02-04T12:24:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r247493216",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247493216"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r247493216"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247493216/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 83,
    "side": "RIGHT",
    "in_reply_to_id": 247490579
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249851732",
    "pull_request_review_id": 195095973,
    "id": 249851732,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTg1MTczMg==",
    "diff_hunk": "@@ -188,6 +188,9 @@ class Node\n     //! Return interfaces for accessing wallets (if any).\n     virtual std::vector<std::unique_ptr<Wallet>> getWallets() = 0;\n \n+    //! Attempts to load a wallet from file or directory.\n+    virtual std::unique_ptr<Wallet> loadWallet(const std::string& name, std::string& error, std::string& warning) = 0;",
    "path": "src/interfaces/node.h",
    "position": 7,
    "original_position": 5,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "68fbe0d24c5e003498915939e2b4756f59d3423d",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"interfaces: Add loadWallet to Node\" (68fbe0d24c5e003498915939e2b4756f59d3423d)\r\n\r\nComment should specify whether or not this is supposed to trigger the handleLoadWallet notification. It's a bit strange if calling this returns one wallet pointer but leads to a handleLoadWallet event passing a different pointer. It might actually simplify things to have this method just return void and rely on the existing notification.",
    "created_at": "2019-01-22T16:15:02Z",
    "updated_at": "2019-02-04T12:24:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249851732",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249851732"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249851732"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249851732/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 198,
    "original_line": 198,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249868084",
    "pull_request_review_id": 195095973,
    "id": 249868084,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTg2ODA4NA==",
    "diff_hunk": "@@ -244,6 +246,10 @@ class NodeImpl : public Node\n         }\n         return wallets;\n     }\n+    std::unique_ptr<Wallet> loadWallet(const std::string& name, std::string& error, std::string& warning) override\n+    {\n+        return MakeWallet(LoadWallet(*m_interfaces.chain, name, error, warning));",
    "path": "src/interfaces/node.cpp",
    "position": 14,
    "original_position": 22,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "68fbe0d24c5e003498915939e2b4756f59d3423d",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"interfaces: Add loadWallet to Node\" (68fbe0d24c5e003498915939e2b4756f59d3423d)\r\n\r\nTo work with separate wallet / node processes, this would need to change to something like:\r\n\r\n```\r\nauto client = interfaces::MakeWalletClient(*interfaces.chain, {name});\r\nclient->verify();\r\nclient->load();\r\nclient->start();\r\nm_interfaces.chain_clients.emplace_back(std::move(client));\r\n```\r\n\r\nand happen through the wallet init interface to disable & throw when ENABLE_WALLET isn't defined.\r\n\r\nIt shouldn't be hard to get this working, but it could also be done in another PR.",
    "created_at": "2019-01-22T16:50:28Z",
    "updated_at": "2019-02-04T12:24:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249868084",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249868084"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249868084"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249868084/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 258,
    "original_line": 258,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249874897",
    "pull_request_review_id": 195125002,
    "id": 249874897,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTg3NDg5Nw==",
    "diff_hunk": "@@ -370,10 +370,28 @@ void BitcoinGUI::createActions()\n             for (std::string path : m_wallet_controller->getWalletsAvailableToOpen()) {\n                 QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n                 QAction* action = m_open_wallet_action->menu()->addAction(name);\n-                connect(action, &QAction::triggered, [this, path] {\n+                connect(action, &QAction::triggered, [this, name, path] {\n                     OpenWalletActivity* activity = m_wallet_controller->openWallet(path);\n+\n+                    QProgressDialog* dialog = new QProgressDialog(this);\n+                    dialog->setLabelText(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n+                    dialog->setRange(0, 0);\n+                    dialog->setCancelButton(nullptr);",
    "path": "src/qt/bitcoingui.cpp",
    "position": 26,
    "original_position": 11,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "ace950b47a714f4866978d5a7148763c5fc70798",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Shouldn't this cancel the rescan?",
    "created_at": "2019-01-22T17:06:15Z",
    "updated_at": "2019-02-04T12:24:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249874897",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249874897"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249874897"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249874897/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 379,
    "original_line": 379,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249875479",
    "pull_request_review_id": 195125709,
    "id": 249875479,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTg3NTQ3OQ==",
    "diff_hunk": "@@ -370,10 +370,28 @@ void BitcoinGUI::createActions()\n             for (std::string path : m_wallet_controller->getWalletsAvailableToOpen()) {\n                 QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n                 QAction* action = m_open_wallet_action->menu()->addAction(name);\n-                connect(action, &QAction::triggered, [this, path] {\n+                connect(action, &QAction::triggered, [this, name, path] {\n                     OpenWalletActivity* activity = m_wallet_controller->openWallet(path);\n+\n+                    QProgressDialog* dialog = new QProgressDialog(this);\n+                    dialog->setLabelText(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n+                    dialog->setRange(0, 0);\n+                    dialog->setCancelButton(nullptr);\n+                    dialog->setWindowModality(Qt::ApplicationModal);\n+                    dialog->show();\n+\n+                    connect(activity, &OpenWalletActivity::message, this, [this] (QMessageBox::Icon icon, QString text) {\n+                        QMessageBox box;\n+                        box.setIcon(icon);\n+                        box.setText(tr(\"Open Wallet Failed\"));",
    "path": "src/qt/bitcoingui.cpp",
    "position": 33,
    "original_position": 18,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "ace950b47a714f4866978d5a7148763c5fc70798",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "How do I test this condition?",
    "created_at": "2019-01-22T17:07:40Z",
    "updated_at": "2019-02-04T12:24:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249875479",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249875479"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249875479"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249875479/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 386,
    "original_line": 386,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249883667",
    "pull_request_review_id": 195135847,
    "id": 249883667,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTg4MzY2Nw==",
    "diff_hunk": "@@ -370,10 +370,28 @@ void BitcoinGUI::createActions()\n             for (std::string path : m_wallet_controller->getWalletsAvailableToOpen()) {\n                 QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n                 QAction* action = m_open_wallet_action->menu()->addAction(name);\n-                connect(action, &QAction::triggered, [this, path] {\n+                connect(action, &QAction::triggered, [this, name, path] {\n                     OpenWalletActivity* activity = m_wallet_controller->openWallet(path);\n+\n+                    QProgressDialog* dialog = new QProgressDialog(this);\n+                    dialog->setLabelText(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n+                    dialog->setRange(0, 0);\n+                    dialog->setCancelButton(nullptr);",
    "path": "src/qt/bitcoingui.cpp",
    "position": 26,
    "original_position": 11,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "ace950b47a714f4866978d5a7148763c5fc70798",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It's not possible at the moment.",
    "created_at": "2019-01-22T17:28:53Z",
    "updated_at": "2019-02-04T12:24:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249883667",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249883667"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249883667"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249883667/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 379,
    "original_line": 379,
    "side": "RIGHT",
    "in_reply_to_id": 249874897
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249891687",
    "pull_request_review_id": 195145791,
    "id": 249891687,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTg5MTY4Nw==",
    "diff_hunk": "@@ -188,6 +188,9 @@ class Node\n     //! Return interfaces for accessing wallets (if any).\n     virtual std::vector<std::unique_ptr<Wallet>> getWallets() = 0;\n \n+    //! Attempts to load a wallet from file or directory.\n+    virtual std::unique_ptr<Wallet> loadWallet(const std::string& name, std::string& error, std::string& warning) = 0;",
    "path": "src/interfaces/node.h",
    "position": 7,
    "original_position": 5,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "68fbe0d24c5e003498915939e2b4756f59d3423d",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Currently `BitcoinGUI::setCurrentWallet` is only called when a wallet is opened with the GUI, not after `handleLoadWallet` notification. For that reason it's returning the wallet interface. Beside, I was under the impression that it's valid to have multiple interface instances to the same underlying wallet/node/etc.",
    "created_at": "2019-01-22T17:50:44Z",
    "updated_at": "2019-02-04T12:24:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249891687",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249891687"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249891687"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249891687/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 198,
    "original_line": 198,
    "side": "RIGHT",
    "in_reply_to_id": 249851732
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249896726",
    "pull_request_review_id": 195151772,
    "id": 249896726,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTg5NjcyNg==",
    "diff_hunk": "@@ -244,6 +246,10 @@ class NodeImpl : public Node\n         }\n         return wallets;\n     }\n+    std::unique_ptr<Wallet> loadWallet(const std::string& name, std::string& error, std::string& warning) override\n+    {\n+        return MakeWallet(LoadWallet(*m_interfaces.chain, name, error, warning));",
    "path": "src/interfaces/node.cpp",
    "position": 14,
    "original_position": 22,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "68fbe0d24c5e003498915939e2b4756f59d3423d",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Care to elaborate? I don't really understand why.",
    "created_at": "2019-01-22T18:03:56Z",
    "updated_at": "2019-02-04T12:24:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249896726",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249896726"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249896726"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249896726/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 258,
    "original_line": 258,
    "side": "RIGHT",
    "in_reply_to_id": 249868084
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249900731",
    "pull_request_review_id": 195156695,
    "id": 249900731,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTkwMDczMQ==",
    "diff_hunk": "@@ -188,6 +188,9 @@ class Node\n     //! Return interfaces for accessing wallets (if any).\n     virtual std::vector<std::unique_ptr<Wallet>> getWallets() = 0;\n \n+    //! Attempts to load a wallet from file or directory.\n+    virtual std::unique_ptr<Wallet> loadWallet(const std::string& name, std::string& error, std::string& warning) = 0;",
    "path": "src/interfaces/node.h",
    "position": 7,
    "original_position": 5,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "68fbe0d24c5e003498915939e2b4756f59d3423d",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> I was under the impression that it's valid to have multiple interface instances to the same underlying wallet/node/etc.\r\n\r\nIt will work, but I assume will cause unnecessary complexity and code duplication, because now there will be two different ways for the GUI to be updated when the wallet is loaded instead of just one. I think ideally this PR would add a new load command but reuse existing mechanisms for attaching new wallets to the GUI.\r\n\r\nWhatever approach you take, I think should be a comment describing how this interacts with the load wallet notification.",
    "created_at": "2019-01-22T18:14:59Z",
    "updated_at": "2019-02-04T12:24:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249900731",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249900731"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249900731"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249900731/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 198,
    "original_line": 198,
    "side": "RIGHT",
    "in_reply_to_id": 249851732
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249903964",
    "pull_request_review_id": 195160721,
    "id": 249903964,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTkwMzk2NA==",
    "diff_hunk": "@@ -244,6 +246,10 @@ class NodeImpl : public Node\n         }\n         return wallets;\n     }\n+    std::unique_ptr<Wallet> loadWallet(const std::string& name, std::string& error, std::string& warning) override\n+    {\n+        return MakeWallet(LoadWallet(*m_interfaces.chain, name, error, warning));",
    "path": "src/interfaces/node.cpp",
    "position": 14,
    "original_position": 22,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "68fbe0d24c5e003498915939e2b4756f59d3423d",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You can try #10102, but that PR creates three new executables: `bitcoin-gui`, `bitcoin-node`, and `bitcoin-wallet`. The current implementation of this method with that PR would try to invoke wallet code inside the `bitcoin-node` process. My suggested change would start a new `bitcoin-wallet` process and load the wallet from there.",
    "created_at": "2019-01-22T18:23:51Z",
    "updated_at": "2019-02-04T12:24:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249903964",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249903964"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249903964"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249903964/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 258,
    "original_line": 258,
    "side": "RIGHT",
    "in_reply_to_id": 249868084
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249904479",
    "pull_request_review_id": 195161369,
    "id": 249904479,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTkwNDQ3OQ==",
    "diff_hunk": "@@ -370,10 +370,28 @@ void BitcoinGUI::createActions()\n             for (std::string path : m_wallet_controller->getWalletsAvailableToOpen()) {\n                 QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n                 QAction* action = m_open_wallet_action->menu()->addAction(name);\n-                connect(action, &QAction::triggered, [this, path] {\n+                connect(action, &QAction::triggered, [this, name, path] {\n                     OpenWalletActivity* activity = m_wallet_controller->openWallet(path);\n+\n+                    QProgressDialog* dialog = new QProgressDialog(this);\n+                    dialog->setLabelText(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n+                    dialog->setRange(0, 0);\n+                    dialog->setCancelButton(nullptr);",
    "path": "src/qt/bitcoingui.cpp",
    "position": 26,
    "original_position": 11,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "ace950b47a714f4866978d5a7148763c5fc70798",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ok, but then I probably shouldn't be able to close the dialog either? At least not without a warning that rescan will continue (and wallet won't show up until that's done).",
    "created_at": "2019-01-22T18:25:15Z",
    "updated_at": "2019-02-04T12:24:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249904479",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249904479"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249904479"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249904479/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 379,
    "original_line": 379,
    "side": "RIGHT",
    "in_reply_to_id": 249874897
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249906307",
    "pull_request_review_id": 195163558,
    "id": 249906307,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTkwNjMwNw==",
    "diff_hunk": "@@ -370,10 +370,28 @@ void BitcoinGUI::createActions()\n             for (std::string path : m_wallet_controller->getWalletsAvailableToOpen()) {\n                 QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n                 QAction* action = m_open_wallet_action->menu()->addAction(name);\n-                connect(action, &QAction::triggered, [this, path] {\n+                connect(action, &QAction::triggered, [this, name, path] {\n                     OpenWalletActivity* activity = m_wallet_controller->openWallet(path);\n+\n+                    QProgressDialog* dialog = new QProgressDialog(this);\n+                    dialog->setLabelText(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n+                    dialog->setRange(0, 0);\n+                    dialog->setCancelButton(nullptr);",
    "path": "src/qt/bitcoingui.cpp",
    "position": 26,
    "original_position": 11,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "ace950b47a714f4866978d5a7148763c5fc70798",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think we should keep this simple, maybe remove `setWindowModality(Qt::ApplicationModal)` and improve later.",
    "created_at": "2019-01-22T18:30:16Z",
    "updated_at": "2019-02-04T12:24:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249906307",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249906307"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249906307"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249906307/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 379,
    "original_line": 379,
    "side": "RIGHT",
    "in_reply_to_id": 249874897
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251917922",
    "pull_request_review_id": 197660847,
    "id": 251917922,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTkxNzkyMg==",
    "diff_hunk": "@@ -124,3 +119,26 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     // CWallet shared pointer.\n     delete wallet_model;\n }\n+\n+\n+OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n+    : m_wallet_controller(wallet_controller)\n+    , m_name(name)\n+{}\n+\n+void OpenWalletActivity::open()\n+{\n+    std::string error, warning;\n+    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n+    if (!warning.empty()) {\n+        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n+    }\n+    if (wallet) {\n+        printf(\"wallet loaeded!\\n\");",
    "path": "src/qt/walletcontroller.cpp",
    "position": null,
    "original_position": 42,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "58366f6edbdd6ef2714ee08aac831ade50d87bdd",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: don't forget to remove (or at least fix typo)",
    "created_at": "2019-01-29T16:44:42Z",
    "updated_at": "2019-02-04T12:24:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r251917922",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251917922"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r251917922"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251917922/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 137,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252069110",
    "pull_request_review_id": 197847187,
    "id": 252069110,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjA2OTExMA==",
    "diff_hunk": "@@ -188,6 +188,9 @@ class Node\n     //! Return interfaces for accessing wallets (if any).\n     virtual std::vector<std::unique_ptr<Wallet>> getWallets() = 0;\n \n+    //! Attempts to load a wallet from file or directory.\n+    virtual std::unique_ptr<Wallet> loadWallet(const std::string& name, std::string& error, std::string& warning) = 0;",
    "path": "src/interfaces/node.h",
    "position": 7,
    "original_position": 5,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "68fbe0d24c5e003498915939e2b4756f59d3423d",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> now there will be two different ways for the GUI to be updated when the wallet is loaded instead of just one\r\n\r\nI think the current approach makes sense (as in `wallet = loadwallet(...)`) in the same way Qt has `QFileDialog::getOpenFileName` \u2014 the implementation is not ideal but some refactors are needed to make this better which I intend to work on.\r\n\r\nI'll add comments in the next push.",
    "created_at": "2019-01-30T00:00:26Z",
    "updated_at": "2019-02-04T12:24:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252069110",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252069110"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252069110"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252069110/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 198,
    "original_line": 198,
    "side": "RIGHT",
    "in_reply_to_id": 249851732
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252070061",
    "pull_request_review_id": 197848298,
    "id": 252070061,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjA3MDA2MQ==",
    "diff_hunk": "@@ -244,6 +246,10 @@ class NodeImpl : public Node\n         }\n         return wallets;\n     }\n+    std::unique_ptr<Wallet> loadWallet(const std::string& name, std::string& error, std::string& warning) override\n+    {\n+        return MakeWallet(LoadWallet(*m_interfaces.chain, name, error, warning));",
    "path": "src/interfaces/node.cpp",
    "position": 14,
    "original_position": 22,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "68fbe0d24c5e003498915939e2b4756f59d3423d",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks, I still have to go there (multi process) so I'll defer this.",
    "created_at": "2019-01-30T00:04:45Z",
    "updated_at": "2019-02-04T12:24:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252070061",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252070061"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252070061"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252070061/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 258,
    "original_line": 258,
    "side": "RIGHT",
    "in_reply_to_id": 249868084
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252156447",
    "pull_request_review_id": 197952826,
    "id": 252156447,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjE1NjQ0Nw==",
    "diff_hunk": "@@ -29,6 +29,7 @@\n #include <ui_interface.h>\n #include <util/system.h>\n #include <validation.h>\n+#include <wallet/walletutil.h>",
    "path": "src/interfaces/node.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "964fe494a68c06490fba2e27ad924a4f67b6ae5f",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This makes these redeclarations:\r\nhttps://github.com/bitcoin/bitcoin/blob/964fe494a68c06490fba2e27ad924a4f67b6ae5f/src/interfaces/node.cpp#L43-L44\r\nredundant.",
    "created_at": "2019-01-30T08:32:27Z",
    "updated_at": "2019-02-04T12:24:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252156447",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252156447"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252156447"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252156447/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 32,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252170501",
    "pull_request_review_id": 197969729,
    "id": 252170501,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjE3MDUwMQ==",
    "diff_hunk": "@@ -2491,6 +2491,8 @@ static UniValue listwallets(const JSONRPCRequest& request)\n     return obj;\n }\n \n+std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const WalletLocation& location, std::string& error, std::string& warning);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "964fe494a68c06490fba2e27ad924a4f67b6ae5f",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It seems a redundant redeclaration. Could be removed.",
    "created_at": "2019-01-30T09:16:27Z",
    "updated_at": "2019-02-04T12:24:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252170501",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252170501"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252170501"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252170501/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2523,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252545542",
    "pull_request_review_id": 198435915,
    "id": 252545542,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjU0NTU0Mg==",
    "diff_hunk": "@@ -514,7 +514,7 @@ class WalletClientImpl : public ChainClient\n \n } // namespace\n \n-std::unique_ptr<Wallet> MakeWallet(const std::shared_ptr<CWallet>& wallet) { return MakeUnique<WalletImpl>(wallet); }\n+std::unique_ptr<Wallet> MakeWallet(const std::shared_ptr<CWallet>& wallet) { return wallet ? MakeUnique<WalletImpl>(wallet) : nullptr; }",
    "path": "src/interfaces/wallet.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "964fe494a68c06490fba2e27ad924a4f67b6ae5f",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think just returning `MakeUnique<WalletImpl>(wallet)` here works even if `!wallet`, no?",
    "created_at": "2019-01-31T06:12:07Z",
    "updated_at": "2019-02-04T12:24:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252545542",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252545542"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252545542"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252545542/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 526,
    "original_line": 526,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252547104",
    "pull_request_review_id": 198435915,
    "id": 252547104,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjU0NzEwNA==",
    "diff_hunk": "@@ -25,18 +26,43 @@ WalletController::WalletController(interfaces::Node& node, const PlatformStyle*\n     for (std::unique_ptr<interfaces::Wallet>& wallet : m_node.getWallets()) {\n         getOrCreateWallet(std::move(wallet));\n     }\n+\n+    m_activity_thread.start();\n }\n \n // Not using the default destructor because not all member types definitions are\n // available in the header, just forward declared.\n-WalletController::~WalletController() {}\n+WalletController::~WalletController()\n+{\n+    m_activity_thread.quit();\n+    m_activity_thread.wait();",
    "path": "src/qt/walletcontroller.cpp",
    "position": 22,
    "original_position": 22,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "964fe494a68c06490fba2e27ad924a4f67b6ae5f",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe I'm missing something subtle, but it looks like you also need to `requestInterruption` before `wait`ing:\r\n```suggestion\r\n#if QT_VERSION >= QT_VERSION_CHECK(5,2,0)\r\n    m_activity_thread.requestInterruption();\r\n#endif\r\n    m_activity_thread.wait();\r\n```\r\n(from https://stackoverflow.com/questions/25224575/how-to-safely-destruct-a-qthread)\r\n",
    "created_at": "2019-01-31T06:22:00Z",
    "updated_at": "2019-02-04T12:24:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252547104",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252547104"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252547104"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252547104/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 38,
    "original_line": 38,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252567428",
    "pull_request_review_id": 198464011,
    "id": 252567428,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjU2NzQyOA==",
    "diff_hunk": "@@ -514,7 +514,7 @@ class WalletClientImpl : public ChainClient\n \n } // namespace\n \n-std::unique_ptr<Wallet> MakeWallet(const std::shared_ptr<CWallet>& wallet) { return MakeUnique<WalletImpl>(wallet); }\n+std::unique_ptr<Wallet> MakeWallet(const std::shared_ptr<CWallet>& wallet) { return wallet ? MakeUnique<WalletImpl>(wallet) : nullptr; }",
    "path": "src/interfaces/wallet.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "964fe494a68c06490fba2e27ad924a4f67b6ae5f",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I may have to withdraw this suggestion. I was looking at \r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/cb77dc820f1bc1965a9d40759feb201d7869cfa9/src/wallet/db.h#L140-L150\r\n\r\nwhich may croak on a null value as opposed to an empty one.",
    "created_at": "2019-01-31T08:10:17Z",
    "updated_at": "2019-02-04T12:24:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252567428",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252567428"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252567428"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252567428/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 526,
    "original_line": 526,
    "side": "RIGHT",
    "in_reply_to_id": 252545542
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252567862",
    "pull_request_review_id": 198464584,
    "id": 252567862,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjU2Nzg2Mg==",
    "diff_hunk": "@@ -514,7 +514,7 @@ class WalletClientImpl : public ChainClient\n \n } // namespace\n \n-std::unique_ptr<Wallet> MakeWallet(const std::shared_ptr<CWallet>& wallet) { return MakeUnique<WalletImpl>(wallet); }\n+std::unique_ptr<Wallet> MakeWallet(const std::shared_ptr<CWallet>& wallet) { return wallet ? MakeUnique<WalletImpl>(wallet) : nullptr; }",
    "path": "src/interfaces/wallet.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "964fe494a68c06490fba2e27ad924a4f67b6ae5f",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Exactly, thanks anyway.",
    "created_at": "2019-01-31T08:12:19Z",
    "updated_at": "2019-02-04T12:24:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252567862",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252567862"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252567862"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252567862/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 526,
    "original_line": 526,
    "side": "RIGHT",
    "in_reply_to_id": 252545542
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252799288",
    "pull_request_review_id": 198762177,
    "id": 252799288,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1Mjc5OTI4OA==",
    "diff_hunk": "@@ -25,18 +26,43 @@ WalletController::WalletController(interfaces::Node& node, const PlatformStyle*\n     for (std::unique_ptr<interfaces::Wallet>& wallet : m_node.getWallets()) {\n         getOrCreateWallet(std::move(wallet));\n     }\n+\n+    m_activity_thread.start();\n }\n \n // Not using the default destructor because not all member types definitions are\n // available in the header, just forward declared.\n-WalletController::~WalletController() {}\n+WalletController::~WalletController()\n+{\n+    m_activity_thread.quit();\n+    m_activity_thread.wait();",
    "path": "src/qt/walletcontroller.cpp",
    "position": 22,
    "original_position": 22,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "964fe494a68c06490fba2e27ad924a4f67b6ae5f",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@kallewoof that's when you reimplement `QThread::run` in a sub class. It's not necessary when you use the even loop.",
    "created_at": "2019-01-31T19:06:05Z",
    "updated_at": "2019-02-04T12:24:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252799288",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252799288"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252799288"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252799288/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 38,
    "original_line": 38,
    "side": "RIGHT",
    "in_reply_to_id": 252547104
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252944587",
    "pull_request_review_id": 198940058,
    "id": 252944587,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1Mjk0NDU4Nw==",
    "diff_hunk": "@@ -361,6 +365,37 @@ void BitcoinGUI::createActions()\n         connect(usedSendingAddressesAction, &QAction::triggered, walletFrame, &WalletFrame::usedSendingAddresses);\n         connect(usedReceivingAddressesAction, &QAction::triggered, walletFrame, &WalletFrame::usedReceivingAddresses);\n         connect(openAction, &QAction::triggered, this, &BitcoinGUI::openClicked);\n+        connect(m_open_wallet_action->menu(), &QMenu::aboutToShow, [this] {",
    "path": "src/qt/bitcoingui.cpp",
    "position": 15,
    "original_position": 15,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "964fe494a68c06490fba2e27ad924a4f67b6ae5f",
    "user": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should probably create another method or two, rather than stuffing this all into a lambda?",
    "created_at": "2019-02-01T06:25:37Z",
    "updated_at": "2019-02-04T12:24:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252944587",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252944587"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252944587"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252944587/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 368,
    "original_line": 368,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252963397",
    "pull_request_review_id": 198963159,
    "id": 252963397,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1Mjk2MzM5Nw==",
    "diff_hunk": "@@ -361,6 +365,37 @@ void BitcoinGUI::createActions()\n         connect(usedSendingAddressesAction, &QAction::triggered, walletFrame, &WalletFrame::usedSendingAddresses);\n         connect(usedReceivingAddressesAction, &QAction::triggered, walletFrame, &WalletFrame::usedReceivingAddresses);\n         connect(openAction, &QAction::triggered, this, &BitcoinGUI::openClicked);\n+        connect(m_open_wallet_action->menu(), &QMenu::aboutToShow, [this] {",
    "path": "src/qt/bitcoingui.cpp",
    "position": 15,
    "original_position": 15,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "964fe494a68c06490fba2e27ad924a4f67b6ae5f",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm pretty sure this will go away from this class so I prefer to have it all in one place.",
    "created_at": "2019-02-01T08:14:40Z",
    "updated_at": "2019-02-04T12:24:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252963397",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252963397"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252963397"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252963397/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 368,
    "original_line": 368,
    "side": "RIGHT",
    "in_reply_to_id": 252944587
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253520345",
    "pull_request_review_id": 199651410,
    "id": 253520345,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzUyMDM0NQ==",
    "diff_hunk": "@@ -2491,6 +2491,8 @@ static UniValue listwallets(const JSONRPCRequest& request)\n     return obj;\n }\n \n+std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const WalletLocation& location, std::string& error, std::string& warning);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "964fe494a68c06490fba2e27ad924a4f67b6ae5f",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2019-02-04T15:42:07Z",
    "updated_at": "2019-02-04T15:42:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r253520345",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253520345"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r253520345"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253520345/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2523,
    "side": "RIGHT",
    "in_reply_to_id": 252170501
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253520424",
    "pull_request_review_id": 199651532,
    "id": 253520424,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzUyMDQyNA==",
    "diff_hunk": "@@ -29,6 +29,7 @@\n #include <ui_interface.h>\n #include <util/system.h>\n #include <validation.h>\n+#include <wallet/walletutil.h>",
    "path": "src/interfaces/node.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "964fe494a68c06490fba2e27ad924a4f67b6ae5f",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Removed include.",
    "created_at": "2019-02-04T15:42:19Z",
    "updated_at": "2019-02-04T15:42:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r253520424",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253520424"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r253520424"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253520424/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 32,
    "side": "RIGHT",
    "in_reply_to_id": 252156447
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253520474",
    "pull_request_review_id": 199651614,
    "id": 253520474,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzUyMDQ3NA==",
    "diff_hunk": "@@ -124,3 +119,26 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     // CWallet shared pointer.\n     delete wallet_model;\n }\n+\n+\n+OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n+    : m_wallet_controller(wallet_controller)\n+    , m_name(name)\n+{}\n+\n+void OpenWalletActivity::open()\n+{\n+    std::string error, warning;\n+    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n+    if (!warning.empty()) {\n+        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n+    }\n+    if (wallet) {\n+        printf(\"wallet loaeded!\\n\");",
    "path": "src/qt/walletcontroller.cpp",
    "position": null,
    "original_position": 42,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "58366f6edbdd6ef2714ee08aac831ade50d87bdd",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2019-02-04T15:42:27Z",
    "updated_at": "2019-02-04T15:42:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r253520474",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253520474"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r253520474"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253520474/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 137,
    "side": "RIGHT",
    "in_reply_to_id": 251917922
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253520738",
    "pull_request_review_id": 199651968,
    "id": 253520738,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzUyMDczOA==",
    "diff_hunk": "@@ -188,6 +188,9 @@ class Node\n     //! Return interfaces for accessing wallets (if any).\n     virtual std::vector<std::unique_ptr<Wallet>> getWallets() = 0;\n \n+    //! Attempts to load a wallet from file or directory.\n+    virtual std::unique_ptr<Wallet> loadWallet(const std::string& name, std::string& error, std::string& warning) = 0;",
    "path": "src/interfaces/node.h",
    "position": 7,
    "original_position": 5,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "68fbe0d24c5e003498915939e2b4756f59d3423d",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Added a small comment regarding the notification.",
    "created_at": "2019-02-04T15:43:03Z",
    "updated_at": "2019-02-04T15:43:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r253520738",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253520738"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r253520738"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253520738/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 198,
    "original_line": 198,
    "side": "RIGHT",
    "in_reply_to_id": 249851732
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255111365",
    "pull_request_review_id": 201627367,
    "id": 255111365,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTExMTM2NQ==",
    "diff_hunk": "@@ -2556,18 +2555,9 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n         }\n     }\n \n-    std::string warning;\n-    if (!CWallet::Verify(*g_rpc_interfaces->chain, location, false, error, warning)) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet file verification failed: \" + error);\n-    }\n-\n-    std::shared_ptr<CWallet> const wallet = CWallet::CreateWalletFromFile(*g_rpc_interfaces->chain, location);\n-    if (!wallet) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet loading failed.\");\n-    }\n-    AddWallet(wallet);\n-\n-    wallet->postInitProcess();\n+    std::string error, warning;\n+    std::shared_ptr<CWallet> const wallet = LoadWallet(*g_rpc_interfaces->chain, location, error, warning);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 25,
    "original_position": 25,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why isn't the file existence checking above also moved to `LoadWallet()`? If I call `LoadWallet()` with a filename that doesn't exist or doesn't contain a wallet.dat file, `LoadWallet()` will create a new wallet file. I don't think that's desired behaviour.\r\n\r\nI can trigger this by hovering over the 'Open Wallet' menu in qt, then deleting the wallet file in a different terminal, then trying to load the wallet.",
    "created_at": "2019-02-08T15:14:18Z",
    "updated_at": "2019-02-08T15:14:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r255111365",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255111365"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r255111365"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255111365/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2559,
    "original_line": 2559,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255612635",
    "pull_request_review_id": 202237808,
    "id": 255612635,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTYxMjYzNQ==",
    "diff_hunk": "@@ -2556,18 +2555,9 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n         }\n     }\n \n-    std::string warning;\n-    if (!CWallet::Verify(*g_rpc_interfaces->chain, location, false, error, warning)) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet file verification failed: \" + error);\n-    }\n-\n-    std::shared_ptr<CWallet> const wallet = CWallet::CreateWalletFromFile(*g_rpc_interfaces->chain, location);\n-    if (!wallet) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet loading failed.\");\n-    }\n-    AddWallet(wallet);\n-\n-    wallet->postInitProcess();\n+    std::string error, warning;\n+    std::shared_ptr<CWallet> const wallet = LoadWallet(*g_rpc_interfaces->chain, location, error, warning);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 25,
    "original_position": 25,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Correct me if I'm wrong but technically a race would still exist even if the check is moved, it would be hard to trigger it.\r\n\r\nAnyway, in order to move the check to `LoadWallet` I have to somehow map the \"not found error\" to `RPC_WALLET_NOT_FOUND` - at the moment if `LoadWallet` fails the raised error is `RPC_WALLET_ERROR` - so I would have to change the interface.\r\n\r\nDoing what you suggest has the advantage of reducing references to `wallet.dat`:\r\nhttps://github.com/bitcoin/bitcoin/blob/1bc149d05b09d716723d2f091250fab38fd70fc2/src/wallet/rpcwallet.cpp#L2564\r\nAnd leave it just to src/wallet/db.cpp.\r\n\r\nConsidering I'd like to refactor `interfaces::Node::loadWallet` to be asynchronous - to know load progress, to cancel/abort, to know errors/warns - I'll have to change these calls too.\r\n\r\nConsidering the above ACK's I suggest to follow up your and @Sjors improvements.\r\n\r\nWDYT? ",
    "created_at": "2019-02-11T17:29:54Z",
    "updated_at": "2019-02-11T17:29:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r255612635",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255612635"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r255612635"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255612635/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2559,
    "original_line": 2559,
    "side": "RIGHT",
    "in_reply_to_id": 255111365
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256540739",
    "pull_request_review_id": 203389338,
    "id": 256540739,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjU0MDczOQ==",
    "diff_hunk": "@@ -124,3 +119,24 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     // CWallet shared pointer.\n     delete wallet_model;\n }\n+\n+\n+OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n+    : m_wallet_controller(wallet_controller)\n+    , m_name(name)\n+{}\n+\n+void OpenWalletActivity::open()\n+{\n+    std::string error, warning;\n+    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n+    if (!warning.empty()) {\n+        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n+    }\n+    if (wallet) {\n+        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));",
    "path": "src/qt/walletcontroller.cpp",
    "position": 72,
    "original_position": 42,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "8847cdaaaeb45c1ddee89f43ac4b8fafb20e5c0d",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"gui: Add OpenWalletActivity\" (8847cdaaaeb45c1ddee89f43ac4b8fafb20e5c0d)\r\n\r\n@promag, would there there any downsides to deleting this line? It seems redundant and as far as I can tell. Everything seems to works fine without it due to the load wallet event.\r\n\r\nI'm trying to implement my suggestion from https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249868084 (so wallets will be loaded in the bitcoin-wallet processes not inside the bitcoin-node process), and I'd prefer just to have one way to attach a Wallet to the gui, not two different ways.",
    "created_at": "2019-02-13T18:59:36Z",
    "updated_at": "2019-02-13T19:04:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r256540739",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256540739"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r256540739"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256540739/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 137,
    "original_line": 137,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256544113",
    "pull_request_review_id": 203393550,
    "id": 256544113,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjU0NDExMw==",
    "diff_hunk": "@@ -124,3 +119,24 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     // CWallet shared pointer.\n     delete wallet_model;\n }\n+\n+\n+OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n+    : m_wallet_controller(wallet_controller)\n+    , m_name(name)\n+{}\n+\n+void OpenWalletActivity::open()\n+{\n+    std::string error, warning;\n+    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n+    if (!warning.empty()) {\n+        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n+    }\n+    if (wallet) {\n+        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));",
    "path": "src/qt/walletcontroller.cpp",
    "position": 72,
    "original_position": 42,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "8847cdaaaeb45c1ddee89f43ac4b8fafb20e5c0d",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Note that the signal `opened` is connected to the `setCurrentlyWallet` but there is currently a problem there because the wallet view is created after, which needs to be fixed - I was already aware of this.\r\n\r\nI don't think that's a good idea (only use the notification) - suppose you have 2 windows, you open a wallet on each (because the loading is async and doesn't block the GUI) you should see each wallet on the expected window.",
    "created_at": "2019-02-13T19:08:40Z",
    "updated_at": "2019-02-13T19:26:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r256544113",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256544113"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r256544113"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256544113/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 137,
    "original_line": 137,
    "side": "RIGHT",
    "in_reply_to_id": 256540739
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256547651",
    "pull_request_review_id": 203397830,
    "id": 256547651,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjU0NzY1MQ==",
    "diff_hunk": "@@ -2556,18 +2555,9 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n         }\n     }\n \n-    std::string warning;\n-    if (!CWallet::Verify(*g_rpc_interfaces->chain, location, false, error, warning)) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet file verification failed: \" + error);\n-    }\n-\n-    std::shared_ptr<CWallet> const wallet = CWallet::CreateWalletFromFile(*g_rpc_interfaces->chain, location);\n-    if (!wallet) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet loading failed.\");\n-    }\n-    AddWallet(wallet);\n-\n-    wallet->postInitProcess();\n+    std::string error, warning;\n+    std::shared_ptr<CWallet> const wallet = LoadWallet(*g_rpc_interfaces->chain, location, error, warning);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 25,
    "original_position": 25,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> technically a race would still exist even if the check is moved\r\n\r\nYes, you're right. The race is still there, but it's very hard to trigger if the checks are moved into `LoadWallet()`.\r\n\r\nMaybe this is too hacky, but perhaps the error code raised by the RPC could be set based on the error string returned by `LoadWallet()`? Or we could just change the return code in this case to a generic `RPC_WALLET_ERROR`.\r\n\r\nWhatever way we go, I think it's fine to defer changing this to a future PR.",
    "created_at": "2019-02-13T19:16:54Z",
    "updated_at": "2019-02-13T19:16:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r256547651",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256547651"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r256547651"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256547651/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2559,
    "original_line": 2559,
    "side": "RIGHT",
    "in_reply_to_id": 255111365
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256551215",
    "pull_request_review_id": 203402206,
    "id": 256551215,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjU1MTIxNQ==",
    "diff_hunk": "@@ -2556,18 +2555,9 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n         }\n     }\n \n-    std::string warning;\n-    if (!CWallet::Verify(*g_rpc_interfaces->chain, location, false, error, warning)) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet file verification failed: \" + error);\n-    }\n-\n-    std::shared_ptr<CWallet> const wallet = CWallet::CreateWalletFromFile(*g_rpc_interfaces->chain, location);\n-    if (!wallet) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet loading failed.\");\n-    }\n-    AddWallet(wallet);\n-\n-    wallet->postInitProcess();\n+    std::string error, warning;\n+    std::shared_ptr<CWallet> const wallet = LoadWallet(*g_rpc_interfaces->chain, location, error, warning);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 25,
    "original_position": 25,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That's why I think we should just try to open instead of checking before opening - those checks could be removed.",
    "created_at": "2019-02-13T19:25:28Z",
    "updated_at": "2019-02-13T19:25:28Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r256551215",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256551215"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r256551215"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256551215/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2559,
    "original_line": 2559,
    "side": "RIGHT",
    "in_reply_to_id": 255111365
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256552249",
    "pull_request_review_id": 203403438,
    "id": 256552249,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjU1MjI0OQ==",
    "diff_hunk": "@@ -2556,18 +2555,9 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n         }\n     }\n \n-    std::string warning;\n-    if (!CWallet::Verify(*g_rpc_interfaces->chain, location, false, error, warning)) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet file verification failed: \" + error);\n-    }\n-\n-    std::shared_ptr<CWallet> const wallet = CWallet::CreateWalletFromFile(*g_rpc_interfaces->chain, location);\n-    if (!wallet) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet loading failed.\");\n-    }\n-    AddWallet(wallet);\n-\n-    wallet->postInitProcess();\n+    std::string error, warning;\n+    std::shared_ptr<CWallet> const wallet = LoadWallet(*g_rpc_interfaces->chain, location, error, warning);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 25,
    "original_position": 25,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> we should just try to open instead of checking before opening\r\n\r\nSure, as long as 'try to open' doesn't create a new wallet if one isn't there (which I believe is what happens currently).",
    "created_at": "2019-02-13T19:28:02Z",
    "updated_at": "2019-02-13T19:28:02Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r256552249",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256552249"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r256552249"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256552249/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2559,
    "original_line": 2559,
    "side": "RIGHT",
    "in_reply_to_id": 255111365
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256556392",
    "pull_request_review_id": 203408123,
    "id": 256556392,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjU1NjM5Mg==",
    "diff_hunk": "@@ -124,3 +119,24 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     // CWallet shared pointer.\n     delete wallet_model;\n }\n+\n+\n+OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n+    : m_wallet_controller(wallet_controller)\n+    , m_name(name)\n+{}\n+\n+void OpenWalletActivity::open()\n+{\n+    std::string error, warning;\n+    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n+    if (!warning.empty()) {\n+        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n+    }\n+    if (wallet) {\n+        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));",
    "path": "src/qt/walletcontroller.cpp",
    "position": 72,
    "original_position": 42,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "8847cdaaaeb45c1ddee89f43ac4b8fafb20e5c0d",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks, a multi window case is helpful to think about. I know you are working on fixing sync stuff in the gui, but what I would expect when loading a slow wallet is for the window to show \"Loading wallet X...\" right after the user selects the wallet, so the user has some immediate feedback. Then when the loadWallet notification is triggered, the GUI would use the Wallet handle passed with the notification to display actual wallet information. There would be no need for the call which the GUI makes to request loading of the wallet to return a wallet handle.\r\n\r\nIt sounds like this a concern for the future, though. Thanks for answering my immediate question.",
    "created_at": "2019-02-13T19:37:53Z",
    "updated_at": "2019-02-13T19:37:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r256556392",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256556392"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r256556392"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256556392/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 137,
    "original_line": 137,
    "side": "RIGHT",
    "in_reply_to_id": 256540739
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256563455",
    "pull_request_review_id": 203416548,
    "id": 256563455,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjU2MzQ1NQ==",
    "diff_hunk": "@@ -124,3 +119,24 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     // CWallet shared pointer.\n     delete wallet_model;\n }\n+\n+\n+OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n+    : m_wallet_controller(wallet_controller)\n+    , m_name(name)\n+{}\n+\n+void OpenWalletActivity::open()\n+{\n+    std::string error, warning;\n+    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n+    if (!warning.empty()) {\n+        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n+    }\n+    if (wallet) {\n+        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));",
    "path": "src/qt/walletcontroller.cpp",
    "position": 72,
    "original_position": 42,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "8847cdaaaeb45c1ddee89f43ac4b8fafb20e5c0d",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "But how would it know if the notified wallet handle belongs to the wallet opened? Wallet path?",
    "created_at": "2019-02-13T19:55:55Z",
    "updated_at": "2019-02-13T19:56:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r256563455",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256563455"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r256563455"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256563455/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 137,
    "original_line": 137,
    "side": "RIGHT",
    "in_reply_to_id": 256540739
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256577975",
    "pull_request_review_id": 203433523,
    "id": 256577975,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjU3Nzk3NQ==",
    "diff_hunk": "@@ -124,3 +119,24 @@ void WalletController::removeAndDeleteWallet(WalletModel* wallet_model)\n     // CWallet shared pointer.\n     delete wallet_model;\n }\n+\n+\n+OpenWalletActivity::OpenWalletActivity(WalletController* wallet_controller, const std::string& name)\n+    : m_wallet_controller(wallet_controller)\n+    , m_name(name)\n+{}\n+\n+void OpenWalletActivity::open()\n+{\n+    std::string error, warning;\n+    std::unique_ptr<interfaces::Wallet> wallet = m_wallet_controller->m_node.loadWallet(m_name, error, warning);\n+    if (!warning.empty()) {\n+        Q_EMIT message(QMessageBox::Warning, QString::fromStdString(warning));\n+    }\n+    if (wallet) {\n+        Q_EMIT opened(m_wallet_controller->getOrCreateWallet(std::move(wallet)));",
    "path": "src/qt/walletcontroller.cpp",
    "position": 72,
    "original_position": 42,
    "commit_id": "1951ea4342db4122032660139248b79a02c574f3",
    "original_commit_id": "8847cdaaaeb45c1ddee89f43ac4b8fafb20e5c0d",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, I was just thinking wallet name.",
    "created_at": "2019-02-13T20:34:31Z",
    "updated_at": "2019-02-13T20:34:31Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r256577975",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256577975"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15153#discussion_r256577975"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15153"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256577975/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 137,
    "original_line": 137,
    "side": "RIGHT",
    "in_reply_to_id": 256540739
  }
]