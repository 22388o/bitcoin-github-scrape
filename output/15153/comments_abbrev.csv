DrahtBot,2019-01-12T14:01:16Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15204](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15204.html) (gui: Add Open External Wallet action by pro",https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-453749896,453749896,
hebasto,2019-01-13T14:48:20Z,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-453835706,453835706,
Sjors,2019-01-17T16:07:14Z,Concept ACK. Code looks good at first glance; will review once upstream is merged.,https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-455228356,455228356,
promag,2019-01-18T20:37:26Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-455679884,455679884,
fanquake,2019-01-19T03:05:05Z,"Concept ACK.\n\nHow should we handle opening a wallet that requires rescanning/is partialling rescanned? \n\ni.e with 67cdd14  if you start `bitcoin-qt` with `-rescan`, then open a wallet after the GUI has loaded, that wallet will be rescanned, which will block the UI with no output (expect for in `debug.log`).",https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-455744004,455744004,
promag,2019-01-21T15:54:16Z,"@fanquake good point! I wonder if it's reasonable to tackle that later, to prevent further delays, **or** if it should be fixed now.\n\nATM I'm trying to come up with a simple solution.",https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-456119940,456119940,
promag,2019-01-21T17:04:07Z,"@fanquake updated with a WIP version of what could be temporary solution to loading the wallet asynchronously, making the UI usable. @ryanofsky I'd love your feedback here.",https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-456141794,456141794,
Sjors,2019-01-21T18:41:07Z,"I opened a wallet that requires a rescan. The UI doesn't block, which is nice, but there's no indicator anywhere (except the log file). This should probably open the standard rescan modal window. Ideally the cancel button in that case cancels the wallet load.",https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-456166501,456166501,
Sjors,2019-01-22T14:44:29Z,"I don't think the progress bar actually works. Try opening a wallet that's far behind. I also got a crash during or shortly after the rescan, not sure why (I think I canceled the rescan a while before the crash).\n\nSuggest renaming ""Loading"" to ""Scanning '[wallet name]' for new transactions...""\n\nThen add an explanation text below: ""Closing this window may result in recent transactions not a",https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-456424547,456424547,
promag,2019-01-22T15:21:20Z,"Apply the following\n```diff\n--- a/src/wallet/wallet.cpp\n+++ b/src/wallet/wallet.cpp\n@@ -1684,6 +1684,8 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const CBlockIndex* const\n         }\n         double progress_current = progress_begin;\n         while (pindex && !fAbortRescan && !ShutdownRequested()) {\n+            fAbortRescan = true;\n+            MilliSleep(3000);\n",https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-456438353,456438353,
Sjors,2019-01-22T17:09:02Z,"Some relevant IRC chat:\n<img width=""1100"" alt=""schermafbeelding 2019-01-22 om 18 08 43"" src=""https://user-images.githubusercontent.com/10217/51552389-c8782c00-1e70-11e9-86c5-403373a496d6.png"">\n",https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-456480831,456480831,
promag,2019-01-29T01:28:35Z,"Rebased on #15280.\n\n@Sjors apply\n```diff\n--- a/src/wallet/wallet.cpp\n+++ b/src/wallet/wallet.cpp\n@@ -1683,7 +1683,10 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const CBlockIndex* const\n             }\n         }\n         double progress_current = progress_begin;\n+        int n = 5;\n         while (pindex && !fAbortRescan && !ShutdownRequested()) {\n+           ",https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-458370769,458370769,
jonasschnelli,2019-01-29T20:39:06Z,"This looks pretty good.\n@promag: can you answer, implement or reject @ryanofsky points and check if the rescan issue @Sjors mentioned?",https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-458698186,458698186,
promag,2019-01-30T00:06:58Z,@Sjors thanks for the review. Sorry those trash messages.. Will improve that case the next push.,https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-458758358,458758358,
gwillen,2019-02-01T06:10:41Z,"Tested a bit on OS X (just the basics.) Looks good. :-)\n\nNit: When there are no more wallets to open, it's weird that clicking ""Open Wallet >"" does nothing. I think it's typical in this situation to either gray out the menu item, OR (better) open a popup with a single greyed out item reading something like ""(No wallets to open)"".",https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-459617958,459617958,
promag,2019-02-01T08:17:40Z,"> When there are no more wallets to open, it's weird that clicking ""Open Wallet >"" does nothing\n\n@gwillen another PR adds a fixed action in the menu ""Open Other..."" so that won't be an issue.",https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-459642366,459642366,
meshcollider,2019-02-05T20:56:18Z,"Concept ACK, I agree that we should try hard to get this into 0.18, will review shortly",https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-460800201,460800201,
Sjors,2019-02-06T09:51:48Z,"Here's a testnet wallet last synced in December 2017. When you open it it starts a rescan in the background. When you cancel it, that rescan doesn't stop afaik. Weird things then happen if you close QT or try to open another or even the same wallet.\n\nMaybe just calling abort rescan internally would be the easiest short term fix? Safest would be to make that blocking (so don't close the modal u",https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-460962533,460962533,
promag,2019-02-06T10:02:58Z,"@Sjors can't abort rescan because the rescan happens before getting the wallet instance on the GUI. I plan to work on that next.\n\nIn more detail, `CWallet::CreateWalletFromFile` is a huge ""atomic"" operation — among other things it rescans — and as such it's not possible to abort the rescan.",https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-460966026,460966026,
jonasschnelli,2019-02-07T06:50:44Z,"Tested ACK 1951ea4342db4122032660139248b79a02c574f3\n\n@Sjors and @MeshCollider can you finalise your review (ack/nack/feedback)? It'd like to merge this asap. Non-Blocking opening and other improvements can be added later.",https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-461306772,461306772,
fanquake,2019-02-08T06:53:40Z,"tACK 1951ea4 on top of master (b9b26d9) on macOS 10.14.3\n\nTested basic loading/unloading opening wallets with the new menu (using regtest):\n\n`bitcoin-qt` with the default wallet loaded.\n![open-menu only default wallet](https://user-images.githubusercontent.com/863730/52461959-25335080-2bac-11e9-845f-e5019318a309.png)\n\n`src/bitcoin-cli -regtest createwallet example`\n\n![createwalle",https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-461708784,461708784,
Sjors,2019-02-08T09:46:24Z,"I can't reason about the things that might go wrong when a wallet keeps rescanning after a user cancels the load action. I fully expect users to just keep trying to open the same wallet, while that rescan is still going. Can it lead to data loss? Crashes? \n\nIf others think it's perfectly safe than do say so... But otherwise, fixing it later would block 0.18 release.\n\nHere's a few ideas:\n",https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-461746856,461746856,
promag,2019-02-08T14:16:57Z,"> while that rescan is still going. Can it lead to data loss? Crashes?\n\nThe same concerns are valid for `loadwallet` RPC. This PR doesn't make it worse IMO. The UX can be improved for sure!",https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-461816428,461816428,
Sjors,2019-02-10T15:37:06Z,"@promag RPC users are usually far more technically sophisticated than GUI users. In particular, I expect them to be more aware of the risk of data corruption.",https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-462142640,462142640,
jonasschnelli,2019-02-10T19:01:54Z,I think the rescan/dialog situation can be improved later... let's try to get this in and make progress. I see both points (RPC/Console `loadwallet` has the same flaw as well as the GUI should do more hand-holding).,https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-462161354,462161354,
promag,2019-02-12T20:05:57Z,I'll follow up improvements right after 0.18 branch.,https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-462913670,462913670,
jnewbery,2019-02-13T19:17:42Z,tested ACK 1951ea4342db4122032660139248b79a02c574f3. Glad to see this make it for 0.18!,https://github.com/bitcoin/bitcoin/pull/15153#issuecomment-463329877,463329877,
practicalswift,2019-01-14T13:28:14Z,Avoid shadowing `locker` in the outer scope :-),https://github.com/bitcoin/bitcoin/pull/15153#discussion_r247490579,247490579,src/qt/walletcontroller.cpp
practicalswift,2019-01-14T13:30:37Z,Make sure declaration parameter name matches definition parameter name :-),https://github.com/bitcoin/bitcoin/pull/15153#discussion_r247491317,247491317,src/qt/walletcontroller.cpp
practicalswift,2019-01-14T13:33:03Z,Drop this since empty body?,https://github.com/bitcoin/bitcoin/pull/15153#discussion_r247492039,247492039,src/qt/walletcontroller.cpp
practicalswift,2019-01-14T13:33:29Z,Unused? Please drop :-),https://github.com/bitcoin/bitcoin/pull/15153#discussion_r247492155,247492155,src/qt/walletcontroller.cpp
promag,2019-01-14T13:36:48Z,"Not shadowed, the above is not captured.",https://github.com/bitcoin/bitcoin/pull/15153#discussion_r247493216,247493216,src/qt/walletcontroller.cpp
ryanofsky,2019-01-22T16:15:02Z,"In commit ""interfaces: Add loadWallet to Node"" (68fbe0d24c5e003498915939e2b4756f59d3423d)\n\nComment should specify whether or not this is supposed to trigger the handleLoadWallet notification. It's a bit strange if calling this returns one wallet pointer but leads to a handleLoadWallet event passing a different pointer. It might actually simplify things to have this method just return void and ",https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249851732,249851732,src/interfaces/node.h
ryanofsky,2019-01-22T16:50:28Z,"In commit ""interfaces: Add loadWallet to Node"" (68fbe0d24c5e003498915939e2b4756f59d3423d)\n\nTo work with separate wallet / node processes, this would need to change to something like:\n\n```\nauto client = interfaces::MakeWalletClient(*interfaces.chain, {name});\nclient->verify();\nclient->load();\nclient->start();\nm_interfaces.chain_clients.emplace_back(std::move(client));\n```\n\na",https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249868084,249868084,src/interfaces/node.cpp
Sjors,2019-01-22T17:06:15Z,Shouldn't this cancel the rescan?,https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249874897,249874897,src/qt/bitcoingui.cpp
Sjors,2019-01-22T17:07:40Z,How do I test this condition?,https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249875479,249875479,src/qt/bitcoingui.cpp
promag,2019-01-22T17:28:53Z,It's not possible at the moment.,https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249883667,249883667,src/qt/bitcoingui.cpp
promag,2019-01-22T17:50:44Z,"Currently `BitcoinGUI::setCurrentWallet` is only called when a wallet is opened with the GUI, not after `handleLoadWallet` notification. For that reason it's returning the wallet interface. Beside, I was under the impression that it's valid to have multiple interface instances to the same underlying wallet/node/etc.",https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249891687,249891687,src/interfaces/node.h
promag,2019-01-22T18:03:56Z,Care to elaborate? I don't really understand why.,https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249896726,249896726,src/interfaces/node.cpp
ryanofsky,2019-01-22T18:14:59Z,"> I was under the impression that it's valid to have multiple interface instances to the same underlying wallet/node/etc.\n\nIt will work, but I assume will cause unnecessary complexity and code duplication, because now there will be two different ways for the GUI to be updated when the wallet is loaded instead of just one. I think ideally this PR would add a new load command but reuse existing ",https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249900731,249900731,src/interfaces/node.h
ryanofsky,2019-01-22T18:23:51Z,"You can try #10102, but that PR creates three new executables: `bitcoin-gui`, `bitcoin-node`, and `bitcoin-wallet`. The current implementation of this method with that PR would try to invoke wallet code inside the `bitcoin-node` process. My suggested change would start a new `bitcoin-wallet` process and load the wallet from there.",https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249903964,249903964,src/interfaces/node.cpp
Sjors,2019-01-22T18:25:15Z,"Ok, but then I probably shouldn't be able to close the dialog either? At least not without a warning that rescan will continue (and wallet won't show up until that's done).",https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249904479,249904479,src/qt/bitcoingui.cpp
promag,2019-01-22T18:30:16Z,"I think we should keep this simple, maybe remove `setWindowModality(Qt::ApplicationModal)` and improve later.",https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249906307,249906307,src/qt/bitcoingui.cpp
Sjors,2019-01-29T16:44:42Z,Nit: don't forget to remove (or at least fix typo),https://github.com/bitcoin/bitcoin/pull/15153#discussion_r251917922,251917922,src/qt/walletcontroller.cpp
promag,2019-01-30T00:00:26Z,"> now there will be two different ways for the GUI to be updated when the wallet is loaded instead of just one\n\nI think the current approach makes sense (as in `wallet = loadwallet(...)`) in the same way Qt has `QFileDialog::getOpenFileName` — the implementation is not ideal but some refactors are needed to make this better which I intend to work on.\n\nI'll add comments in the next push.",https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252069110,252069110,src/interfaces/node.h
promag,2019-01-30T00:04:45Z,"Thanks, I still have to go there (multi process) so I'll defer this.",https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252070061,252070061,src/interfaces/node.cpp
hebasto,2019-01-30T08:32:27Z,"This makes these redeclarations:\nhttps://github.com/bitcoin/bitcoin/blob/964fe494a68c06490fba2e27ad924a4f67b6ae5f/src/interfaces/node.cpp#L43-L44\nredundant.",https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252156447,252156447,src/interfaces/node.cpp
hebasto,2019-01-30T09:16:27Z,It seems a redundant redeclaration. Could be removed.,https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252170501,252170501,src/wallet/rpcwallet.cpp
kallewoof,2019-01-31T06:12:07Z,"I think just returning `MakeUnique<WalletImpl>(wallet)` here works even if `!wallet`, no?",https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252545542,252545542,src/interfaces/wallet.cpp
kallewoof,2019-01-31T06:22:00Z,"Maybe I'm missing something subtle, but it looks like you also need to `requestInterruption` before `wait`ing:\n```suggestion\n#if QT_VERSION >= QT_VERSION_CHECK(5,2,0)\n    m_activity_thread.requestInterruption();\n#endif\n    m_activity_thread.wait();\n```\n(from https://stackoverflow.com/questions/25224575/how-to-safely-destruct-a-qthread)\n",https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252547104,252547104,src/qt/walletcontroller.cpp
kallewoof,2019-01-31T08:10:17Z,"I may have to withdraw this suggestion. I was looking at \n\nhttps://github.com/bitcoin/bitcoin/blob/cb77dc820f1bc1965a9d40759feb201d7869cfa9/src/wallet/db.h#L140-L150\n\nwhich may croak on a null value as opposed to an empty one.",https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252567428,252567428,src/interfaces/wallet.cpp
promag,2019-01-31T08:12:19Z,"Exactly, thanks anyway.",https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252567862,252567862,src/interfaces/wallet.cpp
promag,2019-01-31T19:06:05Z,@kallewoof that's when you reimplement `QThread::run` in a sub class. It's not necessary when you use the even loop.,https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252799288,252799288,src/qt/walletcontroller.cpp
gwillen,2019-02-01T06:25:37Z,"Should probably create another method or two, rather than stuffing this all into a lambda?",https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252944587,252944587,src/qt/bitcoingui.cpp
promag,2019-02-01T08:14:40Z,I'm pretty sure this will go away from this class so I prefer to have it all in one place.,https://github.com/bitcoin/bitcoin/pull/15153#discussion_r252963397,252963397,src/qt/bitcoingui.cpp
promag,2019-02-04T15:42:07Z,Done.,https://github.com/bitcoin/bitcoin/pull/15153#discussion_r253520345,253520345,src/wallet/rpcwallet.cpp
promag,2019-02-04T15:42:19Z,Removed include.,https://github.com/bitcoin/bitcoin/pull/15153#discussion_r253520424,253520424,src/interfaces/node.cpp
promag,2019-02-04T15:42:27Z,Done.,https://github.com/bitcoin/bitcoin/pull/15153#discussion_r253520474,253520474,src/qt/walletcontroller.cpp
promag,2019-02-04T15:43:03Z,Added a small comment regarding the notification.,https://github.com/bitcoin/bitcoin/pull/15153#discussion_r253520738,253520738,src/interfaces/node.h
jnewbery,2019-02-08T15:14:18Z,"Why isn't the file existence checking above also moved to `LoadWallet()`? If I call `LoadWallet()` with a filename that doesn't exist or doesn't contain a wallet.dat file, `LoadWallet()` will create a new wallet file. I don't think that's desired behaviour.\n\nI can trigger this by hovering over the 'Open Wallet' menu in qt, then deleting the wallet file in a different terminal, then trying to l",https://github.com/bitcoin/bitcoin/pull/15153#discussion_r255111365,255111365,src/wallet/rpcwallet.cpp
promag,2019-02-11T17:29:54Z,"Correct me if I'm wrong but technically a race would still exist even if the check is moved, it would be hard to trigger it.\n\nAnyway, in order to move the check to `LoadWallet` I have to somehow map the ""not found error"" to `RPC_WALLET_NOT_FOUND` - at the moment if `LoadWallet` fails the raised error is `RPC_WALLET_ERROR` - so I would have to change the interface.\n\nDoing what you suggest h",https://github.com/bitcoin/bitcoin/pull/15153#discussion_r255612635,255612635,src/wallet/rpcwallet.cpp
ryanofsky,2019-02-13T18:59:36Z,"In commit ""gui: Add OpenWalletActivity"" (8847cdaaaeb45c1ddee89f43ac4b8fafb20e5c0d)\n\n@promag, would there there any downsides to deleting this line? It seems redundant and as far as I can tell. Everything seems to works fine without it due to the load wallet event.\n\nI'm trying to implement my suggestion from https://github.com/bitcoin/bitcoin/pull/15153#discussion_r249868084 (so wallets wil",https://github.com/bitcoin/bitcoin/pull/15153#discussion_r256540739,256540739,src/qt/walletcontroller.cpp
promag,2019-02-13T19:08:40Z,"Note that the signal `opened` is connected to the `setCurrentlyWallet` but there is currently a problem there because the wallet view is created after, which needs to be fixed - I was already aware of this.\n\nI don't think that's a good idea (only use the notification) - suppose you have 2 windows, you open a wallet on each (because the loading is async and doesn't block the GUI) you should see",https://github.com/bitcoin/bitcoin/pull/15153#discussion_r256544113,256544113,src/qt/walletcontroller.cpp
jnewbery,2019-02-13T19:16:54Z,"> technically a race would still exist even if the check is moved\n\nYes, you're right. The race is still there, but it's very hard to trigger if the checks are moved into `LoadWallet()`.\n\nMaybe this is too hacky, but perhaps the error code raised by the RPC could be set based on the error string returned by `LoadWallet()`? Or we could just change the return code in this case to a generic `R",https://github.com/bitcoin/bitcoin/pull/15153#discussion_r256547651,256547651,src/wallet/rpcwallet.cpp
promag,2019-02-13T19:25:28Z,That's why I think we should just try to open instead of checking before opening - those checks could be removed.,https://github.com/bitcoin/bitcoin/pull/15153#discussion_r256551215,256551215,src/wallet/rpcwallet.cpp
jnewbery,2019-02-13T19:28:02Z,"> we should just try to open instead of checking before opening\n\nSure, as long as 'try to open' doesn't create a new wallet if one isn't there (which I believe is what happens currently).",https://github.com/bitcoin/bitcoin/pull/15153#discussion_r256552249,256552249,src/wallet/rpcwallet.cpp
ryanofsky,2019-02-13T19:37:53Z,"Thanks, a multi window case is helpful to think about. I know you are working on fixing sync stuff in the gui, but what I would expect when loading a slow wallet is for the window to show ""Loading wallet X..."" right after the user selects the wallet, so the user has some immediate feedback. Then when the loadWallet notification is triggered, the GUI would use the Wallet handle passed with the noti",https://github.com/bitcoin/bitcoin/pull/15153#discussion_r256556392,256556392,src/qt/walletcontroller.cpp
promag,2019-02-13T19:55:55Z,But how would it know if the notified wallet handle belongs to the wallet opened? Wallet path?,https://github.com/bitcoin/bitcoin/pull/15153#discussion_r256563455,256563455,src/qt/walletcontroller.cpp
ryanofsky,2019-02-13T20:34:31Z,"Yes, I was just thinking wallet name.",https://github.com/bitcoin/bitcoin/pull/15153#discussion_r256577975,256577975,src/qt/walletcontroller.cpp
