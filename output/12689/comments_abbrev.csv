Sjors,2018-03-14T22:32:28Z,"Concept ACK. Tested on macOS.\n\nNeeds update for `-printtoconsole` help text.",https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-373197138,373197138,
practicalswift,2018-03-14T22:56:01Z,"Strong concept ACK. Very nice usability improvement! I'm also running `bitcoind` in the foreground mode for the most part.\n\nWhat about reducing the number of `\n`:s from 20 to say 5? That should be more than enough to distinguish between to subsequent executions.",https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-373202394,373202394,
donaloconnor,2018-03-14T23:05:38Z,"Just a few concerns (Mainly on Windows)\n\n1. There's now no way of turning the stdout logging off when launched in foreground. It's either on or (on by default) \n2. On Windows output will always be shown now since deamonising isn't possible?. (AFAIK it's not possible to run bitcoind as a windows service?\n3. stdout isn't buffered very well (if at all?) so it can potentially have a perf penal",https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-373204344,373204344,
promag,2018-03-14T23:08:32Z,"Concept ACK, cool :+1:.",https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-373204889,373204889,
eklitzke,2018-03-14T23:22:44Z,"Now that I've thought about this more I don't think the `isatty()` check is necessary. The situation where it wouldn't be a TTY would be if you were running commands like:\n\n```bash\n# stdout is a pipe, not a TTY.\nbitcoind | less\n\n# stdout is a file, not a TTY.\nbitcoind > redundantcopyofdebug.log\n```\n\nI don't think either of these are things people are going to actually run, but ",https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-373207731,373207731,
eklitzke,2018-03-14T23:32:10Z,New version (with squashed commit) removes the `isatty()` check and reduces the number of newlines we print from 20 to 5. I've also updated the PR description to remove the commentary about `isatty()`.,https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-373209436,373209436,
donaloconnor,2018-03-15T00:30:29Z,"My understanding is now logging will not be sent to the *log file* unless -daemon is passed via command line. If that's the case won't this be unexpected and annoying behavior?\n\nLogPrintStr only prints to one or the other.\n\nI'm on the phone so it's difficult to check",https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-373220096,373220096,
luke-jr,2018-03-15T00:40:26Z,"Not sure this makes sense. I don't know of any other software that guesses stdout vs log based on whether stdout is a tty. It seems likely to break users who do `bitcoin-qt &`\n\nWhy not just put `printtoconsole=1` in bitcoin.conf if you prefer it by default?",https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-373221889,373221889,
eklitzke,2018-03-15T01:35:19Z,"@lukejr The code no longer uses `isatty()`, I removed that code. Adding `printtoconsole=1` to `bitcoin.conf` has the side effect that it completely suppresses logging to `debug.log`, which is annoying if sometimes you run bitcoin as a daemon and sometimes you run it in foreground mode.\n\nWe should probably change the `LogPrintf()` logic to log to both if both flags are set. But even in that cas",https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-373230941,373230941,
eklitzke,2018-03-15T01:38:30Z,@donaloconnor I also just noticed that which I think is bad behavior. Updated to make these flags independent (printing to console will not affect logging to debug.log).,https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-373231442,373231442,
practicalswift,2018-03-15T06:46:59Z,utACK 23bc0aaac8d8ac7f2b41527567d6a2329429d172,https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-373277576,373277576,
Sjors,2018-03-15T15:53:42Z,"Tested 23bc0aa on macOS, still works. \n\nRemoving the `isatty()` check makes sense; another example would be using `bitcoind | grep the_thing_I_care_about`.\n\n@luke-jr  `bitcoin-qt` does not output anything to the console (not sure why).",https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-373425990,373425990,
practicalswift,2018-03-15T16:08:37Z,utACK 23bc0aaac8d8ac7f2b41527567d6a2329429d172 modulo @Sjors' nits :-),https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-373431335,373431335,
donaloconnor,2018-03-15T19:34:48Z,utACK  https://github.com/bitcoin/bitcoin/commit/23bc0aaac8d8ac7f2b41527567d6a2329429d172 though I do agree with @laanwj that disabling logging would make sense now.,https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-373497222,373497222,
eklitzke,2018-03-16T07:21:26Z,"I could not resist the temptation to add `-nodebuglog` because I found the ""node bug log"" thing to be so funny. I added it as a ""secret"" option (meaning it's suppressed by default from `-help` output). You can also use `-debuglogfile=/dev/null` and `-debuglogfile=0` to disable logging. There are also Python test cases for all three methods. So I believe everyone got what they asked for :-D\n\nIn",https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-373625392,373625392,
eklitzke,2018-03-16T07:30:45Z,"I tested and you actually can use a named pipe, because the operation that's failing is a file size check in boost. But you can't use other special files, e.g. `/dev/zero` which swallows input the same was as `/dev/null`.\n\n```bash\n# this is allowed\n$ echo foo > /dev/zero\n\n# yep, it worked\n$ echo $?\n0\n\n# this fails\n$ ./src/bitcoind -debuglogfile=/dev/zero\n\n\n*************",https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-373627306,373627306,
laanwj,2018-03-16T09:55:34Z,"> use -debuglogfile=/dev/null \n\nRight, what bothered me about /dev/null is that it's OS-specific. I don't think providing arbitrary device files as debug log files (such as `/dev/zero`, `/dev/urandom` etc) should be really a goal. It mentions `file` in the name :) Better to have a dedicated option for it, thanks.\n",https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-373661350,373661350,
eklitzke,2018-03-17T00:20:20Z,"I spent way longer on this than I'd like to admit, due to strange behavior in the Bitcoin option parser.\n\nThere's a little-known feature in the option parser where `-nofoo` is the same as `-foo=0` when updating the value map. So you can't actually create an option with a name like `-nodebuglog`, because looking up the value from the map still uses the `nodebuglog` value, but the value is actua",https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-373877985,373877985,
eklitzke,2018-03-17T00:33:56Z,"Actually it looks like I can add C++ test for the option parser, I'm going to put up another commit adding that.",https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-373879390,373879390,
luke-jr,2018-03-17T01:27:41Z,"`atoi` is well-defined for all null-terminated input strings.\n\n> The strtol, strtoll, strtoul, and strtoull functions return the converted\nvalue, if any. If no conversion could be performed, zero is returned.",https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-373883812,373883812,
eklitzke,2018-03-17T01:29:55Z,"Interesting, that's not documented in the man pages on my system, but cppreference.com agrees that it must return 0 in such a case.",https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-373884010,373884010,
donaloconnor,2018-03-17T11:49:47Z,utACK - looks good ,https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-373914202,373914202,
meshcollider,2018-03-17T23:23:29Z,"utACK https://github.com/bitcoin/bitcoin/pull/12689/commits/dca1a864f5395a69c6dc2952dcd1dca0d71976e9, nice :)",https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-373960278,373960278,
eklitzke,2018-03-18T02:44:26Z,I've split the option parsing code out into another change as Marco asked. Once that is merged I can rebase and squash this branch.,https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-373968652,373968652,
eklitzke,2018-03-20T08:21:26Z,"@MarcoFalke This branch now contains two commits: the one from #12713 , and then a second commit with changes actually related to console printing. Both commits should pass the test suite.",https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-374512150,374512150,
eklitzke,2018-03-21T06:02:14Z,Updated again with changes from #12713.,https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-374840829,374840829,
jnewbery,2018-03-22T14:11:53Z,utACK 60086ad871cb1a756c152a3d3e19fcea52660123. I think that commit can be squashed with the previous.,https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-375320113,375320113,
MarcoFalke,2018-03-30T19:19:31Z,Needs rebase to get rid of the already-merged diff.,https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-377601291,377601291,
MarcoFalke,2018-04-07T19:37:46Z,"Marked ""up for grabs""",https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-379493955,379493955,
sipa,2018-04-08T22:19:19Z,./contrib/devtools/clang-format-diff.py:74:1: F401 'string' imported but unused,https://github.com/bitcoin/bitcoin/pull/12689#issuecomment-379587432,379587432,
donaloconnor,2018-03-14T22:39:52Z,I know you said that MingW includes a compatible unistd.h version for Windows but on Visual Studio/msvc isatty is deprecated and replaced by _isatty. Also STDOUT_FILENO (1) is not defined. There's currently some PRs for msvc support so just a heads up that this will likely break things there. #11526 and #11873 ,https://github.com/bitcoin/bitcoin/pull/12689#discussion_r174632036,174632036,src/util.cpp
laanwj,2018-03-15T15:50:34Z,"I'm fine with making these non-exclusive, however we still need a way to disable logging to `debug.log`. Some logging setups (e.g. when using systemd) process the `-printtoconsole` output, and don't need a duplicate logging to disk.\nMaybe `-nodebuglogfile`?",https://github.com/bitcoin/bitcoin/pull/12689#discussion_r174833241,174833241,src/util.cpp
Sjors,2018-03-15T15:56:15Z,Maybe `-debuglogfile=0` as a special case?,https://github.com/bitcoin/bitcoin/pull/12689#discussion_r174835296,174835296,src/util.cpp
Sjors,2018-03-15T15:58:34Z,"`std::string(NUMBER_OF_BLANK_LINES_BETWEEN_SESSIONS_IN_LOG_TO_PREEMPT_BIKESHEDDING, '\n')`? :-P",https://github.com/bitcoin/bitcoin/pull/12689#discussion_r174836140,174836140,src/init.cpp
Sjors,2018-03-15T16:00:27Z,Nit: move brackets to same line?,https://github.com/bitcoin/bitcoin/pull/12689#discussion_r174836866,174836866,src/util.cpp
practicalswift,2018-03-15T23:03:37Z,"What about `-debuglogfile=/dev/null` as a special case .-)\n\nIf we are to add a separate option, then perhaps something starting with `-disable` to make it consistent with `-disablewallet`? We don't have any `bitcoind` command-line options starting with `-no` AFAIK.\n\nAlso `-nodebuglogfile` can be parsed as ""node bug logfile"" :-)",https://github.com/bitcoin/bitcoin/pull/12689#discussion_r174958286,174958286,src/util.cpp
MarcoFalke,2018-03-17T15:13:45Z,I think this has nothing to do with `printtoconsole`. Mind to split it up into a separate pull?,https://github.com/bitcoin/bitcoin/pull/12689#discussion_r175260794,175260794,src/util.cpp
meshcollider,2018-03-17T23:15:32Z,"Actually -noX is interpreted by the args manager as -X=0 implicitly anyway, converted by the InterpretNegativeSetting() function. So @laanwj and @Sjors suggestions are equivalent :)\nEDIT: just saw further conversation, this was pointed out",https://github.com/bitcoin/bitcoin/pull/12689#discussion_r175272714,175272714,src/util.cpp
eklitzke,2018-03-18T02:13:48Z,"It has to do with the behavior I wanted for disabling the debug log, but you're right that it's technically orthogonal. I will split it out.",https://github.com/bitcoin/bitcoin/pull/12689#discussion_r175275328,175275328,src/util.cpp
jimpo,2018-03-18T23:02:54Z,Feels like this should also be in #12713.,https://github.com/bitcoin/bitcoin/pull/12689#discussion_r175308264,175308264,test/functional/wallet_resendwallettransactions.py
jimpo,2018-03-18T23:09:55Z,"Feels non-obvious based on the name that this would toggle the state of a global variable. Now that the bool option parsing is fixed, I don't think there's a need for this function. But even if you want to keep it, I think it would be clearer if the code in `AppInitMain` set `fPrintToDebugLog = ShouldOpenDebugLog()`.",https://github.com/bitcoin/bitcoin/pull/12689#discussion_r175308600,175308600,src/util.cpp
jimpo,2018-03-18T23:11:17Z,nit: `PrintToConsoleDefault()` is seems more accurate. Otherwise the function name makes it sound like it takes `-printtoconsole` into account.,https://github.com/bitcoin/bitcoin/pull/12689#discussion_r175308649,175308649,src/init.cpp
MarcoFalke,2018-03-18T23:24:27Z,"Since it is only called once, you could also inline it and call the variable `const bool default_printtoconsole = !gArgs.GetBoolArg(""-daemon"", false);`",https://github.com/bitcoin/bitcoin/pull/12689#discussion_r175309191,175309191,src/init.cpp
eklitzke,2018-03-19T05:08:12Z,"It's already inlined by the compiler, there's no difference in the executable produced by GCC either way. The only reason it's still a method is because it originally called `isatty()`. If I can get #12713 merged I am happy to remove this method.",https://github.com/bitcoin/bitcoin/pull/12689#discussion_r175332662,175332662,src/init.cpp
Sjors,2018-03-21T14:34:44Z,This has been moved to the other commit.,https://github.com/bitcoin/bitcoin/pull/12689#discussion_r176103760,176103760,test/functional/wallet_resendwallettransactions.py
jnewbery,2018-03-21T15:43:56Z,Will this work on non-linux platforms? Is `os.devnull` better? https://docs.python.org/3/library/os.html#os.devnull,https://github.com/bitcoin/bitcoin/pull/12689#discussion_r176131249,176131249,test/functional/feature_logging.py
ryanofsky,2018-03-22T13:10:55Z,"In commit ""stop printing to console in test runner""\n\nThis change looks like it should go in the previous commit (""Enable -printtoconsole by default if bitcoind is not a daemon"").",https://github.com/bitcoin/bitcoin/pull/12689#discussion_r176412987,176412987,test/functional/feature_logging.py
