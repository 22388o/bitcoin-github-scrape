[
  {
    "sha": "e4557133f595f357df5e16ae4f2f19c579631396",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNDU1NzEzM2Y1OTVmMzU3ZGY1ZTE2YWU0ZjJmMTljNTc5NjMxMzk2",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-06-11T17:42:37Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-09-03T15:47:46Z"
      },
      "message": "[tests] Move bech32 unit tests to test framework",
      "tree": {
        "sha": "6fbd169281e04a8a00866515a091ad4577f30421",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6fbd169281e04a8a00866515a091ad4577f30421"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e4557133f595f357df5e16ae4f2f19c579631396",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4557133f595f357df5e16ae4f2f19c579631396",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e4557133f595f357df5e16ae4f2f19c579631396",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4557133f595f357df5e16ae4f2f19c579631396/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "68f0ab26bca825edf7e48a69176c38b04e3158d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68f0ab26bca825edf7e48a69176c38b04e3158d0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/68f0ab26bca825edf7e48a69176c38b04e3158d0"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 16,
      "deletions": 14
    },
    "files": [
      {
        "sha": "10d20eeda7685dc55d6d6e6f0432142be7ae7a46",
        "filename": "test/functional/test_framework/segwit_addr.py",
        "status": "modified",
        "additions": 15,
        "deletions": 1,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e4557133f595f357df5e16ae4f2f19c579631396/test/functional/test_framework/segwit_addr.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e4557133f595f357df5e16ae4f2f19c579631396/test/functional/test_framework/segwit_addr.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/segwit_addr.py?ref=e4557133f595f357df5e16ae4f2f19c579631396",
        "patch": "@@ -3,7 +3,7 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Reference implementation for Bech32 and segwit addresses.\"\"\"\n-\n+import unittest\n \n CHARSET = \"qpzry9x8gf2tvdw0s3jn54khce6mua7l\"\n \n@@ -105,3 +105,17 @@ def encode(hrp, witver, witprog):\n     if decode(hrp, ret) == (None, None):\n         return None\n     return ret\n+\n+class TestFrameworkScript(unittest.TestCase):\n+    def test_segwit_encode_decode(self):\n+        def test_python_bech32(addr):\n+            hrp = addr[:4]\n+            self.assertEqual(hrp, \"bcrt\")\n+            (witver, witprog) = decode(hrp, addr)\n+            self.assertEqual(encode(hrp, witver, witprog), addr)\n+\n+        # P2WPKH\n+        test_python_bech32('bcrt1qthmht0k2qnh3wy7336z05lu2km7emzfpm3wg46')\n+        # P2WSH\n+        test_python_bech32('bcrt1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3xueyj')\n+        test_python_bech32('bcrt1qft5p2uhsdcdc3l2ua4ap5qqfg4pjaqlp250x7us7a8qqhrxrxfsqseac85')"
      },
      {
        "sha": "933dd82c5a2991fbb46c129097437a50491f093c",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e4557133f595f357df5e16ae4f2f19c579631396/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e4557133f595f357df5e16ae4f2f19c579631396/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=e4557133f595f357df5e16ae4f2f19c579631396",
        "patch": "@@ -71,6 +71,7 @@\n     \"blocktools\",\n     \"muhash\",\n     \"script\",\n+    \"segwit_addr\",\n     \"util\",\n ]\n "
      },
      {
        "sha": "bba0b8974d4a742f1a4bb4a2f57590d3b3d8aa82",
        "filename": "test/functional/wallet_address_types.py",
        "status": "modified",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e4557133f595f357df5e16ae4f2f19c579631396/test/functional/wallet_address_types.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e4557133f595f357df5e16ae4f2f19c579631396/test/functional/wallet_address_types.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_address_types.py?ref=e4557133f595f357df5e16ae4f2f19c579631396",
        "patch": "@@ -64,10 +64,6 @@\n     assert_raises_rpc_error,\n     connect_nodes,\n )\n-from test_framework.segwit_addr import (\n-    encode,\n-    decode,\n-)\n \n class AddressTypeTest(BitcoinTestFramework):\n     def set_test_params(self):\n@@ -101,13 +97,6 @@ def get_balances(self, key='trusted'):\n         \"\"\"Return a list of balances.\"\"\"\n         return [self.nodes[i].getbalances()['mine'][key] for i in range(4)]\n \n-    # Quick test of python bech32 implementation\n-    def test_python_bech32(self, addr):\n-        hrp = addr[:4]\n-        assert_equal(hrp, \"bcrt\")\n-        (witver, witprog) = decode(hrp, addr)\n-        assert_equal(encode(hrp, witver, witprog), addr)\n-\n     def test_address(self, node, address, multisig, typ):\n         \"\"\"Run sanity checks on an address.\"\"\"\n         info = self.nodes[node].getaddressinfo(address)\n@@ -132,7 +121,6 @@ def test_address(self, node, address, multisig, typ):\n             assert_equal(info['witness_version'], 0)\n             assert_equal(len(info['witness_program']), 40)\n             assert 'pubkey' in info\n-            self.test_python_bech32(info[\"address\"])\n         elif typ == 'legacy':\n             # P2SH-multisig\n             assert info['isscript']\n@@ -158,7 +146,6 @@ def test_address(self, node, address, multisig, typ):\n             assert_equal(info['witness_version'], 0)\n             assert_equal(len(info['witness_program']), 64)\n             assert 'pubkeys' in info\n-            self.test_python_bech32(info[\"address\"])\n         else:\n             # Unknown type\n             assert False"
      }
    ]
  },
  {
    "sha": "011e784f74411bd5d5dbccfd3af39e0937fd8933",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMTFlNzg0Zjc0NDExYmQ1ZDVkYmNjZmQzYWYzOWUwOTM3ZmQ4OTMz",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-06-11T17:45:31Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-09-03T15:47:49Z"
      },
      "message": "[tests] Rename segwit encode and decode functions\n\nThese functions can be exported to other modules,\nso be explicit that they're encoding and decoding\nsegwit addresses",
      "tree": {
        "sha": "af8ff1af13d22e8f619d260bea9d6d0aae2e29e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/af8ff1af13d22e8f619d260bea9d6d0aae2e29e6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/011e784f74411bd5d5dbccfd3af39e0937fd8933",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/011e784f74411bd5d5dbccfd3af39e0937fd8933",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/011e784f74411bd5d5dbccfd3af39e0937fd8933",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/011e784f74411bd5d5dbccfd3af39e0937fd8933/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e4557133f595f357df5e16ae4f2f19c579631396",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4557133f595f357df5e16ae4f2f19c579631396",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e4557133f595f357df5e16ae4f2f19c579631396"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "536647534ab92cc771a5713b9038c58324038f2e",
        "filename": "test/functional/test_framework/address.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/011e784f74411bd5d5dbccfd3af39e0937fd8933/test/functional/test_framework/address.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/011e784f74411bd5d5dbccfd3af39e0937fd8933/test/functional/test_framework/address.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/address.py?ref=011e784f74411bd5d5dbccfd3af39e0937fd8933",
        "patch": "@@ -8,9 +8,9 @@\n import unittest\n \n from .script import hash256, hash160, sha256, CScript, OP_0\n+from .segwit_addr import encode_segwit_address\n from .util import hex_str_to_bytes\n \n-from . import segwit_addr\n \n from test_framework.util import assert_equal\n \n@@ -100,7 +100,7 @@ def program_to_witness(version, program, main = False):\n     assert 0 <= version <= 16\n     assert 2 <= len(program) <= 40\n     assert version > 0 or len(program) in [20, 32]\n-    return segwit_addr.encode(\"bc\" if main else \"bcrt\", version, program)\n+    return encode_segwit_address(\"bc\" if main else \"bcrt\", version, program)\n \n def script_to_p2wsh(script, main = False):\n     script = check_script(script)"
      },
      {
        "sha": "00c0d8a919326b807d1f43a44319c6342132c32d",
        "filename": "test/functional/test_framework/segwit_addr.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/011e784f74411bd5d5dbccfd3af39e0937fd8933/test/functional/test_framework/segwit_addr.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/011e784f74411bd5d5dbccfd3af39e0937fd8933/test/functional/test_framework/segwit_addr.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/segwit_addr.py?ref=011e784f74411bd5d5dbccfd3af39e0937fd8933",
        "patch": "@@ -84,7 +84,7 @@ def convertbits(data, frombits, tobits, pad=True):\n     return ret\n \n \n-def decode(hrp, addr):\n+def decode_segwit_address(hrp, addr):\n     \"\"\"Decode a segwit address.\"\"\"\n     hrpgot, data = bech32_decode(addr)\n     if hrpgot != hrp:\n@@ -99,10 +99,10 @@ def decode(hrp, addr):\n     return (data[0], decoded)\n \n \n-def encode(hrp, witver, witprog):\n+def encode_segwit_address(hrp, witver, witprog):\n     \"\"\"Encode a segwit address.\"\"\"\n     ret = bech32_encode(hrp, [witver] + convertbits(witprog, 8, 5))\n-    if decode(hrp, ret) == (None, None):\n+    if decode_segwit_address(hrp, ret) == (None, None):\n         return None\n     return ret\n \n@@ -111,8 +111,8 @@ def test_segwit_encode_decode(self):\n         def test_python_bech32(addr):\n             hrp = addr[:4]\n             self.assertEqual(hrp, \"bcrt\")\n-            (witver, witprog) = decode(hrp, addr)\n-            self.assertEqual(encode(hrp, witver, witprog), addr)\n+            (witver, witprog) = decode_segwit_address(hrp, addr)\n+            self.assertEqual(encode_segwit_address(hrp, witver, witprog), addr)\n \n         # P2WPKH\n         test_python_bech32('bcrt1qthmht0k2qnh3wy7336z05lu2km7emzfpm3wg46')"
      }
    ]
  },
  {
    "sha": "7f639df0b8a15aaeccedab00b634925f568c2c9a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZjYzOWRmMGI4YTE1YWFlY2NlZGFiMDBiNjM0OTI1ZjU2OGMyYzlh",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-06-11T17:50:27Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-09-03T15:47:49Z"
      },
      "message": "[tests] Remove unused optional verify_checksum parameter\n\nThis optional parameter is never used, so remove it.",
      "tree": {
        "sha": "bc50cb66832e2173aa6c4eed0fe0ceeca386a730",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bc50cb66832e2173aa6c4eed0fe0ceeca386a730"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7f639df0b8a15aaeccedab00b634925f568c2c9a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f639df0b8a15aaeccedab00b634925f568c2c9a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7f639df0b8a15aaeccedab00b634925f568c2c9a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f639df0b8a15aaeccedab00b634925f568c2c9a/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "011e784f74411bd5d5dbccfd3af39e0937fd8933",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/011e784f74411bd5d5dbccfd3af39e0937fd8933",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/011e784f74411bd5d5dbccfd3af39e0937fd8933"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 7,
      "deletions": 3
    },
    "files": [
      {
        "sha": "a4ce8a164f0e8de58c10a315b2e75361a7cf20d0",
        "filename": "test/functional/test_framework/address.py",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f639df0b8a15aaeccedab00b634925f568c2c9a/test/functional/test_framework/address.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f639df0b8a15aaeccedab00b634925f568c2c9a/test/functional/test_framework/address.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/address.py?ref=7f639df0b8a15aaeccedab00b634925f568c2c9a",
        "patch": "@@ -45,7 +45,10 @@ def byte_to_base58(b, version):\n     return result\n \n \n-def base58_to_byte(s, verify_checksum=True):\n+def base58_to_byte(s):\n+    \"\"\"Converts a base58-encoded string to its data and version.\n+\n+    Throws if the base58 checksum is invalid.\"\"\"\n     if not s:\n         return b''\n     n = 0\n@@ -65,8 +68,9 @@ def base58_to_byte(s, verify_checksum=True):\n         else:\n             break\n     res = b'\\x00' * pad + res\n-    if verify_checksum:\n-        assert_equal(hash256(res[:-4])[:4], res[-4:])\n+\n+    # Assert if the checksum is invalid\n+    assert_equal(hash256(res[:-4])[:4], res[-4:])\n \n     return res[1:-4], int(res[0])\n "
      }
    ]
  },
  {
    "sha": "ea70e6a2ca0e183ef40cdb9b3b86f39e94366015",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYTcwZTZhMmNhMGUxODNlZjQwY2RiOWIzYjg2ZjM5ZTk0MzY2MDE1",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-06-11T17:51:12Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-09-03T15:47:49Z"
      },
      "message": "[tests] Tidy up imports in address.py\n\nNo need to import twice from util.py",
      "tree": {
        "sha": "a55b89984224d6292c79be283f4924d6986f138d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a55b89984224d6292c79be283f4924d6986f138d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea70e6a2ca0e183ef40cdb9b3b86f39e94366015",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea70e6a2ca0e183ef40cdb9b3b86f39e94366015",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ea70e6a2ca0e183ef40cdb9b3b86f39e94366015",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea70e6a2ca0e183ef40cdb9b3b86f39e94366015/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7f639df0b8a15aaeccedab00b634925f568c2c9a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f639df0b8a15aaeccedab00b634925f568c2c9a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7f639df0b8a15aaeccedab00b634925f568c2c9a"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 1,
      "deletions": 4
    },
    "files": [
      {
        "sha": "5ed3213a008f76fb2d2db3b6d5d9a1e9b3f5f631",
        "filename": "test/functional/test_framework/address.py",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea70e6a2ca0e183ef40cdb9b3b86f39e94366015/test/functional/test_framework/address.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea70e6a2ca0e183ef40cdb9b3b86f39e94366015/test/functional/test_framework/address.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/address.py?ref=ea70e6a2ca0e183ef40cdb9b3b86f39e94366015",
        "patch": "@@ -9,10 +9,7 @@\n \n from .script import hash256, hash160, sha256, CScript, OP_0\n from .segwit_addr import encode_segwit_address\n-from .util import hex_str_to_bytes\n-\n-\n-from test_framework.util import assert_equal\n+from .util import assert_equal, hex_str_to_bytes\n \n ADDRESS_BCRT1_UNSPENDABLE = 'bcrt1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3xueyj'\n ADDRESS_BCRT1_UNSPENDABLE_DESCRIPTOR = 'addr(bcrt1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3xueyj)#juyq9d97'"
      }
    ]
  },
  {
    "sha": "b230f8b3f3adcb1e2ae299094f9ae0a8bc7cc3d0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMjMwZjhiM2YzYWRjYjFlMmFlMjk5MDk0ZjlhZTBhOGJjN2NjM2Qw",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-06-11T17:53:28Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-09-03T15:47:49Z"
      },
      "message": "[tests] Correct docstring for address.py",
      "tree": {
        "sha": "974c11411f7748fa5143a5ecb1c08d9efef4e66e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/974c11411f7748fa5143a5ecb1c08d9efef4e66e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b230f8b3f3adcb1e2ae299094f9ae0a8bc7cc3d0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b230f8b3f3adcb1e2ae299094f9ae0a8bc7cc3d0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b230f8b3f3adcb1e2ae299094f9ae0a8bc7cc3d0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b230f8b3f3adcb1e2ae299094f9ae0a8bc7cc3d0/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ea70e6a2ca0e183ef40cdb9b3b86f39e94366015",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea70e6a2ca0e183ef40cdb9b3b86f39e94366015",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ea70e6a2ca0e183ef40cdb9b3b86f39e94366015"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "4570167d7bbb315157b6c9711a3f60899803096f",
        "filename": "test/functional/test_framework/address.py",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b230f8b3f3adcb1e2ae299094f9ae0a8bc7cc3d0/test/functional/test_framework/address.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b230f8b3f3adcb1e2ae299094f9ae0a8bc7cc3d0/test/functional/test_framework/address.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/address.py?ref=b230f8b3f3adcb1e2ae299094f9ae0a8bc7cc3d0",
        "patch": "@@ -2,7 +2,10 @@\n # Copyright (c) 2016-2020 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Encode and decode BASE58, P2PKH and P2SH addresses.\"\"\"\n+\"\"\"Encode and decode Bitcoin addresses.\n+\n+- base58 P2PKH and P2SH addresses.\n+- bech32 segwit v0 P2WPKH and P2WSH addresses.\"\"\"\n \n import enum\n import unittest"
      }
    ]
  },
  {
    "sha": "64eca45100536579a3849631e59d4277bbc25be1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NGVjYTQ1MTAwNTM2NTc5YTM4NDk2MzFlNTlkNDI3N2JiYzI1YmUx",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-06-11T17:54:41Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-09-03T15:47:49Z"
      },
      "message": "[tests] Fix pep8 style violations in address.py",
      "tree": {
        "sha": "c21b8a46c87d11d990f1b3dd8813f2ca72c896ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c21b8a46c87d11d990f1b3dd8813f2ca72c896ac"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/64eca45100536579a3849631e59d4277bbc25be1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64eca45100536579a3849631e59d4277bbc25be1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/64eca45100536579a3849631e59d4277bbc25be1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64eca45100536579a3849631e59d4277bbc25be1/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b230f8b3f3adcb1e2ae299094f9ae0a8bc7cc3d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b230f8b3f3adcb1e2ae299094f9ae0a8bc7cc3d0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b230f8b3f3adcb1e2ae299094f9ae0a8bc7cc3d0"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 12,
      "deletions": 12
    },
    "files": [
      {
        "sha": "49f8d6cb8517accdd4315e2cff6984b29f3b6855",
        "filename": "test/functional/test_framework/address.py",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64eca45100536579a3849631e59d4277bbc25be1/test/functional/test_framework/address.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64eca45100536579a3849631e59d4277bbc25be1/test/functional/test_framework/address.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/address.py?ref=64eca45100536579a3849631e59d4277bbc25be1",
        "patch": "@@ -35,7 +35,7 @@ def byte_to_base58(b, version):\n     str = chr(version).encode('latin-1').hex() + str\n     checksum = hash256(hex_str_to_bytes(str)).hex()\n     str += checksum[:8]\n-    value = int('0x'+str,0)\n+    value = int('0x' + str, 0)\n     while value > 0:\n         result = chars[value % 58] + result\n         value //= 58\n@@ -75,60 +75,60 @@ def base58_to_byte(s):\n     return res[1:-4], int(res[0])\n \n \n-def keyhash_to_p2pkh(hash, main = False):\n+def keyhash_to_p2pkh(hash, main=False):\n     assert len(hash) == 20\n     version = 0 if main else 111\n     return byte_to_base58(hash, version)\n \n-def scripthash_to_p2sh(hash, main = False):\n+def scripthash_to_p2sh(hash, main=False):\n     assert len(hash) == 20\n     version = 5 if main else 196\n     return byte_to_base58(hash, version)\n \n-def key_to_p2pkh(key, main = False):\n+def key_to_p2pkh(key, main=False):\n     key = check_key(key)\n     return keyhash_to_p2pkh(hash160(key), main)\n \n-def script_to_p2sh(script, main = False):\n+def script_to_p2sh(script, main=False):\n     script = check_script(script)\n     return scripthash_to_p2sh(hash160(script), main)\n \n-def key_to_p2sh_p2wpkh(key, main = False):\n+def key_to_p2sh_p2wpkh(key, main=False):\n     key = check_key(key)\n     p2shscript = CScript([OP_0, hash160(key)])\n     return script_to_p2sh(p2shscript, main)\n \n-def program_to_witness(version, program, main = False):\n+def program_to_witness(version, program, main=False):\n     if (type(program) is str):\n         program = hex_str_to_bytes(program)\n     assert 0 <= version <= 16\n     assert 2 <= len(program) <= 40\n     assert version > 0 or len(program) in [20, 32]\n     return encode_segwit_address(\"bc\" if main else \"bcrt\", version, program)\n \n-def script_to_p2wsh(script, main = False):\n+def script_to_p2wsh(script, main=False):\n     script = check_script(script)\n     return program_to_witness(0, sha256(script), main)\n \n-def key_to_p2wpkh(key, main = False):\n+def key_to_p2wpkh(key, main=False):\n     key = check_key(key)\n     return program_to_witness(0, hash160(key), main)\n \n-def script_to_p2sh_p2wsh(script, main = False):\n+def script_to_p2sh_p2wsh(script, main=False):\n     script = check_script(script)\n     p2shscript = CScript([OP_0, sha256(script)])\n     return script_to_p2sh(p2shscript, main)\n \n def check_key(key):\n     if (type(key) is str):\n-        key = hex_str_to_bytes(key) # Assuming this is hex string\n+        key = hex_str_to_bytes(key)  # Assuming this is hex string\n     if (type(key) is bytes and (len(key) == 33 or len(key) == 65)):\n         return key\n     assert False\n \n def check_script(script):\n     if (type(script) is str):\n-        script = hex_str_to_bytes(script) # Assuming this is hex string\n+        script = hex_str_to_bytes(script)  # Assuming this is hex string\n     if (type(script) is bytes or type(script) is CScript):\n         return script\n     assert False"
      }
    ]
  },
  {
    "sha": "825fcae484f31182041dfacbf820e818d759b130",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MjVmY2FlNDg0ZjMxMTgyMDQxZGZhY2JmODIwZTgxOGQ3NTliMTMw",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-06-11T18:02:26Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-09-03T15:47:49Z"
      },
      "message": "[tests] Replace bytes literals with hex literals\n\nIt's almost impossible to read bytes literals in code, so replace them\nwith the hex string literal and then convert them to a bytes object\nusing bytes.fromhex().",
      "tree": {
        "sha": "79ca64c9aebc60494f3d1cfbdc78ae041c75988d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/79ca64c9aebc60494f3d1cfbdc78ae041c75988d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/825fcae484f31182041dfacbf820e818d759b130",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/825fcae484f31182041dfacbf820e818d759b130",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/825fcae484f31182041dfacbf820e818d759b130",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/825fcae484f31182041dfacbf820e818d759b130/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "64eca45100536579a3849631e59d4277bbc25be1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64eca45100536579a3849631e59d4277bbc25be1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/64eca45100536579a3849631e59d4277bbc25be1"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 12,
      "deletions": 12
    },
    "files": [
      {
        "sha": "360962b8da6134ba0c25ac4743fcab928cf9c74d",
        "filename": "test/functional/test_framework/address.py",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/825fcae484f31182041dfacbf820e818d759b130/test/functional/test_framework/address.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/825fcae484f31182041dfacbf820e818d759b130/test/functional/test_framework/address.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/address.py?ref=825fcae484f31182041dfacbf820e818d759b130",
        "patch": "@@ -139,15 +139,15 @@ def test_base58encodedecode(self):\n         def check_base58(data, version):\n             self.assertEqual(base58_to_byte(byte_to_base58(data, version)), (data, version))\n \n-        check_base58(b'\\x1f\\x8e\\xa1p*{\\xd4\\x94\\x1b\\xca\\tA\\xb8R\\xc4\\xbb\\xfe\\xdb.\\x05', 111)\n-        check_base58(b':\\x0b\\x05\\xf4\\xd7\\xf6l;\\xa7\\x00\\x9fE50)l\\x84\\\\\\xc9\\xcf', 111)\n-        check_base58(b'A\\xc1\\xea\\xf1\\x11\\x80%Y\\xba\\xd6\\x1b`\\xd6+\\x1f\\x89|c\\x92\\x8a', 111)\n-        check_base58(b'\\0A\\xc1\\xea\\xf1\\x11\\x80%Y\\xba\\xd6\\x1b`\\xd6+\\x1f\\x89|c\\x92\\x8a', 111)\n-        check_base58(b'\\0\\0A\\xc1\\xea\\xf1\\x11\\x80%Y\\xba\\xd6\\x1b`\\xd6+\\x1f\\x89|c\\x92\\x8a', 111)\n-        check_base58(b'\\0\\0\\0A\\xc1\\xea\\xf1\\x11\\x80%Y\\xba\\xd6\\x1b`\\xd6+\\x1f\\x89|c\\x92\\x8a', 111)\n-        check_base58(b'\\x1f\\x8e\\xa1p*{\\xd4\\x94\\x1b\\xca\\tA\\xb8R\\xc4\\xbb\\xfe\\xdb.\\x05', 0)\n-        check_base58(b':\\x0b\\x05\\xf4\\xd7\\xf6l;\\xa7\\x00\\x9fE50)l\\x84\\\\\\xc9\\xcf', 0)\n-        check_base58(b'A\\xc1\\xea\\xf1\\x11\\x80%Y\\xba\\xd6\\x1b`\\xd6+\\x1f\\x89|c\\x92\\x8a', 0)\n-        check_base58(b'\\0A\\xc1\\xea\\xf1\\x11\\x80%Y\\xba\\xd6\\x1b`\\xd6+\\x1f\\x89|c\\x92\\x8a', 0)\n-        check_base58(b'\\0\\0A\\xc1\\xea\\xf1\\x11\\x80%Y\\xba\\xd6\\x1b`\\xd6+\\x1f\\x89|c\\x92\\x8a', 0)\n-        check_base58(b'\\0\\0\\0A\\xc1\\xea\\xf1\\x11\\x80%Y\\xba\\xd6\\x1b`\\xd6+\\x1f\\x89|c\\x92\\x8a', 0)\n+        check_base58(bytes.fromhex('1f8ea1702a7bd4941bca0941b852c4bbfedb2e05'), 111)\n+        check_base58(bytes.fromhex('3a0b05f4d7f66c3ba7009f453530296c845cc9cf'), 111)\n+        check_base58(bytes.fromhex('41c1eaf111802559bad61b60d62b1f897c63928a'), 111)\n+        check_base58(bytes.fromhex('0041c1eaf111802559bad61b60d62b1f897c63928a'), 111)\n+        check_base58(bytes.fromhex('000041c1eaf111802559bad61b60d62b1f897c63928a'), 111)\n+        check_base58(bytes.fromhex('00000041c1eaf111802559bad61b60d62b1f897c63928a'), 111)\n+        check_base58(bytes.fromhex('1f8ea1702a7bd4941bca0941b852c4bbfedb2e05'), 0)\n+        check_base58(bytes.fromhex('3a0b05f4d7f66c3ba7009f453530296c845cc9cf'), 0)\n+        check_base58(bytes.fromhex('41c1eaf111802559bad61b60d62b1f897c63928a'), 0)\n+        check_base58(bytes.fromhex('0041c1eaf111802559bad61b60d62b1f897c63928a'), 0)\n+        check_base58(bytes.fromhex('000041c1eaf111802559bad61b60d62b1f897c63928a'), 0)\n+        check_base58(bytes.fromhex('00000041c1eaf111802559bad61b60d62b1f897c63928a'), 0)"
      }
    ]
  }
]