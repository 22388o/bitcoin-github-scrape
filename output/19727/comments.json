[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674463848",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#issuecomment-674463848",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19727",
    "id": 674463848,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDQ2Mzg0OA==",
    "user": {
      "login": "adamjonas",
      "id": 755825,
      "node_id": "MDQ6VXNlcjc1NTgyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/755825?u=fc2e6f106f98731d49e9787f9cbfe86a17447c23&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamjonas",
      "html_url": "https://github.com/adamjonas",
      "followers_url": "https://api.github.com/users/adamjonas/followers",
      "following_url": "https://api.github.com/users/adamjonas/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamjonas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamjonas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamjonas/subscriptions",
      "organizations_url": "https://api.github.com/users/adamjonas/orgs",
      "repos_url": "https://api.github.com/users/adamjonas/repos",
      "events_url": "https://api.github.com/users/adamjonas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamjonas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-16T00:59:33Z",
    "updated_at": "2020-08-16T00:59:33Z",
    "author_association": "MEMBER",
    "body": "@dhruv welcome! Looks like a great first contribution.\r\n\r\nRan tests and everything LGTM, but @jnewbery is probably the guy who you'd want to take a look at this since it was his suggestion.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674463848/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674497791",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#issuecomment-674497791",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19727",
    "id": 674497791,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDQ5Nzc5MQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-16T08:28:33Z",
    "updated_at": "2020-08-16T08:28:33Z",
    "author_association": "MEMBER",
    "body": "Concept ACK. Thanks @dhruv . I'll review soon.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674497791/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674546961",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#issuecomment-674546961",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19727",
    "id": 674546961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDU0Njk2MQ==",
    "user": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?u=65406da0f40524c00b8b647f916d31cbbb449edb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-16T16:23:45Z",
    "updated_at": "2020-08-16T16:23:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @dhruv welcome! Looks like a great first contribution.\r\n\r\nThank you for the warm welcome and review, @adamjonas. I am excited to be here.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674546961/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674600024",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#issuecomment-674600024",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19727",
    "id": 674600024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDYwMDAyNA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-17T00:28:21Z",
    "updated_at": "2020-08-17T00:28:21Z",
    "author_association": "MEMBER",
    "body": "> Peers = not bitcoind nodes, but \"mininodes\" that just implement the P2P interface\r\n\r\nA node is a peer, a peer can be a node, a peer is not a beer \ud83c\udf7b ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674600024/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674609952",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#issuecomment-674609952",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19727",
    "id": 674609952,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDYwOTk1Mg==",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?u=3e27bc6589085f3450be1b0e969d04008cc77565&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-17T01:23:06Z",
    "updated_at": "2020-08-17T01:23:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "> A node is a peer, a peer can be a node\r\n\r\nOops ya that looks wrong out of context. I meant we shouldn't call mininodes nodes, and \"peer\" is what I recommend as a better name. I edited my comment thank you @promag \ud83e\udd42 ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674609952/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675038005",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#issuecomment-675038005",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19727",
    "id": 675038005,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTAzODAwNQ==",
    "user": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?u=65406da0f40524c00b8b647f916d31cbbb449edb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-17T18:23:27Z",
    "updated_at": "2020-08-17T18:23:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jnewbery Comments addressed. I also increased a `wait_until` timeout in [this commit](https://github.com/bitcoin/bitcoin/pull/19727/commits/23d6ccfaafd4b281169072122c2bd04ebea86d8f) to address [this](https://travis-ci.org/github/bitcoin/bitcoin/jobs/718464987). Please let me know if there is a better way.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675038005/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675121446",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#issuecomment-675121446",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19727",
    "id": 675121446,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTEyMTQ0Ng==",
    "user": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?u=65406da0f40524c00b8b647f916d31cbbb449edb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-17T21:19:54Z",
    "updated_at": "2020-08-17T21:19:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "The test is [now failing](https://travis-ci.org/github/bitcoin/bitcoin/jobs/718718043) on a different architecture but passing on the one it failed at the [last time](https://travis-ci.org/github/bitcoin/bitcoin/builds/718464981) (before raising the timeout) which I think confirms that it's a Travis CI timeout issue. However, I feel uncertain that just continuing to raise the timeout to reduce test fragility is the path forward. I'm looking for guidance from more experienced contributors.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675121446/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675265128",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#issuecomment-675265128",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19727",
    "id": 675265128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTI2NTEyOA==",
    "user": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?u=65406da0f40524c00b8b647f916d31cbbb449edb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-18T05:44:12Z",
    "updated_at": "2020-08-18T05:44:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the great review, @amitiuttarwar. I appreciate you taking the time to teach me with hints rather than giving out the answer. I've removed the assertion and made the changes to the commit messages. I had some trouble running `test/lint/commit-script-check.sh` locally so I am going to look more into that in the morning.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675265128/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675312044",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#issuecomment-675312044",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19727",
    "id": 675312044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTMxMjA0NA==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-18T07:36:34Z",
    "updated_at": "2020-08-18T07:36:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK\r\n\r\nWarm welcome as a contributor @dhruv! Hope to see more contributions from you in the future :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675312044/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675572815",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#issuecomment-675572815",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19727",
    "id": 675572815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTU3MjgxNQ==",
    "user": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?u=65406da0f40524c00b8b647f916d31cbbb449edb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-18T16:11:26Z",
    "updated_at": "2020-08-18T16:11:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jnewbery commits squashed",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675572815/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675964455",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#issuecomment-675964455",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19727",
    "id": 675964455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTk2NDQ1NQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-19T08:46:22Z",
    "updated_at": "2020-08-19T08:46:22Z",
    "author_association": "MEMBER",
    "body": "tested ACK ed5cd12869e0691a785199d2d977ce5879095180",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675964455/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/676798566",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#issuecomment-676798566",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19727",
    "id": 676798566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3Njc5ODU2Ng==",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?u=f0ef8142342bcda68fe46c952d3c653456811ed4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-19T23:02:28Z",
    "updated_at": "2020-08-19T23:02:28Z",
    "author_association": "MEMBER",
    "body": "utACK ed5cd12869",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/676798566/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471156749",
    "pull_request_review_id": 468093555,
    "id": 471156749,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE1Njc0OQ==",
    "diff_hunk": "@@ -125,7 +120,7 @@ def run_test(self):\n         wait_until(lambda: no_verack_idlenode.version_received, timeout=10, lock=mininode_lock)\n \n         # Mine a block and make sure that it's not sent to the connected nodes\n-        self.nodes[0].generatetoaddress(1, self.nodes[0].get_deterministic_priv_key().address)\n+        self.nodes[0].generate(nblocks=1)\n \n         #Give the node enough time to possibly leak out a message\n         time.sleep(5)",
    "path": "test/functional/p2p_leak.py",
    "position": 103,
    "original_position": 83,
    "commit_id": "ed5cd12869e0691a785199d2d977ce5879095180",
    "original_commit_id": "43986d9a78d799499b51ca6d743c429faea41ad0",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Unrelated to this PR, but is there a better way to sync here? `wait_until` RPC shows something that would happen after a block announcement?",
    "created_at": "2020-08-16T20:47:18Z",
    "updated_at": "2020-08-18T20:14:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471156749",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471156749"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471156749"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471156749/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 125,
    "original_line": 125,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471157548",
    "pull_request_review_id": 468093555,
    "id": 471157548,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE1NzU0OA==",
    "diff_hunk": "@@ -106,17 +94,24 @@ def set_test_params(self):\n         self.num_nodes = 1\n \n     def run_test(self):\n+        # Peer that never sends a version. We will send a bunch of messages\n+        # from this node anyway and verify eventual disconnection.\n         no_version_disconnect_node = self.nodes[0].add_p2p_connection(\n-            CNodeNoVersionMisbehavior(), send_version=False, wait_for_verack=False)\n-        no_version_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVersionIdle(), send_version=False, wait_for_verack=False)\n+            CLazyNode(), send_version=False, wait_for_verack=False)\n+\n+        # Another peer that never sends a version. Just sits idle and hopes to receive\n+        # any message (it shouldn't!)\n+        no_version_idlenode = self.nodes[0].add_p2p_connection(CLazyNode(), send_version=False, wait_for_verack=False)\n+\n+        # Peer that sends a version but not a verack.\n         no_verack_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVerackIdle(), wait_for_verack=False)\n \n-        # Send enough veracks without a message to reach the peer discouragement\n-        # threshold. This should get us disconnected.\n+        # Send enough ping messages (any non-version message will do) prior to sending\n+        # version to reach the peer discouragement threshold. This should get us disconnected.\n         for _ in range(DISCOURAGEMENT_THRESHOLD):\n-            no_version_disconnect_node.send_message(msg_verack())\n+            no_version_disconnect_node.send_message(msg_ping())\n ",
    "path": "test/functional/p2p_leak.py",
    "position": 83,
    "original_position": 69,
    "commit_id": "ed5cd12869e0691a785199d2d977ce5879095180",
    "original_commit_id": "43986d9a78d799499b51ca6d743c429faea41ad0",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should we wait until all the pings are received by the node?\r\ne.g. through \r\n```py\r\n`getpeerinfo` -> peer['bytesrecv_per_msg'].get('ping', 0)\r\n```",
    "created_at": "2020-08-16T20:55:02Z",
    "updated_at": "2020-08-18T20:14:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471157548",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471157548"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471157548"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471157548/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 112,
    "original_line": 112,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471158011",
    "pull_request_review_id": 468093555,
    "id": 471158011,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE1ODAxMQ==",
    "diff_hunk": "@@ -106,17 +94,24 @@ def set_test_params(self):\n         self.num_nodes = 1\n \n     def run_test(self):\n+        # Peer that never sends a version. We will send a bunch of messages\n+        # from this node anyway and verify eventual disconnection.\n         no_version_disconnect_node = self.nodes[0].add_p2p_connection(",
    "path": "test/functional/p2p_leak.py",
    "position": null,
    "original_position": 50,
    "commit_id": "ed5cd12869e0691a785199d2d977ce5879095180",
    "original_commit_id": "43986d9a78d799499b51ca6d743c429faea41ad0",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: I think we should take this opportunity to rename the mininodes to \"peers\" instead of nodes, because they aren't actually bitcoind nodes.\r\n(nit but I'm sure jnewbery would agree)\r\n```suggestion\r\n        no_version_disconnect_peer = self.nodes[0].add_p2p_connection(\r\n```",
    "created_at": "2020-08-16T20:57:48Z",
    "updated_at": "2020-08-18T20:14:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471158011",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471158011"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471158011"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471158011/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 99,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471158117",
    "pull_request_review_id": 468093555,
    "id": 471158117,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE1ODExNw==",
    "diff_hunk": "@@ -106,17 +94,24 @@ def set_test_params(self):\n         self.num_nodes = 1\n \n     def run_test(self):\n+        # Peer that never sends a version. We will send a bunch of messages\n+        # from this node anyway and verify eventual disconnection.\n         no_version_disconnect_node = self.nodes[0].add_p2p_connection(\n-            CNodeNoVersionMisbehavior(), send_version=False, wait_for_verack=False)\n-        no_version_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVersionIdle(), send_version=False, wait_for_verack=False)\n+            CLazyNode(), send_version=False, wait_for_verack=False)\n+\n+        # Another peer that never sends a version. Just sits idle and hopes to receive\n+        # any message (it shouldn't!)\n+        no_version_idlenode = self.nodes[0].add_p2p_connection(CLazyNode(), send_version=False, wait_for_verack=False)\n+\n+        # Peer that sends a version but not a verack.\n         no_verack_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVerackIdle(), wait_for_verack=False)\n \n-        # Send enough veracks without a message to reach the peer discouragement\n-        # threshold. This should get us disconnected.\n+        # Send enough ping messages (any non-version message will do) prior to sending\n+        # version to reach the peer discouragement threshold. This should get us disconnected.\n         for _ in range(DISCOURAGEMENT_THRESHOLD):\n-            no_version_disconnect_node.send_message(msg_verack())\n+            no_version_disconnect_node.send_message(msg_ping())\n \n-        # Wait until we got the verack in response to the version. Though, don't wait for the other node to receive the\n+        # Wait until we got the verack in response to the version. Though, don't wait for self.nodes[0] to receive the",
    "path": "test/functional/p2p_leak.py",
    "position": null,
    "original_position": 71,
    "commit_id": "ed5cd12869e0691a785199d2d977ce5879095180",
    "original_commit_id": "43986d9a78d799499b51ca6d743c429faea41ad0",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n        # Wait until we got the verack in response to the version. Though, don't wait for the node to receive the\r\n```",
    "created_at": "2020-08-16T20:58:33Z",
    "updated_at": "2020-08-18T20:14:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471158117",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471158117"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471158117"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471158117/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 114,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471158660",
    "pull_request_review_id": 468093555,
    "id": 471158660,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE1ODY2MA==",
    "diff_hunk": "@@ -106,17 +94,24 @@ def set_test_params(self):\n         self.num_nodes = 1\n \n     def run_test(self):\n+        # Peer that never sends a version. We will send a bunch of messages\n+        # from this node anyway and verify eventual disconnection.\n         no_version_disconnect_node = self.nodes[0].add_p2p_connection(\n-            CNodeNoVersionMisbehavior(), send_version=False, wait_for_verack=False)\n-        no_version_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVersionIdle(), send_version=False, wait_for_verack=False)\n+            CLazyNode(), send_version=False, wait_for_verack=False)\n+\n+        # Another peer that never sends a version. Just sits idle and hopes to receive\n+        # any message (it shouldn't!)\n+        no_version_idlenode = self.nodes[0].add_p2p_connection(CLazyNode(), send_version=False, wait_for_verack=False)",
    "path": "test/functional/p2p_leak.py",
    "position": null,
    "original_position": 57,
    "commit_id": "ed5cd12869e0691a785199d2d977ce5879095180",
    "original_commit_id": "43986d9a78d799499b51ca6d743c429faea41ad0",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: same\r\n```suggestion\r\n        no_version_idle_peer = self.nodes[0].add_p2p_connection(CLazyNode(), send_version=False, wait_for_verack=False)\r\n```",
    "created_at": "2020-08-16T21:04:03Z",
    "updated_at": "2020-08-18T20:14:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471158660",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471158660"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471158660"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471158660/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 104,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471158709",
    "pull_request_review_id": 468093555,
    "id": 471158709,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE1ODcwOQ==",
    "diff_hunk": "@@ -106,17 +94,24 @@ def set_test_params(self):\n         self.num_nodes = 1\n \n     def run_test(self):\n+        # Peer that never sends a version. We will send a bunch of messages\n+        # from this node anyway and verify eventual disconnection.\n         no_version_disconnect_node = self.nodes[0].add_p2p_connection(\n-            CNodeNoVersionMisbehavior(), send_version=False, wait_for_verack=False)\n-        no_version_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVersionIdle(), send_version=False, wait_for_verack=False)\n+            CLazyNode(), send_version=False, wait_for_verack=False)\n+\n+        # Another peer that never sends a version. Just sits idle and hopes to receive\n+        # any message (it shouldn't!)\n+        no_version_idlenode = self.nodes[0].add_p2p_connection(CLazyNode(), send_version=False, wait_for_verack=False)\n+\n+        # Peer that sends a version but not a verack.\n         no_verack_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVerackIdle(), wait_for_verack=False)",
    "path": "test/functional/p2p_leak.py",
    "position": null,
    "original_position": 60,
    "commit_id": "ed5cd12869e0691a785199d2d977ce5879095180",
    "original_commit_id": "43986d9a78d799499b51ca6d743c429faea41ad0",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: same again\r\n```suggestion\r\n        no_verack_idle_peer = self.nodes[0].add_p2p_connection(CNodeNoVerackIdle(), wait_for_verack=False)\r\n```",
    "created_at": "2020-08-16T21:04:42Z",
    "updated_at": "2020-08-18T20:14:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471158709",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471158709"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471158709"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471158709/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 107,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471159498",
    "pull_request_review_id": 468093555,
    "id": 471159498,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE1OTQ5OA==",
    "diff_hunk": "@@ -106,17 +94,24 @@ def set_test_params(self):\n         self.num_nodes = 1\n \n     def run_test(self):\n+        # Peer that never sends a version. We will send a bunch of messages\n+        # from this node anyway and verify eventual disconnection.\n         no_version_disconnect_node = self.nodes[0].add_p2p_connection(\n-            CNodeNoVersionMisbehavior(), send_version=False, wait_for_verack=False)\n-        no_version_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVersionIdle(), send_version=False, wait_for_verack=False)\n+            CLazyNode(), send_version=False, wait_for_verack=False)\n+\n+        # Another peer that never sends a version. Just sits idle and hopes to receive",
    "path": "test/functional/p2p_leak.py",
    "position": null,
    "original_position": 55,
    "commit_id": "ed5cd12869e0691a785199d2d977ce5879095180",
    "original_commit_id": "43986d9a78d799499b51ca6d743c429faea41ad0",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I like the documentation you've added!\r\nnit: I think \"hopes\" kind of sounds like it's doing something actively\r\n```suggestion\r\n        # Another peer that never sends a version, nor any other messages. It shouldn't receive anything from the node.\r\n```",
    "created_at": "2020-08-16T21:12:59Z",
    "updated_at": "2020-08-18T20:14:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471159498",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471159498"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471159498"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471159498/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 102,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471178095",
    "pull_request_review_id": 468108855,
    "id": 471178095,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE3ODA5NQ==",
    "diff_hunk": "@@ -125,7 +120,7 @@ def run_test(self):\n         wait_until(lambda: no_verack_idlenode.version_received, timeout=10, lock=mininode_lock)\n \n         # Mine a block and make sure that it's not sent to the connected nodes\n-        self.nodes[0].generatetoaddress(1, self.nodes[0].get_deterministic_priv_key().address)\n+        self.nodes[0].generate(nblocks=1)\n \n         #Give the node enough time to possibly leak out a message\n         time.sleep(5)",
    "path": "test/functional/p2p_leak.py",
    "position": 103,
    "original_position": 83,
    "commit_id": "ed5cd12869e0691a785199d2d977ce5879095180",
    "original_commit_id": "43986d9a78d799499b51ca6d743c429faea41ad0",
    "user": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Going to take a look at this and follow-up in a separate PR.",
    "created_at": "2020-08-17T00:11:56Z",
    "updated_at": "2020-08-18T20:14:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471178095",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471178095"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471178095"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471178095/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 125,
    "original_line": 125,
    "side": "RIGHT",
    "in_reply_to_id": 471156749
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471178149",
    "pull_request_review_id": 468108920,
    "id": 471178149,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE3ODE0OQ==",
    "diff_hunk": "@@ -106,17 +94,24 @@ def set_test_params(self):\n         self.num_nodes = 1\n \n     def run_test(self):\n+        # Peer that never sends a version. We will send a bunch of messages\n+        # from this node anyway and verify eventual disconnection.\n         no_version_disconnect_node = self.nodes[0].add_p2p_connection(\n-            CNodeNoVersionMisbehavior(), send_version=False, wait_for_verack=False)\n-        no_version_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVersionIdle(), send_version=False, wait_for_verack=False)\n+            CLazyNode(), send_version=False, wait_for_verack=False)\n+\n+        # Another peer that never sends a version. Just sits idle and hopes to receive\n+        # any message (it shouldn't!)\n+        no_version_idlenode = self.nodes[0].add_p2p_connection(CLazyNode(), send_version=False, wait_for_verack=False)\n+\n+        # Peer that sends a version but not a verack.\n         no_verack_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVerackIdle(), wait_for_verack=False)\n \n-        # Send enough veracks without a message to reach the peer discouragement\n-        # threshold. This should get us disconnected.\n+        # Send enough ping messages (any non-version message will do) prior to sending\n+        # version to reach the peer discouragement threshold. This should get us disconnected.\n         for _ in range(DISCOURAGEMENT_THRESHOLD):\n-            no_version_disconnect_node.send_message(msg_verack())\n+            no_version_disconnect_node.send_message(msg_ping())\n ",
    "path": "test/functional/p2p_leak.py",
    "position": 83,
    "original_position": 69,
    "commit_id": "ed5cd12869e0691a785199d2d977ce5879095180",
    "original_commit_id": "43986d9a78d799499b51ca6d743c429faea41ad0",
    "user": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Great suggestion - I did my best but please let me know if there's a better way",
    "created_at": "2020-08-17T00:12:26Z",
    "updated_at": "2020-08-18T20:14:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471178149",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471178149"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471178149"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471178149/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 112,
    "original_line": 112,
    "side": "RIGHT",
    "in_reply_to_id": 471157548
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471178204",
    "pull_request_review_id": 468108956,
    "id": 471178204,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE3ODIwNA==",
    "diff_hunk": "@@ -106,17 +94,24 @@ def set_test_params(self):\n         self.num_nodes = 1\n \n     def run_test(self):\n+        # Peer that never sends a version. We will send a bunch of messages\n+        # from this node anyway and verify eventual disconnection.\n         no_version_disconnect_node = self.nodes[0].add_p2p_connection(",
    "path": "test/functional/p2p_leak.py",
    "position": null,
    "original_position": 50,
    "commit_id": "ed5cd12869e0691a785199d2d977ce5879095180",
    "original_commit_id": "43986d9a78d799499b51ca6d743c429faea41ad0",
    "user": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Made this change across the test",
    "created_at": "2020-08-17T00:12:47Z",
    "updated_at": "2020-08-18T20:14:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471178204",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471178204"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471178204"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471178204/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 99,
    "side": "RIGHT",
    "in_reply_to_id": 471158011
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471318328",
    "pull_request_review_id": 468261023,
    "id": 471318328,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMxODMyOA==",
    "diff_hunk": "@@ -64,28 +65,15 @@ def on_getblocktxn(self, message): self.bad_message(message)\n     def on_blocktxn(self, message): self.bad_message(message)\n \n \n-# Node that never sends a version. We'll use this to send a bunch of messages\n-# anyway, and eventually get disconnected.\n-class CNodeNoVersionMisbehavior(CLazyNode):\n-    pass\n-\n-\n-# Node that never sends a version. This one just sits idle and hopes to receive\n-# any message (it shouldn't!)\n-class CNodeNoVersionIdle(CLazyNode):\n-    def __init__(self):\n-        super().__init__()\n-\n-\n-# Node that sends a version but not a verack.\n-class CNodeNoVerackIdle(CLazyNode):\n+# Peer that sends a version but not a verack.\n+class CNoVerackIdlePeer(CLazyPeer):\n     def __init__(self):\n         self.version_received = False\n         super().__init__()\n \n     def on_verack(self, message): pass\n     # When version is received, don't reply with a verack. Instead, see if the\n-    # node will give us a message that it shouldn't. This is not an exhaustive\n+    # peer will give us a message that it shouldn't. This is not an exhaustive",
    "path": "test/functional/p2p_leak.py",
    "position": null,
    "original_position": 56,
    "commit_id": "ed5cd12869e0691a785199d2d977ce5879095180",
    "original_commit_id": "6c5733c796ac02da4c0b45a373007f3e453479e3",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is actually waiting to see if the bitcoind node sends an unexpected messaged, so the word 'node' is correct here.",
    "created_at": "2020-08-17T08:21:03Z",
    "updated_at": "2020-08-18T20:14:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471318328",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471318328"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471318328"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471318328/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 76,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471318931",
    "pull_request_review_id": 468261023,
    "id": 471318931,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMxODkzMQ==",
    "diff_hunk": "@@ -27,9 +26,10 @@\n )\n \n DISCOURAGEMENT_THRESHOLD = 100\n+PING_MESSAGE_SIZE = 32\n \n \n-class CLazyNode(P2PInterface):\n+class CLazyPeer(P2PInterface):",
    "path": "test/functional/p2p_leak.py",
    "position": null,
    "original_position": 16,
    "commit_id": "ed5cd12869e0691a785199d2d977ce5879095180",
    "original_commit_id": "6c5733c796ac02da4c0b45a373007f3e453479e3",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Since you're renaming these classes, you should drop the `C` prefix, which isn't the current code style.",
    "created_at": "2020-08-17T08:22:10Z",
    "updated_at": "2020-08-18T20:14:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471318931",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471318931"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471318931"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471318931/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 32,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471671787",
    "pull_request_review_id": 468708218,
    "id": 471671787,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTY3MTc4Nw==",
    "diff_hunk": "@@ -27,9 +26,10 @@\n )\n \n DISCOURAGEMENT_THRESHOLD = 100\n+PING_MESSAGE_SIZE = 32\n \n \n-class CLazyNode(P2PInterface):\n+class CLazyPeer(P2PInterface):",
    "path": "test/functional/p2p_leak.py",
    "position": null,
    "original_position": 16,
    "commit_id": "ed5cd12869e0691a785199d2d977ce5879095180",
    "original_commit_id": "6c5733c796ac02da4c0b45a373007f3e453479e3",
    "user": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2020-08-17T18:12:07Z",
    "updated_at": "2020-08-18T20:14:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471671787",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471671787"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471671787"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471671787/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 32,
    "side": "RIGHT",
    "in_reply_to_id": 471318931
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471671856",
    "pull_request_review_id": 468708517,
    "id": 471671856,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTY3MTg1Ng==",
    "diff_hunk": "@@ -64,28 +65,15 @@ def on_getblocktxn(self, message): self.bad_message(message)\n     def on_blocktxn(self, message): self.bad_message(message)\n \n \n-# Node that never sends a version. We'll use this to send a bunch of messages\n-# anyway, and eventually get disconnected.\n-class CNodeNoVersionMisbehavior(CLazyNode):\n-    pass\n-\n-\n-# Node that never sends a version. This one just sits idle and hopes to receive\n-# any message (it shouldn't!)\n-class CNodeNoVersionIdle(CLazyNode):\n-    def __init__(self):\n-        super().__init__()\n-\n-\n-# Node that sends a version but not a verack.\n-class CNodeNoVerackIdle(CLazyNode):\n+# Peer that sends a version but not a verack.\n+class CNoVerackIdlePeer(CLazyPeer):\n     def __init__(self):\n         self.version_received = False\n         super().__init__()\n \n     def on_verack(self, message): pass\n     # When version is received, don't reply with a verack. Instead, see if the\n-    # node will give us a message that it shouldn't. This is not an exhaustive\n+    # peer will give us a message that it shouldn't. This is not an exhaustive",
    "path": "test/functional/p2p_leak.py",
    "position": null,
    "original_position": 56,
    "commit_id": "ed5cd12869e0691a785199d2d977ce5879095180",
    "original_commit_id": "6c5733c796ac02da4c0b45a373007f3e453479e3",
    "user": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nice catch. Thank you!",
    "created_at": "2020-08-17T18:12:16Z",
    "updated_at": "2020-08-18T20:14:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471671856",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471671856"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471671856"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471671856/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 76,
    "side": "RIGHT",
    "in_reply_to_id": 471318328
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471791558",
    "pull_request_review_id": 468852817,
    "id": 471791558,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc5MTU1OA==",
    "diff_hunk": "@@ -106,39 +95,51 @@ def set_test_params(self):\n         self.num_nodes = 1\n \n     def run_test(self):\n-        no_version_disconnect_node = self.nodes[0].add_p2p_connection(\n-            CNodeNoVersionMisbehavior(), send_version=False, wait_for_verack=False)\n-        no_version_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVersionIdle(), send_version=False, wait_for_verack=False)\n-        no_verack_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVerackIdle(), wait_for_verack=False)\n+        # Peer that never sends a version. We will send a bunch of messages\n+        # from this peer anyway and verify eventual disconnection.\n+        no_version_disconnect_peer = self.nodes[0].add_p2p_connection(\n+            LazyPeer(), send_version=False, wait_for_verack=False)\n+\n+        # Another peer that never sends a version, nor any other messages. It shouldn't receive anything from the node.\n+        no_version_idle_peer = self.nodes[0].add_p2p_connection(LazyPeer(), send_version=False, wait_for_verack=False)\n+\n+        # Peer that sends a version but not a verack.\n+        no_verack_idle_peer = self.nodes[0].add_p2p_connection(NoVerackIdlePeer(), wait_for_verack=False)\n \n-        # Send enough veracks without a message to reach the peer discouragement\n-        # threshold. This should get us disconnected.\n+        # Send enough ping messages (any non-version message will do) prior to sending\n+        # version to reach the peer discouragement threshold. This should get us disconnected.\n         for _ in range(DISCOURAGEMENT_THRESHOLD):\n-            no_version_disconnect_node.send_message(msg_verack())\n+            no_version_disconnect_peer.send_message(msg_ping())\n \n-        # Wait until we got the verack in response to the version. Though, don't wait for the other node to receive the\n+        # Wait until we got the verack in response to the version. Though, don't wait for the node to receive the\n         # verack, since we never sent one\n-        no_verack_idlenode.wait_for_verack()\n+        no_verack_idle_peer.wait_for_verack()\n+\n+        wait_until(lambda: no_version_disconnect_peer.ever_connected, timeout=10, lock=mininode_lock)",
    "path": "test/functional/p2p_leak.py",
    "position": 93,
    "original_position": 93,
    "commit_id": "ed5cd12869e0691a785199d2d977ce5879095180",
    "original_commit_id": "23d6ccfaafd4b281169072122c2bd04ebea86d8f",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "is there a reason this is a `wait_until`? won't this peer start with `ever_connected` as false & here we want to check that it is _still_ false? ",
    "created_at": "2020-08-17T21:43:24Z",
    "updated_at": "2020-08-18T20:14:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471791558",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471791558"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471791558"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471791558/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 117,
    "original_line": 117,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471793753",
    "pull_request_review_id": 468852817,
    "id": 471793753,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc5Mzc1Mw==",
    "diff_hunk": "@@ -106,39 +95,51 @@ def set_test_params(self):\n         self.num_nodes = 1\n \n     def run_test(self):\n-        no_version_disconnect_node = self.nodes[0].add_p2p_connection(\n-            CNodeNoVersionMisbehavior(), send_version=False, wait_for_verack=False)\n-        no_version_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVersionIdle(), send_version=False, wait_for_verack=False)\n-        no_verack_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVerackIdle(), wait_for_verack=False)\n+        # Peer that never sends a version. We will send a bunch of messages\n+        # from this peer anyway and verify eventual disconnection.\n+        no_version_disconnect_peer = self.nodes[0].add_p2p_connection(\n+            LazyPeer(), send_version=False, wait_for_verack=False)\n+\n+        # Another peer that never sends a version, nor any other messages. It shouldn't receive anything from the node.\n+        no_version_idle_peer = self.nodes[0].add_p2p_connection(LazyPeer(), send_version=False, wait_for_verack=False)\n+\n+        # Peer that sends a version but not a verack.\n+        no_verack_idle_peer = self.nodes[0].add_p2p_connection(NoVerackIdlePeer(), wait_for_verack=False)\n \n-        # Send enough veracks without a message to reach the peer discouragement\n-        # threshold. This should get us disconnected.\n+        # Send enough ping messages (any non-version message will do) prior to sending\n+        # version to reach the peer discouragement threshold. This should get us disconnected.\n         for _ in range(DISCOURAGEMENT_THRESHOLD):\n-            no_version_disconnect_node.send_message(msg_verack())\n+            no_version_disconnect_peer.send_message(msg_ping())\n \n-        # Wait until we got the verack in response to the version. Though, don't wait for the other node to receive the\n+        # Wait until we got the verack in response to the version. Though, don't wait for the node to receive the\n         # verack, since we never sent one\n-        no_verack_idlenode.wait_for_verack()\n+        no_verack_idle_peer.wait_for_verack()\n+\n+        wait_until(lambda: no_version_disconnect_peer.ever_connected, timeout=10, lock=mininode_lock)\n+\n+        # Wait until the node receives at least as many pings from no_version_disconnect_peer (peer 0)\n+        # as we sent in the test\n+        wait_until(lambda: self.nodes[0].getpeerinfo()[0]['bytesrecv_per_msg'].get('ping', 0) >=",
    "path": "test/functional/p2p_leak.py",
    "position": null,
    "original_position": 97,
    "commit_id": "ed5cd12869e0691a785199d2d977ce5879095180",
    "original_commit_id": "23d6ccfaafd4b281169072122c2bd04ebea86d8f",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "what is the intent behind this assertion? wouldn't another way to check if this was successful to be checked they are no long connected? (which you do below). is the purpose of this `wait_until` to allow for sync to occur before checking they are disconnected, or something else? ",
    "created_at": "2020-08-17T21:48:37Z",
    "updated_at": "2020-08-18T20:14:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471793753",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471793753"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471793753"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471793753/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 122,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471923102",
    "pull_request_review_id": 469000800,
    "id": 471923102,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTkyMzEwMg==",
    "diff_hunk": "@@ -106,17 +94,24 @@ def set_test_params(self):\n         self.num_nodes = 1\n \n     def run_test(self):\n+        # Peer that never sends a version. We will send a bunch of messages\n+        # from this node anyway and verify eventual disconnection.\n         no_version_disconnect_node = self.nodes[0].add_p2p_connection(\n-            CNodeNoVersionMisbehavior(), send_version=False, wait_for_verack=False)\n-        no_version_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVersionIdle(), send_version=False, wait_for_verack=False)\n+            CLazyNode(), send_version=False, wait_for_verack=False)\n+\n+        # Another peer that never sends a version. Just sits idle and hopes to receive\n+        # any message (it shouldn't!)\n+        no_version_idlenode = self.nodes[0].add_p2p_connection(CLazyNode(), send_version=False, wait_for_verack=False)\n+\n+        # Peer that sends a version but not a verack.\n         no_verack_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVerackIdle(), wait_for_verack=False)\n \n-        # Send enough veracks without a message to reach the peer discouragement\n-        # threshold. This should get us disconnected.\n+        # Send enough ping messages (any non-version message will do) prior to sending\n+        # version to reach the peer discouragement threshold. This should get us disconnected.\n         for _ in range(DISCOURAGEMENT_THRESHOLD):\n-            no_version_disconnect_node.send_message(msg_verack())\n+            no_version_disconnect_node.send_message(msg_ping())\n ",
    "path": "test/functional/p2p_leak.py",
    "position": 83,
    "original_position": 69,
    "commit_id": "ed5cd12869e0691a785199d2d977ce5879095180",
    "original_commit_id": "43986d9a78d799499b51ca6d743c429faea41ad0",
    "user": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@gzhao408 After I added this assertion, the test sporadically failed. You and I discussed it and thought it was perhaps the timeout. But increasing it didn't seem to solve the problem. @amitiuttarwar gave me hints [here](https://github.com/bitcoin/bitcoin/pull/19727#pullrequestreview-468852817). It turns out that occasionally, the peer has been dropped prior to the test making `getpeerinfo` RPC. And at that point, the misbehaving peer isn't even in the peer list.\r\n\r\nSince this particular peer does not do anything else (not even a version call) except overwhelm the node with pings, I think the assertion that makes sure the connection is dropped suffices. Would you agree?",
    "created_at": "2020-08-18T05:29:23Z",
    "updated_at": "2020-08-18T20:14:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471923102",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471923102"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471923102"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471923102/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 112,
    "original_line": 112,
    "side": "RIGHT",
    "in_reply_to_id": 471157548
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471925534",
    "pull_request_review_id": 469003635,
    "id": 471925534,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTkyNTUzNA==",
    "diff_hunk": "@@ -106,39 +95,51 @@ def set_test_params(self):\n         self.num_nodes = 1\n \n     def run_test(self):\n-        no_version_disconnect_node = self.nodes[0].add_p2p_connection(\n-            CNodeNoVersionMisbehavior(), send_version=False, wait_for_verack=False)\n-        no_version_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVersionIdle(), send_version=False, wait_for_verack=False)\n-        no_verack_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVerackIdle(), wait_for_verack=False)\n+        # Peer that never sends a version. We will send a bunch of messages\n+        # from this peer anyway and verify eventual disconnection.\n+        no_version_disconnect_peer = self.nodes[0].add_p2p_connection(\n+            LazyPeer(), send_version=False, wait_for_verack=False)\n+\n+        # Another peer that never sends a version, nor any other messages. It shouldn't receive anything from the node.\n+        no_version_idle_peer = self.nodes[0].add_p2p_connection(LazyPeer(), send_version=False, wait_for_verack=False)\n+\n+        # Peer that sends a version but not a verack.\n+        no_verack_idle_peer = self.nodes[0].add_p2p_connection(NoVerackIdlePeer(), wait_for_verack=False)\n \n-        # Send enough veracks without a message to reach the peer discouragement\n-        # threshold. This should get us disconnected.\n+        # Send enough ping messages (any non-version message will do) prior to sending\n+        # version to reach the peer discouragement threshold. This should get us disconnected.\n         for _ in range(DISCOURAGEMENT_THRESHOLD):\n-            no_version_disconnect_node.send_message(msg_verack())\n+            no_version_disconnect_peer.send_message(msg_ping())\n \n-        # Wait until we got the verack in response to the version. Though, don't wait for the other node to receive the\n+        # Wait until we got the verack in response to the version. Though, don't wait for the node to receive the\n         # verack, since we never sent one\n-        no_verack_idlenode.wait_for_verack()\n+        no_verack_idle_peer.wait_for_verack()\n+\n+        wait_until(lambda: no_version_disconnect_peer.ever_connected, timeout=10, lock=mininode_lock)",
    "path": "test/functional/p2p_leak.py",
    "position": 93,
    "original_position": 93,
    "commit_id": "ed5cd12869e0691a785199d2d977ce5879095180",
    "original_commit_id": "23d6ccfaafd4b281169072122c2bd04ebea86d8f",
    "user": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The peer does start with `ever_connected` set to `False`. Then, if I understand things correctly, when the tcp connection is established, `mininode.py::P2PConnection::connection_made()` will invoke `p2p_leak.py::LazyPeer::on_open()` which will set `no_version_disconnect_peer.ever_connected` to `True`. So I think this `wait_until` is waiting for the transport connection to be established prior to generating a block below. This way it can verify that the peers do not receive leaked information _despite_ an established tcp connection, and not because of connection problems.\r\n\r\nAm I missing something?",
    "created_at": "2020-08-18T05:37:27Z",
    "updated_at": "2020-08-18T20:14:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471925534",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471925534"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471925534"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471925534/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 117,
    "original_line": 117,
    "side": "RIGHT",
    "in_reply_to_id": 471791558
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471926565",
    "pull_request_review_id": 469004923,
    "id": 471926565,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTkyNjU2NQ==",
    "diff_hunk": "@@ -106,39 +95,51 @@ def set_test_params(self):\n         self.num_nodes = 1\n \n     def run_test(self):\n-        no_version_disconnect_node = self.nodes[0].add_p2p_connection(\n-            CNodeNoVersionMisbehavior(), send_version=False, wait_for_verack=False)\n-        no_version_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVersionIdle(), send_version=False, wait_for_verack=False)\n-        no_verack_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVerackIdle(), wait_for_verack=False)\n+        # Peer that never sends a version. We will send a bunch of messages\n+        # from this peer anyway and verify eventual disconnection.\n+        no_version_disconnect_peer = self.nodes[0].add_p2p_connection(\n+            LazyPeer(), send_version=False, wait_for_verack=False)\n+\n+        # Another peer that never sends a version, nor any other messages. It shouldn't receive anything from the node.\n+        no_version_idle_peer = self.nodes[0].add_p2p_connection(LazyPeer(), send_version=False, wait_for_verack=False)\n+\n+        # Peer that sends a version but not a verack.\n+        no_verack_idle_peer = self.nodes[0].add_p2p_connection(NoVerackIdlePeer(), wait_for_verack=False)\n \n-        # Send enough veracks without a message to reach the peer discouragement\n-        # threshold. This should get us disconnected.\n+        # Send enough ping messages (any non-version message will do) prior to sending\n+        # version to reach the peer discouragement threshold. This should get us disconnected.\n         for _ in range(DISCOURAGEMENT_THRESHOLD):\n-            no_version_disconnect_node.send_message(msg_verack())\n+            no_version_disconnect_peer.send_message(msg_ping())\n \n-        # Wait until we got the verack in response to the version. Though, don't wait for the other node to receive the\n+        # Wait until we got the verack in response to the version. Though, don't wait for the node to receive the\n         # verack, since we never sent one\n-        no_verack_idlenode.wait_for_verack()\n+        no_verack_idle_peer.wait_for_verack()\n+\n+        wait_until(lambda: no_version_disconnect_peer.ever_connected, timeout=10, lock=mininode_lock)\n+\n+        # Wait until the node receives at least as many pings from no_version_disconnect_peer (peer 0)\n+        # as we sent in the test\n+        wait_until(lambda: self.nodes[0].getpeerinfo()[0]['bytesrecv_per_msg'].get('ping', 0) >=",
    "path": "test/functional/p2p_leak.py",
    "position": null,
    "original_position": 97,
    "commit_id": "ed5cd12869e0691a785199d2d977ce5879095180",
    "original_commit_id": "23d6ccfaafd4b281169072122c2bd04ebea86d8f",
    "user": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Removed this assertion. Thank you for the hints. I learnt that occasionally the misbehaving peer is removed before this assertion even runs, and so the assertion fails. Since this peer does nothing else except send a 100 pings, i think it suffices to check they are no longer connected (we also check that they did connect at first).",
    "created_at": "2020-08-18T05:40:54Z",
    "updated_at": "2020-08-18T20:14:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471926565",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471926565"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471926565"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471926565/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 122,
    "side": "RIGHT",
    "in_reply_to_id": 471793753
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472088773",
    "pull_request_review_id": 469209098,
    "id": 472088773,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA4ODc3Mw==",
    "diff_hunk": "@@ -27,9 +26,10 @@\n )\n \n DISCOURAGEMENT_THRESHOLD = 100\n+PING_MESSAGE_SIZE = 32",
    "path": "test/functional/p2p_leak.py",
    "position": null,
    "original_position": 12,
    "commit_id": "ed5cd12869e0691a785199d2d977ce5879095180",
    "original_commit_id": "54ebddd5471a072dd3bb7129b5df5f0a6fbfa6ce",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No longer used.",
    "created_at": "2020-08-18T10:51:09Z",
    "updated_at": "2020-08-18T20:14:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r472088773",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472088773"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r472088773"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472088773/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 29,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472314244",
    "pull_request_review_id": 469610519,
    "id": 472314244,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMxNDI0NA==",
    "diff_hunk": "@@ -27,9 +26,10 @@\n )\n \n DISCOURAGEMENT_THRESHOLD = 100\n+PING_MESSAGE_SIZE = 32",
    "path": "test/functional/p2p_leak.py",
    "position": null,
    "original_position": 12,
    "commit_id": "ed5cd12869e0691a785199d2d977ce5879095180",
    "original_commit_id": "54ebddd5471a072dd3bb7129b5df5f0a6fbfa6ce",
    "user": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thank you for the catch.",
    "created_at": "2020-08-18T16:11:05Z",
    "updated_at": "2020-08-18T20:14:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r472314244",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472314244"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r472314244"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472314244/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 29,
    "side": "RIGHT",
    "in_reply_to_id": 472088773
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472421498",
    "pull_request_review_id": 469748231,
    "id": 472421498,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQyMTQ5OA==",
    "diff_hunk": "@@ -106,39 +94,45 @@ def set_test_params(self):\n         self.num_nodes = 1\n \n     def run_test(self):\n-        no_version_disconnect_node = self.nodes[0].add_p2p_connection(\n-            CNodeNoVersionMisbehavior(), send_version=False, wait_for_verack=False)\n-        no_version_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVersionIdle(), send_version=False, wait_for_verack=False)\n-        no_verack_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVerackIdle(), wait_for_verack=False)\n+        # Peer that never sends a version. We will send a bunch of messages\n+        # from this peer anyway and verify eventual disconnection.\n+        no_version_disconnect_peer = self.nodes[0].add_p2p_connection(\n+            LazyPeer(), send_version=False, wait_for_verack=False)\n+\n+        # Another peer that never sends a version, nor any other messages. It shouldn't receive anything from the node.\n+        no_version_idle_peer = self.nodes[0].add_p2p_connection(LazyPeer(), send_version=False, wait_for_verack=False)\n+\n+        # Peer that sends a version but not a verack.\n+        no_verack_idle_peer = self.nodes[0].add_p2p_connection(NoVerackIdlePeer(), wait_for_verack=False)\n \n-        # Send enough veracks without a message to reach the peer discouragement\n-        # threshold. This should get us disconnected.\n+        # Send enough ping messages (any non-version message will do) prior to sending\n+        # version to reach the peer discouragement threshold. This should get us disconnected.\n         for _ in range(DISCOURAGEMENT_THRESHOLD):\n-            no_version_disconnect_node.send_message(msg_verack())\n+            no_version_disconnect_peer.send_message(msg_ping())\n \n-        # Wait until we got the verack in response to the version. Though, don't wait for the other node to receive the\n+        # Wait until we got the verack in response to the version. Though, don't wait for the node to receive the\n         # verack, since we never sent one\n-        no_verack_idlenode.wait_for_verack()\n+        no_verack_idle_peer.wait_for_verack()\n \n-        wait_until(lambda: no_version_disconnect_node.ever_connected, timeout=10, lock=mininode_lock)\n-        wait_until(lambda: no_version_idlenode.ever_connected, timeout=10, lock=mininode_lock)\n-        wait_until(lambda: no_verack_idlenode.version_received, timeout=10, lock=mininode_lock)\n+        wait_until(lambda: no_version_disconnect_peer.ever_connected, timeout=10, lock=mininode_lock)",
    "path": "test/functional/p2p_leak.py",
    "position": 93,
    "original_position": 93,
    "commit_id": "ed5cd12869e0691a785199d2d977ce5879095180",
    "original_commit_id": "5187e84784dca2d4e89da513f6444b136d096867",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "oops. Something seems to have gone wrong with the rebase here. You've changed these lines in the first commit (_test: remove `CNodeNoVersionMisbehavior` from p2p_leak.py _), but the names are only changed above in the third commit (_test: Distinguish between nodes(bitcoind) and peers(mininodes) in p2p_leak.py_), which means that the test fails for the first two commits. We try to make all of our commits clean so that tools like git bisect work.",
    "created_at": "2020-08-18T19:13:06Z",
    "updated_at": "2020-08-18T20:14:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r472421498",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472421498"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r472421498"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472421498/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 117,
    "original_line": 117,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472435194",
    "pull_request_review_id": 469765503,
    "id": 472435194,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQzNTE5NA==",
    "diff_hunk": "@@ -106,39 +95,51 @@ def set_test_params(self):\n         self.num_nodes = 1\n \n     def run_test(self):\n-        no_version_disconnect_node = self.nodes[0].add_p2p_connection(\n-            CNodeNoVersionMisbehavior(), send_version=False, wait_for_verack=False)\n-        no_version_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVersionIdle(), send_version=False, wait_for_verack=False)\n-        no_verack_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVerackIdle(), wait_for_verack=False)\n+        # Peer that never sends a version. We will send a bunch of messages\n+        # from this peer anyway and verify eventual disconnection.\n+        no_version_disconnect_peer = self.nodes[0].add_p2p_connection(\n+            LazyPeer(), send_version=False, wait_for_verack=False)\n+\n+        # Another peer that never sends a version, nor any other messages. It shouldn't receive anything from the node.\n+        no_version_idle_peer = self.nodes[0].add_p2p_connection(LazyPeer(), send_version=False, wait_for_verack=False)\n+\n+        # Peer that sends a version but not a verack.\n+        no_verack_idle_peer = self.nodes[0].add_p2p_connection(NoVerackIdlePeer(), wait_for_verack=False)\n \n-        # Send enough veracks without a message to reach the peer discouragement\n-        # threshold. This should get us disconnected.\n+        # Send enough ping messages (any non-version message will do) prior to sending\n+        # version to reach the peer discouragement threshold. This should get us disconnected.\n         for _ in range(DISCOURAGEMENT_THRESHOLD):\n-            no_version_disconnect_node.send_message(msg_verack())\n+            no_version_disconnect_peer.send_message(msg_ping())\n \n-        # Wait until we got the verack in response to the version. Though, don't wait for the other node to receive the\n+        # Wait until we got the verack in response to the version. Though, don't wait for the node to receive the\n         # verack, since we never sent one\n-        no_verack_idlenode.wait_for_verack()\n+        no_verack_idle_peer.wait_for_verack()\n+\n+        wait_until(lambda: no_version_disconnect_peer.ever_connected, timeout=10, lock=mininode_lock)",
    "path": "test/functional/p2p_leak.py",
    "position": 93,
    "original_position": 93,
    "commit_id": "ed5cd12869e0691a785199d2d977ce5879095180",
    "original_commit_id": "23d6ccfaafd4b281169072122c2bd04ebea86d8f",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "oh I'm sorry, I mixed up true and false \ud83d\ude05 \r\nyes this makes sense- we want to check that `ever_connected` has been switched to true, and allow some buffer time for that to occur.",
    "created_at": "2020-08-18T19:38:34Z",
    "updated_at": "2020-08-18T20:14:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r472435194",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472435194"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r472435194"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472435194/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 117,
    "original_line": 117,
    "side": "RIGHT",
    "in_reply_to_id": 471791558
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472454764",
    "pull_request_review_id": 469795626,
    "id": 472454764,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ1NDc2NA==",
    "diff_hunk": "@@ -106,39 +94,45 @@ def set_test_params(self):\n         self.num_nodes = 1\n \n     def run_test(self):\n-        no_version_disconnect_node = self.nodes[0].add_p2p_connection(\n-            CNodeNoVersionMisbehavior(), send_version=False, wait_for_verack=False)\n-        no_version_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVersionIdle(), send_version=False, wait_for_verack=False)\n-        no_verack_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVerackIdle(), wait_for_verack=False)\n+        # Peer that never sends a version. We will send a bunch of messages\n+        # from this peer anyway and verify eventual disconnection.\n+        no_version_disconnect_peer = self.nodes[0].add_p2p_connection(\n+            LazyPeer(), send_version=False, wait_for_verack=False)\n+\n+        # Another peer that never sends a version, nor any other messages. It shouldn't receive anything from the node.\n+        no_version_idle_peer = self.nodes[0].add_p2p_connection(LazyPeer(), send_version=False, wait_for_verack=False)\n+\n+        # Peer that sends a version but not a verack.\n+        no_verack_idle_peer = self.nodes[0].add_p2p_connection(NoVerackIdlePeer(), wait_for_verack=False)\n \n-        # Send enough veracks without a message to reach the peer discouragement\n-        # threshold. This should get us disconnected.\n+        # Send enough ping messages (any non-version message will do) prior to sending\n+        # version to reach the peer discouragement threshold. This should get us disconnected.\n         for _ in range(DISCOURAGEMENT_THRESHOLD):\n-            no_version_disconnect_node.send_message(msg_verack())\n+            no_version_disconnect_peer.send_message(msg_ping())\n \n-        # Wait until we got the verack in response to the version. Though, don't wait for the other node to receive the\n+        # Wait until we got the verack in response to the version. Though, don't wait for the node to receive the\n         # verack, since we never sent one\n-        no_verack_idlenode.wait_for_verack()\n+        no_verack_idle_peer.wait_for_verack()\n \n-        wait_until(lambda: no_version_disconnect_node.ever_connected, timeout=10, lock=mininode_lock)\n-        wait_until(lambda: no_version_idlenode.ever_connected, timeout=10, lock=mininode_lock)\n-        wait_until(lambda: no_verack_idlenode.version_received, timeout=10, lock=mininode_lock)\n+        wait_until(lambda: no_version_disconnect_peer.ever_connected, timeout=10, lock=mininode_lock)",
    "path": "test/functional/p2p_leak.py",
    "position": 93,
    "original_position": 93,
    "commit_id": "ed5cd12869e0691a785199d2d977ce5879095180",
    "original_commit_id": "5187e84784dca2d4e89da513f6444b136d096867",
    "user": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thank you, @jnewbery. I learnt to:\r\n1. Not rebase latest master every round of review\r\n2. Make sure tests pass on every commit\r\n\r\nI have pushed up fixed commits.\r\n\r\n",
    "created_at": "2020-08-18T20:10:42Z",
    "updated_at": "2020-08-18T20:14:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r472454764",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472454764"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19727#discussion_r472454764"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472454764/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 117,
    "original_line": 117,
    "side": "RIGHT",
    "in_reply_to_id": 472421498
  }
]