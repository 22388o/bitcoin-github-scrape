adamjonas,2020-08-16 00:59:33,"@dhruv welcome! Looks like a great first contribution.\n\nRan tests and everything LGTM, but @jnewbery is probably the guy who you'd want to take a look at this since it was his suggestion.",https://github.com/bitcoin/bitcoin/pull/19727#issuecomment-674463848,674463848,
jnewbery,2020-08-16 08:28:33,Concept ACK. Thanks @dhruv . I'll review soon.,https://github.com/bitcoin/bitcoin/pull/19727#issuecomment-674497791,674497791,
dhruv,2020-08-16 16:23:45,"> @dhruv welcome! Looks like a great first contribution.\n\nThank you for the warm welcome and review, @adamjonas. I am excited to be here.\n",https://github.com/bitcoin/bitcoin/pull/19727#issuecomment-674546961,674546961,
promag,2020-08-17 00:28:21,"> Peers = not bitcoind nodes, but ""mininodes"" that just implement the P2P interface\n\nA node is a peer, a peer can be a node, a peer is not a beer 🍻 ",https://github.com/bitcoin/bitcoin/pull/19727#issuecomment-674600024,674600024,
glozow,2020-08-17 01:23:06,"> A node is a peer, a peer can be a node\n\nOops ya that looks wrong out of context. I meant we shouldn't call mininodes nodes, and ""peer"" is what I recommend as a better name. I edited my comment thank you @promag 🥂 ",https://github.com/bitcoin/bitcoin/pull/19727#issuecomment-674609952,674609952,
dhruv,2020-08-17 18:23:27,@jnewbery Comments addressed. I also increased a `wait_until` timeout in [this commit](https://github.com/bitcoin/bitcoin/pull/19727/commits/23d6ccfaafd4b281169072122c2bd04ebea86d8f) to address [this](https://travis-ci.org/github/bitcoin/bitcoin/jobs/718464987). Please let me know if there is a better way.,https://github.com/bitcoin/bitcoin/pull/19727#issuecomment-675038005,675038005,
dhruv,2020-08-17 21:19:54,"The test is [now failing](https://travis-ci.org/github/bitcoin/bitcoin/jobs/718718043) on a different architecture but passing on the one it failed at the [last time](https://travis-ci.org/github/bitcoin/bitcoin/builds/718464981) (before raising the timeout) which I think confirms that it's a Travis CI timeout issue. However, I feel uncertain that just continuing to raise the timeout to reduce tes",https://github.com/bitcoin/bitcoin/pull/19727#issuecomment-675121446,675121446,
dhruv,2020-08-18 05:44:12,"Thanks for the great review, @amitiuttarwar. I appreciate you taking the time to teach me with hints rather than giving out the answer. I've removed the assertion and made the changes to the commit messages. I had some trouble running `test/lint/commit-script-check.sh` locally so I am going to look more into that in the morning.",https://github.com/bitcoin/bitcoin/pull/19727#issuecomment-675265128,675265128,
practicalswift,2020-08-18 07:36:34,"Concept ACK\n\nWarm welcome as a contributor @dhruv! Hope to see more contributions from you in the future :)",https://github.com/bitcoin/bitcoin/pull/19727#issuecomment-675312044,675312044,
dhruv,2020-08-18 16:11:26,@jnewbery commits squashed,https://github.com/bitcoin/bitcoin/pull/19727#issuecomment-675572815,675572815,
jnewbery,2020-08-19 08:46:22,tested ACK ed5cd12869e0691a785199d2d977ce5879095180,https://github.com/bitcoin/bitcoin/pull/19727#issuecomment-675964455,675964455,
amitiuttarwar,2020-08-19 23:02:28,utACK ed5cd12869,https://github.com/bitcoin/bitcoin/pull/19727#issuecomment-676798566,676798566,
glozow,2020-08-16 20:47:18,"Unrelated to this PR, but is there a better way to sync here? `wait_until` RPC shows something that would happen after a block announcement?",https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471156749,471156749,test/functional/p2p_leak.py
glozow,2020-08-16 20:55:02,"Should we wait until all the pings are received by the node?\ne.g. through \n```py\n`getpeerinfo` -> peer['bytesrecv_per_msg'].get('ping', 0)\n```",https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471157548,471157548,test/functional/p2p_leak.py
glozow,2020-08-16 20:57:48,"nit: I think we should take this opportunity to rename the mininodes to ""peers"" instead of nodes, because they aren't actually bitcoind nodes.\n(nit but I'm sure jnewbery would agree)\n```suggestion\n        no_version_disconnect_peer = self.nodes[0].add_p2p_connection(\n```",https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471158011,471158011,test/functional/p2p_leak.py
glozow,2020-08-16 20:58:33,"```suggestion\n        # Wait until we got the verack in response to the version. Though, don't wait for the node to receive the\n```",https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471158117,471158117,test/functional/p2p_leak.py
glozow,2020-08-16 21:04:03,"nit: same\n```suggestion\n        no_version_idle_peer = self.nodes[0].add_p2p_connection(CLazyNode(), send_version=False, wait_for_verack=False)\n```",https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471158660,471158660,test/functional/p2p_leak.py
glozow,2020-08-16 21:04:42,"nit: same again\n```suggestion\n        no_verack_idle_peer = self.nodes[0].add_p2p_connection(CNodeNoVerackIdle(), wait_for_verack=False)\n```",https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471158709,471158709,test/functional/p2p_leak.py
glozow,2020-08-16 21:12:59,"I like the documentation you've added!\nnit: I think ""hopes"" kind of sounds like it's doing something actively\n```suggestion\n        # Another peer that never sends a version, nor any other messages. It shouldn't receive anything from the node.\n```",https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471159498,471159498,test/functional/p2p_leak.py
dhruv,2020-08-17 00:11:56,Going to take a look at this and follow-up in a separate PR.,https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471178095,471178095,test/functional/p2p_leak.py
dhruv,2020-08-17 00:12:26,Great suggestion - I did my best but please let me know if there's a better way,https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471178149,471178149,test/functional/p2p_leak.py
dhruv,2020-08-17 00:12:47,Made this change across the test,https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471178204,471178204,test/functional/p2p_leak.py
jnewbery,2020-08-17 08:21:03,"This is actually waiting to see if the bitcoind node sends an unexpected messaged, so the word 'node' is correct here.",https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471318328,471318328,test/functional/p2p_leak.py
jnewbery,2020-08-17 08:22:10,"Since you're renaming these classes, you should drop the `C` prefix, which isn't the current code style.",https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471318931,471318931,test/functional/p2p_leak.py
dhruv,2020-08-17 18:12:07,Done,https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471671787,471671787,test/functional/p2p_leak.py
dhruv,2020-08-17 18:12:16,Nice catch. Thank you!,https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471671856,471671856,test/functional/p2p_leak.py
amitiuttarwar,2020-08-17 21:43:24,is there a reason this is a `wait_until`? won't this peer start with `ever_connected` as false & here we want to check that it is _still_ false? ,https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471791558,471791558,test/functional/p2p_leak.py
amitiuttarwar,2020-08-17 21:48:37,"what is the intent behind this assertion? wouldn't another way to check if this was successful to be checked they are no long connected? (which you do below). is the purpose of this `wait_until` to allow for sync to occur before checking they are disconnected, or something else? ",https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471793753,471793753,test/functional/p2p_leak.py
dhruv,2020-08-18 05:29:23,"@gzhao408 After I added this assertion, the test sporadically failed. You and I discussed it and thought it was perhaps the timeout. But increasing it didn't seem to solve the problem. @amitiuttarwar gave me hints [here](https://github.com/bitcoin/bitcoin/pull/19727#pullrequestreview-468852817). It turns out that occasionally, the peer has been dropped prior to the test making `getpeerinfo` RPC. A",https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471923102,471923102,test/functional/p2p_leak.py
dhruv,2020-08-18 05:37:27,"The peer does start with `ever_connected` set to `False`. Then, if I understand things correctly, when the tcp connection is established, `mininode.py::P2PConnection::connection_made()` will invoke `p2p_leak.py::LazyPeer::on_open()` which will set `no_version_disconnect_peer.ever_connected` to `True`. So I think this `wait_until` is waiting for the transport connection to be established prior to g",https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471925534,471925534,test/functional/p2p_leak.py
dhruv,2020-08-18 05:40:54,"Removed this assertion. Thank you for the hints. I learnt that occasionally the misbehaving peer is removed before this assertion even runs, and so the assertion fails. Since this peer does nothing else except send a 100 pings, i think it suffices to check they are no longer connected (we also check that they did connect at first).",https://github.com/bitcoin/bitcoin/pull/19727#discussion_r471926565,471926565,test/functional/p2p_leak.py
jnewbery,2020-08-18 10:51:09,No longer used.,https://github.com/bitcoin/bitcoin/pull/19727#discussion_r472088773,472088773,test/functional/p2p_leak.py
dhruv,2020-08-18 16:11:05,Thank you for the catch.,https://github.com/bitcoin/bitcoin/pull/19727#discussion_r472314244,472314244,test/functional/p2p_leak.py
jnewbery,2020-08-18 19:13:06,"oops. Something seems to have gone wrong with the rebase here. You've changed these lines in the first commit (_test: remove `CNodeNoVersionMisbehavior` from p2p_leak.py _), but the names are only changed above in the third commit (_test: Distinguish between nodes(bitcoind) and peers(mininodes) in p2p_leak.py_), which means that the test fails for the first two commits. We try to make all of our c",https://github.com/bitcoin/bitcoin/pull/19727#discussion_r472421498,472421498,test/functional/p2p_leak.py
amitiuttarwar,2020-08-18 19:38:34,"oh I'm sorry, I mixed up true and false 😅 \nyes this makes sense- we want to check that `ever_connected` has been switched to true, and allow some buffer time for that to occur.",https://github.com/bitcoin/bitcoin/pull/19727#discussion_r472435194,472435194,test/functional/p2p_leak.py
dhruv,2020-08-18 20:10:42,"Thank you, @jnewbery. I learnt to:\n1. Not rebase latest master every round of review\n2. Make sure tests pass on every commit\n\nI have pushed up fixed commits.\n\n",https://github.com/bitcoin/bitcoin/pull/19727#discussion_r472454764,472454764,test/functional/p2p_leak.py
