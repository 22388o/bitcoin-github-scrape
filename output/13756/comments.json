[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/407805855",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-407805855",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 407805855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzgwNTg1NQ==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-25T15:58:55Z",
    "updated_at": "2018-07-25T15:58:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK\r\n\r\nNice work!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/407805855/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/407840763",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-407840763",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 407840763,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzg0MDc2Mw==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-25T17:53:17Z",
    "updated_at": "2018-07-25T22:08:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Perhaps fodder for a separate PR,  but listtransactions and the GUI should get indicators that an incoming payment was dirty when received.  By having that parties that reuse addresses will start getting a frowny-recycle-icon or whatever on their payments, which will increase awareness that their behaviour has downsides.\r\n\r\nEdit: I see I'm repeating myself from an earlier PR. :P",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/407840763/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408022590",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-408022590",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 408022590,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODAyMjU5MA==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-26T08:39:14Z",
    "updated_at": "2018-07-26T08:39:14Z",
    "author_association": "MEMBER",
    "body": "@promag \r\n\r\n> Should we also disallow sending to a dirty address? If we don't then those coins can't be spend if the flag is set, or am I missing something?\r\n\r\nYou can always spend them by using the `allowdirty` flag or by manually selecting them using coin control (via `createrawtx` or via the GUI).\r\n\r\nI do think we should at least warn users about that kind of behaviour though, but it feels like a UI fix that can come later.\r\n\r\n@gmaxwell \r\n\r\n> Perhaps fodder for a separate PR, but listtransactions and the GUI should get indicators that an incoming payment was dirty when received. By having that parties that reuse addresses will start getting a frowny-recycle-icon or whatever on their payments, which will increase awareness that their behaviour has downsides.\r\n\r\nI will see about making that the case for the CLI side of things. I think a GUI side fix would be great, but unfortunately I don't seem to be talented at writing QT code. (Practice, I guess.)\r\n\r\n> Edit: I see I'm repeating myself from an earlier PR. :P\r\n\r\nSorry about that. I felt like it was worthwhile to re-PR since the old PR has a lot of outdated talk that is mitigated by #12257.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408022590/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408036332",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-408036332",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 408036332,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODAzNjMzMg==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-26T09:27:14Z",
    "updated_at": "2019-06-14T20:46:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16215](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16215.html) (gui: Refactor wallet controller activities by promag)\n* [#15937](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15937.html) (WIP: Add loadwallet and createwallet load_on_startup options by ryanofsky)\n* [#15931](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15931.html) (Remove GetDepthInMainChain dependency on locked chain interface by ariard)\n* [#15906](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15906.html) ([wallet] Remove AvailableCoins nMinDepth argument by amitiuttarwar)\n* [#15729](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15729.html) (rpc: Raise error in getbalance if minconf is not zero by promag)\n* [#15450](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15450.html) ([GUI] Create wallet menu option by achow101)\n* [#15064](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15064.html) ([PoC] GUI: Migrate BIP70 merchant info to mapValue[\"to\"] by luke-jr)\n* [#14533](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14533.html) ([WIP] wallet: ensure wallet files are not reused across chains by mrwhythat)\n* [#11413](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/11413.html) ([wallet] [rpc] sendtoaddress/sendmany: Add explicit feerate option by kallewoof)\n* [#10615](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/10615.html) (RPC: Allow rpcauth configs to specify a 4th parameter naming a specific wallet by luke-jr)\n* [#9381](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/9381.html) (Remove CWalletTx merging logic from AddToWallet by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408036332/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408214120",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-408214120",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 408214120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODIxNDEyMA==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-26T19:47:40Z",
    "updated_at": "2018-07-26T19:47:40Z",
    "author_association": "MEMBER",
    "body": "@gmaxwell:\r\n> the GUI should get indicators that an incoming payment was dirty when received\r\n\r\nI think \"dirty\" is a confusing concept. Maybe add an exclamation mark (or a detective icon) next to the transaction and when the user clicks on that, say something like \"This address has been used before, for privacy reasons it's better to create a new address each time you wish to receive coins, even from the same person\".\r\n\r\nDetective icon is a nice hint that there's privacy related information, but an exclamation mark can also be used to explain other potential problems with an incoming transaction, e.g. if the fee is extremely low.\r\n\r\nA parallel measure, that doesn't involve UI changes, could be for coin selection to not spend from dirty addresses as long as possible. And then try to spend them if there's an exact match (no other outputs, no change), perhaps even only if there's no other exact match, depending on how strongly you want to avoid spending these things.\r\n\r\nWhen the user wants to \"spend all\" funds and the dirty amount is less than x%, a dialog could popup and suggest to \"exclude a small amount for privacy reasons\".\r\n\r\nThis is the kind of behavior that if we want people to use it, should be on by default. That can wait for another PR, but it's useful to think about it a bit when designing the RPC.  `-avoidreuse` doesn't really capture the above. It's too aggressive / binary an option to be useful in a GUI IMO.\r\n\r\nTelling people to manually go into coin selection is not a good idea. If a user receives a non-trivial amount, they expect to be able to just spend it with no additional hoops. That means in the current form it's probably never a user friendly default.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408214120/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408217092",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-408217092",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 408217092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODIxNzA5Mg==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-26T19:58:25Z",
    "updated_at": "2018-07-26T19:58:25Z",
    "author_association": "MEMBER",
    "body": "> Maybe add an exclamation mark\r\n\r\n@Sjors I like that, and then a tooltip/popup could explain the warning.\r\n\r\n> `-avoidreuse` doesn't really capture the above. It's too aggressive / binary an option to be useful in a GUI IMO.\r\n\r\n\"Avoid\" is not binary right?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408217092/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408290580",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-408290580",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 408290580,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODI5MDU4MA==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-27T02:15:11Z",
    "updated_at": "2018-07-27T02:15:11Z",
    "author_association": "MEMBER",
    "body": "> I think \"dirty\" is a confusing concept.\r\n\r\nIt's called \"dirty\" in the CLI as well, but there's also a different concept in the wallet code called 'dirty' which is completely unrelated. In short, it may be a good idea to rename this feature, but I can't think of a good name. \"Compromised\" is too long. \"Seen\" is too vague. @luke-jr any ideas?\r\n\r\n> Detective icon is a nice hint that there's privacy related information, but an exclamation mark can also be used to explain other potential problems with an incoming transaction, e.g. if the fee is extremely low.\r\n\r\nI like \"!\" too. If it is used for multiple things, it could take away from the importance though (e.g. user ignores it thinking it's 'just cause of the 1 sat/b fee').\r\n\r\nAs a sidenote, we also should mark UTXOs in coin selection dialog somehow. Same approach? Maybe need to include a warning popup if they mix dirty and clean.\r\n\r\n> A parallel measure, that doesn't involve UI changes, could be for coin selection to not spend from dirty addresses as long as possible. And then try to spend them if there's an exact match (no other outputs, no change), perhaps even only if there's no other exact match, depending on how strongly you want to avoid spending these things.\r\n\r\nI don't know, I think we should always avoid dirty inputs unless the user explicitly marks them as 'clean' or picks them directly using manual coin control.\r\n\r\n> When the user wants to \"spend all\" funds and the dirty amount is less than x%, a dialog could popup and suggest to \"exclude a small amount for privacy reasons\".\r\n\r\nI didn't think about this case, and it's probably fairly common. Then again, I don't think I can do a lot from the CLI side, so this is probably GUI level stuff.\r\n\r\n> This is the kind of behavior that if we want people to use it, should be on by default. That can wait for another PR, but it's useful to think about it a bit when designing the RPC. -avoidreuse doesn't really capture the above. It's too aggressive / binary an option to be useful in a GUI IMO.\r\n\r\nWhat about it is too aggressive?\r\n\r\n> Telling people to manually go into coin selection is not a good idea. If a user receives a non-trivial amount, they expect to be able to just spend it with no additional hoops. That means in the current form it's probably never a user friendly default.\r\n\r\nMaybe it should be sensitive to the amount. A good middle ground may be to, for any input that is X times higher than current dust threshold, that goes to an already spent-from address, to show the user a dialog saying the input is dirty and ask them whether to force-mark it as clean or keep it as dirty.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408290580/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408369264",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-408369264",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 408369264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODM2OTI2NA==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-27T09:45:10Z",
    "updated_at": "2018-07-27T09:47:34Z",
    "author_association": "MEMBER",
    "body": "> What about it is too aggressive?\r\n\r\nA user might receive their entire salary on a reused address. If the current implementation of `-avoidreuse=1` were to become the default, then the UI would need to honor that setting. That means at minimum asking the user for confirmation when they're about to spend these funds. But that would be a very unintuitive question. The Spend screen is not the right place to handle this. Warning the user when they receive such funds is more appropriate.\r\n\r\nThis is where the threshold comes in, but I think it's non-trivial to figure out what the right threshold is, and it might be game-able.\r\n\r\nPerhaps the ! / detective icon in the transaction view could offer the user a choice to manually quarantine funds. Something like \"If you did not expect this transaction someone may be spying on you, waiting for you to spend the coins. Would you like to quarantine them?\"\r\n\r\nYou could even quarantine funds by default based on some heuristic as long as the UI makes that very clear and it's easy for a user to unquarantine it (similar to firewall and anti-virus popups). But maybe try the opt-in quarantine approach first.\r\n\r\nSo then there's `dirty` with a subset of `quarantined`. `-avoidreuse=1` could e.g. not spend `quarantined` without an override, give other `dirty` coins special treatment, but still spend them if needed. That way the setting can be made a default in a future version, in way that the GUI can honor it.\r\n\r\nDepending on what ends up happening, the documentation should perhaps point out that the GUI ignores this setting. Alternatively (for the current implementation) dirty coins could be hidden in the GUI, not shown in coin selection and not used when spending all, when this setting is enabled. Both options require a warning, and neither seems ideal, but updating the GUI in a more sophisticated way is pretty time consuming. ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408369264/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408578113",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-408578113",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 408578113,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODU3ODExMw==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-28T03:00:26Z",
    "updated_at": "2018-07-28T03:00:26Z",
    "author_association": "MEMBER",
    "body": "@Sjors That makes sense to me. It seems like adding this default off (as is the current proposal) makes the most sense.\r\n\r\nGUI work seems like it will be a good deal of work to get right, but in the meantime, there are real (advanced) users who would benefit from having this feature now, even without the GUI/intuitive component.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408578113/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408709347",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-408709347",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 408709347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODcwOTM0Nw==",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-29T22:02:24Z",
    "updated_at": "2018-07-29T22:02:24Z",
    "author_association": "MEMBER",
    "body": "N.B. This doesn't actually fully solve #10065, since transactions received with a dirty address are still shown in the GUI / RPC.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408709347/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408709493",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-408709493",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 408709493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODcwOTQ5Mw==",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-29T22:05:40Z",
    "updated_at": "2018-07-29T22:05:40Z",
    "author_association": "MEMBER",
    "body": "(as for a term... \"reused\" perhaps? I don't know that this flag should be exposed as-is, but more like a \"will never confirm until spent\" status)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408709493/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408742497",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-408742497",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 408742497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODc0MjQ5Nw==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-30T04:20:19Z",
    "updated_at": "2018-07-30T04:20:19Z",
    "author_association": "MEMBER",
    "body": "I think \"reused\" is a bit vague, and doesn't convey the fact it's considered a thing to be avoided if possible, in the way that \"dirty\" does.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408742497/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408758746",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-408758746",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 408758746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODc1ODc0Ng==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-30T06:20:05Z",
    "updated_at": "2018-07-30T06:20:05Z",
    "author_association": "MEMBER",
    "body": "Note: I realized the test was invalid, as `getbalance` would return only clean amount, so I added support to `getbalance` and fixed the tests.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408758746/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408927041",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-408927041",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 408927041,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODkyNzA0MQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-30T16:33:19Z",
    "updated_at": "2018-07-30T16:33:19Z",
    "author_association": "MEMBER",
    "body": "It feels to me that this should be a persistent per-wallet setting, rather than a global config option (I think we should be eliminating the global wallet config options wherever possible. See #13044)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408927041/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408997556",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-408997556",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 408997556,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODk5NzU1Ng==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-30T20:23:22Z",
    "updated_at": "2018-07-30T20:23:22Z",
    "author_association": "MEMBER",
    "body": "I thought that was a PR @jonasschnelli was working on that wasn't merged yet (the no private keys one), but I could be mistaken. Either way, makes sense to make it persistent-per-wallet.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408997556/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/409012354",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-409012354",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 409012354,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTAxMjM1NA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-30T21:13:03Z",
    "updated_at": "2018-07-30T21:13:03Z",
    "author_association": "MEMBER",
    "body": "> a PR @jonasschnelli was working on that wasn't merged yet (the no private keys one)\r\n\r\n#9662 - merged!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/409012354/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/409012769",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-409012769",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 409012769,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTAxMjc2OQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-30T21:14:35Z",
    "updated_at": "2018-07-30T21:14:35Z",
    "author_association": "MEMBER",
    "body": "Cool! I was trying to find that one.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/409012769/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/409805448",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-409805448",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 409805448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTgwNTQ0OA==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-02T04:55:24Z",
    "updated_at": "2018-08-03T08:18:59Z",
    "author_association": "MEMBER",
    "body": "After @gmaxwell comment [here](https://github.com/bitcoin/bitcoin/pull/13801#issuecomment-409262305), the new funding approach would work as follows:\r\n\r\n1. Create output groups of all dirty coins\r\n2. See if any of them fulfil the desired payment amount including fees up to maybe 3x the amount, and return that group if found. MARK CHANGE AS DIRTY\r\n3. Try coin select using only clean coins\r\n\r\nIf user used `-allowdirty` flag, it would simplify to\r\n\r\n1. Try coin select using all coins. (MARK CHANGE AS DIRTY IF 1+ DIRTY COINS WERE USED)\r\n\r\nCurrently the code does step 3 of the first case and partially step 1 of the `-allowdirty` case, but does not mark change as dirty. So:\r\n\r\n* [x] Switch to using persistent per-wallet mode\r\n* [ ] Add check to see if dirty output groups would satisfy payment and use that if so\r\n* [x] Mark change outputs with 1+ dirty coins as their origin as also dirty\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/409805448/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/410163272",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-410163272",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 410163272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDE2MzI3Mg==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-03T06:57:55Z",
    "updated_at": "2018-08-03T06:57:55Z",
    "author_association": "MEMBER",
    "body": "@jnewbery Code is now using the wallet flag feature. The `-avoidreuse` flag now determines the default value for new wallets instead. (Also ping @jonasschnelli regarding wallet flag stuff.)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/410163272/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420186910",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-420186910",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 420186910,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDE4NjkxMA==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-11T08:12:16Z",
    "updated_at": "2018-09-11T08:12:16Z",
    "author_association": "MEMBER",
    "body": "@jnewbery Thanks for review! I believe I've addressed all your nits.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420186910/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420886678",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-420886678",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 420886678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDg4NjY3OA==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-13T05:19:53Z",
    "updated_at": "2018-09-13T05:19:53Z",
    "author_association": "MEMBER",
    "body": "@jnewbery Thanks a lot for all the feedback. I have addressed most of your nits (a few remain up in the air).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420886678/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/433312984",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-433312984",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 433312984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzMxMjk4NA==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-26T07:23:49Z",
    "updated_at": "2018-10-26T07:23:49Z",
    "author_association": "MEMBER",
    "body": "@Sjors Thanks a lot for the detailed review.\r\n\r\n> the flag name `disable_private_keys` in `WALLET_FLAG_MAP` is inconsistent with the output of `getwalletinfo` (`private_keys_enabled`)\r\n\r\nYeah. This is remnant from a different PR which uses both variants. I think it should be resolved, but probably in its own PR.\r\n\r\n> the use of both allow_dirty and avoid_reuse is confusing. I find avoid_reuse more clear.\r\n\r\nMakes sense. Switched to using that.\r\n\r\n> why does `sendtoaddress` have an `allow_dirty` option, but e.g. `sendmany` doesn't?\r\n> why does getbalance have include_dirty, but similar calls don't? (in particular getunconfirmedbalance and getreceivedbylabel)\r\n\r\nI mentioned this in the original PR, but I am basically trying to keep the PR as small as I can, so I am leaving out some RPC tweaks and such. I intend to do a follow-up PR to address these things.\r\n\r\n> `setwalletflag avoid_reuse false` should mark used destinations as dirty or warn that it doesn't\r\n\r\nYou mean `true` I think? `false` would disable the feature. It may be worth it to add a \"warn user if turning <ON|OFF> flag <X>\" mapping to the wallet flags, as I expect other wallet flags may also want to give hints when toggled.\r\n\r\n> don't tease the user by listing disable_private_keys in the help, or add a separate \"Flags which can't be changed: \"\r\n\r\nI guess, yeah. Doesn't feel like a super big deal, and it could be useful to see a list even if you can't change them, but maybe it'll just confuse people. No longer displaying immutable flags in list.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/433312984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/433313427",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-433313427",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 433313427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzMxMzQyNw==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-26T07:25:35Z",
    "updated_at": "2018-10-26T07:25:35Z",
    "author_association": "MEMBER",
    "body": "@Sjors\r\n\r\nI can't comment on the \"Update: it throws now\" comment for some reason. It does throw, but it also returns true/false for successful calls, where false means \"flag unchanged\" and true means \"flag changed\".",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/433313427/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/437433948",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-437433948",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 437433948,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzQzMzk0OA==",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-09T17:29:47Z",
    "updated_at": "2018-11-09T17:29:47Z",
    "author_association": "MEMBER",
    "body": "Dirty should be set when receiving, not when the received coins are then spent.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/437433948/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/437764081",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-437764081",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 437764081,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzc2NDA4MQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-12T05:48:05Z",
    "updated_at": "2018-11-12T05:48:05Z",
    "author_association": "MEMBER",
    "body": "@luke-jr \r\n\r\n> Dirty should be set when receiving, not when the received coins are then spent.\r\n\r\nThis is done in `AddToWallet`, so it looks like it is doing what you are asking for:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/dbfb209900cb6d4e6af3c0eb6ffa96f20f1dd123/src/wallet/wallet.cpp#L880-L886\r\n\r\nThe test `test_fund_send_fund_send` ensures that this behavior is the case, I think. Is it missing something?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/437764081/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/439766907",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-439766907",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 439766907,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTc2NjkwNw==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-19T04:16:07Z",
    "updated_at": "2018-11-19T04:16:07Z",
    "author_association": "MEMBER",
    "body": "@MeshCollider Thanks much for the review!\r\n\r\n> The split into multiple commits is nice but perhaps a little too much, some squashing would be good e.g. \"wallet: add MUTABLE_WALLET_FLAGS\" -> \"wallet/rpc: add setwalletflag RPC command for modifying wallet flag post creation\", etc.\r\n\r\nI will try to squash stuff. Agree about the two commits you mentioned.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/439766907/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/439927756",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-439927756",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 439927756,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTkyNzc1Ng==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-19T15:17:05Z",
    "updated_at": "2018-11-19T15:19:54Z",
    "author_association": "MEMBER",
    "body": "I wrote earlier:\r\n> `setwalletflag avoid_reuse false` should mark used destinations as dirty or warn that it doesn't\r\n\r\nI meant to say `setwalletflag avoid_reuse true` should go through existing transactions in the wallet and mark things dirty as needed. Or the help text and/or release notes should warn that it doesn't.\r\n\r\n`getbalance \"*\" 0 false false` ignores unconfirmed transactions (pre-existing bug?)\r\n\r\n`getreceivedbyaddress tb1q... 0 true` discards the first transaction on the dirty address. That seems non-intuitive.\r\n\r\nA followup PR could add a \"Avoid Reuse\" checkbox to the coin selection dialog in the GUI to reveal dirty coins. Another PR could add a Avoid Reuse checkbox to the Options->Wallet dialog, which would perform `setwalletflag avoid_reuse true` (it would not use QT persisted settings).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/439927756/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/440019200",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-440019200",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 440019200,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDAxOTIwMA==",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?u=447cdc9e2966cbee415545c8ff452954ee1209af&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-19T19:47:44Z",
    "updated_at": "2018-11-19T19:47:44Z",
    "author_association": "MEMBER",
    "body": "@Sjors getbalance is preexisting yep, see #14602",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/440019200/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/440134145",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-440134145",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 440134145,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDEzNDE0NQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-20T04:29:35Z",
    "updated_at": "2018-11-20T04:29:35Z",
    "author_association": "MEMBER",
    "body": "@Sjors Thanks for testing and for valuable feedback.\r\n\r\n> > setwalletflag avoid_reuse false should mark used destinations as dirty or warn that it doesn't\r\n> \r\n> I meant to say setwalletflag avoid_reuse true should go through existing transactions in the wallet and mark things dirty as needed. Or the help text and/or release notes should warn that it doesn't.\r\n\r\nI somehow forgot about this, apologies -- I've added \"caveats\" to the setwalletflags, and also added release notes indicating a rescan is required.\r\n\r\n> getreceivedbyaddress tb1q... 0 true discards the first transaction on the dirty address. That seems non-intuitive.\r\n\r\nThinking about this, I actually don't really see why `getreceivedbyaddress` should even care about reuse. It should just show everything that was received. Dropping that commit.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/440134145/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/442286415",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-442286415",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 442286415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjI4NjQxNQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-28T01:43:22Z",
    "updated_at": "2018-11-28T01:43:47Z",
    "author_association": "MEMBER",
    "body": "@Sjors https://github.com/bitcoin/bitcoin/pull/13756#discussion_r236677538 I can't see what nit this is referring to -- is it the \"use `AVOID_REUSE`, not `AVOIDREUSE`\" one? Then cool, as I believe I addressed that.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/442286415/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/442464663",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-442464663",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 442464663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjQ2NDY2Mw==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-28T14:25:59Z",
    "updated_at": "2018-11-28T14:25:59Z",
    "author_association": "MEMBER",
    "body": "@kallewoof correct, looks like I responded to an outdated comment somehow.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/442464663/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/458917539",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-458917539",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 458917539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODkxNzUzOQ==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-30T11:54:29Z",
    "updated_at": "2019-01-30T11:54:48Z",
    "author_association": "MEMBER",
    "body": "utACK 23a15c5\r\n\r\nChanges since my last review: rebase, some commits reorganised, new RPC help syntax, cosmetic changes: \r\n\r\n```sh\r\nPREV=3bff2a5 N=14 && git range-diff `git merge-base --all HEAD $PREV`...$PREV HEAD~$N...HEAD\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/458917539/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463501498",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-463501498",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 463501498,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzUwMTQ5OA==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-14T06:00:41Z",
    "updated_at": "2019-02-14T06:00:41Z",
    "author_association": "MEMBER",
    "body": "Squashed. @Sjors I believe the code now acts the same way as master, i.e.\r\n\r\n* blank_wallet \u2192 blank_wallet\r\n* disable_privkeys \u2192 disable_privkeys\r\n* blank_wallet | disable_privkeys \u2192 disable_privkeys\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463501498/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463568472",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-463568472",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 463568472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzU2ODQ3Mg==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-14T10:05:37Z",
    "updated_at": "2019-02-14T10:05:37Z",
    "author_association": "MEMBER",
    "body": "@kallewoof you're right, it's the same as on master. utACK ec26b2e",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463568472/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463592765",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-463592765",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 463592765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzU5Mjc2NQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-14T11:25:45Z",
    "updated_at": "2019-02-14T11:25:45Z",
    "author_association": "MEMBER",
    "body": "@Sjors The big question is, does it even matter if both flags are set? I would love to not have those 5 lines of cruft in there, if they don't make a difference. I should hunt down whoever wrote that code and ask, I guess. (And/or verify myself.)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463592765/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463679517",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-463679517",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 463679517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzY3OTUxNw==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-14T15:53:20Z",
    "updated_at": "2019-02-14T15:53:20Z",
    "author_association": "MEMBER",
    "body": "I'm not sure, but perhaps it's better dealt with in a followup to this as well as #14021. cc @achow101\r\n\r\nIt seems to me that when you create a wallet without private keys, as long as there's no additional argument to feed the new wallet with public keys, it's by definition blank. Problem is that the RPC needs a default and we probably don't want to make that too complicated. A sane default for `blank` is true when private keys are disabled, whereas otherwise the sane default for `blank` is false.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463679517/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/469779370",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-469779370",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 469779370,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTc3OTM3MA==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-05T17:42:18Z",
    "updated_at": "2019-03-05T17:42:18Z",
    "author_association": "MEMBER",
    "body": "utACK rebased 74581ff",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/469779370/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481527733",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-481527733",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 481527733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTUyNzczMw==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-10T04:22:18Z",
    "updated_at": "2019-04-23T23:14:25Z",
    "author_association": "MEMBER",
    "body": "~~Rebased, and refactored code based on #15780 cachable accounts (note: first commit here is from that PR).~~ (merged)\r\n\r\nThere is now a isminetype called \"ISMINE_USED\" which is set for the 'allow reuse' caches.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481527733/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486517994",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-486517994",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 486517994,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjUxNzk5NA==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-25T04:46:01Z",
    "updated_at": "2019-04-25T04:51:30Z",
    "author_association": "MEMBER",
    "body": "@Sjors Very good point about `-avoidpartialspends`. I can't believe I forgot about that. I think as you say this flag should be enabled by default if `avoid_reuse` is set in the wallet.\r\n\r\nEdit: enabled, see c831a40.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486517994/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486558648",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-486558648",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 486558648,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjU1ODY0OA==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-25T07:50:09Z",
    "updated_at": "2019-04-25T07:50:09Z",
    "author_association": "MEMBER",
    "body": "Don't forget to update the bitcoind docs for this new param behavior.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486558648/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486929779",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-486929779",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 486929779,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjkyOTc3OQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-26T05:22:45Z",
    "updated_at": "2019-04-26T05:22:45Z",
    "author_association": "MEMBER",
    "body": "@Sjors Right, thanks. Done. I think a follow-up PR should convert `-avoidpartialspends` into a wallet flag that is auto-enabled when `avoid_reuse` flag is set/enabled.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486929779/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/491595311",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-491595311",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 491595311,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTU5NTMxMQ==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-12T13:18:36Z",
    "updated_at": "2019-05-12T13:18:36Z",
    "author_association": "MEMBER",
    "body": "utACK 69ec084, compared to my previous utACK:\r\n* renamed  `SetUsedState` to `SetUsedDestinationState`, and `IsUsed` to `IsUsedDestination`\r\n* param index fixed (@MarcoFalke it would be nice if we didn't need brittle stuff like `request.params[3]` in the RPC)\r\n* improved documentation",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/491595311/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/493829217",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-493829217",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 493829217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MzgyOTIxNw==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-20T03:42:22Z",
    "updated_at": "2019-05-20T03:42:22Z",
    "author_association": "MEMBER",
    "body": "@jnewbery Thanks for the review! It's 100% my responsibility to get people to review, so no worries at all. :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/493829217/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/494164506",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-494164506",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 494164506,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDE2NDUwNg==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-20T21:53:15Z",
    "updated_at": "2019-05-20T21:53:15Z",
    "author_association": "MEMBER",
    "body": "Looking better. Thanks for the quick response to my review. I had just a few more comments inline.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/494164506/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/494227041",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-494227041",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 494227041,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDIyNzA0MQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-21T03:36:10Z",
    "updated_at": "2019-05-21T03:49:04Z",
    "author_association": "MEMBER",
    "body": "@jnewbery Thanks for follow-up review! I believe I addressed everything you brought up.\r\n\r\nEdit: will address the flag comment after @achow101 or someone confirms that it's OK. I also left \"caveat\" as is internally. I can switch that to warning too, but it didn't feel super necessary.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/494227041/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/495480211",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-495480211",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 495480211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTQ4MDIxMQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-24T05:45:31Z",
    "updated_at": "2019-05-29T09:50:22Z",
    "author_association": "MEMBER",
    "body": "@jnewbery Thanks a lot for all the feedback. I updated `listunspent` to (1) show reused UTXOs and (2) show a flag \"reused\" if the wallet has \"avoid_reuse\" enabled.\r\n\r\nI also updated the tests to check that the listunspent results match what you would expect after each send.\r\n\r\n~~Edit: I realized that someone added an `UnsetWalletFlag` method at some point. I've removed that and switched the 4 uses of it in `wallet.cpp` to call `SetWalletFlag(.., false)` instead.~~ (reverted 2019-05-29 18:30 JST)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/495480211/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/495688986",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-495688986",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 495688986,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTY4ODk4Ng==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-24T16:00:41Z",
    "updated_at": "2019-05-24T16:00:41Z",
    "author_association": "MEMBER",
    "body": "utACK 3ae67c42386c7c34b1e4d6bafe0d2233ae4523ea\r\n\r\n@achow101's comment here https://github.com/bitcoin/bitcoin/pull/13756#discussion_r287415117 could be addressed in a follow-up PR.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/495688986/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/496538044",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-496538044",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 496538044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NjUzODA0NA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-28T14:21:40Z",
    "updated_at": "2019-05-28T14:21:40Z",
    "author_association": "MEMBER",
    "body": "utACK 66f3e9780d916d9983bab1c153ab4f303d55bbd0",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/496538044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/496867482",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-496867482",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 496867482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5Njg2NzQ4Mg==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-29T09:50:32Z",
    "updated_at": "2019-05-29T09:50:32Z",
    "author_association": "MEMBER",
    "body": "Removed secondary parameter to `SetWalletFlag` and restored the `UnsetWalletFlag` method, and using that instead now.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/496867482/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/499383533",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-499383533",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 499383533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTM4MzUzMw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-06T07:34:40Z",
    "updated_at": "2019-06-06T07:34:40Z",
    "author_association": "MEMBER",
    "body": "ACK 5ebc6b0eb\r\n\r\n(Reran the rebase from 66f3e97 myself and checked the diff)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/499383533/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/502596462",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-502596462",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 502596462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjU5NjQ2Mg==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-17T08:58:51Z",
    "updated_at": "2019-06-18T07:53:32Z",
    "author_association": "MEMBER",
    "body": "Concept and code-review ACK 5ebc6b0eb267e0552c66fffc5e5afe7df8becf80\r\n\r\nWould be nice if this had final sign-off by @meshcollider as wallet maintainer before merge.\r\n\r\nThanks for working on privacy!\r\n```\r\n//! Forbids inclusion of dirty (previously used) addresses\r\n```\r\nHehe. If this use of \"dirty addresses\" would catch on, maybe people would start avoiding re-using addresses out of a sense of hygiene. One can dream, right.\r\nBut agree with @Sjors that \"dirty payments\" is better to avoid\u2014it's kind of loaded.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/502596462/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/502637251",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-502637251",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 502637251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjYzNzI1MQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-17T11:03:52Z",
    "updated_at": "2019-06-17T11:03:52Z",
    "author_association": "MEMBER",
    "body": "@laanwj https://github.com/bitcoin/bitcoin/commit/f3855781fdc52382b7ccfd0060623fa8ab1541b5 is not the right commit, FYI!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/502637251/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/502749488",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-502749488",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 502749488,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjc0OTQ4OA==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-17T16:11:16Z",
    "updated_at": "2019-06-17T16:11:16Z",
    "author_association": "MEMBER",
    "body": "Since I don't know the wallet code all that well, it would take a lot of time to be able to properly review this, but concept ACK.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/502749488/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/502897843",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-502897843",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 502897843,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjg5Nzg0Mw==",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-18T00:22:13Z",
    "updated_at": "2019-06-18T00:22:13Z",
    "author_association": "MEMBER",
    "body": "@achow101 Might also want to take a final look?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/502897843/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/502991257",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-502991257",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 502991257,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjk5MTI1Nw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-18T07:54:26Z",
    "updated_at": "2019-06-18T07:54:26Z",
    "author_association": "MEMBER",
    "body": "> @laanwj f385578 is not the right commit, FYI!\r\n\r\nThanks for noticing, fixed, that was a copy/paste error I was copying a lot of commit hashes for #16200.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/502991257/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/503084634",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-503084634",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 503084634,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzA4NDYzNA==",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?u=447cdc9e2966cbee415545c8ff452954ee1209af&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-18T12:36:16Z",
    "updated_at": "2019-06-18T12:36:16Z",
    "author_association": "MEMBER",
    "body": "Code review ACK https://github.com/bitcoin/bitcoin/pull/13756/commits/5ebc6b0eb267e0552c66fffc5e5afe7df8becf80\r\n\r\nOnly lightly reviewed the test (8f2e208f7c0468f9ba92bc789a698281b1c81284) but the actual code looks good, thank you @kallewoof for being so proactive in addressing review comments and rebasing! About time this finally gets merged. I'll wait a day for Andrew to review but otherwise I'll merge this tomorrow.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/503084634/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/503179466",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-503179466",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 503179466,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzE3OTQ2Ng==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-18T15:09:45Z",
    "updated_at": "2019-06-18T15:09:45Z",
    "author_association": "MEMBER",
    "body": "ACK 5ebc6b0eb267e0552c66fffc5e5afe7df8becf80 modulo above nits\r\n\r\nReviewed the code and did a couple of manual tests.\r\n\r\nStill not a fan of adding new isminetypes but I won't block this on that.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/503179466/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/503349047",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-503349047",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 503349047,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzM0OTA0Nw==",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?u=447cdc9e2966cbee415545c8ff452954ee1209af&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-18T23:30:22Z",
    "updated_at": "2019-06-18T23:30:22Z",
    "author_association": "MEMBER",
    "body": "The few remaining nits are not worth blocking merge on this, it has waited long enough. A follow-up PR to address them would be good.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/503349047/reactions",
      "total_count": 3,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 3,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/503353207",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#issuecomment-503353207",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
    "id": 503353207,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzM1MzIwNw==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-18T23:52:09Z",
    "updated_at": "2019-06-18T23:52:09Z",
    "author_association": "MEMBER",
    "body": "I took a very brief `range-diff` look at the changes since my last review 69ec084ace48378c2eecd1b6568639ecfb50469b. Not too many changes. Congrats on the merge!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/503353207/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205107183",
    "pull_request_review_id": 140310191,
    "id": 205107183,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTEwNzE4Mw==",
    "diff_hunk": "@@ -0,0 +1,92 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the -avoidreuse config option.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_raises_rpc_error\n+from decimal import Decimal\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+        self.extra_args = [[], ['-avoidreuse=1']]\n+\n+    def reset_balance(self, node, discardaddr):\n+        '''\n+        Throw away all owned coins by the node so it gets a balance of 0.\n+        '''\n+        balance = node.getbalance()\n+        if balance > 0.5:\n+            tosend = '%.5f' % (balance - Decimal(0.01))",
    "path": "test/functional/feature_avoidreuse.py",
    "position": null,
    "original_position": 24,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "cd6e85574eb5c13c6c19b7e79064c039a256e4ef",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Commit \"test: Add test for avoidreuse feature\"\r\n\r\nUse `subtractfeefromamount=true` below instead?",
    "created_at": "2018-07-25T13:28:00Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205107183",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205107183"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205107183"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205107183/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 24,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205108227",
    "pull_request_review_id": 140310191,
    "id": 205108227,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTEwODIyNw==",
    "diff_hunk": "@@ -55,6 +55,7 @@ void WalletInit::AddWalletOptions() const\n {\n     gArgs.AddArg(\"-addresstype\", strprintf(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\", default: \\\"%s\\\")\", FormatOutputType(DEFAULT_ADDRESS_TYPE)), false, OptionsCategory::WALLET);\n     gArgs.AddArg(\"-avoidpartialspends\", strprintf(_(\"Group outputs by address, selecting all or none, instead of selecting on a per-output basis. Privacy is improved as an address is only used once (unless someone sends to it after spending from it), but may result in slightly higher fees as suboptimal coin selection may result due to the added limitation (default: %u)\"), DEFAULT_AVOIDPARTIALSPENDS), false, OptionsCategory::WALLET);\n+    gArgs.AddArg(\"-avoidreuse\", \"Mark addresses which have been used to fund transactions in the past, and avoid reusing these in future funding, except when explicitly requested \" + strprintf(_(\"(default: %u)\"), DEFAULT_AVOIDREUSE), false, OptionsCategory::WALLET);",
    "path": "src/wallet/init.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "8bb7905a9e30a8cd9337d19778f7b40c60f29ab4",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "IMO could be something like `-avoidaddressreuse`.",
    "created_at": "2018-07-25T13:31:04Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205108227",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205108227"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205108227"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205108227/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 58,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205108432",
    "pull_request_review_id": 140310191,
    "id": 205108432,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTEwODQzMg==",
    "diff_hunk": "@@ -34,6 +34,8 @@ class CCoinControl\n     boost::optional<bool> m_signal_bip125_rbf;\n     //! Avoid partial use of funds sent to a given address\n     bool m_avoid_partial_spends;\n+    //! Allows inclusion of dirty (previously used) addresses\n+    bool m_allow_dirty_addresses;",
    "path": "src/wallet/coincontrol.h",
    "position": null,
    "original_position": 5,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "bb8ea84a93191eb7ae8c2097c04de9d632804d19",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Commit \"wallet: add m_allow_dirty_addresses flag to coin control object\"\r\n\r\nCould initialize here?",
    "created_at": "2018-07-25T13:31:38Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205108432",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205108432"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205108432"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205108432/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 38,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205108796",
    "pull_request_review_id": 140310191,
    "id": 205108796,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTEwODc5Ng==",
    "diff_hunk": "@@ -922,6 +922,37 @@ bool CWallet::MarkReplaced(const uint256& originalHash, const uint256& newHash)\n     return success;\n }\n \n+void CWallet::SetDirtyState(const uint256& hash, unsigned int n, bool dirty)\n+{\n+    const CWalletTx* srctx = GetWalletTx(hash);\n+    if (srctx) {\n+        CTxDestination dst;\n+        if (ExtractDestination(srctx->tx->vout[n].scriptPubKey, dst)) {\n+            AssertLockHeld(cs_wallet);",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 10,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "f042d92b9e45d692819820fc0d694442416d8823",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Commit \"wallet: enable avoidreuse feature\"\r\n\r\nWhy is this here? Move up?\r\n\r\nSame in `CWallet::IsDirty` below.",
    "created_at": "2018-07-25T13:32:22Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205108796",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205108796"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205108796"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205108796/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 931,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205109362",
    "pull_request_review_id": 140310191,
    "id": 205109362,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTEwOTM2Mg==",
    "diff_hunk": "@@ -922,6 +922,37 @@ bool CWallet::MarkReplaced(const uint256& originalHash, const uint256& newHash)\n     return success;\n }\n \n+void CWallet::SetDirtyState(const uint256& hash, unsigned int n, bool dirty)\n+{\n+    const CWalletTx* srctx = GetWalletTx(hash);\n+    if (srctx) {",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 7,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "f042d92b9e45d692819820fc0d694442416d8823",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Commit \"wallet: enable avoidreuse feature\"\r\n\r\nInstead of nesting, could early return here:\r\n\r\n```cpp\r\nif (!srctx) return;\r\n```\r\n\r\nSame in `CWallet::IsDirty` below.",
    "created_at": "2018-07-25T13:33:47Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205109362",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205109362"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205109362"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205109362/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 928,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205110349",
    "pull_request_review_id": 140310191,
    "id": 205110349,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTExMDM0OQ==",
    "diff_hunk": "@@ -1940,6 +1979,7 @@ CAmount CWalletTx::GetImmatureCredit(bool fUseCache) const\n \n CAmount CWalletTx::GetAvailableCredit(bool fUseCache, const isminefilter& filter) const\n {\n+    bool allow_dirty_addresses = !gArgs.GetBoolArg(\"-avoidreuse\", DEFAULT_AVOIDREUSE);",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 57,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "f042d92b9e45d692819820fc0d694442416d8823",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Commit \"wallet: enable avoidreuse feature\"\r\n\r\nCould add a `g_allow_dirty_addresses` instead?",
    "created_at": "2018-07-25T13:36:14Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205110349",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205110349"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205110349"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205110349/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1980,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205365896",
    "pull_request_review_id": 140619323,
    "id": 205365896,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTM2NTg5Ng==",
    "diff_hunk": "@@ -34,6 +34,8 @@ class CCoinControl\n     boost::optional<bool> m_signal_bip125_rbf;\n     //! Avoid partial use of funds sent to a given address\n     bool m_avoid_partial_spends;\n+    //! Allows inclusion of dirty (previously used) addresses\n+    bool m_allow_dirty_addresses;",
    "path": "src/wallet/coincontrol.h",
    "position": null,
    "original_position": 5,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "bb8ea84a93191eb7ae8c2097c04de9d632804d19",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Everything is initialized in `SetNull()`. In some cases, you can't initialize in the `.h` file because no `gArgs` available at compile time.",
    "created_at": "2018-07-26T08:10:27Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205365896",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205365896"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205365896"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205365896/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 38,
    "side": "RIGHT",
    "in_reply_to_id": 205108432
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205366021",
    "pull_request_review_id": 140619484,
    "id": 205366021,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTM2NjAyMQ==",
    "diff_hunk": "@@ -922,6 +922,37 @@ bool CWallet::MarkReplaced(const uint256& originalHash, const uint256& newHash)\n     return success;\n }\n \n+void CWallet::SetDirtyState(const uint256& hash, unsigned int n, bool dirty)\n+{\n+    const CWalletTx* srctx = GetWalletTx(hash);\n+    if (srctx) {\n+        CTxDestination dst;\n+        if (ExtractDestination(srctx->tx->vout[n].scriptPubKey, dst)) {\n+            AssertLockHeld(cs_wallet);",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 10,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "f042d92b9e45d692819820fc0d694442416d8823",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This may be artifact from previous iteration. Removing.",
    "created_at": "2018-07-26T08:10:57Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205366021",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205366021"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205366021"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205366021/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 931,
    "side": "RIGHT",
    "in_reply_to_id": 205108796
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205366264",
    "pull_request_review_id": 140619751,
    "id": 205366264,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTM2NjI2NA==",
    "diff_hunk": "@@ -1940,6 +1979,7 @@ CAmount CWalletTx::GetImmatureCredit(bool fUseCache) const\n \n CAmount CWalletTx::GetAvailableCredit(bool fUseCache, const isminefilter& filter) const\n {\n+    bool allow_dirty_addresses = !gArgs.GetBoolArg(\"-avoidreuse\", DEFAULT_AVOIDREUSE);",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 57,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "f042d92b9e45d692819820fc0d694442416d8823",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Might be worth it, yeah.",
    "created_at": "2018-07-26T08:11:49Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205366264",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205366264"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205366264"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205366264/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1980,
    "side": "RIGHT",
    "in_reply_to_id": 205110349
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205371182",
    "pull_request_review_id": 140625576,
    "id": 205371182,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTM3MTE4Mg==",
    "diff_hunk": "@@ -922,6 +922,37 @@ bool CWallet::MarkReplaced(const uint256& originalHash, const uint256& newHash)\n     return success;\n }\n \n+void CWallet::SetDirtyState(const uint256& hash, unsigned int n, bool dirty)\n+{\n+    const CWalletTx* srctx = GetWalletTx(hash);\n+    if (srctx) {",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 7,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "f042d92b9e45d692819820fc0d694442416d8823",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fine for `SetDirtyState` but `IsDirty` returns `false` in two cases; (1) `!srctx` and (2) `!ExtractDestination(..)`, so fall-through feels cleaner.",
    "created_at": "2018-07-26T08:29:11Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205371182",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205371182"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r205371182"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205371182/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 928,
    "side": "RIGHT",
    "in_reply_to_id": 205109362
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214523103",
    "pull_request_review_id": 151603454,
    "id": 214523103,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUyMzEwMw==",
    "diff_hunk": "@@ -0,0 +1,129 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoidreuse feature.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+        self.extra_args = [[], ['-avoidreuse=1']]\n+\n+    def reset_balance(self, node, discardaddr):\n+        '''\n+        Throw away all owned coins by the node so it gets a balance of 0.\n+        '''\n+        balance = node.getbalance(include_dirty=True)\n+        if balance > 0.5:\n+            node.sendtoaddress(address=discardaddr, amount=balance, subtractfeefromamount=True, allow_dirty=True)\n+\n+    def run_test(self):\n+        '''\n+        Set up initial chain and run tests defined below\n+        '''\n+\n+        self.test_persistence()\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_send()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_senddirty()\n+\n+    def test_persistence(self):\n+        '''\n+        Test that wallet files persist the -avoidreuse flag.\n+        '''\n+        # TODO: Using -avoidreuse as startup option SHOULD cause the wallet to\n+        # TODO: have the avoidreuse flag set already, but this is not the case\n+        # Configure node 1 to use avoidreuse\n+        self.nodes[1].setwalletflag('avoidreuse')\n+\n+        # Flags should be node1.avoidreuse=false, node2.avoidreuse=true\n+        assert_equal(self.nodes[0].getwalletflags('avoidreuse'), False)\n+        assert_equal(self.nodes[1].getwalletflags('avoidreuse'), True)\n+\n+        # Stop and restart node 1 without -avoidreuse flag\n+        self.stop_node(1)\n+        self.start_node(1)\n+        connect_nodes_bi(self.nodes, 0, 1)\n+\n+        # Flags should still be node1.avoidreuse=false, node2.avoidreuse=true\n+        assert_equal(self.nodes[0].getwalletflags('avoidreuse'), False)\n+        assert_equal(self.nodes[1].getwalletflags('avoidreuse'), True)\n+\n+    def test_fund_send_fund_send(self):\n+        '''\n+        Test the simple case where [1] generates a new address A, then\n+        [0] sends 10 BTC to A.\n+        [1] spends 5 BTC from A. (leaving roughly 4 BTC useable)",
    "path": "test/functional/feature_avoidreuse.py",
    "position": null,
    "original_position": 76,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "483482b35d3cf917eec5439c957b1aecdf776dd3",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Typo found by `codespell`: useable",
    "created_at": "2018-09-01T21:10:33Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r214523103",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214523103"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r214523103"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214523103/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 76,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216177810",
    "pull_request_review_id": 153601246,
    "id": 216177810,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjE3NzgxMA==",
    "diff_hunk": "@@ -0,0 +1,129 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoidreuse feature.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+        self.extra_args = [[], ['-avoidreuse=1']]\n+\n+    def reset_balance(self, node, discardaddr):\n+        '''\n+        Throw away all owned coins by the node so it gets a balance of 0.\n+        '''\n+        balance = node.getbalance(include_dirty=True)\n+        if balance > 0.5:\n+            node.sendtoaddress(address=discardaddr, amount=balance, subtractfeefromamount=True, allow_dirty=True)\n+\n+    def run_test(self):\n+        '''\n+        Set up initial chain and run tests defined below\n+        '''\n+\n+        self.test_persistence()\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_send()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_senddirty()\n+\n+    def test_persistence(self):\n+        '''\n+        Test that wallet files persist the -avoidreuse flag.\n+        '''\n+        # TODO: Using -avoidreuse as startup option SHOULD cause the wallet to\n+        # TODO: have the avoidreuse flag set already, but this is not the case\n+        # Configure node 1 to use avoidreuse\n+        self.nodes[1].setwalletflag('avoidreuse')\n+\n+        # Flags should be node1.avoidreuse=false, node2.avoidreuse=true\n+        assert_equal(self.nodes[0].getwalletflags('avoidreuse'), False)\n+        assert_equal(self.nodes[1].getwalletflags('avoidreuse'), True)\n+\n+        # Stop and restart node 1 without -avoidreuse flag\n+        self.stop_node(1)\n+        self.start_node(1)\n+        connect_nodes_bi(self.nodes, 0, 1)\n+\n+        # Flags should still be node1.avoidreuse=false, node2.avoidreuse=true\n+        assert_equal(self.nodes[0].getwalletflags('avoidreuse'), False)\n+        assert_equal(self.nodes[1].getwalletflags('avoidreuse'), True)\n+\n+    def test_fund_send_fund_send(self):\n+        '''\n+        Test the simple case where [1] generates a new address A, then\n+        [0] sends 10 BTC to A.\n+        [1] spends 5 BTC from A. (leaving roughly 4 BTC useable)",
    "path": "test/functional/feature_avoidreuse.py",
    "position": null,
    "original_position": 76,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "483482b35d3cf917eec5439c957b1aecdf776dd3",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> Usable can also be spelled useable, with an e in the middle: both are correct.\r\n\r\nhttps://english.stackexchange.com/questions/69709/is-useable-preferred-in-certain-regions-or-just-an-alternate-spelling-of-usa",
    "created_at": "2018-09-10T00:49:40Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216177810",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216177810"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216177810"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216177810/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 76,
    "side": "RIGHT",
    "in_reply_to_id": 214523103
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216448479",
    "pull_request_review_id": 153932244,
    "id": 216448479,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjQ0ODQ3OQ==",
    "diff_hunk": "@@ -55,6 +55,7 @@ void WalletInit::AddWalletOptions() const\n {\n     gArgs.AddArg(\"-addresstype\", strprintf(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\", default: \\\"%s\\\")\", FormatOutputType(DEFAULT_ADDRESS_TYPE)), false, OptionsCategory::WALLET);\n     gArgs.AddArg(\"-avoidpartialspends\", strprintf(_(\"Group outputs by address, selecting all or none, instead of selecting on a per-output basis. Privacy is improved as an address is only used once (unless someone sends to it after spending from it), but may result in slightly higher fees as suboptimal coin selection may result due to the added limitation (default: %u)\"), DEFAULT_AVOIDPARTIALSPENDS), false, OptionsCategory::WALLET);\n+    gArgs.AddArg(\"-avoidreuse\", \"Enable the 'avoid reuse' flag for new wallets created. When enabled, wallets will mark addresses which have been used to fund transactions in the past, and avoid reusing these in future funding, except when explicitly requested \" + strprintf(_(\"(default: %u)\"), DEFAULT_AVOIDREUSE), false, OptionsCategory::WALLET);",
    "path": "src/wallet/init.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "3ab698c0723b32b4858ff537a7f5fd38a3883bfd",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "My personal preference would be to remove this command line argument, since it's possible to create a wallet with this flag using the `createwallet` RPC, or update an existing wallet's flag with `setwalletflag`. I think it's better to remove it from here because:\r\n- it's better to have one way to do things\r\n- in general, I think we should be aiming to reduce the number of command line arguments, especially in the wallet (see https://github.com/bitcoin/bitcoin/issues/13044)",
    "created_at": "2018-09-10T19:43:24Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216448479",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216448479"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216448479"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216448479/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 58,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216448707",
    "pull_request_review_id": 153932244,
    "id": 216448707,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjQ0ODcwNw==",
    "diff_hunk": "@@ -227,8 +228,11 @@ bool WalletInit::Open() const\n         return true;\n     }\n \n+    uint64_t wallet_creation_flags =",
    "path": "src/wallet/init.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "3ab698c0723b32b4858ff537a7f5fd38a3883bfd",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'd prefer to remove this, and make the flag settable through the `createwallet` and `setwalletflag` options (see how `WALLET_FLAG_DISABLE_PRIVATE_KEYS` is set)",
    "created_at": "2018-09-10T19:44:16Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216448707",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216448707"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216448707"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216448707/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 231,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216449453",
    "pull_request_review_id": 153932244,
    "id": 216449453,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjQ0OTQ1Mw==",
    "diff_hunk": "@@ -292,7 +292,7 @@ static UniValue setlabel(const JSONRPCRequest& request)\n \n static CTransactionRef SendMoney(CWallet * const pwallet, const CTxDestination &address, CAmount nValue, bool fSubtractFeeFromAmount, const CCoinControl& coin_control, mapValue_t mapValue)\n {\n-    CAmount curBalance = pwallet->GetBalance();\n+    CAmount curBalance = pwallet->GetBalance(ISMINE_SPENDABLE, 0, coin_control.m_allow_dirty_addresses);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "3ab698c0723b32b4858ff537a7f5fd38a3883bfd",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think this change should be in the _wallet/rpc: add allow_dirty option to sendtoaddress_ commit (not the _wallet/rpc: add include_dirty flag to getbalance command_ commit)",
    "created_at": "2018-09-10T19:46:58Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216449453",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216449453"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216449453"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216449453/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 295,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216449629",
    "pull_request_review_id": 153932244,
    "id": 216449629,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjQ0OTYyOQ==",
    "diff_hunk": "@@ -2540,15 +2554,113 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static std::map<std::string,WalletFlags> walletflagmap{",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 102,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "3ab698c0723b32b4858ff537a7f5fd38a3883bfd",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can we define these in `wallet.h`, so there's only one place to change when adding wallet flags?",
    "created_at": "2018-09-10T19:47:30Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216449629",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216449629"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216449629"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216449629/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2557,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216449835",
    "pull_request_review_id": 153932244,
    "id": 216449835,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjQ0OTgzNQ==",
    "diff_hunk": "@@ -2540,15 +2554,113 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static std::map<std::string,WalletFlags> walletflagmap{\n+    {\"avoidreuse\", WALLET_FLAG_AVOIDREUSE},\n+    {\"disable_private_keys\", WALLET_FLAG_DISABLE_PRIVATE_KEYS},\n+};\n+\n+static UniValue getwalletflags(const JSONRPCRequest& request)",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 107,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "3ab698c0723b32b4858ff537a7f5fd38a3883bfd",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'd prefer not to add this new method. Can we just add a `wallet_flags` field to the `getwalletinfo` return object?",
    "created_at": "2018-09-10T19:48:15Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216449835",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216449835"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216449835"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216449835/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2562,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216450254",
    "pull_request_review_id": 153932244,
    "id": 216450254,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjQ1MDI1NA==",
    "diff_hunk": "@@ -2540,15 +2554,113 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static std::map<std::string,WalletFlags> walletflagmap{\n+    {\"avoidreuse\", WALLET_FLAG_AVOIDREUSE},\n+    {\"disable_private_keys\", WALLET_FLAG_DISABLE_PRIVATE_KEYS},\n+};\n+\n+static UniValue getwalletflags(const JSONRPCRequest& request)\n {\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 1) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"getwalletflags ( flag )\\n\"\n+            \"\\nReturn the state of the (given) wallet flag(s) for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, optional) The name of the flag. Current available flags: \" + flags + \"\\n\"\n+            \"\\nResult (default):\\n\"\n+            \"{\\n\"\n+            \"  \\\"flagname\\\": true|false,  (string:bool pair) the name of the flag and its state\"\n+            \"}\\n\"\n+            \"\\nResult (flag=XXX)\\n\"\n+            \"true|false                 (bool) the state of the given flag\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getwalletflags\", \"\")\n+            + HelpExampleRpc(\"getwalletflag\", \"\")\n+        );\n+    }\n+\n+    if (request.params[0].isNull()) {\n+        UniValue res(UniValue::VOBJ);\n+        for (const auto& it : walletflagmap) {\n+            res.pushKV(it.first, pwallet->IsWalletFlagSet(it.second));\n+        }\n+\n+        return res;\n+    }\n+\n+    std::string flag = request.params[0].get_str();\n+\n+    if (!walletflagmap.count(flag)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unknown wallet flag %s\", flag));\n+    }\n+\n+    return pwallet->IsWalletFlagSet(walletflagmap.at(flag));\n+}\n+\n+static UniValue setwalletflag(const JSONRPCRequest& request)\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"setwalletflag flag ( state )\\n\"\n+            \"\\nChange the state of the given wallet flag for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, required) The name of the flag to change. Current available flags: \" + flags + \"\\n\"\n+            \"2. value   (boolean, optional, default=true) The new state.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false (boolean) True or false, reflecting whether the flag was modified (true), or (false) whether it was already set to the given state\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setwalletflag\", \"avoidreuse\")\n+            + HelpExampleRpc(\"setwalletflag\", \"\\\"avoidreuse\\\"\")\n+        );\n+    }\n+\n+    std::string flag = request.params[0].get_str();\n+    bool value = request.params[1].isNull() || request.params[1].get_bool();\n+\n+    if (!walletflagmap.count(flag)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unknown wallet flag %s\", flag));\n+    }\n+\n+    if (walletflagmap.at(flag) >= (1ULL << 32)) {",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 187,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "3ab698c0723b32b4858ff537a7f5fd38a3883bfd",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think this is always necessarily going to be true. The meaning of the upper section/lower section flags are which we can safely ignore if we don't know the meaning of (ie if we open a newer wallet on an older client), not whether the flags are mutable or not.",
    "created_at": "2018-09-10T19:49:45Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216450254",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216450254"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216450254"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216450254/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2642,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216451827",
    "pull_request_review_id": 153932244,
    "id": 216451827,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjQ1MTgyNw==",
    "diff_hunk": "@@ -94,6 +94,7 @@\n     'rpc_getchaintips.py',\n     'interface_rest.py',\n     'mempool_spend_coinbase.py',\n+    'feature_avoidreuse.py',",
    "path": "test/functional/test_runner.py",
    "position": null,
    "original_position": 4,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "3ab698c0723b32b4858ff537a7f5fd38a3883bfd",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should be `wallet_avoidreuse.py`",
    "created_at": "2018-09-10T19:54:48Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216451827",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216451827"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216451827"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216451827/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 97,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216564497",
    "pull_request_review_id": 154072713,
    "id": 216564497,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjU2NDQ5Nw==",
    "diff_hunk": "@@ -55,6 +55,7 @@ void WalletInit::AddWalletOptions() const\n {\n     gArgs.AddArg(\"-addresstype\", strprintf(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\", default: \\\"%s\\\")\", FormatOutputType(DEFAULT_ADDRESS_TYPE)), false, OptionsCategory::WALLET);\n     gArgs.AddArg(\"-avoidpartialspends\", strprintf(_(\"Group outputs by address, selecting all or none, instead of selecting on a per-output basis. Privacy is improved as an address is only used once (unless someone sends to it after spending from it), but may result in slightly higher fees as suboptimal coin selection may result due to the added limitation (default: %u)\"), DEFAULT_AVOIDPARTIALSPENDS), false, OptionsCategory::WALLET);\n+    gArgs.AddArg(\"-avoidreuse\", \"Enable the 'avoid reuse' flag for new wallets created. When enabled, wallets will mark addresses which have been used to fund transactions in the past, and avoid reusing these in future funding, except when explicitly requested \" + strprintf(_(\"(default: %u)\"), DEFAULT_AVOIDREUSE), false, OptionsCategory::WALLET);",
    "path": "src/wallet/init.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "3ab698c0723b32b4858ff537a7f5fd38a3883bfd",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Makes sense. And resolves one TODO (the startup option is ignored for \"fresh\" nodes in the test framework).",
    "created_at": "2018-09-11T07:07:09Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216564497",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216564497"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216564497"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216564497/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 58,
    "side": "RIGHT",
    "in_reply_to_id": 216448479
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216564636",
    "pull_request_review_id": 154072892,
    "id": 216564636,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjU2NDYzNg==",
    "diff_hunk": "@@ -227,8 +228,11 @@ bool WalletInit::Open() const\n         return true;\n     }\n \n+    uint64_t wallet_creation_flags =",
    "path": "src/wallet/init.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "3ab698c0723b32b4858ff537a7f5fd38a3883bfd",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Above change resulted in its removal.",
    "created_at": "2018-09-11T07:07:54Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216564636",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216564636"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216564636"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216564636/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 231,
    "side": "RIGHT",
    "in_reply_to_id": 216448707
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216564670",
    "pull_request_review_id": 154072935,
    "id": 216564670,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjU2NDY3MA==",
    "diff_hunk": "@@ -292,7 +292,7 @@ static UniValue setlabel(const JSONRPCRequest& request)\n \n static CTransactionRef SendMoney(CWallet * const pwallet, const CTxDestination &address, CAmount nValue, bool fSubtractFeeFromAmount, const CCoinControl& coin_control, mapValue_t mapValue)\n {\n-    CAmount curBalance = pwallet->GetBalance();\n+    CAmount curBalance = pwallet->GetBalance(ISMINE_SPENDABLE, 0, coin_control.m_allow_dirty_addresses);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "3ab698c0723b32b4858ff537a7f5fd38a3883bfd",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oops, yep. Thanks.",
    "created_at": "2018-09-11T07:08:03Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216564670",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216564670"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216564670"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216564670/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 295,
    "side": "RIGHT",
    "in_reply_to_id": 216449453
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216565279",
    "pull_request_review_id": 154073660,
    "id": 216565279,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjU2NTI3OQ==",
    "diff_hunk": "@@ -2540,15 +2554,113 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static std::map<std::string,WalletFlags> walletflagmap{\n+    {\"avoidreuse\", WALLET_FLAG_AVOIDREUSE},\n+    {\"disable_private_keys\", WALLET_FLAG_DISABLE_PRIVATE_KEYS},\n+};\n+\n+static UniValue getwalletflags(const JSONRPCRequest& request)\n {\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 1) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"getwalletflags ( flag )\\n\"\n+            \"\\nReturn the state of the (given) wallet flag(s) for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, optional) The name of the flag. Current available flags: \" + flags + \"\\n\"\n+            \"\\nResult (default):\\n\"\n+            \"{\\n\"\n+            \"  \\\"flagname\\\": true|false,  (string:bool pair) the name of the flag and its state\"\n+            \"}\\n\"\n+            \"\\nResult (flag=XXX)\\n\"\n+            \"true|false                 (bool) the state of the given flag\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getwalletflags\", \"\")\n+            + HelpExampleRpc(\"getwalletflag\", \"\")\n+        );\n+    }\n+\n+    if (request.params[0].isNull()) {\n+        UniValue res(UniValue::VOBJ);\n+        for (const auto& it : walletflagmap) {\n+            res.pushKV(it.first, pwallet->IsWalletFlagSet(it.second));\n+        }\n+\n+        return res;\n+    }\n+\n+    std::string flag = request.params[0].get_str();\n+\n+    if (!walletflagmap.count(flag)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unknown wallet flag %s\", flag));\n+    }\n+\n+    return pwallet->IsWalletFlagSet(walletflagmap.at(flag));\n+}\n+\n+static UniValue setwalletflag(const JSONRPCRequest& request)\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"setwalletflag flag ( state )\\n\"\n+            \"\\nChange the state of the given wallet flag for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, required) The name of the flag to change. Current available flags: \" + flags + \"\\n\"\n+            \"2. value   (boolean, optional, default=true) The new state.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false (boolean) True or false, reflecting whether the flag was modified (true), or (false) whether it was already set to the given state\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setwalletflag\", \"avoidreuse\")\n+            + HelpExampleRpc(\"setwalletflag\", \"\\\"avoidreuse\\\"\")\n+        );\n+    }\n+\n+    std::string flag = request.params[0].get_str();\n+    bool value = request.params[1].isNull() || request.params[1].get_bool();\n+\n+    if (!walletflagmap.count(flag)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unknown wallet flag %s\", flag));\n+    }\n+\n+    if (walletflagmap.at(flag) >= (1ULL << 32)) {",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 187,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "3ab698c0723b32b4858ff537a7f5fd38a3883bfd",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ahh. Got it.",
    "created_at": "2018-09-11T07:11:02Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216565279",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216565279"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216565279"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216565279/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2642,
    "side": "RIGHT",
    "in_reply_to_id": 216450254
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216565622",
    "pull_request_review_id": 154073996,
    "id": 216565622,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjU2NTYyMg==",
    "diff_hunk": "@@ -2540,15 +2554,113 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static std::map<std::string,WalletFlags> walletflagmap{\n+    {\"avoidreuse\", WALLET_FLAG_AVOIDREUSE},\n+    {\"disable_private_keys\", WALLET_FLAG_DISABLE_PRIVATE_KEYS},\n+};\n+\n+static UniValue getwalletflags(const JSONRPCRequest& request)",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 107,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "3ab698c0723b32b4858ff537a7f5fd38a3883bfd",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Removing it. There's already a \"private_keys_enabled\" and \"avoid_reuse\" entry in the returned value, so I don't think a wallet_flags is even necessary.",
    "created_at": "2018-09-11T07:12:19Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216565622",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216565622"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216565622"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216565622/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2562,
    "side": "RIGHT",
    "in_reply_to_id": 216449835
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216572474",
    "pull_request_review_id": 154082243,
    "id": 216572474,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjU3MjQ3NA==",
    "diff_hunk": "@@ -94,6 +94,7 @@\n     'rpc_getchaintips.py',\n     'interface_rest.py',\n     'mempool_spend_coinbase.py',\n+    'feature_avoidreuse.py',",
    "path": "test/functional/test_runner.py",
    "position": null,
    "original_position": 4,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "3ab698c0723b32b4858ff537a7f5fd38a3883bfd",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Renamed",
    "created_at": "2018-09-11T07:40:06Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216572474",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216572474"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r216572474"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216572474/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 97,
    "side": "RIGHT",
    "in_reply_to_id": 216451827
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217068348",
    "pull_request_review_id": 154694453,
    "id": 217068348,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzA2ODM0OA==",
    "diff_hunk": "@@ -1415,15 +1452,15 @@ bool CWallet::IsHDEnabled() const\n     return !hdChain.seed_id.IsNull();\n }\n \n-void CWallet::SetWalletFlag(uint64_t flags)\n+void CWallet::SetWalletFlag(uint64_t flag, bool value)",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 56,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`flags` -> `flag` is a good name change, since `SetWalletFlag()` suggests this function should only be used to change a single flag.\r\n\r\nHowever, note that there's nothing in this function to enforce that. This doesn't necessarily need to go in your PR, but we could be more defensive by adding something like:\r\n\r\n```\r\nif (^flag || (flag & (flag-1)) {\r\n    # flag has no bits set or more than one bit set\r\n    throw ... \r\n}\r\n```",
    "created_at": "2018-09-12T15:00:01Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217068348",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217068348"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217068348"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217068348/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1583,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217072205",
    "pull_request_review_id": 154694453,
    "id": 217072205,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzA3MjIwNQ==",
    "diff_hunk": "@@ -104,11 +104,22 @@ enum WalletFlags : uint64_t {\n     // wallet flags in the upper section (> 1 << 31) will lead to not opening the wallet if flag is unknown\n     // unknown wallet flags in the lower section <= (1 << 31) will be tolerated\n \n+    // will categorize coins as clean (not reused) and dirty (reused), and handle\n+    // them with privacy considerations in mind\n+    WALLET_FLAG_AVOIDREUSE = (1ULL << 0),\n+\n     // will enforce the rule that the wallet can't contain any private keys (only watch-only/pubkeys)\n     WALLET_FLAG_DISABLE_PRIVATE_KEYS = (1ULL << 32),\n };\n \n-static constexpr uint64_t g_known_wallet_flags = WALLET_FLAG_DISABLE_PRIVATE_KEYS;\n+static constexpr uint64_t g_known_wallet_flags =\n+        WALLET_FLAG_AVOIDREUSE\n+    |   WALLET_FLAG_DISABLE_PRIVATE_KEYS;\n+\n+static const std::map<std::string,WalletFlags> walletflagmap{",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 17,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: this is a constant, so naming convention says this should be `WALLET_FLAG_MAP`.\r\n\r\n(`g_known_wallet_flags` above should also be `KNOWN_WALLET_FLAG`. Perhaps that should be changed as part of this PR?)",
    "created_at": "2018-09-12T15:09:23Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217072205",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217072205"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217072205"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217072205/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 119,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217076698",
    "pull_request_review_id": 154694453,
    "id": 217076698,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzA3NjY5OA==",
    "diff_hunk": "@@ -339,9 +339,10 @@ static UniValue sendtoaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() < 2 || request.params.size() > 8)\n+    if (request.fHelp || request.params.size() < 2 || request.params.size() > 9)\n         throw std::runtime_error(\n-            \"sendtoaddress \\\"address\\\" amount ( \\\"comment\\\" \\\"comment_to\\\" subtractfeefromamount replaceable conf_target \\\"estimate_mode\\\")\\n\"\n+            std::string() +\n+            \"sendtoaddress \\\"address\\\" amount ( \\\"comment\\\" \\\"comment_to\\\" subtractfeefromamount replaceable conf_target \\\"estimate_mode\\\" allow_dirty )\\n\"",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "(same comment goes for all \"dirty\" text in RPC help/interface)\r\n\r\nAre we sure we want to introduce the new terminology \"dirty\" into the public-facing API? To me, \"dirty\" doesn't seem intuitive for users. I can imagine lots of users thinking \"why are these coins that I have dirty?\", \"Has someone sent me dirty coins?\", etc.\r\n\r\nIs it possible to describe these concepts using the word 'reused' or something that conveys the meaning more clearly to users?",
    "created_at": "2018-09-12T15:20:40Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217076698",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217076698"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217076698"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217076698/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 344,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217077402",
    "pull_request_review_id": 154694453,
    "id": 217077402,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzA3NzQwMg==",
    "diff_hunk": "@@ -2540,15 +2554,57 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static UniValue setwalletflag(const JSONRPCRequest& request)\n {\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"setwalletflag flag ( state )\\n\"\n+            \"\\nChange the state of the given wallet flag for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, required) The name of the flag to change. Current available flags: \" + flags + \"\\n\"\n+            \"2. value   (boolean, optional, default=true) The new state.\\n\"",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 119,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "naming mismatch: you've called it \"value\" here, but \"state\" in the RPC table. I slightly prefer \"value\", but either is fine.",
    "created_at": "2018-09-12T15:22:23Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217077402",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217077402"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217077402"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217077402/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2581,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217080283",
    "pull_request_review_id": 154694453,
    "id": 217080283,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzA4MDI4Mw==",
    "diff_hunk": "@@ -2540,15 +2554,57 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static UniValue setwalletflag(const JSONRPCRequest& request)\n {\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"setwalletflag flag ( state )\\n\"\n+            \"\\nChange the state of the given wallet flag for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, required) The name of the flag to change. Current available flags: \" + flags + \"\\n\"\n+            \"2. value   (boolean, optional, default=true) The new state.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false (boolean) True or false, reflecting whether the flag was modified (true), or (false) whether it was already set to the given state\\n\"",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 121,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm not sure whether this is the most useful return object. The user wants to know whether the flag has been set or not, not whether the flag was updated or not (they're interested in the final state, not whether it changed).\r\n\r\nWould returning an array of flags set or the result of `getwalletinfo` be more helpful?\r\n\r\n(just a suggestion - I'm not sure what the best approach is here)",
    "created_at": "2018-09-12T15:29:31Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217080283",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217080283"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217080283"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217080283/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2542,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217081465",
    "pull_request_review_id": 154694453,
    "id": 217081465,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzA4MTQ2NQ==",
    "diff_hunk": "@@ -2540,15 +2554,57 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static UniValue setwalletflag(const JSONRPCRequest& request)\n {\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"setwalletflag flag ( state )\\n\"\n+            \"\\nChange the state of the given wallet flag for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, required) The name of the flag to change. Current available flags: \" + flags + \"\\n\"\n+            \"2. value   (boolean, optional, default=true) The new state.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false (boolean) True or false, reflecting whether the flag was modified (true), or (false) whether it was already set to the given state\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setwalletflag\", \"avoid_reuse\")\n+            + HelpExampleRpc(\"setwalletflag\", \"\\\"avoid_reuse\\\"\")\n+        );\n+    }\n+\n+    std::string flag = request.params[0].get_str();\n+    bool value = request.params[1].isNull() || request.params[1].get_bool();\n+\n+    if (!walletflagmap.count(flag)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unknown wallet flag %s\", flag));\n+    }\n+\n+    if (pwallet->IsWalletFlagSet(walletflagmap.at(flag))) return false;",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 135,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This early exit prevents the user from being able to unset a flag. If the flag is already set, we'll exit before trying to unset it.",
    "created_at": "2018-09-12T15:32:22Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217081465",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217081465"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217081465"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217081465/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2590,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217082371",
    "pull_request_review_id": 154694453,
    "id": 217082371,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzA4MjM3MQ==",
    "diff_hunk": "@@ -2540,15 +2554,57 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static UniValue setwalletflag(const JSONRPCRequest& request)\n {\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"setwalletflag flag ( state )\\n\"\n+            \"\\nChange the state of the given wallet flag for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, required) The name of the flag to change. Current available flags: \" + flags + \"\\n\"\n+            \"2. value   (boolean, optional, default=true) The new state.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false (boolean) True or false, reflecting whether the flag was modified (true), or (false) whether it was already set to the given state\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setwalletflag\", \"avoid_reuse\")\n+            + HelpExampleRpc(\"setwalletflag\", \"\\\"avoid_reuse\\\"\")\n+        );\n+    }\n+\n+    std::string flag = request.params[0].get_str();\n+    bool value = request.params[1].isNull() || request.params[1].get_bool();\n+\n+    if (!walletflagmap.count(flag)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unknown wallet flag %s\", flag));\n+    }\n+\n+    if (pwallet->IsWalletFlagSet(walletflagmap.at(flag))) return false;\n+\n+    pwallet->SetWalletFlag(walletflagmap.at(flag), value);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 137,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It should **not** be possible to update the `disable_private_keys` flag after the wallet has been created (because by that time, there are already private keys in the wallet)",
    "created_at": "2018-09-12T15:34:33Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217082371",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217082371"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217082371"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217082371/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2592,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217083108",
    "pull_request_review_id": 154694453,
    "id": 217083108,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzA4MzEwOA==",
    "diff_hunk": "@@ -354,6 +365,8 @@ class CWalletTx : public CMerkleTx\n     mutable bool fAvailableWatchCreditCached;\n     mutable bool fChangeCached;\n     mutable bool fInMempool;\n+    mutable bool available_dirty_credit_cached;",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 28,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "naming convention: mamber variable names should be prefixed `m_`",
    "created_at": "2018-09-12T15:36:27Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217083108",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217083108"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217083108"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217083108/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 368,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217090455",
    "pull_request_review_id": 154694453,
    "id": 217090455,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzA5MDQ1NQ==",
    "diff_hunk": "@@ -339,9 +339,10 @@ static UniValue sendtoaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() < 2 || request.params.size() > 8)\n+    if (request.fHelp || request.params.size() < 2 || request.params.size() > 9)\n         throw std::runtime_error(\n-            \"sendtoaddress \\\"address\\\" amount ( \\\"comment\\\" \\\"comment_to\\\" subtractfeefromamount replaceable conf_target \\\"estimate_mode\\\")\\n\"\n+            std::string() +",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 17,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't understand why this `std::string() +` is required",
    "created_at": "2018-09-12T15:55:03Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217090455",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217090455"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217090455"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217090455/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 344,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217091345",
    "pull_request_review_id": 154694453,
    "id": 217091345,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzA5MTM0NQ==",
    "diff_hunk": "@@ -0,0 +1,126 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse feature.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def reset_balance(self, node, discardaddr):\n+        '''\n+        Throw away all owned coins by the node so it gets a balance of 0.\n+        '''\n+        balance = node.getbalance(include_dirty=True)\n+        if balance > 0.5:\n+            node.sendtoaddress(address=discardaddr, amount=balance, subtractfeefromamount=True, allow_dirty=True)\n+\n+    def run_test(self):\n+        '''\n+        Set up initial chain and run tests defined below\n+        '''\n+\n+        self.test_persistence()\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_send()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_senddirty()\n+\n+    def test_persistence(self):\n+        '''\n+        Test that wallet files persist the avoid_reuse flag.\n+        '''\n+        # Configure node 1 to use avoid_reuse\n+        self.nodes[1].setwalletflag('avoid_reuse')\n+\n+        # Flags should be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+        # Stop and restart node 1\n+        self.stop_node(1)",
    "path": "test/functional/wallet_avoidreuse.py",
    "position": 98,
    "original_position": 61,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Do you need to stop-start the node here? Can you just `unloadwallet` then `reloadwallet`?",
    "created_at": "2018-09-12T15:57:25Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217091345",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217091345"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217091345"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217091345/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 98,
    "original_line": 98,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217092655",
    "pull_request_review_id": 154694453,
    "id": 217092655,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzA5MjY1NQ==",
    "diff_hunk": "@@ -2540,15 +2554,57 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static UniValue setwalletflag(const JSONRPCRequest& request)\n {\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"setwalletflag flag ( state )\\n\"\n+            \"\\nChange the state of the given wallet flag for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, required) The name of the flag to change. Current available flags: \" + flags + \"\\n\"\n+            \"2. value   (boolean, optional, default=true) The new state.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false (boolean) True or false, reflecting whether the flag was modified (true), or (false) whether it was already set to the given state\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setwalletflag\", \"avoid_reuse\")\n+            + HelpExampleRpc(\"setwalletflag\", \"\\\"avoid_reuse\\\"\")\n+        );\n+    }\n+\n+    std::string flag = request.params[0].get_str();\n+    bool value = request.params[1].isNull() || request.params[1].get_bool();\n+\n+    if (!walletflagmap.count(flag)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unknown wallet flag %s\", flag));\n+    }\n+\n+    if (pwallet->IsWalletFlagSet(walletflagmap.at(flag))) return false;\n+\n+    pwallet->SetWalletFlag(walletflagmap.at(flag), value);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 137,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think this is sufficient for enabling 'avoid_reuse'. Consider:\r\n\r\n- wallet is created without the `avoid_reuse` flag\r\n- wallet sends from address\r\n- wallet receives new coins to used address. These are NOT marked as dirty because the `avoid_reuse` flag is not set\r\n- `avoid_reuse` is enabled with the `setwalletflag` RPC\r\n- `getbalance`, `sendtoaddress`, etc will all use the reused address coins because they're not set as dirty.",
    "created_at": "2018-09-12T16:00:57Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217092655",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217092655"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217092655"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217092655/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2592,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217092893",
    "pull_request_review_id": 154694453,
    "id": 217092893,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzA5Mjg5Mw==",
    "diff_hunk": "@@ -0,0 +1,126 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse feature.\"\"\"",
    "path": "test/functional/wallet_avoidreuse.py",
    "position": null,
    "original_position": 5,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It'd be nice if this tested the `setwalletflag` RPC too.",
    "created_at": "2018-09-12T16:01:33Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217092893",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217092893"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217092893"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217092893/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 5,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217257099",
    "pull_request_review_id": 154925035,
    "id": 217257099,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzI1NzA5OQ==",
    "diff_hunk": "@@ -339,9 +339,10 @@ static UniValue sendtoaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() < 2 || request.params.size() > 8)\n+    if (request.fHelp || request.params.size() < 2 || request.params.size() > 9)\n         throw std::runtime_error(\n-            \"sendtoaddress \\\"address\\\" amount ( \\\"comment\\\" \\\"comment_to\\\" subtractfeefromamount replaceable conf_target \\\"estimate_mode\\\")\\n\"\n+            std::string() +\n+            \"sendtoaddress \\\"address\\\" amount ( \\\"comment\\\" \\\"comment_to\\\" subtractfeefromamount replaceable conf_target \\\"estimate_mode\\\" allow_dirty )\\n\"",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The reason why we've stuck with dirty so far is because of the negative connotation. Note that a coin only becomes dirty if\r\n\r\n* you received to an address\r\n* you spent everything from that address\r\n* you received to the same address afterwards\r\n\r\nImagine walking through mud on the way home. As you go inside, you leave a trail behind on the walkway up to and to the inside of your house, even if you prudently take the shoes off at the entrance.",
    "created_at": "2018-09-13T04:28:31Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217257099",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217257099"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217257099"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217257099/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 344,
    "side": "RIGHT",
    "in_reply_to_id": 217076698
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217257208",
    "pull_request_review_id": 154925186,
    "id": 217257208,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzI1NzIwOA==",
    "diff_hunk": "@@ -2540,15 +2554,57 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static UniValue setwalletflag(const JSONRPCRequest& request)\n {\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"setwalletflag flag ( state )\\n\"\n+            \"\\nChange the state of the given wallet flag for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, required) The name of the flag to change. Current available flags: \" + flags + \"\\n\"\n+            \"2. value   (boolean, optional, default=true) The new state.\\n\"",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 119,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oops, thanks! Fixed.",
    "created_at": "2018-09-13T04:29:47Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217257208",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217257208"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217257208"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217257208/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2581,
    "side": "RIGHT",
    "in_reply_to_id": 217077402
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217257442",
    "pull_request_review_id": 154925476,
    "id": 217257442,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzI1NzQ0Mg==",
    "diff_hunk": "@@ -2540,15 +2554,57 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static UniValue setwalletflag(const JSONRPCRequest& request)\n {\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"setwalletflag flag ( state )\\n\"\n+            \"\\nChange the state of the given wallet flag for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, required) The name of the flag to change. Current available flags: \" + flags + \"\\n\"\n+            \"2. value   (boolean, optional, default=true) The new state.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false (boolean) True or false, reflecting whether the flag was modified (true), or (false) whether it was already set to the given state\\n\"",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 121,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think being told that your action did nothing vs your action did something is a good UI, personally.\r\n\r\nPerhaps it should actually *throw* instead of returning false, though...",
    "created_at": "2018-09-13T04:31:57Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217257442",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217257442"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217257442"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217257442/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2542,
    "side": "RIGHT",
    "in_reply_to_id": 217080283
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217257479",
    "pull_request_review_id": 154925525,
    "id": 217257479,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzI1NzQ3OQ==",
    "diff_hunk": "@@ -2540,15 +2554,57 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static UniValue setwalletflag(const JSONRPCRequest& request)\n {\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"setwalletflag flag ( state )\\n\"\n+            \"\\nChange the state of the given wallet flag for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, required) The name of the flag to change. Current available flags: \" + flags + \"\\n\"\n+            \"2. value   (boolean, optional, default=true) The new state.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false (boolean) True or false, reflecting whether the flag was modified (true), or (false) whether it was already set to the given state\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setwalletflag\", \"avoid_reuse\")\n+            + HelpExampleRpc(\"setwalletflag\", \"\\\"avoid_reuse\\\"\")\n+        );\n+    }\n+\n+    std::string flag = request.params[0].get_str();\n+    bool value = request.params[1].isNull() || request.params[1].get_bool();\n+\n+    if (!walletflagmap.count(flag)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unknown wallet flag %s\", flag));\n+    }\n+\n+    if (pwallet->IsWalletFlagSet(walletflagmap.at(flag))) return false;",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 135,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "D'oh, thanks. Fixed.",
    "created_at": "2018-09-13T04:32:22Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217257479",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217257479"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217257479"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217257479/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2590,
    "side": "RIGHT",
    "in_reply_to_id": 217081465
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217258020",
    "pull_request_review_id": 154926144,
    "id": 217258020,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzI1ODAyMA==",
    "diff_hunk": "@@ -2540,15 +2554,57 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static UniValue setwalletflag(const JSONRPCRequest& request)\n {\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"setwalletflag flag ( state )\\n\"\n+            \"\\nChange the state of the given wallet flag for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, required) The name of the flag to change. Current available flags: \" + flags + \"\\n\"\n+            \"2. value   (boolean, optional, default=true) The new state.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false (boolean) True or false, reflecting whether the flag was modified (true), or (false) whether it was already set to the given state\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setwalletflag\", \"avoid_reuse\")\n+            + HelpExampleRpc(\"setwalletflag\", \"\\\"avoid_reuse\\\"\")\n+        );\n+    }\n+\n+    std::string flag = request.params[0].get_str();\n+    bool value = request.params[1].isNull() || request.params[1].get_bool();\n+\n+    if (!walletflagmap.count(flag)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unknown wallet flag %s\", flag));\n+    }\n+\n+    if (pwallet->IsWalletFlagSet(walletflagmap.at(flag))) return false;\n+\n+    pwallet->SetWalletFlag(walletflagmap.at(flag), value);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 137,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should it be possible to *disable* it?",
    "created_at": "2018-09-13T04:37:30Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217258020",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217258020"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217258020"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217258020/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2592,
    "side": "RIGHT",
    "in_reply_to_id": 217082371
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217260847",
    "pull_request_review_id": 154929360,
    "id": 217260847,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzI2MDg0Nw==",
    "diff_hunk": "@@ -0,0 +1,126 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse feature.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def reset_balance(self, node, discardaddr):\n+        '''\n+        Throw away all owned coins by the node so it gets a balance of 0.\n+        '''\n+        balance = node.getbalance(include_dirty=True)\n+        if balance > 0.5:\n+            node.sendtoaddress(address=discardaddr, amount=balance, subtractfeefromamount=True, allow_dirty=True)\n+\n+    def run_test(self):\n+        '''\n+        Set up initial chain and run tests defined below\n+        '''\n+\n+        self.test_persistence()\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_send()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_senddirty()\n+\n+    def test_persistence(self):\n+        '''\n+        Test that wallet files persist the avoid_reuse flag.\n+        '''\n+        # Configure node 1 to use avoid_reuse\n+        self.nodes[1].setwalletflag('avoid_reuse')\n+\n+        # Flags should be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+        # Stop and restart node 1\n+        self.stop_node(1)",
    "path": "test/functional/wallet_avoidreuse.py",
    "position": 98,
    "original_position": 61,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I kind of want the node to go down completely so we don't get some weird case where a flag persists when reloading wallet but not when restarting node. Even if that sounds like an impossibility.",
    "created_at": "2018-09-13T05:03:41Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217260847",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217260847"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217260847"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217260847/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 98,
    "original_line": 98,
    "side": "RIGHT",
    "in_reply_to_id": 217091345
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217261001",
    "pull_request_review_id": 154929553,
    "id": 217261001,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzI2MTAwMQ==",
    "diff_hunk": "@@ -2540,15 +2554,57 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static UniValue setwalletflag(const JSONRPCRequest& request)\n {\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"setwalletflag flag ( state )\\n\"\n+            \"\\nChange the state of the given wallet flag for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, required) The name of the flag to change. Current available flags: \" + flags + \"\\n\"\n+            \"2. value   (boolean, optional, default=true) The new state.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false (boolean) True or false, reflecting whether the flag was modified (true), or (false) whether it was already set to the given state\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setwalletflag\", \"avoid_reuse\")\n+            + HelpExampleRpc(\"setwalletflag\", \"\\\"avoid_reuse\\\"\")\n+        );\n+    }\n+\n+    std::string flag = request.params[0].get_str();\n+    bool value = request.params[1].isNull() || request.params[1].get_bool();\n+\n+    if (!walletflagmap.count(flag)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unknown wallet flag %s\", flag));\n+    }\n+\n+    if (pwallet->IsWalletFlagSet(walletflagmap.at(flag))) return false;\n+\n+    pwallet->SetWalletFlag(walletflagmap.at(flag), value);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 137,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Right ... the idea is that the user has to actually call 'rescan' for it to become retroactive. This was explained when this was a command line option, I think, but the explanation vanished with the change to remove the option. Not sure where would be a good place to explain this. Perhaps there should be a 'caveats' map for flags which are returned when setting flags?",
    "created_at": "2018-09-13T05:05:30Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217261001",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217261001"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217261001"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217261001/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2592,
    "side": "RIGHT",
    "in_reply_to_id": 217092655
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217261098",
    "pull_request_review_id": 154929688,
    "id": 217261098,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzI2MTA5OA==",
    "diff_hunk": "@@ -0,0 +1,126 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse feature.\"\"\"",
    "path": "test/functional/wallet_avoidreuse.py",
    "position": null,
    "original_position": 5,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It sort of does, actually. I assumed there were tests elsewhere, but apparently not. I will add complementary tests for setwalletflag.",
    "created_at": "2018-09-13T05:06:42Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217261098",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217261098"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217261098"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217261098/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 5,
    "side": "RIGHT",
    "in_reply_to_id": 217092893
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217607878",
    "pull_request_review_id": 155361558,
    "id": 217607878,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzYwNzg3OA==",
    "diff_hunk": "@@ -0,0 +1,146 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse and setwalletflag features.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def reset_balance(self, node, discardaddr):",
    "path": "test/functional/wallet_avoidreuse.py",
    "position": null,
    "original_position": 27,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "62b5893d9862b05b76db1ffefb21cb0ae0e70972",
    "user": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should skip this if wallet disabled.\r\n```python3\r\n    def skip_test_if_missing_module(self):\r\n        self.skip_if_no_wallet()\r\n```",
    "created_at": "2018-09-14T06:00:45Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217607878",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217607878"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r217607878"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217607878/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 27,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228076558",
    "pull_request_review_id": 168259784,
    "id": 228076558,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODA3NjU1OA==",
    "diff_hunk": "@@ -2540,15 +2554,57 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n-static UniValue createwallet(const JSONRPCRequest& request)\n+static UniValue setwalletflag(const JSONRPCRequest& request)\n {\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : walletflagmap) flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            \"setwalletflag flag ( state )\\n\"\n+            \"\\nChange the state of the given wallet flag for a wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. flag    (string, required) The name of the flag to change. Current available flags: \" + flags + \"\\n\"\n+            \"2. value   (boolean, optional, default=true) The new state.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false (boolean) True or false, reflecting whether the flag was modified (true), or (false) whether it was already set to the given state\\n\"",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 121,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "177c4115b70c801e87dac3bd68f11895d1aaf5ea",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Update: it throws now",
    "created_at": "2018-10-25T08:23:30Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228076558",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228076558"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228076558"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228076558/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2542,
    "side": "RIGHT",
    "in_reply_to_id": 217080283
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228079166",
    "pull_request_review_id": 168259784,
    "id": 228079166,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODA3OTE2Ng==",
    "diff_hunk": "@@ -0,0 +1,149 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse and setwalletflag features.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def reset_balance(self, node, discardaddr):\n+        '''\n+        Throw away all owned coins by the node so it gets a balance of 0.\n+        '''\n+        balance = node.getbalance(include_dirty=True)\n+        if balance > 0.5:\n+            node.sendtoaddress(address=discardaddr, amount=balance, subtractfeefromamount=True, allow_dirty=True)\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        '''\n+        Set up initial chain and run tests defined below\n+        '''\n+\n+        self.test_persistence()\n+        self.test_immutable()\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())",
    "path": "test/functional/wallet_avoidreuse.py",
    "position": null,
    "original_position": 48,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "2ba2afcc4ea7d0bec9ecd67063f7ddc240921813",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If you use `getreceivedbyaddress` instead of `getbalance` you don't need this `reset_balance` and `assert_approx` stuff.",
    "created_at": "2018-10-25T08:30:53Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228079166",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228079166"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228079166"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228079166/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 48,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228080376",
    "pull_request_review_id": 168259784,
    "id": 228080376,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODA4MDM3Ng==",
    "diff_hunk": "@@ -0,0 +1,149 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse and setwalletflag features.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def reset_balance(self, node, discardaddr):\n+        '''\n+        Throw away all owned coins by the node so it gets a balance of 0.\n+        '''\n+        balance = node.getbalance(include_dirty=True)\n+        if balance > 0.5:\n+            node.sendtoaddress(address=discardaddr, amount=balance, subtractfeefromamount=True, allow_dirty=True)\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        '''\n+        Set up initial chain and run tests defined below\n+        '''\n+\n+        self.test_persistence()\n+        self.test_immutable()\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_send()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_senddirty()\n+\n+    def test_persistence(self):\n+        '''\n+        Test that wallet files persist the avoid_reuse flag.\n+        '''\n+        # Configure node 1 to use avoid_reuse\n+        self.nodes[1].setwalletflag('avoid_reuse')\n+\n+        # Flags should be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+        # Stop and restart node 1\n+        self.stop_node(1)\n+        self.start_node(1)\n+        connect_nodes_bi(self.nodes, 0, 1)\n+\n+        # Flags should still be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+    def test_immutable(self):\n+        '''\n+        Test immutable wallet flags\n+        '''\n+        # Attempt to set the disable_private_keys flag; this should not work\n+        assert_raises_rpc_error(-8, \"Wallet flag is immutable\", self.nodes[1].setwalletflag, 'disable_private_keys')\n+\n+        tempwallet = \".wallet_avoidreuse.py_test_immutable_wallet.dat\"\n+\n+        # Create a wallet with disable_private_keys set; this should work\n+        self.nodes[1].createwallet(tempwallet, True)\n+        w = self.nodes[1].get_wallet_rpc(tempwallet)\n+\n+        # Attempt to unset the disable_private_keys flag; this should not work\n+        assert_raises_rpc_error(-8, \"Wallet flag is immutable\", w.setwalletflag, 'disable_private_keys', False)\n+\n+        # Unload temp wallet\n+        self.nodes[1].unloadwallet(tempwallet)\n+\n+    def test_fund_send_fund_send(self):",
    "path": "test/functional/wallet_avoidreuse.py",
    "position": null,
    "original_position": 92,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "2ba2afcc4ea7d0bec9ecd67063f7ddc240921813",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Move this test up, since it's more interesting.",
    "created_at": "2018-10-25T08:34:34Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228080376",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228080376"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228080376"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228080376/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 92,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228081405",
    "pull_request_review_id": 168259784,
    "id": 228081405,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODA4MTQwNQ==",
    "diff_hunk": "@@ -0,0 +1,149 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse and setwalletflag features.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def reset_balance(self, node, discardaddr):\n+        '''\n+        Throw away all owned coins by the node so it gets a balance of 0.\n+        '''\n+        balance = node.getbalance(include_dirty=True)\n+        if balance > 0.5:\n+            node.sendtoaddress(address=discardaddr, amount=balance, subtractfeefromamount=True, allow_dirty=True)\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        '''\n+        Set up initial chain and run tests defined below\n+        '''\n+\n+        self.test_persistence()\n+        self.test_immutable()\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_send()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_senddirty()\n+\n+    def test_persistence(self):\n+        '''\n+        Test that wallet files persist the avoid_reuse flag.\n+        '''\n+        # Configure node 1 to use avoid_reuse\n+        self.nodes[1].setwalletflag('avoid_reuse')\n+\n+        # Flags should be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+        # Stop and restart node 1\n+        self.stop_node(1)\n+        self.start_node(1)\n+        connect_nodes_bi(self.nodes, 0, 1)\n+\n+        # Flags should still be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+    def test_immutable(self):\n+        '''\n+        Test immutable wallet flags\n+        '''\n+        # Attempt to set the disable_private_keys flag; this should not work\n+        assert_raises_rpc_error(-8, \"Wallet flag is immutable\", self.nodes[1].setwalletflag, 'disable_private_keys')\n+\n+        tempwallet = \".wallet_avoidreuse.py_test_immutable_wallet.dat\"\n+\n+        # Create a wallet with disable_private_keys set; this should work\n+        self.nodes[1].createwallet(tempwallet, True)\n+        w = self.nodes[1].get_wallet_rpc(tempwallet)\n+\n+        # Attempt to unset the disable_private_keys flag; this should not work\n+        assert_raises_rpc_error(-8, \"Wallet flag is immutable\", w.setwalletflag, 'disable_private_keys', False)\n+\n+        # Unload temp wallet\n+        self.nodes[1].unloadwallet(tempwallet)\n+\n+    def test_fund_send_fund_send(self):\n+        '''\n+        Test the simple case where [1] generates a new address A, then\n+        [0] sends 10 BTC to A.\n+        [1] spends 5 BTC from A. (leaving roughly 4 BTC useable)\n+        [0] sends 10 BTC to A again.\n+        [1] tries to spend 10 BTC (fails; dirty).\n+        [1] tries to spend 4 BTC (succeeds; change address sufficient)\n+        '''\n+\n+        fundaddr = self.nodes[1].getnewaddress()\n+        retaddr = self.nodes[0].getnewaddress()\n+\n+        self.nodes[0].sendtoaddress(fundaddr, 10)\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        self.nodes[1].sendtoaddress(retaddr, 5)\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        self.nodes[0].sendtoaddress(fundaddr, 10)\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        # node 1 should now have a balance of 5 (no dirty) or 15 (including dirty)\n+        assert_approx(self.nodes[1].getbalance(), 5, 0.001)\n+        assert_approx(self.nodes[1].getbalance(include_dirty=True), 15, 0.001)\n+\n+        assert_raises_rpc_error(-6, \"Insufficient funds\", self.nodes[1].sendtoaddress, retaddr, 10)\n+\n+        self.nodes[1].sendtoaddress(retaddr, 4)\n+\n+    def test_fund_send_fund_senddirty(self):",
    "path": "test/functional/wallet_avoidreuse.py",
    "position": null,
    "original_position": 125,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "2ba2afcc4ea7d0bec9ecd67063f7ddc240921813",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This should probably be the first test, since it describes the behavior without the new flag.",
    "created_at": "2018-10-25T08:37:20Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228081405",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228081405"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228081405"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228081405/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 125,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228425325",
    "pull_request_review_id": 168695218,
    "id": 228425325,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODQyNTMyNQ==",
    "diff_hunk": "@@ -0,0 +1,149 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse and setwalletflag features.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def reset_balance(self, node, discardaddr):",
    "path": "test/functional/wallet_avoidreuse.py",
    "position": null,
    "original_position": 27,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "2ba2afcc4ea7d0bec9ecd67063f7ddc240921813",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: This method doesn't use `self` and could be a function instead?",
    "created_at": "2018-10-26T07:12:19Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228425325",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228425325"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228425325"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228425325/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 27,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228428998",
    "pull_request_review_id": 168699742,
    "id": 228428998,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODQyODk5OA==",
    "diff_hunk": "@@ -0,0 +1,149 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse and setwalletflag features.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def reset_balance(self, node, discardaddr):\n+        '''\n+        Throw away all owned coins by the node so it gets a balance of 0.\n+        '''\n+        balance = node.getbalance(include_dirty=True)\n+        if balance > 0.5:\n+            node.sendtoaddress(address=discardaddr, amount=balance, subtractfeefromamount=True, allow_dirty=True)\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        '''\n+        Set up initial chain and run tests defined below\n+        '''\n+\n+        self.test_persistence()\n+        self.test_immutable()\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())",
    "path": "test/functional/wallet_avoidreuse.py",
    "position": null,
    "original_position": 48,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "2ba2afcc4ea7d0bec9ecd67063f7ddc240921813",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That's a good point, but `getreceivedbyaddress` has not been updated to handle the `avoid_reuse` flag yet. Perhaps it's worth doing that and switch, but it's also reassuring to ensure no weird balance appeared from some unexpected address.",
    "created_at": "2018-10-26T07:29:12Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228428998",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228428998"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228428998"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228428998/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 48,
    "side": "RIGHT",
    "in_reply_to_id": 228079166
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228429286",
    "pull_request_review_id": 168700076,
    "id": 228429286,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODQyOTI4Ng==",
    "diff_hunk": "@@ -0,0 +1,149 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse and setwalletflag features.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def reset_balance(self, node, discardaddr):\n+        '''\n+        Throw away all owned coins by the node so it gets a balance of 0.\n+        '''\n+        balance = node.getbalance(include_dirty=True)\n+        if balance > 0.5:\n+            node.sendtoaddress(address=discardaddr, amount=balance, subtractfeefromamount=True, allow_dirty=True)\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        '''\n+        Set up initial chain and run tests defined below\n+        '''\n+\n+        self.test_persistence()\n+        self.test_immutable()\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_send()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_senddirty()\n+\n+    def test_persistence(self):\n+        '''\n+        Test that wallet files persist the avoid_reuse flag.\n+        '''\n+        # Configure node 1 to use avoid_reuse\n+        self.nodes[1].setwalletflag('avoid_reuse')\n+\n+        # Flags should be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+        # Stop and restart node 1\n+        self.stop_node(1)\n+        self.start_node(1)\n+        connect_nodes_bi(self.nodes, 0, 1)\n+\n+        # Flags should still be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+    def test_immutable(self):\n+        '''\n+        Test immutable wallet flags\n+        '''\n+        # Attempt to set the disable_private_keys flag; this should not work\n+        assert_raises_rpc_error(-8, \"Wallet flag is immutable\", self.nodes[1].setwalletflag, 'disable_private_keys')\n+\n+        tempwallet = \".wallet_avoidreuse.py_test_immutable_wallet.dat\"\n+\n+        # Create a wallet with disable_private_keys set; this should work\n+        self.nodes[1].createwallet(tempwallet, True)\n+        w = self.nodes[1].get_wallet_rpc(tempwallet)\n+\n+        # Attempt to unset the disable_private_keys flag; this should not work\n+        assert_raises_rpc_error(-8, \"Wallet flag is immutable\", w.setwalletflag, 'disable_private_keys', False)\n+\n+        # Unload temp wallet\n+        self.nodes[1].unloadwallet(tempwallet)\n+\n+    def test_fund_send_fund_send(self):",
    "path": "test/functional/wallet_avoidreuse.py",
    "position": null,
    "original_position": 92,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "2ba2afcc4ea7d0bec9ecd67063f7ddc240921813",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The way I see it is, the two tests above it will catch weird issues that could cause the test to fail in random places, so those tests are run first. The intention is to order tests chronologically.",
    "created_at": "2018-10-26T07:30:26Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228429286",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228429286"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228429286"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228429286/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 92,
    "side": "RIGHT",
    "in_reply_to_id": 228080376
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228429609",
    "pull_request_review_id": 168700499,
    "id": 228429609,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODQyOTYwOQ==",
    "diff_hunk": "@@ -0,0 +1,149 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse and setwalletflag features.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def reset_balance(self, node, discardaddr):\n+        '''\n+        Throw away all owned coins by the node so it gets a balance of 0.\n+        '''\n+        balance = node.getbalance(include_dirty=True)\n+        if balance > 0.5:\n+            node.sendtoaddress(address=discardaddr, amount=balance, subtractfeefromamount=True, allow_dirty=True)\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        '''\n+        Set up initial chain and run tests defined below\n+        '''\n+\n+        self.test_persistence()\n+        self.test_immutable()\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_send()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_senddirty()\n+\n+    def test_persistence(self):\n+        '''\n+        Test that wallet files persist the avoid_reuse flag.\n+        '''\n+        # Configure node 1 to use avoid_reuse\n+        self.nodes[1].setwalletflag('avoid_reuse')\n+\n+        # Flags should be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+        # Stop and restart node 1\n+        self.stop_node(1)\n+        self.start_node(1)\n+        connect_nodes_bi(self.nodes, 0, 1)\n+\n+        # Flags should still be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+    def test_immutable(self):\n+        '''\n+        Test immutable wallet flags\n+        '''\n+        # Attempt to set the disable_private_keys flag; this should not work\n+        assert_raises_rpc_error(-8, \"Wallet flag is immutable\", self.nodes[1].setwalletflag, 'disable_private_keys')\n+\n+        tempwallet = \".wallet_avoidreuse.py_test_immutable_wallet.dat\"\n+\n+        # Create a wallet with disable_private_keys set; this should work\n+        self.nodes[1].createwallet(tempwallet, True)\n+        w = self.nodes[1].get_wallet_rpc(tempwallet)\n+\n+        # Attempt to unset the disable_private_keys flag; this should not work\n+        assert_raises_rpc_error(-8, \"Wallet flag is immutable\", w.setwalletflag, 'disable_private_keys', False)\n+\n+        # Unload temp wallet\n+        self.nodes[1].unloadwallet(tempwallet)\n+\n+    def test_fund_send_fund_send(self):\n+        '''\n+        Test the simple case where [1] generates a new address A, then\n+        [0] sends 10 BTC to A.\n+        [1] spends 5 BTC from A. (leaving roughly 4 BTC useable)\n+        [0] sends 10 BTC to A again.\n+        [1] tries to spend 10 BTC (fails; dirty).\n+        [1] tries to spend 4 BTC (succeeds; change address sufficient)\n+        '''\n+\n+        fundaddr = self.nodes[1].getnewaddress()\n+        retaddr = self.nodes[0].getnewaddress()\n+\n+        self.nodes[0].sendtoaddress(fundaddr, 10)\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        self.nodes[1].sendtoaddress(retaddr, 5)\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        self.nodes[0].sendtoaddress(fundaddr, 10)\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        # node 1 should now have a balance of 5 (no dirty) or 15 (including dirty)\n+        assert_approx(self.nodes[1].getbalance(), 5, 0.001)\n+        assert_approx(self.nodes[1].getbalance(include_dirty=True), 15, 0.001)\n+\n+        assert_raises_rpc_error(-6, \"Insufficient funds\", self.nodes[1].sendtoaddress, retaddr, 10)\n+\n+        self.nodes[1].sendtoaddress(retaddr, 4)\n+\n+    def test_fund_send_fund_senddirty(self):",
    "path": "test/functional/wallet_avoidreuse.py",
    "position": null,
    "original_position": 125,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "2ba2afcc4ea7d0bec9ecd67063f7ddc240921813",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "OK!",
    "created_at": "2018-10-26T07:32:00Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228429609",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228429609"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228429609"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228429609/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 125,
    "side": "RIGHT",
    "in_reply_to_id": 228081405
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228429738",
    "pull_request_review_id": 168700673,
    "id": 228429738,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODQyOTczOA==",
    "diff_hunk": "@@ -0,0 +1,149 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse and setwalletflag features.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def reset_balance(self, node, discardaddr):",
    "path": "test/functional/wallet_avoidreuse.py",
    "position": null,
    "original_position": 27,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "2ba2afcc4ea7d0bec9ecd67063f7ddc240921813",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good point. Turned into function.",
    "created_at": "2018-10-26T07:32:36Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228429738",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228429738"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228429738"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228429738/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 27,
    "side": "RIGHT",
    "in_reply_to_id": 228425325
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228456534",
    "pull_request_review_id": 168734124,
    "id": 228456534,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODQ1NjUzNA==",
    "diff_hunk": "@@ -0,0 +1,149 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse and setwalletflag features.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def reset_balance(self, node, discardaddr):\n+        '''\n+        Throw away all owned coins by the node so it gets a balance of 0.\n+        '''\n+        balance = node.getbalance(include_dirty=True)\n+        if balance > 0.5:\n+            node.sendtoaddress(address=discardaddr, amount=balance, subtractfeefromamount=True, allow_dirty=True)\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        '''\n+        Set up initial chain and run tests defined below\n+        '''\n+\n+        self.test_persistence()\n+        self.test_immutable()\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())",
    "path": "test/functional/wallet_avoidreuse.py",
    "position": null,
    "original_position": 48,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "2ba2afcc4ea7d0bec9ecd67063f7ddc240921813",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Multiple wallets per node might be another route.",
    "created_at": "2018-10-26T09:10:28Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228456534",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228456534"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r228456534"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228456534/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 48,
    "side": "RIGHT",
    "in_reply_to_id": 228079166
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234434954",
    "pull_request_review_id": 176081493,
    "id": 234434954,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDQzNDk1NA==",
    "diff_hunk": "@@ -125,11 +125,22 @@ enum WalletFlags : uint64_t {\n     // wallet flags in the upper section (> 1 << 31) will lead to not opening the wallet if flag is unknown\n     // unknown wallet flags in the lower section <= (1 << 31) will be tolerated\n \n+    // will categorize coins as clean (not reused) and dirty (reused), and handle\n+    // them with privacy considerations in mind\n+    WALLET_FLAG_AVOIDREUSE = (1ULL << 0),",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 6,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "602bd48de3046afea91dca1601a16623d91e4b5d",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: `WALLET_FLAG_AVOID_REUSE` instead of `WALLET_FLAG_AVOIDREUSE`",
    "created_at": "2018-11-18T09:23:21Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r234434954",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234434954"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r234434954"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234434954/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 130,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234435387",
    "pull_request_review_id": 176081493,
    "id": 234435387,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDQzNTM4Nw==",
    "diff_hunk": "@@ -734,7 +735,11 @@ static UniValue getbalance(const JSONRPCRequest& request)\n         filter = filter | ISMINE_WATCH_ONLY;\n     }\n \n-    return ValueFromAmount(pwallet->GetBalance(filter, min_depth));\n+    bool avoid_reuse = request.params[3].isNull()\n+        ? pwallet->IsWalletFlagSet(WALLET_FLAG_AVOIDREUSE)\n+        : request.params[3].get_bool();",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 27,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "e633e181f12c13304f147707e2d00cede6484735",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Above help text says `(only applicable if the \\\"avoid reuse\\\" wallet flag is enabled)`, so why do you have this case? Shouldn't we just error immediately if it is set without `pwallet->IsWalletFlagSet(WALLET_FLAG_AVOIDREUSE)`? Same with the other RPCs",
    "created_at": "2018-11-18T09:34:45Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r234435387",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234435387"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r234435387"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234435387/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 740,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234435825",
    "pull_request_review_id": 176081493,
    "id": 234435825,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDQzNTgyNQ==",
    "diff_hunk": "@@ -555,13 +561,14 @@ static UniValue getreceivedbyaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n         throw std::runtime_error(\n-            \"getreceivedbyaddress \\\"address\\\" ( minconf )\\n\"\n+            \"getreceivedbyaddress \\\"address\\\" ( minconf avoid_reuse )\\n\"\n             \"\\nReturns the total amount received by the given address in transactions with at least minconf confirmations.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"address\\\"         (string, required) The bitcoin address for transactions.\\n\"\n             \"2. minconf             (numeric, optional, default=1) Only include transactions confirmed at least this many times.\\n\"\n+            \"3. avoid_reuse         (boolean, optional) Forbid inclusion of addresses which have been marked as 'dirty'.\\n\"",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 60,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "afc146d69a56dc0955aedaf162cd842191f2278d",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Help texts for all the RPC changes in this PR could do with some more consistency, e.g. in how the default is output (this one doesn't output the default at all, whereas `sendtoaddress` will decide whether to output `default=true` or `unavailable`)",
    "created_at": "2018-11-18T09:46:03Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r234435825",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234435825"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r234435825"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234435825/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 571,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234489708",
    "pull_request_review_id": 176138762,
    "id": 234489708,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDQ4OTcwOA==",
    "diff_hunk": "@@ -734,7 +735,11 @@ static UniValue getbalance(const JSONRPCRequest& request)\n         filter = filter | ISMINE_WATCH_ONLY;\n     }\n \n-    return ValueFromAmount(pwallet->GetBalance(filter, min_depth));\n+    bool avoid_reuse = request.params[3].isNull()\n+        ? pwallet->IsWalletFlagSet(WALLET_FLAG_AVOIDREUSE)\n+        : request.params[3].get_bool();",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 27,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "e633e181f12c13304f147707e2d00cede6484735",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Code now throws an error if user does `avoidreuse=true` for a wallet which does not have `WALLET_FLAG_AVOID_REUSE` enabled.",
    "created_at": "2018-11-19T04:11:54Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r234489708",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234489708"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r234489708"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234489708/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 740,
    "side": "RIGHT",
    "in_reply_to_id": 234435387
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236677538",
    "pull_request_review_id": 178799767,
    "id": 236677538,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjY3NzUzOA==",
    "diff_hunk": "@@ -125,11 +125,22 @@ enum WalletFlags : uint64_t {\n     // wallet flags in the upper section (> 1 << 31) will lead to not opening the wallet if flag is unknown\n     // unknown wallet flags in the lower section <= (1 << 31) will be tolerated\n \n+    // will categorize coins as clean (not reused) and dirty (reused), and handle\n+    // them with privacy considerations in mind\n+    WALLET_FLAG_AVOIDREUSE = (1ULL << 0),",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 6,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "602bd48de3046afea91dca1601a16623d91e4b5d",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Agree with the nit, and also that it's a nit :-)",
    "created_at": "2018-11-27T14:10:13Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r236677538",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236677538"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r236677538"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236677538/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 130,
    "side": "RIGHT",
    "in_reply_to_id": 234434954
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256294078",
    "pull_request_review_id": 203085259,
    "id": 256294078,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjI5NDA3OA==",
    "diff_hunk": "@@ -4151,16 +4218,17 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n         walletInstance->SetMinVersion(FEATURE_LATEST);\n \n-        if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n-            //selective allow to set flags\n-            walletInstance->SetWalletFlag(WALLET_FLAG_DISABLE_PRIVATE_KEYS);\n-        } else if (wallet_creation_flags & WALLET_FLAG_BLANK_WALLET) {\n-            walletInstance->SetWalletFlag(WALLET_FLAG_BLANK_WALLET);\n-        } else {\n+        if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+            (wallet_creation_flags & WALLET_FLAG_BLANK_WALLET)) {\n+            InitError(_(\"Wallet cannot have both DISABLE_PRIVATE_KEYS and BLANK_WALLET flags\"));",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 179,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "ac89bbac8780f0f5a3f0765414741e99d5cfcb74",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: this new check (if you keep it, see ff7fe3cf817f787ee8d929b73522d2e9c9da5681), as well as setting all flags in one go (below), deserves a separate commit. I do like the cleanup. ",
    "created_at": "2019-02-13T08:47:27Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r256294078",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256294078"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r256294078"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256294078/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4223,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256302182",
    "pull_request_review_id": 203094793,
    "id": 256302182,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjMwMjE4Mg==",
    "diff_hunk": "@@ -4151,16 +4218,17 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n         walletInstance->SetMinVersion(FEATURE_LATEST);\n \n-        if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n-            //selective allow to set flags\n-            walletInstance->SetWalletFlag(WALLET_FLAG_DISABLE_PRIVATE_KEYS);\n-        } else if (wallet_creation_flags & WALLET_FLAG_BLANK_WALLET) {\n-            walletInstance->SetWalletFlag(WALLET_FLAG_BLANK_WALLET);\n-        } else {\n+        if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+            (wallet_creation_flags & WALLET_FLAG_BLANK_WALLET)) {\n+            InitError(_(\"Wallet cannot have both DISABLE_PRIVATE_KEYS and BLANK_WALLET flags\"));",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 179,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "ac89bbac8780f0f5a3f0765414741e99d5cfcb74",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I assumed setting both was an error, but realized tests rely on being able to set both. I think I screwed up the logic though (the original code did if/else, which would actually not set one of the flags if the other one was set). Will address now.",
    "created_at": "2019-02-13T09:10:19Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r256302182",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256302182"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r256302182"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256302182/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4223,
    "side": "RIGHT",
    "in_reply_to_id": 256294078
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256305947",
    "pull_request_review_id": 203099507,
    "id": 256305947,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjMwNTk0Nw==",
    "diff_hunk": "@@ -4151,16 +4218,17 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n         walletInstance->SetMinVersion(FEATURE_LATEST);\n \n-        if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n-            //selective allow to set flags\n-            walletInstance->SetWalletFlag(WALLET_FLAG_DISABLE_PRIVATE_KEYS);\n-        } else if (wallet_creation_flags & WALLET_FLAG_BLANK_WALLET) {\n-            walletInstance->SetWalletFlag(WALLET_FLAG_BLANK_WALLET);\n-        } else {\n+        if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+            (wallet_creation_flags & WALLET_FLAG_BLANK_WALLET)) {\n+            InitError(_(\"Wallet cannot have both DISABLE_PRIVATE_KEYS and BLANK_WALLET flags\"));",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 179,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "ac89bbac8780f0f5a3f0765414741e99d5cfcb74",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Actually setting both is fine, so this check needs to be dropped.\r\n* a blank wallet with private keys enabled can import or generate new private keys\r\n* a blank wallet with private keys disabled can only import public keys\r\n\r\nThe other way around:\r\n* a wallet without private keys is blank upon creation, but that might change, so I don't think we should enforce that",
    "created_at": "2019-02-13T09:20:26Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r256305947",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256305947"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r256305947"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256305947/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4223,
    "side": "RIGHT",
    "in_reply_to_id": 256294078
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256698871",
    "pull_request_review_id": 203578216,
    "id": 256698871,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjY5ODg3MQ==",
    "diff_hunk": "@@ -4151,16 +4218,17 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n         walletInstance->SetMinVersion(FEATURE_LATEST);\n \n-        if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n-            //selective allow to set flags\n-            walletInstance->SetWalletFlag(WALLET_FLAG_DISABLE_PRIVATE_KEYS);\n-        } else if (wallet_creation_flags & WALLET_FLAG_BLANK_WALLET) {\n-            walletInstance->SetWalletFlag(WALLET_FLAG_BLANK_WALLET);\n-        } else {\n+        if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+            (wallet_creation_flags & WALLET_FLAG_BLANK_WALLET)) {\n+            InitError(_(\"Wallet cannot have both DISABLE_PRIVATE_KEYS and BLANK_WALLET flags\"));",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 179,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "ac89bbac8780f0f5a3f0765414741e99d5cfcb74",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, setting both is fine, but the code pre-this-PR will actually ignore the blank wallet flag if the disable private keys flag is set:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/9c93f5d9fc93df2120998e8383bc972b738f3ff5/src/wallet/wallet.cpp#L4142-L4151\r\n\r\n(As such, the updated code will explicitly disable the blank wallet flag if both are set, before setting all flags.)",
    "created_at": "2019-02-14T05:54:17Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r256698871",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256698871"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r256698871"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256698871/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4223,
    "side": "RIGHT",
    "in_reply_to_id": 256294078
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/278079841",
    "pull_request_review_id": 230046839,
    "id": 278079841,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3ODA3OTg0MQ==",
    "diff_hunk": "@@ -800,6 +820,9 @@ class CWallet final : public CCryptoKeyStore, private interfaces::Chain::Notific\n         std::set<CInputCoin>& setCoinsRet, CAmount& nValueRet, const CoinSelectionParams& coin_selection_params, bool& bnb_used) const;\n \n     bool IsSpent(interfaces::Chain::Lock& locked_chain, const uint256& hash, unsigned int n) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    bool IsUsed(const uint256& hash, unsigned int n) const;",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 40,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "823205aab57d91adb967bb0433c4df0ca1ff901d",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: rename to `IsUsedDestination`\r\n\r\nNeeds comment, e.g.:\r\n```cpp\r\n// Whether this or any UTXO with the same CTxDestination has been spent. \r\n```",
    "created_at": "2019-04-24T11:35:38Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r278079841",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/278079841"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r278079841"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/278079841/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 823,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/278080656",
    "pull_request_review_id": 230046839,
    "id": 278080656,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3ODA4MDY1Ng==",
    "diff_hunk": "@@ -800,6 +820,9 @@ class CWallet final : public CCryptoKeyStore, private interfaces::Chain::Notific\n         std::set<CInputCoin>& setCoinsRet, CAmount& nValueRet, const CoinSelectionParams& coin_selection_params, bool& bnb_used) const;\n \n     bool IsSpent(interfaces::Chain::Lock& locked_chain, const uint256& hash, unsigned int n) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    bool IsUsed(const uint256& hash, unsigned int n) const;\n+    void SetUsedState(const uint256& hash, unsigned int n, bool used);",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 41,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "823205aab57d91adb967bb0433c4df0ca1ff901d",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: rename to `SetUsedStateDestination`, to make it more clear that it's the `CTxDestination` we're interested in",
    "created_at": "2019-04-24T11:37:59Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r278080656",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/278080656"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r278080656"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/278080656/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 824,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/278082185",
    "pull_request_review_id": 230046839,
    "id": 278082185,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3ODA4MjE4NQ==",
    "diff_hunk": "@@ -938,6 +977,14 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n \n     uint256 hash = wtxIn.GetHash();\n \n+    if (IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE)) {",
    "path": "src/wallet/wallet.cpp",
    "position": 57,
    "original_position": 57,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "823205aab57d91adb967bb0433c4df0ca1ff901d",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Shouldn't we mark destinations as used regardless of the flag? Or does this flag imply both a default preference _and_ the entire functionality?",
    "created_at": "2019-04-24T11:42:39Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r278082185",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/278082185"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r278082185"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/278082185/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 987,
    "original_line": 987,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/278084395",
    "pull_request_review_id": 230046839,
    "id": 278084395,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3ODA4NDM5NQ==",
    "diff_hunk": "@@ -2596,6 +2684,10 @@ static UniValue createwallet(const JSONRPCRequest& request)\n         flags |= WALLET_FLAG_BLANK_WALLET;\n     }\n \n+    if (!request.params[2].isNull() && request.params[2].get_bool()) {",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 195,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "823205aab57d91adb967bb0433c4df0ca1ff901d",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yikes, not sure how I missed this in earlier reviews: needs to be `params[3]`",
    "created_at": "2019-04-24T11:49:11Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r278084395",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/278084395"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r278084395"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/278084395/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2687,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/278362872",
    "pull_request_review_id": 230410978,
    "id": 278362872,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3ODM2Mjg3Mg==",
    "diff_hunk": "@@ -938,6 +977,14 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n \n     uint256 hash = wtxIn.GetHash();\n \n+    if (IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE)) {",
    "path": "src/wallet/wallet.cpp",
    "position": 57,
    "original_position": 57,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "823205aab57d91adb967bb0433c4df0ca1ff901d",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "We do not mark destinations as used unless the user turns on `avoid_reuse`. This is the reason why people must rescan the chain if they turn it on.",
    "created_at": "2019-04-25T00:21:27Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r278362872",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/278362872"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r278362872"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/278362872/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 987,
    "original_line": 987,
    "side": "RIGHT",
    "in_reply_to_id": 278082185
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/278363069",
    "pull_request_review_id": 230411247,
    "id": 278363069,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3ODM2MzA2OQ==",
    "diff_hunk": "@@ -2596,6 +2684,10 @@ static UniValue createwallet(const JSONRPCRequest& request)\n         flags |= WALLET_FLAG_BLANK_WALLET;\n     }\n \n+    if (!request.params[2].isNull() && request.params[2].get_bool()) {",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 195,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "823205aab57d91adb967bb0433c4df0ca1ff901d",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Wow. I need to write better tests, it looks like.\r\n\r\nEdit: the tests look like they should have caught this issue. Weirdness.",
    "created_at": "2019-04-25T00:22:58Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r278363069",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/278363069"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r278363069"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/278363069/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2687,
    "side": "RIGHT",
    "in_reply_to_id": 278084395
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/278430903",
    "pull_request_review_id": 230493788,
    "id": 278430903,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3ODQzMDkwMw==",
    "diff_hunk": "@@ -2596,6 +2684,10 @@ static UniValue createwallet(const JSONRPCRequest& request)\n         flags |= WALLET_FLAG_BLANK_WALLET;\n     }\n \n+    if (!request.params[2].isNull() && request.params[2].get_bool()) {",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 195,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "823205aab57d91adb967bb0433c4df0ca1ff901d",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It was probably a rebase glitch. The tests often use named params.",
    "created_at": "2019-04-25T07:48:27Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r278430903",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/278430903"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r278430903"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/278430903/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2687,
    "side": "RIGHT",
    "in_reply_to_id": 278084395
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284874210",
    "pull_request_review_id": 238607897,
    "id": 284874210,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDg3NDIxMA==",
    "diff_hunk": "@@ -1533,10 +1580,14 @@ bool CWallet::CanGetAddresses(bool internal)\n     return keypool_has_keys;\n }\n \n-void CWallet::SetWalletFlag(uint64_t flags)\n+void CWallet::SetWalletFlag(uint64_t flag, bool value)\n {\n     LOCK(cs_wallet);\n-    m_wallet_flags |= flags;\n+    if (!flag || (flag & (flag-1))) {\n+        // flag has no bits set or more than one bit set\n+        throw std::runtime_error(std::string(__func__) + \": flag format invalid (not a single bit set)\");",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 79,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This should really be a `std::logic_error()`. The arguments passed to `SetWalletFlag()` are known by the programmer.",
    "created_at": "2019-05-16T20:00:54Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r284874210",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284874210"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r284874210"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284874210/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1588,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284892003",
    "pull_request_review_id": 238607897,
    "id": 284892003,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDg5MjAwMw==",
    "diff_hunk": "@@ -2184,6 +2236,9 @@ void CWallet::AvailableCoins(interfaces::Chain::Lock& locked_chain, std::vector<\n \n     vCoins.clear();\n     CAmount nTotal = 0;\n+    // Either AVOIDREUSE flag is not set (in which case we always allow), or we default to avoiding, and only in the case where",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 154,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: s/AVOIDREUSE/WALLET_FLAG_AVOID_REUSE so the comment matches the code",
    "created_at": "2019-05-16T20:49:07Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r284892003",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284892003"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r284892003"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284892003/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2239,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284896241",
    "pull_request_review_id": 238607897,
    "id": 284896241,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDg5NjI0MQ==",
    "diff_hunk": "@@ -4057,16 +4138,17 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n         walletInstance->SetMinVersion(FEATURE_LATEST);\n \n-        if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n-            //selective allow to set flags\n-            walletInstance->SetWalletFlag(WALLET_FLAG_DISABLE_PRIVATE_KEYS);\n-        } else if (wallet_creation_flags & WALLET_FLAG_BLANK_WALLET) {\n-            walletInstance->SetWalletFlag(WALLET_FLAG_BLANK_WALLET);\n-        } else {\n+        if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 217,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't understand how this change is related to the other changes in 56f7c53925c5f5069b325515e1f61251f8c16971 _wallet: enable avoid_reuse feature_ or to any of the other changes in this PR.",
    "created_at": "2019-05-16T21:00:18Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r284896241",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284896241"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r284896241"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284896241/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4111,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284896463",
    "pull_request_review_id": 238607897,
    "id": 284896463,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDg5NjQ2Mw==",
    "diff_hunk": "@@ -3043,6 +3116,14 @@ bool CWallet::CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::ve\n                 coin.BindWallet(this);\n                 NotifyTransactionChanged(this, coin.GetHash(), CT_UPDATED);\n             }\n+\n+            if (used) {\n+                // resulting outputs are all used (if an output is not ours, it",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 198,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can you explain a bit more why you're setting the outputs to dirty if one of the inputs is dirty?",
    "created_at": "2019-05-16T21:01:00Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r284896463",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284896463"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r284896463"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284896463/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3121,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284900105",
    "pull_request_review_id": 238607897,
    "id": 284900105,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDkwMDEwNQ==",
    "diff_hunk": "@@ -2638,16 +2660,84 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n+static UniValue setwalletflag(const JSONRPCRequest& request)\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : WALLET_FLAG_MAP)\n+            if (it.second & MUTABLE_WALLET_FLAGS)\n+                flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            RPCHelpMan{\"setwalletflag\",\n+                \"\\nChange the state of the given wallet flag for a wallet.\\n\",\n+                {\n+                    {\"flag\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name of the flag to change. Current available flags: \" + flags},\n+                    {\"state\", RPCArg::Type::BOOL, /* default */ \"true\", \"The new state.\"},\n+                },\n+                RPCResult{\n+            \"{\\n\"\n+            \"    \\\"success\\\": true|false (boolean) Boolean value indicating whether the operation was successful or not\\n\"\n+            \"    \\\"error\\\":   string     (string) Error message, or unset if successful\\n\"\n+            \"    \\\"caveats\\\": string     (string) Any caveats associated with the change\\n\"\n+            \"}\\n\"\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"setwalletflag\", \"avoid_reuse\")\n+                  + HelpExampleRpc(\"setwalletflag\", \"\\\"avoid_reuse\\\"\")\n+                },\n+            }.ToString());\n+    }\n+\n+    std::string flag_str = request.params[0].get_str();\n+    bool value = request.params[1].isNull() || request.params[1].get_bool();\n+\n+    if (!WALLET_FLAG_MAP.count(flag_str)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unknown wallet flag: %s\", flag_str));\n+    }\n+\n+    auto flag = WALLET_FLAG_MAP.at(flag_str);\n+\n+    if (!(flag & MUTABLE_WALLET_FLAGS)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Wallet flag is immutable: %s\", flag_str));\n+    }\n+\n+    UniValue res(UniValue::VOBJ);\n+\n+    if (pwallet->IsWalletFlagSet(flag) == value) {\n+        res.pushKV(\"success\", false);\n+        res.pushKV(\"error\", strprintf(\"flag %s set: %s\", flag ? \"already\" : \"not\", flag_str));\n+        return res;\n+    }\n+\n+    res.pushKV(\"success\", true);\n+\n+    pwallet->SetWalletFlag(flag, value);\n+\n+    if (flag && WALLET_FLAG_CAVEATS.count(flag)) {\n+        res.pushKV(\"caveats\", WALLET_FLAG_CAVEATS.at(flag));",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 172,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I thought this return format was confusing:\r\n\r\n```\r\n\u2192 bcli setwalletflag avoid_reuse true\r\n{\r\n  \"success\": true,\r\n  \"caveats\": \"You need to rescan the blockchain in order to correctly mark used destinations in the past. Until this is done, some destinations may be considered unused, even if the opposite is the case.\"\r\n}\r\n\r\n\u2192 bcli setwalletflag avoid_reuse false\r\n{\r\n  \"success\": true,\r\n  \"caveats\": \"You need to rescan the blockchain in order to correctly mark used destinations in the past. Until this is done, some destinations may be considered unused, even if the opposite is the case.\"\r\n}\r\n```\r\n\r\nI think it'd be clearer if:\r\n\r\n- instead of `success` it returned whether the flag is now set\r\n- it didn't print the caveat when setting the flag to false\r\n- you changed the word \"caveat\" to \"warning\", which seems much easier to understand (especially for non-native speakers).",
    "created_at": "2019-05-16T21:11:37Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r284900105",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284900105"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r284900105"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284900105/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2724,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284906674",
    "pull_request_review_id": 238607897,
    "id": 284906674,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDkwNjY3NA==",
    "diff_hunk": "@@ -386,6 +399,7 @@ static UniValue sendtoaddress(const JSONRPCRequest& request)\n                     HelpExampleCli(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.1\")\n             + HelpExampleCli(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.1 \\\"donation\\\" \\\"seans outpost\\\"\")\n             + HelpExampleCli(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.1 \\\"\\\" \\\"\\\" true\")\n+            + HelpExampleCli(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.1 \\\"\\\" \\\"\\\" false true\")",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 49,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think this is necessary (and doesn't actually demonstrate the new parameter).",
    "created_at": "2019-05-16T21:31:40Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r284906674",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284906674"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r284906674"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284906674/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 402,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284907468",
    "pull_request_review_id": 238607897,
    "id": 284907468,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDkwNzQ2OA==",
    "diff_hunk": "@@ -722,7 +739,7 @@ static UniValue getbalance(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || (request.params.size() > 3 ))\n+    if (request.fHelp || request.params.size() > 4)",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 60,
    "original_position": 68,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Consider also updating the `getbalances` RPC method (although that could be done in a follow-up PR)",
    "created_at": "2019-05-16T21:34:17Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r284907468",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284907468"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r284907468"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284907468/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 742,
    "original_line": 742,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284910188",
    "pull_request_review_id": 238607897,
    "id": 284910188,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDkxMDE4OA==",
    "diff_hunk": "@@ -39,7 +39,7 @@ const WalletInitInterface& g_wallet_init_interface = WalletInit();\n void WalletInit::AddWalletOptions() const\n {\n     gArgs.AddArg(\"-addresstype\", strprintf(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\", default: \\\"%s\\\")\", FormatOutputType(DEFAULT_ADDRESS_TYPE)), false, OptionsCategory::WALLET);\n-    gArgs.AddArg(\"-avoidpartialspends\", strprintf(\"Group outputs by address, selecting all or none, instead of selecting on a per-output basis. Privacy is improved as an address is only used once (unless someone sends to it after spending from it), but may result in slightly higher fees as suboptimal coin selection may result due to the added limitation (default: %u)\", DEFAULT_AVOIDPARTIALSPENDS), false, OptionsCategory::WALLET);\n+    gArgs.AddArg(\"-avoidpartialspends\", strprintf(\"Group outputs by address, selecting all or none, instead of selecting on a per-output basis. Privacy is improved as an address is only used once (unless someone sends to it after spending from it), but may result in slightly higher fees as suboptimal coin selection may result due to the added limitation (default: %u%s)\", DEFAULT_AVOIDPARTIALSPENDS, DEFAULT_AVOIDPARTIALSPENDS ? \"\" : \", but enabled for wallets with \\\"avoid_reuse\\\" enabled\"), false, OptionsCategory::WALLET);",
    "path": "src/wallet/init.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't understand this. We know at compile time that `DEFAULT_AVOIDPARTIALSPENDS` is false, so why do you need this ternary operator?",
    "created_at": "2019-05-16T21:43:49Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r284910188",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284910188"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r284910188"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284910188/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 42,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284911161",
    "pull_request_review_id": 238607897,
    "id": 284911161,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDkxMTE2MQ==",
    "diff_hunk": "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse and setwalletflag features.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+def reset_balance(node, discardaddr):\n+    '''",
    "path": "test/functional/wallet_avoidreuse.py",
    "position": null,
    "original_position": 22,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "micronit: one-line docstrings should be on one line with the quotes: https://www.python.org/dev/peps/pep-0257/#one-line-docstrings",
    "created_at": "2019-05-16T21:47:16Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r284911161",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284911161"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r284911161"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284911161/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 22,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284912963",
    "pull_request_review_id": 238607897,
    "id": 284912963,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDkxMjk2Mw==",
    "diff_hunk": "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse and setwalletflag features.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+def reset_balance(node, discardaddr):\n+    '''\n+    Throw away all owned coins by the node so it gets a balance of 0.\n+    '''\n+    balance = node.getbalance(avoid_reuse=False)\n+    if balance > 0.5:\n+        node.sendtoaddress(address=discardaddr, amount=balance, subtractfeefromamount=True, avoid_reuse=False)\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        '''\n+        Set up initial chain and run tests defined below\n+        '''\n+\n+        self.test_persistence()\n+        self.test_immutable()\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_senddirty()\n+        reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_send()\n+\n+    def test_persistence(self):\n+        '''\n+        Test that wallet files persist the avoid_reuse flag.\n+        '''\n+        # Configure node 1 to use avoid_reuse\n+        self.nodes[1].setwalletflag('avoid_reuse')\n+\n+        # Flags should be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+        # Stop and restart node 1\n+        self.stop_node(1)\n+        self.start_node(1)\n+        connect_nodes_bi(self.nodes, 0, 1)\n+\n+        # Flags should still be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+    def test_immutable(self):\n+        '''\n+        Test immutable wallet flags\n+        '''\n+        # Attempt to set the disable_private_keys flag; this should not work\n+        assert_raises_rpc_error(-8, \"Wallet flag is immutable\", self.nodes[1].setwalletflag, 'disable_private_keys')\n+\n+        tempwallet = \".wallet_avoidreuse.py_test_immutable_wallet.dat\"\n+\n+        # Create a wallet with disable_private_keys set; this should work\n+        self.nodes[1].createwallet(tempwallet, True)\n+        w = self.nodes[1].get_wallet_rpc(tempwallet)\n+\n+        # Attempt to unset the disable_private_keys flag; this should not work\n+        assert_raises_rpc_error(-8, \"Wallet flag is immutable\", w.setwalletflag, 'disable_private_keys', False)\n+\n+        # Unload temp wallet\n+        self.nodes[1].unloadwallet(tempwallet)\n+\n+    def test_fund_send_fund_senddirty(self):\n+        '''\n+        Test the same as test_fund_send_fund_send, except send the 10 BTC with\n+        the avoid_reuse flag set. This means the 10 BTC send should succeed,\n+        where it fails in test_fund_send_fund_send.\n+        '''\n+\n+        fundaddr = self.nodes[1].getnewaddress()\n+        retaddr = self.nodes[0].getnewaddress()\n+\n+        self.nodes[0].sendtoaddress(fundaddr, 10)\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        self.nodes[1].sendtoaddress(retaddr, 5)\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        self.nodes[0].sendtoaddress(fundaddr, 10)\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        self.nodes[1].sendtoaddress(address=retaddr, amount=10, avoid_reuse=False)\n+\n+    def test_fund_send_fund_send(self):\n+        '''\n+        Test the simple case where [1] generates a new address A, then\n+        [0] sends 10 BTC to A.\n+        [1] spends 5 BTC from A. (leaving roughly 4 BTC useable)",
    "path": "test/functional/wallet_avoidreuse.py",
    "position": null,
    "original_position": 120,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "roughly 5 BTC usable?",
    "created_at": "2019-05-16T21:53:38Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r284912963",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284912963"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r284912963"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284912963/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 120,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284913550",
    "pull_request_review_id": 238607897,
    "id": 284913550,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDkxMzU1MA==",
    "diff_hunk": "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse and setwalletflag features.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+def reset_balance(node, discardaddr):\n+    '''\n+    Throw away all owned coins by the node so it gets a balance of 0.\n+    '''\n+    balance = node.getbalance(avoid_reuse=False)\n+    if balance > 0.5:\n+        node.sendtoaddress(address=discardaddr, amount=balance, subtractfeefromamount=True, avoid_reuse=False)\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        '''\n+        Set up initial chain and run tests defined below\n+        '''\n+\n+        self.test_persistence()\n+        self.test_immutable()\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_senddirty()\n+        reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_send()\n+\n+    def test_persistence(self):\n+        '''\n+        Test that wallet files persist the avoid_reuse flag.\n+        '''\n+        # Configure node 1 to use avoid_reuse\n+        self.nodes[1].setwalletflag('avoid_reuse')\n+\n+        # Flags should be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+        # Stop and restart node 1\n+        self.stop_node(1)\n+        self.start_node(1)\n+        connect_nodes_bi(self.nodes, 0, 1)\n+\n+        # Flags should still be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+    def test_immutable(self):\n+        '''\n+        Test immutable wallet flags\n+        '''\n+        # Attempt to set the disable_private_keys flag; this should not work\n+        assert_raises_rpc_error(-8, \"Wallet flag is immutable\", self.nodes[1].setwalletflag, 'disable_private_keys')\n+\n+        tempwallet = \".wallet_avoidreuse.py_test_immutable_wallet.dat\"\n+\n+        # Create a wallet with disable_private_keys set; this should work\n+        self.nodes[1].createwallet(tempwallet, True)\n+        w = self.nodes[1].get_wallet_rpc(tempwallet)\n+\n+        # Attempt to unset the disable_private_keys flag; this should not work\n+        assert_raises_rpc_error(-8, \"Wallet flag is immutable\", w.setwalletflag, 'disable_private_keys', False)\n+\n+        # Unload temp wallet\n+        self.nodes[1].unloadwallet(tempwallet)\n+\n+    def test_fund_send_fund_senddirty(self):",
    "path": "test/functional/wallet_avoidreuse.py",
    "position": 127,
    "original_position": 92,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can you just combine this with `test_fund_send_fund_send()` by adding the final line:\r\n\r\n```python\r\nself.nodes[1].sendtoaddress(address=retaddr, amount=10, avoid_reuse=False)\r\n```\r\n\r\nto that test?",
    "created_at": "2019-05-16T21:55:55Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r284913550",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284913550"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r284913550"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284913550/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 127,
    "original_line": 127,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284914283",
    "pull_request_review_id": 238607897,
    "id": 284914283,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDkxNDI4Mw==",
    "diff_hunk": "@@ -0,0 +1,37 @@\n+Coin selection\n+--------------\n+\n+### Reuse Avoidance\n+\n+A new wallet flag `avoid_reuse` has been added (default off). When enabled,\n+a wallet will distinguish between used and unused addresses, and default to not\n+use the former in coin selection.\n+\n+(Note: rescanning the blockchain is required, to correctly mark previously\n+used destinations.)\n+\n+Together with \"avoid partial spends\" (present as of Bitcoin v0.17), this\n+addresses a serious privacy issue where a malicious user can track spends by\n+peppering a previously paid to address with near-dust outputs, which would then\n+be inadvertently included in future payments.\n+\n+New RPCs\n+--------\n+\n+- A new `setwalletflag` RPC sets/unsets flags for an existing wallet.\n+\n+\n+Updated RPCs\n+------------\n+\n+Several RPCs have been updated to include an \"avoid_reuse\" flag, used to control\n+whether already used addresses should be left out or included in the operation.\n+These include:\n+\n+- sendtoaddress\n+- getbalance\n+- getunconfirmedbalance",
    "path": "doc/release-notes-13756.md",
    "position": null,
    "original_position": 33,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "remove `getunconfirmedbalance`",
    "created_at": "2019-05-16T21:58:31Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r284914283",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284914283"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r284914283"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284914283/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 33,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285159502",
    "pull_request_review_id": 238969352,
    "id": 285159502,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTE1OTUwMg==",
    "diff_hunk": "@@ -39,7 +39,7 @@ const WalletInitInterface& g_wallet_init_interface = WalletInit();\n void WalletInit::AddWalletOptions() const\n {\n     gArgs.AddArg(\"-addresstype\", strprintf(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\", default: \\\"%s\\\")\", FormatOutputType(DEFAULT_ADDRESS_TYPE)), false, OptionsCategory::WALLET);\n-    gArgs.AddArg(\"-avoidpartialspends\", strprintf(\"Group outputs by address, selecting all or none, instead of selecting on a per-output basis. Privacy is improved as an address is only used once (unless someone sends to it after spending from it), but may result in slightly higher fees as suboptimal coin selection may result due to the added limitation (default: %u)\", DEFAULT_AVOIDPARTIALSPENDS), false, OptionsCategory::WALLET);\n+    gArgs.AddArg(\"-avoidpartialspends\", strprintf(\"Group outputs by address, selecting all or none, instead of selecting on a per-output basis. Privacy is improved as an address is only used once (unless someone sends to it after spending from it), but may result in slightly higher fees as suboptimal coin selection may result due to the added limitation (default: %u%s)\", DEFAULT_AVOIDPARTIALSPENDS, DEFAULT_AVOIDPARTIALSPENDS ? \"\" : \", but enabled for wallets with \\\"avoid_reuse\\\" enabled\"), false, OptionsCategory::WALLET);",
    "path": "src/wallet/init.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Are you suggesting #ifdef? Because we might switch this default at some point.",
    "created_at": "2019-05-17T14:49:48Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285159502",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285159502"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285159502"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285159502/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 42,
    "side": "RIGHT",
    "in_reply_to_id": 284910188
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285415362",
    "pull_request_review_id": 239276902,
    "id": 285415362,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTQxNTM2Mg==",
    "diff_hunk": "@@ -1533,10 +1580,14 @@ bool CWallet::CanGetAddresses(bool internal)\n     return keypool_has_keys;\n }\n \n-void CWallet::SetWalletFlag(uint64_t flags)\n+void CWallet::SetWalletFlag(uint64_t flag, bool value)\n {\n     LOCK(cs_wallet);\n-    m_wallet_flags |= flags;\n+    if (!flag || (flag & (flag-1))) {\n+        // flag has no bits set or more than one bit set\n+        throw std::runtime_error(std::string(__func__) + \": flag format invalid (not a single bit set)\");",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 79,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Makes sense, changed.",
    "created_at": "2019-05-20T02:39:54Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285415362",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285415362"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285415362"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285415362/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1588,
    "side": "RIGHT",
    "in_reply_to_id": 284874210
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285415978",
    "pull_request_review_id": 239277643,
    "id": 285415978,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTQxNTk3OA==",
    "diff_hunk": "@@ -4057,16 +4138,17 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n         walletInstance->SetMinVersion(FEATURE_LATEST);\n \n-        if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n-            //selective allow to set flags\n-            walletInstance->SetWalletFlag(WALLET_FLAG_DISABLE_PRIVATE_KEYS);\n-        } else if (wallet_creation_flags & WALLET_FLAG_BLANK_WALLET) {\n-            walletInstance->SetWalletFlag(WALLET_FLAG_BLANK_WALLET);\n-        } else {\n+        if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 217,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@jnewbery Existing code would set at most one of the two flags (disable privkeys or blank_wallet), and would not set any other wallet flags. As I am introducing more wallet flags, I needed those to be set, but because the existing code will *ignore* the blank_wallet flag if the *disable privkeys* flag is set, I had to do some tweakery to not modify the existing behavior.\r\n\r\nIf everyone agrees that suddenly setting both disable_privkeys AND blank_wallet is harmless, this code can be simplified down to just doing `->SetWalletFlags(...)` without the if block, but I didn't feel confident making that decision myself.",
    "created_at": "2019-05-20T02:45:46Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285415978",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285415978"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285415978"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285415978/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4111,
    "side": "RIGHT",
    "in_reply_to_id": 284896241
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285416662",
    "pull_request_review_id": 239278560,
    "id": 285416662,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTQxNjY2Mg==",
    "diff_hunk": "@@ -3043,6 +3116,14 @@ bool CWallet::CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::ve\n                 coin.BindWallet(this);\n                 NotifyTransactionChanged(this, coin.GetHash(), CT_UPDATED);\n             }\n+\n+            if (used) {\n+                // resulting outputs are all used (if an output is not ours, it",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 198,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "~~This is just a convenient place to mark-up your own UTXO:s, e.g. change address and the like. This part can be removed and the `AddToWallet*` methods will handle it a little later. I'm actually going to remove it, as it's confused myself more than once in the past, and now, you as well.~~\r\n\r\nEdit: I don't think the above response is correct. I have removed the code in question, but will dig more to see why it was there. It may have been a mistake that caused change addresses that were not reused to be marked as reused, but that should have been reflected in the node balance in tests.",
    "created_at": "2019-05-20T02:53:19Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285416662",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285416662"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285416662"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285416662/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3121,
    "side": "RIGHT",
    "in_reply_to_id": 284896463
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285417523",
    "pull_request_review_id": 239279747,
    "id": 285417523,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTQxNzUyMw==",
    "diff_hunk": "@@ -2638,16 +2660,84 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n+static UniValue setwalletflag(const JSONRPCRequest& request)\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : WALLET_FLAG_MAP)\n+            if (it.second & MUTABLE_WALLET_FLAGS)\n+                flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            RPCHelpMan{\"setwalletflag\",\n+                \"\\nChange the state of the given wallet flag for a wallet.\\n\",\n+                {\n+                    {\"flag\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name of the flag to change. Current available flags: \" + flags},\n+                    {\"state\", RPCArg::Type::BOOL, /* default */ \"true\", \"The new state.\"},\n+                },\n+                RPCResult{\n+            \"{\\n\"\n+            \"    \\\"success\\\": true|false (boolean) Boolean value indicating whether the operation was successful or not\\n\"\n+            \"    \\\"error\\\":   string     (string) Error message, or unset if successful\\n\"\n+            \"    \\\"caveats\\\": string     (string) Any caveats associated with the change\\n\"\n+            \"}\\n\"\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"setwalletflag\", \"avoid_reuse\")\n+                  + HelpExampleRpc(\"setwalletflag\", \"\\\"avoid_reuse\\\"\")\n+                },\n+            }.ToString());\n+    }\n+\n+    std::string flag_str = request.params[0].get_str();\n+    bool value = request.params[1].isNull() || request.params[1].get_bool();\n+\n+    if (!WALLET_FLAG_MAP.count(flag_str)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unknown wallet flag: %s\", flag_str));\n+    }\n+\n+    auto flag = WALLET_FLAG_MAP.at(flag_str);\n+\n+    if (!(flag & MUTABLE_WALLET_FLAGS)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Wallet flag is immutable: %s\", flag_str));\n+    }\n+\n+    UniValue res(UniValue::VOBJ);\n+\n+    if (pwallet->IsWalletFlagSet(flag) == value) {\n+        res.pushKV(\"success\", false);\n+        res.pushKV(\"error\", strprintf(\"flag %s set: %s\", flag ? \"already\" : \"not\", flag_str));\n+        return res;\n+    }\n+\n+    res.pushKV(\"success\", true);\n+\n+    pwallet->SetWalletFlag(flag, value);\n+\n+    if (flag && WALLET_FLAG_CAVEATS.count(flag)) {\n+        res.pushKV(\"caveats\", WALLET_FLAG_CAVEATS.at(flag));",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 172,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "## success flag\r\nI like `success` better than simply saying what the flag was changed to, because it better addresses the case where the user is targeting the wrong wallet. For example, I may ssh into a server with a node on it, and my intention is to turn a wallet flag on, but in this scenario, I ssh'd into the wrong machine and/or picked the wrong wallet (in the case of a node with multiple wallets).\r\n\r\nWith `success=<flag was actually changed>`, I would get a `success=false` here, which would hopefully lead me to discover my error. With `new_flag_value=true` here, I would get no such indication.\r\n\r\nPerhaps both would be a good compromise here? Add `flag_name`, `flag_old_value`, `flag_new_value` to the results. Too verbose?\r\n\r\n## caveat for true only\r\nA caveat could apply to turning off a flag as well as turning it on, though, but as this is not the case right now, I'm going with \"only show when turning flag to ON\" approach.\r\n\r\n## the word \"caveat\"\r\nAs a non-native speaker, I don't think caveat is that weird a word, but will change it if people think it's hard to understand.",
    "created_at": "2019-05-20T03:02:36Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285417523",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285417523"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285417523"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285417523/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2724,
    "side": "RIGHT",
    "in_reply_to_id": 284900105
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285417805",
    "pull_request_review_id": 239280120,
    "id": 285417805,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTQxNzgwNQ==",
    "diff_hunk": "@@ -386,6 +399,7 @@ static UniValue sendtoaddress(const JSONRPCRequest& request)\n                     HelpExampleCli(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.1\")\n             + HelpExampleCli(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.1 \\\"donation\\\" \\\"seans outpost\\\"\")\n             + HelpExampleCli(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.1 \\\"\\\" \\\"\\\" true\")\n+            + HelpExampleCli(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.1 \\\"\\\" \\\"\\\" false true\")",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 49,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yeah. Removed.",
    "created_at": "2019-05-20T03:05:21Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285417805",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285417805"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285417805"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285417805/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 402,
    "side": "RIGHT",
    "in_reply_to_id": 284906674
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285418390",
    "pull_request_review_id": 239280833,
    "id": 285418390,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTQxODM5MA==",
    "diff_hunk": "@@ -722,7 +739,7 @@ static UniValue getbalance(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || (request.params.size() > 3 ))\n+    if (request.fHelp || request.params.size() > 4)",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 60,
    "original_position": 68,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think a follow-up is a good idea here. I'll make an effort to write one soon after merge so this is fresh in people's heads.",
    "created_at": "2019-05-20T03:11:28Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285418390",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285418390"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285418390"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285418390/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 742,
    "original_line": 742,
    "side": "RIGHT",
    "in_reply_to_id": 284907468
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285419427",
    "pull_request_review_id": 239282142,
    "id": 285419427,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTQxOTQyNw==",
    "diff_hunk": "@@ -3043,6 +3116,14 @@ bool CWallet::CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::ve\n                 coin.BindWallet(this);\n                 NotifyTransactionChanged(this, coin.GetHash(), CT_UPDATED);\n             }\n+\n+            if (used) {\n+                // resulting outputs are all used (if an output is not ours, it",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 198,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I investigated further, and this is indeed a bug. I updated the tests to ensure that the balance was updated correctly, and for the case where this `if` block was present, the non-dirty balance would become 0 when it should be 5.\r\n```diff\r\ndiff --git a/test/functional/wallet_avoidreuse.py b/test/functional/wallet_avoidreuse.py\r\nindex b7b3eae34..2964d0868 100755\r\n--- a/test/functional/wallet_avoidreuse.py\r\n+++ b/test/functional/wallet_avoidreuse.py\r\n@@ -105,11 +105,15 @@ class AvoidReuseTest(BitcoinTestFramework):\r\n\r\n         self.nodes[1].sendtoaddress(address=retaddr, amount=10, avoid_reuse=False)\r\n\r\n+        # node 1 should now have about 5 btc left (for both cases)\r\n+        assert_approx(self.nodes[1].getbalance(), 5, 0.001)\r\n+        assert_approx(self.nodes[1].getbalance(avoid_reuse=False), 5, 0.001)\r\n+\r\n     def test_fund_send_fund_send(self):\r\n         '''\r\n         Test the simple case where [1] generates a new address A, then\r\n         [0] sends 10 BTC to A.\r\n-        [1] spends 5 BTC from A. (leaving roughly 4 BTC useable)\r\n+        [1] spends 5 BTC from A. (leaving roughly 5 BTC useable)\r\n         [0] sends 10 BTC to A again.\r\n         [1] tries to spend 10 BTC (fails; dirty).\r\n         [1] tries to spend 4 BTC (succeeds; change address sufficient)\r\n@@ -138,5 +142,9 @@ class AvoidReuseTest(BitcoinTestFramework):\r\n\r\n         self.nodes[1].sendtoaddress(retaddr, 4)\r\n\r\n+        # node 1 should now have about 1 btc left (no dirty) and 11 (including dirty)\r\n+        assert_approx(self.nodes[1].getbalance(), 1, 0.001)\r\n+        assert_approx(self.nodes[1].getbalance(avoid_reuse=False), 11, 0.001)\r\n+\r\n if __name__ == '__main__':\r\n     AvoidReuseTest().main()\r\n```\r\nFor case with `if (used) [...]` present:\r\n```\r\n2019-05-20T03:18:33.609000Z TestFramework (ERROR): Assertion failed\r\nTraceback (most recent call last):\r\n  File \"/Users/me/path/bitcoin/test/functional/test_framework/test_framework.py\", line 194, in main\r\n    self.run_test()\r\n  File \"./wallet_avoidreuse.py\", line 45, in run_test\r\n    self.test_fund_send_fund_senddirty()\r\n  File \"./wallet_avoidreuse.py\", line 109, in test_fund_send_fund_senddirty\r\n    assert_approx(self.nodes[1].getbalance(), 5, 0.001)\r\n  File \"./wallet_avoidreuse.py\", line 17, in assert_approx\r\n    raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\r\nAssertionError: 0E-8 < [4.999..5.001]\r\n```",
    "created_at": "2019-05-20T03:22:13Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285419427",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285419427"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285419427"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285419427/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3121,
    "side": "RIGHT",
    "in_reply_to_id": 284896463
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285419693",
    "pull_request_review_id": 239282486,
    "id": 285419693,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTQxOTY5Mw==",
    "diff_hunk": "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse and setwalletflag features.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+def reset_balance(node, discardaddr):\n+    '''\n+    Throw away all owned coins by the node so it gets a balance of 0.\n+    '''\n+    balance = node.getbalance(avoid_reuse=False)\n+    if balance > 0.5:\n+        node.sendtoaddress(address=discardaddr, amount=balance, subtractfeefromamount=True, avoid_reuse=False)\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        '''\n+        Set up initial chain and run tests defined below\n+        '''\n+\n+        self.test_persistence()\n+        self.test_immutable()\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_senddirty()\n+        reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_send()\n+\n+    def test_persistence(self):\n+        '''\n+        Test that wallet files persist the avoid_reuse flag.\n+        '''\n+        # Configure node 1 to use avoid_reuse\n+        self.nodes[1].setwalletflag('avoid_reuse')\n+\n+        # Flags should be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+        # Stop and restart node 1\n+        self.stop_node(1)\n+        self.start_node(1)\n+        connect_nodes_bi(self.nodes, 0, 1)\n+\n+        # Flags should still be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+    def test_immutable(self):\n+        '''\n+        Test immutable wallet flags\n+        '''\n+        # Attempt to set the disable_private_keys flag; this should not work\n+        assert_raises_rpc_error(-8, \"Wallet flag is immutable\", self.nodes[1].setwalletflag, 'disable_private_keys')\n+\n+        tempwallet = \".wallet_avoidreuse.py_test_immutable_wallet.dat\"\n+\n+        # Create a wallet with disable_private_keys set; this should work\n+        self.nodes[1].createwallet(tempwallet, True)\n+        w = self.nodes[1].get_wallet_rpc(tempwallet)\n+\n+        # Attempt to unset the disable_private_keys flag; this should not work\n+        assert_raises_rpc_error(-8, \"Wallet flag is immutable\", w.setwalletflag, 'disable_private_keys', False)\n+\n+        # Unload temp wallet\n+        self.nodes[1].unloadwallet(tempwallet)\n+\n+    def test_fund_send_fund_senddirty(self):",
    "path": "test/functional/wallet_avoidreuse.py",
    "position": 127,
    "original_position": 92,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think I like the two separate, especially now that they ensure the balance updates are correct in each case. Look at the updated tests, and if you still think they should be merged, I can do so!",
    "created_at": "2019-05-20T03:24:50Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285419693",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285419693"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285419693"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285419693/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 127,
    "original_line": 127,
    "side": "RIGHT",
    "in_reply_to_id": 284913550
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285767473",
    "pull_request_review_id": 239722073,
    "id": 285767473,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTc2NzQ3Mw==",
    "diff_hunk": "@@ -4057,16 +4138,17 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n         walletInstance->SetMinVersion(FEATURE_LATEST);\n \n-        if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n-            //selective allow to set flags\n-            walletInstance->SetWalletFlag(WALLET_FLAG_DISABLE_PRIVATE_KEYS);\n-        } else if (wallet_creation_flags & WALLET_FLAG_BLANK_WALLET) {\n-            walletInstance->SetWalletFlag(WALLET_FLAG_BLANK_WALLET);\n-        } else {\n+        if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 217,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ah. I see now. Yes, this makes sense, although it's a little confusing the way that the generic `setWalletFlags()` is called between two blocks of blank wallet specific code.\r\n\r\nI've done some grepping and it seems to me that it's fine for `WALLET_FLAG_BLANK_WALLET` and `WALLET_FLAG_DISABLE_PRIVATE_KEYS` to be set on the same wallet. @achow101 should know for sure.",
    "created_at": "2019-05-20T21:03:12Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285767473",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285767473"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285767473"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285767473/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4111,
    "side": "RIGHT",
    "in_reply_to_id": 284896241
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285771071",
    "pull_request_review_id": 239726414,
    "id": 285771071,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTc3MTA3MQ==",
    "diff_hunk": "@@ -2638,16 +2660,84 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n+static UniValue setwalletflag(const JSONRPCRequest& request)\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : WALLET_FLAG_MAP)\n+            if (it.second & MUTABLE_WALLET_FLAGS)\n+                flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            RPCHelpMan{\"setwalletflag\",\n+                \"\\nChange the state of the given wallet flag for a wallet.\\n\",\n+                {\n+                    {\"flag\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name of the flag to change. Current available flags: \" + flags},\n+                    {\"state\", RPCArg::Type::BOOL, /* default */ \"true\", \"The new state.\"},\n+                },\n+                RPCResult{\n+            \"{\\n\"\n+            \"    \\\"success\\\": true|false (boolean) Boolean value indicating whether the operation was successful or not\\n\"\n+            \"    \\\"error\\\":   string     (string) Error message, or unset if successful\\n\"\n+            \"    \\\"caveats\\\": string     (string) Any caveats associated with the change\\n\"\n+            \"}\\n\"\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"setwalletflag\", \"avoid_reuse\")\n+                  + HelpExampleRpc(\"setwalletflag\", \"\\\"avoid_reuse\\\"\")\n+                },\n+            }.ToString());\n+    }\n+\n+    std::string flag_str = request.params[0].get_str();\n+    bool value = request.params[1].isNull() || request.params[1].get_bool();\n+\n+    if (!WALLET_FLAG_MAP.count(flag_str)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unknown wallet flag: %s\", flag_str));\n+    }\n+\n+    auto flag = WALLET_FLAG_MAP.at(flag_str);\n+\n+    if (!(flag & MUTABLE_WALLET_FLAGS)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Wallet flag is immutable: %s\", flag_str));\n+    }\n+\n+    UniValue res(UniValue::VOBJ);\n+\n+    if (pwallet->IsWalletFlagSet(flag) == value) {\n+        res.pushKV(\"success\", false);\n+        res.pushKV(\"error\", strprintf(\"flag %s set: %s\", flag ? \"already\" : \"not\", flag_str));\n+        return res;\n+    }\n+\n+    res.pushKV(\"success\", true);\n+\n+    pwallet->SetWalletFlag(flag, value);\n+\n+    if (flag && WALLET_FLAG_CAVEATS.count(flag)) {\n+        res.pushKV(\"caveats\", WALLET_FLAG_CAVEATS.at(flag));",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 172,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> Add flag_name, flag_old_value, flag_new_value to the results. Too verbose?\r\n\r\nSeems ok to me. Alternatively, you could just throw a `JSONRPCError` if the flag is already set to what was requested. That's the way we usually deal with input errors in the RPCs.\r\n\r\n> As a non-native speaker, I don't think caveat is that weird a word\r\n\r\nI'm going to claim that 'warning' is a [far more common word](https://books.google.com/ngrams/graph?content=caveat%2Cwarning&year_start=1800&year_end=2008&corpus=15&smoothing=7&share=&direct_url=t1%3B%2Ccaveat%3B%2Cc0%3B.t1%3B%2Cwarning%3B%2Cc0), and conveys the same meaning.",
    "created_at": "2019-05-20T21:14:08Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285771071",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285771071"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285771071"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285771071/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2724,
    "side": "RIGHT",
    "in_reply_to_id": 284900105
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285774028",
    "pull_request_review_id": 239730192,
    "id": 285774028,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTc3NDAyOA==",
    "diff_hunk": "@@ -39,7 +39,7 @@ const WalletInitInterface& g_wallet_init_interface = WalletInit();\n void WalletInit::AddWalletOptions() const\n {\n     gArgs.AddArg(\"-addresstype\", strprintf(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\", default: \\\"%s\\\")\", FormatOutputType(DEFAULT_ADDRESS_TYPE)), false, OptionsCategory::WALLET);\n-    gArgs.AddArg(\"-avoidpartialspends\", strprintf(\"Group outputs by address, selecting all or none, instead of selecting on a per-output basis. Privacy is improved as an address is only used once (unless someone sends to it after spending from it), but may result in slightly higher fees as suboptimal coin selection may result due to the added limitation (default: %u)\", DEFAULT_AVOIDPARTIALSPENDS), false, OptionsCategory::WALLET);\n+    gArgs.AddArg(\"-avoidpartialspends\", strprintf(\"Group outputs by address, selecting all or none, instead of selecting on a per-output basis. Privacy is improved as an address is only used once (unless someone sends to it after spending from it), but may result in slightly higher fees as suboptimal coin selection may result due to the added limitation (default: %u%s)\", DEFAULT_AVOIDPARTIALSPENDS, DEFAULT_AVOIDPARTIALSPENDS ? \"\" : \", but enabled for wallets with \\\"avoid_reuse\\\" enabled\"), false, OptionsCategory::WALLET);",
    "path": "src/wallet/init.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I just think it's weird to have runtime programming logic to construct a string where we already know what that string should be. If the concern is about this help text not being updated if `DEFAULT_AVOIDPARTIALSPENDS` changes, then I think it would be better to just leave a comment where that constant is defined saying \"If this is changed to true, update the help text for -avoidpartialspends\"",
    "created_at": "2019-05-20T21:24:07Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285774028",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285774028"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285774028"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285774028/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 42,
    "side": "RIGHT",
    "in_reply_to_id": 284910188
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285781829",
    "pull_request_review_id": 239739979,
    "id": 285781829,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTc4MTgyOQ==",
    "diff_hunk": "@@ -3043,6 +3116,14 @@ bool CWallet::CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::ve\n                 coin.BindWallet(this);\n                 NotifyTransactionChanged(this, coin.GetHash(), CT_UPDATED);\n             }\n+\n+            if (used) {\n+                // resulting outputs are all used (if an output is not ours, it",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 198,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "oh, I think I understand why this code was here now. In the test you've just shown a way of turning coins from dirty to clean by creating a tx that uses up the dirty input and makes a clean change output.\r\n\r\nI can see arguments for why you might want to consider it dirty, but on balance I think you've got the right logic now. The change output is a fresh address, so shouldn't be considered dirty.",
    "created_at": "2019-05-20T21:51:43Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285781829",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285781829"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285781829"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285781829/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3121,
    "side": "RIGHT",
    "in_reply_to_id": 284896463
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285782086",
    "pull_request_review_id": 239740324,
    "id": 285782086,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTc4MjA4Ng==",
    "diff_hunk": "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse and setwalletflag features.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+def reset_balance(node, discardaddr):\n+    '''Throw away all owned coins by the node so it gets a balance of 0.'''\n+    balance = node.getbalance(avoid_reuse=False)\n+    if balance > 0.5:\n+        node.sendtoaddress(address=discardaddr, amount=balance, subtractfeefromamount=True, avoid_reuse=False)\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        '''Set up initial chain and run tests defined below'''\n+\n+        self.test_persistence()\n+        self.test_immutable()\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_senddirty()\n+        reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_send()\n+\n+    def test_persistence(self):\n+        '''Test that wallet files persist the avoid_reuse flag.'''\n+        # Configure node 1 to use avoid_reuse\n+        self.nodes[1].setwalletflag('avoid_reuse')\n+\n+        # Flags should be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+        # Stop and restart node 1\n+        self.stop_node(1)\n+        self.start_node(1)\n+        connect_nodes_bi(self.nodes, 0, 1)\n+\n+        # Flags should still be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+    def test_immutable(self):\n+        '''Test immutable wallet flags'''\n+        # Attempt to set the disable_private_keys flag; this should not work\n+        assert_raises_rpc_error(-8, \"Wallet flag is immutable\", self.nodes[1].setwalletflag, 'disable_private_keys')\n+\n+        tempwallet = \".wallet_avoidreuse.py_test_immutable_wallet.dat\"\n+\n+        # Create a wallet with disable_private_keys set; this should work\n+        self.nodes[1].createwallet(tempwallet, True)\n+        w = self.nodes[1].get_wallet_rpc(tempwallet)\n+\n+        # Attempt to unset the disable_private_keys flag; this should not work\n+        assert_raises_rpc_error(-8, \"Wallet flag is immutable\", w.setwalletflag, 'disable_private_keys', False)\n+\n+        # Unload temp wallet\n+        self.nodes[1].unloadwallet(tempwallet)\n+\n+    def test_fund_send_fund_senddirty(self):\n+        '''\n+        Test the same as test_fund_send_fund_send, except send the 10 BTC with\n+        the avoid_reuse flag set. This means the 10 BTC send should succeed,",
    "path": "test/functional/wallet_avoidreuse.py",
    "position": null,
    "original_position": 87,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "14b08a27b3e1d6c9e97ebea2bcd364145ada6b7c",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think this needs to be updated to say \"node 1 sends the 10BTC with the avoid_reuse flag set to false\"",
    "created_at": "2019-05-20T21:52:51Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285782086",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285782086"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285782086"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285782086/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 87,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285834294",
    "pull_request_review_id": 239803996,
    "id": 285834294,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTgzNDI5NA==",
    "diff_hunk": "@@ -3043,6 +3116,14 @@ bool CWallet::CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::ve\n                 coin.BindWallet(this);\n                 NotifyTransactionChanged(this, coin.GetHash(), CT_UPDATED);\n             }\n+\n+            if (used) {\n+                // resulting outputs are all used (if an output is not ours, it",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 198,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yeah, I think I got the logic mixed up in there when I wrote that block. Thanks for pointing that out!",
    "created_at": "2019-05-21T02:53:55Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285834294",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285834294"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285834294"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285834294/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3121,
    "side": "RIGHT",
    "in_reply_to_id": 284896463
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285837601",
    "pull_request_review_id": 239808087,
    "id": 285837601,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTgzNzYwMQ==",
    "diff_hunk": "@@ -2638,16 +2660,84 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n+static UniValue setwalletflag(const JSONRPCRequest& request)\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : WALLET_FLAG_MAP)\n+            if (it.second & MUTABLE_WALLET_FLAGS)\n+                flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            RPCHelpMan{\"setwalletflag\",\n+                \"\\nChange the state of the given wallet flag for a wallet.\\n\",\n+                {\n+                    {\"flag\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name of the flag to change. Current available flags: \" + flags},\n+                    {\"state\", RPCArg::Type::BOOL, /* default */ \"true\", \"The new state.\"},\n+                },\n+                RPCResult{\n+            \"{\\n\"\n+            \"    \\\"success\\\": true|false (boolean) Boolean value indicating whether the operation was successful or not\\n\"\n+            \"    \\\"error\\\":   string     (string) Error message, or unset if successful\\n\"\n+            \"    \\\"caveats\\\": string     (string) Any caveats associated with the change\\n\"\n+            \"}\\n\"\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"setwalletflag\", \"avoid_reuse\")\n+                  + HelpExampleRpc(\"setwalletflag\", \"\\\"avoid_reuse\\\"\")\n+                },\n+            }.ToString());\n+    }\n+\n+    std::string flag_str = request.params[0].get_str();\n+    bool value = request.params[1].isNull() || request.params[1].get_bool();\n+\n+    if (!WALLET_FLAG_MAP.count(flag_str)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Unknown wallet flag: %s\", flag_str));\n+    }\n+\n+    auto flag = WALLET_FLAG_MAP.at(flag_str);\n+\n+    if (!(flag & MUTABLE_WALLET_FLAGS)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Wallet flag is immutable: %s\", flag_str));\n+    }\n+\n+    UniValue res(UniValue::VOBJ);\n+\n+    if (pwallet->IsWalletFlagSet(flag) == value) {\n+        res.pushKV(\"success\", false);\n+        res.pushKV(\"error\", strprintf(\"flag %s set: %s\", flag ? \"already\" : \"not\", flag_str));\n+        return res;\n+    }\n+\n+    res.pushKV(\"success\", true);\n+\n+    pwallet->SetWalletFlag(flag, value);\n+\n+    if (flag && WALLET_FLAG_CAVEATS.count(flag)) {\n+        res.pushKV(\"caveats\", WALLET_FLAG_CAVEATS.at(flag));",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 172,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Throwing seems sensible. Going with that and adding flag name and value (but skipping old value as it's now implied). Switching caveat to warning.",
    "created_at": "2019-05-21T03:19:05Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285837601",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285837601"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285837601"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285837601/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2724,
    "side": "RIGHT",
    "in_reply_to_id": 284900105
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285837940",
    "pull_request_review_id": 239808541,
    "id": 285837940,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTgzNzk0MA==",
    "diff_hunk": "@@ -39,7 +39,7 @@ const WalletInitInterface& g_wallet_init_interface = WalletInit();\n void WalletInit::AddWalletOptions() const\n {\n     gArgs.AddArg(\"-addresstype\", strprintf(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\", default: \\\"%s\\\")\", FormatOutputType(DEFAULT_ADDRESS_TYPE)), false, OptionsCategory::WALLET);\n-    gArgs.AddArg(\"-avoidpartialspends\", strprintf(\"Group outputs by address, selecting all or none, instead of selecting on a per-output basis. Privacy is improved as an address is only used once (unless someone sends to it after spending from it), but may result in slightly higher fees as suboptimal coin selection may result due to the added limitation (default: %u)\", DEFAULT_AVOIDPARTIALSPENDS), false, OptionsCategory::WALLET);\n+    gArgs.AddArg(\"-avoidpartialspends\", strprintf(\"Group outputs by address, selecting all or none, instead of selecting on a per-output basis. Privacy is improved as an address is only used once (unless someone sends to it after spending from it), but may result in slightly higher fees as suboptimal coin selection may result due to the added limitation (default: %u%s)\", DEFAULT_AVOIDPARTIALSPENDS, DEFAULT_AVOIDPARTIALSPENDS ? \"\" : \", but enabled for wallets with \\\"avoid_reuse\\\" enabled\"), false, OptionsCategory::WALLET);",
    "path": "src/wallet/init.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I am going to just remove the conditional part of this and have it always say `\"(always enabled for wallets with \\\"avoid_reuse\\\" enabled)\"`. That should resolve the issue, I think?",
    "created_at": "2019-05-21T03:22:00Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285837940",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285837940"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r285837940"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285837940/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 42,
    "side": "RIGHT",
    "in_reply_to_id": 284910188
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/286586336",
    "pull_request_review_id": 240753963,
    "id": 286586336,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NjU4NjMzNg==",
    "diff_hunk": "@@ -3032,6 +3091,20 @@ bool CWallet::CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::ve\n             // Take key pair from key pool so it won't be used again\n             reservekey.KeepKey();\n \n+            // We determine if used before adding to wallet, as that WILL mark\n+            // the inputs as used; after adding to wallet, we mark new UTXO's\n+            // as used as appropriate\n+            bool used = false;\n+            if (IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE)) {\n+                for (const auto& vin : wtxNew.tx->vin) {\n+                    if (IsUsedDestination(vin.prevout.hash, vin.prevout.n)) {\n+                        used = true;",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 182,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "f932ca0d8eb804a20122655ad8155b5c5dc5cddb",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't understand what this code block is doing. You have a boolean `used` which is initially set to false and then may be updated to true, but you never use the value of `used` anywhere.",
    "created_at": "2019-05-22T16:43:48Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r286586336",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/286586336"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r286586336"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/286586336/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3101,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/286770933",
    "pull_request_review_id": 240982263,
    "id": 286770933,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4Njc3MDkzMw==",
    "diff_hunk": "@@ -3032,6 +3091,20 @@ bool CWallet::CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::ve\n             // Take key pair from key pool so it won't be used again\n             reservekey.KeepKey();\n \n+            // We determine if used before adding to wallet, as that WILL mark\n+            // the inputs as used; after adding to wallet, we mark new UTXO's\n+            // as used as appropriate\n+            bool used = false;\n+            if (IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE)) {\n+                for (const auto& vin : wtxNew.tx->vin) {\n+                    if (IsUsedDestination(vin.prevout.hash, vin.prevout.n)) {\n+                        used = true;",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 182,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "f932ca0d8eb804a20122655ad8155b5c5dc5cddb",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That was leftovers from the incorrect code that I removed earlier. Thanks, removed!",
    "created_at": "2019-05-23T04:21:57Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r286770933",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/286770933"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r286770933"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/286770933/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3101,
    "side": "RIGHT",
    "in_reply_to_id": 286586336
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/287109904",
    "pull_request_review_id": 241418935,
    "id": 287109904,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzEwOTkwNA==",
    "diff_hunk": "@@ -2639,6 +2660,72 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n+static UniValue setwalletflag(const JSONRPCRequest& request)\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : WALLET_FLAG_MAP)\n+            if (it.second & MUTABLE_WALLET_FLAGS)\n+                flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            RPCHelpMan{\"setwalletflag\",\n+                \"\\nChange the state of the given wallet flag for a wallet.\\n\",\n+                {\n+                    {\"flag\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name of the flag to change. Current available flags: \" + flags},\n+                    {\"state\", RPCArg::Type::BOOL, /* default */ \"true\", \"The new state.\"},",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 122,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "f27b3c8df8895b95911e89eae7a5d66b26704920",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This needs to match the name in rpc/client.cpp and the CRPCCommand table below (which is currently `value`).",
    "created_at": "2019-05-23T19:57:03Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r287109904",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/287109904"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r287109904"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/287109904/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2682,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/287221844",
    "pull_request_review_id": 241560548,
    "id": 287221844,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzIyMTg0NA==",
    "diff_hunk": "@@ -2639,6 +2660,72 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n+static UniValue setwalletflag(const JSONRPCRequest& request)\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        std::string flags = \"\";\n+        for (auto& it : WALLET_FLAG_MAP)\n+            if (it.second & MUTABLE_WALLET_FLAGS)\n+                flags += (flags == \"\" ? \"\" : \", \") + it.first;\n+        throw std::runtime_error(\n+            RPCHelpMan{\"setwalletflag\",\n+                \"\\nChange the state of the given wallet flag for a wallet.\\n\",\n+                {\n+                    {\"flag\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name of the flag to change. Current available flags: \" + flags},\n+                    {\"state\", RPCArg::Type::BOOL, /* default */ \"true\", \"The new state.\"},",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 122,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "f27b3c8df8895b95911e89eae7a5d66b26704920",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Changed to `value`.",
    "created_at": "2019-05-24T05:44:07Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r287221844",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/287221844"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r287221844"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/287221844/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2682,
    "side": "RIGHT",
    "in_reply_to_id": 287109904
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/287415117",
    "pull_request_review_id": 241813690,
    "id": 287415117,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzQxNTExNw==",
    "diff_hunk": "@@ -4057,16 +4138,17 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n         walletInstance->SetMinVersion(FEATURE_LATEST);\n \n-        if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n-            //selective allow to set flags\n-            walletInstance->SetWalletFlag(WALLET_FLAG_DISABLE_PRIVATE_KEYS);\n-        } else if (wallet_creation_flags & WALLET_FLAG_BLANK_WALLET) {\n-            walletInstance->SetWalletFlag(WALLET_FLAG_BLANK_WALLET);\n-        } else {\n+        if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 217,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It's fine to set both `WALLET_FLAG_BLANK_WALLET` and `WALLET_FLAG_DISABLE_PRIVATE_KEYS` on a wallet, though redundant. `WALLET_FLAG_BLANK_WALLET` will be unset whenever something is imported.",
    "created_at": "2019-05-24T15:40:36Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r287415117",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/287415117"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r287415117"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/287415117/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4111,
    "side": "RIGHT",
    "in_reply_to_id": 284896241
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/287425444",
    "pull_request_review_id": 241827421,
    "id": 287425444,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzQyNTQ0NA==",
    "diff_hunk": "@@ -4057,16 +4138,17 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n         walletInstance->SetMinVersion(FEATURE_LATEST);\n \n-        if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n-            //selective allow to set flags\n-            walletInstance->SetWalletFlag(WALLET_FLAG_DISABLE_PRIVATE_KEYS);\n-        } else if (wallet_creation_flags & WALLET_FLAG_BLANK_WALLET) {\n-            walletInstance->SetWalletFlag(WALLET_FLAG_BLANK_WALLET);\n-        } else {\n+        if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 217,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I wish the `BLANK_WALLET` flag was called something more like `WALLET_IS_ALREADY_INITIALIZED` or `WALLET_DO_NOT_REINITIALIZE` since the only effect of the flag is to skip the `fFirstRun` code path when the wallet is loaded. I think the term \"blank wallet\" is good as a createwallet option name, but less good as a flag name.",
    "created_at": "2019-05-24T16:08:27Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r287425444",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/287425444"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r287425444"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/287425444/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4111,
    "side": "RIGHT",
    "in_reply_to_id": 284896241
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/287545067",
    "pull_request_review_id": 241982904,
    "id": 287545067,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzU0NTA2Nw==",
    "diff_hunk": "@@ -4057,16 +4138,17 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n         walletInstance->SetMinVersion(FEATURE_LATEST);\n \n-        if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n-            //selective allow to set flags\n-            walletInstance->SetWalletFlag(WALLET_FLAG_DISABLE_PRIVATE_KEYS);\n-        } else if (wallet_creation_flags & WALLET_FLAG_BLANK_WALLET) {\n-            walletInstance->SetWalletFlag(WALLET_FLAG_BLANK_WALLET);\n-        } else {\n+        if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 217,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "69ec084ace48378c2eecd1b6568639ecfb50469b",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Removed the redundant if block.",
    "created_at": "2019-05-25T01:01:55Z",
    "updated_at": "2019-05-29T09:41:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r287545067",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/287545067"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r287545067"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/287545067/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4111,
    "side": "RIGHT",
    "in_reply_to_id": 284896241
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294799695",
    "pull_request_review_id": 251067440,
    "id": 294799695,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDc5OTY5NQ==",
    "diff_hunk": "@@ -0,0 +1,217 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse and setwalletflag features.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+def reset_balance(node, discardaddr):\n+    '''Throw away all owned coins by the node so it gets a balance of 0.'''\n+    balance = node.getbalance(avoid_reuse=False)\n+    if balance > 0.5:\n+        node.sendtoaddress(address=discardaddr, amount=balance, subtractfeefromamount=True, avoid_reuse=False)\n+\n+def count_unspent(node):\n+    '''Count the unspent outputs for the given node and return various statistics'''\n+    r = {\n+        \"total\": {\n+            \"count\": 0,\n+            \"sum\": 0,\n+        },\n+        \"reused\": {\n+            \"count\": 0,\n+            \"sum\": 0,\n+        },\n+    }\n+    supports_reused = True\n+    for utxo in node.listunspent(minconf=0):\n+        r[\"total\"][\"count\"] += 1\n+        r[\"total\"][\"sum\"] += utxo[\"amount\"]\n+        if supports_reused and \"reused\" in utxo:\n+            if utxo[\"reused\"]:\n+                r[\"reused\"][\"count\"] += 1\n+                r[\"reused\"][\"sum\"] += utxo[\"amount\"]\n+        else:\n+            supports_reused = False\n+    r[\"reused\"][\"supported\"] = supports_reused\n+    return r\n+\n+def assert_unspent(node, total_count=None, total_sum=None, reused_supported=None, reused_count=None, reused_sum=None):\n+    '''Make assertions about a node's unspent output statistics'''\n+    stats = count_unspent(node)\n+    if total_count is not None:\n+        assert_equal(stats[\"total\"][\"count\"], total_count)\n+    if total_sum is not None:\n+        assert_approx(stats[\"total\"][\"sum\"], total_sum, 0.001)\n+    if reused_supported is not None:\n+        assert_equal(stats[\"reused\"][\"supported\"], reused_supported)\n+    if reused_count is not None:\n+        assert_equal(stats[\"reused\"][\"count\"], reused_count)\n+    if reused_sum is not None:\n+        assert_approx(stats[\"reused\"][\"sum\"], reused_sum, 0.001)\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        '''Set up initial chain and run tests defined below'''\n+\n+        self.test_persistence()\n+        self.test_immutable()\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_senddirty()\n+        reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_send()\n+\n+    def test_persistence(self):\n+        '''Test that wallet files persist the avoid_reuse flag.'''\n+        # Configure node 1 to use avoid_reuse\n+        self.nodes[1].setwalletflag('avoid_reuse')\n+\n+        # Flags should be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+        # Stop and restart node 1\n+        self.stop_node(1)\n+        self.start_node(1)\n+        connect_nodes_bi(self.nodes, 0, 1)\n+\n+        # Flags should still be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+        # Attempting to set flag to its current state should throw\n+        assert_raises_rpc_error(-8, \"Wallet flag is already set to false\", self.nodes[0].setwalletflag, 'avoid_reuse', False)\n+        assert_raises_rpc_error(-8, \"Wallet flag is already set to true\", self.nodes[1].setwalletflag, 'avoid_reuse', True)\n+\n+    def test_immutable(self):",
    "path": "test/functional/wallet_avoidreuse.py",
    "position": 110,
    "original_position": 110,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "8f2e208f7c0468f9ba92bc789a698281b1c81284",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In addition to the above TODO, I also suggest this be moved to a different file later (its independent of the avoid-reuse tests)",
    "created_at": "2019-06-18T12:41:01Z",
    "updated_at": "2019-06-18T12:41:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r294799695",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294799695"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r294799695"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294799695/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 110,
    "original_line": 110,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294845332",
    "pull_request_review_id": 251127009,
    "id": 294845332,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDg0NTMzMg==",
    "diff_hunk": "@@ -20,7 +20,9 @@ enum isminetype\n     ISMINE_NO         = 0,\n     ISMINE_WATCH_ONLY = 1 << 0,\n     ISMINE_SPENDABLE  = 1 << 1,\n+    ISMINE_USED       = 1 << 2,\n     ISMINE_ALL        = ISMINE_WATCH_ONLY | ISMINE_SPENDABLE,\n+    ISMINE_ALL_USED   = ISMINE_ALL | ISMINE_USED,",
    "path": "src/script/ismine.h",
    "position": 6,
    "original_position": 6,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "8247a0da3a46d7c38943ee0304343ab7465305bd",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is it really necessary to add new ismine types? AFAICT, these are only used as ismine filters which I think could just as easily be done with a boolean. `IsMine()` isn't returning these values, and `ISMINE_ALL_USED` isn't used anywhere.",
    "created_at": "2019-06-18T14:14:37Z",
    "updated_at": "2019-06-18T14:14:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r294845332",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294845332"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r294845332"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294845332/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 25,
    "original_line": 25,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294848634",
    "pull_request_review_id": 251131242,
    "id": 294848634,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDg0ODYzNA==",
    "diff_hunk": "@@ -2639,6 +2660,76 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n+static UniValue setwalletflag(const JSONRPCRequest& request)\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 112,
    "original_position": 112,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: Use `RPCHelpMan help{...}`. See https://github.com/bitcoin/bitcoin/blob/master/src/rpc/rawtransaction.cpp#L74 for an example.",
    "created_at": "2019-06-18T14:20:33Z",
    "updated_at": "2019-06-18T14:57:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r294848634",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294848634"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r294848634"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294848634/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2672,
    "original_line": 2672,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294852008",
    "pull_request_review_id": 251135609,
    "id": 294852008,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDg1MjAwOA==",
    "diff_hunk": "@@ -0,0 +1,217 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the avoid_reuse and setwalletflag features.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+)\n+\n+# TODO: Copied from wallet_groups.py -- should perhaps move into util.py\n+def assert_approx(v, vexp, vspan=0.00001):\n+    if v < vexp - vspan:\n+        raise AssertionError(\"%s < [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+    if v > vexp + vspan:\n+        raise AssertionError(\"%s > [%s..%s]\" % (str(v), str(vexp - vspan), str(vexp + vspan)))\n+\n+def reset_balance(node, discardaddr):\n+    '''Throw away all owned coins by the node so it gets a balance of 0.'''\n+    balance = node.getbalance(avoid_reuse=False)\n+    if balance > 0.5:\n+        node.sendtoaddress(address=discardaddr, amount=balance, subtractfeefromamount=True, avoid_reuse=False)\n+\n+def count_unspent(node):\n+    '''Count the unspent outputs for the given node and return various statistics'''\n+    r = {\n+        \"total\": {\n+            \"count\": 0,\n+            \"sum\": 0,\n+        },\n+        \"reused\": {\n+            \"count\": 0,\n+            \"sum\": 0,\n+        },\n+    }\n+    supports_reused = True\n+    for utxo in node.listunspent(minconf=0):\n+        r[\"total\"][\"count\"] += 1\n+        r[\"total\"][\"sum\"] += utxo[\"amount\"]\n+        if supports_reused and \"reused\" in utxo:\n+            if utxo[\"reused\"]:\n+                r[\"reused\"][\"count\"] += 1\n+                r[\"reused\"][\"sum\"] += utxo[\"amount\"]\n+        else:\n+            supports_reused = False\n+    r[\"reused\"][\"supported\"] = supports_reused\n+    return r\n+\n+def assert_unspent(node, total_count=None, total_sum=None, reused_supported=None, reused_count=None, reused_sum=None):\n+    '''Make assertions about a node's unspent output statistics'''\n+    stats = count_unspent(node)\n+    if total_count is not None:\n+        assert_equal(stats[\"total\"][\"count\"], total_count)\n+    if total_sum is not None:\n+        assert_approx(stats[\"total\"][\"sum\"], total_sum, 0.001)\n+    if reused_supported is not None:\n+        assert_equal(stats[\"reused\"][\"supported\"], reused_supported)\n+    if reused_count is not None:\n+        assert_equal(stats[\"reused\"][\"count\"], reused_count)\n+    if reused_sum is not None:\n+        assert_approx(stats[\"reused\"][\"sum\"], reused_sum, 0.001)\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        '''Set up initial chain and run tests defined below'''\n+\n+        self.test_persistence()\n+        self.test_immutable()\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_senddirty()\n+        reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_send()\n+\n+    def test_persistence(self):\n+        '''Test that wallet files persist the avoid_reuse flag.'''\n+        # Configure node 1 to use avoid_reuse\n+        self.nodes[1].setwalletflag('avoid_reuse')\n+\n+        # Flags should be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+        # Stop and restart node 1\n+        self.stop_node(1)\n+        self.start_node(1)\n+        connect_nodes_bi(self.nodes, 0, 1)\n+\n+        # Flags should still be node1.avoid_reuse=false, node2.avoid_reuse=true\n+        assert_equal(self.nodes[0].getwalletinfo()[\"avoid_reuse\"], False)\n+        assert_equal(self.nodes[1].getwalletinfo()[\"avoid_reuse\"], True)\n+\n+        # Attempting to set flag to its current state should throw\n+        assert_raises_rpc_error(-8, \"Wallet flag is already set to false\", self.nodes[0].setwalletflag, 'avoid_reuse', False)\n+        assert_raises_rpc_error(-8, \"Wallet flag is already set to true\", self.nodes[1].setwalletflag, 'avoid_reuse', True)\n+\n+    def test_immutable(self):",
    "path": "test/functional/wallet_avoidreuse.py",
    "position": 110,
    "original_position": 110,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "8f2e208f7c0468f9ba92bc789a698281b1c81284",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Makes sense to me.",
    "created_at": "2019-06-18T14:26:35Z",
    "updated_at": "2019-06-18T14:26:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r294852008",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294852008"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r294852008"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294852008/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 110,
    "original_line": 110,
    "side": "RIGHT",
    "in_reply_to_id": 294799695
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294853397",
    "pull_request_review_id": 251137386,
    "id": 294853397,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDg1MzM5Nw==",
    "diff_hunk": "@@ -20,7 +20,9 @@ enum isminetype\n     ISMINE_NO         = 0,\n     ISMINE_WATCH_ONLY = 1 << 0,\n     ISMINE_SPENDABLE  = 1 << 1,\n+    ISMINE_USED       = 1 << 2,\n     ISMINE_ALL        = ISMINE_WATCH_ONLY | ISMINE_SPENDABLE,\n+    ISMINE_ALL_USED   = ISMINE_ALL | ISMINE_USED,",
    "path": "src/script/ismine.h",
    "position": 6,
    "original_position": 6,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "8247a0da3a46d7c38943ee0304343ab7465305bd",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You get most of the combinations with the new \"used\" flag, because a bunch of calls have a with and without \"avoid reuse\" state... so I think this is the cleanest approach.\r\n\r\n`ISMINE_ALL_USED` is indeed not used; I added it to indicate that `ISMINE_ALL` is in fact not include the used ones. It's sort of a comment, with the added side effect that smart IDEs will show it when giving suggestions.",
    "created_at": "2019-06-18T14:29:00Z",
    "updated_at": "2019-06-18T14:29:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r294853397",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294853397"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r294853397"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294853397/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 25,
    "original_line": 25,
    "side": "RIGHT",
    "in_reply_to_id": 294845332
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294868973",
    "pull_request_review_id": 251131242,
    "id": 294868973,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDg2ODk3Mw==",
    "diff_hunk": "@@ -2830,6 +2928,9 @@ static UniValue listunspent(const JSONRPCRequest& request)\n             \"    \\\"witnessScript\\\" : \\\"script\\\" (string) witnessScript if the scriptPubKey is P2WSH or P2SH-P2WSH\\n\"\n             \"    \\\"spendable\\\" : xxx,        (bool) Whether we have the private keys to spend this output\\n\"\n             \"    \\\"solvable\\\" : xxx,         (bool) Whether we know how to spend this output, ignoring the lack of keys\\n\"\n+            + (avoid_reuse ?",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 208,
    "original_position": 208,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think we should have help output that switches on the active wallet for that command. This breaks `help listunspent`.",
    "created_at": "2019-06-18T14:56:00Z",
    "updated_at": "2019-06-18T14:57:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r294868973",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294868973"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r294868973"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294868973/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2931,
    "original_line": 2931,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294884795",
    "pull_request_review_id": 251177715,
    "id": 294884795,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDg4NDc5NQ==",
    "diff_hunk": "@@ -2830,6 +2928,9 @@ static UniValue listunspent(const JSONRPCRequest& request)\n             \"    \\\"witnessScript\\\" : \\\"script\\\" (string) witnessScript if the scriptPubKey is P2WSH or P2SH-P2WSH\\n\"\n             \"    \\\"spendable\\\" : xxx,        (bool) Whether we have the private keys to spend this output\\n\"\n             \"    \\\"solvable\\\" : xxx,         (bool) Whether we know how to spend this output, ignoring the lack of keys\\n\"\n+            + (avoid_reuse ?",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 208,
    "original_position": 208,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why does it break?",
    "created_at": "2019-06-18T15:25:08Z",
    "updated_at": "2019-06-18T15:25:09Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r294884795",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294884795"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r294884795"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294884795/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2931,
    "original_line": 2931,
    "side": "RIGHT",
    "in_reply_to_id": 294868973
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294885636",
    "pull_request_review_id": 251178868,
    "id": 294885636,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDg4NTYzNg==",
    "diff_hunk": "@@ -2639,6 +2660,76 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n+static UniValue setwalletflag(const JSONRPCRequest& request)\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 112,
    "original_position": 112,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Will address if rebase becomes necessary, otherwise will try to preserve ACKs and do a quick follow-up post-merge.",
    "created_at": "2019-06-18T15:26:48Z",
    "updated_at": "2019-06-18T15:26:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r294885636",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294885636"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r294885636"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294885636/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2672,
    "original_line": 2672,
    "side": "RIGHT",
    "in_reply_to_id": 294848634
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294890161",
    "pull_request_review_id": 251184749,
    "id": 294890161,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDg5MDE2MQ==",
    "diff_hunk": "@@ -2830,6 +2928,9 @@ static UniValue listunspent(const JSONRPCRequest& request)\n             \"    \\\"witnessScript\\\" : \\\"script\\\" (string) witnessScript if the scriptPubKey is P2WSH or P2SH-P2WSH\\n\"\n             \"    \\\"spendable\\\" : xxx,        (bool) Whether we have the private keys to spend this output\\n\"\n             \"    \\\"solvable\\\" : xxx,         (bool) Whether we know how to spend this output, ignoring the lack of keys\\n\"\n+            + (avoid_reuse ?",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 208,
    "original_position": 208,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You can do `help listunspent` without specifying `-rpcwallet` in order to just get the help for `listunspent` (and other commands). By making the help dependent on `-rpcwallet`, this makes the output of `help listunspent` less helpful because then the help sometimes will include `reused` and other times not. The help text should be consistent regardless of the other options specified. In general, all options and output should be displayed in the help even if some of those results will be omitted in actual command output. For example, `getaddressinfo` has a ton of extra fields that may or may not be part of the actual result, but all of them are listed in the help output.",
    "created_at": "2019-06-18T15:35:37Z",
    "updated_at": "2019-06-18T15:35:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r294890161",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294890161"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r294890161"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294890161/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2931,
    "original_line": 2931,
    "side": "RIGHT",
    "in_reply_to_id": 294868973
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294893068",
    "pull_request_review_id": 251188634,
    "id": 294893068,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDg5MzA2OA==",
    "diff_hunk": "@@ -2830,6 +2928,9 @@ static UniValue listunspent(const JSONRPCRequest& request)\n             \"    \\\"witnessScript\\\" : \\\"script\\\" (string) witnessScript if the scriptPubKey is P2WSH or P2SH-P2WSH\\n\"\n             \"    \\\"spendable\\\" : xxx,        (bool) Whether we have the private keys to spend this output\\n\"\n             \"    \\\"solvable\\\" : xxx,         (bool) Whether we know how to spend this output, ignoring the lack of keys\\n\"\n+            + (avoid_reuse ?",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 208,
    "original_position": 208,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ahh, I see what you're saying. Will rework into static output post-merge and/or if rebase becomes necessary.",
    "created_at": "2019-06-18T15:41:27Z",
    "updated_at": "2019-06-18T15:41:28Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r294893068",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294893068"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r294893068"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294893068/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2931,
    "original_line": 2931,
    "side": "RIGHT",
    "in_reply_to_id": 294868973
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295101623",
    "pull_request_review_id": 251450595,
    "id": 295101623,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTEwMTYyMw==",
    "diff_hunk": "@@ -2639,6 +2660,76 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n     return obj;\n }\n \n+static UniValue setwalletflag(const JSONRPCRequest& request)\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 112,
    "original_position": 112,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I can do this but it would mean some unnecessary calculations when users are not asking for help:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/44d81723236114f9370f386f3b3310477a6dde43/src/wallet/rpcwallet.cpp#L2671-L2674\r\n\r\nStill worth it?",
    "created_at": "2019-06-19T02:47:03Z",
    "updated_at": "2019-06-19T02:47:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r295101623",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295101623"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r295101623"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295101623/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2672,
    "original_line": 2672,
    "side": "RIGHT",
    "in_reply_to_id": 294848634
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295336392",
    "pull_request_review_id": 251749988,
    "id": 295336392,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTMzNjM5Mg==",
    "diff_hunk": "@@ -0,0 +1,39 @@\n+Coin selection\n+--------------\n+\n+### Reuse Avoidance\n+\n+A new wallet flag `avoid_reuse` has been added (default off). When enabled,\n+a wallet will distinguish between used and unused addresses, and default to not\n+use the former in coin selection.\n+\n+(Note: rescanning the blockchain is required, to correctly mark previously\n+used destinations.)\n+\n+Together with \"avoid partial spends\" (present as of Bitcoin v0.17), this\n+addresses a serious privacy issue where a malicious user can track spends by\n+peppering a previously paid to address with near-dust outputs, which would then\n+be inadvertently included in future payments.\n+\n+New RPCs\n+--------\n+\n+- A new `setwalletflag` RPC sets/unsets flags for an existing wallet.\n+\n+\n+Updated RPCs\n+------------\n+\n+Several RPCs have been updated to include an \"avoid_reuse\" flag, used to control\n+whether already used addresses should be left out or included in the operation.\n+These include:\n+\n+- createwallet\n+- getbalance\n+- sendtoaddress\n+\n+In addition, `sendtoaddress` has been changed to enable `-avoidpartialspends` when",
    "path": "doc/release-notes-13756.md",
    "position": 35,
    "original_position": 35,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can you explain what that means? `sendtoaddress` is an RPC call, how would it enable a command line flag (`-avoidpartialspends`) of a running program?",
    "created_at": "2019-06-19T14:41:13Z",
    "updated_at": "2019-06-19T14:51:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r295336392",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295336392"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r295336392"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295336392/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 35,
    "original_line": 35,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295337281",
    "pull_request_review_id": 251749988,
    "id": 295337281,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTMzNzI4MQ==",
    "diff_hunk": "@@ -0,0 +1,39 @@\n+Coin selection\n+--------------\n+\n+### Reuse Avoidance\n+\n+A new wallet flag `avoid_reuse` has been added (default off). When enabled,\n+a wallet will distinguish between used and unused addresses, and default to not\n+use the former in coin selection.\n+\n+(Note: rescanning the blockchain is required, to correctly mark previously\n+used destinations.)\n+\n+Together with \"avoid partial spends\" (present as of Bitcoin v0.17), this\n+addresses a serious privacy issue where a malicious user can track spends by\n+peppering a previously paid to address with near-dust outputs, which would then\n+be inadvertently included in future payments.\n+\n+New RPCs\n+--------\n+\n+- A new `setwalletflag` RPC sets/unsets flags for an existing wallet.\n+\n+\n+Updated RPCs\n+------------\n+\n+Several RPCs have been updated to include an \"avoid_reuse\" flag, used to control\n+whether already used addresses should be left out or included in the operation.\n+These include:\n+\n+- createwallet\n+- getbalance",
    "path": "doc/release-notes-13756.md",
    "position": 32,
    "original_position": 32,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "What about `getbalances`?",
    "created_at": "2019-06-19T14:42:39Z",
    "updated_at": "2019-06-19T14:51:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r295337281",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295337281"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r295337281"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295337281/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 32,
    "original_line": 32,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295337898",
    "pull_request_review_id": 251749988,
    "id": 295337898,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTMzNzg5OA==",
    "diff_hunk": "@@ -0,0 +1,39 @@\n+Coin selection\n+--------------\n+\n+### Reuse Avoidance\n+\n+A new wallet flag `avoid_reuse` has been added (default off). When enabled,\n+a wallet will distinguish between used and unused addresses, and default to not\n+use the former in coin selection.\n+\n+(Note: rescanning the blockchain is required, to correctly mark previously",
    "path": "doc/release-notes-13756.md",
    "position": 10,
    "original_position": 10,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could remove `(Note: `, since all sentences in this doc are release *notes*",
    "created_at": "2019-06-19T14:43:40Z",
    "updated_at": "2019-06-19T14:51:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r295337898",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295337898"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r295337898"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295337898/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 10,
    "original_line": 10,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295340427",
    "pull_request_review_id": 251749988,
    "id": 295340427,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTM0MDQyNw==",
    "diff_hunk": "@@ -378,6 +389,8 @@ static UniValue sendtoaddress(const JSONRPCRequest& request)\n             \"       \\\"UNSET\\\"\\n\"\n             \"       \\\"ECONOMICAL\\\"\\n\"\n             \"       \\\"CONSERVATIVE\\\"\"},\n+                    {\"avoid_reuse\", RPCArg::Type::BOOL, /* default */ pwallet->IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE) ? \"true\" : \"unavailable\", \"Avoid spending from dirty addresses; addresses are considered\\n\"\n+            \"                             dirty if they have previously been used in a transaction.\"},",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 41,
    "original_position": 41,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This makes the help text change at run time. I'd prefer to make it static and explain it with something like \"true if wallet falg is set, otherwise unavailable\"",
    "created_at": "2019-06-19T14:47:46Z",
    "updated_at": "2019-06-19T14:51:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r295340427",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295340427"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r295340427"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295340427/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 393,
    "original_line": 393,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295340642",
    "pull_request_review_id": 251749988,
    "id": 295340642,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTM0MDY0Mg==",
    "diff_hunk": "@@ -733,6 +749,7 @@ static UniValue getbalance(const JSONRPCRequest& request)\n                     {\"dummy\", RPCArg::Type::STR, RPCArg::Optional::OMITTED_NAMED_ARG, \"Remains for backward compatibility. Must be excluded or set to \\\"*\\\".\"},\n                     {\"minconf\", RPCArg::Type::NUM, /* default */ \"0\", \"Only include transactions confirmed at least this many times.\"},\n                     {\"include_watchonly\", RPCArg::Type::BOOL, /* default */ \"false\", \"Also include balance in watch-only addresses (see 'importaddress')\"},\n+                    {\"avoid_reuse\", RPCArg::Type::BOOL, /* default */ pwallet->IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE) ? \"true\" : \"unavailable\", \"Do not include balance in dirty outputs; addresses are considered dirty if they have previously been used in a transaction.\"},",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 68,
    "original_position": 68,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Same here",
    "created_at": "2019-06-19T14:48:09Z",
    "updated_at": "2019-06-19T14:51:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r295340642",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295340642"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r295340642"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295340642/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 752,
    "original_line": 752,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295380387",
    "pull_request_review_id": 251806964,
    "id": 295380387,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTM4MDM4Nw==",
    "diff_hunk": "@@ -0,0 +1,39 @@\n+Coin selection\n+--------------\n+\n+### Reuse Avoidance\n+\n+A new wallet flag `avoid_reuse` has been added (default off). When enabled,\n+a wallet will distinguish between used and unused addresses, and default to not\n+use the former in coin selection.\n+\n+(Note: rescanning the blockchain is required, to correctly mark previously\n+used destinations.)\n+\n+Together with \"avoid partial spends\" (present as of Bitcoin v0.17), this\n+addresses a serious privacy issue where a malicious user can track spends by\n+peppering a previously paid to address with near-dust outputs, which would then\n+be inadvertently included in future payments.\n+\n+New RPCs\n+--------\n+\n+- A new `setwalletflag` RPC sets/unsets flags for an existing wallet.\n+\n+\n+Updated RPCs\n+------------\n+\n+Several RPCs have been updated to include an \"avoid_reuse\" flag, used to control\n+whether already used addresses should be left out or included in the operation.\n+These include:\n+\n+- createwallet\n+- getbalance\n+- sendtoaddress\n+\n+In addition, `sendtoaddress` has been changed to enable `-avoidpartialspends` when",
    "path": "doc/release-notes-13756.md",
    "position": 35,
    "original_position": 35,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Changing wording to\r\n```\r\nIn addition, `sendtoaddress` has been changed to always use `-avoidpartialspends`\r\nwhen `avoid_reuse` is enabled, as it would otherwise risk using up the \"wrong\" UTXO\r\nfor an address reuse case.\r\n```\r\nDoes that look better?",
    "created_at": "2019-06-19T16:03:32Z",
    "updated_at": "2019-06-19T16:03:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r295380387",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295380387"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r295380387"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295380387/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 35,
    "original_line": 35,
    "side": "RIGHT",
    "in_reply_to_id": 295336392
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295380842",
    "pull_request_review_id": 251807509,
    "id": 295380842,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTM4MDg0Mg==",
    "diff_hunk": "@@ -0,0 +1,39 @@\n+Coin selection\n+--------------\n+\n+### Reuse Avoidance\n+\n+A new wallet flag `avoid_reuse` has been added (default off). When enabled,\n+a wallet will distinguish between used and unused addresses, and default to not\n+use the former in coin selection.\n+\n+(Note: rescanning the blockchain is required, to correctly mark previously\n+used destinations.)\n+\n+Together with \"avoid partial spends\" (present as of Bitcoin v0.17), this\n+addresses a serious privacy issue where a malicious user can track spends by\n+peppering a previously paid to address with near-dust outputs, which would then\n+be inadvertently included in future payments.\n+\n+New RPCs\n+--------\n+\n+- A new `setwalletflag` RPC sets/unsets flags for an existing wallet.\n+\n+\n+Updated RPCs\n+------------\n+\n+Several RPCs have been updated to include an \"avoid_reuse\" flag, used to control\n+whether already used addresses should be left out or included in the operation.\n+These include:\n+\n+- createwallet\n+- getbalance",
    "path": "doc/release-notes-13756.md",
    "position": 32,
    "original_position": 32,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In #16239.",
    "created_at": "2019-06-19T16:04:22Z",
    "updated_at": "2019-06-19T16:04:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r295380842",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295380842"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r295380842"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295380842/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 32,
    "original_line": 32,
    "side": "RIGHT",
    "in_reply_to_id": 295337281
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295381239",
    "pull_request_review_id": 251808036,
    "id": 295381239,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTM4MTIzOQ==",
    "diff_hunk": "@@ -0,0 +1,39 @@\n+Coin selection\n+--------------\n+\n+### Reuse Avoidance\n+\n+A new wallet flag `avoid_reuse` has been added (default off). When enabled,\n+a wallet will distinguish between used and unused addresses, and default to not\n+use the former in coin selection.\n+\n+(Note: rescanning the blockchain is required, to correctly mark previously",
    "path": "doc/release-notes-13756.md",
    "position": 10,
    "original_position": 10,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Removed. I wanted to use it as in \"Do note that [word of caution]\", but it's no big deal.",
    "created_at": "2019-06-19T16:05:17Z",
    "updated_at": "2019-06-19T16:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r295381239",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295381239"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r295381239"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295381239/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 10,
    "original_line": 10,
    "side": "RIGHT",
    "in_reply_to_id": 295337898
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295381390",
    "pull_request_review_id": 251808213,
    "id": 295381390,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTM4MTM5MA==",
    "diff_hunk": "@@ -378,6 +389,8 @@ static UniValue sendtoaddress(const JSONRPCRequest& request)\n             \"       \\\"UNSET\\\"\\n\"\n             \"       \\\"ECONOMICAL\\\"\\n\"\n             \"       \\\"CONSERVATIVE\\\"\"},\n+                    {\"avoid_reuse\", RPCArg::Type::BOOL, /* default */ pwallet->IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE) ? \"true\" : \"unavailable\", \"Avoid spending from dirty addresses; addresses are considered\\n\"\n+            \"                             dirty if they have previously been used in a transaction.\"},",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 41,
    "original_position": 41,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yep, fixed in #16239.",
    "created_at": "2019-06-19T16:05:36Z",
    "updated_at": "2019-06-19T16:05:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r295381390",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295381390"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r295381390"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295381390/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 393,
    "original_line": 393,
    "side": "RIGHT",
    "in_reply_to_id": 295340427
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295383264",
    "pull_request_review_id": 251810468,
    "id": 295383264,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTM4MzI2NA==",
    "diff_hunk": "@@ -733,6 +749,7 @@ static UniValue getbalance(const JSONRPCRequest& request)\n                     {\"dummy\", RPCArg::Type::STR, RPCArg::Optional::OMITTED_NAMED_ARG, \"Remains for backward compatibility. Must be excluded or set to \\\"*\\\".\"},\n                     {\"minconf\", RPCArg::Type::NUM, /* default */ \"0\", \"Only include transactions confirmed at least this many times.\"},\n                     {\"include_watchonly\", RPCArg::Type::BOOL, /* default */ \"false\", \"Also include balance in watch-only addresses (see 'importaddress')\"},\n+                    {\"avoid_reuse\", RPCArg::Type::BOOL, /* default */ pwallet->IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE) ? \"true\" : \"unavailable\", \"Do not include balance in dirty outputs; addresses are considered dirty if they have previously been used in a transaction.\"},",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 68,
    "original_position": 68,
    "commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "original_commit_id": "5ebc6b0eb267e0552c66fffc5e5afe7df8becf80",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good catch. Added to #16239.",
    "created_at": "2019-06-19T16:09:08Z",
    "updated_at": "2019-06-19T16:09:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r295383264",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295383264"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13756#discussion_r295383264"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/295383264/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 752,
    "original_line": 752,
    "side": "RIGHT",
    "in_reply_to_id": 295340642
  }
]