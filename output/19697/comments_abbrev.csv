practicalswift,2020-08-14 15:17:43,Concept ACK,https://github.com/bitcoin/bitcoin/pull/19697#issuecomment-674124741,674124741,
naumenkogs,2020-08-23 15:43:02,Ready for re-review :),https://github.com/bitcoin/bitcoin/pull/19697#issuecomment-678789592,678789592,
DrahtBot,2020-08-24 02:03:55,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #17428 (p2p: Try to preserve outbound block-relay-only connections during restart by hebasto)\n\nIf you consider this pull",https://github.com/bitcoin/bitcoin/pull/19697#issuecomment-678866037,678866037,
jnewbery,2020-08-25 11:52:52,utACK a3f1c2f56e6425f64cb05a4bcba6cf1465bf128f but needs rebase,https://github.com/bitcoin/bitcoin/pull/19697#issuecomment-679977986,679977986,
naumenkogs,2020-09-02 07:33:59,"@vasild Fixed the comment issue you pointed out!\n\n>Perhaps the commit `Address nits in ADDR caching` should be squashed into the previous commit `Add indexing ADDR cache by local socket addr`?\n\nI would leave it as is, that stuff doesn't have to do with indexing by local socket...",https://github.com/bitcoin/bitcoin/pull/19697#issuecomment-685412204,685412204,
jnewbery,2020-09-02 07:56:11,utACK 0d04784af151de249bbbcbad51e6e8ad9af8f5a3,https://github.com/bitcoin/bitcoin/pull/19697#issuecomment-685423787,685423787,
hebasto,2020-09-21 10:00:09,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/19697#issuecomment-696017476,696017476,
jnewbery,2020-08-11 11:06:50,"This seems like a slight layer violation, with network and socket details bleeding up into net_processing. Did you consider just passing a `CNode&` reference down to CConnMan and allowing it to get the bind address and network?",https://github.com/bitcoin/bitcoin/pull/19697#discussion_r468500108,468500108,src/net_processing.cpp
promag,2020-08-11 12:01:18,"e3ec66f1322154e84176ac06311cc0c570f38e23\n\nnit, const.",https://github.com/bitcoin/bitcoin/pull/19697#discussion_r468527127,468527127,src/net.cpp
promag,2020-08-11 12:09:47,"96cd22cd3204b35b9f863ada93a99dcfac178d13\n\nYou have 4 `m_addr_response_caches` lookups. How about (untested):\n```\nauto r = m_addr_response_caches.emplace(cache_id, {}};\nif (e.second || e.first->m_cache_expiration_time < current_time) {\n    r.first->m_addrs_response_cache = GetAddresses());\n    r.first->m_cache_expiration_time = ...;\n}\nreturn r.first->m_addrs_response_cache;",https://github.com/bitcoin/bitcoin/pull/19697#discussion_r468531749,468531749,src/net.cpp
luke-jr,2020-08-11 22:05:20,Is there any scenario where CAddress does not imply a Network?,https://github.com/bitcoin/bitcoin/pull/19697#discussion_r468891022,468891022,src/net.cpp
luke-jr,2020-08-11 22:07:19,Ever overlapping caches sounds dangerous. Why not just index a unique cache per bind address?,https://github.com/bitcoin/bitcoin/pull/19697#discussion_r468891768,468891768,src/net.cpp
vasild,2020-08-12 07:51:25,nit: `s/lifetime a/lifetime is a/`,https://github.com/bitcoin/bitcoin/pull/19697#discussion_r469072167,469072167,src/net.cpp
vasild,2020-08-12 08:00:22,nit: `s/of requests/requests/`,https://github.com/bitcoin/bitcoin/pull/19697#discussion_r469077095,469077095,src/net.cpp
vasild,2020-08-12 08:30:08,"I am not sure if it would make any practical difference in this case, but in general it is a good practice to minimize the time the mutex is being held (may also be relevant if you decide to move the code to connman as per @jnewbery):\n\n```suggestion\n            SOCKET socket;\n            WITH_LOCK(pfrom.cs_hSocket, socket = pfrom.hSocket);\n            CAddress local_socket_address = CCon",https://github.com/bitcoin/bitcoin/pull/19697#discussion_r469094434,469094434,src/net_processing.cpp
vasild,2020-08-12 08:45:19,"nit: there is no need for the elements in this container to be ordered. Change to `std::unordered_map` to make lookup and insertion `O(1)`.\n\nEdit: changed to ""nit"" because I realized we are going to have about dozen entries here, map vs unordered_map will not make any practical difference.",https://github.com/bitcoin/bitcoin/pull/19697#discussion_r469103181,469103181,src/net.h
vasild,2020-08-12 09:16:13,"<details>\n<summary>diff</summary>\n\n```diff\ndiff --git i/src/net.cpp w/src/net.cpp\nindex eb462d108..169c4cd1c 100644\n--- i/src/net.cpp\n+++ w/src/net.cpp\n@@ -2544,14 +2544,16 @@ const std::vector<CAddress>& CConnman::GetAddresses(Network requestor_network, C\n     auto local_socket_bytes = local_socket_address.GetAddrBytes();\n     uint64_t cache_id = GetDeterministicRandomizer(RAN",https://github.com/bitcoin/bitcoin/pull/19697#discussion_r469121542,469121542,src/net.cpp
vasild,2020-08-12 14:27:59,"With Tor we may be seeing an IPv4 connection between Bitcoin Core and the Tor proxy (with IPv4 addresses) but the ""requestor network"" should be Tor, not IPv4.",https://github.com/bitcoin/bitcoin/pull/19697#discussion_r469301389,469301389,src/net.cpp
vasild,2020-08-12 14:31:13,`CAddress` is actually 48 bytes (or 40 if https://github.com/bitcoin/bitcoin/pull/19705 gets merged).,https://github.com/bitcoin/bitcoin/pull/19697#discussion_r469303754,469303754,src/net.h
naumenkogs,2020-08-23 15:40:01,"I can't grasp your concern, could you rephrase?\nI believe the caches won't overlap across nodes because seeds inside `GetDeterministicRandomizer` are unique. Or perhaps you are concerned with something else?",https://github.com/bitcoin/bitcoin/pull/19697#discussion_r475233646,475233646,src/net.cpp
jnewbery,2020-08-24 07:49:35,"This isn't true. Addresses are chosen at random, so each subsequent getaddr request yields fewer new records for the spy (eg a spy who's already scraped 50,000 records will only learn 500 new records on average from a getaddr request).",https://github.com/bitcoin/bitcoin/pull/19697#discussion_r475404561,475404561,src/net.cpp
jnewbery,2020-08-24 07:53:50,This doesn't need to move into `CConnman`,https://github.com/bitcoin/bitcoin/pull/19697#discussion_r475406755,475406755,src/net.cpp
jnewbery,2020-08-24 08:26:33,"Changing the return type to a const reference doesn't actually make any difference here. The caller assigns a local variable `vAddr` to this function's return, so the vector needs to be copied in the calling function. Compare that to the current behavior of returning by value, where the vector is copied inside this function, but can be move-assigned in the caller.\n\nThis _would_ make a differen",https://github.com/bitcoin/bitcoin/pull/19697#discussion_r475423892,475423892,src/net.h
jnewbery,2020-08-24 08:27:28,"I think this is a place where `auto` makes things less clear. Can you change this to explicitly name the `CachedAddrResponse` type? Also, `cached_response` or `cache_entry` would be a more accurate name than `cache`.",https://github.com/bitcoin/bitcoin/pull/19697#discussion_r475424477,475424477,src/net.cpp
jnewbery,2020-08-24 08:30:20,`m_cache_entry_expiration` ?,https://github.com/bitcoin/bitcoin/pull/19697#discussion_r475426219,475426219,src/net.h
jnewbery,2020-08-24 08:31:35,This comment is no longer true.,https://github.com/bitcoin/bitcoin/pull/19697#discussion_r475426906,475426906,test/functional/p2p_getaddr_caching.py
jnewbery,2020-08-24 08:38:56,You can assert that response is exactly 1000 here.,https://github.com/bitcoin/bitcoin/pull/19697#discussion_r475430823,475430823,test/functional/p2p_getaddr_caching.py
jnewbery,2020-08-24 08:39:54,Perhaps assert that `len(self.nodes[0].getnodeaddresses(0))` is > 4000 here (to ensure that a getaddr response has at least 1000 records in it),https://github.com/bitcoin/bitcoin/pull/19697#discussion_r475431397,475431397,test/functional/p2p_getaddr_caching.py
naumenkogs,2020-08-25 09:04:13,"Oh, true. I was originally intending to put ""several hundreds"" there. Unless you have an exact (probabilistic) formula, I would put ""several hundreds"".",https://github.com/bitcoin/bitcoin/pull/19697#discussion_r476295660,476295660,src/net.cpp
naumenkogs,2020-08-25 09:42:40,"Thanks for the thorough explanation :)\nI'm fine with keeping this as return by value for simplicity.",https://github.com/bitcoin/bitcoin/pull/19697#discussion_r476319594,476319594,src/net.h
jnewbery,2020-08-25 10:17:04,"""several hundred"" sounds fine to me",https://github.com/bitcoin/bitcoin/pull/19697#discussion_r476339352,476339352,src/net.cpp
jnewbery,2020-08-25 10:37:11,"Very minor style: consider defining `MAX_ADDR_TO_SEND` and `MAX_PCT_ADDR_TO_SEND` as constants rather than these magic numbers (if someone changes those values in the bitcoind code, it'll be easier to see where to change them here at the same time).\n\n",https://github.com/bitcoin/bitcoin/pull/19697#discussion_r476349842,476349842,test/functional/p2p_getaddr_caching.py
jnewbery,2020-08-25 10:38:20,grammar: s/several hundreds of requests/several hundred requests/,https://github.com/bitcoin/bitcoin/pull/19697#discussion_r476350377,476350377,src/net.cpp
jnewbery,2020-08-25 10:43:49,This line (and the log line above) can be removed entirely.,https://github.com/bitcoin/bitcoin/pull/19697#discussion_r476353105,476353105,test/functional/p2p_getaddr_caching.py
vasild,2020-09-01 13:44:58,`s/around  bytes/around 40 bytes/`,https://github.com/bitcoin/bitcoin/pull/19697#discussion_r481148662,481148662,src/net.h
promag,2020-09-20 20:42:33,"81b00f87800f40cb14f2131ff27668bd2bb9e551\n\nNot really sure what is the purpose of `cs_hSocket`, but looks like this should be\n```cpp\nvector<unsigned char> local_socket_bytes = WITH_LOCK(requestor.cs_hSocket, return GetBindAddress(requestor.hSocket).GetAddrBytes())",https://github.com/bitcoin/bitcoin/pull/19697#discussion_r491732205,491732205,src/net.cpp
naumenkogs,2020-09-21 06:28:39,"True, this looks better.\nI'd keep it the way it is for now to save the review energy if you don't mind.\nI will update these lines if I have other reasons to update the PR.\n",https://github.com/bitcoin/bitcoin/pull/19697#discussion_r491815438,491815438,src/net.cpp
promag,2020-09-21 06:57:02,"It's fine, can come next too if it's the only thing that needs to be addressed.",https://github.com/bitcoin/bitcoin/pull/19697#discussion_r491825476,491825476,src/net.cpp
jonatack,2020-09-21 08:35:23,"0d04784af\n```diff\n-# As defined in net_processing.\n-MAX_ADDR_TO_SEND = 1000\n-MAX_PCT_ADDR_TO_SEND = 23\n+MAX_ADDR_TO_SEND = 1000  # As defined in net.h\n+MAX_PCT_ADDR_TO_SEND = 23  # As defined in net_processing.cpp\n```",https://github.com/bitcoin/bitcoin/pull/19697#discussion_r491873043,491873043,test/functional/p2p_getaddr_caching.py
laanwj,2020-09-21 17:44:03,"Looks like a good suggestion,, but we can add more documentation later, didn't want to hold up the PR on this",https://github.com/bitcoin/bitcoin/pull/19697#discussion_r492237781,492237781,test/functional/p2p_getaddr_caching.py
vasild,2020-11-24 14:34:50,"Can this be simplified like:\n\n```suggestion\n    auto local_socket_bytes = requestor.addrBind.GetAddrBytes();\n```\n\nOur local address is already saved in `CNode::addrBind`.",https://github.com/bitcoin/bitcoin/pull/19697#discussion_r529591076,529591076,src/net.cpp
naumenkogs,2020-11-24 14:42:22,I think you're right?,https://github.com/bitcoin/bitcoin/pull/19697#discussion_r529596676,529596676,src/net.cpp
vasild,2020-11-24 14:50:26,"Ok, will include this tiny change in another PR:\n\n<details>\n<summary>net: avoid unnecessary GetBindAddress() call</summary>\n\n```diff\ncommit 15ba60e9a\nParent: 25dcd4ad9\nAuthor:     Vasil Dimov <vd@FreeBSD.org>\nAuthorDate: Tue Nov 24 15:36:27 2020 +0100\nCommit:     Vasil Dimov <vd@FreeBSD.org>\nCommitDate: Tue Nov 24 15:36:27 2020 +0100\n\n    net: avoid unnecessary GetBindAdd",https://github.com/bitcoin/bitcoin/pull/19697#discussion_r529602900,529602900,src/net.cpp
