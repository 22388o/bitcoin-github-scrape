jonatack,2021-09-24 11:14:26,"It seems the probability of collision when adding a second tried address with a different /16 may be 1/2^16 = 1/65536, which may be an acceptable level of failure in the absence of a deterministic addrman. The original versions of #22831 with a `peers.dat` file are also free of non-determinism.\n",https://github.com/bitcoin/bitcoin/pull/23084#issuecomment-926544897,926544897,
DrahtBot,2021-09-24 11:52:16,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22872](https://github.com/bitcoin/bitcoin/pull/22872) (log: improve checkaddrman logging with duration in milliseconds b",https://github.com/bitcoin/bitcoin/pull/23084#issuecomment-926565198,926565198,
mzumsande,2021-09-24 12:24:18,"The easiest way to prevent intermittent fails might be to only add 1 address to tried and then new (total 2), I don't think there need to be more addresses present for the regression test to work.\n`assert_equal(len(addrs), 4)` could also fail, I think in an extremely unlikely edge case there may even only be 2 addrs present (A1 -> new, A1 new -> tried, A2 ->new , A2 -> tried collision, so it sta",https://github.com/bitcoin/bitcoin/pull/23084#issuecomment-926583722,926583722,
jonatack,2021-09-24 13:18:59,"Makes sense. IIRC the test didn't fail with only one tried entry, but I will retest that. Failing which, can remove the added assert here. A possible alternative or supplementary test would be a tiny hardcoded 2+2 peers.dat directly in the test file.",https://github.com/bitcoin/bitcoin/pull/23084#issuecomment-926618438,926618438,
jonatack,2021-09-24 16:53:15,"@mzumsande you are correct, thank you for making me re-verify this. Updated this patch. It is now the same approach as the addpeeraddress test in test/functional/rpc_net.py in commit 869f136.",https://github.com/bitcoin/bitcoin/pull/23084#issuecomment-926779198,926779198,
mzumsande,2021-09-24 19:38:26,"Code Review ACK 78d27d12039aa204ed40009e36e62cb945568795\n\nJust for the sake of a minimal regression test, we wouldn't even need the second address in new, but I think it's better to include it.",https://github.com/bitcoin/bitcoin/pull/23084#issuecomment-926875568,926875568,
jonatack,2021-09-24 19:57:22,"Oh, just noticed I forgot to update the comment above the change. Done.",https://github.com/bitcoin/bitcoin/pull/23084#issuecomment-926885318,926885318,
hebasto,2021-09-25 08:03:57,"CI [error](https://api.cirrus-ci.com/v1/task/6192561321672704/logs/functional_tests.log) fixed in #23089.\n\nDoes this PR fix the `feature_asmap.py` functional test on Windows? See: https://github.com/bitcoin/bitcoin/blob/16ccb3a1cd9125eb24a5b45a98099ff98660767a/.cirrus.yml#L96",https://github.com/bitcoin/bitcoin/pull/23084#issuecomment-927077970,927077970,
mzumsande,2021-09-25 22:18:57,Re-ACK 5825b34783545f9470d5ab94b87c918980715675,https://github.com/bitcoin/bitcoin/pull/23084#issuecomment-927190304,927190304,
jonatack,2021-09-28 10:55:50,"> CI [error](https://api.cirrus-ci.com/v1/task/6192561321672704/logs/functional_tests.log) fixed in #23089.\n> \n> Does this PR fix the `feature_asmap.py` functional test on Windows? See:\n> \n> https://github.com/bitcoin/bitcoin/blob/16ccb3a1cd9125eb24a5b45a98099ff98660767a/.cirrus.yml#L96\n\nThanks @hebasto. I didn't realize they were disabled on Windows.",https://github.com/bitcoin/bitcoin/pull/23084#issuecomment-929079206,929079206,
