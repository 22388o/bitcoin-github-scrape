[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748544179",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-748544179",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
    "id": 748544179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODU0NDE3OQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-20T00:26:59Z",
    "updated_at": "2021-03-06T21:56:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21186 (Net/Net Processing: Move addr data into net_processing by jnewbery)\n* #20277 (test: Extend p2p_ibd_tx_relay.py to verify no-transaction are requested during IBD by ariard)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748544179/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748578410",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-748578410",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
    "id": 748578410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODU3ODQxMA==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-20T08:27:04Z",
    "updated_at": "2021-02-05T22:20:57Z",
    "author_association": "MEMBER",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748578410/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748598786",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-748598786",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
    "id": 748598786,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODU5ODc4Ng==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-20T12:02:47Z",
    "updated_at": "2020-12-20T12:02:47Z",
    "author_association": "MEMBER",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748598786/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748601961",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-748601961",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
    "id": 748601961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODYwMTk2MQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-20T12:32:25Z",
    "updated_at": "2020-12-20T13:34:37Z",
    "author_association": "MEMBER",
    "body": "Concept ACK to having a way to not send `addr` messages to inbound block-relay-only peers.\r\n\r\nDid you consider doing this implicitly, i.e. only consider a peer an addr-relay peer if:\r\n\r\n1. it's an outbound peer that isn't block-relay-peer; or\r\n2. it's an inbound peer and we've received an `addr`, `addrv2` or `getaddr` from the peer.\r\n\r\nFor inbound peers we would defer initializing the addr-relay data structures and considering the peer an addr-relay peer until we receive the first address traffic from it.\r\n\r\nI think this would achieve the goals you want (reduce bandwidth, avoid relaying addresses to black holes, potentially reduce memory usage in future) without the need for a protocol change.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748601961/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748632153",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-748632153",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
    "id": 748632153,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODYzMjE1Mw==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-20T16:52:42Z",
    "updated_at": "2020-12-20T16:52:42Z",
    "author_association": "MEMBER",
    "body": "@sipa Thanks for taking a look!\r\n\r\n> If I understand it correctly, the BIP idea doesn't concern itself with this being outbound->inbound or not, but the implementation only ever announces it in the outbound direction, and will disconnect if it's received from a (full) outbound peer. Is that worth pointing out (e.g. \"Peers MAY decide to not serve peers that announce this flag\").\r\n\r\nYes good observation.  When I was working on this, I realized that there was no protocol need to restrict this as being a message from inbound->outbound peer, so while I didn't have an immediate use case for outbound peers sending this message to inbound ones, I also thought there seemed to be little downside to permitting it in the future.\r\n\r\nThe only case where I thought it could be problematic is if we connect out to a peer that we expect to be a full-relay peer, and it turns out the peer tells us we won't get any transactions from them -- in this case I think we ought to disconnect.  (Arguably it's a bug that today we don't do this when we get fRelay=false from such a peer in their version message.)\r\n\r\nI'll update the BIP to reflect that peers should feel free to use this information in deciding who to stay connected to.\r\n\r\n> Should interaction with tx-relay specific other messages like mempool, filterload, filteradd, filterclear, feefilter be specified (e.g. these messages are disabled/forbidden/ignored on block only connections)?\r\n\r\nYes, I should both specify that those messages are not permitted, and I think disconnect peers who send them to us after negotiating BLOCKRELAY. I think this will require an extra piece of state for outbound peers who might send us a BLOCKRELAY message, but that seems no big deal.\r\n \r\n> Maybe it's worth pointing out that blocktxn/getblocktxn still function?\r\n\r\nI'll update the BIP to explicitly reflect this as well.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748632153/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748742978",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-748742978",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
    "id": 748742978,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODc0Mjk3OA==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-21T03:55:21Z",
    "updated_at": "2020-12-21T03:55:21Z",
    "author_association": "MEMBER",
    "body": " > Did you consider doing this implicitly, i.e. only consider a peer an addr-relay peer if:\r\n\r\n@jnewbery I think we could improve addr-relay by making guesses about our peers, but it seems to me that the logic is much clearer if we just explicitly add support for peers telling each other what they're trying to do.  Updating the protocol with a new message type is not particularly difficult or costly; having implementations guess at what a peer is doing based on observed behavior seems much more error-prone and increases the maintenance burden on the project with additional code complexity.\r\n\r\nI'd go further and suggest that in the future, we consider adding some kind of p2p message to explicitly negotiate addr-relay behavior (perhaps by indicating for which networks a peer is interested in gossiping addresses).\r\n\r\n> 1. it's an outbound peer that isn't block-relay-peer; or\r\n> 2. it's an inbound peer and we've received an `addr`, `addrv2` or `getaddr` from the peer.\r\n> \r\n> For inbound peers we would defer initializing the addr-relay data structures and considering the peer an addr-relay peer until we receive the first address traffic from it.\r\n> \r\n> I think this would achieve the goals you want (reduce bandwidth, avoid relaying addresses to black holes, potentially reduce memory usage in future) without the need for a protocol change.\r\n\r\nI don't think this would achieve a nice way to eliminate the `m_tx_relay` pointer that we keep per-peer, because the existing protocol doesn't have a good way to communicate that transaction relay will never be enabled on the link.  At any rate, finding a workaround to try to infer the desired behavior seems unnecessarily complex -- better to document it in a BIP and add a simple way to understand what is happening.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748742978/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748876374",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-748876374",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
    "id": 748876374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODg3NjM3NA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-21T09:39:29Z",
    "updated_at": "2020-12-21T09:39:29Z",
    "author_association": "MEMBER",
    "body": "I'm not suggesting that we make guesses or have workarounds. The proposal is that peers opt in to address relay by relaying addresses. That's the most reliable heuristic we have, and it works reliably for all peers on the network, not just those that have upgraded to version 70018. This would work today with clients that connect to us and that are addr relay black holes.\r\n\r\n> ... increases the maintenance burden on the project with additional code complexity.\r\n\r\nI've implemented my suggestion here: https://github.com/bitcoin/bitcoin/compare/master...jnewbery:2020-12-implicit-addr-relay?expand=1. It's a 20 line change, and doesn't seem too complex.\r\n\r\n> I don't think this would achieve a nice way to eliminate the m_tx_relay pointer that we keep per-peer, because the existing protocol doesn't have a good way to communicate that transaction relay will never be enabled on the link.\r\n\r\nI didn't implement this on my branch, but it'd be easy to do. Just defer initializing the m_tx_relay pointer until the peer has implicitly opted in to tx relay (but that seems to be a different issue from what you're trying to accomplish in this PR).\r\n\r\nOne problem with a new `blockrelay` message is that it's peculiarly specific to the Bitcoin Core implementation at this point in time. It's the first feature negotiation message that opts _out_ of certain features (`tx`, `inv`, `getdata(tx)`) but remains silent on other features or potential future features (are cfilters supported on inbound-block-relay peers? What about Erlay/`sendrecon`/etc?)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748876374/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/749097571",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-749097571",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
    "id": 749097571,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTA5NzU3MQ==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-21T17:25:46Z",
    "updated_at": "2020-12-21T17:25:46Z",
    "author_association": "MEMBER",
    "body": "> I've implemented my suggestion here: https://github.com/bitcoin/bitcoin/compare/master...jnewbery:2020-12-implicit-addr-relay?expand=1. It's a 20 line change, and doesn't seem too complex.\r\n\r\nThe downside to an approach like this (for both `m_addr_known` and `m_tx_relay`) is that we don't get the benefit of limiting and bounding the resources that will be used on the peer at the time of connection.  Adding a p2p message that is sent at the start of a connection (such as the one proposed here) allows us to do that.  Once we have a way to bound the resources of a peer that is connecting to us with this intent, I plan to propose that we increase the number of inbound connection slots that we can service, and reserve some of those for BLOCKRELAY peers.  From there, I think we could then start to increase the number of outbound block-relay-only connections we make without concern that we are taking over too many inbound connection slots on the network or using up too many node resources.\r\n\r\nFor some additional context, please see https://github.com/bitcoin/bitcoin/pull/15759#issuecomment-480400958 and https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-688918364.  Note also the ambiguity of our current approach to guessing that a peer is an inbound-block-relay-only peer, such as was done in #19670.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/749097571/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/749542537",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-749542537",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
    "id": 749542537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTU0MjUzNw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-22T13:34:29Z",
    "updated_at": "2020-12-22T13:34:29Z",
    "author_association": "MEMBER",
    "body": "@sdaftuar Thanks for the additional context. This makes much more sense to me now that I understand the longer term plan. The change in #19670 to favour inbound-block-relay-only peers also makes much more sense when we're limiting the memory usage of inbound-block-relay-only peers.\r\n\r\nConcept ACK.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/749542537/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/750431457",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-750431457",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
    "id": 750431457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MDQzMTQ1Nw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-23T19:00:50Z",
    "updated_at": "2020-12-23T19:00:50Z",
    "author_association": "MEMBER",
    "body": "@Limpisey168 If you're going to review, please leave meaningful comments.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/750431457/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753551432",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-753551432",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
    "id": 753551432,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzU1MTQzMg==",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-03T01:02:39Z",
    "updated_at": "2021-01-03T01:02:39Z",
    "author_association": "MEMBER",
    "body": ">a block-relay-only connection today, our peer doesn't know that we don't want addr relay on the link\r\n\r\nThese seem like they're conceptually different topics, and treating them as the same seems like an implementation-specific thing...\r\n\r\n> only want blocks/compactblocks/headers to be sent on the link, and not transaction-relay traffic\r\n\r\nWhat is the purpose of compactblocks without transaction-relay traffic?\r\n\r\n>In the future, we can also save a bit of memory by not allocating (or deallocating) the peer data structures we maintain for transaction and address relay.\r\n\r\nCan't we do that today, just by not allocating it until we know the peer wants it?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753551432/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753599400",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-753599400",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
    "id": 753599400,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzU5OTQwMA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-03T10:56:31Z",
    "updated_at": "2021-01-03T10:56:31Z",
    "author_association": "MEMBER",
    "body": "I agree with some of the other comments here that it seems too implementation-specific to encode \"relay blocks, don't relay txs, don't relay addrs\" in a single P2P message.\r\n\r\nI think a more general approach would be to introduce three new P2P messages for relay negotiation:\r\n\r\n- `sendblocks` to opt in to block relay (can be followed by `sendheaders` and `sendcmpct` for those features)\r\n- `sendtxs` to opt in to tx relay (can be followed by `wtxidrelay` for that feature)\r\n- `sendaddrs` to opt in to addr relay (can be followed by `sendaddrv2` for that feature)\r\n\r\n(we could argue about whether those new `send*` messages should include message bodies that communicate which sub-features to opt into, but that detail isn't important for this discussion)\r\n\r\nIf the peer's version is >= 70017, the peer must send those messages during the negotiation phase to opt in to those inventory relays.\r\n\r\nThat approach seems much more general and is closer to the existing feature negotiation mechanism we use (where all features are opt-in). It also avoids any confusion about how this mechanism interacts with possible future features.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753599400/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/754691586",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-754691586",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
    "id": 754691586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDY5MTU4Ng==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-05T15:04:33Z",
    "updated_at": "2021-01-05T15:05:09Z",
    "author_association": "MEMBER",
    "body": "Thanks all for the comments so far.  I've renamed the p2p message to \"disabletx\" to more clearly communicate what the effect of processing this message is.  Current draft is here: https://github.com/sdaftuar/bips/blob/2020-09-negotiate-block-relay/bip-disable-tx.mediawiki\r\n\r\nSome highlights, besides the message being renamed:\r\n * I've made it more explicit that the BIP37-related messages are disallowed\r\n * I've clarified that addr messages should be avoided for now, but could be sent/received if in the future we deploy a way to negotiate addr relay explicitly.  This accommodates existing software behavior without preventing us from cleanly separating these two ideas in the future.\r\n\r\nI don't think it makes sense to add a \"sendblocks\" p2p message, because there is no use case I'm aware of for connections on the p2p network to not want blocks (really, headers or block hashes, because unrequested blocks are themselves not widely supported on the network).  If there were such a use case, someone should feel free to propose this.  For now, I think it's sufficient for this use case -- of negotiating block-relay-only connections -- to disable transaction relay, and listening nodes can use the disabling of transaction relay as proposed here as a proxy for \"block-relay-only\" connections, to facilitate increased connection limits in the future.\r\n\r\nI do think that adding a way to opt-in to addr relay is desirable, however I think more research is required to figure out what that should look like.  Naively, I'd think it makes sense to opt-in to addr-relay on a per-network-type basis (as described in BIP 155), but how exactly that should work is intertwined with what relay strategies might make sense, and I would not feel comfortable proposing anything at this time (for instance, I'd say that we should clarify what the goals of address relay are, analyze what kinds of relay strategies optimize for that goal along with any DoS tradeoffs that might be introduced, and then determine what our own implementation might look like, before we finalize a specification).  If someone wants to work on such a proposal, I would encourage it.  However the current BIP was drafted with the goal of being compatible with any future work in this area so I don't think this should be a blocker.\r\n\r\nI'll wait a bit for more comments here, but my plan is to share this with the bitcoin-dev list soon and then return to the implementation questions that have come up so far.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/754691586/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/754802089",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-754802089",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
    "id": 754802089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDgwMjA4OQ==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-05T18:04:14Z",
    "updated_at": "2021-01-05T18:04:14Z",
    "author_association": "MEMBER",
    "body": "@amitiuttarwar Hopefully I addressed most of your comments/questions on the BIP and future direction I have in mind.  Just wanted to answer this:\r\n \r\n> * #19670 introduced a workaround to deduce inbound block-relay-only peers and protect them from eviction. After this PR, do you think we could revisit to make it more direct?\r\n\r\nI think we would wait until this has been deployed for a while and then (potentially) change the eviction logic.  Two things occur to me on this point:\r\n- Older software will continue to use the old way of (not) communicating their intentions, via the fRelayTxes flag. So to accommodate older software we may not want to switch to keying off this p2p message for a little while at least.\r\n- It seems most of the feedback has been to shy away from encoding overly broad semantics into a single p2p message; while I think that is fine it also means that from our peer's point of view, they will have to infer the connection \"type\" from the properties of the peer, rather than from the peer declaring its full intentions in a single message.  I think for now we can treat \"will never relay txes\" as essentially synonymous with these block-relay connections, but perhaps in the future there will be some distinction, and all a peer can do is rely on some set of flags that it might use to preference some peers over others -- which might put us exactly back to where we are today, with us just keying off of whether fRelayTxes is false, anyway.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/754802089/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/754816629",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-754816629",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
    "id": 754816629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDgxNjYyOQ==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-05T18:28:21Z",
    "updated_at": "2021-01-05T18:28:21Z",
    "author_association": "MEMBER",
    "body": "> > a block-relay-only connection today, our peer doesn't know that we don't want addr relay on the link\r\n> \r\n> These seem like they're conceptually different topics, and treating them as the same seems like an implementation-specific thing...\r\n> \r\n\r\n> I agree with some of the other comments here that it seems too implementation-specific to encode \"relay blocks, don't relay txs, don't relay addrs\" in a single P2P message.\r\n\r\n@jnewbery @luke-jr I'm a bit confused about both of your critiques of this as too \"implementation-specific\".  The goal of the this BIP process is to standardize/formalize these block-relay-only connections in a useful way -- in my view, this behavior has been a good thing to introduce and we want to make more of these connections and so it is worth standardizing.  \r\n\r\nSo I think the question is what is the best way to include this in the protocol.  I think there are some good reasons to make this narrowly tailored to the exact thing we need -- disabling of transaction relay -- but we should be mindful that comes with some cost to how these connections can be understood by the recipient (now and going forward as the p2p protocol evolves), and therefore code complexity in the implementation.  At any rate, I think I'm happy with the latest draft that spells out clearly that transaction relay must be disabled, and address relay is discouraged in the absence of any explicit negotiation for it (leaving the door open for a future addr relay protocol to govern addr behavior).\r\n\r\n> What is the purpose of compactblocks without transaction-relay traffic?\r\n\r\n@luke-jr You asked this question back when block-relay-only connections were introduced (https://github.com/bitcoin/bitcoin/pull/15759#issuecomment-484634796), and I answered this question back then as well (https://github.com/bitcoin/bitcoin/pull/15759#issuecomment-484666402).  Nodes using these connections are welcome to also have full-relay connections to other peers, and therefore we might expect compact block relay to work just fine over block-relay-only links.  I would recommend looking at the logs of your own node(s) to see how well compact block relay works on the existing block-relay-only peers that we have; in my experience it works quite well with some block-relay-only peers being selected as HB peers (and vice versa).\r\n\r\nFrom the point of view of the BIP, software would be free to implement this proposal and not BIP 152, and just rely on `getdata` messages to request blocks.  Acceptance of this proposed BIP does not require acceptance/implementation of BIP 152.\r\n\r\n> > In the future, we can also save a bit of memory by not allocating (or deallocating) the peer data structures we maintain for transaction and address relay.\r\n> Can't we do that today, just by not allocating it until we know the peer wants it?\r\n\r\nAs I mention above, the goal is to be able to bound a peer's resource utilization at the time the connection is completed.  It would be unfortunate if a peer enabled tx relay later in a connection's lifetime and suddenly got disconnected just because we attempted to move it from one accounting bucket to another.\r\n\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/754816629/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/757526893",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-757526893",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
    "id": 757526893,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NzUyNjg5Mw==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-10T19:06:26Z",
    "updated_at": "2021-01-10T19:06:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/757526893/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777356958",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-777356958",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
    "id": 777356958,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzM1Njk1OA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-11T10:47:23Z",
    "updated_at": "2021-02-11T10:47:23Z",
    "author_association": "MEMBER",
    "body": "Needs rebase:\r\n\r\n```\r\nfuzz: test/fuzz/process_message.cpp:57: auto initialize_process_message()::(anonymous class)::operator()() const:\r\nAssertion `\"GetNumMsgTypes() == getAllNetMessageTypes().size()\" && check' failed.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777356958/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777626740",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-777626740",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
    "id": 777626740,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzYyNjc0MA==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-11T16:37:54Z",
    "updated_at": "2021-02-11T16:37:54Z",
    "author_association": "MEMBER",
    "body": "@jonatack Thanks for the review, I included your commit that adds the addrv2 test as well.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777626740/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777733904",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-777733904",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
    "id": 777733904,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzczMzkwNA==",
    "user": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?u=871eabd15ac87d37f1b4d2b927fa8f33e3ad7fe3&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-11T19:29:11Z",
    "updated_at": "2021-02-11T19:29:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sdaftuar We seem to have a number of p2p commands now that are effectively just telling the peer which commands we want to/support receiving.  Maybe it's time for a command that just lists which commands we want/support?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777733904/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777737035",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-777737035",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
    "id": 777737035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzczNzAzNQ==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-11T19:33:06Z",
    "updated_at": "2021-02-11T19:33:06Z",
    "author_association": "MEMBER",
    "body": "@pstratem I'm not opposed to that idea, but it seems to me that a change to the way feature negotiation works generally that incorporates existing p2p message negotiation could happen independently of this proposal, so I'd prefer not to gate this work on it.  If a proposal like that is ready for deployment before this, I'd be happy to change the implementation here.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777737035/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/778130639",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-778130639",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
    "id": 778130639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODEzMDYzOQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-12T11:07:27Z",
    "updated_at": "2021-02-12T11:07:27Z",
    "author_association": "MEMBER",
    "body": "I am wondering why it is allowed to send a `disabletx` message and then follow up with a `tx` message. See also https://github.com/bitcoin/bips/pull/1052/files#r575130294 which raises the same question in the bip. Even if the bip stays as is, we might want to disallow `tx` messages as well, or is there some downside I am missing?\r\n\r\n<details><summary>The \"test\" I wrote</summary>\r\n\r\n\r\n```diff\r\ndiff --git a/test/functional/p2p_filter.py b/test/functional/p2p_filter.py\r\nindex 458e5235b6..d8c6b256ef 100755\r\n--- a/test/functional/p2p_filter.py\r\n+++ b/test/functional/p2p_filter.py\r\n@@ -18,6 +18,8 @@ from test_framework.messages import (\r\n     msg_getdata,\r\n     msg_mempool,\r\n     msg_version,\r\n+    msg_disabletx,\r\n+    msg_tx,\r\n )\r\n from test_framework.p2p import P2PInterface, p2p_lock\r\n from test_framework.script import MAX_SCRIPT_ELEMENT_SIZE\r\n@@ -205,14 +207,6 @@ class FilterTest(BitcoinTestFramework):\r\n         self.nodes[0].disconnect_p2ps()\r\n \r\n     def run_test(self):\r\n-        filter_peer = self.nodes[0].add_p2p_connection(P2PBloomFilter())\r\n-        self.log.info('Test filter size limits')\r\n-        self.test_size_limits(filter_peer)\r\n-\r\n-        self.log.info('Test BIP 37 for a node with fRelay = True (default)')\r\n-        self.test_filter(filter_peer)\r\n-        self.nodes[0].disconnect_p2ps()\r\n-\r\n         self.log.info('Test BIP 37 for a node with fRelay = False')\r\n         # Add peer but do not send version yet\r\n         filter_peer_without_nrelay = self.nodes[0].add_p2p_connection(P2PBloomFilter(), send_version=False, wait_for_verack=False)\r\n@@ -220,8 +214,14 @@ class FilterTest(BitcoinTestFramework):\r\n         version_without_fRelay = msg_version()\r\n         version_without_fRelay.nRelay = 0\r\n         filter_peer_without_nrelay.send_message(version_without_fRelay)\r\n+        filter_peer_without_nrelay.send_message(msg_disabletx())\r\n         filter_peer_without_nrelay.wait_for_verack()\r\n         assert not self.nodes[0].getpeerinfo()[0]['relaytxes']\r\n+        assert self.nodes[0].getpeerinfo()[0]['bytesrecv_per_msg']['disabletx'] == 24\r\n+        filter_peer_without_nrelay.send_message(msg_tx())\r\n+        assert self.nodes[0].getpeerinfo()[0]['bytesrecv_per_msg']['tx'] == 34\r\n+        filter_peer_without_nrelay.send_message(msg_filterclear())\r\n+        assert self.nodes[0].getpeerinfo()[0]['bytesrecv_per_msg']['tx'] == 34\r\n         self.test_frelay_false(filter_peer_without_nrelay)\r\n         self.test_filter(filter_peer_without_nrelay)\r\n \r\n```\r\n\r\n</details>",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/778130639/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/778193492",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-778193492",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
    "id": 778193492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODE5MzQ5Mg==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-12T13:24:57Z",
    "updated_at": "2021-02-12T13:24:57Z",
    "author_association": "MEMBER",
    "body": "> I am wondering why it is allowed to send a `disabletx` message and then follow up with a `tx` message. See also https://github.com/bitcoin/bips/pull/1052/files#r575130294 which raises the same question in the bip. Even if the bip stays as is, we might want to disallow `tx` messages as well, or is there some downside I am missing?\r\n\r\n@MarcoFalke The intent is to disallow sending a tx on such a link -- already it's the case that if we receive a transaction from a block-relay-only outbound peer that we'll disconnect them.  Once we no longer instantiate the `m_tx_relay` structure for inbound peers sending us `disabletx`, the existing code would already disconnect such a peer that sends an unrequested tx as well; but I will go ahead and implement that behavior in this PR as well because that is indeed an oversight. Thanks for noticing this!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/778193492/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/794702092",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-794702092",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
    "id": 794702092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NDcwMjA5Mg==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-10T01:23:55Z",
    "updated_at": "2021-03-10T01:23:55Z",
    "author_association": "MEMBER",
    "body": "Seems like we\u2019re going in circles discussing this at length, with no consensus on how to move forward.  I am happy for someone to implement this another way, if that is the preference \u2014 but I think this approach is superior to the alternate suggestions being made about reusing fRelay.\r\n\r\nI\u2019m closing this PR for now; please feel free to consider this up for grabs if anyone else is interested.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/794702092/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/799482200",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-799482200",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
    "id": 799482200,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5OTQ4MjIwMA==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-15T14:51:19Z",
    "updated_at": "2021-03-15T14:51:19Z",
    "author_association": "MEMBER",
    "body": "@sdaftuar, fixups sounds good to me. FWIW, see my [comment](https://github.com/bitcoin/bitcoin/pull/20726#discussion_r594399480) on your proposed bip338 changes. I agree this approach is superior to the alternate suggestions. I hope some of the bip content around defining well the set of messages excluded in case of tx-relay disabling could be incorporated in some bip37/60 extension.\r\n\r\nI don't plan to take this forward but I'll review it again if it gets back on track.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/799482200/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/800281829",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-800281829",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
    "id": 800281829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMDI4MTgyOQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-16T14:00:31Z",
    "updated_at": "2021-03-16T14:00:31Z",
    "author_association": "MEMBER",
    "body": "Somewhat sad to see this closed. I think it made a lot of sense.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/800281829/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/864691152",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#issuecomment-864691152",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
    "id": 864691152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NDY5MTE1Mg==",
    "user": {
      "login": "Rspigler",
      "id": 24482484,
      "node_id": "MDQ6VXNlcjI0NDgyNDg0",
      "avatar_url": "https://avatars.githubusercontent.com/u/24482484?u=7354800fee53a3db4ba3c6aa40de4ea8c3bf58f0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rspigler",
      "html_url": "https://github.com/Rspigler",
      "followers_url": "https://api.github.com/users/Rspigler/followers",
      "following_url": "https://api.github.com/users/Rspigler/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rspigler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rspigler/subscriptions",
      "organizations_url": "https://api.github.com/users/Rspigler/orgs",
      "repos_url": "https://api.github.com/users/Rspigler/repos",
      "events_url": "https://api.github.com/users/Rspigler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rspigler/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-21T03:10:10Z",
    "updated_at": "2021-06-21T03:10:10Z",
    "author_association": "NONE",
    "body": "Mark up for grabs?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/864691152/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546324067",
    "pull_request_review_id": 555987112,
    "id": 546324067,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjMyNDA2Nw==",
    "diff_hunk": "@@ -2566,6 +2572,33 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (msg_type == NetMsgType::BLOCKRELAY) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send blockrelay message after VERACK; this\n+            // must be negotiated between VERSION and VERACK.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn() || pfrom.IsAddrFetchConn()) {\n+            // If we picked an outbound for tx- or addr-relay and it sends us a\n+            // BLOCKRELAY, find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a BLOCKRELAY message if they didn't turn off tx-relay\n+            // in the version message.\n+            pfrom.fDisconnect = true;\n+        }\n+        if (pfrom.IsInboundConn()) {\n+            pfrom.UpdateConnectionType(ConnectionType::INBOUND_BLOCK_RELAY);\n+        }\n+        // If an outbound peer (manual or block-relay-only) sends us this\n+        // message, we just ignore it. We won't relay transactions with such",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 39,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "47994f4ec94d1283f34e4770497725bdb83de1f3",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "We do relay transactions with manual peers, right?",
    "created_at": "2020-12-20T05:21:50Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r546324067",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546324067"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r546324067"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546324067/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2597,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546402275",
    "pull_request_review_id": 556034286,
    "id": 546402275,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwMjI3NQ==",
    "diff_hunk": "@@ -2566,6 +2572,33 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (msg_type == NetMsgType::BLOCKRELAY) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send blockrelay message after VERACK; this\n+            // must be negotiated between VERSION and VERACK.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn() || pfrom.IsAddrFetchConn()) {\n+            // If we picked an outbound for tx- or addr-relay and it sends us a\n+            // BLOCKRELAY, find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a BLOCKRELAY message if they didn't turn off tx-relay\n+            // in the version message.\n+            pfrom.fDisconnect = true;\n+        }\n+        if (pfrom.IsInboundConn()) {\n+            pfrom.UpdateConnectionType(ConnectionType::INBOUND_BLOCK_RELAY);\n+        }\n+        // If an outbound peer (manual or block-relay-only) sends us this\n+        // message, we just ignore it. We won't relay transactions with such",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 39,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "47994f4ec94d1283f34e4770497725bdb83de1f3",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I should update the comment to be clearer. What I meant to describe was that we only disconnect an outbound peer who sends us the BLOCKRELAY message if we expect them to be a tx-relay or addr-relay peer.  If we are connecting to them as a MANUAL connection, then we'll stay connected and just not relay transactions on that link.\r\n\r\nIn addition to fixing the comment, I could improve the code to ensure we don't advertise addrs to such peers either -- I think that will be easy to do at the same time that I ensure that a BLOCKRELAY peer doesn't send us other disallowed messages (mempool, filterload/add/clear, etc).",
    "created_at": "2020-12-20T16:56:53Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r546402275",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546402275"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r546402275"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546402275/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2597,
    "side": "RIGHT",
    "in_reply_to_id": 546324067
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548346466",
    "pull_request_review_id": 558299565,
    "id": 548346466,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM0NjQ2Ng==",
    "diff_hunk": "@@ -558,6 +560,15 @@ Network CNode::ConnectedThroughNetwork() const\n     return IsInboundConn() && m_inbound_onion ? NET_ONION : addr.GetNetClass();\n }\n \n+void CNode::UpdateConnectionType(ConnectionType new_conn_type)\n+{\n+    assert(m_conn_type == ConnectionType::INBOUND);\n+    assert(new_conn_type == ConnectionType::INBOUND_BLOCK_RELAY);\n+    m_conn_type = new_conn_type;\n+    // We can now drop some unnecessary data structures.\n+    // TODO: deallocate m_tx_relay and m_addr_known.",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 19,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "6f0a312ebcfeb187b0cfe4575b383776b1b08391",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Does it make sense to have `m_conn_type` be `std::atomic` (rather than protected by a mutex) if updating it is going to also invalidate other members?\r\n\r\nIt's not clear to me that having `m_conn_type` be modified is actually the right approach -- we don't change the connection type when a peer wants us to send compact block announcements or not, eg. It might make more sense to have the connection type stay as \"inbound\" but have an extra flag for \"want blocks-only behaviour\" -- that flag could just be `m_tx_relay == nullptr` at which point you don't need to have locking to keep `m_tx_relay` and `m_conn_type` in sync. You still need something to ensure you don't free `m_tx_relay` while someone else might be using it, but that could be just changing it to a `shared_ptr`?\r\n\r\nActually, perhaps `m_tx_relay` simply shouldn't be allocated until you've received their VERACK, rather than contemplating deallocating it?",
    "created_at": "2020-12-24T01:51:17Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r548346466",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548346466"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r548346466"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548346466/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 569,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548352366",
    "pull_request_review_id": 558299565,
    "id": 548352366,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM1MjM2Ng==",
    "diff_hunk": "@@ -2566,6 +2572,18 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (msg_type == NetMsgType::BLOCKRELAY) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 17,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "2668c8e239fa4d57e531cda2d9f572c0367bac3d",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Wouldn't \"BLKRELAYONLY\" be a better name for this concept, or even separating it out into its components as \"TXRELAY false\" and \"ADDRRELAY false\" ? Seems surprising that a \"BLOCKRELAY\" message would change tx and addr relay behaviour, but not change block relay behaviour...",
    "created_at": "2020-12-24T02:20:00Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r548352366",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548352366"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r548352366"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548352366/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2575,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548359957",
    "pull_request_review_id": 558313151,
    "id": 548359957,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM1OTk1Nw==",
    "diff_hunk": "@@ -2566,6 +2572,33 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (msg_type == NetMsgType::BLOCKRELAY) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send blockrelay message after VERACK; this\n+            // must be negotiated between VERSION and VERACK.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn() || pfrom.IsAddrFetchConn()) {\n+            // If we picked an outbound for tx- or addr-relay and it sends us a\n+            // BLOCKRELAY, find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a BLOCKRELAY message if they didn't turn off tx-relay\n+            // in the version message.\n+            pfrom.fDisconnect = true;\n+        }\n+        if (pfrom.IsInboundConn()) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 35,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "47994f4ec94d1283f34e4770497725bdb83de1f3",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I thiiink this could be problematic if the peer sends two `BLOCKRELAY` messages in a row?\r\n\r\n- initially `ConnectionType::INBOUND` \r\n- they send first `BLOCKRELAY` message, we hit this code & update to `ConnectionType::INBOUND_BLOCK_RELAY`\r\n- they send another `BLOCKRELAY` message, we hit this code again because `IsInboundConn()` would be true \r\n- `UpdateConnectionType` is invoked, which asserts the connection type is `ConnectionType::INBOUND`. ",
    "created_at": "2020-12-24T02:57:16Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r548359957",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548359957"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r548359957"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548359957/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2593,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548774535",
    "pull_request_review_id": 558732015,
    "id": 548774535,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc3NDUzNQ==",
    "diff_hunk": "@@ -9,7 +9,7 @@\n  * network protocol versioning\n  */\n \n-static const int PROTOCOL_VERSION = 70016;\n+static const int PROTOCOL_VERSION = 70018;",
    "path": "src/version.h",
    "position": null,
    "original_position": 5,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "47994f4ec94d1283f34e4770497725bdb83de1f3",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "why does this protocol version number get bumped by 2? ",
    "created_at": "2020-12-25T01:33:43Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r548774535",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548774535"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r548774535"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548774535/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 12,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549180568",
    "pull_request_review_id": 558966671,
    "id": 549180568,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE4MDU2OA==",
    "diff_hunk": "@@ -2566,6 +2572,33 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (msg_type == NetMsgType::BLOCKRELAY) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send blockrelay message after VERACK; this\n+            // must be negotiated between VERSION and VERACK.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn() || pfrom.IsAddrFetchConn()) {\n+            // If we picked an outbound for tx- or addr-relay and it sends us a\n+            // BLOCKRELAY, find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a BLOCKRELAY message if they didn't turn off tx-relay\n+            // in the version message.\n+            pfrom.fDisconnect = true;\n+        }\n+        if (pfrom.IsInboundConn()) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 35,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "47994f4ec94d1283f34e4770497725bdb83de1f3",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nice found!\r\n\r\nIf the code purpose of the sequence of assert was to validate the `ConnectionType` state transition before to operate it, another approach could be to resort to a switch statement, far less harmful and easier to reason on ?\r\n\r\n```\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex 8027723b5..086fbf227 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -562,11 +562,17 @@ Network CNode::ConnectedThroughNetwork() const\r\n \r\n void CNode::UpdateConnectionType(ConnectionType new_conn_type)\r\n {\r\n-    assert(m_conn_type == ConnectionType::INBOUND);\r\n-    assert(new_conn_type == ConnectionType::INBOUND_BLOCK_RELAY);\r\n-    m_conn_type = new_conn_type;\r\n-    // We can now drop some unnecessary data structures.\r\n-    // TODO: deallocate m_tx_relay and m_addr_known.\r\n+    switch (m_conn_type) {\r\n+        case ConnectionType::INBOUND:\r\n+            if (new_conn_type == ConnectionType::INBOUND_BLOCK_RELAY) m_conn_type = new_conn_type;\r\n+        case ConnectionType::INBOUND_BLOCK_RELAY:\r\n+        case ConnectionType::MANUAL:\r\n+        case ConnectionType::OUTBOUND_FULL_RELAY:\r\n+        case ConnectionType::BLOCK_RELAY:\r\n+        case ConnectionType::FEELER:\r\n+        case ConnectionType::ADDR_FETCH:\r\n+            break;\r\n+    }\r\n }\r\n \r\n #undef X\r\n```",
    "created_at": "2020-12-28T00:24:03Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549180568",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549180568"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549180568"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549180568/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2593,
    "side": "RIGHT",
    "in_reply_to_id": 548359957
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549181974",
    "pull_request_review_id": 558966671,
    "id": 549181974,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE4MTk3NA==",
    "diff_hunk": "@@ -3522,7 +3522,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         // to users' AddrMan and later request them by sending getaddr messages.\n         // Making nodes which are behind NAT and can only make outgoing connections ignore\n         // the getaddr message mitigates the attack.\n-        if (!pfrom.IsInboundConn()) {\n+        if (!pfrom.IsInboundConn() || !pfrom.RelayAddrsWithConn()) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "6f0a312ebcfeb187b0cfe4575b383776b1b08391",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "IIUC, after this commit, outbound block-relay-only peers are excluded from requesting addrs. Was this intended ? Further, the new connection type should already be excluded as `IsInboundConn` is extended in same commit.",
    "created_at": "2020-12-28T00:40:34Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549181974",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549181974"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549181974"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549181974/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3525,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549183959",
    "pull_request_review_id": 558966671,
    "id": 549183959,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE4Mzk1OQ==",
    "diff_hunk": "@@ -2579,8 +2579,23 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             pfrom.fDisconnect = true;\n             return;\n         }\n-        // ignore this for now - later we can downgrade the resources allocated\n-        // to this peer.\n+        if (pfrom.IsFullOutboundConn() || pfrom.IsAddrFetchConn()) {\n+            // If we picked an outbound for tx- or addr-relay and it sends us a",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 7,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "d99991704c17eff0a10fa9145b8dcce72f88bf87",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I wonder if the rational shouldn't be different. AFAICT, BLOCKRELAY aims to inform the connected node about the initiator expectations on traffic relayed on this link. So a connected node inverting the logic and announcing its link expectations will break the effect and force the initiator to adapt its peer resource allocation.\r\n\r\nI would say the restriction here is motivated only by the outboundness of the connection, the traffic class (tx, addr, block-relay) shouldn't matter. \r\n\r\nI think this PR and BIP introduce a \"one-way\" negotiation privilege for the initiator, which makes sense, but should this be documented in the BIP or stay an implicit assumption of our peer management policy ?",
    "created_at": "2020-12-28T01:01:50Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549183959",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549183959"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549183959"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549183959/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2583,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549185589",
    "pull_request_review_id": 558966671,
    "id": 549185589,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE4NTU4OQ==",
    "diff_hunk": "@@ -2579,8 +2579,23 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             pfrom.fDisconnect = true;\n             return;\n         }\n-        // ignore this for now - later we can downgrade the resources allocated\n-        // to this peer.\n+        if (pfrom.IsFullOutboundConn() || pfrom.IsAddrFetchConn()) {\n+            // If we picked an outbound for tx- or addr-relay and it sends us a\n+            // BLOCKRELAY, find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a BLOCKRELAY message if they didn't turn off tx-relay\n+            // in the version message.",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "d99991704c17eff0a10fa9145b8dcce72f88bf87",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is where I don't understand BIP following excerpt :\r\n\r\n> this is because the transaction relay field in the version message is not a permanent setting for the lifetime of the connection. Consequently, a node receiving an inbound connection with transaction relay disabled cannot distinguish between a peer that will never enable transaction relay and one that will.\r\n\r\nWhy do you mean exactly by \"is not a permanent setting\" ? Version message can only be received once (L2270). Further a peer which turns off tx-relay but then starts to relay tx would break its connection negotiation commitment and as such should be disconnected ? I don't think we do this for now. \r\n\r\nAnd even further when we pick up a peer as a block-relay-only one, we have no word to say in its choice of turning off tx-relay field or not ?",
    "created_at": "2020-12-28T01:17:27Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549185589",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549185589"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549185589"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549185589/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2821,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549434277",
    "pull_request_review_id": 559244397,
    "id": 549434277,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQzNDI3Nw==",
    "diff_hunk": "@@ -3522,7 +3522,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         // to users' AddrMan and later request them by sending getaddr messages.\n         // Making nodes which are behind NAT and can only make outgoing connections ignore\n         // the getaddr message mitigates the attack.\n-        if (!pfrom.IsInboundConn()) {\n+        if (!pfrom.IsInboundConn() || !pfrom.RelayAddrsWithConn()) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "6f0a312ebcfeb187b0cfe4575b383776b1b08391",
    "user": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@ariard If I am reading this correctly, outbound-block-relay peers would not get a response to `getaddr` even prior to this commit.\r\n\r\nI am not sure I understand how the new connection type should already be excluded as:\r\n```\r\n!pfrom.IsInboundConn() => ( !INBOUND && !INBOUND_BLOCK_RELAY )\r\n( !pfrom.IsInboundConn() || !pfrom.RelayAddrsWithConn() ) => ( !INBOUND || BLOCK_RELAY || INBOUND_BLOCK_RELAY )\r\n```",
    "created_at": "2020-12-28T18:00:47Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549434277",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549434277"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549434277"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549434277/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3525,
    "side": "RIGHT",
    "in_reply_to_id": 549181974
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549437514",
    "pull_request_review_id": 559244397,
    "id": 549437514,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQzNzUxNA==",
    "diff_hunk": "@@ -558,6 +560,15 @@ Network CNode::ConnectedThroughNetwork() const\n     return IsInboundConn() && m_inbound_onion ? NET_ONION : addr.GetNetClass();\n }\n \n+void CNode::UpdateConnectionType(ConnectionType new_conn_type)\n+{\n+    assert(m_conn_type == ConnectionType::INBOUND);\n+    assert(new_conn_type == ConnectionType::INBOUND_BLOCK_RELAY);\n+    m_conn_type = new_conn_type;\n+    // We can now drop some unnecessary data structures.\n+    // TODO: deallocate m_tx_relay and m_addr_known.",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 19,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "6f0a312ebcfeb187b0cfe4575b383776b1b08391",
    "user": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I am confused by what constitutes a new connection type v/s a negotiated feature of a connection. Other negotiated features that do not seem to change the connection type include `WTXIDRELAY`,`SENDADDRV2`, `SENDCMPCT`, etc.\r\n\r\nAs a starting point, I'd suggest that connection types imply (1) a different level of trust in the peer (eg. `INBOUND` vs `OUTBOUND`) or (2) connection limits(eg. 2 for `OUTBOUND_BLOCK_RELAY`, 1 for `FEELER`) and all other features are attributes of a connection.  This also opens up future possibilities for peers that want other combinations like block and addr relay, but no tx relay, etc.",
    "created_at": "2020-12-28T18:12:25Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549437514",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549437514"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549437514"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549437514/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 569,
    "side": "RIGHT",
    "in_reply_to_id": 548346466
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549439194",
    "pull_request_review_id": 559244397,
    "id": 549439194,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQzOTE5NA==",
    "diff_hunk": "@@ -2566,6 +2572,18 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (msg_type == NetMsgType::BLOCKRELAY) {\n+        if (pfrom.fSuccessfullyConnected) {",
    "path": "src/net_processing.cpp",
    "position": 32,
    "original_position": 18,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "2668c8e239fa4d57e531cda2d9f572c0367bac3d",
    "user": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Out of curiosity, why must `BLOCKRELAY` be negotiated between `VERSION` and `VERACK`? The only reason I can think of is to avoid allocating (`m_tx_relay`, `m_addr_known`) altogether instead of allocating, then de-allocating. Is that correct?",
    "created_at": "2020-12-28T18:18:35Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549439194",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549439194"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549439194"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549439194/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2859,
    "original_line": 2853,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549441869",
    "pull_request_review_id": 559244397,
    "id": 549441869,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ0MTg2OQ==",
    "diff_hunk": "@@ -2566,6 +2572,33 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (msg_type == NetMsgType::BLOCKRELAY) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send blockrelay message after VERACK; this\n+            // must be negotiated between VERSION and VERACK.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn() || pfrom.IsAddrFetchConn()) {\n+            // If we picked an outbound for tx- or addr-relay and it sends us a\n+            // BLOCKRELAY, find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a BLOCKRELAY message if they didn't turn off tx-relay\n+            // in the version message.\n+            pfrom.fDisconnect = true;\n+        }\n+        if (pfrom.IsInboundConn()) {\n+            pfrom.UpdateConnectionType(ConnectionType::INBOUND_BLOCK_RELAY);\n+        }\n+        // If an outbound peer (manual or block-relay-only) sends us this\n+        // message, we just ignore it. We won't relay transactions with such",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 39,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "47994f4ec94d1283f34e4770497725bdb83de1f3",
    "user": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Would some users be using `-addnode` to start with a trusted peer that can then also provide addrs? If so, when we receive `BLOCKRELAY` from a `MANUAL` connection, and if addrman is empty, is it worth alerting the user by logging?",
    "created_at": "2020-12-28T18:22:10Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549441869",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549441869"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549441869"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549441869/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2597,
    "side": "RIGHT",
    "in_reply_to_id": 546324067
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549460093",
    "pull_request_review_id": 559272325,
    "id": 549460093,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ2MDA5Mw==",
    "diff_hunk": "@@ -558,6 +560,15 @@ Network CNode::ConnectedThroughNetwork() const\n     return IsInboundConn() && m_inbound_onion ? NET_ONION : addr.GetNetClass();\n }\n \n+void CNode::UpdateConnectionType(ConnectionType new_conn_type)\n+{\n+    assert(m_conn_type == ConnectionType::INBOUND);\n+    assert(new_conn_type == ConnectionType::INBOUND_BLOCK_RELAY);\n+    m_conn_type = new_conn_type;\n+    // We can now drop some unnecessary data structures.\n+    // TODO: deallocate m_tx_relay and m_addr_known.",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 19,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "6f0a312ebcfeb187b0cfe4575b383776b1b08391",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I wondered whether the better approach would be to add a new bool to indicate whether tx-relay is disabled (like we have for compact blocks, or sendheaders, etc), or to update the connection type like I've done here. \r\n\r\nMy hesitation to add a new bool was that it seemed counter to the recent work to refactor `net` to use connection types as an alternative to the bucket-of-bool's approach for deciding how to interact with a peer.  If we have a set of semantics that we understand go together for a given peer, it's nice for code readability to encode that as simply as possible.\r\n\r\nOn the other hand, my intention with the BIP was to allow future flexibility for what semantics might be possible (eg my intention is to allow for addr-relay to happen in the future if we add an explicit way to negotiate addr relay, as an example), so from that perspective, having a connection type perhaps implies too much of an understanding of what the peer may be doing.  And for inbound peers in particular, we never really know what they're doing, so perhaps having more than just \"inbound\" as a connection type may be misleading to future code readers as well.\r\n\r\nI like the idea of moving initialization of `m_tx_relay` to VERACK, but not sure if I'll end up tackling that here or deferring for the current refactoring work in progress to make more headway (I think we need to add a lock that guards access to the `m_tx_relay` pointer itself?)",
    "created_at": "2020-12-28T19:23:07Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549460093",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549460093"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549460093"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549460093/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 569,
    "side": "RIGHT",
    "in_reply_to_id": 548346466
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549460285",
    "pull_request_review_id": 559272536,
    "id": 549460285,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ2MDI4NQ==",
    "diff_hunk": "@@ -2566,6 +2572,18 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (msg_type == NetMsgType::BLOCKRELAY) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 17,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "2668c8e239fa4d57e531cda2d9f572c0367bac3d",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "How about `disabletx`?",
    "created_at": "2020-12-28T19:23:48Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549460285",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549460285"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549460285"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549460285/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2575,
    "side": "RIGHT",
    "in_reply_to_id": 548352366
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549460466",
    "pull_request_review_id": 559272768,
    "id": 549460466,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ2MDQ2Ng==",
    "diff_hunk": "@@ -9,7 +9,7 @@\n  * network protocol versioning\n  */\n \n-static const int PROTOCOL_VERSION = 70016;\n+static const int PROTOCOL_VERSION = 70018;",
    "path": "src/version.h",
    "position": null,
    "original_position": 5,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "47994f4ec94d1283f34e4770497725bdb83de1f3",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I thought Erlay might be using one!",
    "created_at": "2020-12-28T19:24:31Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549460466",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549460466"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549460466"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549460466/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 12,
    "side": "RIGHT",
    "in_reply_to_id": 548774535
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549876463",
    "pull_request_review_id": 559728666,
    "id": 549876463,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTg3NjQ2Mw==",
    "diff_hunk": "@@ -3522,7 +3522,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         // to users' AddrMan and later request them by sending getaddr messages.\n         // Making nodes which are behind NAT and can only make outgoing connections ignore\n         // the getaddr message mitigates the attack.\n-        if (!pfrom.IsInboundConn()) {\n+        if (!pfrom.IsInboundConn() || !pfrom.RelayAddrsWithConn()) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "6f0a312ebcfeb187b0cfe4575b383776b1b08391",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You're right that's an OR! Maybe we can rename `RelayAddrsWithConn()` to `IsFullConn` to reduce confusion, like other predicates on connection types. We're stretching slowly from the #19316 original goal of simplifying handling of connection types...",
    "created_at": "2020-12-29T22:39:40Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549876463",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549876463"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549876463"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549876463/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3525,
    "side": "RIGHT",
    "in_reply_to_id": 549181974
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549878735",
    "pull_request_review_id": 559730838,
    "id": 549878735,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTg3ODczNQ==",
    "diff_hunk": "@@ -3522,7 +3522,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         // to users' AddrMan and later request them by sending getaddr messages.\n         // Making nodes which are behind NAT and can only make outgoing connections ignore\n         // the getaddr message mitigates the attack.\n-        if (!pfrom.IsInboundConn()) {\n+        if (!pfrom.IsInboundConn() || !pfrom.RelayAddrsWithConn()) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "6f0a312ebcfeb187b0cfe4575b383776b1b08391",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@ariard Agreed; this is the motivation for #20729. Feel free to suggest naming improvements to the scripted diff there.",
    "created_at": "2020-12-29T22:50:25Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549878735",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549878735"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549878735"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549878735/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3525,
    "side": "RIGHT",
    "in_reply_to_id": 549181974
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549933501",
    "pull_request_review_id": 559778155,
    "id": 549933501,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkzMzUwMQ==",
    "diff_hunk": "@@ -558,6 +560,15 @@ Network CNode::ConnectedThroughNetwork() const\n     return IsInboundConn() && m_inbound_onion ? NET_ONION : addr.GetNetClass();\n }\n \n+void CNode::UpdateConnectionType(ConnectionType new_conn_type)\n+{\n+    assert(m_conn_type == ConnectionType::INBOUND);\n+    assert(new_conn_type == ConnectionType::INBOUND_BLOCK_RELAY);\n+    m_conn_type = new_conn_type;\n+    // We can now drop some unnecessary data structures.\n+    // TODO: deallocate m_tx_relay and m_addr_known.",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 19,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "6f0a312ebcfeb187b0cfe4575b383776b1b08391",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think we've got a few different ways in which nodes differ:\r\n\r\n 1. which random features they support (wtxid relay, compact blocks, addrv2; erlay, pkg relay, p2p encryption in the future) that might make things more efficient (and which we might prefer our connections to support) but don't really change anything\r\n 2. how much we trust them (manually privileged/selected, we chose them as an outbound, they chose us as an inbound)\r\n 3. why we've got the connection (manual setup for some higher level purpose, tx relay, block relay, feeler, addrfetch)\r\n 4. which limits we apply to them (8 outbounds, 2 outbound block relay, 115 (?) inbounds)\r\n\r\nWe should use bools instead of conn_type for random features (otherwise we either get an exponential explosion of types or have to sequence features), and I don't think trust/\"why\" really affects inbounds that only wants blocks or not, but it could make sense to have a new limit imply a new connection-type? Given the limits overlap a little (extra outbounds vs feelers), and what to do when you have extra peers requires looking at other data anyway, I'm not sure that's very convincing though.\r\n\r\nHmm, how much we \"trust\" a connection might change over the course of a connection in future if we allow random inbound peers to authenticate themselves to us... So I guess that leaves me thinking that we should have `const m_conn_type` representing our purpose in having the connection? (Different purposes meaning substantial changes in the protocol state machine -- eg, blocks only we deliberately opt out of tx and addr relay even if we otherwise support both, feelers we disconnect after verack, addrfetch we disconnect after getting addresses, inbounds we have different delays for and send VERSION later)\r\n\r\n> (I think we need to add a lock that guards access to the m_tx_relay pointer itself?)\r\n\r\nMaybe? I think there are already way more per-peer mutexes than are really useful...",
    "created_at": "2020-12-30T04:42:53Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549933501",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549933501"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549933501"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549933501/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 569,
    "side": "RIGHT",
    "in_reply_to_id": 548346466
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549933987",
    "pull_request_review_id": 559778579,
    "id": 549933987,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkzMzk4Nw==",
    "diff_hunk": "@@ -2566,6 +2572,18 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (msg_type == NetMsgType::BLOCKRELAY) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 17,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "2668c8e239fa4d57e531cda2d9f572c0367bac3d",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Sure, `disabletx` or `txrelay false` sound about the same to me; though opting-out vs opting-in still maybe seems odd?",
    "created_at": "2020-12-30T04:46:16Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549933987",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549933987"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r549933987"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549933987/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2575,
    "side": "RIGHT",
    "in_reply_to_id": 548352366
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551944543",
    "pull_request_review_id": 561803650,
    "id": 551944543,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk0NDU0Mw==",
    "diff_hunk": "@@ -2566,6 +2572,18 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (msg_type == NetMsgType::BLOCKRELAY) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 17,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "2668c8e239fa4d57e531cda2d9f572c0367bac3d",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Well my thinking is that the default on the network is that everything gets relayed, so the natural thing to add is an opt-out.",
    "created_at": "2021-01-05T13:53:15Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r551944543",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551944543"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r551944543"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551944543/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2575,
    "side": "RIGHT",
    "in_reply_to_id": 548352366
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555788869",
    "pull_request_review_id": 566292381,
    "id": 555788869,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTc4ODg2OQ==",
    "diff_hunk": "@@ -2579,8 +2579,23 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             pfrom.fDisconnect = true;\n             return;\n         }\n-        // ignore this for now - later we can downgrade the resources allocated\n-        // to this peer.\n+        if (pfrom.IsFullOutboundConn() || pfrom.IsAddrFetchConn()) {\n+            // If we picked an outbound for tx- or addr-relay and it sends us a\n+            // BLOCKRELAY, find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a BLOCKRELAY message if they didn't turn off tx-relay\n+            // in the version message.",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "d99991704c17eff0a10fa9145b8dcce72f88bf87",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Sending a FILTERCLEAR (at least, to a node with NODE_BLOOM set) will enable transaction relay; see BIP37.",
    "created_at": "2021-01-12T13:59:34Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r555788869",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555788869"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r555788869"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555788869/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2821,
    "side": "RIGHT",
    "in_reply_to_id": 549185589
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571284399",
    "pull_request_review_id": 584750373,
    "id": 571284399,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTI4NDM5OQ==",
    "diff_hunk": "@@ -1630,7 +1645,8 @@ void RelayTransaction(const uint256& txid, const uint256& wtxid, const CConnman&\n static void RelayAddress(const CNode& originator,\n                          const CAddress& addr,\n                          bool fReachable,\n-                         const CConnman& connman)\n+                         const CConnman& connman,\n+                         PeerManagerImpl* peerman)",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 42,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "e5e5fe80addc552d02372b8dc10cf3c9269a757b",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could update the `RelayAddress` Doxygen documentation.\r\n```diff\r\n  * @param[in] connman Connection manager to choose nodes to relay to.\r\n+ * @param[in] peerman ...\r\n  */\r\n```\r\n",
    "created_at": "2021-02-05T22:26:45Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r571284399",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571284399"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r571284399"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571284399/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1650,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571285093",
    "pull_request_review_id": 584750373,
    "id": 571285093,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTI4NTA5Mw==",
    "diff_hunk": "@@ -2781,6 +2803,30 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    if (msg_type == NetMsgType::DISABLETX) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send this message after VERACK; this\n+            // must be negotiated between VERSION and VERACK.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn()) {\n+            // If we picked an outbound for tx-relay and it sends us a\n+            // disabletx, we want to find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a DISABLETX message if they didn't turn off tx-relay\n+            // in the version message.",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 89,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "e5e5fe80addc552d02372b8dc10cf3c9269a757b",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Some doc suggestions following recent updates on master to the wtxidrelay and addrv2 documentation immediately above\r\n```diff\r\n+    // BIPXXX defines feature negotiation of disabletx, which must happen\r\n+    // between VERSION and VERACK.\r\n     if (msg_type == NetMsgType::DISABLETX) {\r\n         if (pfrom.fSuccessfullyConnected) {\r\n-            // Disconnect peers that send this message after VERACK; this\r\n-            // must be negotiated between VERSION and VERACK.\r\n+            // Disconnect peers that send a disabletx message after VERACK.\r\n             pfrom.fDisconnect = true;\r\n             return;\r\n         }\r\n         if (pfrom.IsFullOutboundConn()) {\r\n-            // If we picked an outbound for tx-relay and it sends us a\r\n+            // If we picked an outbound for transaction relay and it sends us a\r\n             // disabletx, we want to find another peer.\r\n             pfrom.fDisconnect = true;\r\n             return;\r\n         }\r\n         if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\r\n-            // Can't send a DISABLETX message if they didn't turn off tx-relay\r\n-            // in the version message.\r\n+            // Can't send a disabletx message if they didn't turn off\r\n+            // transaction relay in the version message.\r\n             pfrom.fDisconnect = true;\r\n```\r\n",
    "created_at": "2021-02-05T22:28:20Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r571285093",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571285093"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r571285093"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571285093/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2821,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571285535",
    "pull_request_review_id": 584750373,
    "id": 571285535,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTI4NTUzNQ==",
    "diff_hunk": "@@ -891,6 +897,15 @@ void PeerManagerImpl::PushNodeVersion(CNode& pnode, int64_t nTime)\n     }\n }\n \n+bool PeerManagerImpl::IsAddrRelayPeer(const CNode& pnode)\n+{\n+    PeerRef peer = GetPeerRef(pnode.GetId());",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 26,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "e5e5fe80addc552d02372b8dc10cf3c9269a757b",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n    const PeerRef peer = GetPeerRef(pnode.GetId());\r\n```",
    "created_at": "2021-02-05T22:29:30Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r571285535",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571285535"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r571285535"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571285535/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 902,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571286112",
    "pull_request_review_id": 584750373,
    "id": 571286112,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTI4NjExMg==",
    "diff_hunk": "@@ -9,7 +9,7 @@\n  * network protocol versioning\n  */\n \n-static const int PROTOCOL_VERSION = 70016;\n+static const int PROTOCOL_VERSION = 70017;",
    "path": "src/version.h",
    "position": null,
    "original_position": 5,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "e5e5fe80addc552d02372b8dc10cf3c9269a757b",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\nstatic constexpr int PROTOCOL_VERSION = 70017;\r\n```",
    "created_at": "2021-02-05T22:30:51Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r571286112",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571286112"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r571286112"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571286112/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 12,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571286206",
    "pull_request_review_id": 584750373,
    "id": 571286206,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTI4NjIwNg==",
    "diff_hunk": "@@ -38,6 +38,9 @@ static const int INVALID_CB_NO_BAN_VERSION = 70015;\n //! \"wtxidrelay\" command for wtxid-based relay starts with this version\n static const int WTXID_RELAY_VERSION = 70016;\n \n+//! \"disabletx\" message (eg used for block-relay-only connections) starts with this version\n+static const int DISABLE_TX_VERSION = 70017;",
    "path": "src/version.h",
    "position": null,
    "original_position": 14,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "e5e5fe80addc552d02372b8dc10cf3c9269a757b",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\nstatic constexpr int DISABLE_TX_VERSION = 70017;\r\n```",
    "created_at": "2021-02-05T22:31:05Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r571286206",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571286206"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r571286206"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/571286206/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 42,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574649216",
    "pull_request_review_id": 588755608,
    "id": 574649216,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDY0OTIxNg==",
    "diff_hunk": "@@ -9,7 +9,7 @@\n  * network protocol versioning\n  */\n \n-static const int PROTOCOL_VERSION = 70016;\n+static const int PROTOCOL_VERSION = 70017;",
    "path": "src/version.h",
    "position": null,
    "original_position": 5,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "e5e5fe80addc552d02372b8dc10cf3c9269a757b",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2021-02-11T16:36:11Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r574649216",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574649216"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r574649216"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574649216/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 12,
    "side": "RIGHT",
    "in_reply_to_id": 571286112
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574649313",
    "pull_request_review_id": 588755748,
    "id": 574649313,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDY0OTMxMw==",
    "diff_hunk": "@@ -38,6 +38,9 @@ static const int INVALID_CB_NO_BAN_VERSION = 70015;\n //! \"wtxidrelay\" command for wtxid-based relay starts with this version\n static const int WTXID_RELAY_VERSION = 70016;\n \n+//! \"disabletx\" message (eg used for block-relay-only connections) starts with this version\n+static const int DISABLE_TX_VERSION = 70017;",
    "path": "src/version.h",
    "position": null,
    "original_position": 14,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "e5e5fe80addc552d02372b8dc10cf3c9269a757b",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2021-02-11T16:36:18Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r574649313",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574649313"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r574649313"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574649313/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 42,
    "side": "RIGHT",
    "in_reply_to_id": 571286206
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574649434",
    "pull_request_review_id": 588755926,
    "id": 574649434,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDY0OTQzNA==",
    "diff_hunk": "@@ -891,6 +897,15 @@ void PeerManagerImpl::PushNodeVersion(CNode& pnode, int64_t nTime)\n     }\n }\n \n+bool PeerManagerImpl::IsAddrRelayPeer(const CNode& pnode)\n+{\n+    PeerRef peer = GetPeerRef(pnode.GetId());",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 26,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "e5e5fe80addc552d02372b8dc10cf3c9269a757b",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2021-02-11T16:36:28Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r574649434",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574649434"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r574649434"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574649434/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 902,
    "side": "RIGHT",
    "in_reply_to_id": 571285535
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574649844",
    "pull_request_review_id": 588756498,
    "id": 574649844,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDY0OTg0NA==",
    "diff_hunk": "@@ -2781,6 +2803,30 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    if (msg_type == NetMsgType::DISABLETX) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send this message after VERACK; this\n+            // must be negotiated between VERSION and VERACK.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn()) {\n+            // If we picked an outbound for tx-relay and it sends us a\n+            // disabletx, we want to find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a DISABLETX message if they didn't turn off tx-relay\n+            // in the version message.",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 89,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "e5e5fe80addc552d02372b8dc10cf3c9269a757b",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2021-02-11T16:37:02Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r574649844",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574649844"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r574649844"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574649844/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2821,
    "side": "RIGHT",
    "in_reply_to_id": 571285093
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574649943",
    "pull_request_review_id": 588756633,
    "id": 574649943,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDY0OTk0Mw==",
    "diff_hunk": "@@ -1630,7 +1645,8 @@ void RelayTransaction(const uint256& txid, const uint256& wtxid, const CConnman&\n static void RelayAddress(const CNode& originator,\n                          const CAddress& addr,\n                          bool fReachable,\n-                         const CConnman& connman)\n+                         const CConnman& connman,\n+                         PeerManagerImpl* peerman)",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 42,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "e5e5fe80addc552d02372b8dc10cf3c9269a757b",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2021-02-11T16:37:10Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r574649943",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574649943"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r574649943"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574649943/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1650,
    "side": "RIGHT",
    "in_reply_to_id": 571284399
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575086380",
    "pull_request_review_id": 589288483,
    "id": 575086380,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTA4NjM4MA==",
    "diff_hunk": "@@ -2784,6 +2790,18 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    if (msg_type == NetMsgType::DISABLETX) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send this message after VERACK; this\n+            // must be negotiated between VERSION and VERACK.\n+            pfrom.fDisconnect = true;",
    "path": "src/net_processing.cpp",
    "position": 47,
    "original_position": 21,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "e142e81c5145c61a0ba1e49d0b463e2825f6f418",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in the first commit:\r\n\r\nThe other negotiation message types have a NET-debug log statement preceding this disconnect. Is there any reason to not log to NET-debug as well here?",
    "created_at": "2021-02-12T09:23:16Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575086380",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575086380"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575086380"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575086380/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2874,
    "original_line": 2868,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575125883",
    "pull_request_review_id": 589288483,
    "id": 575125883,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTEyNTg4Mw==",
    "diff_hunk": "@@ -1626,11 +1641,13 @@ void RelayTransaction(const uint256& txid, const uint256& wtxid, const CConnman&\n  * @param[in] fReachable Whether the address' network is reachable. We relay unreachable\n  * addresses less.\n  * @param[in] connman Connection manager to choose nodes to relay to.\n+ * @param[in] peerman PeerManager implementation being used\n  */\n static void RelayAddress(const CNode& originator,\n                          const CAddress& addr,\n                          bool fReachable,\n-                         const CConnman& connman)\n+                         const CConnman& connman,\n+                         PeerManagerImpl* peerman)",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 47,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "aa09a205ca8f05143250b97cfdd3f8ada809530c",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "unrelated style nit in the second commit: instead of passing connman and peerman, this could be made a member function of peerman. The following diff on top of this commit compiles for me. Though, this can also be done in a separate pull.\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex e9584ddac1..84ac462099 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -258,6 +258,9 @@ public:\r\n \r\n     /** Whether to relay addresses with a peer. */\r\n     bool IsAddrRelayPeer(const CNode& pnode);\r\n+    void RelayAddress(const CNode& originator,\r\n+                      const CAddress& addr,\r\n+                      bool fReachable);\r\n \r\n private:\r\n     /** Consider evicting an outbound peer based on the amount of time they've been behind our tip */\r\n@@ -1640,14 +1643,10 @@ void RelayTransaction(const uint256& txid, const uint256& wtxid, const CConnman&\r\n  * @param[in] addr Address to relay.\r\n  * @param[in] fReachable Whether the address' network is reachable. We relay unreachable\r\n  * addresses less.\r\n- * @param[in] connman Connection manager to choose nodes to relay to.\r\n- * @param[in] peerman PeerManager implementation being used\r\n  */\r\n-static void RelayAddress(const CNode& originator,\r\n-                         const CAddress& addr,\r\n-                         bool fReachable,\r\n-                         const CConnman& connman,\r\n-                         PeerManagerImpl* peerman)\r\n+void PeerManagerImpl::RelayAddress(const CNode& originator,\r\n+                                   const CAddress& addr,\r\n+                                   bool fReachable)\r\n {\r\n     if (!fReachable && !addr.IsRelayable()) return;\r\n \r\n@@ -1655,7 +1654,7 @@ static void RelayAddress(const CNode& originator,\r\n     // Use deterministic randomness to send to the same nodes for 24 hours\r\n     // at a time so the m_addr_knowns of the chosen nodes prevent repeats\r\n     uint64_t hashAddr = addr.GetHash();\r\n-    const CSipHasher hasher = connman.GetDeterministicRandomizer(RANDOMIZER_ID_ADDRESS_RELAY).Write(hashAddr << 32).Write((GetTime() + hashAddr) / (24 * 60 * 60));\r\n+    const CSipHasher hasher = m_connman.GetDeterministicRandomizer(RANDOMIZER_ID_ADDRESS_RELAY).Write(hashAddr << 32).Write((GetTime() + hashAddr) / (24 * 60 * 60));\r\n     FastRandomContext insecure_rand;\r\n \r\n     // Relay reachable addresses to 2 peers. Unreachable addresses are relayed randomly to 1 or 2 peers.\r\n@@ -1664,7 +1663,7 @@ static void RelayAddress(const CNode& originator,\r\n     std::array<std::pair<uint64_t, CNode*>,2> best{{{0, nullptr}, {0, nullptr}}};\r\n     assert(nRelayNodes <= best.size());\r\n \r\n-    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr, &peerman](CNode* pnode) {\r\n+    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr, peerman = this](CNode* pnode) {\r\n         if (peerman->IsAddrRelayPeer(*pnode) && pnode != &originator && pnode->IsAddrCompatible(addr)) {\r\n             uint64_t hashKey = CSipHasher(hasher).Write(pnode->GetId()).Finalize();\r\n             for (unsigned int i = 0; i < nRelayNodes; i++) {\r\n@@ -1683,7 +1682,7 @@ static void RelayAddress(const CNode& originator,\r\n         }\r\n     };\r\n \r\n-    connman.ForEachNodeThen(std::move(sortfunc), std::move(pushfunc));\r\n+    m_connman.ForEachNodeThen(std::move(sortfunc), std::move(pushfunc));\r\n }\r\n \r\n void static ProcessGetBlockData(CNode& pfrom, Peer& peer, const CChainParams& chainparams, const CInv& inv, CConnman& connman)\r\n@@ -2885,7 +2884,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\r\n             if (addr.nTime > nSince && !pfrom.fGetAddr && vAddr.size() <= 10 && addr.IsRoutable())\r\n             {\r\n                 // Relay to a limited number of other nodes\r\n-                RelayAddress(pfrom, addr, fReachable, m_connman, this);\r\n+                RelayAddress(pfrom, addr, fReachable);\r\n             }\r\n             // Do not store addresses outside our network\r\n             if (fReachable)\r\n",
    "created_at": "2021-02-12T10:29:53Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575125883",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575125883"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575125883"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575125883/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1650,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575254816",
    "pull_request_review_id": 589502538,
    "id": 575254816,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTI1NDgxNg==",
    "diff_hunk": "@@ -2784,6 +2790,18 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    if (msg_type == NetMsgType::DISABLETX) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send this message after VERACK; this\n+            // must be negotiated between VERSION and VERACK.\n+            pfrom.fDisconnect = true;",
    "path": "src/net_processing.cpp",
    "position": 47,
    "original_position": 21,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "e142e81c5145c61a0ba1e49d0b463e2825f6f418",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2021-02-12T14:15:40Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575254816",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575254816"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575254816"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575254816/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2874,
    "original_line": 2868,
    "side": "RIGHT",
    "in_reply_to_id": 575086380
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575256006",
    "pull_request_review_id": 589504079,
    "id": 575256006,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTI1NjAwNg==",
    "diff_hunk": "@@ -1626,11 +1641,13 @@ void RelayTransaction(const uint256& txid, const uint256& wtxid, const CConnman&\n  * @param[in] fReachable Whether the address' network is reachable. We relay unreachable\n  * addresses less.\n  * @param[in] connman Connection manager to choose nodes to relay to.\n+ * @param[in] peerman PeerManager implementation being used\n  */\n static void RelayAddress(const CNode& originator,\n                          const CAddress& addr,\n                          bool fReachable,\n-                         const CConnman& connman)\n+                         const CConnman& connman,\n+                         PeerManagerImpl* peerman)",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 47,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "aa09a205ca8f05143250b97cfdd3f8ada809530c",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2021-02-12T14:17:31Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575256006",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575256006"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575256006"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575256006/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1650,
    "side": "RIGHT",
    "in_reply_to_id": 575125883
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575271596",
    "pull_request_review_id": 589524845,
    "id": 575271596,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTI3MTU5Ng==",
    "diff_hunk": "@@ -1647,8 +1663,8 @@ static void RelayAddress(const CNode& originator,\n     std::array<std::pair<uint64_t, CNode*>,2> best{{{0, nullptr}, {0, nullptr}}};\n     assert(nRelayNodes <= best.size());\n \n-    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr](CNode* pnode) {\n-        if (pnode->RelayAddrsWithConn() && pnode != &originator && pnode->IsAddrCompatible(addr)) {\n+    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr, peerman = this](CNode* pnode) {\n+        if (peerman->IsAddrRelayPeer(*pnode) && pnode != &originator && pnode->IsAddrCompatible(addr)) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 71,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "62d0eaa3f7a2106c0418587b6b9172be863f4d5d",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is it possible to avoid this extreme coupling between the net and net_processing layers? Here, net_processing is constructing a callback (`sortfunc`) which it hands to net via `ForEachNodeThen()`. In that callback, net calls into a net_processing function (`IsAddRelayPeer()`), which in turn calls into a function in the net layer (`RelayAddrsWithConn()`). This net_processing -> net -> net_processing -> net layering makes it very difficult to construct a mental model of which component is responsible for what functions, and makes future work to rationalize the interface much more difficult.",
    "created_at": "2021-02-12T14:40:26Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575271596",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575271596"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575271596"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575271596/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 1666,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 1667,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575306552",
    "pull_request_review_id": 589572150,
    "id": 575306552,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTMwNjU1Mg==",
    "diff_hunk": "@@ -1647,8 +1663,8 @@ static void RelayAddress(const CNode& originator,\n     std::array<std::pair<uint64_t, CNode*>,2> best{{{0, nullptr}, {0, nullptr}}};\n     assert(nRelayNodes <= best.size());\n \n-    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr](CNode* pnode) {\n-        if (pnode->RelayAddrsWithConn() && pnode != &originator && pnode->IsAddrCompatible(addr)) {\n+    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr, peerman = this](CNode* pnode) {\n+        if (peerman->IsAddrRelayPeer(*pnode) && pnode != &originator && pnode->IsAddrCompatible(addr)) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 71,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "62d0eaa3f7a2106c0418587b6b9172be863f4d5d",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Haven't looked at the details, but I'd presume that `RelayAddrsWithConn` will be (can be) removed once the addr filter is moved to net processing and initialized only when needed.",
    "created_at": "2021-02-12T15:30:46Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575306552",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575306552"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575306552"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575306552/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 1666,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 1667,
    "side": "RIGHT",
    "in_reply_to_id": 575271596
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575323550",
    "pull_request_review_id": 589594902,
    "id": 575323550,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTMyMzU1MA==",
    "diff_hunk": "@@ -1647,8 +1663,8 @@ static void RelayAddress(const CNode& originator,\n     std::array<std::pair<uint64_t, CNode*>,2> best{{{0, nullptr}, {0, nullptr}}};\n     assert(nRelayNodes <= best.size());\n \n-    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr](CNode* pnode) {\n-        if (pnode->RelayAddrsWithConn() && pnode != &originator && pnode->IsAddrCompatible(addr)) {\n+    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr, peerman = this](CNode* pnode) {\n+        if (peerman->IsAddrRelayPeer(*pnode) && pnode != &originator && pnode->IsAddrCompatible(addr)) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 71,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "62d0eaa3f7a2106c0418587b6b9172be863f4d5d",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yeah I think this will get better once we finish moving things from `net` to `net_processing`.  In this case, I've added a new variable and member function to `net_processing` (which is where I think it should live in the long run) but until the rest of it moves, we're going to have to look in both places for some logic.  (I'm assuming we all agree that the logic around which addresses get relayed to which peers should live in `net_processing`, not `net`.)",
    "created_at": "2021-02-12T15:55:34Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575323550",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575323550"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575323550"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575323550/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 1666,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 1667,
    "side": "RIGHT",
    "in_reply_to_id": 575271596
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575781212",
    "pull_request_review_id": 590030077,
    "id": 575781212,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTc4MTIxMg==",
    "diff_hunk": "@@ -1647,8 +1663,8 @@ static void RelayAddress(const CNode& originator,\n     std::array<std::pair<uint64_t, CNode*>,2> best{{{0, nullptr}, {0, nullptr}}};\n     assert(nRelayNodes <= best.size());\n \n-    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr](CNode* pnode) {\n-        if (pnode->RelayAddrsWithConn() && pnode != &originator && pnode->IsAddrCompatible(addr)) {\n+    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr, peerman = this](CNode* pnode) {\n+        if (peerman->IsAddrRelayPeer(*pnode) && pnode != &originator && pnode->IsAddrCompatible(addr)) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 71,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "62d0eaa3f7a2106c0418587b6b9172be863f4d5d",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't agree with this line of logic. I think it'd be far better to remove complexity first and then implement this cleanly, rather than add on more complexity and hoping to remove it later. Also note that this change is a pessimization: it locks and releases `m_peer_mutex` for every peer (up to 125 times). My understanding is that the `ForEachNode()` helpers exist in part to avoid this kind of repeated locking/unlocking.",
    "created_at": "2021-02-14T09:35:20Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575781212",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575781212"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575781212"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575781212/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 1666,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 1667,
    "side": "RIGHT",
    "in_reply_to_id": 575271596
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575788555",
    "pull_request_review_id": 590034534,
    "id": 575788555,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTc4ODU1NQ==",
    "diff_hunk": "@@ -1647,8 +1663,8 @@ static void RelayAddress(const CNode& originator,\n     std::array<std::pair<uint64_t, CNode*>,2> best{{{0, nullptr}, {0, nullptr}}};\n     assert(nRelayNodes <= best.size());\n \n-    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr](CNode* pnode) {\n-        if (pnode->RelayAddrsWithConn() && pnode != &originator && pnode->IsAddrCompatible(addr)) {\n+    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr, peerman = this](CNode* pnode) {\n+        if (peerman->IsAddrRelayPeer(*pnode) && pnode != &originator && pnode->IsAddrCompatible(addr)) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 71,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "62d0eaa3f7a2106c0418587b6b9172be863f4d5d",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@jnewbery You've been doing the most work on moving things out of `net` -- can you be more specific about what you want to see in this implementation?  I was trying to follow a guideline of \"don't add new things to `net` if they should end up in `net_processing`\", in the hopes of not making that work any harder.  Are you suggesting that I add this to `net` to make this implementation cleaner, or wait for more of your refactoring work to land, or something else?",
    "created_at": "2021-02-14T10:39:04Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575788555",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575788555"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575788555"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575788555/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 1666,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 1667,
    "side": "RIGHT",
    "in_reply_to_id": 575271596
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575794641",
    "pull_request_review_id": 590038497,
    "id": 575794641,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTc5NDY0MQ==",
    "diff_hunk": "@@ -1647,8 +1663,8 @@ static void RelayAddress(const CNode& originator,\n     std::array<std::pair<uint64_t, CNode*>,2> best{{{0, nullptr}, {0, nullptr}}};\n     assert(nRelayNodes <= best.size());\n \n-    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr](CNode* pnode) {\n-        if (pnode->RelayAddrsWithConn() && pnode != &originator && pnode->IsAddrCompatible(addr)) {\n+    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr, peerman = this](CNode* pnode) {\n+        if (peerman->IsAddrRelayPeer(*pnode) && pnode != &originator && pnode->IsAddrCompatible(addr)) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 71,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "62d0eaa3f7a2106c0418587b6b9172be863f4d5d",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> Are you suggesting that I add this to net to make this implementation cleaner, or wait for more of your refactoring work to land, or something else?\r\n\r\nYes, certainly rebasing this on the https://github.com/jnewbery/bitcoin/tree/2020-06-cs-main-split branch from https://github.com/bitcoin/bitcoin/issues/19398 would remove this tight net-net_processing coupling. We all agree that we want addr relay logic to live entirely in net_processing. My point here is that changes we make now should be done in a way that moves in that direction, not in a way that makes it more difficult.",
    "created_at": "2021-02-14T11:32:01Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575794641",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575794641"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575794641"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575794641/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 1666,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 1667,
    "side": "RIGHT",
    "in_reply_to_id": 575271596
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575797614",
    "pull_request_review_id": 590040410,
    "id": 575797614,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTc5NzYxNA==",
    "diff_hunk": "@@ -1647,8 +1663,8 @@ static void RelayAddress(const CNode& originator,\n     std::array<std::pair<uint64_t, CNode*>,2> best{{{0, nullptr}, {0, nullptr}}};\n     assert(nRelayNodes <= best.size());\n \n-    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr](CNode* pnode) {\n-        if (pnode->RelayAddrsWithConn() && pnode != &originator && pnode->IsAddrCompatible(addr)) {\n+    auto sortfunc = [&best, &hasher, nRelayNodes, &originator, &addr, peerman = this](CNode* pnode) {\n+        if (peerman->IsAddrRelayPeer(*pnode) && pnode != &originator && pnode->IsAddrCompatible(addr)) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 71,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "62d0eaa3f7a2106c0418587b6b9172be863f4d5d",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks for being clear about your preference here.  I don't think it's worth gating this work on all those commits landing in master, but if other reviewers prefer to see that work land first, then of course I'll rebase after your commits are merged.\r\n\r\nFor now I've gone ahead and simplified this PR by just putting `m_disable_tx` in `CNode`, which makes things no worse than they are today as far as the separation between `net` and `net_processing` (and indeed it simplifies this PR by not adding the complexity you pointed out here in `RelayAddress`).",
    "created_at": "2021-02-14T11:56:21Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575797614",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575797614"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575797614"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575797614/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 1666,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 1667,
    "side": "RIGHT",
    "in_reply_to_id": 575271596
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575797896",
    "pull_request_review_id": 590040565,
    "id": 575797896,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTc5Nzg5Ng==",
    "diff_hunk": "@@ -260,6 +260,13 @@ extern const char* CFCHECKPT;\n  * @since protocol version 70016 as described by BIP 339.\n  */\n extern const char* WTXIDRELAY;\n+/**\n+ * Indicates that a node will not relay transactions, and (for now) also\n+ * not relay addresses. This can be used by nodes implementing\n+ * block-relay-only connections.\n+ * @since protocol version 70017.",
    "path": "src/protocol.h",
    "position": null,
    "original_position": 8,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "ea3c2e22b480eb946988f276a85a65f0bef50502",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: Could mention the BIP number, now that one was assigned?",
    "created_at": "2021-02-14T11:58:05Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575797896",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575797896"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575797896"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575797896/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 267,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/577048063",
    "pull_request_review_id": 591513987,
    "id": 577048063,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NzA0ODA2Mw==",
    "diff_hunk": "@@ -260,6 +260,13 @@ extern const char* CFCHECKPT;\n  * @since protocol version 70016 as described by BIP 339.\n  */\n extern const char* WTXIDRELAY;\n+/**\n+ * Indicates that a node will not relay transactions, and (for now) also\n+ * not relay addresses. This can be used by nodes implementing\n+ * block-relay-only connections.\n+ * @since protocol version 70017.",
    "path": "src/protocol.h",
    "position": null,
    "original_position": 8,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "ea3c2e22b480eb946988f276a85a65f0bef50502",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2021-02-16T18:34:00Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r577048063",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/577048063"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r577048063"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/577048063/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 267,
    "side": "RIGHT",
    "in_reply_to_id": 575797896
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578088724",
    "pull_request_review_id": 592805594,
    "id": 578088724,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODA4ODcyNA==",
    "diff_hunk": "@@ -506,7 +506,12 @@ class CNode\n         // Don't relay addr messages to peers that we connect to as block-relay-only\n         // peers (to prevent adversaries from inferring these links from addr\n         // traffic).\n-        return m_conn_type != ConnectionType::BLOCK_RELAY;\n+        if (m_conn_type == ConnectionType::BLOCK_RELAY) return false;\n+\n+        // Don't relay addr messages to peers that have sent disabletx, as they are\n+        // likely to be inbound block-relay-only peers.\n+        if (m_disable_tx) return false;",
    "path": "src/net.h",
    "position": 9,
    "original_position": 9,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "f03e93202d0f395152c0e4d35bed782d5459daca",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Moving `RelayAddrsWithConn` to net_processing and making it:\r\n\r\n```c++\r\nstatic inline bool RelayAddrsWithConn(const Node& node, const Peer& peer) {\r\n    return !node.IsBlockOnlyConn() && !peer.m_disable_tx;\r\n}\r\n```\r\n\r\nwould preserve the net/net_processing separation better, I think?",
    "created_at": "2021-02-18T02:44:50Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r578088724",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578088724"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r578088724"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578088724/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 513,
    "original_line": 513,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578440578",
    "pull_request_review_id": 593243250,
    "id": 578440578,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODQ0MDU3OA==",
    "diff_hunk": "@@ -506,7 +506,12 @@ class CNode\n         // Don't relay addr messages to peers that we connect to as block-relay-only\n         // peers (to prevent adversaries from inferring these links from addr\n         // traffic).\n-        return m_conn_type != ConnectionType::BLOCK_RELAY;\n+        if (m_conn_type == ConnectionType::BLOCK_RELAY) return false;\n+\n+        // Don't relay addr messages to peers that have sent disabletx, as they are\n+        // likely to be inbound block-relay-only peers.\n+        if (m_disable_tx) return false;",
    "path": "src/net.h",
    "position": 9,
    "original_position": 9,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "f03e93202d0f395152c0e4d35bed782d5459daca",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think that without a bigger refactoring, John's observation that we call into `ForEachNode` but access data in `net_processing` would still remain.  Given that we have a major refactoring effort underway (and I think #21186 will address this directly, from a quick glance), I'd rather leave efforts to refactor out of this PR -- if the refactors get merged first, I'll update the approach here.",
    "created_at": "2021-02-18T14:02:33Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r578440578",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578440578"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r578440578"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578440578/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 513,
    "original_line": 513,
    "side": "RIGHT",
    "in_reply_to_id": 578088724
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578495634",
    "pull_request_review_id": 593316787,
    "id": 578495634,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODQ5NTYzNA==",
    "diff_hunk": "@@ -506,7 +506,12 @@ class CNode\n         // Don't relay addr messages to peers that we connect to as block-relay-only\n         // peers (to prevent adversaries from inferring these links from addr\n         // traffic).\n-        return m_conn_type != ConnectionType::BLOCK_RELAY;\n+        if (m_conn_type == ConnectionType::BLOCK_RELAY) return false;\n+\n+        // Don't relay addr messages to peers that have sent disabletx, as they are\n+        // likely to be inbound block-relay-only peers.\n+        if (m_disable_tx) return false;",
    "path": "src/net.h",
    "position": 9,
    "original_position": 9,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "f03e93202d0f395152c0e4d35bed782d5459daca",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Suhas is right. I think until we move addr data into net_processing there are only bad and less bad approaches here. Leaving this in net to avoid having to make net_processing function calls in ForEachNode() seems like the less bad option to me (see https://github.com/bitcoin/bitcoin/pull/20726#discussion_r575271596).",
    "created_at": "2021-02-18T15:08:57Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r578495634",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578495634"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r578495634"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578495634/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 513,
    "original_line": 513,
    "side": "RIGHT",
    "in_reply_to_id": 578088724
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581045679",
    "pull_request_review_id": 596346100,
    "id": 581045679,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MTA0NTY3OQ==",
    "diff_hunk": "@@ -3199,7 +3230,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         // Stop processing the transaction early if\n         // 1) We are in blocks only mode and peer has no relay permission\n         // 2) This peer is a block-relay-only peer\n-        if ((m_ignore_incoming_txs && !pfrom.HasPermission(PF_RELAY)) || (pfrom.m_tx_relay == nullptr))\n+        if ((m_ignore_incoming_txs && !pfrom.HasPermission(PF_RELAY)) || (pfrom.m_tx_relay == nullptr) || pfrom.m_disable_tx)",
    "path": "src/net_processing.cpp",
    "position": 74,
    "original_position": 50,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "9d822489c22fe4e3b0b5e736ccaa55755460025a",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should we also severe connections for block-relay-only peers sending us inv(tx) to be consistent with transaction message reception ?\r\n\r\nCurrently the BIP mentions that the following messages shouldn't be relayed between block-relay-only peers : {inv(tx), getdata(tx), getdata(merkleblock), filter*, mempool, tx}. This PR implements disconnections for filter*, mempool, tx but not for the remaining ones. Any rational for such disconnection selection ?",
    "created_at": "2021-02-23T13:45:18Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r581045679",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581045679"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r581045679"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581045679/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3239,
    "original_line": 3233,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581055978",
    "pull_request_review_id": 596346100,
    "id": 581055978,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MTA1NTk3OA==",
    "diff_hunk": "@@ -2842,6 +2848,31 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    // Feature negotiation of disabletx must happen between VERSION and VERACK.\n+    if (msg_type == NetMsgType::DISABLETX) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send a disabletx after VERACK.\n+            LogPrint(BCLog::NET, \"disabletx received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn()) {",
    "path": "src/net_processing.cpp",
    "position": 38,
    "original_position": 25,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "9d822489c22fe4e3b0b5e736ccaa55755460025a",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should this check also includes `IsAddrFetchConn()` ?\r\n\r\nA peer implementing the recommendation around disabling addr-relay won't provide us any addrs, devoiding such connection type on our side from its purpose.\r\n\r\nNote, I don't think it's an issue if you have two peers of this software talking as `m_disable_tx` is only set by the DISABLETX receiver. Our node won't send a DISABLETX for such non-`IsBlockOnlyConn`, such not disable-tx on this link. Extending this check is more a measure encompassing other clients strictly implementing the BIP.",
    "created_at": "2021-02-23T13:58:50Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r581055978",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581055978"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r581055978"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581055978/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2865,
    "original_line": 2859,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581090222",
    "pull_request_review_id": 596346100,
    "id": 581090222,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MTA5MDIyMg==",
    "diff_hunk": "@@ -2842,6 +2848,31 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    // Feature negotiation of disabletx must happen between VERSION and VERACK.\n+    if (msg_type == NetMsgType::DISABLETX) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send a disabletx after VERACK.\n+            LogPrint(BCLog::NET, \"disabletx received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn()) {\n+            // If we picked an outbound for transaction relay and it sends us a\n+            // disabletx, we want to find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a disabletx message if they didn't turn off\n+            // transaction relay in the version message.",
    "path": "src/net_processing.cpp",
    "position": 46,
    "original_position": 33,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "9d822489c22fe4e3b0b5e736ccaa55755460025a",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think this interaction with BIP37 is described in the new BIP. The following case \"If a node sets the transaction relay field in the version message to a peer to true it MUST NOT send a disabletx message\" isn't covered ?\r\n\r\nOr do you consider our software to be more severe than the BIP and another implementation can decide to override BIP 37 tx-relay in version message ? It's maybe what you meaned with \"This proposal is compatible with, but independent of, BIP 37. \"",
    "created_at": "2021-02-23T14:38:53Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r581090222",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581090222"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r581090222"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581090222/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2873,
    "original_line": 2867,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581095051",
    "pull_request_review_id": 596346100,
    "id": 581095051,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MTA5NTA1MQ==",
    "diff_hunk": "@@ -506,7 +506,12 @@ class CNode\n         // Don't relay addr messages to peers that we connect to as block-relay-only\n         // peers (to prevent adversaries from inferring these links from addr\n         // traffic).\n-        return m_conn_type != ConnectionType::BLOCK_RELAY;\n+        if (m_conn_type == ConnectionType::BLOCK_RELAY) return false;\n+\n+        // Don't relay addr messages to peers that have sent disabletx, as they are",
    "path": "src/net.h",
    "position": 7,
    "original_position": 7,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "9d822489c22fe4e3b0b5e736ccaa55755460025a",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should the BIP recommendation around addr-relay updated to scope `GETADDR` ? Behavior should already be compliant on sender-side, we don't send getaddr to block-relay peers.",
    "created_at": "2021-02-23T14:44:30Z",
    "updated_at": "2021-03-09T19:24:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r581095051",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581095051"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r581095051"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581095051/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 511,
    "original_line": 511,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586758008",
    "pull_request_review_id": 603319647,
    "id": 586758008,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4Njc1ODAwOA==",
    "diff_hunk": "@@ -2842,6 +2848,31 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    // Feature negotiation of disabletx must happen between VERSION and VERACK.\n+    if (msg_type == NetMsgType::DISABLETX) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send a disabletx after VERACK.\n+            LogPrint(BCLog::NET, \"disabletx received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn()) {",
    "path": "src/net_processing.cpp",
    "position": 38,
    "original_position": 25,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "9d822489c22fe4e3b0b5e736ccaa55755460025a",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think this is unnecessary for now, for two reasons:\r\n- it will be unusual to get a disabletx from an outbound peer. So given that, it's not clear what their behavior is if they send us a disabletx, and maybe they will respond to a getaddr anyway (which is permitted by the BIP).\r\n\r\n- I think the better behavior is for us to disconnect an addr fetch peer after some timeout if no addr message is received (seems like a bug that we don't do that right now). Once we fix that, then disconnecting early doesn't provide much benefit and just adds unnecessary complexity.",
    "created_at": "2021-03-03T20:32:38Z",
    "updated_at": "2021-03-09T19:35:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r586758008",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586758008"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r586758008"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586758008/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2865,
    "original_line": 2859,
    "side": "RIGHT",
    "in_reply_to_id": 581055978
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586760583",
    "pull_request_review_id": 603319647,
    "id": 586760583,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4Njc2MDU4Mw==",
    "diff_hunk": "@@ -2842,6 +2848,31 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    // Feature negotiation of disabletx must happen between VERSION and VERACK.\n+    if (msg_type == NetMsgType::DISABLETX) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send a disabletx after VERACK.\n+            LogPrint(BCLog::NET, \"disabletx received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn()) {\n+            // If we picked an outbound for transaction relay and it sends us a\n+            // disabletx, we want to find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a disabletx message if they didn't turn off\n+            // transaction relay in the version message.",
    "path": "src/net_processing.cpp",
    "position": 46,
    "original_position": 33,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "9d822489c22fe4e3b0b5e736ccaa55755460025a",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ah, I didn't realize this was confusing, but yes I can make this clearer in the BIP.  The language currently says \r\n\r\n> If a node sets the transaction relay field in the version message to a peer to false, then the disabletx message MAY also be sent in response to a version message from that peer if the peer's protocol version is >= 70017. If sent, the disabletx message MUST be sent prior to sending a verack.\r\n\r\n\r\nMy intention was that if you didn't specify fRelay, or if you set it to true, then you MUST NOT send a disabletx message.\r\n\r\nYes my thinking was that if node software implements BIP 37, then I didn't want this to conflict with BIP37-related logic, so I tried for compatibility.  At the same time, it seemed to me that fRelay may be required by some implementations (BIP60 tried to make it so, though I don't know what other software has implemented) so I figured the simplest thing was just to require software implementing this BIP to also be sending fRelay, and therefore the value being sent should be false.\r\n\r\nIt would also be possible to completely disentangle this from BIP 37 and either ignore the fRelay field or only require it to be false if it's sent at all, but I don't know how much difference that makes.  I think the way I've done it is clear and consistent (well once I fix the language in the BIP to remove the ambiguity you point out!) but other ways would be fine too.",
    "created_at": "2021-03-03T20:36:52Z",
    "updated_at": "2021-03-09T19:35:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r586760583",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586760583"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r586760583"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586760583/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2873,
    "original_line": 2867,
    "side": "RIGHT",
    "in_reply_to_id": 581090222
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590624904",
    "pull_request_review_id": 603319647,
    "id": 590624904,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDYyNDkwNA==",
    "diff_hunk": "@@ -3199,7 +3230,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         // Stop processing the transaction early if\n         // 1) We are in blocks only mode and peer has no relay permission\n         // 2) This peer is a block-relay-only peer\n-        if ((m_ignore_incoming_txs && !pfrom.HasPermission(PF_RELAY)) || (pfrom.m_tx_relay == nullptr))\n+        if ((m_ignore_incoming_txs && !pfrom.HasPermission(PF_RELAY)) || (pfrom.m_tx_relay == nullptr) || pfrom.m_disable_tx)",
    "path": "src/net_processing.cpp",
    "position": 74,
    "original_position": 50,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "9d822489c22fe4e3b0b5e736ccaa55755460025a",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't know that it's worth disconnecting for getdata(merkleblock); it already seems to be the case that by default we permit any peer to send us a getdata(merkleblock) and we ignore it.  As getdata(block) is always permitted, it seems like this is harmless to allow and ignore.\r\n\r\nI'll update the PR to disconnect for inv(tx) and getdata(tx).",
    "created_at": "2021-03-09T18:40:28Z",
    "updated_at": "2021-03-09T19:35:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r590624904",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590624904"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r590624904"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590624904/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3239,
    "original_line": 3233,
    "side": "RIGHT",
    "in_reply_to_id": 581045679
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590627874",
    "pull_request_review_id": 603319647,
    "id": 590627874,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDYyNzg3NA==",
    "diff_hunk": "@@ -506,7 +506,12 @@ class CNode\n         // Don't relay addr messages to peers that we connect to as block-relay-only\n         // peers (to prevent adversaries from inferring these links from addr\n         // traffic).\n-        return m_conn_type != ConnectionType::BLOCK_RELAY;\n+        if (m_conn_type == ConnectionType::BLOCK_RELAY) return false;\n+\n+        // Don't relay addr messages to peers that have sent disabletx, as they are",
    "path": "src/net.h",
    "position": 7,
    "original_position": 7,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "9d822489c22fe4e3b0b5e736ccaa55755460025a",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If the BIP were centered around block-relay-only behavior (as I had originally proposed), then I would think it would make sense to fully specify addr-related behavior, including getaddr.\r\n\r\nHowever as the BIP is scoped more narrowly to just define disabletx, I think it's better to leave out getaddr.  If a peer sends us a disabletx and a getaddr, I think we ought to just respond to it and assume the peer knows what it's doing.",
    "created_at": "2021-03-09T18:44:54Z",
    "updated_at": "2021-03-09T19:35:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r590627874",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590627874"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r590627874"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590627874/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 511,
    "original_line": 511,
    "side": "RIGHT",
    "in_reply_to_id": 581095051
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590628816",
    "pull_request_review_id": 603319647,
    "id": 590628816,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDYyODgxNg==",
    "diff_hunk": "@@ -2566,6 +2572,18 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    if (msg_type == NetMsgType::BLOCKRELAY) {\n+        if (pfrom.fSuccessfullyConnected) {",
    "path": "src/net_processing.cpp",
    "position": 32,
    "original_position": 18,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "2668c8e239fa4d57e531cda2d9f572c0367bac3d",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "My goal is for software to know at the time of connection what kind of peer it's got, so that we can do inbound peer accounting (and reserve spots for lightweight peers) more easily.  \r\n\r\nWe wait for VERACK before we start communicating with a peer, so we should negotiate this behavior before that VERACK is sent.",
    "created_at": "2021-03-09T18:46:12Z",
    "updated_at": "2021-03-09T19:35:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r590628816",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590628816"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r590628816"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/590628816/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2859,
    "original_line": 2853,
    "side": "RIGHT",
    "in_reply_to_id": 549439194
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594399480",
    "pull_request_review_id": 612277821,
    "id": 594399480,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDM5OTQ4MA==",
    "diff_hunk": "@@ -2842,6 +2848,31 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    // Feature negotiation of disabletx must happen between VERSION and VERACK.\n+    if (msg_type == NetMsgType::DISABLETX) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send a disabletx after VERACK.\n+            LogPrint(BCLog::NET, \"disabletx received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.IsFullOutboundConn()) {\n+            // If we picked an outbound for transaction relay and it sends us a\n+            // disabletx, we want to find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a disabletx message if they didn't turn off\n+            // transaction relay in the version message.",
    "path": "src/net_processing.cpp",
    "position": 46,
    "original_position": 33,
    "commit_id": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "original_commit_id": "9d822489c22fe4e3b0b5e736ccaa55755460025a",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Receiver-side, we can enforce a _consistency_ requirement between `fRelay` and DISABLETX to detect buggy upgraded peers signaling differing relay type preferences.\r\n\r\nSender-side, if we're connected to a non-upgraded peer (`nVersion` < 70017), we should send a `fRelay`, otherwise they can't discover our relay preferences. If we're connected to an upgraded peer, we can ignore setting `fRelay` in our version message and just send a DISABLETX.\r\n\r\nI don't think we have specific considerations to avoid disruption BIP37-related logic, in the sense of upgrading the connection type to full-relay if they signal `fRelay=false`. Doing so would break the purpose of our block-relay-only strategy. Actually, that's what we already do, at VERSION message reception, we ignore `fRelay` if peer doesn't have a `m_tx_relay` struct.\r\n\r\nNetwork-wise,, it'll be safe to deprecate BIP37-related logic on our side (i.e don't bother sending `fRelay` even to non-upgraded peers) only once BIP338 is widely deployed. Otherwise, legacy peers will be automatically disconnected when they're picked up as block-relay-only, thus impoverishing their connection graph (only able to connect as full-relay inbound slots).\r\n\r\nNote, I think the BIP change should waiwe about the omission case, otherwise it make a requirement to implement BIP60 only for the sake of sending a `fRelay=false`, and thus create an interdependency\r\nbetween both standards ?",
    "created_at": "2021-03-15T14:45:42Z",
    "updated_at": "2021-03-15T14:45:42Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r594399480",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594399480"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20726#discussion_r594399480"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594399480/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2873,
    "original_line": 2867,
    "side": "RIGHT",
    "in_reply_to_id": 581090222
  }
]