[
  {
    "sha": "961e044b34e5b71d6d81c2d693cc92e3dabc54e3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NjFlMDQ0YjM0ZTViNzFkNmQ4MWMyZDY5M2NjOTJlM2RhYmM1NGUz",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-09-02T13:57:03Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2021-02-18T13:20:10Z"
      },
      "message": "Add \"disabletx\" feature negotiation message support\n\nWhen we pick an outbound peer to be a block-relay-only peer, try to let the\npeer know via the \"disabletx\" network message that we will not relay\ntransactions, so that the peer can allocate resources effectively and avoid\nsending us addr messages.\n\nNote: in this commit we just ignore the disabletx command when received.",
      "tree": {
        "sha": "0ae3d9358bb668cdcba8a5dcbadc1485b53cbe05",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0ae3d9358bb668cdcba8a5dcbadc1485b53cbe05"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/961e044b34e5b71d6d81c2d693cc92e3dabc54e3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/961e044b34e5b71d6d81c2d693cc92e3dabc54e3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/961e044b34e5b71d6d81c2d693cc92e3dabc54e3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/961e044b34e5b71d6d81c2d693cc92e3dabc54e3/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "860f9168034f0f43e419e5a01024d87236677be6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/860f9168034f0f43e419e5a01024d87236677be6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/860f9168034f0f43e419e5a01024d87236677be6"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 32,
      "deletions": 1
    },
    "files": [
      {
        "sha": "ba4267c78ee2b7cf1966d5b1d9c29f0143ec60c5",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/961e044b34e5b71d6d81c2d693cc92e3dabc54e3/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/961e044b34e5b71d6d81c2d693cc92e3dabc54e3/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=961e044b34e5b71d6d81c2d693cc92e3dabc54e3",
        "patch": "@@ -2618,6 +2618,12 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             m_connman.PushMessage(&pfrom, msg_maker.Make(NetMsgType::SENDADDRV2));\n         }\n \n+        if (nVersion >= DISABLE_TX_VERSION && pfrom.IsBlockOnlyConn()) {\n+            // If this peer supports DISABLETX feature negotiation, and we\n+            // picked this to be a block-relay-only peer, let the peer know.\n+            m_connman.PushMessage(&pfrom, msg_maker.Make(NetMsgType::DISABLETX));\n+        }\n+\n         m_connman.PushMessage(&pfrom, msg_maker.Make(NetMsgType::VERACK));\n \n         pfrom.nServices = nServices;\n@@ -2842,6 +2848,18 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    if (msg_type == NetMsgType::DISABLETX) {\n+        if (pfrom.fSuccessfullyConnected) {\n+            // Disconnect peers that send a disabletx after VERACK.\n+            LogPrint(BCLog::NET, \"disabletx received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        // ignore this for now - later we can downgrade the resources allocated\n+        // to this peer.\n+        return;\n+    }\n+\n     if (!pfrom.fSuccessfullyConnected) {\n         LogPrint(BCLog::NET, \"Unsupported message \\\"%s\\\" prior to verack from peer=%d\\n\", SanitizeString(msg_type), pfrom.GetId());\n         return;"
      },
      {
        "sha": "f27db357c2680ac7c2af9cf3b202c640e29c7ba8",
        "filename": "src/protocol.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/961e044b34e5b71d6d81c2d693cc92e3dabc54e3/src/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/961e044b34e5b71d6d81c2d693cc92e3dabc54e3/src/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.cpp?ref=961e044b34e5b71d6d81c2d693cc92e3dabc54e3",
        "patch": "@@ -44,6 +44,7 @@ const char *CFHEADERS=\"cfheaders\";\n const char *GETCFCHECKPT=\"getcfcheckpt\";\n const char *CFCHECKPT=\"cfcheckpt\";\n const char *WTXIDRELAY=\"wtxidrelay\";\n+const char *DISABLETX=\"disabletx\";\n } // namespace NetMsgType\n \n /** All known message types. Keep this in the same order as the list of\n@@ -84,6 +85,7 @@ const static std::string allNetMessageTypes[] = {\n     NetMsgType::GETCFCHECKPT,\n     NetMsgType::CFCHECKPT,\n     NetMsgType::WTXIDRELAY,\n+    NetMsgType::DISABLETX,\n };\n const static std::vector<std::string> allNetMessageTypesVec(std::begin(allNetMessageTypes), std::end(allNetMessageTypes));\n "
      },
      {
        "sha": "145d72bbb024f6717f7b59deffe787c4cdf9cc17",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/961e044b34e5b71d6d81c2d693cc92e3dabc54e3/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/961e044b34e5b71d6d81c2d693cc92e3dabc54e3/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=961e044b34e5b71d6d81c2d693cc92e3dabc54e3",
        "patch": "@@ -260,6 +260,13 @@ extern const char* CFCHECKPT;\n  * @since protocol version 70016 as described by BIP 339.\n  */\n extern const char* WTXIDRELAY;\n+/**\n+ * Indicates that a node will not relay transactions, and (for now) also\n+ * not relay addresses. This can be used by nodes implementing\n+ * block-relay-only connections.\n+ * @since protocol version 70017.\n+ */\n+extern const char* DISABLETX;\n }; // namespace NetMsgType\n \n /* Get a vector of all valid message types (see above) */"
      },
      {
        "sha": "3d81845d493c3d694c1adb936bb6e1d91645bb35",
        "filename": "src/test/fuzz/process_message.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/961e044b34e5b71d6d81c2d693cc92e3dabc54e3/src/test/fuzz/process_message.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/961e044b34e5b71d6d81c2d693cc92e3dabc54e3/src/test/fuzz/process_message.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/process_message.cpp?ref=961e044b34e5b71d6d81c2d693cc92e3dabc54e3",
        "patch": "@@ -113,6 +113,7 @@ FUZZ_TARGET_MSG(cfcheckpt);\n FUZZ_TARGET_MSG(cfheaders);\n FUZZ_TARGET_MSG(cfilter);\n FUZZ_TARGET_MSG(cmpctblock);\n+FUZZ_TARGET_MSG(disabletx);\n FUZZ_TARGET_MSG(feefilter);\n FUZZ_TARGET_MSG(filteradd);\n FUZZ_TARGET_MSG(filterclear);"
      },
      {
        "sha": "1a211b70ca7502e7afd642e0acc306a4e53a9eeb",
        "filename": "src/version.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/961e044b34e5b71d6d81c2d693cc92e3dabc54e3/src/version.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/961e044b34e5b71d6d81c2d693cc92e3dabc54e3/src/version.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/version.h?ref=961e044b34e5b71d6d81c2d693cc92e3dabc54e3",
        "patch": "@@ -9,7 +9,7 @@\n  * network protocol versioning\n  */\n \n-static const int PROTOCOL_VERSION = 70016;\n+static constexpr int PROTOCOL_VERSION = 70017;\n \n //! initial proto version, to be increased after version/verack negotiation\n static const int INIT_PROTO_VERSION = 209;\n@@ -38,6 +38,9 @@ static const int INVALID_CB_NO_BAN_VERSION = 70015;\n //! \"wtxidrelay\" command for wtxid-based relay starts with this version\n static const int WTXID_RELAY_VERSION = 70016;\n \n+//! \"disabletx\" message (eg used for block-relay-only connections) starts with this version\n+static constexpr int DISABLE_TX_VERSION = 70017;\n+\n // Make sure that none of the values above collide with\n // `SERIALIZE_TRANSACTION_NO_WITNESS` or `ADDRV2_FORMAT`.\n "
      }
    ]
  },
  {
    "sha": "d2e954b34bff0fa1ecfa19fa028a6edfcb1cb5f4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMmU5NTRiMzRiZmYwZmExZWNmYTE5ZmEwMjhhNmVkZmNiMWNiNWY0",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-12-19T19:58:22Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2021-02-18T13:20:10Z"
      },
      "message": "Add restrictions on peers that send us disabletx\n\nOutbound full-relay peers that send us this get disconnected.\n\nOnce a peer has sent a disabletx, disallow BIP37 messages from the peer\n(filterload/filteradd/filterclear) and mempool message.\n\nAlso stop relaying addresses with such a peer.",
      "tree": {
        "sha": "529bf8b8266a5c6a46f4fc842be8740fc4624a33",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/529bf8b8266a5c6a46f4fc842be8740fc4624a33"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2e954b34bff0fa1ecfa19fa028a6edfcb1cb5f4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2e954b34bff0fa1ecfa19fa028a6edfcb1cb5f4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d2e954b34bff0fa1ecfa19fa028a6edfcb1cb5f4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2e954b34bff0fa1ecfa19fa028a6edfcb1cb5f4/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "961e044b34e5b71d6d81c2d693cc92e3dabc54e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/961e044b34e5b71d6d81c2d693cc92e3dabc54e3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/961e044b34e5b71d6d81c2d693cc92e3dabc54e3"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 34,
      "deletions": 7
    },
    "files": [
      {
        "sha": "5f2c4002f4bfac5f9fde49e0059c4e2bbe8597da",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2e954b34bff0fa1ecfa19fa028a6edfcb1cb5f4/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2e954b34bff0fa1ecfa19fa028a6edfcb1cb5f4/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=d2e954b34bff0fa1ecfa19fa028a6edfcb1cb5f4",
        "patch": "@@ -506,7 +506,12 @@ class CNode\n         // Don't relay addr messages to peers that we connect to as block-relay-only\n         // peers (to prevent adversaries from inferring these links from addr\n         // traffic).\n-        return m_conn_type != ConnectionType::BLOCK_RELAY;\n+        if (m_conn_type == ConnectionType::BLOCK_RELAY) return false;\n+\n+        // Don't relay addr messages to peers that have sent disabletx, as they are\n+        // likely to be inbound block-relay-only peers.\n+        if (m_disable_tx) return false;\n+        return true;\n     }\n \n     bool ExpectServicesFromConn() const {\n@@ -548,6 +553,9 @@ class CNode\n     std::chrono::microseconds m_next_addr_send GUARDED_BY(cs_sendProcessing){0};\n     std::chrono::microseconds m_next_local_addr_send GUARDED_BY(cs_sendProcessing){0};\n \n+    /** Whether a peer has sent us a disabletx message */\n+    std::atomic<bool> m_disable_tx{false};\n+\n     struct TxRelay {\n         mutable RecursiveMutex cs_filter;\n         // We use fRelayTxes for two purposes -"
      },
      {
        "sha": "f6080c9571bfc6db3630d8dfb1bc202dc80a4764",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 6,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2e954b34bff0fa1ecfa19fa028a6edfcb1cb5f4/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2e954b34bff0fa1ecfa19fa028a6edfcb1cb5f4/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=d2e954b34bff0fa1ecfa19fa028a6edfcb1cb5f4",
        "patch": "@@ -2848,15 +2848,28 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    // Feature negotiation of disabletx must happen between VERSION and VERACK.\n     if (msg_type == NetMsgType::DISABLETX) {\n         if (pfrom.fSuccessfullyConnected) {\n             // Disconnect peers that send a disabletx after VERACK.\n             LogPrint(BCLog::NET, \"disabletx received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n-        // ignore this for now - later we can downgrade the resources allocated\n-        // to this peer.\n+        if (pfrom.IsFullOutboundConn()) {\n+            // If we picked an outbound for transaction relay and it sends us a\n+            // disabletx, we want to find another peer.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+        if (pfrom.m_tx_relay != nullptr && WITH_LOCK(pfrom.m_tx_relay->cs_filter, return pfrom.m_tx_relay->fRelayTxes)) {\n+            // Can't send a disabletx message if they didn't turn off\n+            // transaction relay in the version message.\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+\n+        pfrom.m_disable_tx = true;\n         return;\n     }\n \n@@ -3217,7 +3230,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         // Stop processing the transaction early if\n         // 1) We are in blocks only mode and peer has no relay permission\n         // 2) This peer is a block-relay-only peer\n-        if ((m_ignore_incoming_txs && !pfrom.HasPermission(PF_RELAY)) || (pfrom.m_tx_relay == nullptr))\n+        if ((m_ignore_incoming_txs && !pfrom.HasPermission(PF_RELAY)) || (pfrom.m_tx_relay == nullptr) || pfrom.m_disable_tx)\n         {\n             LogPrint(BCLog::NET, \"transaction sent in violation of protocol peer=%d\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n@@ -3847,6 +3860,11 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             }\n             return;\n         }\n+        if (pfrom.m_disable_tx) {\n+            LogPrint(BCLog::NET, \"mempool request after disabletx received; disconnect peer=%d\\n\", pfrom.GetId());\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n \n         if (pfrom.m_tx_relay != nullptr) {\n             LOCK(pfrom.m_tx_relay->cs_tx_inventory);\n@@ -3931,11 +3949,12 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n     }\n \n     if (msg_type == NetMsgType::FILTERLOAD) {\n-        if (!(pfrom.GetLocalServices() & NODE_BLOOM)) {\n+        if (!(pfrom.GetLocalServices() & NODE_BLOOM) || pfrom.m_disable_tx) {\n             LogPrint(BCLog::NET, \"filterload received despite not offering bloom services from peer=%d; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n+\n         CBloomFilter filter;\n         vRecv >> filter;\n \n@@ -3954,7 +3973,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n     }\n \n     if (msg_type == NetMsgType::FILTERADD) {\n-        if (!(pfrom.GetLocalServices() & NODE_BLOOM)) {\n+        if (!(pfrom.GetLocalServices() & NODE_BLOOM) || pfrom.m_disable_tx) {\n             LogPrint(BCLog::NET, \"filteradd received despite not offering bloom services from peer=%d; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n@@ -3982,7 +4001,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n     }\n \n     if (msg_type == NetMsgType::FILTERCLEAR) {\n-        if (!(pfrom.GetLocalServices() & NODE_BLOOM)) {\n+        if (!(pfrom.GetLocalServices() & NODE_BLOOM) || pfrom.m_disable_tx) {\n             LogPrint(BCLog::NET, \"filterclear received despite not offering bloom services from peer=%d; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;"
      }
    ]
  },
  {
    "sha": "e8632d5721d6a9901b0235c832577e236d74d421",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplODYzMmQ1NzIxZDZhOTkwMWIwMjM1YzgzMjU3N2UyMzZkNzRkNDIx",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-12-19T20:44:36Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2021-02-18T13:43:45Z"
      },
      "message": "Test that inbound peers that send disabletx don't get addrs",
      "tree": {
        "sha": "420d82a541137e2e023f4fe2af92a1b94cfd1a22",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/420d82a541137e2e023f4fe2af92a1b94cfd1a22"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e8632d5721d6a9901b0235c832577e236d74d421",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8632d5721d6a9901b0235c832577e236d74d421",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e8632d5721d6a9901b0235c832577e236d74d421",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8632d5721d6a9901b0235c832577e236d74d421/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d2e954b34bff0fa1ecfa19fa028a6edfcb1cb5f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2e954b34bff0fa1ecfa19fa028a6edfcb1cb5f4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d2e954b34bff0fa1ecfa19fa028a6edfcb1cb5f4"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 32,
      "deletions": 3
    },
    "files": [
      {
        "sha": "c62c3e5a389b75cbad061f034bc94ce11b535e51",
        "filename": "test/functional/p2p_addr_relay.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8632d5721d6a9901b0235c832577e236d74d421/test/functional/p2p_addr_relay.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8632d5721d6a9901b0235c832577e236d74d421/test/functional/p2p_addr_relay.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_addr_relay.py?ref=e8632d5721d6a9901b0235c832577e236d74d421",
        "patch": "@@ -63,6 +63,8 @@ def run_test(self):\n         receivers = []\n         for _ in range(num_receivers):\n             receivers.append(self.nodes[0].add_p2p_connection(AddrReceiver()))\n+        # add one more receiver that is a block-relay-only peer\n+        block_relay_peer = self.nodes[0].add_p2p_connection(AddrReceiver(disabletx=True))\n         msg.addrs = ADDRS\n         with self.nodes[0].assert_debug_log(\n             [\n@@ -81,6 +83,7 @@ def run_test(self):\n         # originating node (addr_source).\n         ipv4_branching_factor = 2\n         assert_equal(total_ipv4_received, num_ipv4_addrs * ipv4_branching_factor)\n+        assert_equal(block_relay_peer.num_ipv4_received, 0)\n \n \n if __name__ == '__main__':"
      },
      {
        "sha": "88d0dc62ab25dec8db14436bf119a9e3ab80e62b",
        "filename": "test/functional/test_framework/messages.py",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8632d5721d6a9901b0235c832577e236d74d421/test/functional/test_framework/messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8632d5721d6a9901b0235c832577e236d74d421/test/functional/test_framework/messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/messages.py?ref=e8632d5721d6a9901b0235c832577e236d74d421",
        "patch": "@@ -1235,6 +1235,22 @@ def serialize(self):\n     def __repr__(self):\n         return \"msg_wtxidrelay()\"\n \n+class msg_disabletx:\n+    __slots__ = ()\n+    msgtype = b\"disabletx\"\n+\n+    def __init__(self):\n+        pass\n+\n+    def deserialize(self, f):\n+        pass\n+\n+    def serialize(self):\n+        return b\"\"\n+\n+    def __repr__(self):\n+        return \"msg_disabletx()\"\n+\n \n class msg_no_witness_tx(msg_tx):\n     __slots__ = ()"
      },
      {
        "sha": "fbf1ff4e32cd21262c449602da691f89401853e2",
        "filename": "test/functional/test_framework/p2p.py",
        "status": "modified",
        "additions": 13,
        "deletions": 3,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8632d5721d6a9901b0235c832577e236d74d421/test/functional/test_framework/p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8632d5721d6a9901b0235c832577e236d74d421/test/functional/test_framework/p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/p2p.py?ref=e8632d5721d6a9901b0235c832577e236d74d421",
        "patch": "@@ -35,6 +35,7 @@\n     msg_addrv2,\n     msg_block,\n     MSG_BLOCK,\n+    msg_disabletx,\n     msg_blocktxn,\n     msg_cfcheckpt,\n     msg_cfheaders,\n@@ -81,8 +82,8 @@\n # The minimum P2P version that this test framework supports\n MIN_P2P_VERSION_SUPPORTED = 60001\n # The P2P version that this test framework implements and sends in its `version` message\n-# Version 70016 supports wtxid relay\n-P2P_VERSION = 70016\n+# Version 70017 supports disabletx\n+P2P_VERSION = 70017\n # The services that this test framework offers in its `version` message\n P2P_SERVICES = NODE_NETWORK | NODE_WITNESS\n # The P2P user agent string that this test framework sends in its `version` message\n@@ -94,6 +95,7 @@\n     b\"addr\": msg_addr,\n     b\"addrv2\": msg_addrv2,\n     b\"block\": msg_block,\n+    b\"disabletx\": msg_disabletx,\n     b\"blocktxn\": msg_blocktxn,\n     b\"cfcheckpt\": msg_cfcheckpt,\n     b\"cfheaders\": msg_cfheaders,\n@@ -312,7 +314,7 @@ class P2PInterface(P2PConnection):\n \n     Individual testcases should subclass this and override the on_* methods\n     if they want to alter message handling behaviour.\"\"\"\n-    def __init__(self, support_addrv2=False, wtxidrelay=True):\n+    def __init__(self, support_addrv2=False, wtxidrelay=True, disabletx=False):\n         super().__init__()\n \n         # Track number of messages of each type received.\n@@ -335,6 +337,9 @@ def __init__(self, support_addrv2=False, wtxidrelay=True):\n         # If the peer supports wtxid-relay\n         self.wtxidrelay = wtxidrelay\n \n+        # If the peer supports block-relay\n+        self.disabletx = disabletx\n+\n     def peer_connect_send_version(self, services):\n         # Send a version msg\n         vt = msg_version()\n@@ -346,6 +351,8 @@ def peer_connect_send_version(self, services):\n         vt.addrTo.port = self.dstport\n         vt.addrFrom.ip = \"0.0.0.0\"\n         vt.addrFrom.port = 0\n+        if (self.disabletx):\n+            vt.relay = 0\n         self.on_connection_send_msg = vt  # Will be sent in connection_made callback\n \n     def peer_connect(self, *args, services=P2P_SERVICES, send_version=True, **kwargs):\n@@ -391,6 +398,7 @@ def on_close(self):\n     def on_addr(self, message): pass\n     def on_addrv2(self, message): pass\n     def on_block(self, message): pass\n+    def on_disabletx(self, message): pass\n     def on_blocktxn(self, message): pass\n     def on_cfcheckpt(self, message): pass\n     def on_cfheaders(self, message): pass\n@@ -436,6 +444,8 @@ def on_version(self, message):\n             self.send_message(msg_wtxidrelay())\n         if self.support_addrv2:\n             self.send_message(msg_sendaddrv2())\n+        if self.disabletx and message.nVersion >= 70017:\n+            self.send_message(msg_disabletx())\n         self.send_message(msg_verack())\n         self.nServices = message.nServices\n "
      }
    ]
  },
  {
    "sha": "8ee7ea997a91d945fb49dc7fe1f31eb6ee7af43b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZWU3ZWE5OTdhOTFkOTQ1ZmI0OWRjN2ZlMWYzMWViNmVlN2FmNDNi",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-02-05T22:40:36Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2021-02-18T13:45:35Z"
      },
      "message": "Test that inbound addrv2 peers that send disabletx don't get addrs",
      "tree": {
        "sha": "4bb510710080b3cea39d6ff4b1bd7236b16a2c7a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4bb510710080b3cea39d6ff4b1bd7236b16a2c7a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8ee7ea997a91d945fb49dc7fe1f31eb6ee7af43b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ee7ea997a91d945fb49dc7fe1f31eb6ee7af43b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8ee7ea997a91d945fb49dc7fe1f31eb6ee7af43b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ee7ea997a91d945fb49dc7fe1f31eb6ee7af43b/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e8632d5721d6a9901b0235c832577e236d74d421",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8632d5721d6a9901b0235c832577e236d74d421",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e8632d5721d6a9901b0235c832577e236d74d421"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 8,
      "deletions": 7
    },
    "files": [
      {
        "sha": "7669118517775978644da91193a90b591d734ea1",
        "filename": "test/functional/p2p_addrv2_relay.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8ee7ea997a91d945fb49dc7fe1f31eb6ee7af43b/test/functional/p2p_addrv2_relay.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8ee7ea997a91d945fb49dc7fe1f31eb6ee7af43b/test/functional/p2p_addrv2_relay.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_addrv2_relay.py?ref=8ee7ea997a91d945fb49dc7fe1f31eb6ee7af43b",
        "patch": "@@ -31,9 +31,6 @@\n class AddrReceiver(P2PInterface):\n     addrv2_received_and_checked = False\n \n-    def __init__(self):\n-        super().__init__(support_addrv2 = True)\n-\n     def on_addrv2(self, message):\n         for addr in message.addrs:\n             assert_equal(addr.nServices, 9)\n@@ -61,7 +58,9 @@ def run_test(self):\n             addr_source.send_and_ping(msg)\n \n         self.log.info('Check that addrv2 message content is relayed and added to addrman')\n-        addr_receiver = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        addr_receiver = self.nodes[0].add_p2p_connection(AddrReceiver(support_addrv2=True))\n+        # Add an additional receiver that is an inbound-block-relay (disabletx) peer.\n+        block_relay_peer = self.nodes[0].add_p2p_connection(AddrReceiver(support_addrv2=True, disabletx=True))\n         msg.addrs = ADDRS\n         with self.nodes[0].assert_debug_log([\n                 'Added 10 addresses from 127.0.0.1: 0 tried',\n@@ -73,6 +72,7 @@ def run_test(self):\n             addr_receiver.wait_for_addrv2()\n \n         assert addr_receiver.addrv2_received_and_checked\n+        assert_equal(block_relay_peer.addrv2_received_and_checked, 0)\n \n \n if __name__ == '__main__':"
      },
      {
        "sha": "d07e2e25368fa2292f8456a36595f9cc212839ed",
        "filename": "test/functional/test_framework/p2p.py",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8ee7ea997a91d945fb49dc7fe1f31eb6ee7af43b/test/functional/test_framework/p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8ee7ea997a91d945fb49dc7fe1f31eb6ee7af43b/test/functional/test_framework/p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/p2p.py?ref=8ee7ea997a91d945fb49dc7fe1f31eb6ee7af43b",
        "patch": "@@ -35,12 +35,12 @@\n     msg_addrv2,\n     msg_block,\n     MSG_BLOCK,\n-    msg_disabletx,\n     msg_blocktxn,\n     msg_cfcheckpt,\n     msg_cfheaders,\n     msg_cfilter,\n     msg_cmpctblock,\n+    msg_disabletx,\n     msg_feefilter,\n     msg_filteradd,\n     msg_filterclear,\n@@ -95,12 +95,12 @@\n     b\"addr\": msg_addr,\n     b\"addrv2\": msg_addrv2,\n     b\"block\": msg_block,\n-    b\"disabletx\": msg_disabletx,\n     b\"blocktxn\": msg_blocktxn,\n     b\"cfcheckpt\": msg_cfcheckpt,\n     b\"cfheaders\": msg_cfheaders,\n     b\"cfilter\": msg_cfilter,\n     b\"cmpctblock\": msg_cmpctblock,\n+    b\"disabletx\": msg_disabletx,\n     b\"feefilter\": msg_feefilter,\n     b\"filteradd\": msg_filteradd,\n     b\"filterclear\": msg_filterclear,\n@@ -332,6 +332,7 @@ def __init__(self, support_addrv2=False, wtxidrelay=True, disabletx=False):\n         # The network services received from the peer\n         self.nServices = 0\n \n+        # If the peer supports addrv2\n         self.support_addrv2 = support_addrv2\n \n         # If the peer supports wtxid-relay\n@@ -351,7 +352,7 @@ def peer_connect_send_version(self, services):\n         vt.addrTo.port = self.dstport\n         vt.addrFrom.ip = \"0.0.0.0\"\n         vt.addrFrom.port = 0\n-        if (self.disabletx):\n+        if self.disabletx:\n             vt.relay = 0\n         self.on_connection_send_msg = vt  # Will be sent in connection_made callback\n "
      }
    ]
  },
  {
    "sha": "9d822489c22fe4e3b0b5e736ccaa55755460025a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZDgyMjQ4OWMyMmZlNGUzYjBiNWU3MzZjY2FhNTU3NTU0NjAwMjVh",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2021-02-16T18:32:21Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2021-02-18T13:45:36Z"
      },
      "message": "doc: protocol version 70017 is described in BIP 338",
      "tree": {
        "sha": "83fa660beaa3c3f32e304b73325b852e0d8913a6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/83fa660beaa3c3f32e304b73325b852e0d8913a6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d822489c22fe4e3b0b5e736ccaa55755460025a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d822489c22fe4e3b0b5e736ccaa55755460025a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9d822489c22fe4e3b0b5e736ccaa55755460025a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d822489c22fe4e3b0b5e736ccaa55755460025a/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8ee7ea997a91d945fb49dc7fe1f31eb6ee7af43b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ee7ea997a91d945fb49dc7fe1f31eb6ee7af43b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8ee7ea997a91d945fb49dc7fe1f31eb6ee7af43b"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "8aaf6005243126d0df983b2f53553ed435fbc4ff",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d822489c22fe4e3b0b5e736ccaa55755460025a/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d822489c22fe4e3b0b5e736ccaa55755460025a/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=9d822489c22fe4e3b0b5e736ccaa55755460025a",
        "patch": "@@ -264,7 +264,7 @@ extern const char* WTXIDRELAY;\n  * Indicates that a node will not relay transactions, and (for now) also\n  * not relay addresses. This can be used by nodes implementing\n  * block-relay-only connections.\n- * @since protocol version 70017.\n+ * @since protocol version 70017 as described by BIP 338.\n  */\n extern const char* DISABLETX;\n }; // namespace NetMsgType"
      }
    ]
  },
  {
    "sha": "a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphN2RhZmIyZjAxMmQ5ZjMzNzBkY2Y2YTdlNGQxYWJkODY1ZGNkYjAw",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2021-03-09T19:06:41Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2021-03-09T19:23:40Z"
      },
      "message": "fixup! Add restrictions on peers that send us disabletx",
      "tree": {
        "sha": "ae0e0aa1c71a3dfeaa602cd8b99608c5cda7fe32",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ae0e0aa1c71a3dfeaa602cd8b99608c5cda7fe32"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9d822489c22fe4e3b0b5e736ccaa55755460025a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d822489c22fe4e3b0b5e736ccaa55755460025a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9d822489c22fe4e3b0b5e736ccaa55755460025a"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 12,
      "deletions": 2
    },
    "files": [
      {
        "sha": "abcb04f77d4936a2b40f5e2c81aea3eb144fc4aa",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 2,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=a7dafb2f012d9f3370dcf6a7e4d1abd865dcdb00",
        "patch": "@@ -1935,6 +1935,12 @@ void PeerManagerImpl::ProcessGetData(CNode& pfrom, Peer& peer, const std::atomic\n \n         const CInv &inv = *it++;\n \n+        if (pfrom.m_disable_tx) {\n+            LogPrint(BCLog::NET, \"transaction getdata (%s) sent in violation of protocol, disconnecting peer=%d\\n\", inv.hash.ToString(), pfrom.GetId());\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+\n         if (pfrom.m_tx_relay == nullptr) {\n             // Ignore GETDATA requests for transactions from blocks-only peers.\n             continue;\n@@ -2953,8 +2959,8 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         // We won't accept tx inv's if we're in blocks-only mode, or this is a\n-        // block-relay-only peer\n-        bool fBlocksOnly = m_ignore_incoming_txs || (pfrom.m_tx_relay == nullptr);\n+        // block-relay-only/disabletx peer\n+        bool fBlocksOnly = m_ignore_incoming_txs || (pfrom.m_tx_relay == nullptr) || pfrom.m_disable_tx;\n \n         // Allow peers with relay permission to send data other than blocks in blocks only mode\n         if (pfrom.HasPermission(PF_RELAY)) {\n@@ -4049,6 +4055,10 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             LOCK(::cs_main);\n             for (CInv &inv : vInv) {\n                 if (inv.IsGenTxMsg()) {\n+                    if (pfrom.m_disable_tx) {\n+                        LogPrint(BCLog::NET, \"transaction notfound received in violation of protocol, disconnecting peer=%d\\n\", pfrom.GetId());\n+                        pfrom.fDisconnect = true;\n+                    }\n                     // If we receive a NOTFOUND message for a tx we requested, mark the announcement for it as\n                     // completed in TxRequestTracker.\n                     m_txrequest.ReceivedResponse(pfrom.GetId(), inv.hash);"
      }
    ]
  }
]