[
  {
    "sha": "ba98de0b129bf510a52e3a65bece11ff492ec8d7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYTk4ZGUwYjEyOWJmNTEwYTUyZTNhNjViZWNlMTFmZjQ5MmVjOGQ3",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-01-12T21:18:15Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-01-12T21:18:15Z"
      },
      "message": "Wallet: Refactor ReserveKeyFromKeyPool for safety\n\nReserveKeyFromKeyPool's previous behaviour is to set nIndex to -1 if the keypool is empty, OR throw an exception for technical failures.\nInstead, we now return nIndex (always >= 0) and throw a keypool_empty exception if the keypool is empty.\n\nThis is to ensure calling code must handle the empty case, and so the compiler can provide use-without-assignment warnings when appropriate.",
      "tree": {
        "sha": "29bbe897e9a6d97ae0ed87fefa8959052bf1558a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/29bbe897e9a6d97ae0ed87fefa8959052bf1558a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ba98de0b129bf510a52e3a65bece11ff492ec8d7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba98de0b129bf510a52e3a65bece11ff492ec8d7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ba98de0b129bf510a52e3a65bece11ff492ec8d7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba98de0b129bf510a52e3a65bece11ff492ec8d7/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "02e5308c1b9f3771bbe49bc5036215fa2bd66aa9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02e5308c1b9f3771bbe49bc5036215fa2bd66aa9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/02e5308c1b9f3771bbe49bc5036215fa2bd66aa9"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 17,
      "deletions": 12
    },
    "files": [
      {
        "sha": "8cb8a0bc6a18a9badb8c49c1dd334dde41b4b4a6",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 11,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba98de0b129bf510a52e3a65bece11ff492ec8d7/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba98de0b129bf510a52e3a65bece11ff492ec8d7/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=ba98de0b129bf510a52e3a65bece11ff492ec8d7",
        "patch": "@@ -2913,9 +2913,9 @@ bool CWallet::TopUpKeyPool(unsigned int kpSize)\n     return true;\n }\n \n-void CWallet::ReserveKeyFromKeyPool(int64_t& nIndex, CKeyPool& keypool)\n+int64_t CWallet::ReserveKeyFromKeyPool(CKeyPool& keypool)\n {\n-    nIndex = -1;\n+    int64_t nIndex;\n     keypool.vchPubKey = CPubKey();\n     {\n         LOCK(cs_wallet);\n@@ -2925,7 +2925,7 @@ void CWallet::ReserveKeyFromKeyPool(int64_t& nIndex, CKeyPool& keypool)\n \n         // Get the oldest key\n         if(setKeyPool.empty())\n-            return;\n+            throw keypool_empty();\n \n         CWalletDB walletdb(strWalletFile);\n \n@@ -2938,6 +2938,7 @@ void CWallet::ReserveKeyFromKeyPool(int64_t& nIndex, CKeyPool& keypool)\n         assert(keypool.vchPubKey.IsValid());\n         LogPrintf(\"keypool reserve %d\\n\", nIndex);\n     }\n+    return nIndex;\n }\n \n void CWallet::KeepKey(int64_t nIndex)\n@@ -2963,13 +2964,13 @@ void CWallet::ReturnKey(int64_t nIndex)\n \n bool CWallet::GetKeyFromPool(CPubKey& result)\n {\n-    int64_t nIndex = 0;\n+    int64_t nIndex;\n     CKeyPool keypool;\n     {\n         LOCK(cs_wallet);\n-        ReserveKeyFromKeyPool(nIndex, keypool);\n-        if (nIndex == -1)\n-        {\n+        try {\n+            nIndex = ReserveKeyFromKeyPool(keypool);\n+        } catch (keypool_empty) {\n             if (IsLocked()) return false;\n             result = GenerateNewKey();\n             return true;\n@@ -3181,12 +3182,12 @@ bool CReserveKey::GetReservedKey(CPubKey& pubkey)\n     if (nIndex == -1)\n     {\n         CKeyPool keypool;\n-        pwallet->ReserveKeyFromKeyPool(nIndex, keypool);\n-        if (nIndex != -1)\n-            vchPubKey = keypool.vchPubKey;\n-        else {\n+        try {\n+            nIndex = pwallet->ReserveKeyFromKeyPool(keypool);\n+        } catch (keypool_empty) {\n             return false;\n         }\n+        vchPubKey = keypool.vchPubKey;\n     }\n     assert(vchPubKey.IsValid());\n     pubkey = vchPubKey;"
      },
      {
        "sha": "d68509e480fbacecdef64b5e1fa115431aba6e02",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba98de0b129bf510a52e3a65bece11ff492ec8d7/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba98de0b129bf510a52e3a65bece11ff492ec8d7/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=ba98de0b129bf510a52e3a65bece11ff492ec8d7",
        "patch": "@@ -92,6 +92,10 @@ enum WalletFeature\n };\n \n \n+class keypool_empty : public std::exception\n+{\n+};\n+\n /** A key pool entry */\n class CKeyPool\n {\n@@ -810,7 +814,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n \n     bool NewKeyPool();\n     bool TopUpKeyPool(unsigned int kpSize = 0);\n-    void ReserveKeyFromKeyPool(int64_t& nIndex, CKeyPool& keypool);\n+    int64_t ReserveKeyFromKeyPool(CKeyPool& keypool);\n     void KeepKey(int64_t nIndex);\n     void ReturnKey(int64_t nIndex);\n     bool GetKeyFromPool(CPubKey &key);"
      }
    ]
  }
]