[
  {
    "sha": "f6bb63339342fbe0084e638070ed5ebb3365505d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNmJiNjMzMzkzNDJmYmUwMDg0ZTYzODA3MGVkNWViYjMzNjU1MDVk",
    "commit": {
      "author": {
        "name": "Emil Engler",
        "email": "me@emilengler.com",
        "date": "2019-12-28T17:01:35Z"
      },
      "committer": {
        "name": "Emil Engler",
        "email": "me@emilengler.com",
        "date": "2019-12-28T17:01:35Z"
      },
      "message": "rpc: Make __cookie__ user immune to rpcwhitelist",
      "tree": {
        "sha": "71679f1232a343bdd60914de1d391fa1209eadb1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/71679f1232a343bdd60914de1d391fa1209eadb1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f6bb63339342fbe0084e638070ed5ebb3365505d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE82XmVEpcmrEyk0LUL21BRcVfx8cFAl4Him8ACgkQL21BRcVf\nx8e83A/+IkfZi1Sr1+paAIzfz2Njlgq2vppVX3EGKiRn237CY83+hSAREQb2A9Hb\nsv5FVdbEQ55FmS8f70QTGQQt2o4elSfepJYbqRxT9FEOeydeyZ2rYk2vrEbsjN1L\nuMQ8qmrVJlcPBguJ/XwVWM3Uc1ARAC1+a88HKIBacPoNDcm4gF3fx2fNPCMKJa92\n2PmBFMjwvjXApj0ZoZPtHptSSbjPL1g2/kYGDPiuXF7ONqsGateonDyEFyniKbsR\n5Zfc8vd54TEmu8pB8y3V++uj6u7/suSp64kMnlr/Im7ICfOdOuHXTshxwtI2GHcZ\nzlelJtpgEy84HxmuW556OCSorDLu1K2q9fhCG1NeWg3nvVkkNr5HCphEMfoOSkIL\nTjK8WqkZLG17ppWpM3WJuEKWmyRNhkUWi5UVGxfbxGDBBazremvO7z+KAcnZpFsd\nWYh/zCu2YSZsN1JPuKA29Z84rW8450ggZLE5HxzadsCzvUeoo6qUHi/xOxwIrZot\nxxOfSxIXLlPe4mnYWy0Qp4mqWpJmH3ze0ur0Z9sVxiFKj8ohA0fTV59yJ4+c+9sA\nj93ZUSiPmx8EP5Rucx4ac15s1S2RVlGAdMeSoE0gDowPo50Ewti3fJJTMrLWxwHq\nOGQmqqbcfJRqnhm73cXHCNQ1BQ66oC0/P+R3LXM7A5ZndVFbehs=\n=4eUj\n-----END PGP SIGNATURE-----",
        "payload": "tree 71679f1232a343bdd60914de1d391fa1209eadb1\nparent 6cb80a068dc198832febe456139bed3ae7a1145c\nauthor Emil Engler <me@emilengler.com> 1577552495 +0100\ncommitter Emil Engler <me@emilengler.com> 1577552495 +0100\n\nrpc: Make __cookie__ user immune to rpcwhitelist\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6bb63339342fbe0084e638070ed5ebb3365505d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f6bb63339342fbe0084e638070ed5ebb3365505d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6bb63339342fbe0084e638070ed5ebb3365505d/comments",
    "author": {
      "login": "emilengler",
      "id": 12272949,
      "node_id": "MDQ6VXNlcjEyMjcyOTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12272949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/emilengler",
      "html_url": "https://github.com/emilengler",
      "followers_url": "https://api.github.com/users/emilengler/followers",
      "following_url": "https://api.github.com/users/emilengler/following{/other_user}",
      "gists_url": "https://api.github.com/users/emilengler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/emilengler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/emilengler/subscriptions",
      "organizations_url": "https://api.github.com/users/emilengler/orgs",
      "repos_url": "https://api.github.com/users/emilengler/repos",
      "events_url": "https://api.github.com/users/emilengler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/emilengler/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "emilengler",
      "id": 12272949,
      "node_id": "MDQ6VXNlcjEyMjcyOTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12272949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/emilengler",
      "html_url": "https://github.com/emilengler",
      "followers_url": "https://api.github.com/users/emilengler/followers",
      "following_url": "https://api.github.com/users/emilengler/following{/other_user}",
      "gists_url": "https://api.github.com/users/emilengler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/emilengler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/emilengler/subscriptions",
      "organizations_url": "https://api.github.com/users/emilengler/orgs",
      "repos_url": "https://api.github.com/users/emilengler/repos",
      "events_url": "https://api.github.com/users/emilengler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/emilengler/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6cb80a068dc198832febe456139bed3ae7a1145c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6cb80a068dc198832febe456139bed3ae7a1145c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6cb80a068dc198832febe456139bed3ae7a1145c"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "ec4453f27afe7038e4f3513c8c00ee5054323263",
        "filename": "src/httprpc.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f6bb63339342fbe0084e638070ed5ebb3365505d/src/httprpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f6bb63339342fbe0084e638070ed5ebb3365505d/src/httprpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httprpc.cpp?ref=f6bb63339342fbe0084e638070ed5ebb3365505d",
        "patch": "@@ -192,15 +192,16 @@ static bool HTTPReq_JSONRPC(HTTPRequest* req, const std::string &)\n \n         std::string strReply;\n         bool user_has_whitelist = g_rpc_whitelist.count(jreq.authUser);\n-        if (!user_has_whitelist && g_rpc_whitelist_default) {\n+        // The __cookie__ user has always full permissions in order to make bitcoin-cli work\n+        if (!user_has_whitelist && g_rpc_whitelist_default && jreq.authUser != \"__cookie__\") {\n             LogPrintf(\"RPC User %s not allowed to call any methods\\n\", jreq.authUser);\n             req->WriteReply(HTTP_FORBIDDEN);\n             return false;\n \n         // singleton request\n         } else if (valRequest.isObject()) {\n             jreq.parse(valRequest);\n-            if (user_has_whitelist && !g_rpc_whitelist[jreq.authUser].count(jreq.strMethod)) {\n+            if (user_has_whitelist && !g_rpc_whitelist[jreq.authUser].count(jreq.strMethod) && jreq.authUser != \"__cookie__\") {\n                 LogPrintf(\"RPC User %s not allowed to call method %s\\n\", jreq.authUser, jreq.strMethod);\n                 req->WriteReply(HTTP_FORBIDDEN);\n                 return false;\n@@ -220,7 +221,7 @@ static bool HTTPReq_JSONRPC(HTTPRequest* req, const std::string &)\n                         const UniValue& request = valRequest[reqIdx].get_obj();\n                         // Parse method\n                         std::string strMethod = find_value(request, \"method\").get_str();\n-                        if (!g_rpc_whitelist[jreq.authUser].count(strMethod)) {\n+                        if (!g_rpc_whitelist[jreq.authUser].count(strMethod) && jreq.authUser != \"__cookie__\") {\n                             LogPrintf(\"RPC User %s not allowed to call method %s\\n\", jreq.authUser, strMethod);\n                             req->WriteReply(HTTP_FORBIDDEN);\n                             return false;"
      }
    ]
  }
]