practicalswift,2019-01-21T14:15:52Z,@promag Thanks for reviewing! Feedback addressed. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/15215#issuecomment-456088228,456088228,
laanwj,2019-02-12T16:06:24Z,"Here's my branch that uses `Optional`: https://github.com/laanwj/bitcoin/tree/2019_02_optional\n\nThe only thing I'm not sure about is whether the options dialog change is handled correctly, what the proxy string should be in case of an nonexistent/invalid proxy.",https://github.com/bitcoin/bitcoin/pull/15215#issuecomment-462820084,462820084,
practicalswift,2019-02-17T09:41:01Z,@laanwj Your solution looks better. I'm closing this PR: please consider submitting your PR instead.,https://github.com/bitcoin/bitcoin/pull/15215#issuecomment-464434812,464434812,
laanwj,2019-02-17T12:26:03Z,"Thanks!\nI'll try to get back to it after 0.18.",https://github.com/bitcoin/bitcoin/pull/15215#issuecomment-464450735,464450735,
promag,2019-01-21T14:04:16Z,"nit, use_proxy.",https://github.com/bitcoin/bitcoin/pull/15215#discussion_r249461170,249461170,src/rpc/net.cpp
laanwj,2019-02-12T15:09:36Z,"If the boolean is only there to signify the structure being there or not, what would be cool imo is to return `Option<proxyType>`, e.g.\n```c++\n#include <optional.h>\n...\nOptional<proxyType> GetProxy(enum Network net);\n```\nNo need for `NODISCARD` either.",https://github.com/bitcoin/bitcoin/pull/15215#discussion_r255996201,255996201,src/netbase.h
laanwj,2019-02-12T15:37:19Z,AHHH this gets into trouble in `OptionsDialog::updateDefaultProxyNets` which seems to rely on the struct *even if* the return value and proxy isn't valid (it assumes it gets default values from there?).,https://github.com/bitcoin/bitcoin/pull/15215#discussion_r256009956,256009956,src/netbase.h
