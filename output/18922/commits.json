[
  {
    "sha": "fe05dd0611cfc2929a7fdec04ca5948bccf0233b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZTA1ZGQwNjExY2ZjMjkyOWE3ZmRlYzA0Y2E1OTQ4YmNjZjAyMzNi",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-09T11:43:00Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-09T13:43:51Z"
      },
      "message": "util: Enhance bilingual_str",
      "tree": {
        "sha": "96eaf0269ca842d4d0c4682734285bbc69edf7b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/96eaf0269ca842d4d0c4682734285bbc69edf7b5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fe05dd0611cfc2929a7fdec04ca5948bccf0233b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl62s5kACgkQQQEIES5+\nqB9o9RAApcae5niDedMzo9R3X20nsDl6Tz46MKf1bjfW7a5SeQ5weRmb9J41eDNX\nh2V46W/dxKKDiVTghETtisffYdtZzIpS6wT7P/tIg8/j1XY3qcC6q+OGT0EdwQmD\n+ukUrmRT6uaGVgzaVOY19NFefBOPTidi4uMss54QYo6ceJWBk2n4NdPFvEjGjJVP\nXRzCWtcgc5t5JZPurR78164ds5Nq/qJ8xWqsGz+v6sBddRWMj/eJPEDd8of52TjC\n3vqhfrS6cF8CgCXYLWX9swnKGIRm+1FHMa4dYqkq+5llnD4PsQvCdSBrMQeX/mRt\ns2P9MMuoNOaekt1sFehctWgN6QBabXVw7JQocSI0HPSwuKcTA/5RN6FkQED37asJ\n/88yihepgMEhZYgLgb2aRyTJE519MEexdCEqro5fjUWT2Q4JpwYHF/18WGIWxLEs\nPPJF0ww1b14IDZVW5CbOeUBULvcJUtUEOk/G7Jho1cKNXNhgbUy92vHqNy/C/wMf\nQqsgHRjhHWS8+q5q6GiF9pbACNF0aMMyhLXjdBQH53Bp1HLFbnlGJ8zd0jK5qEqL\nFkszjbf8GHGXizjqBwVmjGrI+msf8R/cKG5W4Gm+ChJQnQ9wyv6LcK7zchoHewsp\n/OVwblwHlb1Gxb5S9MV+xxfgtSjyqLdsbFd7uFPLpr34eoMEkEY=\n=rQnA\n-----END PGP SIGNATURE-----",
        "payload": "tree 96eaf0269ca842d4d0c4682734285bbc69edf7b5\nparent 376294cde6b1588cb17055d8fde567eaf5848c3c\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1589024580 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1589031831 +0300\n\nutil: Enhance bilingual_str\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe05dd0611cfc2929a7fdec04ca5948bccf0233b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fe05dd0611cfc2929a7fdec04ca5948bccf0233b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe05dd0611cfc2929a7fdec04ca5948bccf0233b/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "376294cde6b1588cb17055d8fde567eaf5848c3c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/376294cde6b1588cb17055d8fde567eaf5848c3c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/376294cde6b1588cb17055d8fde567eaf5848c3c"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 10,
      "deletions": 4
    },
    "files": [
      {
        "sha": "dd605601685cd72c4506841f9e5c350bac4583f3",
        "filename": "src/util/translation.h",
        "status": "modified",
        "additions": 10,
        "deletions": 4,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe05dd0611cfc2929a7fdec04ca5948bccf0233b/src/util/translation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe05dd0611cfc2929a7fdec04ca5948bccf0233b/src/util/translation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/translation.h?ref=fe05dd0611cfc2929a7fdec04ca5948bccf0233b",
        "patch": "@@ -16,13 +16,19 @@\n struct bilingual_str {\n     std::string original;\n     std::string translated;\n+\n+    bilingual_str& operator+=(const bilingual_str& rhs)\n+    {\n+        original += rhs.original;\n+        translated += rhs.translated;\n+        return *this;\n+    }\n };\n \n-inline bilingual_str operator+(const bilingual_str& lhs, const bilingual_str& rhs)\n+inline bilingual_str operator+(bilingual_str lhs, const bilingual_str& rhs)\n {\n-    return bilingual_str{\n-        lhs.original + rhs.original,\n-        lhs.translated + rhs.translated};\n+    lhs += rhs;\n+    return lhs;\n }\n \n /** Mark a bilingual_str as untranslated */"
      }
    ]
  },
  {
    "sha": "4c9b9a4882e68835f16a52f1f0657efe47e589b5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YzliOWE0ODgyZTY4ODM1ZjE2YTUyZjFmMDY1N2VmZTQ3ZTU4OWI1",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-09T11:45:47Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-10T15:00:19Z"
      },
      "message": "util: Enhance Join()",
      "tree": {
        "sha": "ad29f99ef8b1fe4a0dc2a65f778ffea4cf6ccdb1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ad29f99ef8b1fe4a0dc2a65f778ffea4cf6ccdb1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4c9b9a4882e68835f16a52f1f0657efe47e589b5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl64FwUACgkQQQEIES5+\nqB8btBAAppPyv6L4/ny8ZuUk1MqHUkEFev0F9yU15TE78MkQcCIjKmq6XqLikXQl\n8hz7KQEDCAko7WgW8/OycbkIemg5AdSMA2e+7JOgANx1TqHvx0f0sA+8Wx6wkKMA\nLwdsZDbAKv946zfN06j4ay0WV9iwrVdIW91fn2WiBmQm5IMnDrZl2ZPqfO8U1nRh\nm7QidwV29UhkgzKks1vOlpUF097dxNm2vjZgt3AyJ2G7vJ0XvOWr95oftLDRKJSN\neoEwveZIDOEhWz3d0WCO+fnJ5BKWKZM25Q6AITnyCRMNPdlqnxnWjfQ5z8LOWDL9\nwu0H0Nx4Jo3Ff5YA+XyScHIKH6rv5SXltRaU+VqDypaSST4Lk8LdY78s4FDUHymq\njmV4PSiJa4gg7aowda8ThsRcGiOvJpQT6DBPWO/8jIe2wU8KZU/XdSrow5K6RtYb\nqVJSFFfBfntL12j6KuL2N6EY1+4SpWhQkLH53m83UJg38sDQtMzl634RPxGrCPv3\ngOmC0yzmwANIdgV42u3dS7inh2m9DJIuwJQtCqKBZUlOC5wIpI7WuZha7EsE+cz1\nZyzVoGJ6L91GaecwwhCc5latsEpIagvsvkyKdiBqrQ5BGvmrhRqabvWDh3fp0ddp\nvbCoZ0lOnnyQB6/pT2gwEtjKO+OMNmwLHspAY5cAUoeWNKihKCo=\n=wPnd\n-----END PGP SIGNATURE-----",
        "payload": "tree ad29f99ef8b1fe4a0dc2a65f778ffea4cf6ccdb1\nparent fe05dd0611cfc2929a7fdec04ca5948bccf0233b\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1589024747 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1589122819 +0300\n\nutil: Enhance Join()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4c9b9a4882e68835f16a52f1f0657efe47e589b5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4c9b9a4882e68835f16a52f1f0657efe47e589b5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4c9b9a4882e68835f16a52f1f0657efe47e589b5/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fe05dd0611cfc2929a7fdec04ca5948bccf0233b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe05dd0611cfc2929a7fdec04ca5948bccf0233b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fe05dd0611cfc2929a7fdec04ca5948bccf0233b"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 12,
      "deletions": 4
    },
    "files": [
      {
        "sha": "cdb41630c69c8099d893a4f83be1a3ce464792ee",
        "filename": "src/util/string.h",
        "status": "modified",
        "additions": 12,
        "deletions": 4,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c9b9a4882e68835f16a52f1f0657efe47e589b5/src/util/string.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c9b9a4882e68835f16a52f1f0657efe47e589b5/src/util/string.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/string.h?ref=4c9b9a4882e68835f16a52f1f0657efe47e589b5",
        "patch": "@@ -30,20 +30,28 @@ NODISCARD inline std::string TrimString(const std::string& str, const std::strin\n  * @param separator  The separator\n  * @param unary_op   Apply this operator to each item in the list\n  */\n-template <typename T, typename UnaryOp>\n-std::string Join(const std::vector<T>& list, const std::string& separator, UnaryOp unary_op)\n+template <typename T, typename BaseType, typename UnaryOp>\n+auto Join(const std::vector<T>& list, const BaseType& separator, UnaryOp unary_op)\n+    -> decltype(unary_op(list.at(0)))\n {\n-    std::string ret;\n+    decltype(unary_op(list.at(0))) ret;\n     for (size_t i = 0; i < list.size(); ++i) {\n         if (i > 0) ret += separator;\n         ret += unary_op(list.at(i));\n     }\n     return ret;\n }\n \n+template <typename T>\n+T Join(const std::vector<T>& list, const T& separator)\n+{\n+    return Join(list, separator, [](const T& i) { return i; });\n+}\n+\n+// Explicit overload needed for c_str arguments, which would otherwise cause a substitution failure in the template above.\n inline std::string Join(const std::vector<std::string>& list, const std::string& separator)\n {\n-    return Join(list, separator, [](const std::string& i) { return i; });\n+    return Join<std::string>(list, separator);\n }\n \n /**"
      }
    ]
  },
  {
    "sha": "da16f95c3fecf4ee1e9a1dc4333b0b92cd981afd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYTE2Zjk1YzNmZWNmNGVlMWU5YTFkYzQzMzNiMGI5MmNkOTgxYWZk",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-09T11:46:01Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-10T15:01:28Z"
      },
      "message": "gui: Do not translate InitWarning messages in debug.log",
      "tree": {
        "sha": "abf2a7768f51cee5b3e04ce572a21b4e29f64f22",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/abf2a7768f51cee5b3e04ce572a21b4e29f64f22"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da16f95c3fecf4ee1e9a1dc4333b0b92cd981afd",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl64F0gACgkQQQEIES5+\nqB82mBAAmLZ4Kyki60YVOm0SbAAd+CGvNTKryZORRPujk/qWCMNWkUeZ4yZ1s93y\neu/v+JobOib580GgUPbmk6KyyNlwzQI8aJlZhUNnFmLqK9Pm0DUgG2j8KNztCVGD\nnD+EFNQLWxYsVnQTltFqumEF2psHYsYUoOhaRfSDpREQUBOepiJkZ2ieMWBB9/vh\n6ZCDg2BRITq0MBomVEfIQx3J67JFGHnVSa5vJthC93Xe7ki++kdNUlB/4yKGMLMD\nUSGQQNGMd6fvR1LY32VEKXvNx6X2Sd1884e4lUl143YDKY9fNy1IU5GTdz45PM52\nS9yF0OLRGTdgEJO305bvxcCw1LcczCp4EOtjcyT+Hh2c7Q0gJY2HN2sbcx22Ni4M\n3CEeT2NTI+cWDfTA5tIfWC6B7nfsg6Em1yrlC0QDDgZ5XKnIJpsyrl42o7nbkKdz\nnZXKfUfxOsBnXAphZDf8Ymigu6ab7R4MDL2j5dqrAXLcyJcJOqIeS/f0gIyu8UaZ\nc+0k58czx5GTa5NVmikKypqsRn6nH9/+tNirxpZN2n/ytIJBCceKuhC++6ELAMBn\n8a2Go0kBAjJGa5xlth/hs2Qtyms6YQ1zaJUEFwrC3EZpWFe5N5UvPJrtt5xSn61N\ntWK/FdT/1oxRP8qvEtnIIpQ9TZsvu1XdFFKbB47vzT+JRsMp9Fs=\n=9u9J\n-----END PGP SIGNATURE-----",
        "payload": "tree abf2a7768f51cee5b3e04ce572a21b4e29f64f22\nparent 4c9b9a4882e68835f16a52f1f0657efe47e589b5\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1589024761 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1589122888 +0300\n\ngui: Do not translate InitWarning messages in debug.log\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da16f95c3fecf4ee1e9a1dc4333b0b92cd981afd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/da16f95c3fecf4ee1e9a1dc4333b0b92cd981afd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da16f95c3fecf4ee1e9a1dc4333b0b92cd981afd/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4c9b9a4882e68835f16a52f1f0657efe47e589b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4c9b9a4882e68835f16a52f1f0657efe47e589b5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4c9b9a4882e68835f16a52f1f0657efe47e589b5"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 12,
      "deletions": 13
    },
    "files": [
      {
        "sha": "0851abe8a83ac8ea7edff4cb2aea5fee53382c35",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da16f95c3fecf4ee1e9a1dc4333b0b92cd981afd/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da16f95c3fecf4ee1e9a1dc4333b0b92cd981afd/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=da16f95c3fecf4ee1e9a1dc4333b0b92cd981afd",
        "patch": "@@ -971,7 +971,7 @@ bool AppInitParameterInteraction()\n \n     // Warn if unrecognized section name are present in the config file.\n     for (const auto& section : gArgs.GetUnrecognizedSections()) {\n-        InitWarning(strprintf(\"%s:%i \" + _(\"Section [%s] is not recognized.\").translated, section.m_file, section.m_line, section.m_name));\n+        InitWarning(strprintf(Untranslated(\"%s:%i \") + _(\"Section [%s] is not recognized.\"), section.m_file, section.m_line, section.m_name));\n     }\n \n     if (!fs::is_directory(GetBlocksDir())) {\n@@ -1027,7 +1027,7 @@ bool AppInitParameterInteraction()\n     nMaxConnections = std::min(nFD - MIN_CORE_FILEDESCRIPTORS - MAX_ADDNODE_CONNECTIONS, nMaxConnections);\n \n     if (nMaxConnections < nUserMaxConnections)\n-        InitWarning(strprintf(_(\"Reducing -maxconnections from %d to %d, because of system limitations.\").translated, nUserMaxConnections, nMaxConnections));\n+        InitWarning(strprintf(_(\"Reducing -maxconnections from %d to %d, because of system limitations.\"), nUserMaxConnections, nMaxConnections));\n \n     // ********************************************************* Step 3: parameter-to-internal-flags\n     if (gArgs.IsArgSet(\"-debug\")) {\n@@ -1038,7 +1038,7 @@ bool AppInitParameterInteraction()\n             [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n             for (const auto& cat : categories) {\n                 if (!LogInstance().EnableCategory(cat)) {\n-                    InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\").translated, \"-debug\", cat));\n+                    InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat));\n                 }\n             }\n         }\n@@ -1047,7 +1047,7 @@ bool AppInitParameterInteraction()\n     // Now remove the logging categories which were explicitly excluded\n     for (const std::string& cat : gArgs.GetArgs(\"-debugexclude\")) {\n         if (!LogInstance().DisableCategory(cat)) {\n-            InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\").translated, \"-debugexclude\", cat));\n+            InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debugexclude\", cat));\n         }\n     }\n \n@@ -1260,7 +1260,7 @@ bool AppInitMain(NodeContext& node)\n         LogPrintf(\"Config file: %s\\n\", config_file_path.string());\n     } else if (gArgs.IsArgSet(\"-conf\")) {\n         // Warn if no conf file exists at path provided by user\n-        InitWarning(strprintf(_(\"The specified config file %s does not exist\\n\").translated, config_file_path.string()));\n+        InitWarning(strprintf(_(\"The specified config file %s does not exist\\n\"), config_file_path.string()));\n     } else {\n         // Not categorizing as \"Warning\" because it's the default behavior\n         LogPrintf(\"Config file: %s (not found, skipping)\\n\", config_file_path.string());"
      },
      {
        "sha": "1f6e59ab356a89a2da7ec0ad38d3df4e8faa62bb",
        "filename": "src/interfaces/chain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da16f95c3fecf4ee1e9a1dc4333b0b92cd981afd/src/interfaces/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da16f95c3fecf4ee1e9a1dc4333b0b92cd981afd/src/interfaces/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.cpp?ref=da16f95c3fecf4ee1e9a1dc4333b0b92cd981afd",
        "patch": "@@ -344,7 +344,7 @@ class ChainImpl : public Chain\n     bool shutdownRequested() override { return ShutdownRequested(); }\n     int64_t getAdjustedTime() override { return GetAdjustedTime(); }\n     void initMessage(const std::string& message) override { ::uiInterface.InitMessage(message); }\n-    void initWarning(const std::string& message) override { InitWarning(message); }\n+    void initWarning(const bilingual_str& message) override { InitWarning(message); }\n     void initError(const bilingual_str& message) override { InitError(message); }\n     void showProgress(const std::string& title, int progress, bool resume_possible) override\n     {"
      },
      {
        "sha": "7dfc77db7b8caf5dde20103fdb7136296599753b",
        "filename": "src/interfaces/chain.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da16f95c3fecf4ee1e9a1dc4333b0b92cd981afd/src/interfaces/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da16f95c3fecf4ee1e9a1dc4333b0b92cd981afd/src/interfaces/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.h?ref=da16f95c3fecf4ee1e9a1dc4333b0b92cd981afd",
        "patch": "@@ -225,7 +225,7 @@ class Chain\n     virtual void initMessage(const std::string& message) = 0;\n \n     //! Send init warning.\n-    virtual void initWarning(const std::string& message) = 0;\n+    virtual void initWarning(const bilingual_str& message) = 0;\n \n     //! Send init error.\n     virtual void initError(const bilingual_str& message) = 0;"
      },
      {
        "sha": "bb41154afcddf5ca0829a96f131147b029b09f3b",
        "filename": "src/ui_interface.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da16f95c3fecf4ee1e9a1dc4333b0b92cd981afd/src/ui_interface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da16f95c3fecf4ee1e9a1dc4333b0b92cd981afd/src/ui_interface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.cpp?ref=da16f95c3fecf4ee1e9a1dc4333b0b92cd981afd",
        "patch": "@@ -59,7 +59,7 @@ bool InitError(const bilingual_str& str)\n     return false;\n }\n \n-void InitWarning(const std::string& str)\n+void InitWarning(const bilingual_str& str)\n {\n-    uiInterface.ThreadSafeMessageBox(Untranslated(str), \"\", CClientUIInterface::MSG_WARNING);\n+    uiInterface.ThreadSafeMessageBox(str, \"\", CClientUIInterface::MSG_WARNING);\n }"
      },
      {
        "sha": "9c49451e84009ca7bc9be003036aeda011bc9549",
        "filename": "src/ui_interface.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da16f95c3fecf4ee1e9a1dc4333b0b92cd981afd/src/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da16f95c3fecf4ee1e9a1dc4333b0b92cd981afd/src/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.h?ref=da16f95c3fecf4ee1e9a1dc4333b0b92cd981afd",
        "patch": "@@ -120,8 +120,7 @@ class CClientUIInterface\n };\n \n /** Show warning message **/\n-// TODO: InitWarning() should take a bilingual_str parameter.\n-void InitWarning(const std::string& str);\n+void InitWarning(const bilingual_str& str);\n \n /** Show error message **/\n bool InitError(const bilingual_str& str);"
      },
      {
        "sha": "16f3699d37705e312d5b886783906f8ebe00d664",
        "filename": "src/wallet/load.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da16f95c3fecf4ee1e9a1dc4333b0b92cd981afd/src/wallet/load.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da16f95c3fecf4ee1e9a1dc4333b0b92cd981afd/src/wallet/load.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/load.cpp?ref=da16f95c3fecf4ee1e9a1dc4333b0b92cd981afd",
        "patch": "@@ -56,7 +56,7 @@ bool VerifyWallets(interfaces::Chain& chain, const std::vector<std::string>& wal\n         bilingual_str error_string;\n         std::vector<bilingual_str> warnings;\n         bool verify_success = CWallet::Verify(chain, location, salvage_wallet, error_string, warnings);\n-        if (!warnings.empty()) chain.initWarning(Join(warnings, \"\\n\", OpTranslated));\n+        if (!warnings.empty()) chain.initWarning(Join(warnings, Untranslated(\"\\n\")));\n         if (!verify_success) {\n             chain.initError(error_string);\n             return false;\n@@ -73,7 +73,7 @@ bool LoadWallets(interfaces::Chain& chain, const std::vector<std::string>& walle\n             bilingual_str error;\n             std::vector<bilingual_str> warnings;\n             std::shared_ptr<CWallet> pwallet = CWallet::CreateWalletFromFile(chain, WalletLocation(walletFile), error, warnings);\n-            if (!warnings.empty()) chain.initWarning(Join(warnings, \"\\n\", OpTranslated));\n+            if (!warnings.empty()) chain.initWarning(Join(warnings, Untranslated(\"\\n\")));\n             if (!pwallet) {\n                 chain.initError(error);\n                 return false;"
      }
    ]
  },
  {
    "sha": "78be8d97d3d750fcfbbe509a72639b7b30b7bd18",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OGJlOGQ5N2QzZDc1MGZjZmJiZTUwOWE3MjYzOWI3YjMwYjdiZDE4",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-10T18:28:29Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-10T18:28:29Z"
      },
      "message": "util: Drop OpOriginal() and OpTranslated()\n\nThe current implementation of the Join() allows do not use OpOriginal()\nand OpTranslated() unary operators at all.",
      "tree": {
        "sha": "79e96b0a01d0da90b28b631e0ce7ce38bc96570a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/79e96b0a01d0da90b28b631e0ce7ce38bc96570a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/78be8d97d3d750fcfbbe509a72639b7b30b7bd18",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl64R80ACgkQQQEIES5+\nqB8cgA/9EARe5T4KjCdqETBD+bSoOzRT4DNYtiXppFN2zH26pCH1IgscxzIW2M67\nqbzq49d6MEbwd+mJ0MjwI2M3ZrbA7z600c0hK5GILZsf0EuKk0/JVFqmRbq/njv8\nA03kGH6WBqXmDwQVhDunxakXADB9J8Xn1F4xYVf8GmrzUCxMHg2zhjzCjUwqBsa2\nSNbWyMgSOKfB+mMmO6E1eljVvMGoHN3fZMZJ8HgamoOc3bVQF5U321mCFEXdnhaG\nYNsoFFXC7FJ+mf1kNVPBdqegnB1DLxNr2IZNWw8B0vcO8U43FUBwJ1l75OnbCbgW\nFJS2hjeuyQ+ke6/OaS2RCknAngoswB4yPnxuoJJ2asG2BI1siqov/B7ViUazNK7i\nIxv/IkaHBmnbEX4yK8MKtKarGAZO1O4dLl41R/OVSDdYW8uRAqF+Jtf31QiOa8KG\neh/2e4CWwDhYya7hZJMWYVPyVlVuL746HGcmtnkIdtLTDnYAq/Qr3RzJzBNSF0UA\n2hL3HVosz8LLha7b0Bvw0Pd9ea+GIolP9CFChhHxqUH09wGJzELeLAlJ33YNvdNm\n2aIQZ9G9CDgH0CZ8AJCFiLtaZTc0MudkicEbQhAsaw5zyVW9wryBO/XzBlgdVhMw\nfkJqIKli2nWAlJ/acEsWKhyBbD61rFrkHRVuz1K4NpJoNyV4LK0=\n=qkJ2\n-----END PGP SIGNATURE-----",
        "payload": "tree 79e96b0a01d0da90b28b631e0ce7ce38bc96570a\nparent da16f95c3fecf4ee1e9a1dc4333b0b92cd981afd\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1589135309 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1589135309 +0300\n\nutil: Drop OpOriginal() and OpTranslated()\n\nThe current implementation of the Join() allows do not use OpOriginal()\nand OpTranslated() unary operators at all.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78be8d97d3d750fcfbbe509a72639b7b30b7bd18",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/78be8d97d3d750fcfbbe509a72639b7b30b7bd18",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78be8d97d3d750fcfbbe509a72639b7b30b7bd18/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "da16f95c3fecf4ee1e9a1dc4333b0b92cd981afd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da16f95c3fecf4ee1e9a1dc4333b0b92cd981afd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da16f95c3fecf4ee1e9a1dc4333b0b92cd981afd"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 4,
      "deletions": 8
    },
    "files": [
      {
        "sha": "20f2ef5b5fe3dc0529f61cb97c4c2b1bec833919",
        "filename": "src/qt/walletcontroller.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78be8d97d3d750fcfbbe509a72639b7b30b7bd18/src/qt/walletcontroller.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78be8d97d3d750fcfbbe509a72639b7b30b7bd18/src/qt/walletcontroller.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.cpp?ref=78be8d97d3d750fcfbbe509a72639b7b30b7bd18",
        "patch": "@@ -248,7 +248,7 @@ void CreateWalletActivity::finish()\n     if (!m_error_message.original.empty()) {\n         QMessageBox::critical(m_parent_widget, tr(\"Create wallet failed\"), QString::fromStdString(m_error_message.translated));\n     } else if (!m_warning_message.empty()) {\n-        QMessageBox::warning(m_parent_widget, tr(\"Create wallet warning\"), QString::fromStdString(Join(m_warning_message, \"\\n\", OpTranslated)));\n+        QMessageBox::warning(m_parent_widget, tr(\"Create wallet warning\"), QString::fromStdString(Join(m_warning_message, Untranslated(\"\\n\")).translated));\n     }\n \n     if (m_wallet_model) Q_EMIT created(m_wallet_model);\n@@ -289,7 +289,7 @@ void OpenWalletActivity::finish()\n     if (!m_error_message.original.empty()) {\n         QMessageBox::critical(m_parent_widget, tr(\"Open wallet failed\"), QString::fromStdString(m_error_message.translated));\n     } else if (!m_warning_message.empty()) {\n-        QMessageBox::warning(m_parent_widget, tr(\"Open wallet warning\"), QString::fromStdString(Join(m_warning_message, \"\\n\", OpTranslated)));\n+        QMessageBox::warning(m_parent_widget, tr(\"Open wallet warning\"), QString::fromStdString(Join(m_warning_message, Untranslated(\"\\n\")).translated));\n     }\n \n     if (m_wallet_model) Q_EMIT opened(m_wallet_model);"
      },
      {
        "sha": "268bcf30a7226b73e306f257b769723dc59a4262",
        "filename": "src/util/translation.h",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78be8d97d3d750fcfbbe509a72639b7b30b7bd18/src/util/translation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78be8d97d3d750fcfbbe509a72639b7b30b7bd18/src/util/translation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/translation.h?ref=78be8d97d3d750fcfbbe509a72639b7b30b7bd18",
        "patch": "@@ -33,10 +33,6 @@ inline bilingual_str operator+(bilingual_str lhs, const bilingual_str& rhs)\n \n /** Mark a bilingual_str as untranslated */\n inline bilingual_str Untranslated(std::string original) { return {original, original}; }\n-/** Unary operator to return the original */\n-inline std::string OpOriginal(const bilingual_str& b) { return b.original; }\n-/** Unary operator to return the translation */\n-inline std::string OpTranslated(const bilingual_str& b) { return b.translated; }\n \n namespace tinyformat {\n template <typename... Args>"
      },
      {
        "sha": "c36d22b4eb1d7653a08d35582916bd6f645f9ecc",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78be8d97d3d750fcfbbe509a72639b7b30b7bd18/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78be8d97d3d750fcfbbe509a72639b7b30b7bd18/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=78be8d97d3d750fcfbbe509a72639b7b30b7bd18",
        "patch": "@@ -2597,7 +2597,7 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n \n     UniValue obj(UniValue::VOBJ);\n     obj.pushKV(\"name\", wallet->GetName());\n-    obj.pushKV(\"warning\", Join(warnings, \"\\n\", OpOriginal));\n+    obj.pushKV(\"warning\", Join(warnings, Untranslated(\"\\n\")).original);\n \n     return obj;\n }\n@@ -2737,7 +2737,7 @@ static UniValue createwallet(const JSONRPCRequest& request)\n \n     UniValue obj(UniValue::VOBJ);\n     obj.pushKV(\"name\", wallet->GetName());\n-    obj.pushKV(\"warning\", Join(warnings, \"\\n\", OpOriginal));\n+    obj.pushKV(\"warning\", Join(warnings, Untranslated(\"\\n\")).original);\n \n     return obj;\n }"
      }
    ]
  }
]