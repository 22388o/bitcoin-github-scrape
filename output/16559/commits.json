[
  {
    "sha": "00704058a964f4aeced867f21fa5a26620fa3071",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMDcwNDA1OGE5NjRmNGFlY2VkODY3ZjIxZmE1YTI2NjIwZmEzMDcx",
    "commit": {
      "author": {
        "name": "Chuf",
        "email": "42591821+gapeman@users.noreply.github.com",
        "date": "2019-08-06T22:44:08Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2019-08-06T22:44:08Z"
      },
      "message": "Unified text outputs\n\nA few very minor changes to the text outputs.\r\nIncludes a few dots and spaces changes.",
      "tree": {
        "sha": "d4a5b9c9761f1fe2b9d923a648c40ff5e0523f73",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d4a5b9c9761f1fe2b9d923a648c40ff5e0523f73"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/00704058a964f4aeced867f21fa5a26620fa3071",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdSgK4CRBK7hj4Ov3rIwAAdHIIAKo3/M6dWXnxbIjfdEGnuY/A\n4WtaHQWTPYqK9xY25Wcc28+ZJRWcCtCMFZ80AMFbSMxfNtyAX1yh/PeAvQjxWvn8\nDrUXwoUBUUgAYYvqGEiqJ9+YQqbVoZ+70IP2tIprXorX2b5gnejdVyG8JTFUHvFT\ndYP2OXuGXW9DXtbt/lMdCmigvEcqDXY5U/HSdVPhqxxxeuTzMml98wic3fXCBrHq\n9KILWk130636Q4QMTry1FDuMrOhytqzRy0ndTCEItvVcpPBUCVnG5jr6iEi1fL42\nEdUT9lcTS0yoGq+2bSkJmWOVjkjBl4u3y/33xyBA83/akxTLQLZitJEaHIwy0TI=\n=d5O6\n-----END PGP SIGNATURE-----\n",
        "payload": "tree d4a5b9c9761f1fe2b9d923a648c40ff5e0523f73\nparent e5fdda68c6d2313edb74443f0d1e6d2ce2d97f5e\nauthor Chuf <42591821+gapeman@users.noreply.github.com> 1565131448 +0000\ncommitter GitHub <noreply@github.com> 1565131448 +0000\n\nUnified text outputs\n\nA few very minor changes to the text outputs.\r\nIncludes a few dots and spaces changes."
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00704058a964f4aeced867f21fa5a26620fa3071",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/00704058a964f4aeced867f21fa5a26620fa3071",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00704058a964f4aeced867f21fa5a26620fa3071/comments",
    "author": {
      "login": "GChuf",
      "id": 42591821,
      "node_id": "MDQ6VXNlcjQyNTkxODIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/42591821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GChuf",
      "html_url": "https://github.com/GChuf",
      "followers_url": "https://api.github.com/users/GChuf/followers",
      "following_url": "https://api.github.com/users/GChuf/following{/other_user}",
      "gists_url": "https://api.github.com/users/GChuf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GChuf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GChuf/subscriptions",
      "organizations_url": "https://api.github.com/users/GChuf/orgs",
      "repos_url": "https://api.github.com/users/GChuf/repos",
      "events_url": "https://api.github.com/users/GChuf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GChuf/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e5fdda68c6d2313edb74443f0d1e6d2ce2d97f5e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5fdda68c6d2313edb74443f0d1e6d2ce2d97f5e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e5fdda68c6d2313edb74443f0d1e6d2ce2d97f5e"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "111787053c46f5d60d6e25372f6a89f093485b8a",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/00704058a964f4aeced867f21fa5a26620fa3071/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/00704058a964f4aeced867f21fa5a26620fa3071/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=00704058a964f4aeced867f21fa5a26620fa3071",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2018 The Bitcoin Core developers\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -44,14 +44,14 @@ static void SetupCliArgs()\n     const auto regtestBaseParams = CreateBaseChainParams(CBaseChainParams::REGTEST);\n \n     gArgs.AddArg(\"-version\", \"Print version and exit\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n-    gArgs.AddArg(\"-conf=<file>\", strprintf(\"Specify configuration file. Relative paths will be prefixed by datadir location. (default: %s)\", BITCOIN_CONF_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-conf=<file>\", strprintf(\"Specify configuration file. Relative paths will be prefixed by datadir location (default: %s).\", BITCOIN_CONF_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-datadir=<dir>\", \"Specify data directory\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n-    gArgs.AddArg(\"-getinfo\", \"Get general information from the remote server. Note that unlike server-side RPC calls, the results of -getinfo is the result of multiple non-atomic requests. Some entries in the result may represent results from different states (e.g. wallet balance may be as of a different block from the chain state reported)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-getinfo\", \"Get general information from the remote server. Note that unlike server-side RPC calls, the result of -getinfo is the result of multiple non-atomic requests. Some entries in the result may represent results from different states (e.g. wallet balance may be as of a different block from the chain state reported).\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     SetupChainParamsBaseOptions();\n     gArgs.AddArg(\"-named\", strprintf(\"Pass named instead of positional arguments (default: %s)\", DEFAULT_NAMED), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n-    gArgs.AddArg(\"-rpcclienttimeout=<n>\", strprintf(\"Timeout in seconds during HTTP requests, or 0 for no timeout. (default: %d)\", DEFAULT_HTTP_CLIENT_TIMEOUT), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-rpcclienttimeout=<n>\", strprintf(\"Timeout in seconds during HTTP requests, or 0 for no timeout (default: %d)\", DEFAULT_HTTP_CLIENT_TIMEOUT), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-rpcconnect=<ip>\", strprintf(\"Send commands to node running on <ip> (default: %s)\", DEFAULT_RPCCONNECT), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n-    gArgs.AddArg(\"-rpccookiefile=<loc>\", \"Location of the auth cookie. Relative paths will be prefixed by a net-specific datadir location. (default: data dir)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-rpccookiefile=<loc>\", \"Location of the auth cookie. Relative paths will be prefixed by a net-specific datadir location (default: data dir).\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-rpcpassword=<pw>\", \"Password for JSON-RPC connections\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-rpcport=<port>\", strprintf(\"Connect to JSON-RPC on <port> (default: %u, testnet: %u, regtest: %u)\", defaultBaseParams->RPCPort(), testnetBaseParams->RPCPort(), regtestBaseParams->RPCPort()), ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-rpcuser=<user>\", \"Username for JSON-RPC connections\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n@@ -112,7 +112,7 @@ static int AppInitRPC(int argc, char* argv[])\n         if (!gArgs.IsArgSet(\"-version\")) {\n             strUsage += \"\\n\"\n                 \"Usage:  bitcoin-cli [options] <command> [params]  Send command to \" PACKAGE_NAME \"\\n\"\n-                \"or:     bitcoin-cli [options] -named <command> [name=value]...  Send command to \" PACKAGE_NAME \" (with named arguments)\\n\"\n+                \"or:     bitcoin-cli [options] -named <command> [name=value] ...  Send command to \" PACKAGE_NAME \" (with named arguments)\\n\"\n                 \"or:     bitcoin-cli [options] help                List commands\\n\"\n                 \"or:     bitcoin-cli [options] help <command>      Get help for a command\\n\";\n             strUsage += \"\\n\" + gArgs.GetHelpMessage();\n@@ -378,7 +378,7 @@ static UniValue CallRPC(BaseRequestHandler *rh, const std::string& strMethod, co\n     } else if (response.status == HTTP_UNAUTHORIZED) {\n         if (failedToGetAuthCookie) {\n             throw std::runtime_error(strprintf(\n-                \"Could not locate RPC credentials. No authentication cookie could be found, and RPC password is not set.  See -rpcpassword and -stdinrpcpass.  Configuration file: (%s)\",\n+                \"Could not locate RPC credentials. No authentication cookie could be found, and RPC password is not set. See -rpcpassword and -stdinrpcpass. Configuration file: (%s)\",\n                 GetConfigFile(gArgs.GetArg(\"-conf\", BITCOIN_CONF_FILENAME)).string().c_str()));\n         } else {\n             throw std::runtime_error(\"Authorization failed: Incorrect rpcuser or rpcpassword\");"
      }
    ]
  }
]