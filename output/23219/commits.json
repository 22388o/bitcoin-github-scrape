[
  {
    "sha": "c8991f0251dd2a7498f2454f21bfef71d2a080e1",
    "node_id": "C_kwDOABII59oAKGM4OTkxZjAyNTFkZDJhNzQ5OGYyNDU0ZjIxYmZlZjcxZDJhMDgwZTE",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-10-06T20:26:18Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-10-07T13:50:17Z"
      },
      "message": "p2p: remove unneeded CNetAddr vector and copy in LookupSubNet()",
      "tree": {
        "sha": "4c3d73bdae10703d697333eb8dec862f4a8dc5b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4c3d73bdae10703d697333eb8dec862f4a8dc5b8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c8991f0251dd2a7498f2454f21bfef71d2a080e1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmFe+zwACgkQT1chs9Dj\nkh14Vg//UkFU9KeFZr37t6VM/9YXlbcTtE1vzswkxuZhTjFJGPbf3xTXYiRBWjNe\nA0iNdxtYIGTC8snpAUoLNXlr3aBUnbXgnKVr+/f1uIotT9HcUrOOphqmzUsGH0kX\nil0pRdMFMzdsexqPFK7oZ7RmHTui0uGTBJ7PMvy7rOd3/dZYmQs+nFzAHf1I7Thy\nfVKwkdy/UffmStH6oXfmu0aPUNweuueVpGcwE7BPTNkG67zSQ+xUi4HCFdLZH8Aq\nqIvUpP0WFc2LHuqBl0iBWK8o60dgu07Qf7x1PLVVva/vq/w6nJ7bwUt7q3vX1BxV\nopKXMvHhHXsOJRZzaST1escKCWBBWdXigrDd1LBPPfamqo/H2fQQ7bi4gofuM3Ma\n7ynLDNeTRJ9uo8N0v3Qfa9qNmaqS5qLARIi5RaHKR6a5d0Nx/RxRmnvs6ZnyZP/B\nQZO2WtZR6qJF+ZpR4PV3iGXHaIQoGkkJgTr4nkiX2aX7ojMT7I21N6UVqTeWowgB\niCmEIrd4H3LkPKbNoGonXNjtuf4bkdgPpJf5LbEB9dA4L3o11sg+eBDPw0Qyao2A\nA/5+do+RIoFN73ZJVy+liD4zZAXJAzsNAwiSQMCH08iNnAafIzawVuTFwqVhUJPJ\nHumWMQlx8rHdaDDNmAsuVEhZMSwHD8yCjrNxQrpr8dyF2lC52CQ=\n=1vKg\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIEBcv419MkihEGMUPpqrpaSWnLx7FOUfJZsODxjY9Xr4CP/wEAMFv16ne5gu\nO7KaDaf/QVQI8QRhXvs+8Ah6bZ8BPMDv0ACD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEB8zNSBRXHk9Mg/dP8DGgTEI8CCvyM9k\nWXOJertQSB4/hbVFQLRxFZ3XIUvC8IWa11iqIgjwIHIY64eBwvIvVEQZSQKat4OX\nueaCRFmHhNwfubJAYFlbCPEEYV77P/AIYtVK+BtMpNYAg9/jDS75DI4pKGh0dHBz\nOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5jb23/8BBmrq5j8DfQLGOB\nHOi/KzHHCPEEYV77PvAIfsEl0pME6QcAg9/jDS75DI4sK2h0dHBzOi8vYm9iLmJ0\nYy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5vcmfwEJ6O7+HM/qo0sRLr5EzxAqwI\n8CAxlJU5OllGR+Z9Hp+LYDEEeAxFKTyqfVOp+mth84nR9gjxBGFe+z/wCCftYSsN\nYCmwAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGlt\nZXN0YW1wcy5vcmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 4c3d73bdae10703d697333eb8dec862f4a8dc5b8\nparent 66d11b14357c474416181227e197406ca8fb5dee\nauthor Jon Atack <jon@atack.com> 1633551978 +0200\ncommitter Jon Atack <jon@atack.com> 1633614617 +0200\n\np2p: remove unneeded CNetAddr vector and copy in LookupSubNet()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8991f0251dd2a7498f2454f21bfef71d2a080e1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c8991f0251dd2a7498f2454f21bfef71d2a080e1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8991f0251dd2a7498f2454f21bfef71d2a080e1/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "66d11b14357c474416181227e197406ca8fb5dee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66d11b14357c474416181227e197406ca8fb5dee",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/66d11b14357c474416181227e197406ca8fb5dee"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 7,
      "deletions": 9
    },
    "files": [
      {
        "sha": "d05c136df30d85fa732444a8ff2bb0cfd09e9b5f",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 9,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8991f0251dd2a7498f2454f21bfef71d2a080e1/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8991f0251dd2a7498f2454f21bfef71d2a080e1/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=c8991f0251dd2a7498f2454f21bfef71d2a080e1",
        "patch": "@@ -679,35 +679,33 @@ bool LookupSubNet(const std::string& strSubnet, CSubNet& ret, DNSLookupFn dns_lo\n         return false;\n     }\n     size_t slash = strSubnet.find_last_of('/');\n-    std::vector<CNetAddr> vIP;\n+    CNetAddr addr;\n \n     std::string strAddress = strSubnet.substr(0, slash);\n-    // TODO: Use LookupHost(const std::string&, CNetAddr&, bool) instead to just get\n-    //       one CNetAddr.\n-    if (LookupHost(strAddress, vIP, 1, false, dns_lookup_function))\n+    if (LookupHost(strAddress, addr, false, dns_lookup_function))\n     {\n-        CNetAddr network = vIP[0];\n         if (slash != strSubnet.npos)\n         {\n             std::string strNetmask = strSubnet.substr(slash + 1);\n             uint8_t n;\n             if (ParseUInt8(strNetmask, &n)) {\n                 // If valid number, assume CIDR variable-length subnet masking\n-                ret = CSubNet(network, n);\n+                ret = CSubNet{addr, n};\n                 return ret.IsValid();\n             }\n             else // If not a valid number, try full netmask syntax\n             {\n                 // Never allow lookup for netmask\n-                if (LookupHost(strNetmask, vIP, 1, false, dns_lookup_function)) {\n-                    ret = CSubNet(network, vIP[0]);\n+                CNetAddr full_netmask;\n+                if (LookupHost(strNetmask, full_netmask, false, dns_lookup_function)) {\n+                    ret = CSubNet{addr, full_netmask};\n                     return ret.IsValid();\n                 }\n             }\n         }\n         else\n         {\n-            ret = CSubNet(network);\n+            ret = CSubNet{addr};\n             return ret.IsValid();\n         }\n     }"
      }
    ]
  },
  {
    "sha": "aa71b3c88ffadf7250a5bacd20d65bf9cc2f1267",
    "node_id": "C_kwDOABII59oAKGFhNzFiM2M4OGZmYWRmNzI1MGE1YmFjZDIwZDY1YmY5Y2MyZjEyNjc",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-10-06T20:31:21Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-10-07T14:30:00Z"
      },
      "message": "p2p: tidy up LookupSubNet()\n\n- consistent param naming between function declaration and definition\n- brackets, param naming and localvar naming per current standards\n  in doc/developer-notes.md\n- update/improve doxygen documentation in the declaration\n- improve comments and other localvar names\n- constness\n- named args",
      "tree": {
        "sha": "e2ed4df272adeb994958bf40f5a7e3bedf0b98c7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e2ed4df272adeb994958bf40f5a7e3bedf0b98c7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aa71b3c88ffadf7250a5bacd20d65bf9cc2f1267",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmFfBIAACgkQT1chs9Dj\nkh10ag//aRrn41+7v+aI/vqkrkDvWkbjAt98h1b6oT+Ev6FacJ9m0VAcHQjo2bSY\nTGzGrEv4oUQcOp/7SGyKdySJySysJKJz5CGmua7vzU3ZBk712NGk3SwECUVL/aUP\n+TNNLf9BvikHkJrUsSXWUgIVncd5/NYSFl8nVRi56as0g38FjfsihC+N6zf/YmmN\nY82Uc5rFUW0QXWkZ0pYBU31OPChA4pODImCStO2ASkOKfTzIAtSI9L/YAY/oK/Lu\nY4DxDYRStSOE8Xftsk9vudPeJbBy+Bq6EOlXKTQYpNQPgspzf9+DGYLRIuapJaUS\nrOy7b8EyyH5MwQHSup+7j+rMS/loT5n1s+O+UuD2gmGMyeWcheqxndM0lessB/04\nJEPQvg592vouPHwkBEJEFJXRUICAEm8aVeAb+tRMw9QzlF0zfBQFYotVrJ8KsfFp\ngZCqrZrUJzsYnVea3cN/7Ycwc28/6BbCapmwj63T9tENXk9aVHVS7pdyE3JyeSow\nUG7P7AnfKq/X8//CgU0UemGMwY5DwDLKQJqyBV258i9PnGLjCtV3gaO3ySKoWiAp\nBF28PAv33yzjXBljvn6ruKpwiPTlKBb+SbXEOJL23MGAuNV2fwsbHgYI4K542187\n1qbAArNtJQlb7SdPIBQ9adPsch/3bGXPu3lsQYx9YzV57CRlf8Q=\n=t90N\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIMMCTe/FKhhl4SH+3omFhjTqhAQnugRODnuh/LwV5KVUCP/wEASCv4EoUSZa\nG8Uouat+rEcI8SDhKBdm2LirU9JBT6ez+yHKrhT6pRrcyVzJB7GnSJQt5wjxBGFf\nBILwCG5/wBkS5IcxAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5l\ndGVybml0eXdhbGwuY29t//AQTpi2dLHY/jnpvnoTMabbpAjxIPnh+jHekOPEikDz\nePeQ6wZBMne1Kh5vi5ZsjKKnfznjCPEEYV8Eg/AILxusjdIn8i4Ag9/jDS75DI4u\nLWh0dHBzOi8vYWxpY2UuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//w\nEGVuyjImIAOQs/nhiuXiM/MI8SBMIl0zsf9ZhgU1ZWOWIYrgj6ch3ha9sWSg5QGI\nPpIkkwjxBGFfBILwCPzfje8BAEH+AIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMu\nY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn8BClQZUw0fp+dO77Qi3jgGTICPAg\nODWvldrHZcNmX0L3R4tXbE8yqh5lZvo6uvR1ERYjmDQI8QRhXwSD8AjFgekJF9vU\nBQCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxsYXh5LmNvbQ==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree e2ed4df272adeb994958bf40f5a7e3bedf0b98c7\nparent c8991f0251dd2a7498f2454f21bfef71d2a080e1\nauthor Jon Atack <jon@atack.com> 1633552281 +0200\ncommitter Jon Atack <jon@atack.com> 1633617000 +0200\n\np2p: tidy up LookupSubNet()\n\n- consistent param naming between function declaration and definition\n- brackets, param naming and localvar naming per current standards\n  in doc/developer-notes.md\n- update/improve doxygen documentation in the declaration\n- improve comments and other localvar names\n- constness\n- named args\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aa71b3c88ffadf7250a5bacd20d65bf9cc2f1267",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/aa71b3c88ffadf7250a5bacd20d65bf9cc2f1267",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aa71b3c88ffadf7250a5bacd20d65bf9cc2f1267/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c8991f0251dd2a7498f2454f21bfef71d2a080e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8991f0251dd2a7498f2454f21bfef71d2a080e1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c8991f0251dd2a7498f2454f21bfef71d2a080e1"
      }
    ],
    "stats": {
      "total": 57,
      "additions": 26,
      "deletions": 31
    },
    "files": [
      {
        "sha": "ed8c07b06ed087cd7360d7b0a6f83af9a09cc81d",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 26,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aa71b3c88ffadf7250a5bacd20d65bf9cc2f1267/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aa71b3c88ffadf7250a5bacd20d65bf9cc2f1267/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=aa71b3c88ffadf7250a5bacd20d65bf9cc2f1267",
        "patch": "@@ -673,40 +673,34 @@ bool ConnectThroughProxy(const proxyType& proxy, const std::string& strDest, uin\n     return true;\n }\n \n-bool LookupSubNet(const std::string& strSubnet, CSubNet& ret, DNSLookupFn dns_lookup_function)\n+bool LookupSubNet(const std::string& str_subnet, CSubNet& subnet, DNSLookupFn dns_lookup_function)\n {\n-    if (!ValidAsCString(strSubnet)) {\n+    if (!ValidAsCString(str_subnet)) {\n         return false;\n     }\n-    size_t slash = strSubnet.find_last_of('/');\n+    const size_t slash{str_subnet.find_last_of('/')};\n     CNetAddr addr;\n \n-    std::string strAddress = strSubnet.substr(0, slash);\n-    if (LookupHost(strAddress, addr, false, dns_lookup_function))\n-    {\n-        if (slash != strSubnet.npos)\n-        {\n-            std::string strNetmask = strSubnet.substr(slash + 1);\n-            uint8_t n;\n-            if (ParseUInt8(strNetmask, &n)) {\n-                // If valid number, assume CIDR variable-length subnet masking\n-                ret = CSubNet{addr, n};\n-                return ret.IsValid();\n-            }\n-            else // If not a valid number, try full netmask syntax\n-            {\n-                // Never allow lookup for netmask\n+    const std::string str_addr{str_subnet.substr(0, slash)};\n+    if (LookupHost(str_addr, addr, /*fAllowLookup=*/false, dns_lookup_function)) {\n+        if (slash != str_subnet.npos) {\n+            const std::string str_netmask{str_subnet.substr(slash + 1)};\n+            uint8_t mask;\n+            if (ParseUInt8(str_netmask, &mask)) {\n+                // Valid number; assume CIDR variable-length subnet masking.\n+                subnet = CSubNet{addr, mask};\n+                return subnet.IsValid();\n+            } else {\n+                // Invalid number; try full netmask syntax. Never allow lookup for netmask.\n                 CNetAddr full_netmask;\n-                if (LookupHost(strNetmask, full_netmask, false, dns_lookup_function)) {\n-                    ret = CSubNet{addr, full_netmask};\n-                    return ret.IsValid();\n+                if (LookupHost(str_netmask, full_netmask, /*fAllowLookup=*/false, dns_lookup_function)) {\n+                    subnet = CSubNet{addr, full_netmask};\n+                    return subnet.IsValid();\n                 }\n             }\n-        }\n-        else\n-        {\n-            ret = CSubNet{addr};\n-            return ret.IsValid();\n+        } else {\n+            subnet = CSubNet{addr};\n+            return subnet.IsValid();\n         }\n     }\n     return false;"
      },
      {
        "sha": "a69711808ec67fc63fb814f0baaedd3bf85d1a60",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aa71b3c88ffadf7250a5bacd20d65bf9cc2f1267/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aa71b3c88ffadf7250a5bacd20d65bf9cc2f1267/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=aa71b3c88ffadf7250a5bacd20d65bf9cc2f1267",
        "patch": "@@ -169,13 +169,14 @@ CService LookupNumeric(const std::string& name, uint16_t portDefault = 0, DNSLoo\n  * Parse and resolve a specified subnet string into the appropriate internal\n  * representation.\n  *\n- * @param strSubnet A string representation of a subnet of the form `network\n- *                address [ \"/\", ( CIDR-style suffix | netmask ) ]`(e.g.\n- *                `2001:db8::/32`, `192.0.2.0/255.255.255.0`, or `8.8.8.8`).\n- *\n+ * @param[in]  str_subnet A string representation of a subnet of the form\n+ *                        `network address [ \"/\", ( CIDR-style suffix | netmask ) ]`\n+ *                        e.g. \"2001:db8::/32\", \"192.0.2.0/255.255.255.0\" or \"8.8.8.8\".\n+ * @param[out] subnet     Internal subnet representation, if parsable/resolvable\n+ *                        from `str_subnet`.\n  * @returns Whether the operation succeeded or not.\n  */\n-bool LookupSubNet(const std::string& strSubnet, CSubNet& subnet, DNSLookupFn dns_lookup_function = g_dns_lookup);\n+bool LookupSubNet(const std::string& str_subnet, CSubNet& subnet, DNSLookupFn dns_lookup_function = g_dns_lookup);\n \n /**\n  * Create a TCP socket in the given address family."
      }
    ]
  }
]