[
  {
    "sha": "4254cd9f8f2437a916b06db4d925ce4eff8c94b9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MjU0Y2Q5ZjhmMjQzN2E5MTZiMDZkYjRkOTI1Y2U0ZWZmOGM5NGI5",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-07-26T15:30:23Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-07-27T09:06:39Z"
      },
      "message": "p2p: add CInv transaction message helper methods",
      "tree": {
        "sha": "8fe4d0858f43b68d8a865b5fe10573fcd151c4da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8fe4d0858f43b68d8a865b5fe10573fcd151c4da"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4254cd9f8f2437a916b06db4d925ce4eff8c94b9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl8emR8ACgkQT1chs9Dj\nkh2yXhAAsaVICzf2RudCuBKGC8H2TJl587Bv5EZGxfXriVvTz3Svq1l3f2xE+SM9\n8SfvP1ZHsf1UTgyz8sUU1Rx9F5+Otq/rtGFb18aQSmbf+SKJrr4hDoKPr7y7Ypa+\nHpg4dEX6m4BJ2OjOdUhTnPdP2okyRUdvuAWSk3/lLEQxul9HX0djSN6gwJcsBzLU\nXyU9In10BJlsOrWYXSdCBZDnnBF52k63I6nDBXu0DdtwsYux8fhyWIIkmjhLiGJj\nJAeIeoJJ7rSuxjlvAzAuTV6WqbPmoUhDqp3YMbU9pFOzL6KOMwl8ZeXIOl0sXR2I\nEaNILRIKVPbs3bmnseu0AgHXXxodGHrGECqUhMU/Hl2LhsVdl+bHwlzzr3iFpiQ5\nfg12p6aS/gLaH8ezWLuUX9Ce721qKHRoXXyONZc2OnnmSwG9V9pUnN80Ertzf3dz\nmZX7MboOJhclvRKwshogRSRSS3g8aKPMuMfWMSkQr2S4iFyUZ0YzY7sRHRz6TKQH\nE+fQ7XT+t8M4+Mz+S3ea06Ws1QCkWprkgkRpvYHYCk20UGdFP6t6rdje7iZJieLe\nu8dGNoHx2b6SLOH3chil8Y/pbVQzOiKoHWWM3ix/VIsYGNIBxUGFQ6E0vuN4UX6+\n/sgE6OubgLn1ZIx7jKNzIkC+r39MlyrNbFOFxOWkKPhPKVa71zs=\n=6y0W\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIDOJp+H1frihH7NlcbLxWtLCdHY81NBic9Um8MJv93kgCP/wEHPISEpQwEQw\n4TUJJW9rwXYI8QRfHpki8Ain8CREgj69BwCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEJVGYgWDPrEjF7ECgvuL7osI8QRfHpki\n8AglJXX2KmF1+ACD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn//AQoO+2mQa5SRCGCdOXa5P4mQjwIF0Cn1qellqx\nzenSYwcfQbMgrYz1W8gJhb+f24QR+7j3CPEEXx6ZI/AIxLsVgx366ZYAg9/jDS75\nDI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5jb23wEOyj\nDSo3nWYYEWSkKNpwnK8I8QRfHpkj8AiC4JHOALziwgCD3+MNLvkMjiwraHR0cHM6\nLy9ib2IuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZw==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 8fe4d0858f43b68d8a865b5fe10573fcd151c4da\nparent 40a04814d130dfc9131af3f568eb44533e2bcbfc\nauthor Jon Atack <jon@atack.com> 1595777423 +0200\ncommitter Jon Atack <jon@atack.com> 1595840799 +0200\n\np2p: add CInv transaction message helper methods\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4254cd9f8f2437a916b06db4d925ce4eff8c94b9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4254cd9f8f2437a916b06db4d925ce4eff8c94b9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4254cd9f8f2437a916b06db4d925ce4eff8c94b9/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "40a04814d130dfc9131af3f568eb44533e2bcbfc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40a04814d130dfc9131af3f568eb44533e2bcbfc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/40a04814d130dfc9131af3f568eb44533e2bcbfc"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "26e64b0009e48c4450c45767e44acea6c3f87267",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4254cd9f8f2437a916b06db4d925ce4eff8c94b9/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4254cd9f8f2437a916b06db4d925ce4eff8c94b9/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=4254cd9f8f2437a916b06db4d925ce4eff8c94b9",
        "patch": "@@ -430,6 +430,14 @@ class CInv\n     std::string GetCommand() const;\n     std::string ToString() const;\n \n+    // Single-message helper methods\n+    bool IsMsgTx()        const { return type == MSG_TX; }\n+    bool IsMsgWtx()       const { return type == MSG_WTX; }\n+    bool IsMsgWitnessTx() const { return type == MSG_WITNESS_TX; }\n+\n+    // Combined-message helper methods\n+    bool IsGenTxMsg()     const { return type == MSG_TX || type == MSG_WTX || type == MSG_WITNESS_TX; }\n+\n     int type;\n     uint256 hash;\n };"
      }
    ]
  },
  {
    "sha": "c251d710a4c2981c6d52362a9a89db84da3d4a67",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMjUxZDcxMGE0YzI5ODFjNmQ1MjM2MmE5YTg5ZGI4NGRhM2Q0YTY3",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-07-26T10:12:36Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-07-27T09:06:48Z"
      },
      "message": "p2p, refactoring: use CInv helpers in net_processing.cpp\n\nto simplify the code and reach less from it into the CInv class internals",
      "tree": {
        "sha": "2ebf24d4da0f79b9a3a87f4c9a0fb02d3526136c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2ebf24d4da0f79b9a3a87f4c9a0fb02d3526136c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c251d710a4c2981c6d52362a9a89db84da3d4a67",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl8emSkACgkQT1chs9Dj\nkh3a+hAAlZPazBAjrFOEyNu3QxH9dv+sLJzW1KTDmRRYNZWQYP/jDkkSoBWZB8o/\ncxewPjE1LvC0OVrFph7u01+Pcxiuq2MihM5ABKkRWK3EHblogT2zdfgKhsnVBP9N\nxL3ZGFTJmyuYbdMztq49fZo/Iz4yKv0MqrnKa45hjXfIOWubL02ZGQswa2gyoXPL\nTwIHY3L9SyAbLJ3Xb298HUZ9AlDslp2sxOTi+cC+05Q6tVS0+63dmE86IGgAjH2l\nKGoLOf81aQHoyM58BAAFHdtaEKgCQQoFYCxCthkwkmDolQ/SC7xBNEjL/c2fb4UB\nzQPrma6ww9ddN/W+tTIQI5DNzQgBzTNYsE9/10dv5sJLgz4i3uNlvG9elyXaBcn4\nkOJtR1JY/viGJM9+9U6Z9O/pLlXvmSjpZ1ErRPOMgHb1zDUA+Um0lj4XlRot1huU\niNCtRa1aXGynb4qhnq59/jgwhYu+OiflsK7rVXj57NlpPHBZy95b0AujSVfTJww0\nYn9KDRSIHqtI5qV9ghnx83sLbg8RfHPRgGzEFJxcHqC/LLvi9ddi2P5ameXjmE44\nxPq2cdTSGQmI0NYKqW+ZUFp1yPLiWjABiDFeVkCb1wyOvYISAFak+yLtbfwi3cYy\nEMHpokquHs0Q/zh02eW12f95P0Lphl5fr02yXVVVrnlfmYRoEj4=\n=QFo/\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIClE+KboH4pnDBTif17EpXbFF8Opx1tg7LShX300IfU2CP/wED0pYO9cWiJz\nBuQv6+McdCMI8QRfHpks8AhAQnf3W+Zh3QCD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEFV4ndJtCp6oIAT5hUEj\nRmUI8QRfHpks8AijXIHaaBfNSACD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2Fs\nZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEK4yiUJeRRspJro16Lwef2cI8QRfHpks\n8AgdS0bnsKkdegCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxs\nYXh5LmNvbfAQ1grhPKd7zs+qLyKgt87jHgjxBF8emSzwCPzmeYvQk4kBAIPf4w0u\n+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 2ebf24d4da0f79b9a3a87f4c9a0fb02d3526136c\nparent 4254cd9f8f2437a916b06db4d925ce4eff8c94b9\nauthor Jon Atack <jon@atack.com> 1595758356 +0200\ncommitter Jon Atack <jon@atack.com> 1595840808 +0200\n\np2p, refactoring: use CInv helpers in net_processing.cpp\n\nto simplify the code and reach less from it into the CInv class internals\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c251d710a4c2981c6d52362a9a89db84da3d4a67",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c251d710a4c2981c6d52362a9a89db84da3d4a67",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c251d710a4c2981c6d52362a9a89db84da3d4a67/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4254cd9f8f2437a916b06db4d925ce4eff8c94b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4254cd9f8f2437a916b06db4d925ce4eff8c94b9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4254cd9f8f2437a916b06db4d925ce4eff8c94b9"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 10,
      "deletions": 11
    },
    "files": [
      {
        "sha": "feec424abe14776deb3e05bb10bba0e87646c628",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 11,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c251d710a4c2981c6d52362a9a89db84da3d4a67/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c251d710a4c2981c6d52362a9a89db84da3d4a67/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=c251d710a4c2981c6d52362a9a89db84da3d4a67",
        "patch": "@@ -1445,9 +1445,9 @@ bool static AlreadyHave(const CInv& inv, const CTxMemPool& mempool) EXCLUSIVE_LO\n \n             {\n                 LOCK(g_cs_orphans);\n-                if (inv.type != MSG_WTX && mapOrphanTransactions.count(inv.hash)) {\n+                if (!inv.IsMsgWtx() && mapOrphanTransactions.count(inv.hash)) {\n                     return true;\n-                } else if (inv.type == MSG_WTX && g_orphans_by_wtxid.count(inv.hash)) {\n+                } else if (inv.IsMsgWtx() && g_orphans_by_wtxid.count(inv.hash)) {\n                     return true;\n                 }\n             }\n@@ -1457,8 +1457,7 @@ bool static AlreadyHave(const CInv& inv, const CTxMemPool& mempool) EXCLUSIVE_LO\n                 if (g_recent_confirmed_transactions->contains(inv.hash)) return true;\n             }\n \n-            const bool by_wtxid = (inv.type == MSG_WTX);\n-            return recentRejects->contains(inv.hash) || mempool.exists(inv.hash, by_wtxid);\n+            return recentRejects->contains(inv.hash) || mempool.exists(inv.hash, inv.IsMsgWtx());\n         }\n     case MSG_BLOCK:\n     case MSG_WITNESS_BLOCK:\n@@ -1719,7 +1718,7 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n     // Process as many TX items from the front of the getdata queue as\n     // possible, since they're common and it's efficient to batch process\n     // them.\n-    while (it != pfrom.vRecvGetData.end() && (it->type == MSG_TX || it->type == MSG_WITNESS_TX || it->type == MSG_WTX)) {\n+    while (it != pfrom.vRecvGetData.end() && it->IsGenTxMsg()) {\n         if (interruptMsgProc) return;\n         // The send buffer provides backpressure. If there's no space in\n         // the buffer, pause processing until the next call.\n@@ -1732,10 +1731,10 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             continue;\n         }\n \n-        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, inv.type == MSG_WTX, mempool_req, now);\n+        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, inv.IsMsgWtx(), mempool_req, now);\n         if (tx) {\n             // WTX and WITNESS_TX imply we serialize with witness\n-            int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n+            int nSendFlags = (inv.IsMsgTx() ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n             connman.PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(tx->GetHash());\n             // As we're going to send tx, make sure its unconfirmed parents are made requestable.\n@@ -2654,15 +2653,15 @@ void ProcessMessage(\n \n             // ignore INVs that don't match wtxidrelay setting\n             if (State(pfrom.GetId())->m_wtxid_relay) {\n-                if (inv.type == MSG_TX) continue;\n+                if (inv.IsMsgTx()) continue;\n             } else {\n-                if (inv.type == MSG_WTX) continue;\n+                if (inv.IsMsgWtx()) continue;\n             }\n \n             bool fAlreadyHave = AlreadyHave(inv, mempool);\n             LogPrint(BCLog::NET, \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\", pfrom.GetId());\n \n-            if (inv.type == MSG_TX) {\n+            if (inv.IsMsgTx()) {\n                 inv.type |= nFetchFlags;\n             }\n \n@@ -3694,7 +3693,7 @@ void ProcessMessage(\n         vRecv >> vInv;\n         if (vInv.size() <= MAX_PEER_TX_IN_FLIGHT + MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n             for (CInv &inv : vInv) {\n-                if (inv.type == MSG_TX || inv.type == MSG_WITNESS_TX || inv.type == MSG_WTX) {\n+                if (inv.IsGenTxMsg()) {\n                     // If we receive a NOTFOUND message for a txid we requested, erase\n                     // it from our data structures for this peer.\n                     auto in_flight_it = state->m_tx_download.m_tx_in_flight.find(inv.hash);"
      }
    ]
  }
]