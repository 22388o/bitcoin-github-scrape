sipa,2014-11-05T06:38:32Z,"@theuni I was actually thinking not to expose the script verification flags externally, as they are implementation and policy specific, but instead have the interface define its own flags, which get translated into internal ones. \n",https://github.com/bitcoin/bitcoin/pull/5212#issuecomment-61765984,61765984,
theuni,2014-11-05T06:42:42Z,I'll defer to you on that. I can nuke the top commit and save that for a separate discussion.\n,https://github.com/bitcoin/bitcoin/pull/5212#issuecomment-61766249,61766249,
gmaxwell,2014-11-05T10:44:17Z,"With respect to the concern that callers might use the error code to decide pass/fail instead of the actual return. Why not set the error value to the unknown error at entry, so long as an error pointer is provided at all?  \n",https://github.com/bitcoin/bitcoin/pull/5212#issuecomment-61789180,61789180,
theuni,2014-11-06T07:15:23Z,Updated for @sipa's and @gmaxwell's comments.\n,https://github.com/bitcoin/bitcoin/pull/5212#issuecomment-61935891,61935891,
laanwj,2014-11-07T09:54:53Z,"Looks good to me, utACK (will test)\n",https://github.com/bitcoin/bitcoin/pull/5212#issuecomment-62120826,62120826,
theuni,2014-11-11T23:42:45Z,"@laanwj Sorry, I missed your comment (about comments) the first time around. re-added those and rebased on master.\n",https://github.com/bitcoin/bitcoin/pull/5212#issuecomment-62642738,62642738,
TheBlueMatt,2014-11-13T03:00:11Z,ACK commithash 4eefa373ae4866a1ad25cea3615270f58693e6a7 (+/- the incorrect error message on unknown opcode): http://bitcoin.ninja/TheBlueMatt-5212.txt\n,https://github.com/bitcoin/bitcoin/pull/5212#issuecomment-62833734,62833734,
sipa,2014-11-14T11:20:32Z,"@theuni to get back to an earlier comment I made: if #5247 would be merged, non-standard public key encoding do result in script failure immediately, so IsCompressedOrUncompressedPublicKey could set a status code etc, like you did earlier.\n",https://github.com/bitcoin/bitcoin/pull/5212#issuecomment-63046855,63046855,
laanwj,2014-11-14T11:24:20Z,```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK ddadf2d1ecc0d646ae83b06f275c15a5a7704573 after squash\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBCgAGBQJUZeZIAAoJEHSBCwEjRsmmDvEH/1Ugi0b3iy70QKEw3OBs+yc1\nuOvlkBuNVX+UM6alY90jJp5WZRNLnoOKv/1CZW8kD6jPZsb4fHJG9jE3xhvNY5sY\n6M0T4LTZzhqFHqC2ob1sXpHkztfQ/+klmJh1rrPCgDb2KtrIcHJT2ZNHl59WZQ1S\ntCHAQz23COk7O9uACRhqKB3oCmmxxnI/Iz,https://github.com/bitcoin/bitcoin/pull/5212#issuecomment-63047882,63047882,
theuni,2014-11-14T21:14:59Z,"@sipa Ok, thanks. If/when that happens, I'll follow-up with the more detailed values.\n",https://github.com/bitcoin/bitcoin/pull/5212#issuecomment-63130045,63130045,
theuni,2014-11-14T21:22:53Z,Squashed. This is code-identical to the last push except for the comments white-space nit fix.\n,https://github.com/bitcoin/bitcoin/pull/5212#issuecomment-63131057,63131057,
sipa,2014-11-17T15:40:38Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/5212#issuecomment-63322946,63322946,
sipa,2014-11-05T06:53:05Z,"These two are also under BIP62 (they're also used for standardness checks outside of BIP62, but that shouldn't matter for a consensus lib).\n",https://github.com/bitcoin/bitcoin/pull/5212#discussion_r19857463,19857463,src/script/types.h
laanwj,2014-11-07T09:37:57Z,"Nit: can you add the error messages that you remove here as comment? ie\n\n``` diff\n- if (vchPubKey.size() < 33)\n+ if (vchPubKey.size() < 33) // Non-canonical public key: too short\n- return error(""Non-canonical public key: too short"");\n+ return false;\n```\n\nWe do lose some troubleshooting information here, as the error mechanism provides no way to signal warnings/details of script interpreta",https://github.com/bitcoin/bitcoin/pull/5212#discussion_r20001449,20001449,src/script/interpreter.cpp
laanwj,2014-11-07T09:57:04Z,"Currently this function is unused! Shouldn't we call this function where we use EvalScript/VerifyScript, and log the message?\n",https://github.com/bitcoin/bitcoin/pull/5212#discussion_r20002211,20002211,src/script/script_error.cpp
theuni,2014-11-07T16:46:37Z,"@laanwj I didn't want to hook it up in each place, since it could be potentially much noisier than the old logging. To be close to on-par with current behavior, we could check for something like SCRIPT_ERR_SIG_DER || SCRIPT_ERR_SIG_HASHTYPE || SCRIPT_ERR_SIG_HIGH_S. Those are pretty arbitrary though.\n",https://github.com/bitcoin/bitcoin/pull/5212#discussion_r20021249,20021249,src/script/script_error.cpp
theuni,2014-11-07T16:50:14Z,"I started to add a bitmask for more detailed info in the case of ERR_EVAL_VALSE or ERR_VERIFY_*, but that ended up looking a little over-engineered and error-prone. If you think it's worth it, i can re-add that.\n",https://github.com/bitcoin/bitcoin/pull/5212#discussion_r20021503,20021503,src/script/interpreter.cpp
laanwj,2014-11-07T18:14:54Z,That's not necessary for this pull\n,https://github.com/bitcoin/bitcoin/pull/5212#discussion_r20026640,20026640,src/script/interpreter.cpp
laanwj,2014-11-11T08:50:12Z,"But please do add the comments as suggested, so that the cases are documented and if later on we have a way to return details execution status, we can return it.\n",https://github.com/bitcoin/bitcoin/pull/5212#discussion_r20138127,20138127,src/script/interpreter.cpp
TheBlueMatt,2014-11-13T02:34:56Z,Isnt this unknown opcode?\n,https://github.com/bitcoin/bitcoin/pull/5212#discussion_r20269367,20269367,src/script/interpreter.cpp
theuni,2014-11-13T02:48:47Z,"yes, thanks for catching that!\n",https://github.com/bitcoin/bitcoin/pull/5212#discussion_r20269756,20269756,src/script/interpreter.cpp
laanwj,2014-11-13T11:51:21Z,"Yes, it's pretty arbitrary. But it's also strange to have a function that is called from nowhere, not even from the unit tests. But I'm fine with doing that in a later pull, and regarding this as preparation.\n",https://github.com/bitcoin/bitcoin/pull/5212#discussion_r20285815,20285815,src/script/script_error.cpp
theuni,2014-11-13T19:31:59Z,"@laanwj Yes, I'd prefer to address the logging in a later pull, as I assumed that would lead to some bikeshedding. Though I agree that it wouldn't make sense to push this without using it anywhere, so I've updated the tests to check the values.\n",https://github.com/bitcoin/bitcoin/pull/5212#discussion_r20316613,20316613,src/script/script_error.cpp
laanwj,2014-11-14T11:17:44Z,"Sorry to nit, but indentation is wrong here (and in some other places where comments are added)\n",https://github.com/bitcoin/bitcoin/pull/5212#discussion_r20353565,20353565,src/script/interpreter.cpp
