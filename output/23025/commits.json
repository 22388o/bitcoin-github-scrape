[
  {
    "sha": "eed99cf272426e5957bee35dc8e7d0798aec8ec0",
    "node_id": "C_kwDOABII59oAKGVlZDk5Y2YyNzI0MjZlNTk1N2JlZTM1ZGM4ZTdkMDc5OGFlYzhlYzA",
    "commit": {
      "author": {
        "name": "Martin Ankerl",
        "email": "martin.ankerl@gmail.com",
        "date": "2021-09-17T09:58:57Z"
      },
      "committer": {
        "name": "Martin Ankerl",
        "email": "martin.ankerl@gmail.com",
        "date": "2021-09-21T09:46:01Z"
      },
      "message": "bench: update nanobench from 4.3.4 to 4.3.6\n\nMost importantly, this update fixes a bug in nanobench that always\ndisabled performance counters on linux.\n\nIt also adds another sanitizer suppression that is caught in clang++ 12.",
      "tree": {
        "sha": "9e1f8d2116daf9d859c0350267981e58bc4dd917",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9e1f8d2116daf9d859c0350267981e58bc4dd917"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eed99cf272426e5957bee35dc8e7d0798aec8ec0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCAAdFiEEqyQrdqB7R6j2Hv2k++qtf8b//oEFAmFJqdkACgkQ++qtf8b/\n/oGMxwwApOD0wkFDoUEGq+ObwuUisnCWvdhphjEWgWo8p0UO3OzyXtI0/We0UJ3N\nNfpNmFO0YXeJZUYZAfYEZZra7QbZBhkRhu+Bt7WbhsIZGJWgwSR30/56C9mZaF5i\nC+LXCpyjaT2AYJwneqYS3cIZx7NtdPHKPoilUZOzThSKnI1NK6dGRuNUi7v6AbeX\neBpYX0hICpoQdkkpAoizjSPaAhoGaMT+5b5JTy1qLYuMB/3HO3knY4XKJkCUeSOG\nBis/VpXs6xheWUMk1sg1AoN8GqNRqRAkBKu5HsSdguleSrfq8y88zRuKsXRufO5i\nWwGZW3kcSz/SuixW1wcLf4wZsJYAriuyxkKowRXToJYmjskpniR7Q39iu1+8DNod\n23+sORF+hNICKSf2ZmibEh8ygQRKTmizYLa2rmi5oQMuEzZgFfoePvB3dCFOc2gn\nVywV2K8tn9Iz4sPnwP57Oz7UiFGCMhrUYZFWJJWzCG2nqsXzLe31YwbJ1p4YEt0Q\ngMuZxopw\n=iayv\n-----END PGP SIGNATURE-----",
        "payload": "tree 9e1f8d2116daf9d859c0350267981e58bc4dd917\nparent 8f022a59b8bd7082a0336f5fb659dddd89d6ad66\nauthor Martin Ankerl <martin.ankerl@gmail.com> 1631872737 +0200\ncommitter Martin Ankerl <martin.ankerl@gmail.com> 1632217561 +0200\n\nbench: update nanobench from 4.3.4 to 4.3.6\n\nMost importantly, this update fixes a bug in nanobench that always\ndisabled performance counters on linux.\n\nIt also adds another sanitizer suppression that is caught in clang++ 12.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eed99cf272426e5957bee35dc8e7d0798aec8ec0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eed99cf272426e5957bee35dc8e7d0798aec8ec0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eed99cf272426e5957bee35dc8e7d0798aec8ec0/comments",
    "author": {
      "login": "martinus",
      "id": 14386,
      "node_id": "MDQ6VXNlcjE0Mzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinus",
      "html_url": "https://github.com/martinus",
      "followers_url": "https://api.github.com/users/martinus/followers",
      "following_url": "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
      "organizations_url": "https://api.github.com/users/martinus/orgs",
      "repos_url": "https://api.github.com/users/martinus/repos",
      "events_url": "https://api.github.com/users/martinus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinus/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "martinus",
      "id": 14386,
      "node_id": "MDQ6VXNlcjE0Mzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinus",
      "html_url": "https://github.com/martinus",
      "followers_url": "https://api.github.com/users/martinus/followers",
      "following_url": "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
      "organizations_url": "https://api.github.com/users/martinus/orgs",
      "repos_url": "https://api.github.com/users/martinus/repos",
      "events_url": "https://api.github.com/users/martinus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinus/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8f022a59b8bd7082a0336f5fb659dddd89d6ad66",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f022a59b8bd7082a0336f5fb659dddd89d6ad66",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8f022a59b8bd7082a0336f5fb659dddd89d6ad66"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 24,
      "deletions": 19
    },
    "files": [
      {
        "sha": "27df08fb690874bb1316b50ef4200ed160a13c21",
        "filename": "src/bench/nanobench.h",
        "status": "modified",
        "additions": 24,
        "deletions": 19,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eed99cf272426e5957bee35dc8e7d0798aec8ec0/src/bench/nanobench.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eed99cf272426e5957bee35dc8e7d0798aec8ec0/src/bench/nanobench.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/nanobench.h?ref=eed99cf272426e5957bee35dc8e7d0798aec8ec0",
        "patch": "@@ -33,7 +33,7 @@\n // see https://semver.org/\n #define ANKERL_NANOBENCH_VERSION_MAJOR 4 // incompatible API changes\n #define ANKERL_NANOBENCH_VERSION_MINOR 3 // backwards-compatible changes\n-#define ANKERL_NANOBENCH_VERSION_PATCH 4 // backwards-compatible bug fixes\n+#define ANKERL_NANOBENCH_VERSION_PATCH 6 // backwards-compatible bug fixes\n \n ///////////////////////////////////////////////////////////////////////////////////////////////////\n // public facing api - as minimal as possible\n@@ -88,13 +88,15 @@\n         } while (0)\n #endif\n \n-#if defined(__linux__) && defined(PERF_EVENT_IOC_ID) && defined(PERF_COUNT_HW_REF_CPU_CYCLES) && defined(PERF_FLAG_FD_CLOEXEC) && \\\n-    !defined(ANKERL_NANOBENCH_DISABLE_PERF_COUNTERS)\n-// only enable perf counters on kernel 3.14 which seems to have all the necessary defines. The three PERF_... defines are not in\n-// kernel 2.6.32 (all others are).\n-#    define ANKERL_NANOBENCH_PRIVATE_PERF_COUNTERS() 1\n-#else\n-#    define ANKERL_NANOBENCH_PRIVATE_PERF_COUNTERS() 0\n+#define ANKERL_NANOBENCH_PRIVATE_PERF_COUNTERS() 0\n+#if defined(__linux__) && !defined(ANKERL_NANOBENCH_DISABLE_PERF_COUNTERS)\n+#    include <linux/version.h>\n+#    if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 14, 0)\n+// PERF_COUNT_HW_REF_CPU_CYCLES only available since kernel 3.3\n+// PERF_FLAG_FD_CLOEXEC since kernel 3.14\n+#        undef ANKERL_NANOBENCH_PRIVATE_PERF_COUNTERS\n+#        define ANKERL_NANOBENCH_PRIVATE_PERF_COUNTERS() 1\n+#    endif\n #endif\n \n #if defined(__clang__)\n@@ -2210,20 +2212,20 @@ struct IterationLogic::Impl {\n             columns.emplace_back(10, 1, \"err%\", \"%\", rErrorMedian * 100.0);\n \n             double rInsMedian = -1.0;\n-            if (mResult.has(Result::Measure::instructions)) {\n+            if (mBench.performanceCounters() && mResult.has(Result::Measure::instructions)) {\n                 rInsMedian = mResult.median(Result::Measure::instructions);\n                 columns.emplace_back(18, 2, \"ins/\" + mBench.unit(), \"\", rInsMedian / mBench.batch());\n             }\n \n             double rCycMedian = -1.0;\n-            if (mResult.has(Result::Measure::cpucycles)) {\n+            if (mBench.performanceCounters() && mResult.has(Result::Measure::cpucycles)) {\n                 rCycMedian = mResult.median(Result::Measure::cpucycles);\n                 columns.emplace_back(18, 2, \"cyc/\" + mBench.unit(), \"\", rCycMedian / mBench.batch());\n             }\n             if (rInsMedian > 0.0 && rCycMedian > 0.0) {\n                 columns.emplace_back(9, 3, \"IPC\", \"\", rCycMedian <= 0.0 ? 0.0 : rInsMedian / rCycMedian);\n             }\n-            if (mResult.has(Result::Measure::branchinstructions)) {\n+            if (mBench.performanceCounters() && mResult.has(Result::Measure::branchinstructions)) {\n                 double rBraMedian = mResult.median(Result::Measure::branchinstructions);\n                 columns.emplace_back(17, 2, \"bra/\" + mBench.unit(), \"\", rBraMedian / mBench.batch());\n                 if (mResult.has(Result::Measure::branchmisses)) {\n@@ -2402,6 +2404,14 @@ class LinuxPerformanceCounters {\n         return (a + divisor / 2) / divisor;\n     }\n \n+    ANKERL_NANOBENCH_NO_SANITIZE(\"integer\", \"undefined\")\n+    static inline uint32_t mix(uint32_t x) noexcept {\n+        x ^= x << 13;\n+        x ^= x >> 17;\n+        x ^= x << 5;\n+        return x;\n+    }\n+\n     template <typename Op>\n     ANKERL_NANOBENCH_NO_SANITIZE(\"integer\", \"undefined\")\n     void calibrate(Op&& op) {\n@@ -2441,15 +2451,10 @@ class LinuxPerformanceCounters {\n             uint64_t const numIters = 100000U + (std::random_device{}() & 3);\n             uint64_t n = numIters;\n             uint32_t x = 1234567;\n-            auto fn = [&]() {\n-                x ^= x << 13;\n-                x ^= x >> 17;\n-                x ^= x << 5;\n-            };\n \n             beginMeasure();\n             while (n-- > 0) {\n-                fn();\n+                x = mix(x);\n             }\n             endMeasure();\n             detail::doNotOptimizeAway(x);\n@@ -2459,8 +2464,8 @@ class LinuxPerformanceCounters {\n             beginMeasure();\n             while (n-- > 0) {\n                 // we now run *twice* so we can easily calculate the overhead\n-                fn();\n-                fn();\n+                x = mix(x);\n+                x = mix(x);\n             }\n             endMeasure();\n             detail::doNotOptimizeAway(x);"
      }
    ]
  },
  {
    "sha": "468b232f71562280aae16876bc257ec24f5fcccb",
    "node_id": "C_kwDOABII59oAKDQ2OGIyMzJmNzE1NjIyODBhYWUxNjg3NmJjMjU3ZWMyNGY1ZmNjY2I",
    "commit": {
      "author": {
        "name": "Martin Ankerl",
        "email": "martin.ankerl@gmail.com",
        "date": "2021-09-17T11:38:11Z"
      },
      "committer": {
        "name": "Martin Ankerl",
        "email": "martin.ankerl@gmail.com",
        "date": "2021-09-21T09:46:01Z"
      },
      "message": "bench: remove unnecessary & incorrect  multiplication in MuHashDiv\n\nIntroduced in #19055, MuHashDiv benchmark used to multiply with a loop\nbased on epochIterations. That does not do what it is supposed to do,\nbecause epochIterations() is determined automatically from nanobench.\n\nAlso, multiplication is not needed for the algorithm (as pointed out by\na comment in #19055), so it's better to remove this loop.",
      "tree": {
        "sha": "366e60293649df4fc57980acdf0d6e1b18800e41",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/366e60293649df4fc57980acdf0d6e1b18800e41"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/468b232f71562280aae16876bc257ec24f5fcccb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCAAdFiEEqyQrdqB7R6j2Hv2k++qtf8b//oEFAmFJqdkACgkQ++qtf8b/\n/oHtggv/VEfyK6c+xokJm6R/aBDEK9bZWXXm6Rxc794Ho/W7NWMzLv9wtDHv68qK\nFiNdgRODmerHOOrhTxs9LwJU+CRpWbCtmzcV6ZmgA2KOyvE+9fHjHNJ8QnKmgTIj\nAPmd66BoCfi3uoGNOWMVoG2bET60FVYGCxArU7OmyyxNkHszSHdacXEQZT3BH5FZ\nCxFlBtxXFc7OIMExgWuN5PXiX+2HWshm6zXt1g7EaJC2JEdgFub9YSyIuJwmy9eE\n5Bwq9PODRJenQxH0zECVrpJ2VWc/Iop/2hgbFGlR7rN6P5R8lvXJ3Rvqg88FUfRb\nJAjJ1E1Ir66iWNG4RcZU6B7eHsvKz4se94gGTmDV8VIN4K5REcyYPubkXraYS4K+\nOiDw8oKMBM4uifYkWILAKlbzW3hC4lQNUtacr+h/aIFloyQQxujjzgenjHSoS/OK\nqsaIO/wJXwoSSaW3MZrLkePjl7kbVVmb/PTQHLv4Gfie+3wlSY0jZT6SisbGmA5J\nONLMFw8M\n=vtTj\n-----END PGP SIGNATURE-----",
        "payload": "tree 366e60293649df4fc57980acdf0d6e1b18800e41\nparent eed99cf272426e5957bee35dc8e7d0798aec8ec0\nauthor Martin Ankerl <martin.ankerl@gmail.com> 1631878691 +0200\ncommitter Martin Ankerl <martin.ankerl@gmail.com> 1632217561 +0200\n\nbench: remove unnecessary & incorrect  multiplication in MuHashDiv\n\nIntroduced in #19055, MuHashDiv benchmark used to multiply with a loop\nbased on epochIterations. That does not do what it is supposed to do,\nbecause epochIterations() is determined automatically from nanobench.\n\nAlso, multiplication is not needed for the algorithm (as pointed out by\na comment in #19055), so it's better to remove this loop.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/468b232f71562280aae16876bc257ec24f5fcccb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/468b232f71562280aae16876bc257ec24f5fcccb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/468b232f71562280aae16876bc257ec24f5fcccb/comments",
    "author": {
      "login": "martinus",
      "id": 14386,
      "node_id": "MDQ6VXNlcjE0Mzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinus",
      "html_url": "https://github.com/martinus",
      "followers_url": "https://api.github.com/users/martinus/followers",
      "following_url": "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
      "organizations_url": "https://api.github.com/users/martinus/orgs",
      "repos_url": "https://api.github.com/users/martinus/repos",
      "events_url": "https://api.github.com/users/martinus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinus/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "martinus",
      "id": 14386,
      "node_id": "MDQ6VXNlcjE0Mzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinus",
      "html_url": "https://github.com/martinus",
      "followers_url": "https://api.github.com/users/martinus/followers",
      "following_url": "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
      "organizations_url": "https://api.github.com/users/martinus/orgs",
      "repos_url": "https://api.github.com/users/martinus/repos",
      "events_url": "https://api.github.com/users/martinus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinus/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eed99cf272426e5957bee35dc8e7d0798aec8ec0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eed99cf272426e5957bee35dc8e7d0798aec8ec0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eed99cf272426e5957bee35dc8e7d0798aec8ec0"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 0,
      "deletions": 4
    },
    "files": [
      {
        "sha": "7d5e3ca4ee33832455ef9e39eba77785f59ba6b5",
        "filename": "src/bench/crypto_hash.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/468b232f71562280aae16876bc257ec24f5fcccb/src/bench/crypto_hash.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/468b232f71562280aae16876bc257ec24f5fcccb/src/bench/crypto_hash.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/crypto_hash.cpp?ref=468b232f71562280aae16876bc257ec24f5fcccb",
        "patch": "@@ -134,10 +134,6 @@ static void MuHashDiv(benchmark::Bench& bench)\n     FastRandomContext rng(true);\n     MuHash3072 muhash{rng.randbytes(32)};\n \n-    for (size_t i = 0; i < bench.epochIterations(); ++i) {\n-        acc *= muhash;\n-    }\n-\n     bench.run([&] {\n         acc /= muhash;\n     });"
      }
    ]
  },
  {
    "sha": "153e6860e84df0a3d52e5a3b2fe9c37b5e0b029a",
    "node_id": "C_kwDOABII59oAKDE1M2U2ODYwZTg0ZGYwYTNkNTJlNWEzYjJmZTljMzdiNWUwYjAyOWE",
    "commit": {
      "author": {
        "name": "Martin Ankerl",
        "email": "martin.ankerl@gmail.com",
        "date": "2021-09-18T06:08:46Z"
      },
      "committer": {
        "name": "Martin Ankerl",
        "email": "martin.ankerl@gmail.com",
        "date": "2021-09-21T12:45:48Z"
      },
      "message": "bench: change AddrManGood to AddrManAddThenGood\n\nMoves some of the setup into the benchmark loop so it is possible to run\nthe loop for an arbitrary number of times. Due to recent optimizations\nin #22974 the benchmark now runs much faster, so the inner loop now calls\nGood() 32 times as often to get better numbers.\n\nRenamed the benchmark to AddrManAddThenGood because that's now what is\nactually tested. To get the the number of just Good(), one needs to\nsubtract the benchmark result of AddrManAdd.",
      "tree": {
        "sha": "5fe1a3575b27c5495419a0a113523015cf2085ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5fe1a3575b27c5495419a0a113523015cf2085ad"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/153e6860e84df0a3d52e5a3b2fe9c37b5e0b029a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCAAdFiEEqyQrdqB7R6j2Hv2k++qtf8b//oEFAmFJ0/wACgkQ++qtf8b/\n/oHTngwAw5t2a1oOfFFP38kfKkoPNa9hJLX1+jIbCpz1FlhCa4LwighrCxxytFBW\n5UWD89XVfZ5wzZhot/JHXubvf684Fil0uHeCsNVqG5Mc1/d5qvKK2RtG0QiR6KGv\n8Tm2PyFfO6B4oBE3eZthOYYpO6TuAuAAFxEy2LBfCTHNdajpYSF3NyoiUdvwAsGE\nmohcHpma6eN0Jlo0ISdR+iY7E+dPCHl40kuEix8KiNB/RWf9AEsQ2ASsRzVQiHO7\nA1xrF4Denr93HvaD7p7ZUm3GM7oJ8NUCLqjj/DNB7iSf0ZcyOSN6YLd/0wGzh1Ei\nln8LEnYj4myJsgN11r36kSWaZEXg6LpTKAs8QBXqGbKtdeS392Z1+JdQM4RW30+W\ne+8bolJNVNfWSPcF7dJzz5jRC+mghfLaDTu3NgnVq6otOnJB+yt4KFvTGBPsAkaY\ndSC3RDgyN/Kvd4Igmb+OYnIhS2ZP9VLbQnmUXZjv8OjcmBU1iUwET99RojC04zM/\n6nviK+jm\n=oDb+\n-----END PGP SIGNATURE-----",
        "payload": "tree 5fe1a3575b27c5495419a0a113523015cf2085ad\nparent 468b232f71562280aae16876bc257ec24f5fcccb\nauthor Martin Ankerl <martin.ankerl@gmail.com> 1631945326 +0200\ncommitter Martin Ankerl <martin.ankerl@gmail.com> 1632228348 +0200\n\nbench: change AddrManGood to AddrManAddThenGood\n\nMoves some of the setup into the benchmark loop so it is possible to run\nthe loop for an arbitrary number of times. Due to recent optimizations\nin #22974 the benchmark now runs much faster, so the inner loop now calls\nGood() 32 times as often to get better numbers.\n\nRenamed the benchmark to AddrManAddThenGood because that's now what is\nactually tested. To get the the number of just Good(), one needs to\nsubtract the benchmark result of AddrManAdd.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/153e6860e84df0a3d52e5a3b2fe9c37b5e0b029a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/153e6860e84df0a3d52e5a3b2fe9c37b5e0b029a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/153e6860e84df0a3d52e5a3b2fe9c37b5e0b029a/comments",
    "author": {
      "login": "martinus",
      "id": 14386,
      "node_id": "MDQ6VXNlcjE0Mzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinus",
      "html_url": "https://github.com/martinus",
      "followers_url": "https://api.github.com/users/martinus/followers",
      "following_url": "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
      "organizations_url": "https://api.github.com/users/martinus/orgs",
      "repos_url": "https://api.github.com/users/martinus/repos",
      "events_url": "https://api.github.com/users/martinus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinus/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "martinus",
      "id": 14386,
      "node_id": "MDQ6VXNlcjE0Mzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinus",
      "html_url": "https://github.com/martinus",
      "followers_url": "https://api.github.com/users/martinus/followers",
      "following_url": "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
      "organizations_url": "https://api.github.com/users/martinus/orgs",
      "repos_url": "https://api.github.com/users/martinus/repos",
      "events_url": "https://api.github.com/users/martinus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinus/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "468b232f71562280aae16876bc257ec24f5fcccb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/468b232f71562280aae16876bc257ec24f5fcccb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/468b232f71562280aae16876bc257ec24f5fcccb"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 15,
      "deletions": 23
    },
    "files": [
      {
        "sha": "bebf86a09d93c75f5def7ffc77419939fe8a2937",
        "filename": "src/bench/addrman.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 23,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/153e6860e84df0a3d52e5a3b2fe9c37b5e0b029a/src/bench/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/153e6860e84df0a3d52e5a3b2fe9c37b5e0b029a/src/bench/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/addrman.cpp?ref=153e6860e84df0a3d52e5a3b2fe9c37b5e0b029a",
        "patch": "@@ -103,41 +103,33 @@ static void AddrManGetAddr(benchmark::Bench& bench)\n     });\n }\n \n-static void AddrManGood(benchmark::Bench& bench)\n+static void AddrManAddThenGood(benchmark::Bench& bench)\n {\n-    /* Create many CAddrMan objects - one to be modified at each loop iteration.\n-     * This is necessary because the CAddrMan::Good() method modifies the\n-     * object, affecting the timing of subsequent calls to the same method and\n-     * we want to do the same amount of work in every loop iteration. */\n-\n-    bench.epochs(5).epochIterations(1);\n-    const uint64_t addrman_count{bench.epochs() * bench.epochIterations()};\n-    Assert(addrman_count == 5U);\n-\n-    std::vector<std::unique_ptr<CAddrMan>> addrmans(addrman_count);\n-    for (size_t i{0}; i < addrman_count; ++i) {\n-        addrmans[i] = std::make_unique<CAddrMan>(/* asmap */ std::vector<bool>(), /* deterministic */ false, /* consistency_check_ratio */ 0);\n-        FillAddrMan(*addrmans[i]);\n-    }\n-\n     auto markSomeAsGood = [](CAddrMan& addrman) {\n         for (size_t source_i = 0; source_i < NUM_SOURCES; ++source_i) {\n             for (size_t addr_i = 0; addr_i < NUM_ADDRESSES_PER_SOURCE; ++addr_i) {\n-                if (addr_i % 32 == 0) {\n-                    addrman.Good(g_addresses[source_i][addr_i]);\n-                }\n+                addrman.Good(g_addresses[source_i][addr_i]);\n             }\n         }\n     };\n \n-    uint64_t i = 0;\n+    CreateAddresses();\n+\n     bench.run([&] {\n-        markSomeAsGood(*addrmans.at(i));\n-        ++i;\n+        // To make the benchmark independent of the number of evaluations, we always prepare a new addrman.\n+        // This is necessary because CAddrMan::Good() method modifies the object, affecting the timing of subsequent calls\n+        // to the same method and we want to do the same amount of work in every loop iteration.\n+        //\n+        // This has some overhead (exactly the result of AddrManAdd benchmark), but that overhead is constant so improvements in\n+        // CAddrMan::Good() will still be noticeable.\n+        CAddrMan addrman(/* asmap */ std::vector<bool>(), /* deterministic */ false, /* consistency_check_ratio */ 0);\n+        AddAddressesToAddrMan(addrman);\n+\n+        markSomeAsGood(addrman);\n     });\n }\n \n BENCHMARK(AddrManAdd);\n BENCHMARK(AddrManSelect);\n BENCHMARK(AddrManGetAddr);\n-BENCHMARK(AddrManGood);\n+BENCHMARK(AddrManAddThenGood);"
      }
    ]
  },
  {
    "sha": "9fef8329322277d9c14c8df1867cb3c61477c431",
    "node_id": "C_kwDOABII59oAKDlmZWY4MzI5MzIyMjc3ZDljMTRjOGRmMTg2N2NiM2M2MTQ3N2M0MzE",
    "commit": {
      "author": {
        "name": "Martin Ankerl",
        "email": "martin.ankerl@gmail.com",
        "date": "2021-09-18T06:13:03Z"
      },
      "committer": {
        "name": "Martin Ankerl",
        "email": "martin.ankerl@gmail.com",
        "date": "2021-09-21T12:45:48Z"
      },
      "message": "bench: make EvictionProtection.* work with any number of iterations\n\nMoves copying of the setup into the benchmark loop so it is possible\nto run the loop for an arbitrary number of times.\n\nThe overhead due to copying the candidates inside the loop is about 3%.",
      "tree": {
        "sha": "ed0c31d867cc71a11d286796f41acbfa7820b2e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ed0c31d867cc71a11d286796f41acbfa7820b2e9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9fef8329322277d9c14c8df1867cb3c61477c431",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCAAdFiEEqyQrdqB7R6j2Hv2k++qtf8b//oEFAmFJ0/wACgkQ++qtf8b/\n/oFBqAv9Hup/6sNHoGA3ABr3weqaC4fLySOMzNRKI6/81KJiZZ0SnyjtbqPHKbr3\nJyDocZrjgw9BeCiLY9i5xFxF08YvwqkHiW22acNFviDPtIMK6BA2JK2qOdiP+31m\nmuNPZiuyi3+Y6rWesq4c9Prrq/GKEWNDEqTF73+RUfuPllFT4KtpJSfKIb613bL3\ngPoK0qo+5d6k7uETvVM36fLRfi/+T7z61xFYFyEqWH4lgaW0qCvAkxeHXcKB0hsL\nb2z4Slz1WMcmw3QrujwnMZE4Rf2LDkRVsAJAcqvLbea1sagQ30Qfd23nHTX4Kqwz\nN8kjWM6L+xgPuAD5Gap4hqIpLXi//gDqaB9nYxUl7Esz16eswyTnHvRaXLfNd5uL\nKWW09ZcUu1WZ7Srv4Wy2hZuJymddAA958tXUo97mIweDpHNnbXpoN5VhTJlvQ9Cy\nYgbkzNZwZAEubjSNoLWPkzFaAbQHLupcgFN/a8DkKQIxuoUNBAQ/KxJ0YufndLkq\nfiF+9xMm\n=cvJV\n-----END PGP SIGNATURE-----",
        "payload": "tree ed0c31d867cc71a11d286796f41acbfa7820b2e9\nparent 153e6860e84df0a3d52e5a3b2fe9c37b5e0b029a\nauthor Martin Ankerl <martin.ankerl@gmail.com> 1631945583 +0200\ncommitter Martin Ankerl <martin.ankerl@gmail.com> 1632228348 +0200\n\nbench: make EvictionProtection.* work with any number of iterations\n\nMoves copying of the setup into the benchmark loop so it is possible\nto run the loop for an arbitrary number of times.\n\nThe overhead due to copying the candidates inside the loop is about 3%.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fef8329322277d9c14c8df1867cb3c61477c431",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9fef8329322277d9c14c8df1867cb3c61477c431",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fef8329322277d9c14c8df1867cb3c61477c431/comments",
    "author": {
      "login": "martinus",
      "id": 14386,
      "node_id": "MDQ6VXNlcjE0Mzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinus",
      "html_url": "https://github.com/martinus",
      "followers_url": "https://api.github.com/users/martinus/followers",
      "following_url": "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
      "organizations_url": "https://api.github.com/users/martinus/orgs",
      "repos_url": "https://api.github.com/users/martinus/repos",
      "events_url": "https://api.github.com/users/martinus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinus/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "martinus",
      "id": 14386,
      "node_id": "MDQ6VXNlcjE0Mzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinus",
      "html_url": "https://github.com/martinus",
      "followers_url": "https://api.github.com/users/martinus/followers",
      "following_url": "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
      "organizations_url": "https://api.github.com/users/martinus/orgs",
      "repos_url": "https://api.github.com/users/martinus/repos",
      "events_url": "https://api.github.com/users/martinus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinus/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "153e6860e84df0a3d52e5a3b2fe9c37b5e0b029a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/153e6860e84df0a3d52e5a3b2fe9c37b5e0b029a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/153e6860e84df0a3d52e5a3b2fe9c37b5e0b029a"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 4,
      "deletions": 6
    },
    "files": [
      {
        "sha": "8429f186133eeed0439877784829d5a2c35a30b8",
        "filename": "src/bench/peer_eviction.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fef8329322277d9c14c8df1867cb3c61477c431/src/bench/peer_eviction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fef8329322277d9c14c8df1867cb3c61477c431/src/bench/peer_eviction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/peer_eviction.cpp?ref=9fef8329322277d9c14c8df1867cb3c61477c431",
        "patch": "@@ -20,19 +20,17 @@ static void EvictionProtectionCommon(\n {\n     using Candidates = std::vector<NodeEvictionCandidate>;\n     FastRandomContext random_context{true};\n-    bench.warmup(100).epochIterations(1100);\n \n     Candidates candidates{GetRandomNodeEvictionCandidates(num_candidates, random_context)};\n     for (auto& c : candidates) {\n         candidate_setup_fn(c);\n     }\n \n-    std::vector<Candidates> copies{\n-        static_cast<size_t>(bench.epochs() * bench.epochIterations()), candidates};\n-    size_t i{0};\n+\n     bench.run([&] {\n-        ProtectEvictionCandidatesByRatio(copies.at(i));\n-        ++i;\n+        // creating a copy has an overhead of about 3%, so it does not influence the benchmark results much.\n+        auto copy = candidates;\n+        ProtectEvictionCandidatesByRatio(copy);\n     });\n }\n "
      }
    ]
  },
  {
    "sha": "d3c6f8bfa12f78635752878b28e66cec0c85d4a9",
    "node_id": "C_kwDOABII59oAKGQzYzZmOGJmYTEyZjc4NjM1NzUyODc4YjI4ZTY2Y2VjMGM4NWQ0YTk",
    "commit": {
      "author": {
        "name": "Martin Ankerl",
        "email": "martin.ankerl@gmail.com",
        "date": "2021-09-18T06:38:20Z"
      },
      "committer": {
        "name": "Martin Ankerl",
        "email": "martin.ankerl@gmail.com",
        "date": "2021-09-21T12:45:48Z"
      },
      "message": "bench: introduce -min_time argument\n\nWhen it is not easily possible to stabilize benchmark machine and code\nthe argument -min_time can be used to specify a minimum duration\nthat a benchmark should take. E.g. choose -min_time=1000 if you\nare willing to wait about 1 second for each benchmark result.\n\nThe default is now set to 10ms instead of 0, which should make runs on\nfast machines more stable with negligible slowdown.",
      "tree": {
        "sha": "aa0c96f88435e0ec8bda3610653c471bec7ff509",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aa0c96f88435e0ec8bda3610653c471bec7ff509"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d3c6f8bfa12f78635752878b28e66cec0c85d4a9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCAAdFiEEqyQrdqB7R6j2Hv2k++qtf8b//oEFAmFJ0/wACgkQ++qtf8b/\n/oFdrQv/R5ZlcKJ5QoEwDCJC4qD7evon8IikKP7K3i1c4Pv2dsgxVETxKJyOEg0U\nfVqrCAQnT0Xf4N/oVimlHkXJFj60NMgds+pCkVyYJsUNIzB5fOM5MIi1ja/gway8\nwGfgxc4tvQdbyWOOK5L+RNlr8/eQe7oZh2klhnCGqpQYHXgmerJB1GwrjuRVw40K\nSYStwbJBK0p42CtdTTc/moIpfqjxJK6oCUG9V8ZaAHf7w6ADzAAkzMYGPh5gtFt4\nl8UHT1dV5QjnRD3PaP4iTRfVGfAUY66DHyn+X15xaubeTrAVt8i3SCIK80DgzUSH\np5iMdM0XdPrDBmG7SEqorVpnOfT0IY7Gk6dqFpfSPnQtOyrh77y3WNclOP7J6HXC\n1wqbrjcEnu4pbJTi0qd71aDtBe9SxwnC4qETwZFySTd+DSew14MF+axQo4eAf8hy\n36RSoKLn8Kwlc8bUROWvAG6gnDeLmQnmvrfhrNfPKOhhD2pMa0czwg49w1MihZ03\nv1gMNfqa\n=lmQY\n-----END PGP SIGNATURE-----",
        "payload": "tree aa0c96f88435e0ec8bda3610653c471bec7ff509\nparent 9fef8329322277d9c14c8df1867cb3c61477c431\nauthor Martin Ankerl <martin.ankerl@gmail.com> 1631947100 +0200\ncommitter Martin Ankerl <martin.ankerl@gmail.com> 1632228348 +0200\n\nbench: introduce -min_time argument\n\nWhen it is not easily possible to stabilize benchmark machine and code\nthe argument -min_time can be used to specify a minimum duration\nthat a benchmark should take. E.g. choose -min_time=1000 if you\nare willing to wait about 1 second for each benchmark result.\n\nThe default is now set to 10ms instead of 0, which should make runs on\nfast machines more stable with negligible slowdown.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3c6f8bfa12f78635752878b28e66cec0c85d4a9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d3c6f8bfa12f78635752878b28e66cec0c85d4a9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3c6f8bfa12f78635752878b28e66cec0c85d4a9/comments",
    "author": {
      "login": "martinus",
      "id": 14386,
      "node_id": "MDQ6VXNlcjE0Mzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinus",
      "html_url": "https://github.com/martinus",
      "followers_url": "https://api.github.com/users/martinus/followers",
      "following_url": "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
      "organizations_url": "https://api.github.com/users/martinus/orgs",
      "repos_url": "https://api.github.com/users/martinus/repos",
      "events_url": "https://api.github.com/users/martinus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinus/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "martinus",
      "id": 14386,
      "node_id": "MDQ6VXNlcjE0Mzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinus",
      "html_url": "https://github.com/martinus",
      "followers_url": "https://api.github.com/users/martinus/followers",
      "following_url": "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
      "organizations_url": "https://api.github.com/users/martinus/orgs",
      "repos_url": "https://api.github.com/users/martinus/repos",
      "events_url": "https://api.github.com/users/martinus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinus/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9fef8329322277d9c14c8df1867cb3c61477c431",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fef8329322277d9c14c8df1867cb3c61477c431",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9fef8329322277d9c14c8df1867cb3c61477c431"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "335ce8cd45bf483ae3f58dfb4aa2f25d65b46866",
        "filename": "src/bench/bench.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3c6f8bfa12f78635752878b28e66cec0c85d4a9/src/bench/bench.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3c6f8bfa12f78635752878b28e66cec0c85d4a9/src/bench/bench.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.cpp?ref=d3c6f8bfa12f78635752878b28e66cec0c85d4a9",
        "patch": "@@ -61,6 +61,12 @@ void benchmark::BenchRunner::RunAll(const Args& args)\n \n         Bench bench;\n         bench.name(p.first);\n+        if (args.min_time > 0ms) {\n+            // convert to nanos before dividing to reduce rounding errors\n+            std::chrono::nanoseconds min_time_ns = args.min_time;\n+            bench.minEpochTime(min_time_ns / bench.epochs());\n+        }\n+\n         if (args.asymptote.empty()) {\n             p.second(bench);\n         } else {"
      },
      {
        "sha": "3bce23ab6da65ad7bc78b0023caef8b3eeec3ee4",
        "filename": "src/bench/bench.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3c6f8bfa12f78635752878b28e66cec0c85d4a9/src/bench/bench.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3c6f8bfa12f78635752878b28e66cec0c85d4a9/src/bench/bench.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.h?ref=d3c6f8bfa12f78635752878b28e66cec0c85d4a9",
        "patch": "@@ -43,6 +43,7 @@ typedef std::function<void(Bench&)> BenchFunction;\n struct Args {\n     std::string regex_filter;\n     bool is_list_only;\n+    std::chrono::milliseconds min_time;\n     std::vector<double> asymptote;\n     std::string output_csv;\n     std::string output_json;"
      },
      {
        "sha": "ae1e930bb7431183d3f5529f269655747d3cabd4",
        "filename": "src/bench/bench_bitcoin.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3c6f8bfa12f78635752878b28e66cec0c85d4a9/src/bench/bench_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3c6f8bfa12f78635752878b28e66cec0c85d4a9/src/bench/bench_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench_bitcoin.cpp?ref=d3c6f8bfa12f78635752878b28e66cec0c85d4a9",
        "patch": "@@ -11,6 +11,7 @@\n #include <memory>\n \n static const char* DEFAULT_BENCH_FILTER = \".*\";\n+static constexpr int64_t DEFAULT_MIN_TIME_MS{10};\n \n static void SetupBenchArgs(ArgsManager& argsman)\n {\n@@ -19,6 +20,7 @@ static void SetupBenchArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-asymptote=n1,n2,n3,...\", \"Test asymptotic growth of the runtime of an algorithm, if supported by the benchmark\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-filter=<regex>\", strprintf(\"Regular expression filter to select benchmark by name (default: %s)\", DEFAULT_BENCH_FILTER), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-list\", \"List benchmarks without executing them\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-min_time=<milliseconds>\", strprintf(\"Minimum runtime per benchmark, in milliseconds (default: %d)\", DEFAULT_MIN_TIME_MS), ArgsManager::ALLOW_INT, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-output_csv=<output.csv>\", \"Generate CSV file with the most important benchmark results\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-output_json=<output.json>\", \"Generate JSON file with all benchmark results\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n }\n@@ -57,6 +59,7 @@ int main(int argc, char** argv)\n     args.regex_filter = argsman.GetArg(\"-filter\", DEFAULT_BENCH_FILTER);\n     args.is_list_only = argsman.GetBoolArg(\"-list\", false);\n     args.asymptote = parseAsymptote(argsman.GetArg(\"-asymptote\", \"\"));\n+    args.min_time = std::chrono::milliseconds(argsman.GetArg(\"-min_time\", DEFAULT_MIN_TIME_MS));\n     args.output_csv = argsman.GetArg(\"-output_csv\", \"\");\n     args.output_json = argsman.GetArg(\"-output_json\", \"\");\n "
      }
    ]
  },
  {
    "sha": "1f10f1663e53474038b9111c4264a250cffe7501",
    "node_id": "C_kwDOABII59oAKDFmMTBmMTY2M2U1MzQ3NDAzOGI5MTExYzQyNjRhMjUwY2ZmZTc1MDE",
    "commit": {
      "author": {
        "name": "Martin Ankerl",
        "email": "martin.ankerl@gmail.com",
        "date": "2021-09-18T07:38:58Z"
      },
      "committer": {
        "name": "Martin Ankerl",
        "email": "martin.ankerl@gmail.com",
        "date": "2021-09-21T12:45:49Z"
      },
      "message": "bench: add usage description and documentation\n\nThis adds some usage description with tips to `bench_bitcoin -h`.",
      "tree": {
        "sha": "743364372dabdce2b77eb8aaa49215f9bfbf445e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/743364372dabdce2b77eb8aaa49215f9bfbf445e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1f10f1663e53474038b9111c4264a250cffe7501",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCAAdFiEEqyQrdqB7R6j2Hv2k++qtf8b//oEFAmFJ0/0ACgkQ++qtf8b/\n/oFhXwwAxpKLwz7URgdMsowcLkjCxj3/TlveWkCc3LmU6Es1Y6aopDL1I1l/PNm6\nOusV1MONqeau3lASrMa0HGwwElKl82S4B2UEbHPTtoLZIFLgDGIvagw7jkuS+jJt\ntyGMxsyPSoAGKKR9Q/kQXs8/048km+0TysTsYNaPSuOnUHcT5g6Zdyg5pfxFB+2z\nLnQ+RzknG6kCUR8KedGOTj7+jBtrVbKGzhDTQmJkAxEucPM/PdwoXdLEQ6HWYNkZ\nXYFcpEZsO3Sd5iYcE5owboSfuv+EvZDHHLZ/q2Fkt4AgSPAnFWP3nAlz7Cz7+AN9\nW67hrf02sYX2u0XZY1uZ7SscJGk3bGuBjXOQqIivH52j3U2AdMTLVvV0WLaBMMVL\npdU5VoXrh6Z1IIgNp9/oIATiRsboc0NDoytAMqP09kJLuYcU6YK64lwVnKQ0npAX\nJRAn+5rKpm0Q5j9G/lWuHfnzpiMflnjGiPrM7w6QXz1eiiSu6yuseDJ3/u4R9DxT\npDtSe1SQ\n=5E3n\n-----END PGP SIGNATURE-----",
        "payload": "tree 743364372dabdce2b77eb8aaa49215f9bfbf445e\nparent d3c6f8bfa12f78635752878b28e66cec0c85d4a9\nauthor Martin Ankerl <martin.ankerl@gmail.com> 1631950738 +0200\ncommitter Martin Ankerl <martin.ankerl@gmail.com> 1632228349 +0200\n\nbench: add usage description and documentation\n\nThis adds some usage description with tips to `bench_bitcoin -h`.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1f10f1663e53474038b9111c4264a250cffe7501",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1f10f1663e53474038b9111c4264a250cffe7501",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1f10f1663e53474038b9111c4264a250cffe7501/comments",
    "author": {
      "login": "martinus",
      "id": 14386,
      "node_id": "MDQ6VXNlcjE0Mzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinus",
      "html_url": "https://github.com/martinus",
      "followers_url": "https://api.github.com/users/martinus/followers",
      "following_url": "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
      "organizations_url": "https://api.github.com/users/martinus/orgs",
      "repos_url": "https://api.github.com/users/martinus/repos",
      "events_url": "https://api.github.com/users/martinus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinus/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "martinus",
      "id": 14386,
      "node_id": "MDQ6VXNlcjE0Mzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinus",
      "html_url": "https://github.com/martinus",
      "followers_url": "https://api.github.com/users/martinus/followers",
      "following_url": "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
      "organizations_url": "https://api.github.com/users/martinus/orgs",
      "repos_url": "https://api.github.com/users/martinus/repos",
      "events_url": "https://api.github.com/users/martinus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinus/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d3c6f8bfa12f78635752878b28e66cec0c85d4a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3c6f8bfa12f78635752878b28e66cec0c85d4a9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d3c6f8bfa12f78635752878b28e66cec0c85d4a9"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 46,
      "deletions": 1
    },
    "files": [
      {
        "sha": "6503e3872849b186624819652bbf56d2e6007756",
        "filename": "src/bench/bench_bitcoin.cpp",
        "status": "modified",
        "additions": 46,
        "deletions": 1,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1f10f1663e53474038b9111c4264a250cffe7501/src/bench/bench_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1f10f1663e53474038b9111c4264a250cffe7501/src/bench/bench_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench_bitcoin.cpp?ref=1f10f1663e53474038b9111c4264a250cffe7501",
        "patch": "@@ -4,6 +4,7 @@\n \n #include <bench/bench.h>\n \n+#include <clientversion.h>\n #include <crypto/sha256.h>\n #include <util/strencodings.h>\n #include <util/system.h>\n@@ -50,7 +51,51 @@ int main(int argc, char** argv)\n     }\n \n     if (HelpRequested(argsman)) {\n-        std::cout << argsman.GetHelpMessage();\n+        std::cout << \"Usage:  bench_bitcoin [options]\\n\"\n+                     \"\\n\"\n+                  << argsman.GetHelpMessage()\n+                  << \"Description:\\n\"\n+                     \"\\n\"\n+                     \"  bench_bitcoin executes microbenchmarks. The quality of the benchmark results\\n\"\n+                     \"  highly depend on the stability of the machine. It can sometimes be difficult\\n\"\n+                     \"  to get stable, repeatable results, so here are a few tips:\\n\"\n+                     \"\\n\"\n+                     \"  * Use pyperf [1] to disable frequency scaling, turbo boost etc. For best\\n\"\n+                     \"    results, use CPU pinning and CPU isolation (see [2]).\\n\"\n+                     \"\\n\"\n+                     \"  * Each call of run() should do exactly the same work. E.g. inserting into\\n\"\n+                     \"    a std::vector doesn't do that as it will reallocate on certain calls. Make\\n\"\n+                     \"    sure each run has exactly the same preconditions.\\n\"\n+                     \"\\n\"\n+                     \"  * If results are still not reliable, increase runtime with e.g.\\n\"\n+                     \"    -min_time=5000 to let a benchmark run for at least 5 seconds.\\n\"\n+                     \"\\n\"\n+                     \"  * bench_bitcoin uses nanobench [3] for which there is extensive\\n\"\n+                     \"    documentation available online.\\n\"\n+                     \"\\n\"\n+                     \"Environment Variables:\\n\"\n+                     \"\\n\"\n+                     \"  To attach a profiler you can run a benchmark in endless mode. This can be\\n\"\n+                     \"  done with the environment variable NANOBENCH_ENDLESS. E.g. like so:\\n\"\n+                     \"\\n\"\n+                     \"    NANOBENCH_ENDLESS=MuHash ./bench_bitcoin -filter=MuHash\\n\"\n+                     \"\\n\"\n+                     \"  In rare cases it can be useful to suppress stability warnings. This can be\\n\"\n+                     \"  done with the environment variable NANOBENCH_SUPPRESS_WARNINGS, e.g:\\n\"\n+                     \"\\n\"\n+                     \"    NANOBENCH_SUPPRESS_WARNINGS=1 ./bench_bitcoin\\n\"\n+                     \"\\n\"\n+                     \"Notes:\\n\"\n+                     \"\\n\"\n+                     \"  1. pyperf\\n\"\n+                     \"     https://github.com/psf/pyperf\\n\"\n+                     \"\\n\"\n+                     \"  2. CPU pinning & isolation\\n\"\n+                     \"     https://pyperf.readthedocs.io/en/latest/system.html\\n\"\n+                     \"\\n\"\n+                     \"  3. nanobench\\n\"\n+                     \"     https://github.com/martinus/nanobench\\n\"\n+                     \"\\n\";\n \n         return EXIT_SUCCESS;\n     }"
      }
    ]
  },
  {
    "sha": "d312fd94a1083cdbf071f2888aab43c62d358151",
    "node_id": "C_kwDOABII59oAKGQzMTJmZDk0YTEwODNjZGJmMDcxZjI4ODhhYWI0M2M2MmQzNTgxNTE",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-09-16T13:08:19Z"
      },
      "committer": {
        "name": "Martin Ankerl",
        "email": "martin.ankerl@gmail.com",
        "date": "2021-09-21T12:45:49Z"
      },
      "message": "bench: clean up includes\n\nDrops unneeded and adds missing includes",
      "tree": {
        "sha": "decb2bc7dd62262c93490d463657922d8220776a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/decb2bc7dd62262c93490d463657922d8220776a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d312fd94a1083cdbf071f2888aab43c62d358151",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCAAdFiEEqyQrdqB7R6j2Hv2k++qtf8b//oEFAmFJ0/0ACgkQ++qtf8b/\n/oG6PQv+NXDNQ3FrMEViiX4lZsLQ/s6HRK6TP4bzkatq3p0GxW405VjbnQFKa6H5\nzh5Ohuc5BZjPfMYd+Z5bsMyBiE0D6KHbT2pQXFbnxxhFV+itM54MWtMXRYW6V/Ph\nCm6QVa3xRSyLsxNBpeVwEToC+a+cfE4yWllrOzd0EOur91yKZ4HLdcuOxNgODrNg\nN36hn44+YkgJSyaX1tFI56KGMLUqd6fcNZAWvIKlPCYOIVsCFE4u2HtOsp9OXX0X\nggSs3gHMdL3Euftfe9BZbd2uVgjj2Nu9gDk1//8W9syOKvfU99Ox/gQdjgjikAXb\nLQ9vIBhlpLyKoWPy2kMCSpu9vPTTcWPLGN15u0IbSMFWJAQHbMW6Rp9aU1tMbNap\nO3wTKxxnWj+JP8VRxGG8Tc7Ni0XTWqOjSpMuG4VtX0NoYC+r16wN5x4LYd7gWMpL\n2rVjda+/LxJhC2OcF7CrqUAyF9GbqQHZYnqqmjqtXsZedji7Dxu18ad0JM8zg/kN\nkvThJbLe\n=VD79\n-----END PGP SIGNATURE-----",
        "payload": "tree decb2bc7dd62262c93490d463657922d8220776a\nparent 1f10f1663e53474038b9111c4264a250cffe7501\nauthor Jon Atack <jon@atack.com> 1631797699 +0200\ncommitter Martin Ankerl <martin.ankerl@gmail.com> 1632228349 +0200\n\nbench: clean up includes\n\nDrops unneeded and adds missing includes\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d312fd94a1083cdbf071f2888aab43c62d358151",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d312fd94a1083cdbf071f2888aab43c62d358151",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d312fd94a1083cdbf071f2888aab43c62d358151/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "martinus",
      "id": 14386,
      "node_id": "MDQ6VXNlcjE0Mzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinus",
      "html_url": "https://github.com/martinus",
      "followers_url": "https://api.github.com/users/martinus/followers",
      "following_url": "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
      "organizations_url": "https://api.github.com/users/martinus/orgs",
      "repos_url": "https://api.github.com/users/martinus/repos",
      "events_url": "https://api.github.com/users/martinus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinus/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1f10f1663e53474038b9111c4264a250cffe7501",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1f10f1663e53474038b9111c4264a250cffe7501",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1f10f1663e53474038b9111c4264a250cffe7501"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 14,
      "deletions": 4
    },
    "files": [
      {
        "sha": "bc3685818e5683618ee7222b09fe1233c7b6d2f5",
        "filename": "src/bench/bech32.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d312fd94a1083cdbf071f2888aab43c62d358151/src/bench/bech32.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d312fd94a1083cdbf071f2888aab43c62d358151/src/bench/bech32.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bech32.cpp?ref=d312fd94a1083cdbf071f2888aab43c62d358151",
        "patch": "@@ -3,7 +3,6 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <bench/bench.h>\n-#include <bench/nanobench.h>\n \n #include <bech32.h>\n #include <util/strencodings.h>"
      },
      {
        "sha": "030bc43396165c9f6e00c5f0f982f5972d9d9a8c",
        "filename": "src/bench/bench.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d312fd94a1083cdbf071f2888aab43c62d358151/src/bench/bench.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d312fd94a1083cdbf071f2888aab43c62d358151/src/bench/bench.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.cpp?ref=d312fd94a1083cdbf071f2888aab43c62d358151",
        "patch": "@@ -4,11 +4,18 @@\n \n #include <bench/bench.h>\n \n-#include <chainparams.h>\n #include <test/util/setup_common.h>\n-#include <validation.h>\n \n+#include <chrono>\n+#include <fstream>\n+#include <functional>\n+#include <iostream>\n+#include <map>\n #include <regex>\n+#include <string>\n+#include <vector>\n+\n+using namespace std::chrono_literals;\n \n const std::function<void(const std::string&)> G_TEST_LOG_FUN{};\n "
      },
      {
        "sha": "ebf5160758ae7889df49effe9906489d7d98490c",
        "filename": "src/bench/bench_bitcoin.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d312fd94a1083cdbf071f2888aab43c62d358151/src/bench/bench_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d312fd94a1083cdbf071f2888aab43c62d358151/src/bench/bench_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench_bitcoin.cpp?ref=d312fd94a1083cdbf071f2888aab43c62d358151",
        "patch": "@@ -9,7 +9,11 @@\n #include <util/strencodings.h>\n #include <util/system.h>\n \n-#include <memory>\n+#include <chrono>\n+#include <cstdint>\n+#include <iostream>\n+#include <sstream>\n+#include <vector>\n \n static const char* DEFAULT_BENCH_FILTER = \".*\";\n static constexpr int64_t DEFAULT_MIN_TIME_MS{10};"
      }
    ]
  },
  {
    "sha": "da4e2f1da0388d424659fa8c853fcaf37b4b5959",
    "node_id": "C_kwDOABII59oAKGRhNGUyZjFkYTAzODhkNDI0NjU5ZmE4Yzg1M2ZjYWYzN2I0YjU5NTk",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-09-16T13:08:58Z"
      },
      "committer": {
        "name": "Martin Ankerl",
        "email": "martin.ankerl@gmail.com",
        "date": "2021-09-21T12:45:49Z"
      },
      "message": "bench: various args improvements\n\n- use ALLOW_BOOL for -list arg instead of ALLOW_ANY\n- touch up `-asymptote=<n1,n2,n3...>` help\n- pack Args struct a bit more efficiently\n- handle args in alphabetical order",
      "tree": {
        "sha": "fc4254c15d7c454b6d8f2fb66a0b0526fbe8b2f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fc4254c15d7c454b6d8f2fb66a0b0526fbe8b2f2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da4e2f1da0388d424659fa8c853fcaf37b4b5959",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCAAdFiEEqyQrdqB7R6j2Hv2k++qtf8b//oEFAmFJ0/0ACgkQ++qtf8b/\n/oH9jgv/Vly3Tr7sw+IEsGXKKtXP4LWaBR+u4O+Iu7+ypwdYJMUeUryi9i44j2qU\nIc6pjKBTecDgj8b0iDGuH7ao4xI9FK7bsv+QCjxp2vbKrNALyGvPS2p7Tzgey+G6\nuYO5f/zOHqCOZUlEpzy0sWcEqs5Nx9Ym9hY1/ONt4Pca4Bhb6gCYrHPtx5OKECTx\n5aubnKkym4/Nfd8qdM6fqyRA+KYIhmbvQqetsQPuyuYeb4quezXtPpBcWYF5jWym\n6x8sdi6pNCeDdpMhiNEvLrwPKu0a0Lr6j9vOltBZ4+xSd/uCuOS4gpzdqdCq7rf+\n+RLixutur0q77KPoA66Oz/6eooHM9mzXElxafcfY4LksnMV9w7a+pmvmc5Qe4Q8L\njyGYVVGAEwnmSSXaW9Rk6I9jgy320vZ8G0P+nOJk3YF0sk48MfXSIXTVi3d8Tpb1\nGBRMZwWsWctAwtpW3yM2XuEqpK9xMsJcY5TZ3Za69XN+pI1Is4jyasVNnoglXtAF\nVYV7ocqx\n=jggm\n-----END PGP SIGNATURE-----",
        "payload": "tree fc4254c15d7c454b6d8f2fb66a0b0526fbe8b2f2\nparent d312fd94a1083cdbf071f2888aab43c62d358151\nauthor Jon Atack <jon@atack.com> 1631797738 +0200\ncommitter Martin Ankerl <martin.ankerl@gmail.com> 1632228349 +0200\n\nbench: various args improvements\n\n- use ALLOW_BOOL for -list arg instead of ALLOW_ANY\n- touch up `-asymptote=<n1,n2,n3...>` help\n- pack Args struct a bit more efficiently\n- handle args in alphabetical order\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da4e2f1da0388d424659fa8c853fcaf37b4b5959",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/da4e2f1da0388d424659fa8c853fcaf37b4b5959",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da4e2f1da0388d424659fa8c853fcaf37b4b5959/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "martinus",
      "id": 14386,
      "node_id": "MDQ6VXNlcjE0Mzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinus",
      "html_url": "https://github.com/martinus",
      "followers_url": "https://api.github.com/users/martinus/followers",
      "following_url": "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
      "organizations_url": "https://api.github.com/users/martinus/orgs",
      "repos_url": "https://api.github.com/users/martinus/repos",
      "events_url": "https://api.github.com/users/martinus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinus/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d312fd94a1083cdbf071f2888aab43c62d358151",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d312fd94a1083cdbf071f2888aab43c62d358151",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d312fd94a1083cdbf071f2888aab43c62d358151"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "b0e4006ee32aaf63d3b710a46d5c59b99cb14178",
        "filename": "src/bench/bench.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da4e2f1da0388d424659fa8c853fcaf37b4b5959/src/bench/bench.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da4e2f1da0388d424659fa8c853fcaf37b4b5959/src/bench/bench.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.h?ref=da4e2f1da0388d424659fa8c853fcaf37b4b5959",
        "patch": "@@ -41,12 +41,12 @@ using ankerl::nanobench::Bench;\n typedef std::function<void(Bench&)> BenchFunction;\n \n struct Args {\n-    std::string regex_filter;\n     bool is_list_only;\n     std::chrono::milliseconds min_time;\n     std::vector<double> asymptote;\n     std::string output_csv;\n     std::string output_json;\n+    std::string regex_filter;\n };\n \n class BenchRunner"
      },
      {
        "sha": "33a9ea80edc1790a39981cf94ac18c199797ad81",
        "filename": "src/bench/bench_bitcoin.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da4e2f1da0388d424659fa8c853fcaf37b4b5959/src/bench/bench_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da4e2f1da0388d424659fa8c853fcaf37b4b5959/src/bench/bench_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench_bitcoin.cpp?ref=da4e2f1da0388d424659fa8c853fcaf37b4b5959",
        "patch": "@@ -22,9 +22,9 @@ static void SetupBenchArgs(ArgsManager& argsman)\n {\n     SetupHelpOptions(argsman);\n \n-    argsman.AddArg(\"-asymptote=n1,n2,n3,...\", \"Test asymptotic growth of the runtime of an algorithm, if supported by the benchmark\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-asymptote=<n1,n2,n3,...>\", \"Test asymptotic growth of the runtime of an algorithm, if supported by the benchmark\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-filter=<regex>\", strprintf(\"Regular expression filter to select benchmark by name (default: %s)\", DEFAULT_BENCH_FILTER), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n-    argsman.AddArg(\"-list\", \"List benchmarks without executing them\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-list\", \"List benchmarks without executing them\", ArgsManager::ALLOW_BOOL, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-min_time=<milliseconds>\", strprintf(\"Minimum runtime per benchmark, in milliseconds (default: %d)\", DEFAULT_MIN_TIME_MS), ArgsManager::ALLOW_INT, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-output_csv=<output.csv>\", \"Generate CSV file with the most important benchmark results\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-output_json=<output.json>\", \"Generate JSON file with all benchmark results\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n@@ -105,12 +105,12 @@ int main(int argc, char** argv)\n     }\n \n     benchmark::Args args;\n-    args.regex_filter = argsman.GetArg(\"-filter\", DEFAULT_BENCH_FILTER);\n-    args.is_list_only = argsman.GetBoolArg(\"-list\", false);\n     args.asymptote = parseAsymptote(argsman.GetArg(\"-asymptote\", \"\"));\n+    args.is_list_only = argsman.GetBoolArg(\"-list\", false);\n     args.min_time = std::chrono::milliseconds(argsman.GetArg(\"-min_time\", DEFAULT_MIN_TIME_MS));\n     args.output_csv = argsman.GetArg(\"-output_csv\", \"\");\n     args.output_json = argsman.GetArg(\"-output_json\", \"\");\n+    args.regex_filter = argsman.GetArg(\"-filter\", DEFAULT_BENCH_FILTER);\n \n     benchmark::BenchRunner::RunAll(args);\n "
      }
    ]
  },
  {
    "sha": "e148a5233292d156cda76cb20afb6641fc20f25e",
    "node_id": "C_kwDOABII59oAKGUxNDhhNTIzMzI5MmQxNTZjZGE3NmNiMjBhZmI2NjQxZmMyMGYyNWU",
    "commit": {
      "author": {
        "name": "Martin Ankerl",
        "email": "martin.ankerl@gmail.com",
        "date": "2021-09-18T12:12:43Z"
      },
      "committer": {
        "name": "Martin Ankerl",
        "email": "martin.ankerl@gmail.com",
        "date": "2021-09-21T12:45:49Z"
      },
      "message": "bench: fixed ubsan implicit conversion\n\nThe benchmarks can now run much longer due to the minimum of 10ms or\ndirectly with -min_time. With -min_time=20000 I could trigger two ubsan\nerrors in the benchmarks, which are fixed in this commit by using\nunsigned type and adding \"& 0xFF\".",
      "tree": {
        "sha": "a51d7fe8c61d86c1254d443e78b5dc31fd4d2d88",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a51d7fe8c61d86c1254d443e78b5dc31fd4d2d88"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e148a5233292d156cda76cb20afb6641fc20f25e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCAAdFiEEqyQrdqB7R6j2Hv2k++qtf8b//oEFAmFJ0/0ACgkQ++qtf8b/\n/oEl7Qv/TrIU0fmdVrwjX04PTAfUcE+5c+L0K45KdIGfHRN2t+o4pZk1O5Dx6yjr\newBUYXgG8z3JawDkQD8JAqdf54J7MRAFCsDWTNQ5EU8OjF/4/NLvT/qUzNrtukA3\nAH2xlvSnJLfDySsnIEF1F2kbtPVNasOmLdwCmb4mTnpVMWQqEjD/hyRbmu2C/V5W\nzxHEMLW7PQIGOdYNU1PDrpcvnx6uSyty6UhI41nDmAKebky7J+OShVTGbORTGh+l\nbFQBk7ty7w0D9NVRBgpjz0eViC8khAQwrwOjEiBqrx9tnma4K8EWZt8KcFFY8igB\njBDbxmfpCcFg2Xk0q9OXK3x+HdSzNGd1531uabWF8QE1w1MmKBtnFGo8UYBofCT2\neK0NF2VqxJxDn7NyfbDPjsbIM7Jk/p4sF8ID691nQUqDvNKHJVmh5HlPJad8D7I5\n8IrtF63Sl8PxRzOJ9VnwEHauVTwHtlYTE2XZHbBgATCxWqz1wNX+Z85Xa1z5qBxD\nB+0PwnsK\n=4fMD\n-----END PGP SIGNATURE-----",
        "payload": "tree a51d7fe8c61d86c1254d443e78b5dc31fd4d2d88\nparent da4e2f1da0388d424659fa8c853fcaf37b4b5959\nauthor Martin Ankerl <martin.ankerl@gmail.com> 1631967163 +0200\ncommitter Martin Ankerl <martin.ankerl@gmail.com> 1632228349 +0200\n\nbench: fixed ubsan implicit conversion\n\nThe benchmarks can now run much longer due to the minimum of 10ms or\ndirectly with -min_time. With -min_time=20000 I could trigger two ubsan\nerrors in the benchmarks, which are fixed in this commit by using\nunsigned type and adding \"& 0xFF\".\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e148a5233292d156cda76cb20afb6641fc20f25e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e148a5233292d156cda76cb20afb6641fc20f25e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e148a5233292d156cda76cb20afb6641fc20f25e/comments",
    "author": {
      "login": "martinus",
      "id": 14386,
      "node_id": "MDQ6VXNlcjE0Mzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinus",
      "html_url": "https://github.com/martinus",
      "followers_url": "https://api.github.com/users/martinus/followers",
      "following_url": "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
      "organizations_url": "https://api.github.com/users/martinus/orgs",
      "repos_url": "https://api.github.com/users/martinus/repos",
      "events_url": "https://api.github.com/users/martinus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinus/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "martinus",
      "id": 14386,
      "node_id": "MDQ6VXNlcjE0Mzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinus",
      "html_url": "https://github.com/martinus",
      "followers_url": "https://api.github.com/users/martinus/followers",
      "following_url": "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
      "organizations_url": "https://api.github.com/users/martinus/orgs",
      "repos_url": "https://api.github.com/users/martinus/repos",
      "events_url": "https://api.github.com/users/martinus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinus/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "da4e2f1da0388d424659fa8c853fcaf37b4b5959",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da4e2f1da0388d424659fa8c853fcaf37b4b5959",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da4e2f1da0388d424659fa8c853fcaf37b4b5959"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 10,
      "deletions": 10
    },
    "files": [
      {
        "sha": "d36e504bfcb6c03444e73bcc6186ce1b70c3850e",
        "filename": "src/bench/crypto_hash.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e148a5233292d156cda76cb20afb6641fc20f25e/src/bench/crypto_hash.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e148a5233292d156cda76cb20afb6641fc20f25e/src/bench/crypto_hash.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/crypto_hash.cpp?ref=e148a5233292d156cda76cb20afb6641fc20f25e",
        "patch": "@@ -110,9 +110,9 @@ static void MuHash(benchmark::Bench& bench)\n {\n     MuHash3072 acc;\n     unsigned char key[32] = {0};\n-    int i = 0;\n+    uint32_t i = 0;\n     bench.run([&] {\n-        key[0] = ++i;\n+        key[0] = ++i & 0xFF;\n         acc *= MuHash3072(key);\n     });\n }"
      },
      {
        "sha": "28167767dbeef4d02dde2419b60db1573dc65232",
        "filename": "src/bench/rollingbloom.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e148a5233292d156cda76cb20afb6641fc20f25e/src/bench/rollingbloom.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e148a5233292d156cda76cb20afb6641fc20f25e/src/bench/rollingbloom.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/rollingbloom.cpp?ref=e148a5233292d156cda76cb20afb6641fc20f25e",
        "patch": "@@ -13,16 +13,16 @@ static void RollingBloom(benchmark::Bench& bench)\n     uint32_t count = 0;\n     bench.run([&] {\n         count++;\n-        data[0] = count;\n-        data[1] = count >> 8;\n-        data[2] = count >> 16;\n-        data[3] = count >> 24;\n+        data[0] = count & 0xFF;\n+        data[1] = (count >> 8) & 0xFF;\n+        data[2] = (count >> 16) & 0xFF;\n+        data[3] = (count >> 24) & 0xFF;\n         filter.insert(data);\n \n-        data[0] = count >> 24;\n-        data[1] = count >> 16;\n-        data[2] = count >> 8;\n-        data[3] = count;\n+        data[0] = (count >> 24) & 0xFF;\n+        data[1] = (count >> 16) & 0xFF;\n+        data[2] = (count >> 8) & 0xFF;\n+        data[3] = count & 0xFF;\n         filter.contains(data);\n     });\n }"
      }
    ]
  }
]