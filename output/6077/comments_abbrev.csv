sipa,2015-04-29T16:55:22Z,"Reimplemented the mrumap using boost::multiindex, which is more compact, and offers erasing elements too. Entries are now removed from the tx validation cache when they are accepted into a block, meaning the last 33k valid _unconfirmed_ transactions are cached, rather than just the last 33k whatsoever.\n",https://github.com/bitcoin/bitcoin/pull/6077#issuecomment-97503598,97503598,
sipa,2015-04-30T15:35:47Z,Rebased on new #6064.\n,https://github.com/bitcoin/bitcoin/pull/6077#issuecomment-97842060,97842060,
gavinandresen,2015-05-15T21:01:10Z,"Concept ACK. I hope to run some benchmarks to see how much this speeds up validation with a stream of real 'tx' and 'block' messages and different -dbcache settings, but that probably won't happen until I'm back from New York late next week.\n\nI also want to benchmark #5967 and #6102 .\n",https://github.com/bitcoin/bitcoin/pull/6077#issuecomment-102524850,102524850,
sipa,2015-06-14T14:12:41Z,Rebased.\n,https://github.com/bitcoin/bitcoin/pull/6077#issuecomment-111829686,111829686,
sipa,2015-06-16T14:49:17Z,Actually rebased.\n,https://github.com/bitcoin/bitcoin/pull/6077#issuecomment-112457785,112457785,
sipa,2015-06-21T13:22:07Z,"Been running on bitcoin.sipa.be for a week, no problems.\n",https://github.com/bitcoin/bitcoin/pull/6077#issuecomment-113901138,113901138,
sipa,2015-07-27T12:51:12Z,ping\n,https://github.com/bitcoin/bitcoin/pull/6077#issuecomment-125194768,125194768,
jgarzik,2015-07-27T13:19:28Z,"""it works"" positive & negative test + review ACK\n",https://github.com/bitcoin/bitcoin/pull/6077#issuecomment-125201759,125201759,
sipa,2015-07-27T13:30:31Z,Rebased.\n,https://github.com/bitcoin/bitcoin/pull/6077#issuecomment-125205256,125205256,
laanwj,2015-07-27T14:13:48Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/6077#issuecomment-125220828,125220828,
laanwj,2015-07-27T16:39:07Z,Backported to 0.11 as bc484ef8db02715e283e4cddd2c972316c0688dd\n,https://github.com/bitcoin/bitcoin/pull/6077#issuecomment-125267302,125267302,
jtimon,2015-07-28T16:21:52Z,"I missed this..\nWe want to cache unconfirmed transactions, sure. But why cache the transactions that are being confirmed in connectBlock?\n\nEDIT: As in, couldn't this have been done in AcceptToMemoryPool instead of CheckScript (which, by the way, it's called twice inside AcceptToMemoryPool)?\n",https://github.com/bitcoin/bitcoin/pull/6077#issuecomment-125668953,125668953,
sipa,2015-07-28T16:24:38Z,"@jtimon To avoid rechecking the same transaction when it enters a block, when it has already been verified for the mempool (or whatever other reason).\n",https://github.com/bitcoin/bitcoin/pull/6077#issuecomment-125670268,125670268,
jtimon,2015-07-28T16:28:54Z,"@sipa Thanks, I guess this the simplest way to do that right now.\n",https://github.com/bitcoin/bitcoin/pull/6077#issuecomment-125671545,125671545,
sdaftuar,2015-07-28T17:54:04Z,"As mentioned on IRC, I think there's a problem with transaction checks involving block height.  Consider a coinbase spend that is valid when the transaction arrives and is accepted into the mempool, but is invalid at any earlier block height because of the coinbase maturity test.  If there's a reorg, then when validating blocks at earlier heights, we'd consider blocks valid even if they include th",https://github.com/bitcoin/bitcoin/pull/6077#issuecomment-125694204,125694204,
jtimon,2015-07-28T18:02:32Z,"@sdaftuar now that you say it, that's why I repeated the checks even when the transaction had been fully validated here: https://github.com/jtimon/bitcoin/commit/935ee1ec875308f27339418363c787ec061d335f#diff-7ec3c68a81efff79b6ca22ac1f1eabbaR779\nMaybe I was too fast closing #6445 (which should solve the problem) after all...\n",https://github.com/bitcoin/bitcoin/pull/6077#issuecomment-125696777,125696777,
sipa,2015-07-28T18:14:16Z,"Going to revert, thanks for pointing this out, @sdaftuar.\n",https://github.com/bitcoin/bitcoin/pull/6077#issuecomment-125700728,125700728,
jtimon,2015-08-21T23:04:30Z,"This wasn't fully reverted, https://github.com/sipa/bitcoin/commit/517e6dd25618522c716e64859554b0f29c6e65d0 broke #6235 and  #6382 \n@laanwj don't merge #6235 because that would break the build on master. Fixing now...\n",https://github.com/bitcoin/bitcoin/pull/6077#issuecomment-133584041,133584041,
