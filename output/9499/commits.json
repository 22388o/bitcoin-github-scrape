[
  {
    "sha": "c73554042886fb63fb48edf29cf827951edde341",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNzM1NTQwNDI4ODZmYjYzZmI0OGVkZjI5Y2Y4Mjc5NTFlZGRlMzQx",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-09T19:11:15Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-09T19:15:18Z"
      },
      "message": "Move ORPHAN constants from validation.h to net_processing.h",
      "tree": {
        "sha": "0e39f29c4109e7dea62ce51296d1aac9f3a499fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0e39f29c4109e7dea62ce51296d1aac9f3a499fe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c73554042886fb63fb48edf29cf827951edde341",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c73554042886fb63fb48edf29cf827951edde341",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c73554042886fb63fb48edf29cf827951edde341",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c73554042886fb63fb48edf29cf827951edde341/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "07fd147b9f12e9205afd66a624edce357977d615",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07fd147b9f12e9205afd66a624edce357977d615",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/07fd147b9f12e9205afd66a624edce357977d615"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 7,
      "deletions": 6
    },
    "files": [
      {
        "sha": "92ea21df724ccf74c90ee6a3a4b3ec5345b0d4ff",
        "filename": "src/net_processing.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c73554042886fb63fb48edf29cf827951edde341/src/net_processing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c73554042886fb63fb48edf29cf827951edde341/src/net_processing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.h?ref=c73554042886fb63fb48edf29cf827951edde341",
        "patch": "@@ -9,6 +9,13 @@\n #include \"net.h\"\n #include \"validationinterface.h\"\n \n+/** Default for -maxorphantx, maximum number of orphan transactions kept in memory */\n+static const unsigned int DEFAULT_MAX_ORPHAN_TRANSACTIONS = 100;\n+/** Expiration time for orphan transactions in seconds */\n+static const int64_t ORPHAN_TX_EXPIRE_TIME = 20 * 60;\n+/** Minimum time between orphan transactions expire time checks in seconds */\n+static const int64_t ORPHAN_TX_EXPIRE_INTERVAL = 5 * 60;\n+\n /** Register with a network node to receive its signals */\n void RegisterNodeSignals(CNodeSignals& nodeSignals);\n /** Unregister a network node */"
      },
      {
        "sha": "7848c787aacd9e6947a6bc2fa93059e4739f36d6",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c73554042886fb63fb48edf29cf827951edde341/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c73554042886fb63fb48edf29cf827951edde341/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=c73554042886fb63fb48edf29cf827951edde341",
        "patch": "@@ -58,12 +58,6 @@ static const CAmount DEFAULT_TRANSACTION_MAXFEE = 0.1 * COIN;\n static const CAmount HIGH_TX_FEE_PER_KB = 0.01 * COIN;\n //! -maxtxfee will warn if called with a higher fee than this amount (in satoshis)\n static const CAmount HIGH_MAX_TX_FEE = 100 * HIGH_TX_FEE_PER_KB;\n-/** Default for -maxorphantx, maximum number of orphan transactions kept in memory */\n-static const unsigned int DEFAULT_MAX_ORPHAN_TRANSACTIONS = 100;\n-/** Expiration time for orphan transactions in seconds */\n-static const int64_t ORPHAN_TX_EXPIRE_TIME = 20 * 60;\n-/** Minimum time between orphan transactions expire time checks in seconds */\n-static const int64_t ORPHAN_TX_EXPIRE_INTERVAL = 5 * 60;\n /** Default for -limitancestorcount, max number of in-mempool ancestors */\n static const unsigned int DEFAULT_ANCESTOR_LIMIT = 25;\n /** Default for -limitancestorsize, maximum kilobytes of tx + all in-mempool ancestors */"
      }
    ]
  },
  {
    "sha": "edded808fc4eee94c178e1779b90d1c87a08c23a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZGRlZDgwOGZjNGVlZTk0YzE3OGUxNzc5YjkwZDFjODdhMDhjMjNh",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2016-12-05T02:53:26Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-09T19:15:18Z"
      },
      "message": "Make ATMP optionally return the CTransactionRefs it replaced",
      "tree": {
        "sha": "a12312fa8616361dca5ca877a4d8e580892c19bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a12312fa8616361dca5ca877a4d8e580892c19bc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/edded808fc4eee94c178e1779b90d1c87a08c23a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/edded808fc4eee94c178e1779b90d1c87a08c23a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/edded808fc4eee94c178e1779b90d1c87a08c23a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/edded808fc4eee94c178e1779b90d1c87a08c23a/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c73554042886fb63fb48edf29cf827951edde341",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c73554042886fb63fb48edf29cf827951edde341",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c73554042886fb63fb48edf29cf827951edde341"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 20,
      "deletions": 13
    },
    "files": [
      {
        "sha": "e01879adb4109616fa0f5a09490b406cb4a20b8e",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/edded808fc4eee94c178e1779b90d1c87a08c23a/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/edded808fc4eee94c178e1779b90d1c87a08c23a/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=edded808fc4eee94c178e1779b90d1c87a08c23a",
        "patch": "@@ -899,7 +899,7 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n         // push to local node and sync with wallets\n         CValidationState state;\n         bool fMissingInputs;\n-        if (!AcceptToMemoryPool(mempool, state, std::move(tx), fLimitFree, &fMissingInputs, false, nMaxRawTxFee)) {\n+        if (!AcceptToMemoryPool(mempool, state, std::move(tx), fLimitFree, &fMissingInputs, NULL, false, nMaxRawTxFee)) {\n             if (state.IsInvalid()) {\n                 throw JSONRPCError(RPC_TRANSACTION_REJECTED, strprintf(\"%i: %s\", state.GetRejectCode(), state.GetRejectReason()));\n             } else {"
      },
      {
        "sha": "c5367208baaef50c803c446cc61cbaef1242a7c0",
        "filename": "src/test/txvalidationcache_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/edded808fc4eee94c178e1779b90d1c87a08c23a/src/test/txvalidationcache_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/edded808fc4eee94c178e1779b90d1c87a08c23a/src/test/txvalidationcache_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/txvalidationcache_tests.cpp?ref=edded808fc4eee94c178e1779b90d1c87a08c23a",
        "patch": "@@ -23,7 +23,7 @@ ToMemPool(CMutableTransaction& tx)\n     LOCK(cs_main);\n \n     CValidationState state;\n-    return AcceptToMemoryPool(mempool, state, MakeTransactionRef(tx), false, NULL, true, 0);\n+    return AcceptToMemoryPool(mempool, state, MakeTransactionRef(tx), false, NULL, NULL, true, 0);\n }\n \n BOOST_FIXTURE_TEST_CASE(tx_mempool_block_doublespend, TestChain100Setup)"
      },
      {
        "sha": "ff1d9b0dc10dde090a088d1a34c0a021ed7cd2ee",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 7,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/edded808fc4eee94c178e1779b90d1c87a08c23a/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/edded808fc4eee94c178e1779b90d1c87a08c23a/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=edded808fc4eee94c178e1779b90d1c87a08c23a",
        "patch": "@@ -538,8 +538,8 @@ static bool IsCurrentForFeeEstimation()\n }\n \n bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const CTransactionRef& ptx, bool fLimitFree,\n-                              bool* pfMissingInputs, int64_t nAcceptTime, bool fOverrideMempoolLimit, const CAmount& nAbsurdFee,\n-                              std::vector<uint256>& vHashTxnToUncache)\n+                              bool* pfMissingInputs, int64_t nAcceptTime, std::list<CTransactionRef>* plTxnReplaced,\n+                              bool fOverrideMempoolLimit, const CAmount& nAbsurdFee, std::vector<uint256>& vHashTxnToUncache)\n {\n     const CTransaction& tx = *ptx;\n     const uint256 hash = tx.GetHash();\n@@ -950,6 +950,8 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n                     hash.ToString(),\n                     FormatMoney(nModifiedFees - nConflictingFees),\n                     (int)nSize - (int)nConflictingSize);\n+            if (plTxnReplaced)\n+                plTxnReplaced->push_back(it->GetSharedTx());\n         }\n         pool.RemoveStaged(allConflicting, false);\n \n@@ -975,10 +977,11 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n }\n \n bool AcceptToMemoryPoolWithTime(CTxMemPool& pool, CValidationState &state, const CTransactionRef &tx, bool fLimitFree,\n-                        bool* pfMissingInputs, int64_t nAcceptTime, bool fOverrideMempoolLimit, const CAmount nAbsurdFee)\n+                        bool* pfMissingInputs, int64_t nAcceptTime, std::list<CTransactionRef>* plTxnReplaced,\n+                        bool fOverrideMempoolLimit, const CAmount nAbsurdFee)\n {\n     std::vector<uint256> vHashTxToUncache;\n-    bool res = AcceptToMemoryPoolWorker(pool, state, tx, fLimitFree, pfMissingInputs, nAcceptTime, fOverrideMempoolLimit, nAbsurdFee, vHashTxToUncache);\n+    bool res = AcceptToMemoryPoolWorker(pool, state, tx, fLimitFree, pfMissingInputs, nAcceptTime, plTxnReplaced, fOverrideMempoolLimit, nAbsurdFee, vHashTxToUncache);\n     if (!res) {\n         BOOST_FOREACH(const uint256& hashTx, vHashTxToUncache)\n             pcoinsTip->Uncache(hashTx);\n@@ -990,9 +993,10 @@ bool AcceptToMemoryPoolWithTime(CTxMemPool& pool, CValidationState &state, const\n }\n \n bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransactionRef &tx, bool fLimitFree,\n-                        bool* pfMissingInputs, bool fOverrideMempoolLimit, const CAmount nAbsurdFee)\n+                        bool* pfMissingInputs, std::list<CTransactionRef>* plTxnReplaced,\n+                        bool fOverrideMempoolLimit, const CAmount nAbsurdFee)\n {\n-    return AcceptToMemoryPoolWithTime(pool, state, tx, fLimitFree, pfMissingInputs, GetTime(), fOverrideMempoolLimit, nAbsurdFee);\n+    return AcceptToMemoryPoolWithTime(pool, state, tx, fLimitFree, pfMissingInputs, GetTime(), plTxnReplaced, fOverrideMempoolLimit, nAbsurdFee);\n }\n \n /** Return transaction in txOut, and if it was found inside a block, its hash is placed in hashBlock */\n@@ -2138,7 +2142,7 @@ bool static DisconnectTip(CValidationState& state, const CChainParams& chainpara\n             const CTransaction& tx = *it;\n             // ignore validation errors in resurrected transactions\n             CValidationState stateDummy;\n-            if (tx.IsCoinBase() || !AcceptToMemoryPool(mempool, stateDummy, it, false, NULL, true)) {\n+            if (tx.IsCoinBase() || !AcceptToMemoryPool(mempool, stateDummy, it, false, NULL, NULL, true)) {\n                 mempool.removeRecursive(tx);\n             } else if (mempool.exists(tx.GetHash())) {\n                 vHashUpdate.push_back(tx.GetHash());"
      },
      {
        "sha": "0c79ed30b7bf0c4c633d9d580f20e60b48f41feb",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/edded808fc4eee94c178e1779b90d1c87a08c23a/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/edded808fc4eee94c178e1779b90d1c87a08c23a/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=edded808fc4eee94c178e1779b90d1c87a08c23a",
        "patch": "@@ -304,13 +304,16 @@ void FlushStateToDisk();\n /** Prune block files and flush state to disk. */\n void PruneAndFlush();\n \n-/** (try to) add transaction to memory pool **/\n+/** (try to) add transaction to memory pool\n+ * plTxnReplaced will be appended to with all transactions replaced from mempool **/\n bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransactionRef &tx, bool fLimitFree,\n-                        bool* pfMissingInputs, bool fOverrideMempoolLimit=false, const CAmount nAbsurdFee=0);\n+                        bool* pfMissingInputs, std::list<CTransactionRef>* plTxnReplaced = NULL,\n+                        bool fOverrideMempoolLimit=false, const CAmount nAbsurdFee=0);\n \n /** (try to) add transaction to memory pool with a specified acceptance time **/\n bool AcceptToMemoryPoolWithTime(CTxMemPool& pool, CValidationState &state, const CTransactionRef &tx, bool fLimitFree,\n-                        bool* pfMissingInputs, int64_t nAcceptTime, bool fOverrideMempoolLimit=false, const CAmount nAbsurdFee=0);\n+                        bool* pfMissingInputs, int64_t nAcceptTime, std::list<CTransactionRef>* plTxnReplaced = NULL,\n+                        bool fOverrideMempoolLimit=false, const CAmount nAbsurdFee=0);\n \n /** Convert CValidationState to a human-readable message for logging */\n std::string FormatStateMessage(const CValidationState &state);"
      },
      {
        "sha": "a199591ad12d4404f78cc995449a886c3f8689a7",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/edded808fc4eee94c178e1779b90d1c87a08c23a/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/edded808fc4eee94c178e1779b90d1c87a08c23a/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=edded808fc4eee94c178e1779b90d1c87a08c23a",
        "patch": "@@ -3847,5 +3847,5 @@ int CMerkleTx::GetBlocksToMaturity() const\n \n bool CMerkleTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState& state)\n {\n-    return ::AcceptToMemoryPool(mempool, state, tx, true, NULL, false, nAbsurdFee);\n+    return ::AcceptToMemoryPool(mempool, state, tx, true, NULL, NULL, false, nAbsurdFee);\n }"
      }
    ]
  },
  {
    "sha": "1531652e02d856c1b8c3ba6f6e51e1983ac0540c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNTMxNjUyZTAyZDg1NmMxYjhjM2JhNmY2ZTUxZTE5ODNhYzA1NDBj",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-09T19:38:06Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-10T19:48:42Z"
      },
      "message": "Keep shared_ptrs to recently-replaced txn for compact blocks",
      "tree": {
        "sha": "ff7caff18cef736fd802f3c7e0684d1e20fcf895",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ff7caff18cef736fd802f3c7e0684d1e20fcf895"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1531652e02d856c1b8c3ba6f6e51e1983ac0540c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1531652e02d856c1b8c3ba6f6e51e1983ac0540c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1531652e02d856c1b8c3ba6f6e51e1983ac0540c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1531652e02d856c1b8c3ba6f6e51e1983ac0540c/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "edded808fc4eee94c178e1779b90d1c87a08c23a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/edded808fc4eee94c178e1779b90d1c87a08c23a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/edded808fc4eee94c178e1779b90d1c87a08c23a"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 25,
      "deletions": 2
    },
    "files": [
      {
        "sha": "7a89fb88798b4d3b9dbdf2365aeaf4e89519d759",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1531652e02d856c1b8c3ba6f6e51e1983ac0540c/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1531652e02d856c1b8c3ba6f6e51e1983ac0540c/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=1531652e02d856c1b8c3ba6f6e51e1983ac0540c",
        "patch": "@@ -346,6 +346,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-maxorphantx=<n>\", strprintf(_(\"Keep at most <n> unconnectable transactions in memory (default: %u)\"), DEFAULT_MAX_ORPHAN_TRANSACTIONS));\n     strUsage += HelpMessageOpt(\"-maxmempool=<n>\", strprintf(_(\"Keep the transaction memory pool below <n> megabytes (default: %u)\"), DEFAULT_MAX_MEMPOOL_SIZE));\n     strUsage += HelpMessageOpt(\"-mempoolexpiry=<n>\", strprintf(_(\"Do not keep transactions in the mempool longer than <n> hours (default: %u)\"), DEFAULT_MEMPOOL_EXPIRY));\n+    strUsage += HelpMessageOpt(\"-blockreconstructionextratxn=<n>\", strprintf(_(\"Extra transactions to keep in memory for compact block reconstructions (default: %u)\"), DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN));\n     strUsage += HelpMessageOpt(\"-par=<n>\", strprintf(_(\"Set the number of script verification threads (%u to %d, 0 = auto, <0 = leave that many cores free, default: %d)\"),\n         -GetNumCores(), MAX_SCRIPTCHECK_THREADS, DEFAULT_SCRIPTCHECK_THREADS));\n #ifndef WIN32"
      },
      {
        "sha": "c549b9eb9e46b3157e5e17c65e033a3ed2ee0a1f",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 2,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1531652e02d856c1b8c3ba6f6e51e1983ac0540c/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1531652e02d856c1b8c3ba6f6e51e1983ac0540c/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=1531652e02d856c1b8c3ba6f6e51e1983ac0540c",
        "patch": "@@ -59,6 +59,9 @@ map<uint256, COrphanTx> mapOrphanTransactions GUARDED_BY(cs_main);\n map<COutPoint, set<map<uint256, COrphanTx>::iterator, IteratorComparator>> mapOrphanTransactionsByPrev GUARDED_BY(cs_main);\n void EraseOrphansFor(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+static size_t vExtraTxnForCompactIt = 0;\n+static std::vector<std::pair<uint256, CTransactionRef>> vExtraTxnForCompact GUARDED_BY(cs_main);\n+\n static const uint64_t RANDOMIZER_ID_ADDRESS_RELAY = 0x3cac0035b5866b90ULL; // SHA256(\"main address relay\")[0:8]\n \n // Internal stuff\n@@ -586,6 +589,17 @@ void UnregisterNodeSignals(CNodeSignals& nodeSignals)\n // mapOrphanTransactions\n //\n \n+void AddToCompactExtraTransactions(const CTransactionRef& tx)\n+{\n+    size_t max_extra_txn = GetArg(\"-blockreconstructionextratxn\", DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN);\n+    if (max_extra_txn <= 0)\n+        return;\n+    if (!vExtraTxnForCompact.size())\n+        vExtraTxnForCompact.resize(max_extra_txn);\n+    vExtraTxnForCompact[vExtraTxnForCompactIt] = std::make_pair(tx->GetWitnessHash(), tx);\n+    vExtraTxnForCompactIt = (vExtraTxnForCompactIt + 1) % max_extra_txn;\n+}\n+\n bool AddOrphanTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n {\n     const uint256& hash = tx->GetHash();\n@@ -1615,7 +1629,9 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n         pfrom->setAskFor.erase(inv.hash);\n         mapAlreadyAskedFor.erase(inv.hash);\n \n-        if (!AlreadyHave(inv) && AcceptToMemoryPool(mempool, state, ptx, true, &fMissingInputs)) {\n+        std::list<CTransactionRef> lRemovedTxn;\n+\n+        if (!AlreadyHave(inv) && AcceptToMemoryPool(mempool, state, ptx, true, &fMissingInputs, &lRemovedTxn)) {\n             mempool.check(pcoinsTip);\n             RelayTransaction(tx, connman);\n             for (unsigned int i = 0; i < tx.vout.size(); i++) {\n@@ -1653,7 +1669,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n \n                     if (setMisbehaving.count(fromPeer))\n                         continue;\n-                    if (AcceptToMemoryPool(mempool, stateDummy, porphanTx, true, &fMissingInputs2)) {\n+                    if (AcceptToMemoryPool(mempool, stateDummy, porphanTx, true, &fMissingInputs2, &lRemovedTxn)) {\n                         LogPrint(\"mempool\", \"   accepted orphan tx %s\\n\", orphanHash.ToString());\n                         RelayTransaction(orphanTx, connman);\n                         for (unsigned int i = 0; i < orphanTx.vout.size(); i++) {\n@@ -1743,6 +1759,10 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                 }\n             }\n         }\n+\n+        for (const CTransactionRef& tx : lRemovedTxn)\n+            AddToCompactExtraTransactions(tx);\n+\n         int nDoS = 0;\n         if (state.IsInvalid(nDoS))\n         {"
      },
      {
        "sha": "a338e14a97b0679f16a14efee4a13e6016f13c65",
        "filename": "src/net_processing.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1531652e02d856c1b8c3ba6f6e51e1983ac0540c/src/net_processing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1531652e02d856c1b8c3ba6f6e51e1983ac0540c/src/net_processing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.h?ref=1531652e02d856c1b8c3ba6f6e51e1983ac0540c",
        "patch": "@@ -15,6 +15,8 @@ static const unsigned int DEFAULT_MAX_ORPHAN_TRANSACTIONS = 100;\n static const int64_t ORPHAN_TX_EXPIRE_TIME = 20 * 60;\n /** Minimum time between orphan transactions expire time checks in seconds */\n static const int64_t ORPHAN_TX_EXPIRE_INTERVAL = 5 * 60;\n+/** Default number of orphan+recently-replaced txn to keep around for block reconstruction */\n+static const unsigned int DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN = 100;\n \n /** Register with a network node to receive its signals */\n void RegisterNodeSignals(CNodeSignals& nodeSignals);"
      }
    ]
  },
  {
    "sha": "93380c5247526e2248248a7d539233ec48d11bdd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MzM4MGM1MjQ3NTI2ZTIyNDgyNDhhN2Q1MzkyMzNlYzQ4ZDExYmRk",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2016-12-05T04:44:37Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-10T19:48:42Z"
      },
      "message": "Use replaced transactions in compact block reconstruction",
      "tree": {
        "sha": "6e174a66769400485cebf2b2b8dcee1dd1202e3f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6e174a66769400485cebf2b2b8dcee1dd1202e3f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/93380c5247526e2248248a7d539233ec48d11bdd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93380c5247526e2248248a7d539233ec48d11bdd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/93380c5247526e2248248a7d539233ec48d11bdd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93380c5247526e2248248a7d539233ec48d11bdd/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1531652e02d856c1b8c3ba6f6e51e1983ac0540c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1531652e02d856c1b8c3ba6f6e51e1983ac0540c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1531652e02d856c1b8c3ba6f6e51e1983ac0540c"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 41,
      "deletions": 8
    },
    "files": [
      {
        "sha": "43b4cb9b862ac38283825505cbf7ee0f2720dfad",
        "filename": "src/blockencodings.cpp",
        "status": "modified",
        "additions": 31,
        "deletions": 1,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93380c5247526e2248248a7d539233ec48d11bdd/src/blockencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93380c5247526e2248248a7d539233ec48d11bdd/src/blockencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockencodings.cpp?ref=93380c5247526e2248248a7d539233ec48d11bdd",
        "patch": "@@ -47,7 +47,7 @@ uint64_t CBlockHeaderAndShortTxIDs::GetShortID(const uint256& txhash) const {\n \n \n \n-ReadStatus PartiallyDownloadedBlock::InitData(const CBlockHeaderAndShortTxIDs& cmpctblock) {\n+ReadStatus PartiallyDownloadedBlock::InitData(const CBlockHeaderAndShortTxIDs& cmpctblock, std::vector<std::pair<uint256, CTransactionRef>>& extra_txn) {\n     if (cmpctblock.header.IsNull() || (cmpctblock.shorttxids.empty() && cmpctblock.prefilledtxn.empty()))\n         return READ_STATUS_INVALID;\n     if (cmpctblock.shorttxids.size() + cmpctblock.prefilledtxn.size() > MAX_BLOCK_BASE_SIZE / MIN_TRANSACTION_BASE_SIZE)\n@@ -104,6 +104,7 @@ ReadStatus PartiallyDownloadedBlock::InitData(const CBlockHeaderAndShortTxIDs& c\n         return READ_STATUS_FAILED; // Short ID collision\n \n     std::vector<bool> have_txn(txn_available.size());\n+    {\n     LOCK(pool->cs);\n     const std::vector<std::pair<uint256, CTxMemPool::txiter> >& vTxHashes = pool->vTxHashes;\n     for (size_t i = 0; i < vTxHashes.size(); i++) {\n@@ -130,6 +131,35 @@ ReadStatus PartiallyDownloadedBlock::InitData(const CBlockHeaderAndShortTxIDs& c\n         if (mempool_count == shorttxids.size())\n             break;\n     }\n+    }\n+\n+    for (size_t i = 0; i < extra_txn.size(); i++) {\n+        uint64_t shortid = cmpctblock.GetShortID(extra_txn[i].first);\n+        std::unordered_map<uint64_t, uint16_t>::iterator idit = shorttxids.find(shortid);\n+        if (idit != shorttxids.end()) {\n+            if (!have_txn[idit->second]) {\n+                txn_available[idit->second] = extra_txn[i].second;\n+                have_txn[idit->second]  = true;\n+                mempool_count++;\n+            } else {\n+                // If we find two mempool txn that match the short id, just request it.\n+                // This should be rare enough that the extra bandwidth doesn't matter,\n+                // but eating a round-trip due to FillBlock failure would be annoying\n+                // Note that we dont want duplication between extra_txn and mempool to\n+                // trigger this case, so we compare witness hashes first\n+                if (txn_available[idit->second] &&\n+                        txn_available[idit->second]->GetWitnessHash() != extra_txn[i].second->GetWitnessHash()) {\n+                    txn_available[idit->second].reset();\n+                    mempool_count--;\n+                }\n+            }\n+        }\n+        // Though ideally we'd continue scanning for the two-txn-match-shortid case,\n+        // the performance win of an early exit here is too good to pass up and worth\n+        // the extra risk.\n+        if (mempool_count == shorttxids.size())\n+            break;\n+    }\n \n     LogPrint(\"cmpctblock\", \"Initialized PartiallyDownloadedBlock for block %s using a cmpctblock of size %lu\\n\", cmpctblock.header.GetHash().ToString(), GetSerializeSize(cmpctblock, SER_NETWORK, PROTOCOL_VERSION));\n "
      },
      {
        "sha": "7bbd9c661098cf2aae692f831b376044f5fee779",
        "filename": "src/blockencodings.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93380c5247526e2248248a7d539233ec48d11bdd/src/blockencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93380c5247526e2248248a7d539233ec48d11bdd/src/blockencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockencodings.h?ref=93380c5247526e2248248a7d539233ec48d11bdd",
        "patch": "@@ -200,7 +200,8 @@ class PartiallyDownloadedBlock {\n     CBlockHeader header;\n     PartiallyDownloadedBlock(CTxMemPool* poolIn) : pool(poolIn) {}\n \n-    ReadStatus InitData(const CBlockHeaderAndShortTxIDs& cmpctblock);\n+    // extra_txn is a list of extra transactions to look at, in <witness hash, reference> form\n+    ReadStatus InitData(const CBlockHeaderAndShortTxIDs& cmpctblock, std::vector<std::pair<uint256, CTransactionRef>>& extra_txn);\n     bool IsTxAvailable(size_t index) const;\n     ReadStatus FillBlock(CBlock& block, const std::vector<CTransactionRef>& vtx_missing);\n };"
      },
      {
        "sha": "8e23e54e06530d210fdb004566e5088f0ab69daf",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93380c5247526e2248248a7d539233ec48d11bdd/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93380c5247526e2248248a7d539233ec48d11bdd/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=93380c5247526e2248248a7d539233ec48d11bdd",
        "patch": "@@ -1879,7 +1879,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                 }\n \n                 PartiallyDownloadedBlock& partialBlock = *(*queuedBlockIt)->partialBlock;\n-                ReadStatus status = partialBlock.InitData(cmpctblock);\n+                ReadStatus status = partialBlock.InitData(cmpctblock, vExtraTxnForCompact);\n                 if (status == READ_STATUS_INVALID) {\n                     MarkBlockAsReceived(pindex->GetBlockHash()); // Reset in-flight state in case of whitelist\n                     Misbehaving(pfrom->GetId(), 100);\n@@ -1921,7 +1921,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                 // Optimistically try to reconstruct anyway since we might be\n                 // able to without any round trips.\n                 PartiallyDownloadedBlock tempBlock(&mempool);\n-                ReadStatus status = tempBlock.InitData(cmpctblock);\n+                ReadStatus status = tempBlock.InitData(cmpctblock, vExtraTxnForCompact);\n                 if (status != READ_STATUS_OK) {\n                     // TODO: don't ignore failures\n                     return true;"
      },
      {
        "sha": "311ac024f3b2c8ff9077772fabc6681b54d51706",
        "filename": "src/test/blockencodings_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93380c5247526e2248248a7d539233ec48d11bdd/src/test/blockencodings_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93380c5247526e2248248a7d539233ec48d11bdd/src/test/blockencodings_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/blockencodings_tests.cpp?ref=93380c5247526e2248248a7d539233ec48d11bdd",
        "patch": "@@ -11,6 +11,8 @@\n \n #include <boost/test/unit_test.hpp>\n \n+std::vector<std::pair<uint256, CTransactionRef>> extra_txn;\n+\n struct RegtestingSetup : public TestingSetup {\n     RegtestingSetup() : TestingSetup(CBaseChainParams::REGTEST) {}\n };\n@@ -73,7 +75,7 @@ BOOST_AUTO_TEST_CASE(SimpleRoundTripTest)\n         stream >> shortIDs2;\n \n         PartiallyDownloadedBlock partialBlock(&pool);\n-        BOOST_CHECK(partialBlock.InitData(shortIDs2) == READ_STATUS_OK);\n+        BOOST_CHECK(partialBlock.InitData(shortIDs2, extra_txn) == READ_STATUS_OK);\n         BOOST_CHECK( partialBlock.IsTxAvailable(0));\n         BOOST_CHECK(!partialBlock.IsTxAvailable(1));\n         BOOST_CHECK( partialBlock.IsTxAvailable(2));\n@@ -179,7 +181,7 @@ BOOST_AUTO_TEST_CASE(NonCoinbasePreforwardRTTest)\n         stream >> shortIDs2;\n \n         PartiallyDownloadedBlock partialBlock(&pool);\n-        BOOST_CHECK(partialBlock.InitData(shortIDs2) == READ_STATUS_OK);\n+        BOOST_CHECK(partialBlock.InitData(shortIDs2, extra_txn) == READ_STATUS_OK);\n         BOOST_CHECK(!partialBlock.IsTxAvailable(0));\n         BOOST_CHECK( partialBlock.IsTxAvailable(1));\n         BOOST_CHECK( partialBlock.IsTxAvailable(2));\n@@ -245,7 +247,7 @@ BOOST_AUTO_TEST_CASE(SufficientPreforwardRTTest)\n         stream >> shortIDs2;\n \n         PartiallyDownloadedBlock partialBlock(&pool);\n-        BOOST_CHECK(partialBlock.InitData(shortIDs2) == READ_STATUS_OK);\n+        BOOST_CHECK(partialBlock.InitData(shortIDs2, extra_txn) == READ_STATUS_OK);\n         BOOST_CHECK( partialBlock.IsTxAvailable(0));\n         BOOST_CHECK( partialBlock.IsTxAvailable(1));\n         BOOST_CHECK( partialBlock.IsTxAvailable(2));\n@@ -300,7 +302,7 @@ BOOST_AUTO_TEST_CASE(EmptyBlockRoundTripTest)\n         stream >> shortIDs2;\n \n         PartiallyDownloadedBlock partialBlock(&pool);\n-        BOOST_CHECK(partialBlock.InitData(shortIDs2) == READ_STATUS_OK);\n+        BOOST_CHECK(partialBlock.InitData(shortIDs2, extra_txn) == READ_STATUS_OK);\n         BOOST_CHECK(partialBlock.IsTxAvailable(0));\n \n         CBlock block2;"
      }
    ]
  },
  {
    "sha": "7f8c8cab1e537809848088d3bfaa13ecca7ac8cc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZjhjOGNhYjFlNTM3ODA5ODQ4MDg4ZDNiZmFhMTNlY2NhN2FjOGNj",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-09T19:38:16Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-10T19:48:42Z"
      },
      "message": "Consider all orphan txn for compact-block-extra-txn cache",
      "tree": {
        "sha": "3e0d5a7cbbac21b2733614bb47fec7eb09cb2d38",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3e0d5a7cbbac21b2733614bb47fec7eb09cb2d38"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7f8c8cab1e537809848088d3bfaa13ecca7ac8cc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f8c8cab1e537809848088d3bfaa13ecca7ac8cc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7f8c8cab1e537809848088d3bfaa13ecca7ac8cc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f8c8cab1e537809848088d3bfaa13ecca7ac8cc/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "93380c5247526e2248248a7d539233ec48d11bdd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93380c5247526e2248248a7d539233ec48d11bdd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/93380c5247526e2248248a7d539233ec48d11bdd"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "bdcfacc06ab12342e43857b937bfe0d2f8cc2aeb",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f8c8cab1e537809848088d3bfaa13ecca7ac8cc/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f8c8cab1e537809848088d3bfaa13ecca7ac8cc/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=7f8c8cab1e537809848088d3bfaa13ecca7ac8cc",
        "patch": "@@ -626,6 +626,8 @@ bool AddOrphanTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRE\n         mapOrphanTransactionsByPrev[txin.prevout].insert(ret.first);\n     }\n \n+    AddToCompactExtraTransactions(tx);\n+\n     LogPrint(\"mempool\", \"stored orphan tx %s (mapsz %u outsz %u)\\n\", hash.ToString(),\n              mapOrphanTransactions.size(), mapOrphanTransactionsByPrev.size());\n     return true;"
      }
    ]
  },
  {
    "sha": "863edb45b9841c3058e883015c7576e6f69e3cc6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NjNlZGI0NWI5ODQxYzMwNThlODgzMDE1Yzc1NzZlNmY2OWUzY2M2",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-09T19:30:43Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-10T19:48:42Z"
      },
      "message": "Consider all (<100k memusage) txn for compact-block-extra-txn cache",
      "tree": {
        "sha": "335a844cde6814b6d6ee4f5a67904aabf9943a59",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/335a844cde6814b6d6ee4f5a67904aabf9943a59"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/863edb45b9841c3058e883015c7576e6f69e3cc6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/863edb45b9841c3058e883015c7576e6f69e3cc6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/863edb45b9841c3058e883015c7576e6f69e3cc6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/863edb45b9841c3058e883015c7576e6f69e3cc6/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7f8c8cab1e537809848088d3bfaa13ecca7ac8cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f8c8cab1e537809848088d3bfaa13ecca7ac8cc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7f8c8cab1e537809848088d3bfaa13ecca7ac8cc"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "6025615e4405e6f9b5df6e8fcc06e1dfdba1fc15",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/863edb45b9841c3058e883015c7576e6f69e3cc6/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/863edb45b9841c3058e883015c7576e6f69e3cc6/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=863edb45b9841c3058e883015c7576e6f69e3cc6",
        "patch": "@@ -1741,7 +1741,10 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                 // See https://github.com/bitcoin/bitcoin/issues/8279 for details.\n                 assert(recentRejects);\n                 recentRejects->insert(tx.GetHash());\n-            }\n+                if (RecursiveDynamicUsage(*ptx) < 100000)\n+                    AddToCompactExtraTransactions(ptx);\n+            } else if (tx.HasWitness() && RecursiveDynamicUsage(*ptx) < 100000)\n+                AddToCompactExtraTransactions(ptx);\n \n             if (pfrom->fWhitelisted && GetBoolArg(\"-whitelistforcerelay\", DEFAULT_WHITELISTFORCERELAY)) {\n                 // Always relay transactions received from whitelisted peers, even"
      }
    ]
  },
  {
    "sha": "b55b4163462756cbb2341294b839a881333d8f1e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNTViNDE2MzQ2Mjc1NmNiYjIzNDEyOTRiODM5YTg4MTMzM2Q4ZjFl",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-12T20:19:14Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-12T20:19:14Z"
      },
      "message": "Add extra_count lower bound to compact reconstruction debug print",
      "tree": {
        "sha": "e6f6baa895c098e7181263579bd3b7fd8e4b6369",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e6f6baa895c098e7181263579bd3b7fd8e4b6369"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b55b4163462756cbb2341294b839a881333d8f1e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b55b4163462756cbb2341294b839a881333d8f1e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b55b4163462756cbb2341294b839a881333d8f1e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b55b4163462756cbb2341294b839a881333d8f1e/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "863edb45b9841c3058e883015c7576e6f69e3cc6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/863edb45b9841c3058e883015c7576e6f69e3cc6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/863edb45b9841c3058e883015c7576e6f69e3cc6"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 4,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c27cde2162f59129703a3b2f23c84706fcaecb8b",
        "filename": "src/blockencodings.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b55b4163462756cbb2341294b839a881333d8f1e/src/blockencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b55b4163462756cbb2341294b839a881333d8f1e/src/blockencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockencodings.cpp?ref=b55b4163462756cbb2341294b839a881333d8f1e",
        "patch": "@@ -141,6 +141,7 @@ ReadStatus PartiallyDownloadedBlock::InitData(const CBlockHeaderAndShortTxIDs& c\n                 txn_available[idit->second] = extra_txn[i].second;\n                 have_txn[idit->second]  = true;\n                 mempool_count++;\n+                extra_count++;\n             } else {\n                 // If we find two mempool txn that match the short id, just request it.\n                 // This should be rare enough that the extra bandwidth doesn't matter,\n@@ -151,6 +152,7 @@ ReadStatus PartiallyDownloadedBlock::InitData(const CBlockHeaderAndShortTxIDs& c\n                         txn_available[idit->second]->GetWitnessHash() != extra_txn[i].second->GetWitnessHash()) {\n                     txn_available[idit->second].reset();\n                     mempool_count--;\n+                    extra_count--;\n                 }\n             }\n         }\n@@ -206,7 +208,7 @@ ReadStatus PartiallyDownloadedBlock::FillBlock(CBlock& block, const std::vector<\n         return READ_STATUS_CHECKBLOCK_FAILED;\n     }\n \n-    LogPrint(\"cmpctblock\", \"Successfully reconstructed block %s with %lu txn prefilled, %lu txn from mempool and %lu txn requested\\n\", hash.ToString(), prefilled_count, mempool_count, vtx_missing.size());\n+    LogPrint(\"cmpctblock\", \"Successfully reconstructed block %s with %lu txn prefilled, %lu txn from mempool (incl at least %lu from extra pool) and %lu txn requested\\n\", hash.ToString(), prefilled_count, mempool_count, extra_count, vtx_missing.size());\n     if (vtx_missing.size() < 5) {\n         for (const auto& tx : vtx_missing)\n             LogPrint(\"cmpctblock\", \"Reconstructed block %s required tx %s\\n\", hash.ToString(), tx->GetHash().ToString());"
      },
      {
        "sha": "971476cbbdaeff4e5dfb94c37ec5aa766170a1b8",
        "filename": "src/blockencodings.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b55b4163462756cbb2341294b839a881333d8f1e/src/blockencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b55b4163462756cbb2341294b839a881333d8f1e/src/blockencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockencodings.h?ref=b55b4163462756cbb2341294b839a881333d8f1e",
        "patch": "@@ -194,7 +194,7 @@ class CBlockHeaderAndShortTxIDs {\n class PartiallyDownloadedBlock {\n protected:\n     std::vector<CTransactionRef> txn_available;\n-    size_t prefilled_count = 0, mempool_count = 0;\n+    size_t prefilled_count = 0, mempool_count = 0, extra_count = 0;\n     CTxMemPool* pool;\n public:\n     CBlockHeader header;"
      }
    ]
  },
  {
    "sha": "fac4c78028d132ee7becc1dc54a0c881ae1a0287",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWM0Yzc4MDI4ZDEzMmVlN2JlY2MxZGM1NGEwYzg4MWFlMWEwMjg3",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-12T20:20:11Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-12T20:20:11Z"
      },
      "message": "Make PartiallyDownloadedBlock::InitData's second param const",
      "tree": {
        "sha": "279ba5b403821cc7750a12d1453c93a57faed2e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/279ba5b403821cc7750a12d1453c93a57faed2e8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fac4c78028d132ee7becc1dc54a0c881ae1a0287",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac4c78028d132ee7becc1dc54a0c881ae1a0287",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fac4c78028d132ee7becc1dc54a0c881ae1a0287",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac4c78028d132ee7becc1dc54a0c881ae1a0287/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b55b4163462756cbb2341294b839a881333d8f1e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b55b4163462756cbb2341294b839a881333d8f1e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b55b4163462756cbb2341294b839a881333d8f1e"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "48431cfb3c7b5fa69dc1414d5e482d8a4f4d2746",
        "filename": "src/blockencodings.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac4c78028d132ee7becc1dc54a0c881ae1a0287/src/blockencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac4c78028d132ee7becc1dc54a0c881ae1a0287/src/blockencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockencodings.cpp?ref=fac4c78028d132ee7becc1dc54a0c881ae1a0287",
        "patch": "@@ -47,7 +47,7 @@ uint64_t CBlockHeaderAndShortTxIDs::GetShortID(const uint256& txhash) const {\n \n \n \n-ReadStatus PartiallyDownloadedBlock::InitData(const CBlockHeaderAndShortTxIDs& cmpctblock, std::vector<std::pair<uint256, CTransactionRef>>& extra_txn) {\n+ReadStatus PartiallyDownloadedBlock::InitData(const CBlockHeaderAndShortTxIDs& cmpctblock, const std::vector<std::pair<uint256, CTransactionRef>>& extra_txn) {\n     if (cmpctblock.header.IsNull() || (cmpctblock.shorttxids.empty() && cmpctblock.prefilledtxn.empty()))\n         return READ_STATUS_INVALID;\n     if (cmpctblock.shorttxids.size() + cmpctblock.prefilledtxn.size() > MAX_BLOCK_BASE_SIZE / MIN_TRANSACTION_BASE_SIZE)"
      },
      {
        "sha": "281db9fe01f32dcf423a8c64bd934bba1a3f69fd",
        "filename": "src/blockencodings.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac4c78028d132ee7becc1dc54a0c881ae1a0287/src/blockencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac4c78028d132ee7becc1dc54a0c881ae1a0287/src/blockencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockencodings.h?ref=fac4c78028d132ee7becc1dc54a0c881ae1a0287",
        "patch": "@@ -201,7 +201,7 @@ class PartiallyDownloadedBlock {\n     PartiallyDownloadedBlock(CTxMemPool* poolIn) : pool(poolIn) {}\n \n     // extra_txn is a list of extra transactions to look at, in <witness hash, reference> form\n-    ReadStatus InitData(const CBlockHeaderAndShortTxIDs& cmpctblock, std::vector<std::pair<uint256, CTransactionRef>>& extra_txn);\n+    ReadStatus InitData(const CBlockHeaderAndShortTxIDs& cmpctblock, const std::vector<std::pair<uint256, CTransactionRef>>& extra_txn);\n     bool IsTxAvailable(size_t index) const;\n     ReadStatus FillBlock(CBlock& block, const std::vector<CTransactionRef>& vtx_missing);\n };"
      }
    ]
  },
  {
    "sha": "1ccfe9b1c93460e3d345948c3740cfeca45e2ee3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxY2NmZTliMWM5MzQ2MGUzZDM0NTk0OGMzNzQwY2ZlY2E0NWUyZWUz",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-17T03:58:06Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-17T03:58:06Z"
      },
      "message": "Clarify comment about mempool/extra conflicts",
      "tree": {
        "sha": "6db980c650a08d5a72f486521fc187ca5b0da07c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6db980c650a08d5a72f486521fc187ca5b0da07c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1ccfe9b1c93460e3d345948c3740cfeca45e2ee3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ccfe9b1c93460e3d345948c3740cfeca45e2ee3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1ccfe9b1c93460e3d345948c3740cfeca45e2ee3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ccfe9b1c93460e3d345948c3740cfeca45e2ee3/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fac4c78028d132ee7becc1dc54a0c881ae1a0287",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac4c78028d132ee7becc1dc54a0c881ae1a0287",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fac4c78028d132ee7becc1dc54a0c881ae1a0287"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "4a311cbba2a65927eda6f798ff11ec6a4386c477",
        "filename": "src/blockencodings.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ccfe9b1c93460e3d345948c3740cfeca45e2ee3/src/blockencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ccfe9b1c93460e3d345948c3740cfeca45e2ee3/src/blockencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockencodings.cpp?ref=1ccfe9b1c93460e3d345948c3740cfeca45e2ee3",
        "patch": "@@ -143,7 +143,8 @@ ReadStatus PartiallyDownloadedBlock::InitData(const CBlockHeaderAndShortTxIDs& c\n                 mempool_count++;\n                 extra_count++;\n             } else {\n-                // If we find two mempool txn that match the short id, just request it.\n+                // If we find two mempool/extra txn that match the short id, just\n+                // request it.\n                 // This should be rare enough that the extra bandwidth doesn't matter,\n                 // but eating a round-trip due to FillBlock failure would be annoying\n                 // Note that we dont want duplication between extra_txn and mempool to"
      }
    ]
  },
  {
    "sha": "c5945804ca7e5edd9fce8c6de9b1f0ef775f9e79",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNTk0NTgwNGNhN2U1ZWRkOWZjZThjNmRlOWIxZjBlZjc3NWY5ZTc5",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-17T04:00:58Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-17T04:00:58Z"
      },
      "message": "Add braces around AddToCompactExtraTransactions",
      "tree": {
        "sha": "b6ed71d4a9ce0c15d6c5786bda5909040a8de994",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b6ed71d4a9ce0c15d6c5786bda5909040a8de994"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c5945804ca7e5edd9fce8c6de9b1f0ef775f9e79",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5945804ca7e5edd9fce8c6de9b1f0ef775f9e79",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c5945804ca7e5edd9fce8c6de9b1f0ef775f9e79",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5945804ca7e5edd9fce8c6de9b1f0ef775f9e79/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1ccfe9b1c93460e3d345948c3740cfeca45e2ee3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ccfe9b1c93460e3d345948c3740cfeca45e2ee3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1ccfe9b1c93460e3d345948c3740cfeca45e2ee3"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 4,
      "deletions": 2
    },
    "files": [
      {
        "sha": "b1e606abaed91de604a69a1c1b485fcb62d4baa7",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5945804ca7e5edd9fce8c6de9b1f0ef775f9e79/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5945804ca7e5edd9fce8c6de9b1f0ef775f9e79/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=c5945804ca7e5edd9fce8c6de9b1f0ef775f9e79",
        "patch": "@@ -1741,10 +1741,12 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                 // See https://github.com/bitcoin/bitcoin/issues/8279 for details.\n                 assert(recentRejects);\n                 recentRejects->insert(tx.GetHash());\n-                if (RecursiveDynamicUsage(*ptx) < 100000)\n+                if (RecursiveDynamicUsage(*ptx) < 100000) {\n                     AddToCompactExtraTransactions(ptx);\n-            } else if (tx.HasWitness() && RecursiveDynamicUsage(*ptx) < 100000)\n+                }\n+            } else if (tx.HasWitness() && RecursiveDynamicUsage(*ptx) < 100000) {\n                 AddToCompactExtraTransactions(ptx);\n+            }\n \n             if (pfrom->fWhitelisted && GetBoolArg(\"-whitelistforcerelay\", DEFAULT_WHITELISTFORCERELAY)) {\n                 // Always relay transactions received from whitelisted peers, even"
      }
    ]
  }
]