amitiuttarwar,2019-10-30 22:47:06,"@MarcoFalke updated `nNextInvSend`. Not sure how to unit test since the result of the poisson method would be different for two separate calls. LMK if you want deeper changes with chrono types, happy to update.",https://github.com/bitcoin/bitcoin/pull/17243#issuecomment-548144671,548144671,
MarcoFalke,2019-10-31 02:42:23,"You can set `g_mock_deterministic_tests = true;` for just your test case, then set it to `false` again at the end.",https://github.com/bitcoin/bitcoin/pull/17243#issuecomment-548193347,548193347,
amitiuttarwar,2019-11-01 00:12:13,@MarcoFalke added tests. Ready for review.,https://github.com/bitcoin/bitcoin/pull/17243#issuecomment-548617714,548617714,
MarcoFalke,2019-11-01 20:10:08,"ACK d504d70e602bf30aad18e1e5677daa3961757bb7\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK d504d70e602bf30aad18e1e5677daa3961757bb7\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgYJAv+Nkm4e1Ac/wfPzNKwyAfkC7oRMCGqY1IqPm0vCugazxm+02u7JFotM4",https://github.com/bitcoin/bitcoin/pull/17243#issuecomment-548933573,548933573,
ariard,2019-11-04 18:22:25,"ACK d504d70, checked directly on parent PR the rational of intended changes",https://github.com/bitcoin/bitcoin/pull/17243#issuecomment-549483290,549483290,
MarcoFalke,2019-11-04 18:25:23,"@amitiuttarwar This has three ACKs, so is ready to go. Do you want to address the nits or leave them for later?",https://github.com/bitcoin/bitcoin/pull/17243#issuecomment-549484405,549484405,
naumenkogs,2019-11-04 18:43:49,"ACK d504d70\nwilling to do quick re-ACK if those tiny nits are resolved :)",https://github.com/bitcoin/bitcoin/pull/17243#issuecomment-549491834,549491834,
ajtowns,2019-11-05 14:41:09,ACK 1a8f0d5a74d5cc0000456932babf35301f5c1686,https://github.com/bitcoin/bitcoin/pull/17243#issuecomment-549851932,549851932,
MarcoFalke,2019-11-05 15:26:32,"re-ACK 1a8f0d5a74d5cc0000456932babf35301f5c1686\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nre-ACK 1a8f0d5a74d5cc0000456932babf35301f5c1686\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjapAv+MgqGwdYAgJg/hzj7rhv2Fp+bXSWfAoF4Sgqeo7yZbQLfupqR",https://github.com/bitcoin/bitcoin/pull/17243#issuecomment-549872365,549872365,
naumenkogs,2019-11-05 16:22:54,"Is it a good idea to have both nNow and current_time? This might lead to counter-intuitive consequences, specifically in the test cases (I don't have the exact example right now).",https://github.com/bitcoin/bitcoin/pull/17243#issuecomment-549896622,549896622,
amitiuttarwar,2019-11-05 16:58:07,"@naumenkogs I'd like to work on replacing `nNow` in `SendMessages` entirely with `current_time`, but haven't prioritized yet bc I'm focused on rebroadcast stuff. \n\nAre your concerns limited to the test case introduced or do you also have concerns about the code path? I don't see how problems could occur, so I'd love if you could explain further? \n\n---\n\nah from IRL convo with AJ, he poi",https://github.com/bitcoin/bitcoin/pull/17243#issuecomment-549912129,549912129,
naumenkogs,2019-11-05 17:36:33,">tests based on what functionality executes based on clock time vs needing to update mocktime. Is that what you're alluding to?\n\nYes. Also, potentially future code in net_processing.\nAt the same time, I guess it blocks you from proceeding with rebroadcast (even in terms of better testing) **today.**\n\nACK 1a8f0d5, and let's merge it and come back to it later.",https://github.com/bitcoin/bitcoin/pull/17243#issuecomment-549930319,549930319,
MarcoFalke,2019-10-24 19:54:53,"```suggestion\n/** Return a timestamp in the future for exponentially distributed events. */\n```",https://github.com/bitcoin/bitcoin/pull/17243#discussion_r338762520,338762520,src/net.h
amitiuttarwar,2019-10-31 20:00:56,I'd rather have the comment draw attention to the fact that its just calling through to the other Poisson method. Esp with the other function signature & comment right there. ,https://github.com/bitcoin/bitcoin/pull/17243#discussion_r341339984,341339984,src/net.h
ariard,2019-11-01 20:57:48,"I think you can scope definition to inventory code part, would make code easier to read and also don't need to change drop constness of other current_time",https://github.com/bitcoin/bitcoin/pull/17243#discussion_r341748711,341748711,src/net_processing.cpp
amitiuttarwar,2019-11-03 05:14:47,tried to introduce scoping with `{ }` around the inventory code but found that `fFetch` is assigned between the two definitions of `current_time` and accessed after. is there a way to scope independently?,https://github.com/bitcoin/bitcoin/pull/17243#discussion_r341835416,341835416,src/net_processing.cpp
ajtowns,2019-11-04 14:54:28,`std::chrono::microseconds nNextInvsend{0};` seems like it would be fine?,https://github.com/bitcoin/bitcoin/pull/17243#discussion_r342090510,342090510,src/net.h
ajtowns,2019-11-04 15:04:15,"`std::chrono::microseconds now_chrono{now};` likewise, or could just say `::PoissonNextSend(std::chrono::microseconds{now}, std::chrono::seconds{average_interval_seconds})`",https://github.com/bitcoin/bitcoin/pull/17243#discussion_r342096079,342096079,src/test/net_tests.cpp
ariard,2019-11-04 18:21:43,"This compile : https://github.com/ariard/bitcoin/commit/1c1765e636db2c9484d10712596754dd774ed7bd, or are you describing a behavior change related with `fFetch` than I miss ?",https://github.com/bitcoin/bitcoin/pull/17243#discussion_r342198001,342198001,src/net_processing.cpp
amitiuttarwar,2019-11-05 15:44:57,"ah gotcha. I was hesitant to move the declaration of `current_time` bc of potential change in logic based on how long code execution between the two spots would take. maybe its ok but I didn't dig into it / want to make the PR harder to review. \n\nI'm going to leave it as is but thanks for the suggestion & clarification ",https://github.com/bitcoin/bitcoin/pull/17243#discussion_r342636002,342636002,src/net_processing.cpp
