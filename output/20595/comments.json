[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740230600",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20595#issuecomment-740230600",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20595",
    "id": 740230600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MDIzMDYwMA==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-07T22:55:09Z",
    "updated_at": "2020-12-07T22:55:09Z",
    "author_association": "MEMBER",
    "body": "@instagibbs @ajtowns Ping, it seems this may be fixing a regression caused by #17775 (see #20579).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740230600/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740319838",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20595#issuecomment-740319838",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20595",
    "id": 740319838,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MDMxOTgzOA==",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-08T02:29:43Z",
    "updated_at": "2020-12-08T02:29:43Z",
    "author_association": "MEMBER",
    "body": "Can you grab the example in the issue(or generate one) as a regression test?\n\nOn Tue, Dec 8, 2020, 7:37 AM Pieter Wuille <notifications@github.com> wrote:\n\n> *@sipa* commented on this pull request.\n> ------------------------------\n>\n> In src/core_read.cpp\n> <https://github.com/bitcoin/bitcoin/pull/20595#discussion_r537917709>:\n>\n> >          } catch (const std::exception&) {\n>              // Fall through.\n>          }\n>      }\n>\n> +    // Try decoding with legacy serialization, and remember if the result succesfully consumes the entire input.\n>\n> Fixed.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/20595#discussion_r537917709>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ABMAFU63TLZS43YZI27WVZ3STVRM7ANCNFSM4URDWYYQ>\n> .\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740319838/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740654420",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20595#issuecomment-740654420",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20595",
    "id": 740654420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MDY1NDQyMA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-08T14:31:58Z",
    "updated_at": "2020-12-08T14:31:58Z",
    "author_association": "MEMBER",
    "body": "It might be possible to harvest seeds from the decode_tx fuzz test which has good coverage for this: https://drahtbot.space/host_reports/DrahtBot/reports/coverage_fuzz/sipa/bitcoin/451556858a23d81f/fuzz.coverage/src/core_read.cpp.gcov.html",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740654420/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/741055296",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20595#issuecomment-741055296",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20595",
    "id": 741055296,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MTA1NTI5Ng==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-08T21:23:58Z",
    "updated_at": "2020-12-08T21:23:58Z",
    "author_association": "MEMBER",
    "body": "Restructured the code a bit, and added comments. Also added a regression test based on the example from #20579.\r\n\r\n@MarcoFalke I wrote a fuzzer to find transactions that decode incorrectly (see https://github.com/sipa/bitcoin/tree/202012_fancy_tx_hex_decode_fuzz). Turns out it's not very hard if you feed it a few real transactions as seeds, but they all look very weird. Using this we could probably quickly find extra conditions to add to CheckTxScriptsSanity, but I think we should keep that for a future PR.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/741055296/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/741894238",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20595#issuecomment-741894238",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20595",
    "id": 741894238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MTg5NDIzOA==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-09T16:40:06Z",
    "updated_at": "2020-12-09T16:40:06Z",
    "author_association": "MEMBER",
    "body": "Code review ACK 0f949cde3dff15170db7930b0f7345ff995c267d",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/741894238/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742144823",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20595#issuecomment-742144823",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20595",
    "id": 742144823,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjE0NDgyMw==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-10T00:13:05Z",
    "updated_at": "2020-12-10T00:13:05Z",
    "author_association": "MEMBER",
    "body": "Tested ACK 0f949cde3dff15170db7930b0f7345ff995c267d\r\n\r\nThe new naming, comments, and code organisation are much improved.\r\n\r\n<details><summary>Toyed with placing the <code>CheckTxScriptsSanity</code> calls right after setting each <code>ok_{extended,legacy}</code> but it's less readable.</summary><p>\r\n\r\n```diff\r\ndiff --git a/src/core_read.cpp b/src/core_read.cpp\r\nindex 7687a86185..fe64b7b95e 100644\r\n--- a/src/core_read.cpp\r\n+++ b/src/core_read.cpp\r\n@@ -148,37 +148,39 @@ static bool DecodeTx(CMutableTransaction& tx, const std::vector<unsigned char>&\r\n         CDataStream ssData(tx_data, SER_NETWORK, PROTOCOL_VERSION);\r\n         try {\r\n             ssData >> tx_extended;\r\n-            if (ssData.empty()) ok_extended = true;\r\n+            if (ssData.empty()) {\r\n+                ok_extended = true;\r\n+                // Optimization: if extended decoding succeeded and the result passes CheckTxScriptsSanity,\r\n+                // don't bother decoding the other way.\r\n+                if (CheckTxScriptsSanity(tx_extended)) {\r\n+                    tx = std::move(tx_extended);\r\n+                    return true;\r\n+                }\r\n+            }\r\n         } catch (const std::exception&) {\r\n             // Fall through.\r\n         }\r\n     }\r\n \r\n-    // Optimization: if extended decoding succeeded and the result passes CheckTxScriptsSanity,\r\n-    // don't bother decoding the other way.\r\n-    if (ok_extended && CheckTxScriptsSanity(tx_extended)) {\r\n-        tx = std::move(tx_extended);\r\n-        return true;\r\n-    }\r\n-\r\n     // Try decoding with legacy serialization, and remember if the result successfully consumes the entire input.\r\n     if (try_no_witness) {\r\n         CDataStream ssData(tx_data, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS);\r\n         try {\r\n             ssData >> tx_legacy;\r\n-            if (ssData.empty()) ok_legacy = true;\r\n+            if (ssData.empty()) {\r\n+                ok_legacy = true;\r\n+                // If legacy decoding succeeded and passes CheckTxScriptsSanity, that's our answer, as we know\r\n+                // at this point that extended decoding either failed or doesn't pass the sanity check.\r\n+                if (CheckTxScriptsSanity(tx_legacy)) {\r\n+                    tx = std::move(tx_legacy);\r\n+                    return true;\r\n+                }\r\n+            }\r\n         } catch (const std::exception&) {\r\n             // Fall through.\r\n         }\r\n     }\r\n \r\n-    // If legacy decoding succeeded and passes CheckTxScriptsSanity, that's our answer, as we know\r\n-    // at this point that extended decoding either failed or doesn't pass the sanity check.\r\n-    if (ok_legacy && CheckTxScriptsSanity(tx_legacy)) {\r\n-        tx = std::move(tx_legacy);\r\n-        return true;\r\n-    }\r\n-\r\n     // If extended decoding succeeded, and neither decoding passes sanity, return the extended one.\r\n```\r\n</p></details>\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742144823/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742425892",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20595#issuecomment-742425892",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20595",
    "id": 742425892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjQyNTg5Mg==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-10T10:18:09Z",
    "updated_at": "2020-12-10T10:18:09Z",
    "author_association": "MEMBER",
    "body": "Code review ACK 0f949cde3dff15170db7930b0f7345ff995c267d\r\n\r\n> The new naming, comments, and code organisation are much improved.\r\n\r\nYes the comments definitely help clarify why the function is like this.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742425892/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742443335",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20595#issuecomment-742443335",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20595",
    "id": 742443335,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjQ0MzMzNQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-10T10:50:16Z",
    "updated_at": "2020-12-10T10:50:16Z",
    "author_association": "MEMBER",
    "body": "Backported in #20612",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742443335/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537901446",
    "pull_request_review_id": 546613556,
    "id": 537901446,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkwMTQ0Ng==",
    "diff_hunk": "@@ -126,31 +126,53 @@ static bool CheckTxScriptsSanity(const CMutableTransaction& tx)\n \n static bool DecodeTx(CMutableTransaction& tx, const std::vector<unsigned char>& tx_data, bool try_no_witness, bool try_witness)\n {\n+    CMutableTransaction tx_wit, tx_nowit;\n+    bool ok_wit = false, ok_nowit = false;",
    "path": "src/core_read.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "0f949cde3dff15170db7930b0f7345ff995c267d",
    "original_commit_id": "daf98fec173d259afe3cd5640e73ac51a91e0a4c",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "naming nit: not sure if this is better, but maybe `wtx`, `tx`, `wtx_ok`, `tx_ok`",
    "created_at": "2020-12-07T23:07:16Z",
    "updated_at": "2020-12-08T21:13:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20595#discussion_r537901446",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20595",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537901446"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20595#discussion_r537901446"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20595"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537901446/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 130,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537904852",
    "pull_request_review_id": 546613556,
    "id": 537904852,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkwNDg1Mg==",
    "diff_hunk": "@@ -126,31 +126,53 @@ static bool CheckTxScriptsSanity(const CMutableTransaction& tx)\n \n static bool DecodeTx(CMutableTransaction& tx, const std::vector<unsigned char>& tx_data, bool try_no_witness, bool try_witness)\n {\n+    CMutableTransaction tx_wit, tx_nowit;\n+    bool ok_wit = false, ok_nowit = false;\n+\n+    // Try decoding with extended serialization, and remember if the result succesfully consumes the entire input.\n     if (try_witness) {\n         CDataStream ssData(tx_data, SER_NETWORK, PROTOCOL_VERSION);\n         try {\n-            ssData >> tx;\n-            // If transaction looks sane, we don't try other mode even if requested\n-            if (ssData.empty() && (!try_no_witness || CheckTxScriptsSanity(tx))) {\n-                return true;\n-            }\n+            ssData >> tx_wit;\n+            if (ssData.empty()) ok_wit = true;\n         } catch (const std::exception&) {\n             // Fall through.\n         }\n     }\n \n+    // Try decoding with legacy serialization, and remember if the result succesfully consumes the entire input.",
    "path": "src/core_read.cpp",
    "position": null,
    "original_position": 23,
    "commit_id": "0f949cde3dff15170db7930b0f7345ff995c267d",
    "original_commit_id": "daf98fec173d259afe3cd5640e73ac51a91e0a4c",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit, \"successfully\" (also line 132)",
    "created_at": "2020-12-07T23:14:28Z",
    "updated_at": "2020-12-08T21:13:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20595#discussion_r537904852",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20595",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537904852"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20595#discussion_r537904852"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20595"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537904852/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 145,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537917643",
    "pull_request_review_id": 546631125,
    "id": 537917643,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkxNzY0Mw==",
    "diff_hunk": "@@ -126,31 +126,53 @@ static bool CheckTxScriptsSanity(const CMutableTransaction& tx)\n \n static bool DecodeTx(CMutableTransaction& tx, const std::vector<unsigned char>& tx_data, bool try_no_witness, bool try_witness)\n {\n+    CMutableTransaction tx_wit, tx_nowit;\n+    bool ok_wit = false, ok_nowit = false;",
    "path": "src/core_read.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "0f949cde3dff15170db7930b0f7345ff995c267d",
    "original_commit_id": "daf98fec173d259afe3cd5640e73ac51a91e0a4c",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I've renamed everything to {tx,ok}_{extended,legacy}, because extended serialization doesn't imply the result actually is a segwit transaction - it just means prefer the interpretation of extended serialization when there is ambiguity.",
    "created_at": "2020-12-07T23:37:29Z",
    "updated_at": "2020-12-08T21:13:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20595#discussion_r537917643",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20595",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537917643"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20595#discussion_r537917643"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20595"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537917643/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 130,
    "side": "RIGHT",
    "in_reply_to_id": 537901446
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537917709",
    "pull_request_review_id": 546631174,
    "id": 537917709,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkxNzcwOQ==",
    "diff_hunk": "@@ -126,31 +126,53 @@ static bool CheckTxScriptsSanity(const CMutableTransaction& tx)\n \n static bool DecodeTx(CMutableTransaction& tx, const std::vector<unsigned char>& tx_data, bool try_no_witness, bool try_witness)\n {\n+    CMutableTransaction tx_wit, tx_nowit;\n+    bool ok_wit = false, ok_nowit = false;\n+\n+    // Try decoding with extended serialization, and remember if the result succesfully consumes the entire input.\n     if (try_witness) {\n         CDataStream ssData(tx_data, SER_NETWORK, PROTOCOL_VERSION);\n         try {\n-            ssData >> tx;\n-            // If transaction looks sane, we don't try other mode even if requested\n-            if (ssData.empty() && (!try_no_witness || CheckTxScriptsSanity(tx))) {\n-                return true;\n-            }\n+            ssData >> tx_wit;\n+            if (ssData.empty()) ok_wit = true;\n         } catch (const std::exception&) {\n             // Fall through.\n         }\n     }\n \n+    // Try decoding with legacy serialization, and remember if the result succesfully consumes the entire input.",
    "path": "src/core_read.cpp",
    "position": null,
    "original_position": 23,
    "commit_id": "0f949cde3dff15170db7930b0f7345ff995c267d",
    "original_commit_id": "daf98fec173d259afe3cd5640e73ac51a91e0a4c",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed.",
    "created_at": "2020-12-07T23:37:37Z",
    "updated_at": "2020-12-08T21:13:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20595#discussion_r537917709",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20595",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537917709"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20595#discussion_r537917709"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20595"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537917709/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 145,
    "side": "RIGHT",
    "in_reply_to_id": 537904852
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538066861",
    "pull_request_review_id": 546777860,
    "id": 538066861,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA2Njg2MQ==",
    "diff_hunk": "@@ -126,31 +126,55 @@ static bool CheckTxScriptsSanity(const CMutableTransaction& tx)\n \n static bool DecodeTx(CMutableTransaction& tx, const std::vector<unsigned char>& tx_data, bool try_no_witness, bool try_witness)\n {\n+    CMutableTransaction tx_extended, tx_legacy;\n+    bool ok_extended = false, ok_legacy = false;\n+\n+    // Try decoding with extended serialization support, and remember if the result successfully consumes the entire input.\n+    // Note that this will generally also work correctly on transactions in legacy format (without witness). This version\n+    // however will interpret the 0001 marker as a marker rather than as a no-input transaction.\n     if (try_witness) {\n         CDataStream ssData(tx_data, SER_NETWORK, PROTOCOL_VERSION);\n         try {\n-            ssData >> tx;\n-            // If transaction looks sane, we don't try other mode even if requested\n-            if (ssData.empty() && (!try_no_witness || CheckTxScriptsSanity(tx))) {\n-                return true;\n-            }\n+            ssData >> tx_extended;\n+            if (ssData.empty()) ok_extended = true;\n         } catch (const std::exception&) {\n             // Fall through.\n         }\n     }\n \n+    // Try decoding with legacy serialization, and remember if the result successfully consumes the entire input.\n     if (try_no_witness) {\n         CDataStream ssData(tx_data, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS);\n         try {\n-            ssData >> tx;\n-            if (ssData.empty()) {\n-                return true;\n-            }\n+            ssData >> tx_legacy;\n+            if (ssData.empty()) ok_legacy = true;\n         } catch (const std::exception&) {\n             // Fall through.\n         }\n     }\n \n+    // If both deserializations succeeded, prefer the one for which CheckTxScriptsSanity returns true.\n+    // If that's the case for both, prefer the extended one.\n+    if (ok_extended && CheckTxScriptsSanity(tx_extended)) {\n+        tx = std::move(tx_extended);\n+        return true;\n+    }\n+    if (ok_legacy && CheckTxScriptsSanity(tx_legacy)) {\n+        tx = std::move(tx_legacy);\n+        return true;\n+    }\n+\n+    // If only one deserialization succeeded, use that one.",
    "path": "src/core_read.cpp",
    "position": null,
    "original_position": 51,
    "commit_id": "0f949cde3dff15170db7930b0f7345ff995c267d",
    "original_commit_id": "451556858a23d81fd23ab2f3f7a72f61856c62d3",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The following `if` statement also handles the case where both deserializations succeeded but neither passed sanity, which the comments skip.\r\n\r\nMaybe\r\n\r\n```c++\r\n// If both deserializations succeeded, prefer the one for which CheckTxScriptsSanity returns true.\r\n// If that's the case for both ** or neither **, prefer the extended one\r\n// If only one deserialization succeeded, use that one.\r\nif (ok_ext && ok_legacy)\r\n    if (TxSanity(tx_ext) || !TxSanity(tx_legacy)) {\r\n        return tx_ext;\r\n    } else {\r\n        return tx_legacy;\r\n    }\r\n} else if (ok_ext) {\r\n    return tx_ext;\r\n} else if (ok_legacy) {\r\n   return tx_legacy;\r\n} else {\r\n   fail;\r\n}\r\n```\r\n\r\nwould match the comments better? Or could consolidate the conditions something like:\r\n\r\n```c++\r\nif (ok_ext && !(ok_legacy && !TxSanity(tx_ext) && TxSanity(tx_legacy)) {\r\n    // If extended decode succeeded, prefer it, except if legacy also succeeded,\r\n    // extended didn't pass sanity checks, and legacy did pass sanity checks\r\n    return tx_ext;\r\n} else if (ok_legacy) {\r\n    // Otherwise, if legacy succeeded use it\r\n    return tx_legacy;\r\n} else {\r\n   // Otherwise fail\r\n   fail;\r\n}\r\n```\r\n\r\nAlternatively you could stay closer to the current code with:\r\n\r\n```c++\r\nif (try_witness) {\r\n    ok_ext = Decode(tx_ext);\r\n    if (ok_ext && (!try_no_witness || Sanity(tx_ext))) return tx_ext;\r\n}\r\nif (try_no_witness) {\r\n    ok_legacy = Decode(tx_legacy);\r\n    if (ok_legacy && (!ok_ext || Sanity(tx_legacy)) return tx_legacy;\r\n}\r\nif (ok_ext) return tx_ext; // neither pass sanity checks\r\nfail;\r\n```",
    "created_at": "2020-12-08T06:25:35Z",
    "updated_at": "2020-12-08T21:13:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20595#discussion_r538066861",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20595",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538066861"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20595#discussion_r538066861"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20595"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538066861/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 167,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538068126",
    "pull_request_review_id": 546777860,
    "id": 538068126,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA2ODEyNg==",
    "diff_hunk": "@@ -126,31 +126,55 @@ static bool CheckTxScriptsSanity(const CMutableTransaction& tx)\n \n static bool DecodeTx(CMutableTransaction& tx, const std::vector<unsigned char>& tx_data, bool try_no_witness, bool try_witness)\n {\n+    CMutableTransaction tx_extended, tx_legacy;",
    "path": "src/core_read.cpp",
    "position": 17,
    "original_position": 4,
    "commit_id": "0f949cde3dff15170db7930b0f7345ff995c267d",
    "original_commit_id": "451556858a23d81fd23ab2f3f7a72f61856c62d3",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This potentially doubles the memory usage of `DecodeTx` (previously, up to 4MB for each of `tx`, `tx_data`; now an additional 4MB for each of `tx_extended` and `tx_legacy`). Is that a potential problem anywhere? (I don't think it is, but...)",
    "created_at": "2020-12-08T06:28:40Z",
    "updated_at": "2020-12-08T21:13:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20595#discussion_r538068126",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20595",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538068126"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20595#discussion_r538068126"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20595"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538068126/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 142,
    "original_line": 142,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538084403",
    "pull_request_review_id": 546798672,
    "id": 538084403,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA4NDQwMw==",
    "diff_hunk": "@@ -126,31 +126,55 @@ static bool CheckTxScriptsSanity(const CMutableTransaction& tx)\n \n static bool DecodeTx(CMutableTransaction& tx, const std::vector<unsigned char>& tx_data, bool try_no_witness, bool try_witness)\n {\n+    CMutableTransaction tx_extended, tx_legacy;\n+    bool ok_extended = false, ok_legacy = false;\n+\n+    // Try decoding with extended serialization support, and remember if the result successfully consumes the entire input.\n+    // Note that this will generally also work correctly on transactions in legacy format (without witness). This version\n+    // however will interpret the 0001 marker as a marker rather than as a no-input transaction.\n     if (try_witness) {\n         CDataStream ssData(tx_data, SER_NETWORK, PROTOCOL_VERSION);\n         try {\n-            ssData >> tx;\n-            // If transaction looks sane, we don't try other mode even if requested\n-            if (ssData.empty() && (!try_no_witness || CheckTxScriptsSanity(tx))) {\n-                return true;\n-            }\n+            ssData >> tx_extended;\n+            if (ssData.empty()) ok_extended = true;\n         } catch (const std::exception&) {\n             // Fall through.\n         }\n     }\n \n+    // Try decoding with legacy serialization, and remember if the result successfully consumes the entire input.\n     if (try_no_witness) {\n         CDataStream ssData(tx_data, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS);\n         try {\n-            ssData >> tx;\n-            if (ssData.empty()) {\n-                return true;\n-            }\n+            ssData >> tx_legacy;\n+            if (ssData.empty()) ok_legacy = true;\n         } catch (const std::exception&) {\n             // Fall through.\n         }\n     }\n \n+    // If both deserializations succeeded, prefer the one for which CheckTxScriptsSanity returns true.\n+    // If that's the case for both, prefer the extended one.\n+    if (ok_extended && CheckTxScriptsSanity(tx_extended)) {\n+        tx = std::move(tx_extended);\n+        return true;\n+    }\n+    if (ok_legacy && CheckTxScriptsSanity(tx_legacy)) {\n+        tx = std::move(tx_legacy);\n+        return true;\n+    }\n+\n+    // If only one deserialization succeeded, use that one.",
    "path": "src/core_read.cpp",
    "position": null,
    "original_position": 51,
    "commit_id": "0f949cde3dff15170db7930b0f7345ff995c267d",
    "original_commit_id": "451556858a23d81fd23ab2f3f7a72f61856c62d3",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The comment implies that only one deserialization has succeeded if this line is reached, which is not true\r\n\r\n```suggestion\r\n    // If both deserializations succeeded, prefer the extended one. Otherwise use the one that succeeded deserialization.\r\n```",
    "created_at": "2020-12-08T07:03:47Z",
    "updated_at": "2020-12-08T21:13:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20595#discussion_r538084403",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20595",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538084403"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20595#discussion_r538084403"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20595"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538084403/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 167,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538087794",
    "pull_request_review_id": 546802200,
    "id": 538087794,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA4Nzc5NA==",
    "diff_hunk": "@@ -126,31 +126,55 @@ static bool CheckTxScriptsSanity(const CMutableTransaction& tx)\n \n static bool DecodeTx(CMutableTransaction& tx, const std::vector<unsigned char>& tx_data, bool try_no_witness, bool try_witness)\n {\n+    CMutableTransaction tx_extended, tx_legacy;",
    "path": "src/core_read.cpp",
    "position": 17,
    "original_position": 4,
    "commit_id": "0f949cde3dff15170db7930b0f7345ff995c267d",
    "original_commit_id": "451556858a23d81fd23ab2f3f7a72f61856c62d3",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It is only called by the user. It would be a bug if the legacy encoding was tried for any \"real\" transactions.",
    "created_at": "2020-12-08T07:11:24Z",
    "updated_at": "2020-12-08T21:13:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20595#discussion_r538087794",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20595",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538087794"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20595#discussion_r538087794"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20595"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538087794/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 142,
    "original_line": 142,
    "side": "RIGHT",
    "in_reply_to_id": 538068126
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538150517",
    "pull_request_review_id": 546882252,
    "id": 538150517,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE1MDUxNw==",
    "diff_hunk": "@@ -126,31 +126,55 @@ static bool CheckTxScriptsSanity(const CMutableTransaction& tx)\n \n static bool DecodeTx(CMutableTransaction& tx, const std::vector<unsigned char>& tx_data, bool try_no_witness, bool try_witness)\n {\n+    CMutableTransaction tx_extended, tx_legacy;\n+    bool ok_extended = false, ok_legacy = false;\n+\n+    // Try decoding with extended serialization support, and remember if the result successfully consumes the entire input.\n+    // Note that this will generally also work correctly on transactions in legacy format (without witness). This version\n+    // however will interpret the 0001 marker as a marker rather than as a no-input transaction.\n     if (try_witness) {\n         CDataStream ssData(tx_data, SER_NETWORK, PROTOCOL_VERSION);\n         try {\n-            ssData >> tx;\n-            // If transaction looks sane, we don't try other mode even if requested\n-            if (ssData.empty() && (!try_no_witness || CheckTxScriptsSanity(tx))) {\n-                return true;\n-            }\n+            ssData >> tx_extended;\n+            if (ssData.empty()) ok_extended = true;\n         } catch (const std::exception&) {\n             // Fall through.\n         }\n     }\n \n+    // Try decoding with legacy serialization, and remember if the result successfully consumes the entire input.\n     if (try_no_witness) {\n         CDataStream ssData(tx_data, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS);\n         try {\n-            ssData >> tx;\n-            if (ssData.empty()) {\n-                return true;\n-            }\n+            ssData >> tx_legacy;\n+            if (ssData.empty()) ok_legacy = true;\n         } catch (const std::exception&) {\n             // Fall through.\n         }\n     }\n \n+    // If both deserializations succeeded, prefer the one for which CheckTxScriptsSanity returns true.\n+    // If that's the case for both, prefer the extended one.\n+    if (ok_extended && CheckTxScriptsSanity(tx_extended)) {\n+        tx = std::move(tx_extended);\n+        return true;\n+    }\n+    if (ok_legacy && CheckTxScriptsSanity(tx_legacy)) {\n+        tx = std::move(tx_legacy);\n+        return true;\n+    }\n+\n+    // If only one deserialization succeeded, use that one.",
    "path": "src/core_read.cpp",
    "position": null,
    "original_position": 51,
    "commit_id": "0f949cde3dff15170db7930b0f7345ff995c267d",
    "original_commit_id": "451556858a23d81fd23ab2f3f7a72f61856c62d3",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "For code-readability I prefer the version of how the pr is currently written. The first two options are too nested to be readable.\r\nIf the goal is to skip a useless decoding in the early-return case (`Sanity(tx_ext)`), I prefer your third option.",
    "created_at": "2020-12-08T08:54:21Z",
    "updated_at": "2020-12-08T21:13:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20595#discussion_r538150517",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20595",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538150517"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20595#discussion_r538150517"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20595"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538150517/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 167,
    "side": "RIGHT",
    "in_reply_to_id": 538066861
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538812110",
    "pull_request_review_id": 547637332,
    "id": 538812110,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODgxMjExMA==",
    "diff_hunk": "@@ -126,31 +126,55 @@ static bool CheckTxScriptsSanity(const CMutableTransaction& tx)\n \n static bool DecodeTx(CMutableTransaction& tx, const std::vector<unsigned char>& tx_data, bool try_no_witness, bool try_witness)\n {\n+    CMutableTransaction tx_extended, tx_legacy;\n+    bool ok_extended = false, ok_legacy = false;\n+\n+    // Try decoding with extended serialization support, and remember if the result successfully consumes the entire input.\n+    // Note that this will generally also work correctly on transactions in legacy format (without witness). This version\n+    // however will interpret the 0001 marker as a marker rather than as a no-input transaction.\n     if (try_witness) {\n         CDataStream ssData(tx_data, SER_NETWORK, PROTOCOL_VERSION);\n         try {\n-            ssData >> tx;\n-            // If transaction looks sane, we don't try other mode even if requested\n-            if (ssData.empty() && (!try_no_witness || CheckTxScriptsSanity(tx))) {\n-                return true;\n-            }\n+            ssData >> tx_extended;\n+            if (ssData.empty()) ok_extended = true;\n         } catch (const std::exception&) {\n             // Fall through.\n         }\n     }\n \n+    // Try decoding with legacy serialization, and remember if the result successfully consumes the entire input.\n     if (try_no_witness) {\n         CDataStream ssData(tx_data, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS);\n         try {\n-            ssData >> tx;\n-            if (ssData.empty()) {\n-                return true;\n-            }\n+            ssData >> tx_legacy;\n+            if (ssData.empty()) ok_legacy = true;\n         } catch (const std::exception&) {\n             // Fall through.\n         }\n     }\n \n+    // If both deserializations succeeded, prefer the one for which CheckTxScriptsSanity returns true.\n+    // If that's the case for both, prefer the extended one.\n+    if (ok_extended && CheckTxScriptsSanity(tx_extended)) {\n+        tx = std::move(tx_extended);\n+        return true;\n+    }\n+    if (ok_legacy && CheckTxScriptsSanity(tx_legacy)) {\n+        tx = std::move(tx_legacy);\n+        return true;\n+    }\n+\n+    // If only one deserialization succeeded, use that one.",
    "path": "src/core_read.cpp",
    "position": null,
    "original_position": 51,
    "commit_id": "0f949cde3dff15170db7930b0f7345ff995c267d",
    "original_commit_id": "451556858a23d81fd23ab2f3f7a72f61856c62d3",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I've added a number of comments, and restructured a bit along the lines of the 3rd option.",
    "created_at": "2020-12-08T21:14:20Z",
    "updated_at": "2020-12-08T21:14:21Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20595#discussion_r538812110",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20595",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538812110"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20595#discussion_r538812110"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20595"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538812110/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 167,
    "side": "RIGHT",
    "in_reply_to_id": 538066861
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538812333",
    "pull_request_review_id": 547637593,
    "id": 538812333,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODgxMjMzMw==",
    "diff_hunk": "@@ -126,31 +126,55 @@ static bool CheckTxScriptsSanity(const CMutableTransaction& tx)\n \n static bool DecodeTx(CMutableTransaction& tx, const std::vector<unsigned char>& tx_data, bool try_no_witness, bool try_witness)\n {\n+    CMutableTransaction tx_extended, tx_legacy;",
    "path": "src/core_read.cpp",
    "position": 17,
    "original_position": 4,
    "commit_id": "0f949cde3dff15170db7930b0f7345ff995c267d",
    "original_commit_id": "451556858a23d81fd23ab2f3f7a72f61856c62d3",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yeah, I don't think this is a concern. This function is only used when doing hex decoding.",
    "created_at": "2020-12-08T21:14:47Z",
    "updated_at": "2020-12-08T21:14:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20595#discussion_r538812333",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20595",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538812333"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20595#discussion_r538812333"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20595"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538812333/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 142,
    "original_line": 142,
    "side": "RIGHT",
    "in_reply_to_id": 538068126
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538812505",
    "pull_request_review_id": 547637789,
    "id": 538812505,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODgxMjUwNQ==",
    "diff_hunk": "@@ -126,31 +126,55 @@ static bool CheckTxScriptsSanity(const CMutableTransaction& tx)\n \n static bool DecodeTx(CMutableTransaction& tx, const std::vector<unsigned char>& tx_data, bool try_no_witness, bool try_witness)\n {\n+    CMutableTransaction tx_extended, tx_legacy;\n+    bool ok_extended = false, ok_legacy = false;\n+\n+    // Try decoding with extended serialization support, and remember if the result successfully consumes the entire input.\n+    // Note that this will generally also work correctly on transactions in legacy format (without witness). This version\n+    // however will interpret the 0001 marker as a marker rather than as a no-input transaction.\n     if (try_witness) {\n         CDataStream ssData(tx_data, SER_NETWORK, PROTOCOL_VERSION);\n         try {\n-            ssData >> tx;\n-            // If transaction looks sane, we don't try other mode even if requested\n-            if (ssData.empty() && (!try_no_witness || CheckTxScriptsSanity(tx))) {\n-                return true;\n-            }\n+            ssData >> tx_extended;\n+            if (ssData.empty()) ok_extended = true;\n         } catch (const std::exception&) {\n             // Fall through.\n         }\n     }\n \n+    // Try decoding with legacy serialization, and remember if the result successfully consumes the entire input.\n     if (try_no_witness) {\n         CDataStream ssData(tx_data, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS);\n         try {\n-            ssData >> tx;\n-            if (ssData.empty()) {\n-                return true;\n-            }\n+            ssData >> tx_legacy;\n+            if (ssData.empty()) ok_legacy = true;\n         } catch (const std::exception&) {\n             // Fall through.\n         }\n     }\n \n+    // If both deserializations succeeded, prefer the one for which CheckTxScriptsSanity returns true.\n+    // If that's the case for both, prefer the extended one.\n+    if (ok_extended && CheckTxScriptsSanity(tx_extended)) {\n+        tx = std::move(tx_extended);\n+        return true;\n+    }\n+    if (ok_legacy && CheckTxScriptsSanity(tx_legacy)) {\n+        tx = std::move(tx_legacy);\n+        return true;\n+    }\n+\n+    // If only one deserialization succeeded, use that one.",
    "path": "src/core_read.cpp",
    "position": null,
    "original_position": 51,
    "commit_id": "0f949cde3dff15170db7930b0f7345ff995c267d",
    "original_commit_id": "451556858a23d81fd23ab2f3f7a72f61856c62d3",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Rewrote the comments.",
    "created_at": "2020-12-08T21:15:02Z",
    "updated_at": "2020-12-08T21:15:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20595#discussion_r538812505",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20595",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538812505"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20595#discussion_r538812505"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20595"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538812505/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 167,
    "side": "RIGHT",
    "in_reply_to_id": 538084403
  }
]