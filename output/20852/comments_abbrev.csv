vasild,2021-01-04 17:51:54,"If this is merged, then https://github.com/bitcoin/bitcoin/pull/20849 will not be needed. That PR is valid with or without this one, but this one fixes the issue more broadly.",https://github.com/bitcoin/bitcoin/pull/20852#issuecomment-754120031,754120031,
sipa,2021-01-05 00:50:03,"I've given this label ""Needs backport (0.21)"", as either this or #20849 (or both) should go into rc5. If 20849 is merged and backported, we're good.",https://github.com/bitcoin/bitcoin/pull/20852#issuecomment-754315804,754315804,
sipa,2021-01-05 00:52:27,"Test is broken, fix:\n\n```diff\ndiff --git a/src/test/netbase_tests.cpp b/src/test/netbase_tests.cpp\nindex ac4db3a5b6..87d8bf6ef6 100644\n--- a/src/test/netbase_tests.cpp\n+++ b/src/test/netbase_tests.cpp\n@@ -442,8 +442,7 @@ BOOST_AUTO_TEST_CASE(netbase_dont_resolve_strings_with_embedded_nul_characters)\n     BOOST_CHECK(!LookupSubNet(""1.2.3.0/24\0""s, ret));\n     BOOST_CHECK(!LookupSu",https://github.com/bitcoin/bitcoin/pull/20852#issuecomment-754316438,754316438,
DrahtBot,2021-01-05 05:42:14,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19825 (rpc: simpler setban and new ban manipulation commands by dhruv)\n\nIf you consider this pull request important, pl",https://github.com/bitcoin/bitcoin/pull/20852#issuecomment-754410907,754410907,
laanwj,2021-01-05 08:31:45,"Concept/direction ACK, will review the code later",https://github.com/bitcoin/bitcoin/pull/20852#issuecomment-754488720,754488720,
vasild,2021-01-05 11:11:14,"06af169cf...6ab8b2b5d: minor tweaks, add comments to `CSubNet()` constructors, fix and extend tests.",https://github.com/bitcoin/bitcoin/pull/20852#issuecomment-754571102,754571102,
MarcoFalke,2021-01-05 11:41:05,"```\n test  2021-01-05T11:36:34.542000Z TestFramework (ERROR): JSONRPC error \n                                   Traceback (most recent call last):\n                                     File ""/private/var/folders/3y/l0z1x3693dl_8n0qybp4dqwh0000gn/T/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-apple-darwin18/test/functional/test_framework/test_framework.py"", line 126, in main\n             ",https://github.com/bitcoin/bitcoin/pull/20852#issuecomment-754584806,754584806,
MarcoFalke,2021-01-05 11:48:13,"I am not familiar with this part of the codebase, but it seems safer to move this to 0.21.1. This claims to fix a bug how outbound onion addresses are handled by rpc and misbehavior-disconnect. However, it changes the code paths for all networks and all net handling. So it seems a bit risky to push out this late in the rc stage. (There haven't been any major issues since rc3 other than the macos c",https://github.com/bitcoin/bitcoin/pull/20852#issuecomment-754588051,754588051,
vasild,2021-01-06 16:10:13,"6ab8b2b5d...826b8d9eb: fix failing `rpc_setban.py` by making sure in-memory representation of `CSubNet::netmask[]` for IPv4 subnets is the same when deserialized from disk and when created via the constructor.\n\nFor IPv4, [deserialize](https://github.com/bitcoin/bitcoin/blob/3b6d1b61d31674e033e821046baa95c66dedf623/src/netaddress.h#L490) only sets the first 4 bytes of the netmask, leaving the r",https://github.com/bitcoin/bitcoin/pull/20852#issuecomment-755393067,755393067,
vasild,2021-01-06 16:19:54,826b8d9eb...293070adc: fix typos in comments,https://github.com/bitcoin/bitcoin/pull/20852#issuecomment-755400221,755400221,
vasild,2021-01-06 16:26:29,"@MarcoFalke \n> ... it changes the code paths for all networks and all net handling ...\n\nIndeed. `CSubNet` is used in lots of places and changes to it can have subtle effects, as shown by CI failures on this PR.",https://github.com/bitcoin/bitcoin/pull/20852#issuecomment-755406388,755406388,
vasild,2021-01-07 12:13:05,"293070adc...1a54bd7d0: as per [suggestion](https://github.com/bitcoin/bitcoin/pull/20852#discussion_r552823103), reverted the two constructors that take also a ""netmask"" argument to create an invalid subnet, like in `master` without this PR.",https://github.com/bitcoin/bitcoin/pull/20852#issuecomment-756080044,756080044,
vasild,2021-01-07 14:59:35,1a54bd7d0...5e95ce679: add a functional test that fails without this fix and passes with it,https://github.com/bitcoin/bitcoin/pull/20852#issuecomment-756168113,756168113,
jonatack,2021-01-08 16:18:37,"ACK 5e95ce6797a286aa23022141188f9139315bff70 code review, manually verified that `setban OUTBOUND_TOR_V3_PEER add` succeeds with this patch and fails on master, cherry-picked the unit test change in 98140bc855b037d2c552153496e8e4e2c2efdad9 that fails on master, and it passes with this patch.\n\nHappy to re-review if you update per comments above.",https://github.com/bitcoin/bitcoin/pull/20852#issuecomment-756847644,756847644,
vasild,2021-01-10 14:55:02,"5e95ce679...39b43298d: extend the functional test, https://github.com/bitcoin/bitcoin/pull/20852#discussion_r554025317",https://github.com/bitcoin/bitcoin/pull/20852#issuecomment-757489593,757489593,
jonatack,2021-01-11 09:43:34,"Code review re-ACK 39b43298d9c54f9c18bef36f3d5934f57aefd088 per `git diff 5e95ce6 39b4329`; only change since last review is improvements to the functional test; verified the test fails on master @ 616eace0 where expected (`assert(self.is_banned(node, tor_addr))` fails and unban unfails)\n",https://github.com/bitcoin/bitcoin/pull/20852#issuecomment-757814985,757814985,
MarcoFalke,2021-01-11 10:15:31,Moved to 0.21.1 milestone according to last weeks meeting. Let me know if this is not applicable.,https://github.com/bitcoin/bitcoin/pull/20852#issuecomment-757852641,757852641,
laanwj,2021-01-11 10:25:38,"code review ACK 39b43298d9c54f9c18bef36f3d5934f57aefd088\n\n> Moved to 0.21.1 milestone according to last weeks meeting. Let me know if this is not applicable.\n\nAgreed.",https://github.com/bitcoin/bitcoin/pull/20852#issuecomment-757858204,757858204,
MarcoFalke,2021-01-11 11:49:09,"Would be nice to summarize the changes that are expected here. Am I right that this ...\n\n* Breaks compatibility of the serialized banfile? I.e. opening a banfile written by this version with a previous version may drop some addresses?\n* Fixes banning of onion outbounds via rpc.\n* Fixes misbheavior disconnect of onion outbounds.\n\nI tried testing the changes and restarting the node will ",https://github.com/bitcoin/bitcoin/pull/20852#issuecomment-757901024,757901024,
MarcoFalke,2021-01-11 11:58:54,"Would probably be good to propose some release notes based on the changes. Added a draft here: https://github.com/bitcoin-core/bitcoin-devwiki/wiki/%2320852-Release-notes-snippet\n\n\n<!--\n\n\n\nexport DEBIAN_FRONTEND=noninteractive && apt update && apt install curl wget htop git vim ccache -y && git clone https://github.com/bitcoin/bitcoin.git && cd bitcoin && git checkout master && apt i",https://github.com/bitcoin/bitcoin/pull/20852#issuecomment-757906182,757906182,
vasild,2021-01-11 12:49:40,"> Would be nice to summarize the changes that are expected here. Am I right that this ...\n> \n>     * Breaks compatibility of the serialized banfile? I.e. opening a banfile written by this version with a previous version may drop some addresses?\n\nThe serialized format has not been changed. If this version writes a ban entry consisting of the newly allowed tor-one-host-subnet, an old version",https://github.com/bitcoin/bitcoin/pull/20852#issuecomment-757931305,757931305,
MarcoFalke,2021-01-11 12:56:48,"> This looks strange, how to reproduce?\n\n`setban foo.onion add`, `listbanned` (correct), restart, `listbanned` (corrupt)",https://github.com/bitcoin/bitcoin/pull/20852#issuecomment-757934752,757934752,
MarcoFalke,2021-01-11 14:04:03,"Steps to reproduce:\n\n```\n# ./src/bitcoind --version && ./src/bitcoind  -signet  -printtoconsole=0 -noconnect & \nBitcoin Core version v21.99.0-5cce60710\n\n# ./src/bitcoin-cli  -signet listbanned\n[\n  {\n    ""address"": ""::/0"",\n    ""banned_until"": 1610459838,\n    ""ban_created"": 1610373438\n  }\n]\n\n# ./src/bitcoin-cli  -signet setban v7ajjeirttkbnt32wpy3c6w3emwnfr3fkla7hpxcfok",https://github.com/bitcoin/bitcoin/pull/20852#issuecomment-757971908,757971908,
vasild,2021-01-11 16:43:44,"@MarcoFalke the problem you describe above is fixed in https://github.com/bitcoin/bitcoin/pull/20904, but that requires a `banlist.dat` format change.\n\nMaybe revert this PR and merge it together with #20904 as one PR?",https://github.com/bitcoin/bitcoin/pull/20852#issuecomment-758077001,758077001,
MarcoFalke,2021-06-23 07:45:14,Looks like this was never backported? I guess not worth it at this point.,https://github.com/bitcoin/bitcoin/pull/20852#issuecomment-866610187,866610187,
sipa,2021-01-04 18:01:56,"Control reaches end of non-void function.\n",https://github.com/bitcoin/bitcoin/pull/20852#discussion_r551476324,551476324,src/netaddress.cpp
vasild,2021-01-05 11:11:57,Fixed.,https://github.com/bitcoin/bitcoin/pull/20852#discussion_r551866832,551866832,src/netaddress.cpp
jonatack,2021-01-05 11:26:11,s/signle/single/ here and line 480,https://github.com/bitcoin/bitcoin/pull/20852#discussion_r551873584,551873584,src/netaddress.h
jonatack,2021-01-05 11:29:20,"readability suggestion\n```diff\n         /**\n          * Construct from a given network start and number of bits (CIDR mask).\n-         * @param[in] addr Network start. If not IPv4 or IPv6, then a signle-host subnet is created.\n-         * @param[in] mask CIDR mask, must be in [0, 32] for IPv4 addresses and in [0, 128] for IPv6\n-         * addresses. Otherwise an invalid subnet is creat",https://github.com/bitcoin/bitcoin/pull/20852#discussion_r551875221,551875221,src/netaddress.h
jonatack,2021-01-05 11:29:52,"readability suggestion\n```suggestion\n         * @param[in] addr  The sole address to be contained in the subnet.\n```",https://github.com/bitcoin/bitcoin/pull/20852#discussion_r551875461,551875461,src/netaddress.h
jonatack,2021-01-05 11:42:11,"Should we keep this `assert`?\n```diff\n     case NET_IPV4:\n     case NET_IPV6:\n         valid = true;\n+        assert(addr.m_addr.size() <= sizeof(netmask));\n         memset(netmask, 0xFF, sizeof(netmask));\n         break;\n     case NET_ONION:\n```",https://github.com/bitcoin/bitcoin/pull/20852#discussion_r551881168,551881168,src/netaddress.cpp
vasild,2021-01-06 16:12:07,Fixed.,https://github.com/bitcoin/bitcoin/pull/20852#discussion_r552756569,552756569,src/netaddress.h
vasild,2021-01-06 16:13:55,This 3-column-layout has a maintainability problem when a parameter with longer name is added or existent one renamed.,https://github.com/bitcoin/bitcoin/pull/20852#discussion_r552759552,552759552,src/netaddress.h
vasild,2021-01-06 16:15:53,"Took only the capital, without the space :)",https://github.com/bitcoin/bitcoin/pull/20852#discussion_r552762858,552762858,src/netaddress.h
vasild,2021-01-06 16:19:01,"The assert was there because in `master` we wrote `addr.m_addr.size()` bytes and here it is changed to write `sizeof(netmask)` bytes so it can't overflow and thus I removed the assert.\n\nHowever, I changed/restored it to write `addr.m_addr.size()` bytes and also restored the assert, [explanation](https://github.com/bitcoin/bitcoin/pull/20852#issuecomment-755393067).",https://github.com/bitcoin/bitcoin/pull/20852#discussion_r552768364,552768364,src/netaddress.cpp
luke-jr,2021-01-06 17:14:47,We shouldn't just *ignore* `mask`... Might be best to only change the single-address form?,https://github.com/bitcoin/bitcoin/pull/20852#discussion_r552823103,552823103,src/netaddress.cpp
jonatack,2021-01-07 11:14:14,"Yes, though I think it's worth it. Anyway, just a suggestion.",https://github.com/bitcoin/bitcoin/pull/20852#discussion_r553264524,553264524,src/netaddress.h
vasild,2021-01-07 12:13:25,Done: https://github.com/bitcoin/bitcoin/pull/20852#issuecomment-756080044,https://github.com/bitcoin/bitcoin/pull/20852#discussion_r553291046,553291046,src/netaddress.cpp
laanwj,2021-01-07 14:13:49,I think `valid` is left uninitialized here. It's not initialized in `class CSubNet` declaration nor here.,https://github.com/bitcoin/bitcoin/pull/20852#discussion_r553351877,553351877,src/netaddress.cpp
vasild,2021-01-07 14:58:12,"It is set to `false` in the default constructor which is called by this constructor:\n\nCSubNet::CSubNet(const CNetAddr& addr) **: CSubNet()**\n\n`netmask` is also set there.",https://github.com/bitcoin/bitcoin/pull/20852#discussion_r553379641,553379641,src/netaddress.cpp
laanwj,2021-01-08 09:39:52,"Thanks for illuminating. That's kinda sneaky, would prefer to do initialization in the class declaration itself, but no need to do so in this PR.",https://github.com/bitcoin/bitcoin/pull/20852#discussion_r553839141,553839141,src/netaddress.cpp
jonatack,2021-01-08 15:52:42,"The test sees only one entry in listbanned, the added one. If it is moved above the previous test, there will also be a second entry in listbanned, e.g.\n```python3\n[\n  {'address': '127.0.0.1/32', ...},\n  {'address': 'pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion', ...}\n]\n```\n\nHere's a suggestion to do that, add logging, and also assert pre-add and post-remove (with",https://github.com/bitcoin/bitcoin/pull/20852#discussion_r554025317,554025317,test/functional/rpc_setban.py
jonatack,2021-01-08 16:12:43,Maybe add `valid = false;` here as belt and suspenders.,https://github.com/bitcoin/bitcoin/pull/20852#discussion_r554040310,554040310,src/netaddress.cpp
vasild,2021-01-10 14:54:13,"Added something like that in 39b43298d, thanks!",https://github.com/bitcoin/bitcoin/pull/20852#discussion_r554578622,554578622,test/functional/rpc_setban.py
