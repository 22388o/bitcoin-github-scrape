[
  {
    "sha": "54e1edcc2bca76f783170768e65bf0850b036b81",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NGUxZWRjYzJiY2E3NmY3ODMxNzA3NjhlNjViZjA4NTBiMDM2Yjgx",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-19T17:38:00Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-26T18:31:26Z"
      },
      "message": "Allow zero-fee fundrawtxn and walletcreatefundedpsbt calls\n\nA check to raise an error on zero-fee txns was mistakenly extended in commit\na0d4957 from the bumpfee and send{toaddress, many} RPCs to also include\nfundrawtransaction and walletcreatefundedpsbt.\n\nThis commit overrides zero fee rate checking for these two RPCs, not only for\nthe feeRate (BTC/kvB) arg to return to previous behavior, but also for the new\nfee_rate (sat/vB) arg.\n\nGithub-Pull: #20426\nRebased-From: 1b3d7009280595108eb22ac1188bc43678",
      "tree": {
        "sha": "a2d17d01f56aeb73309c912c181db4f3359e3166",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a2d17d01f56aeb73309c912c181db4f3359e3166"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54e1edcc2bca76f783170768e65bf0850b036b81",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+/9KEACgkQT1chs9Dj\nkh14ZA//THOZCeWvy41y/r2x0Pf/77P9q9G99dscLs+uZ782gVt3AvZ4ch9J+IK+\nEd8Y7Tgeg05Y5rjvAXU/+p+0w17A4PYaIp5vXjMQOOICHid63jK1q5JmrN/p8xJL\niJv/WJwpjFZ97PiL53TLuKiiGu0Yv62kLIY9rRgJQdJCdqI02hFondBkYv7t6seN\nNkEo8mNq5+pHGqKhM4eU2eDt2jT4acNrih3jxNOzNjZ4W8jrvfdOdC+00ocaWiPo\n2K4eqL2VwPF/8T7F0gigeSaZE1+qWQs7jcBHnXSa3Q0az18EqSqQNfLfia+NuVMR\n4EcezwwXBRQNDJ9plYM1Rr0XtVQE8VKcrFKbRBdTVVZd/qZcNpJDbRQq4epUbmlE\nKabqRGahjgBCE4pd+xbS0W26oZ716YIXvs7wHrhF+Mp37VtnIKvh1u4sb967AF01\n8OrLyoveCwLScaIglFEtiE36UpGwlcvNE87j8QE5gdYbh8TssyTpJWfvd8Q1fkHt\nEx01kRlxCM6IfVFGZLb4h2IGQybL2yb1KfksXZm5+OwfvS6M1L5A5msutsJHw4hP\nindtmeLeEHqXJCccOYL082Dz1O8/d6aDKlal9Eika5Zw37nUEsu0RsmTn/0OsZrN\nexpK33aTw1rejnoSrx33FG5z5db3ZgVMc18SnZ0BbErt937E5jA=\n=9H2h\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIJD/gySvCAQSIsnxlsuEXkPmAqK4hghes3GvvIJKLu+GCP/wECNpQvNZVCLE\nCaRDIFEKLo0I8QRfv/Sj8AgqHAx9ajxLPwCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQRFoIuJcP+tvNsbkB\nwbrfIwjxBF+/9KPwCMdaH4pPAL28AIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMu\nY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQ4Be6x69DceRM9UIfHCWJyAjx\nBF+/9KfwCKO4BwBpvvPNAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRh\nci5ldGVybml0eXdhbGwuY29t8BDzUczxm5TzhQVg8O31YSeCCPEEX7/0o/AIKCbD\nDiwLABEAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree a2d17d01f56aeb73309c912c181db4f3359e3166\nparent 9facca3ce0ad3c325676f9c9f0e6ed4429f0c335\nauthor Jon Atack <jon@atack.com> 1605807480 +0100\ncommitter Jon Atack <jon@atack.com> 1606415486 +0100\n\nAllow zero-fee fundrawtxn and walletcreatefundedpsbt calls\n\nA check to raise an error on zero-fee txns was mistakenly extended in commit\na0d4957 from the bumpfee and send{toaddress, many} RPCs to also include\nfundrawtransaction and walletcreatefundedpsbt.\n\nThis commit overrides zero fee rate checking for these two RPCs, not only for\nthe feeRate (BTC/kvB) arg to return to previous behavior, but also for the new\nfee_rate (sat/vB) arg.\n\nGithub-Pull: #20426\nRebased-From: 1b3d7009280595108eb22ac1188bc43678\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54e1edcc2bca76f783170768e65bf0850b036b81",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/54e1edcc2bca76f783170768e65bf0850b036b81",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54e1edcc2bca76f783170768e65bf0850b036b81/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9facca3ce0ad3c325676f9c9f0e6ed4429f0c335",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9facca3ce0ad3c325676f9c9f0e6ed4429f0c335",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9facca3ce0ad3c325676f9c9f0e6ed4429f0c335"
      }
    ],
    "stats": {
      "total": 55,
      "additions": 27,
      "deletions": 28
    },
    "files": [
      {
        "sha": "428531c3dad770076a399c0ba30294cff55d3526",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 13,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54e1edcc2bca76f783170768e65bf0850b036b81/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54e1edcc2bca76f783170768e65bf0850b036b81/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=54e1edcc2bca76f783170768e65bf0850b036b81",
        "patch": "@@ -217,14 +217,8 @@ static void SetFeeEstimateMode(const CWallet& wallet, CCoinControl& cc, const Un\n         if (!estimate_mode.isNull() && estimate_mode.get_str() != \"unset\") {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both estimate_mode and fee_rate\");\n         }\n-        CFeeRate fee_rate_in_sat_vb{CFeeRate(AmountFromValue(fee_rate), COIN)};\n-        if (override_min_fee) {\n-            if (fee_rate_in_sat_vb <= CFeeRate(0)) {\n-                throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Invalid fee_rate %s (must be greater than 0)\", fee_rate_in_sat_vb.ToString(FeeEstimateMode::SAT_VB)));\n-            }\n-            cc.fOverrideFeeRate = true;\n-        }\n-        cc.m_feerate = fee_rate_in_sat_vb;\n+        cc.m_feerate = CFeeRate(AmountFromValue(fee_rate), COIN);\n+        if (override_min_fee) cc.fOverrideFeeRate = true;\n         // Default RBF to true for explicit fee_rate, if unset.\n         if (cc.m_signal_bip125_rbf == nullopt) cc.m_signal_bip125_rbf = true;\n         return;\n@@ -3148,11 +3142,7 @@ void FundTransaction(CWallet* const pwallet, CMutableTransaction& tx, CAmount& f\n             if (options.exists(\"estimate_mode\")) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both estimate_mode and feeRate\");\n             }\n-            CFeeRate fee_rate(AmountFromValue(options[\"feeRate\"]));\n-            if (fee_rate <= CFeeRate(0)) {\n-                throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Invalid feeRate %s (must be greater than 0)\", fee_rate.ToString(FeeEstimateMode::BTC_KVB)));\n-            }\n-            coinControl.m_feerate = fee_rate;\n+            coinControl.m_feerate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n             coinControl.fOverrideFeeRate = true;\n         }\n "
      },
      {
        "sha": "8ee0ecab0acad273b4537cf1690f0edc0bd3516e",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 9,
        "deletions": 7,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54e1edcc2bca76f783170768e65bf0850b036b81/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54e1edcc2bca76f783170768e65bf0850b036b81/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=54e1edcc2bca76f783170768e65bf0850b036b81",
        "patch": "@@ -721,11 +721,17 @@ def test_option_feerate(self):\n         result2 = node.fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee})\n         result3 = node.fundrawtransaction(rawtx, {\"fee_rate\": 10 * btc_kvb_to_sat_vb * self.min_relay_tx_fee})\n         result4 = node.fundrawtransaction(rawtx, {\"feeRate\": 10 * self.min_relay_tx_fee})\n+        # Test that funding non-standard \"zero-fee\" transactions is valid.\n+        result5 = self.nodes[3].fundrawtransaction(rawtx, {\"fee_rate\": 0})\n+        result6 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 0})\n+\n         result_fee_rate = result['fee'] * 1000 / count_bytes(result['hex'])\n         assert_fee_amount(result1['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n         assert_fee_amount(result4['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n+        assert_fee_amount(result5['fee'], count_bytes(result5['hex']), 0)\n+        assert_fee_amount(result6['fee'], count_bytes(result6['hex']), 0)\n \n         # With no arguments passed, expect fee of 141 satoshis.\n         assert_approx(node.fundrawtransaction(rawtx)[\"fee\"], vexp=0.00000141, vspan=0.00000001)\n@@ -752,19 +758,15 @@ def test_option_feerate(self):\n                     node.fundrawtransaction, rawtx, {\"estimate_mode\": mode, \"conf_target\": n, \"add_inputs\": True})\n \n         self.log.info(\"Test invalid fee rate settings\")\n-        assert_raises_rpc_error(-8, \"Invalid fee_rate 0.000 sat/vB (must be greater than 0)\",\n-            node.fundrawtransaction, rawtx, {\"fee_rate\": 0, \"add_inputs\": True})\n-        assert_raises_rpc_error(-8, \"Invalid feeRate 0.00000000 BTC/kvB (must be greater than 0)\",\n-            node.fundrawtransaction, rawtx, {\"feeRate\": 0, \"add_inputs\": True})\n         for param, value in {(\"fee_rate\", 100000), (\"feeRate\", 1.000)}:\n             assert_raises_rpc_error(-4, \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\",\n                 node.fundrawtransaction, rawtx, {param: value, \"add_inputs\": True})\n             assert_raises_rpc_error(-3, \"Amount out of range\",\n-                node.fundrawtransaction, rawtx, {\"fee_rate\": -1, \"add_inputs\": True})\n+                node.fundrawtransaction, rawtx, {param: -1, \"add_inputs\": True})\n             assert_raises_rpc_error(-3, \"Amount is not a number or string\",\n-                node.fundrawtransaction, rawtx, {\"fee_rate\": {\"foo\": \"bar\"}, \"add_inputs\": True})\n+                node.fundrawtransaction, rawtx, {param: {\"foo\": \"bar\"}, \"add_inputs\": True})\n             assert_raises_rpc_error(-3, \"Invalid amount\",\n-                node.fundrawtransaction, rawtx, {\"fee_rate\": \"\", \"add_inputs\": True})\n+                node.fundrawtransaction, rawtx, {param: \"\", \"add_inputs\": True})\n \n         self.log.info(\"Test min fee rate checks are bypassed with fundrawtxn, e.g. a fee_rate under 1 sat/vB is allowed\")\n         node.fundrawtransaction(rawtx, {\"fee_rate\": 0.99999999, \"add_inputs\": True})"
      },
      {
        "sha": "5840801b009262daf918a7a28eff9a31359cc3b6",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54e1edcc2bca76f783170768e65bf0850b036b81/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54e1edcc2bca76f783170768e65bf0850b036b81/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=54e1edcc2bca76f783170768e65bf0850b036b81",
        "patch": "@@ -192,26 +192,27 @@ def run_test(self):\n         assert_approx(res1[\"fee\"], 0.055, 0.005)\n         res2 = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"feeRate\": 0.1, \"add_inputs\": True})\n         assert_approx(res2[\"fee\"], 0.055, 0.005)\n+\n         self.log.info(\"Test min fee rate checks with walletcreatefundedpsbt are bypassed, e.g. a fee_rate under 1 sat/vB is allowed\")\n         res3 = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"fee_rate\": 0.99999999, \"add_inputs\": True})\n         assert_approx(res3[\"fee\"], 0.00000381, 0.0000001)\n         res4 = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"feeRate\": 0.00000999, \"add_inputs\": True})\n         assert_approx(res4[\"fee\"], 0.00000381, 0.0000001)\n \n+        self.log.info(\"Test min fee rate checks with walletcreatefundedpsbt are bypassed and that funding non-standard 'zero-fee' transactions is valid\")\n+        for param in [\"fee_rate\", \"feeRate\"]:\n+            assert_equal(self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {param: 0, \"add_inputs\": True})[\"fee\"], 0)\n+\n         self.log.info(\"Test invalid fee rate settings\")\n-        assert_raises_rpc_error(-8, \"Invalid fee_rate 0.000 sat/vB (must be greater than 0)\",\n-            self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {\"fee_rate\": 0, \"add_inputs\": True})\n-        assert_raises_rpc_error(-8, \"Invalid feeRate 0.00000000 BTC/kvB (must be greater than 0)\",\n-            self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {\"feeRate\": 0, \"add_inputs\": True})\n         for param, value in {(\"fee_rate\", 100000), (\"feeRate\", 1)}:\n             assert_raises_rpc_error(-4, \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\",\n                 self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {param: value, \"add_inputs\": True})\n             assert_raises_rpc_error(-3, \"Amount out of range\",\n-                self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {\"fee_rate\": -1, \"add_inputs\": True})\n+                self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {param: -1, \"add_inputs\": True})\n             assert_raises_rpc_error(-3, \"Amount is not a number or string\",\n-                self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {\"fee_rate\": {\"foo\": \"bar\"}, \"add_inputs\": True})\n+                self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {param: {\"foo\": \"bar\"}, \"add_inputs\": True})\n             assert_raises_rpc_error(-3, \"Invalid amount\",\n-                self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {\"fee_rate\": \"\", \"add_inputs\": True})\n+                self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {param: \"\", \"add_inputs\": True})\n \n         self.log.info(\"- raises RPC error if both feeRate and fee_rate are passed\")\n         assert_raises_rpc_error(-8, \"Cannot specify both fee_rate (sat/vB) and feeRate (BTC/kvB)\","
      },
      {
        "sha": "192e9065e6699395339cc74ddfc610cb54885281",
        "filename": "test/functional/wallet_send.py",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54e1edcc2bca76f783170768e65bf0850b036b81/test/functional/wallet_send.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54e1edcc2bca76f783170768e65bf0850b036b81/test/functional/wallet_send.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_send.py?ref=54e1edcc2bca76f783170768e65bf0850b036b81",
        "patch": "@@ -302,10 +302,16 @@ def run_test(self):\n                 self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=v, estimate_mode=mode,\n                     expect_error=(-3, \"Expected type number for conf_target, got {}\".format(k)))\n \n-        # Test setting explicit fee rate just below the minimum.\n+        # Test setting explicit fee rate just below the minimum and at zero.\n         self.log.info(\"Explicit fee rate raises RPC error 'fee rate too low' if fee_rate of 0.99999999 is passed\")\n         self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=0.99999999,\n             expect_error=(-4, \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n+        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=0.99999999,\n+            expect_error=(-4, \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n+        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=0,\n+            expect_error=(-4, \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n+        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=0,\n+            expect_error=(-4, \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n \n         # TODO: Return hex if fee rate is below -maxmempool\n         # res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=0.1, estimate_mode=\"sat/b\", add_to_wallet=False)"
      }
    ]
  },
  {
    "sha": "6e4969f76f58518d47ce2f2cdfc4e3ef1f2228bd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZTQ5NjlmNzZmNTg1MThkNDdjZTJmMmNkZmM0ZTNlZjFmMjIyOGJk",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-19T17:47:24Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-26T18:32:06Z"
      },
      "message": "Update feeRate (BTC/kvB) to fee_rate (sat/vB) in wallet_bumpfee\n\nas the feeRate argument should soon be deprecated.\n\nAlso loosen one test (and a similar one) that caused a one-off CI failure with:\nexpected message\n'Insufficient total fee 0.00000141, must be at least 0.00001704 (oldFee 0.00000999 + incrementalFee 0.00000705)'\nactual message\n'Insufficient total fee 0.00000141, must be at least 0.00001712 (oldFee 0.00001007 + incrementalFee 0.00000705)'\n\nGithub-Pull: #20426\nRebased-From: 3f1e10b2b1cd11f7112fbad6355464bd4adbbc5c",
      "tree": {
        "sha": "8f494a57a3994e4ba933f9c3ec00031083a47d31",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8f494a57a3994e4ba933f9c3ec00031083a47d31"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6e4969f76f58518d47ce2f2cdfc4e3ef1f2228bd",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+/9LkACgkQT1chs9Dj\nkh3pXg//R1PGmKEx6hx7+arGOG9DmJtMScT4s4PwIK9Nnv0B1wQ1korqY+QyYw2n\nrG+vBLm+s01wJM0gjMeapyumBH9LxnZ1ahvNuRzLPpF7SrtVwJgNRHU6kLn6cvC8\nsKxELOWwCEnRICYhDTeJSqpizxvU3ZZelJnMavUa0VQC3mUFPhjrpib2COxb1eez\n2n8BaigRxpa9auwMu08DGz4iBe3ha6AiuQ7QJAZL2mHxpPsrkpwrOJogBWzdtKLz\n8bse/8+g2kj2Sd3CoDrWLRBY/JQsFsRTtYChvSwDGZ6ZKqSgmtqOBn+FuUbUfyM/\n/F2URrTbIyNO+SdFoPLCRcG6GdmmvU6tdSrClHufq+vNGnwppyHV4M/zJnLZP3xz\nun0C/qUIx54kuGFW3d1L2dTUfcR7K18RdaosYcqKZK9ujuSvK/MaZwo8+b1yaGcJ\nKVFBNvPwnjrbeMDSnFIlc4k3qrLsaKLNlVj5WRcOeaeIwX2Q4RWsQJvP7p0+3uDO\nJanTJiKHAjyqB+3DahnyIs+Os7U5dTfek7DaQJm56B665HePnr5u5baFuLJPjphs\nZLb7BtDIFFt9a4735nHT4SiN64paQ6SZRedLbbD+fg6XJ9y8sIT3RYmYEiJKN11B\nbg2lTnuI0rpRpZkt0dyseJy3TcIjFaaD0K6k+hnSRJ/EAszPfNE=\n=hljK\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIIBZ8Groh2jr8hKSPYMsEsEvNJU+73Ws+3JqwIjo432nCP/wEDcWfEa71GSS\n5WirNnLuoj0I8QRfv/S68Agok/EyVgxxcACD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEIqW7DdfD9WhgbaMRoZV\nD80I8QRfv/S+8AguYYjmY3SKvwCD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2Fs\nZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEKCwzE51Bqv2Gm2/XG/cmg4I8QRfv/S6\n8AgdJgIebddHYwCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn8BDYBjSaELx97FZ10/1GQVCsCPEEX7/0u/AI8UWu\n9NGYzO0Ag9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 8f494a57a3994e4ba933f9c3ec00031083a47d31\nparent 54e1edcc2bca76f783170768e65bf0850b036b81\nauthor Jon Atack <jon@atack.com> 1605808044 +0100\ncommitter Jon Atack <jon@atack.com> 1606415526 +0100\n\nUpdate feeRate (BTC/kvB) to fee_rate (sat/vB) in wallet_bumpfee\n\nas the feeRate argument should soon be deprecated.\n\nAlso loosen one test (and a similar one) that caused a one-off CI failure with:\nexpected message\n'Insufficient total fee 0.00000141, must be at least 0.00001704 (oldFee 0.00000999 + incrementalFee 0.00000705)'\nactual message\n'Insufficient total fee 0.00000141, must be at least 0.00001712 (oldFee 0.00001007 + incrementalFee 0.00000705)'\n\nGithub-Pull: #20426\nRebased-From: 3f1e10b2b1cd11f7112fbad6355464bd4adbbc5c\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e4969f76f58518d47ce2f2cdfc4e3ef1f2228bd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6e4969f76f58518d47ce2f2cdfc4e3ef1f2228bd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e4969f76f58518d47ce2f2cdfc4e3ef1f2228bd/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "54e1edcc2bca76f783170768e65bf0850b036b81",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54e1edcc2bca76f783170768e65bf0850b036b81",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/54e1edcc2bca76f783170768e65bf0850b036b81"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 3,
      "deletions": 5
    },
    "files": [
      {
        "sha": "99c97372583bff9d5a5025d91d37ac1582a573fe",
        "filename": "test/functional/wallet_bumpfee.py",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e4969f76f58518d47ce2f2cdfc4e3ef1f2228bd/test/functional/wallet_bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e4969f76f58518d47ce2f2cdfc4e3ef1f2228bd/test/functional/wallet_bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_bumpfee.py?ref=6e4969f76f58518d47ce2f2cdfc4e3ef1f2228bd",
        "patch": "@@ -107,12 +107,10 @@ def test_invalid_parameters(self, rbf_node, peer_node, dest_address):\n             assert_raises_rpc_error(-3, \"Unexpected key {}\".format(key), rbf_node.bumpfee, rbfid, {key: NORMAL})\n \n         # Bumping to just above minrelay should fail to increase the total fee enough.\n-        assert_raises_rpc_error(-8, \"Insufficient total fee 0.00000141, must be at least 0.00001704 (oldFee 0.00000999 + incrementalFee 0.00000705)\",\n-            rbf_node.bumpfee, rbfid, {\"fee_rate\": INSUFFICIENT})\n+        assert_raises_rpc_error(-8, \"Insufficient total fee 0.00000141\", rbf_node.bumpfee, rbfid, {\"fee_rate\": INSUFFICIENT})\n \n         self.log.info(\"Test invalid fee rate settings\")\n-        assert_raises_rpc_error(-8, \"Insufficient total fee 0.00, must be at least 0.00001704 (oldFee 0.00000999 + incrementalFee 0.00000705)\",\n-            rbf_node.bumpfee, rbfid, {\"fee_rate\": 0})\n+        assert_raises_rpc_error(-8, \"Insufficient total fee 0.00\", rbf_node.bumpfee, rbfid, {\"fee_rate\": 0})\n         assert_raises_rpc_error(-4, \"Specified or calculated fee 0.141 is too high (cannot be higher than -maxtxfee 0.10\",\n             rbf_node.bumpfee, rbfid, {\"fee_rate\": TOO_HIGH})\n         assert_raises_rpc_error(-3, \"Amount out of range\", rbf_node.bumpfee, rbfid, {\"fee_rate\": -1})\n@@ -421,7 +419,7 @@ def test_watchonly_psbt(self, peer_node, rbf_node, dest_address):\n     self.sync_all()\n \n     # Create single-input PSBT for transaction to be bumped\n-    psbt = watcher.walletcreatefundedpsbt([], {dest_address: 0.0005}, 0, {\"feeRate\": 0.00001}, True)['psbt']\n+    psbt = watcher.walletcreatefundedpsbt([], {dest_address: 0.0005}, 0, {\"fee_rate\": 1}, True)['psbt']\n     psbt_signed = signer.walletprocesspsbt(psbt=psbt, sign=True, sighashtype=\"ALL\", bip32derivs=True)\n     psbt_final = watcher.finalizepsbt(psbt_signed[\"psbt\"])\n     original_txid = watcher.sendrawtransaction(psbt_final[\"hex\"])"
      }
    ]
  },
  {
    "sha": "6313362553d91bddb75a43f62dffbec16065e4d6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MzEzMzYyNTUzZDkxYmRkYjc1YTQzZjYyZGZmYmVjMTYwNjVlNGQ2",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-19T16:31:07Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-26T18:32:30Z"
      },
      "message": "Use the correct incremental fee constant in bumpfee help\n\nand remove redundant units (\"Must be at least 1.000 sat/vB sat/vB\" -> \"1.00 sat vB\")\n\nGithub-Pull: #20426\nRebased-From: 9f08780dd7946b63476e9736745131db8e7f4e93",
      "tree": {
        "sha": "4c982e985d001274a1df1b4696b2228b93e93d99",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4c982e985d001274a1df1b4696b2228b93e93d99"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6313362553d91bddb75a43f62dffbec16065e4d6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+/9NYACgkQT1chs9Dj\nkh1ugw/+M5b+wP2QXqh3JYf/YPEo4ircL5A1sOhjoxZQGc55NwBFZAtgBzReIHVM\n+qEVELK/GrskgzI2W9gA2phRjCBVr6pEYL7IZRPYWOjUeGzmR6+/mQvS7TLEb7cF\nQ/JawWxRLsK0HsLWcUO2MbcorZkAMV1DbSGKQVdMhyfUZEr1tE9kSfIkZTTDN/li\nrcxjh3i/tToHyBYQ7bFkYb8DBrJNxjkyrvvq2aT3MYBaf/PWdnozyw7OloQh5m9Z\nS3CHRkT6mNrQ6CQm5fGvguzeHLCCvRd5oQ80F4yPZn00GAAAh1nI97gdf+jZs9eF\n0j2oAqvAF4tIRBtXsNQTHopzmZYlXk33ZucjrpIySQ3s3HUke3VXN3+z6k9IyxYS\nuvYjIWQiVOCNsRn0g1bHQNmD1Mj9+0kJvAUXfRj/K7WvTarbDPLXoalr3Gd477sC\n4ohsd89rf7AInydPzlJ7ykQJc8HWDr8AVdkIVaWFB4/6g92zaiPSaxUFtWH/tmrm\nQHadjuxppD4tWmHToAYRM29Yw5qpK89xQXS5+YhWsNGAp5I0Os/LTZC7K8rsopMX\nSeHh1e0F8cmgwhOE/zJsxkyrG4+SAzaEEupTV7+IKvTCBUf5hiOMWeAe/ntZDorD\nw5FPJC9v+DgyPYEanFnSDha43pfZ+EkTQW4SXEX8rS2uBxr9DII=\n=IpFK\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwICCkAC3Vkcse/Oy8S8yq4DxeBr7BKwFiX37IDPP/8CCUCP/wECvX08YyBpsk\nZ0B0XG0HX4UI8QRfv/TY8AjvR3UeMm/euwCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQVUpWH+O6d1iApjId\n4d2tCgjxBF+/9NvwCAb8V66RxV+pAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5j\nYWxlbmRhci5ldGVybml0eXdhbGwuY29t//AQnIaNOa+dumtcl5NOx8RUTAjxBF+/\n9NjwCH7UwPklKqRuAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn8BDkEEITRAYmsophFjyGYG/XCPEEX7/02PAIUzWG\nY5IW9koAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 4c982e985d001274a1df1b4696b2228b93e93d99\nparent 6e4969f76f58518d47ce2f2cdfc4e3ef1f2228bd\nauthor Jon Atack <jon@atack.com> 1605803467 +0100\ncommitter Jon Atack <jon@atack.com> 1606415550 +0100\n\nUse the correct incremental fee constant in bumpfee help\n\nand remove redundant units (\"Must be at least 1.000 sat/vB sat/vB\" -> \"1.00 sat vB\")\n\nGithub-Pull: #20426\nRebased-From: 9f08780dd7946b63476e9736745131db8e7f4e93\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6313362553d91bddb75a43f62dffbec16065e4d6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6313362553d91bddb75a43f62dffbec16065e4d6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6313362553d91bddb75a43f62dffbec16065e4d6/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6e4969f76f58518d47ce2f2cdfc4e3ef1f2228bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e4969f76f58518d47ce2f2cdfc4e3ef1f2228bd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6e4969f76f58518d47ce2f2cdfc4e3ef1f2228bd"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 2,
      "deletions": 3
    },
    "files": [
      {
        "sha": "9ba10e6c390dbe625850aefff3473e40f70c687d",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6313362553d91bddb75a43f62dffbec16065e4d6/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6313362553d91bddb75a43f62dffbec16065e4d6/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=6313362553d91bddb75a43f62dffbec16065e4d6",
        "patch": "@@ -29,7 +29,6 @@\n #include <util/translation.h>\n #include <util/url.h>\n #include <util/vector.h>\n-#include <validation.h>\n #include <wallet/coincontrol.h>\n #include <wallet/context.h>\n #include <wallet/feebumper.h>\n@@ -3381,7 +3380,7 @@ RPCHelpMan signrawtransactionwithwallet()\n static RPCHelpMan bumpfee_helper(std::string method_name)\n {\n     bool want_psbt = method_name == \"psbtbumpfee\";\n-    const std::string incremental_fee{CFeeRate(DEFAULT_MIN_RELAY_TX_FEE).ToString(FeeEstimateMode::SAT_VB)};\n+    const std::string incremental_fee{CFeeRate(DEFAULT_INCREMENTAL_RELAY_FEE).ToString(FeeEstimateMode::SAT_VB)};\n \n     return RPCHelpMan{method_name,\n         \"\\nBumps the fee of an opt-in-RBF transaction T, replacing it with a new transaction B.\\n\"\n@@ -3404,7 +3403,7 @@ static RPCHelpMan bumpfee_helper(std::string method_name)\n                     {\"conf_target\", RPCArg::Type::NUM, /* default */ \"wallet -txconfirmtarget\", \"Confirmation target in blocks\\n\"},\n                     {\"fee_rate\", RPCArg::Type::AMOUNT, /* default */ \"not set, fall back to wallet fee estimation\",\n                              \"\\nSpecify a fee rate in \" + CURRENCY_ATOM + \"/vB instead of relying on the built-in fee estimator.\\n\"\n-                             \"Must be at least \" + incremental_fee + \" \" + CURRENCY_ATOM + \"/vB higher than the current transaction fee rate.\\n\"\n+                             \"Must be at least \" + incremental_fee + \" higher than the current transaction fee rate.\\n\"\n                              \"WARNING: before version 0.21, fee_rate was in \" + CURRENCY_UNIT + \"/kvB. As of 0.21, fee_rate is in \" + CURRENCY_ATOM + \"/vB.\\n\"},\n                     {\"replaceable\", RPCArg::Type::BOOL, /* default */ \"true\", \"Whether the new transaction should still be\\n\"\n                              \"marked bip-125 replaceable. If true, the sequence numbers in the transaction will\\n\""
      }
    ]
  }
]