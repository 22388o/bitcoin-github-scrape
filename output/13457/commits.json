[
  {
    "sha": "faf52f953b47aac6a39892b037eaa3f08d46b655",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWY1MmY5NTNiNDdhYWM2YTM5ODkyYjAzN2VhYTNmMDhkNDZiNjU1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-06-13T13:56:04Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-06-13T13:58:54Z"
      },
      "message": "tests: Drop variadic macro",
      "tree": {
        "sha": "4f53787f44a6c626330664c402ac87ce4544a9a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4f53787f44a6c626330664c402ac87ce4544a9a5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faf52f953b47aac6a39892b037eaa3f08d46b655",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJbISMeAAoJEM4rdWl+aaVI9kUL/iL3A/y5K7mSJ24oVPes8630\nB4o3/R9BI4OE4M2KxgeALgTgjCkNurlffpV/+RING9TUofUPfasb/6fhTWfZCE2z\nW0vTrbFm76aDETF96I8so8tLC6XdzivjZcxr4YQP0xeBS7aCY0WbdU42M3oIEWQ9\nYusNFMgZUAEeDmwYUkOT8ph0PBnuZKGtjFzIqzNsU3eh6G/PNrivfK5wLvPfkM9z\nL/kSMv4Y79nBsfG5Gre/31JLNrGL3qHRp7z6hv/QNVgPuWASwCpGd6iVQn3RUvFM\nBDEaK+GvOWABB9E2NC6QqGBgVyN/D9oITZErYU/O0RfuIi0Ffj/5ODxewLn0BFul\n8o4HWm7kcB2RbCpCMbvzFEdN2lU7UhOFbjVjpBqQWpV9zWw+d+p91fwGrR40WJbg\neN/LdhuyE55/HRXi43L+UZphbipHFYt+EwUFrsNlBJYb5iPMN4i161qsTlLKNTVy\nXSfXZlQpvvQdjHHMs0p1XYl2ECZXoctvTXfjGA1nFg==\n=62+u\n-----END PGP SIGNATURE-----",
        "payload": "tree 4f53787f44a6c626330664c402ac87ce4544a9a5\nparent a607d23ae82ee374799d21d02932d945c1ce9616\nauthor MarcoFalke <falke.marco@gmail.com> 1528898164 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1528898334 -0400\n\ntests: Drop variadic macro\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf52f953b47aac6a39892b037eaa3f08d46b655",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faf52f953b47aac6a39892b037eaa3f08d46b655",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf52f953b47aac6a39892b037eaa3f08d46b655/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a607d23ae82ee374799d21d02932d945c1ce9616",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a607d23ae82ee374799d21d02932d945c1ce9616",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a607d23ae82ee374799d21d02932d945c1ce9616"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 6,
      "deletions": 9
    },
    "files": [
      {
        "sha": "0264d29455d80a700a18c046eb299207248cb6d4",
        "filename": "src/test/mempool_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 9,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf52f953b47aac6a39892b037eaa3f08d46b655/src/test/mempool_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf52f953b47aac6a39892b037eaa3f08d46b655/src/test/mempool_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/mempool_tests.cpp?ref=faf52f953b47aac6a39892b037eaa3f08d46b655",
        "patch": "@@ -587,9 +587,6 @@ inline CTransactionRef make_tx(std::vector<CAmount>&& output_values, std::vector\n     return MakeTransactionRef(tx);\n }\n \n-#define MK_OUTPUTS(amounts...) std::vector<CAmount>{amounts}\n-#define MK_INPUTS(txs...) std::vector<CTransactionRef>{txs}\n-#define MK_INPUT_IDX(idxes...) std::vector<uint32_t>{idxes}\n \n BOOST_AUTO_TEST_CASE(MempoolAncestryTests)\n {\n@@ -602,7 +599,7 @@ BOOST_AUTO_TEST_CASE(MempoolAncestryTests)\n     //\n     // [tx1]\n     //\n-    CTransactionRef tx1 = make_tx(MK_OUTPUTS(10 * COIN));\n+    CTransactionRef tx1 = make_tx(/* output_values */ {10 * COIN});\n     pool.addUnchecked(tx1->GetHash(), entry.Fee(10000LL).FromTx(tx1));\n \n     // Ancestors / descendants should be 1 / 1 (itself / itself)\n@@ -614,7 +611,7 @@ BOOST_AUTO_TEST_CASE(MempoolAncestryTests)\n     //\n     // [tx1].0 <- [tx2]\n     //\n-    CTransactionRef tx2 = make_tx(MK_OUTPUTS(495 * CENT, 5 * COIN), MK_INPUTS(tx1));\n+    CTransactionRef tx2 = make_tx(/* output_values */ {495 * CENT, 5 * COIN}, /* inputs */ {tx1});\n     pool.addUnchecked(tx2->GetHash(), entry.Fee(10000LL).FromTx(tx2));\n \n     // Ancestors / descendants should be:\n@@ -633,7 +630,7 @@ BOOST_AUTO_TEST_CASE(MempoolAncestryTests)\n     //\n     // [tx1].0 <- [tx2].0 <- [tx3]\n     //\n-    CTransactionRef tx3 = make_tx(MK_OUTPUTS(290 * CENT, 200 * CENT), MK_INPUTS(tx2));\n+    CTransactionRef tx3 = make_tx(/* output_values */ {290 * CENT, 200 * CENT}, /* inputs */ {tx2});\n     pool.addUnchecked(tx3->GetHash(), entry.Fee(10000LL).FromTx(tx3));\n \n     // Ancestors / descendants should be:\n@@ -658,7 +655,7 @@ BOOST_AUTO_TEST_CASE(MempoolAncestryTests)\n     //              |\n     //              \\---1 <- [tx4]\n     //\n-    CTransactionRef tx4 = make_tx(MK_OUTPUTS(290 * CENT, 250 * CENT), MK_INPUTS(tx2), MK_INPUT_IDX(1));\n+    CTransactionRef tx4 = make_tx(/* output_values */ {290 * CENT, 250 * CENT}, /* inputs */ {tx2}, /* input_indices */ {1});\n     pool.addUnchecked(tx4->GetHash(), entry.Fee(10000LL).FromTx(tx4));\n \n     // Ancestors / descendants should be:\n@@ -694,14 +691,14 @@ BOOST_AUTO_TEST_CASE(MempoolAncestryTests)\n     CAmount v = 5 * COIN;\n     for (uint64_t i = 0; i < 5; i++) {\n         CTransactionRef& tyi = *ty[i];\n-        tyi = make_tx(MK_OUTPUTS(v), i > 0 ? MK_INPUTS(*ty[i-1]) : std::vector<CTransactionRef>());\n+        tyi = make_tx(/* output_values */ {v}, /* inputs */ i > 0 ? std::vector<CTransactionRef>{*ty[i - 1]} : std::vector<CTransactionRef>{});\n         v -= 50 * CENT;\n         pool.addUnchecked(tyi->GetHash(), entry.Fee(10000LL).FromTx(tyi));\n         pool.GetTransactionAncestry(tyi->GetHash(), ancestors, descendants);\n         BOOST_CHECK_EQUAL(ancestors, i+1);\n         BOOST_CHECK_EQUAL(descendants, i+1);\n     }\n-    CTransactionRef ty6 = make_tx(MK_OUTPUTS(5 * COIN), MK_INPUTS(tx3, ty5));\n+    CTransactionRef ty6 = make_tx(/* output_values */ {5 * COIN}, /* inputs */ {tx3, ty5});\n     pool.addUnchecked(ty6->GetHash(), entry.Fee(10000LL).FromTx(ty6));\n \n     // Ancestors / descendants should be:"
      }
    ]
  }
]