[
  {
    "sha": "5f96c4ca0ecc14129dd367cd8451049220658bf8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1Zjk2YzRjYTBlY2MxNDEyOWRkMzY3Y2Q4NDUxMDQ5MjIwNjU4YmY4",
    "commit": {
      "author": {
        "name": "Jakub Trnka",
        "email": "jakub.trnka@chainanalytics.net",
        "date": "2018-03-24T21:53:59Z"
      },
      "committer": {
        "name": "Jakub Trnka",
        "email": "jakub.trnka@chainanalytics.net",
        "date": "2018-03-24T21:53:59Z"
      },
      "message": "Issue #10542 Signmessage doesn't work with segwit addresses\n\nbitcoin-cli verifymessage was extended to verify signatures against both\nbech32 and segwit-p2sh. Class PubkeyConsistencyVisitor has been added\nwhich takes extracted public key as constructor argument and verifies\nsignatures against all meaningful CTxDestinations.\n\nSignmessage will be implemented soon.",
      "tree": {
        "sha": "3440cd5cc6b1f383b39acbee419257e07ea043a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3440cd5cc6b1f383b39acbee419257e07ea043a1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5f96c4ca0ecc14129dd367cd8451049220658bf8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "no_user",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCAAdFiEENXZNQ+ErfBFqmTrhhOVgoi9saQwFAlq2yQIACgkQhOVgoi9s\naQyxcwv+Nc59qmosR9aNQt2WGzWYafvx8UDC3E02zGnT20Bamhl6F0wEGTTpqGCh\naIcksjjg3qfjsKkqMvjiRExqV7GvDqE1YLxn9S6xrMH5pJCmzJjjywaWGpQxQGKw\nzCPXW2IABVYbxLDDulfhLGE0889wq46sPnZznLXKVQPmC3K1NzdxSaCECHNOJLO2\nEiE7KlzKZnxpkww9NGJv7S6gEhSM2S0Rzlk48KMqWYM47AWpTUG6TnVRlBxBU1RH\n8uo1N/Fe5jUNFIUbzxss0n017PBB2JQVxencqscScheyZ66uQpt+eNju230c884n\nxYUMtaW2mB6kZ6TMtIb4LS6mfEYqQG46KjF7qQe2xVSZLFnTxLi2IhIGdUzLP/Zg\nBYBcEmucmOQUp19VWKGf8KR7XSmkDpDChrbNyIer/eNqXsweCkjLnZfDT2TrHUL5\nTLEy3PmUCm1mkc9Ovzx3HGtpwB0i1gWoRAihBr5gtCyToF2QWSkbciHBYeQ5C/+e\nsc/CvNEB\n=JpDg\n-----END PGP SIGNATURE-----",
        "payload": "tree 3440cd5cc6b1f383b39acbee419257e07ea043a1\nparent 7466a26cab5d66665991433947964a638f5b957e\nauthor Jakub Trnka <jakub.trnka@chainanalytics.net> 1521928439 +0100\ncommitter Jakub Trnka <jakub.trnka@chainanalytics.net> 1521928439 +0100\n\nIssue #10542 Signmessage doesn't work with segwit addresses\n\nbitcoin-cli verifymessage was extended to verify signatures against both\nbech32 and segwit-p2sh. Class PubkeyConsistencyVisitor has been added\nwhich takes extracted public key as constructor argument and verifies\nsignatures against all meaningful CTxDestinations.\n\nSignmessage will be implemented soon.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f96c4ca0ecc14129dd367cd8451049220658bf8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5f96c4ca0ecc14129dd367cd8451049220658bf8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f96c4ca0ecc14129dd367cd8451049220658bf8/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "7466a26cab5d66665991433947964a638f5b957e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7466a26cab5d66665991433947964a638f5b957e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7466a26cab5d66665991433947964a638f5b957e"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 40,
      "deletions": 4
    },
    "files": [
      {
        "sha": "e2b97d42d0b9bc1dbcc59388b10c0fb00dd1cc75",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 4,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f96c4ca0ecc14129dd367cd8451049220658bf8/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f96c4ca0ecc14129dd367cd8451049220658bf8/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=5f96c4ca0ecc14129dd367cd8451049220658bf8",
        "patch": "@@ -174,14 +174,19 @@ UniValue verifymessage(const JSONRPCRequest& request)\n     std::string strSign     = request.params[1].get_str();\n     std::string strMessage  = request.params[2].get_str();\n \n+    /* CTxDestination options: CNoDestination, CKeyID, CScriptID, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown\n+     * we are interested in CKeyID, CScriptID, WitnessV0KeyHash\n+     */\n     CTxDestination destination = DecodeDestination(strAddress);\n     if (!IsValidDestination(destination)) {\n         throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid address\");\n     }\n \n-    const CKeyID *keyID = boost::get<CKeyID>(&destination);\n-    if (!keyID) {\n-        throw JSONRPCError(RPC_TYPE_ERROR, \"Address does not refer to key\");\n+    /* \n+     * We are not interested in exact type of public key destination for now\n+     */\n+    if (boost::get<WitnessV0ScriptHash>(&destination) || boost::get<WitnessUnknown>(&destination)) {  //exclude unneeded destinations\n+        throw JSONRPCError(RPC_TYPE_ERROR, \"Address does not refer to key\"); // we can exclude only WitnessV0ScriptHash\n     }\n \n     bool fInvalid = false;\n@@ -198,7 +203,8 @@ UniValue verifymessage(const JSONRPCRequest& request)\n     if (!pubkey.RecoverCompact(ss.GetHash(), vchSig))\n         return false;\n \n-    return (pubkey.GetID() == *keyID);\n+    return boost::apply_visitor(PubkeyConsistencyVisitor(pubkey),destination);\n+\n }\n \n UniValue signmessagewithprivkey(const JSONRPCRequest& request)"
      },
      {
        "sha": "67b47e5bf8c21c7536c778e6b080bd21dc36511d",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f96c4ca0ecc14129dd367cd8451049220658bf8/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f96c4ca0ecc14129dd367cd8451049220658bf8/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=5f96c4ca0ecc14129dd367cd8451049220658bf8",
        "patch": "@@ -316,6 +316,21 @@ class CScriptVisitor : public boost::static_visitor<bool>\n };\n } // namespace\n \n+bool PubkeyConsistencyVisitor::operator() (const CKeyID & keyid) const {\n+\treturn m_pkey.GetID() == keyid;\n+}\n+\n+bool PubkeyConsistencyVisitor::operator() (const CScriptID & id) const {\n+\tCScript redeemscript;\n+\tredeemscript.clear();\n+\tredeemscript << OP_0 << ToByteVector(WitnessV0KeyHash(m_pkey.GetID()));\n+\treturn id == CScriptID(redeemscript);\n+}\n+\n+bool PubkeyConsistencyVisitor::operator() (const WitnessV0KeyHash & keyid) const {\n+\treturn WitnessV0KeyHash(m_pkey.GetID()) == keyid;\n+}\n+\n CScript GetScriptForDestination(const CTxDestination& dest)\n {\n     CScript script;"
      },
      {
        "sha": "cd0f9900ea1db47bf4df383c10e7376026736215",
        "filename": "src/script/standard.h",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f96c4ca0ecc14129dd367cd8451049220658bf8/src/script/standard.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f96c4ca0ecc14129dd367cd8451049220658bf8/src/script/standard.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.h?ref=5f96c4ca0ecc14129dd367cd8451049220658bf8",
        "patch": "@@ -121,6 +121,21 @@ struct WitnessUnknown\n  */\n typedef boost::variant<CNoDestination, CKeyID, CScriptID, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown> CTxDestination;\n \n+/** Check CTxDestination for being based on given public key. Usefull in checking P2SH-segwit verifymessage */\n+\n+class PubkeyConsistencyVisitor: public boost::static_visitor<bool> {\n+\tconst CPubKey& m_pkey;\n+public:\n+\tbool operator() (const CKeyID& keyid) const;\n+\tbool operator() (const CScriptID& id) const;\n+\tbool operator() (const WitnessV0KeyHash& wid) const;\n+\tbool operator() (const CNoDestination& noid) const { return false; }\n+\tbool operator() (const WitnessV0ScriptHash& wid) const { return false; }\n+\tbool operator() (const WitnessUnknown& wid) const { return false; }\n+\texplicit PubkeyConsistencyVisitor(const CPubKey& pkey) : m_pkey(pkey) {}\n+};\n+\n+\n /** Check whether a CTxDestination is a CNoDestination. */\n bool IsValidDestination(const CTxDestination& dest);\n "
      }
    ]
  },
  {
    "sha": "37a4916aa5aec15e7e2f4b04e2556246c0240cfb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozN2E0OTE2YWE1YWVjMTVlN2UyZjRiMDRlMjU1NjI0NmMwMjQwY2Zi",
    "commit": {
      "author": {
        "name": "Jakub Trnka",
        "email": "jakub.trnka@chainanalytics.net",
        "date": "2018-03-24T22:57:47Z"
      },
      "committer": {
        "name": "Jakub Trnka",
        "email": "jakub.trnka@chainanalytics.net",
        "date": "2018-03-24T22:57:47Z"
      },
      "message": "Issue #10542 Signmessage doesn't work with segwit addresses\n\nTabs have been replaced by spaces",
      "tree": {
        "sha": "c58ef5d6dcebb8157694b129b538f0998e6d5b12",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c58ef5d6dcebb8157694b129b538f0998e6d5b12"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/37a4916aa5aec15e7e2f4b04e2556246c0240cfb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "no_user",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCAAdFiEENXZNQ+ErfBFqmTrhhOVgoi9saQwFAlq22CEACgkQhOVgoi9s\naQycygv+I6UUrIoEVNPCpqEj8n1I2ESz4oSWR5mssbFFAD/rFwGPC6pZtz9HoQOM\nRX4/zSiiQZ1ejB/z7XzBT61/iYcGU7iDsHTokhZiQLHCaoeO8gw+Qg9zfUn4+ju7\nfWJXfM2o6d85XC8ejn56E78lycgiTwGkBph/Qlh+wPtN/jt8W+nxTsxZAMkZmoFP\nk9iaM4vVkaxygStkjdecpk9x8II3Us+REYRfaSoVn5YlR5ekeLz5vSSbYcb/gDK2\nY9fvW764j4M1mYGlz+m01z3Trxg3GT1E7dzRHY2CKY7ZDyw/Kq9Ha7k/IYS5nJaU\nB7jIxUHauA/PrI7qQB69+oEFhf6Ku3SHVE52n9ifiaM4oXkPdL1+jj4yAz0XUVMx\nk4MYsWZaHUb/jnF+BvBo0TQPePXaiQxYFnk2DN2XwVGnVfbgr/VxBw6Aqj00eQ9k\nO/ENAK+yVjupX4j9xpirPT8TdUaK2iGsghBmqB9K5wj2C3mYOhTOgVB/Wiwr2aHS\nZod7zFTR\n=eaOb\n-----END PGP SIGNATURE-----",
        "payload": "tree c58ef5d6dcebb8157694b129b538f0998e6d5b12\nparent 5f96c4ca0ecc14129dd367cd8451049220658bf8\nauthor Jakub Trnka <jakub.trnka@chainanalytics.net> 1521932267 +0100\ncommitter Jakub Trnka <jakub.trnka@chainanalytics.net> 1521932267 +0100\n\nIssue #10542 Signmessage doesn't work with segwit addresses\n\nTabs have been replaced by spaces\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37a4916aa5aec15e7e2f4b04e2556246c0240cfb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/37a4916aa5aec15e7e2f4b04e2556246c0240cfb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37a4916aa5aec15e7e2f4b04e2556246c0240cfb/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "5f96c4ca0ecc14129dd367cd8451049220658bf8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f96c4ca0ecc14129dd367cd8451049220658bf8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5f96c4ca0ecc14129dd367cd8451049220658bf8"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 14,
      "deletions": 14
    },
    "files": [
      {
        "sha": "8f9d35c6a3d0e64908a1ca22c0ef930f5c205cb1",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/37a4916aa5aec15e7e2f4b04e2556246c0240cfb/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/37a4916aa5aec15e7e2f4b04e2556246c0240cfb/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=37a4916aa5aec15e7e2f4b04e2556246c0240cfb",
        "patch": "@@ -317,18 +317,18 @@ class CScriptVisitor : public boost::static_visitor<bool>\n } // namespace\n \n bool PubkeyConsistencyVisitor::operator() (const CKeyID & keyid) const {\n-\treturn m_pkey.GetID() == keyid;\n+    return m_pkey.GetID() == keyid;\n }\n \n bool PubkeyConsistencyVisitor::operator() (const CScriptID & id) const {\n-\tCScript redeemscript;\n-\tredeemscript.clear();\n-\tredeemscript << OP_0 << ToByteVector(WitnessV0KeyHash(m_pkey.GetID()));\n-\treturn id == CScriptID(redeemscript);\n+    CScript redeemscript;\n+    redeemscript.clear();\n+    redeemscript << OP_0 << ToByteVector(WitnessV0KeyHash(m_pkey.GetID()));\n+    return id == CScriptID(redeemscript);\n }\n \n bool PubkeyConsistencyVisitor::operator() (const WitnessV0KeyHash & keyid) const {\n-\treturn WitnessV0KeyHash(m_pkey.GetID()) == keyid;\n+    return WitnessV0KeyHash(m_pkey.GetID()) == keyid;\n }\n \n CScript GetScriptForDestination(const CTxDestination& dest)"
      },
      {
        "sha": "b3e4b8a849f05e17f94450ee8419e5e9f60e73dd",
        "filename": "src/script/standard.h",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/37a4916aa5aec15e7e2f4b04e2556246c0240cfb/src/script/standard.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/37a4916aa5aec15e7e2f4b04e2556246c0240cfb/src/script/standard.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.h?ref=37a4916aa5aec15e7e2f4b04e2556246c0240cfb",
        "patch": "@@ -124,15 +124,15 @@ typedef boost::variant<CNoDestination, CKeyID, CScriptID, WitnessV0ScriptHash, W\n /** Check CTxDestination for being based on given public key. Usefull in checking P2SH-segwit verifymessage */\n \n class PubkeyConsistencyVisitor: public boost::static_visitor<bool> {\n-\tconst CPubKey& m_pkey;\n+    const CPubKey& m_pkey;\n public:\n-\tbool operator() (const CKeyID& keyid) const;\n-\tbool operator() (const CScriptID& id) const;\n-\tbool operator() (const WitnessV0KeyHash& wid) const;\n-\tbool operator() (const CNoDestination& noid) const { return false; }\n-\tbool operator() (const WitnessV0ScriptHash& wid) const { return false; }\n-\tbool operator() (const WitnessUnknown& wid) const { return false; }\n-\texplicit PubkeyConsistencyVisitor(const CPubKey& pkey) : m_pkey(pkey) {}\n+    bool operator() (const CKeyID& keyid) const;\n+    bool operator() (const CScriptID& id) const;\n+    bool operator() (const WitnessV0KeyHash& wid) const;\n+    bool operator() (const CNoDestination& noid) const { return false; }\n+    bool operator() (const WitnessV0ScriptHash& wid) const { return false; }\n+    bool operator() (const WitnessUnknown& wid) const { return false; }\n+    explicit PubkeyConsistencyVisitor(const CPubKey& pkey) : m_pkey(pkey) {}\n };\n \n "
      }
    ]
  }
]