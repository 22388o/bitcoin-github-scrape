[
  {
    "sha": "f31fc0e92efae793af840c9a46e765c20e0899b4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMzFmYzBlOTJlZmFlNzkzYWY4NDBjOWE0NmU3NjVjMjBlMDg5OWI0",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-10-30T14:13:17Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-10-30T14:52:33Z"
      },
      "message": "[tests] fix flake8 warnings in script.py and bignum.py",
      "tree": {
        "sha": "bdf2f3b80fb980e78397866e0520d2bd9de46e8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bdf2f3b80fb980e78397866e0520d2bd9de46e8a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f31fc0e92efae793af840c9a46e765c20e0899b4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f31fc0e92efae793af840c9a46e765c20e0899b4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f31fc0e92efae793af840c9a46e765c20e0899b4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f31fc0e92efae793af840c9a46e765c20e0899b4/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6a97e8a060f7632bbaee27d3de8035dc6ebe3895",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a97e8a060f7632bbaee27d3de8035dc6ebe3895",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6a97e8a060f7632bbaee27d3de8035dc6ebe3895"
      }
    ],
    "stats": {
      "total": 285,
      "additions": 144,
      "deletions": 141
    },
    "files": [
      {
        "sha": "0dd4ea4b426fffbb6a409615ffaa671295ec048d",
        "filename": "test/functional/test_framework/bignum.py",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f31fc0e92efae793af840c9a46e765c20e0899b4/test/functional/test_framework/bignum.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f31fc0e92efae793af840c9a46e765c20e0899b4/test/functional/test_framework/bignum.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/bignum.py?ref=f31fc0e92efae793af840c9a46e765c20e0899b4",
        "patch": "@@ -4,25 +4,24 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Big number routines.\n \n+Functions for converting numbers to MPI format and Bitcoin-specific little\n+endian format.\n+\n This file is copied from python-bitcoinlib.\n \"\"\"\n-\n import struct\n \n-\n-# generic big endian MPI format\n-\n def bn_bytes(v, have_ext=False):\n     ext = 0\n     if have_ext:\n         ext = 1\n-    return ((v.bit_length()+7)//8) + ext\n+    return (v.bit_length() + 7) // 8 + ext\n \n def bn2bin(v):\n     s = bytearray()\n     i = bn_bytes(v)\n     while i > 0:\n-        s.append((v >> ((i-1) * 8)) & 0xff)\n+        s.append((v >> ((i - 1) * 8)) & 0xff)\n         i -= 1\n     return s\n "
      },
      {
        "sha": "0dbd521433108730a3cde418bc81cd31702588b5",
        "filename": "test/functional/test_framework/script.py",
        "status": "modified",
        "additions": 139,
        "deletions": 135,
        "changes": 274,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f31fc0e92efae793af840c9a46e765c20e0899b4/test/functional/test_framework/script.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f31fc0e92efae793af840c9a46e765c20e0899b4/test/functional/test_framework/script.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/script.py?ref=f31fc0e92efae793af840c9a46e765c20e0899b4",
        "patch": "@@ -6,16 +6,21 @@\n \n This file is modified from python-bitcoinlib.\n \"\"\"\n-\n-from .messages import CTransaction, CTxOut, sha256, hash256, uint256_from_str, ser_uint256, ser_string\n-\n import hashlib\n import struct\n \n from .bignum import bn2vch\n+from .messages import (\n+    CTransaction,\n+    CTxOut,\n+    hash256,\n+    ser_string,\n+    ser_uint256,\n+    sha256,\n+    uint256_from_str,\n+)\n \n MAX_SCRIPT_ELEMENT_SIZE = 520\n-\n OPCODE_NAMES = {}\n \n def hash160(s):\n@@ -31,13 +36,13 @@ class CScriptOp(int):\n     def encode_op_pushdata(d):\n         \"\"\"Encode a PUSHDATA op, returning bytes\"\"\"\n         if len(d) < 0x4c:\n-            return b'' + bytes([len(d)]) + d # OP_PUSHDATA\n+            return b'' + bytes([len(d)]) + d  # OP_PUSHDATA\n         elif len(d) <= 0xff:\n-            return b'\\x4c' + bytes([len(d)]) + d # OP_PUSHDATA1\n+            return b'\\x4c' + bytes([len(d)]) + d  # OP_PUSHDATA1\n         elif len(d) <= 0xffff:\n-            return b'\\x4d' + struct.pack(b'<H', len(d)) + d # OP_PUSHDATA2\n+            return b'\\x4d' + struct.pack(b'<H', len(d)) + d  # OP_PUSHDATA2\n         elif len(d) <= 0xffffffff:\n-            return b'\\x4e' + struct.pack(b'<I', len(d)) + d # OP_PUSHDATA4\n+            return b'\\x4e' + struct.pack(b'<I', len(d)) + d  # OP_PUSHDATA4\n         else:\n             raise ValueError(\"Data too long to encode in a PUSHDATA op\")\n \n@@ -50,7 +55,7 @@ def encode_op_n(n):\n         if n == 0:\n             return OP_0\n         else:\n-            return CScriptOp(OP_1 + n-1)\n+            return CScriptOp(OP_1 + n - 1)\n \n     def decode_op_n(self):\n         \"\"\"Decode a small integer opcode, returning an integer\"\"\"\n@@ -60,7 +65,7 @@ def decode_op_n(self):\n         if not (self == OP_0 or OP_1 <= self <= OP_16):\n             raise ValueError('op %r is not an OP_N' % self)\n \n-        return int(self - OP_1+1)\n+        return int(self - OP_1 + 1)\n \n     def is_small_int(self):\n         \"\"\"Return true if the op pushes a small integer to the stack\"\"\"\n@@ -87,7 +92,7 @@ def __new__(cls, n):\n             return _opcode_instances[n]\n \n # Populate opcode instance table\n-for n in range(0xff+1):\n+for n in range(0xff + 1):\n     CScriptOp(n)\n \n \n@@ -100,7 +105,7 @@ def __new__(cls, n):\n OP_1NEGATE = CScriptOp(0x4f)\n OP_RESERVED = CScriptOp(0x50)\n OP_1 = CScriptOp(0x51)\n-OP_TRUE=OP_1\n+OP_TRUE = OP_1\n OP_2 = CScriptOp(0x52)\n OP_3 = CScriptOp(0x53)\n OP_4 = CScriptOp(0x54)\n@@ -232,122 +237,122 @@ def __new__(cls, n):\n OP_INVALIDOPCODE = CScriptOp(0xff)\n \n OPCODE_NAMES.update({\n-    OP_0 : 'OP_0',\n-    OP_PUSHDATA1 : 'OP_PUSHDATA1',\n-    OP_PUSHDATA2 : 'OP_PUSHDATA2',\n-    OP_PUSHDATA4 : 'OP_PUSHDATA4',\n-    OP_1NEGATE : 'OP_1NEGATE',\n-    OP_RESERVED : 'OP_RESERVED',\n-    OP_1 : 'OP_1',\n-    OP_2 : 'OP_2',\n-    OP_3 : 'OP_3',\n-    OP_4 : 'OP_4',\n-    OP_5 : 'OP_5',\n-    OP_6 : 'OP_6',\n-    OP_7 : 'OP_7',\n-    OP_8 : 'OP_8',\n-    OP_9 : 'OP_9',\n-    OP_10 : 'OP_10',\n-    OP_11 : 'OP_11',\n-    OP_12 : 'OP_12',\n-    OP_13 : 'OP_13',\n-    OP_14 : 'OP_14',\n-    OP_15 : 'OP_15',\n-    OP_16 : 'OP_16',\n-    OP_NOP : 'OP_NOP',\n-    OP_VER : 'OP_VER',\n-    OP_IF : 'OP_IF',\n-    OP_NOTIF : 'OP_NOTIF',\n-    OP_VERIF : 'OP_VERIF',\n-    OP_VERNOTIF : 'OP_VERNOTIF',\n-    OP_ELSE : 'OP_ELSE',\n-    OP_ENDIF : 'OP_ENDIF',\n-    OP_VERIFY : 'OP_VERIFY',\n-    OP_RETURN : 'OP_RETURN',\n-    OP_TOALTSTACK : 'OP_TOALTSTACK',\n-    OP_FROMALTSTACK : 'OP_FROMALTSTACK',\n-    OP_2DROP : 'OP_2DROP',\n-    OP_2DUP : 'OP_2DUP',\n-    OP_3DUP : 'OP_3DUP',\n-    OP_2OVER : 'OP_2OVER',\n-    OP_2ROT : 'OP_2ROT',\n-    OP_2SWAP : 'OP_2SWAP',\n-    OP_IFDUP : 'OP_IFDUP',\n-    OP_DEPTH : 'OP_DEPTH',\n-    OP_DROP : 'OP_DROP',\n-    OP_DUP : 'OP_DUP',\n-    OP_NIP : 'OP_NIP',\n-    OP_OVER : 'OP_OVER',\n-    OP_PICK : 'OP_PICK',\n-    OP_ROLL : 'OP_ROLL',\n-    OP_ROT : 'OP_ROT',\n-    OP_SWAP : 'OP_SWAP',\n-    OP_TUCK : 'OP_TUCK',\n-    OP_CAT : 'OP_CAT',\n-    OP_SUBSTR : 'OP_SUBSTR',\n-    OP_LEFT : 'OP_LEFT',\n-    OP_RIGHT : 'OP_RIGHT',\n-    OP_SIZE : 'OP_SIZE',\n-    OP_INVERT : 'OP_INVERT',\n-    OP_AND : 'OP_AND',\n-    OP_OR : 'OP_OR',\n-    OP_XOR : 'OP_XOR',\n-    OP_EQUAL : 'OP_EQUAL',\n-    OP_EQUALVERIFY : 'OP_EQUALVERIFY',\n-    OP_RESERVED1 : 'OP_RESERVED1',\n-    OP_RESERVED2 : 'OP_RESERVED2',\n-    OP_1ADD : 'OP_1ADD',\n-    OP_1SUB : 'OP_1SUB',\n-    OP_2MUL : 'OP_2MUL',\n-    OP_2DIV : 'OP_2DIV',\n-    OP_NEGATE : 'OP_NEGATE',\n-    OP_ABS : 'OP_ABS',\n-    OP_NOT : 'OP_NOT',\n-    OP_0NOTEQUAL : 'OP_0NOTEQUAL',\n-    OP_ADD : 'OP_ADD',\n-    OP_SUB : 'OP_SUB',\n-    OP_MUL : 'OP_MUL',\n-    OP_DIV : 'OP_DIV',\n-    OP_MOD : 'OP_MOD',\n-    OP_LSHIFT : 'OP_LSHIFT',\n-    OP_RSHIFT : 'OP_RSHIFT',\n-    OP_BOOLAND : 'OP_BOOLAND',\n-    OP_BOOLOR : 'OP_BOOLOR',\n-    OP_NUMEQUAL : 'OP_NUMEQUAL',\n-    OP_NUMEQUALVERIFY : 'OP_NUMEQUALVERIFY',\n-    OP_NUMNOTEQUAL : 'OP_NUMNOTEQUAL',\n-    OP_LESSTHAN : 'OP_LESSTHAN',\n-    OP_GREATERTHAN : 'OP_GREATERTHAN',\n-    OP_LESSTHANOREQUAL : 'OP_LESSTHANOREQUAL',\n-    OP_GREATERTHANOREQUAL : 'OP_GREATERTHANOREQUAL',\n-    OP_MIN : 'OP_MIN',\n-    OP_MAX : 'OP_MAX',\n-    OP_WITHIN : 'OP_WITHIN',\n-    OP_RIPEMD160 : 'OP_RIPEMD160',\n-    OP_SHA1 : 'OP_SHA1',\n-    OP_SHA256 : 'OP_SHA256',\n-    OP_HASH160 : 'OP_HASH160',\n-    OP_HASH256 : 'OP_HASH256',\n-    OP_CODESEPARATOR : 'OP_CODESEPARATOR',\n-    OP_CHECKSIG : 'OP_CHECKSIG',\n-    OP_CHECKSIGVERIFY : 'OP_CHECKSIGVERIFY',\n-    OP_CHECKMULTISIG : 'OP_CHECKMULTISIG',\n-    OP_CHECKMULTISIGVERIFY : 'OP_CHECKMULTISIGVERIFY',\n-    OP_NOP1 : 'OP_NOP1',\n-    OP_CHECKLOCKTIMEVERIFY : 'OP_CHECKLOCKTIMEVERIFY',\n-    OP_CHECKSEQUENCEVERIFY : 'OP_CHECKSEQUENCEVERIFY',\n-    OP_NOP4 : 'OP_NOP4',\n-    OP_NOP5 : 'OP_NOP5',\n-    OP_NOP6 : 'OP_NOP6',\n-    OP_NOP7 : 'OP_NOP7',\n-    OP_NOP8 : 'OP_NOP8',\n-    OP_NOP9 : 'OP_NOP9',\n-    OP_NOP10 : 'OP_NOP10',\n-    OP_SMALLINTEGER : 'OP_SMALLINTEGER',\n-    OP_PUBKEYS : 'OP_PUBKEYS',\n-    OP_PUBKEYHASH : 'OP_PUBKEYHASH',\n-    OP_PUBKEY : 'OP_PUBKEY',\n-    OP_INVALIDOPCODE : 'OP_INVALIDOPCODE',\n+    OP_0: 'OP_0',\n+    OP_PUSHDATA1: 'OP_PUSHDATA1',\n+    OP_PUSHDATA2: 'OP_PUSHDATA2',\n+    OP_PUSHDATA4: 'OP_PUSHDATA4',\n+    OP_1NEGATE: 'OP_1NEGATE',\n+    OP_RESERVED: 'OP_RESERVED',\n+    OP_1: 'OP_1',\n+    OP_2: 'OP_2',\n+    OP_3: 'OP_3',\n+    OP_4: 'OP_4',\n+    OP_5: 'OP_5',\n+    OP_6: 'OP_6',\n+    OP_7: 'OP_7',\n+    OP_8: 'OP_8',\n+    OP_9: 'OP_9',\n+    OP_10: 'OP_10',\n+    OP_11: 'OP_11',\n+    OP_12: 'OP_12',\n+    OP_13: 'OP_13',\n+    OP_14: 'OP_14',\n+    OP_15: 'OP_15',\n+    OP_16: 'OP_16',\n+    OP_NOP: 'OP_NOP',\n+    OP_VER: 'OP_VER',\n+    OP_IF: 'OP_IF',\n+    OP_NOTIF: 'OP_NOTIF',\n+    OP_VERIF: 'OP_VERIF',\n+    OP_VERNOTIF: 'OP_VERNOTIF',\n+    OP_ELSE: 'OP_ELSE',\n+    OP_ENDIF: 'OP_ENDIF',\n+    OP_VERIFY: 'OP_VERIFY',\n+    OP_RETURN: 'OP_RETURN',\n+    OP_TOALTSTACK: 'OP_TOALTSTACK',\n+    OP_FROMALTSTACK: 'OP_FROMALTSTACK',\n+    OP_2DROP: 'OP_2DROP',\n+    OP_2DUP: 'OP_2DUP',\n+    OP_3DUP: 'OP_3DUP',\n+    OP_2OVER: 'OP_2OVER',\n+    OP_2ROT: 'OP_2ROT',\n+    OP_2SWAP: 'OP_2SWAP',\n+    OP_IFDUP: 'OP_IFDUP',\n+    OP_DEPTH: 'OP_DEPTH',\n+    OP_DROP: 'OP_DROP',\n+    OP_DUP: 'OP_DUP',\n+    OP_NIP: 'OP_NIP',\n+    OP_OVER: 'OP_OVER',\n+    OP_PICK: 'OP_PICK',\n+    OP_ROLL: 'OP_ROLL',\n+    OP_ROT: 'OP_ROT',\n+    OP_SWAP: 'OP_SWAP',\n+    OP_TUCK: 'OP_TUCK',\n+    OP_CAT: 'OP_CAT',\n+    OP_SUBSTR: 'OP_SUBSTR',\n+    OP_LEFT: 'OP_LEFT',\n+    OP_RIGHT: 'OP_RIGHT',\n+    OP_SIZE: 'OP_SIZE',\n+    OP_INVERT: 'OP_INVERT',\n+    OP_AND: 'OP_AND',\n+    OP_OR: 'OP_OR',\n+    OP_XOR: 'OP_XOR',\n+    OP_EQUAL: 'OP_EQUAL',\n+    OP_EQUALVERIFY: 'OP_EQUALVERIFY',\n+    OP_RESERVED1: 'OP_RESERVED1',\n+    OP_RESERVED2: 'OP_RESERVED2',\n+    OP_1ADD: 'OP_1ADD',\n+    OP_1SUB: 'OP_1SUB',\n+    OP_2MUL: 'OP_2MUL',\n+    OP_2DIV: 'OP_2DIV',\n+    OP_NEGATE: 'OP_NEGATE',\n+    OP_ABS: 'OP_ABS',\n+    OP_NOT: 'OP_NOT',\n+    OP_0NOTEQUAL: 'OP_0NOTEQUAL',\n+    OP_ADD: 'OP_ADD',\n+    OP_SUB: 'OP_SUB',\n+    OP_MUL: 'OP_MUL',\n+    OP_DIV: 'OP_DIV',\n+    OP_MOD: 'OP_MOD',\n+    OP_LSHIFT: 'OP_LSHIFT',\n+    OP_RSHIFT: 'OP_RSHIFT',\n+    OP_BOOLAND: 'OP_BOOLAND',\n+    OP_BOOLOR: 'OP_BOOLOR',\n+    OP_NUMEQUAL: 'OP_NUMEQUAL',\n+    OP_NUMEQUALVERIFY: 'OP_NUMEQUALVERIFY',\n+    OP_NUMNOTEQUAL: 'OP_NUMNOTEQUAL',\n+    OP_LESSTHAN: 'OP_LESSTHAN',\n+    OP_GREATERTHAN: 'OP_GREATERTHAN',\n+    OP_LESSTHANOREQUAL: 'OP_LESSTHANOREQUAL',\n+    OP_GREATERTHANOREQUAL: 'OP_GREATERTHANOREQUAL',\n+    OP_MIN: 'OP_MIN',\n+    OP_MAX: 'OP_MAX',\n+    OP_WITHIN: 'OP_WITHIN',\n+    OP_RIPEMD160: 'OP_RIPEMD160',\n+    OP_SHA1: 'OP_SHA1',\n+    OP_SHA256: 'OP_SHA256',\n+    OP_HASH160: 'OP_HASH160',\n+    OP_HASH256: 'OP_HASH256',\n+    OP_CODESEPARATOR: 'OP_CODESEPARATOR',\n+    OP_CHECKSIG: 'OP_CHECKSIG',\n+    OP_CHECKSIGVERIFY: 'OP_CHECKSIGVERIFY',\n+    OP_CHECKMULTISIG: 'OP_CHECKMULTISIG',\n+    OP_CHECKMULTISIGVERIFY: 'OP_CHECKMULTISIGVERIFY',\n+    OP_NOP1: 'OP_NOP1',\n+    OP_CHECKLOCKTIMEVERIFY: 'OP_CHECKLOCKTIMEVERIFY',\n+    OP_CHECKSEQUENCEVERIFY: 'OP_CHECKSEQUENCEVERIFY',\n+    OP_NOP4: 'OP_NOP4',\n+    OP_NOP5: 'OP_NOP5',\n+    OP_NOP6: 'OP_NOP6',\n+    OP_NOP7: 'OP_NOP7',\n+    OP_NOP8: 'OP_NOP8',\n+    OP_NOP9: 'OP_NOP9',\n+    OP_NOP10: 'OP_NOP10',\n+    OP_SMALLINTEGER: 'OP_SMALLINTEGER',\n+    OP_PUBKEYS: 'OP_PUBKEYS',\n+    OP_PUBKEYHASH: 'OP_PUBKEYHASH',\n+    OP_PUBKEY: 'OP_PUBKEY',\n+    OP_INVALIDOPCODE: 'OP_INVALIDOPCODE',\n })\n \n class CScriptInvalidError(Exception):\n@@ -392,10 +397,10 @@ def decode(vch):\n         if len(value) == 0:\n             return result\n         for i, byte in enumerate(value):\n-            result |= int(byte) << 8*i\n+            result |= int(byte) << 8 * i\n         if value[-1] >= 0x80:\n             # Mask for all but the highest result bit\n-            num_mask = (2**(len(value)*8) - 1) >> 1\n+            num_mask = (2**(len(value) * 8) - 1) >> 1\n             result &= num_mask\n             result *= -1\n         return result\n@@ -493,21 +498,20 @@ def raw_iter(self):\n                     pushdata_type = 'PUSHDATA2'\n                     if i + 1 >= len(self):\n                         raise CScriptInvalidError('PUSHDATA2: missing data length')\n-                    datasize = self[i] + (self[i+1] << 8)\n+                    datasize = self[i] + (self[i + 1] << 8)\n                     i += 2\n \n                 elif opcode == OP_PUSHDATA4:\n                     pushdata_type = 'PUSHDATA4'\n                     if i + 3 >= len(self):\n                         raise CScriptInvalidError('PUSHDATA4: missing data length')\n-                    datasize = self[i] + (self[i+1] << 8) + (self[i+2] << 16) + (self[i+3] << 24)\n+                    datasize = self[i] + (self[i + 1] << 8) + (self[i + 2] << 16) + (self[i + 3] << 24)\n                     i += 4\n \n                 else:\n-                    assert False # shouldn't happen\n-\n+                    assert False  # shouldn't happen\n \n-                data = bytes(self[i:i+datasize])\n+                data = bytes(self[i:i + datasize])\n \n                 # Check for truncation\n                 if len(data) < datasize:"
      }
    ]
  },
  {
    "sha": "1dc68aee66795bd806675913dc0401420383b9d1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZGM2OGFlZTY2Nzk1YmQ4MDY2NzU5MTNkYzA0MDE0MjAzODNiOWQx",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-10-30T14:22:36Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-10-30T14:52:39Z"
      },
      "message": "[tests] add function comments to bignum",
      "tree": {
        "sha": "d3e50ff7be060f86d9a5d62d0913c5e7051ed9e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d3e50ff7be060f86d9a5d62d0913c5e7051ed9e0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1dc68aee66795bd806675913dc0401420383b9d1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1dc68aee66795bd806675913dc0401420383b9d1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1dc68aee66795bd806675913dc0401420383b9d1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1dc68aee66795bd806675913dc0401420383b9d1/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f31fc0e92efae793af840c9a46e765c20e0899b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f31fc0e92efae793af840c9a46e765c20e0899b4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f31fc0e92efae793af840c9a46e765c20e0899b4"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "e70ef2a7ffcec71968c7f82654689c3a405f067d",
        "filename": "test/functional/test_framework/bignum.py",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1dc68aee66795bd806675913dc0401420383b9d1/test/functional/test_framework/bignum.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1dc68aee66795bd806675913dc0401420383b9d1/test/functional/test_framework/bignum.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/bignum.py?ref=1dc68aee66795bd806675913dc0401420383b9d1",
        "patch": "@@ -12,12 +12,14 @@\n import struct\n \n def bn_bytes(v, have_ext=False):\n+    \"\"\"Return number of bytes in integer representation of v.\"\"\"\n     ext = 0\n     if have_ext:\n         ext = 1\n     return (v.bit_length() + 7) // 8 + ext\n \n def bn2bin(v):\n+    \"\"\"Convert a number to a byte array.\"\"\"\n     s = bytearray()\n     i = bn_bytes(v)\n     while i > 0:\n@@ -26,6 +28,7 @@ def bn2bin(v):\n     return s\n \n def bn2mpi(v):\n+    \"\"\"Convert number to MPI format.\"\"\"\n     have_ext = False\n     if v.bit_length() > 0:\n         have_ext = (v.bit_length() & 0x07) == 0\n@@ -47,11 +50,12 @@ def bn2mpi(v):\n             v_bin[0] |= 0x80\n     return s + ext + v_bin\n \n-# bitcoin-specific little endian format, with implicit size\n def mpi2vch(s):\n+    \"\"\"Convert MPI format to bitcoin-specific little endian format, with implicit size.\"\"\"\n     r = s[4:]           # strip size\n     r = r[::-1]         # reverse string, converting BE->LE\n     return r\n \n def bn2vch(v):\n+    \"\"\"Convert number to bitcoin-specific little endian format.\"\"\"\n     return bytes(mpi2vch(bn2mpi(v)))"
      }
    ]
  },
  {
    "sha": "9a60bef50def228da763fe842bc2a7b9bf4fbcd7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YTYwYmVmNTBkZWYyMjhkYTc2M2ZlODQyYmMyYTdiOWJmNGZiY2Q3",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-10-30T14:25:23Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-10-30T14:52:39Z"
      },
      "message": "[tests] don't encode the integer size in bignum\n\nWe just throw it away whenever we use the\nresult so don't add it.",
      "tree": {
        "sha": "64092c0ca96c78592333c309213c866c410fe378",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/64092c0ca96c78592333c309213c866c410fe378"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a60bef50def228da763fe842bc2a7b9bf4fbcd7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a60bef50def228da763fe842bc2a7b9bf4fbcd7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9a60bef50def228da763fe842bc2a7b9bf4fbcd7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a60bef50def228da763fe842bc2a7b9bf4fbcd7/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1dc68aee66795bd806675913dc0401420383b9d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1dc68aee66795bd806675913dc0401420383b9d1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1dc68aee66795bd806675913dc0401420383b9d1"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 6,
      "deletions": 14
    },
    "files": [
      {
        "sha": "f50c648c4297aec6f53364f2e8e1830d683d3113",
        "filename": "test/functional/test_framework/bignum.py",
        "status": "modified",
        "additions": 6,
        "deletions": 14,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a60bef50def228da763fe842bc2a7b9bf4fbcd7/test/functional/test_framework/bignum.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a60bef50def228da763fe842bc2a7b9bf4fbcd7/test/functional/test_framework/bignum.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/bignum.py?ref=9a60bef50def228da763fe842bc2a7b9bf4fbcd7",
        "patch": "@@ -9,14 +9,9 @@\n \n This file is copied from python-bitcoinlib.\n \"\"\"\n-import struct\n-\n-def bn_bytes(v, have_ext=False):\n+def bn_bytes(v):\n     \"\"\"Return number of bytes in integer representation of v.\"\"\"\n-    ext = 0\n-    if have_ext:\n-        ext = 1\n-    return (v.bit_length() + 7) // 8 + ext\n+    return (v.bit_length() + 7) // 8\n \n def bn2bin(v):\n     \"\"\"Convert a number to a byte array.\"\"\"\n@@ -28,7 +23,7 @@ def bn2bin(v):\n     return s\n \n def bn2mpi(v):\n-    \"\"\"Convert number to MPI format.\"\"\"\n+    \"\"\"Convert number to MPI format, without the sign byte.\"\"\"\n     have_ext = False\n     if v.bit_length() > 0:\n         have_ext = (v.bit_length() & 0x07) == 0\n@@ -38,7 +33,6 @@ def bn2mpi(v):\n         neg = True\n         v = -v\n \n-    s = struct.pack(b\">I\", bn_bytes(v, have_ext))\n     ext = bytearray()\n     if have_ext:\n         ext.append(0)\n@@ -48,13 +42,11 @@ def bn2mpi(v):\n             ext[0] |= 0x80\n         else:\n             v_bin[0] |= 0x80\n-    return s + ext + v_bin\n+    return ext + v_bin\n \n def mpi2vch(s):\n-    \"\"\"Convert MPI format to bitcoin-specific little endian format, with implicit size.\"\"\"\n-    r = s[4:]           # strip size\n-    r = r[::-1]         # reverse string, converting BE->LE\n-    return r\n+    \"\"\"Convert MPI format to bitcoin-specific little endian format.\"\"\"\n+    return s[::-1]  # reverse string, converting BE->LE\n \n def bn2vch(v):\n     \"\"\"Convert number to bitcoin-specific little endian format.\"\"\""
      }
    ]
  },
  {
    "sha": "a760aa14a974cc18fa70a91f87a96a3db395a624",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNzYwYWExNGE5NzRjYzE4ZmE3MGE5MWY4N2E5NmEzZGIzOTVhNjI0",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-10-30T14:27:25Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-10-30T14:53:16Z"
      },
      "message": "[tests] remove mpi2vch() function\n\nAll it does is reverse the bytes order.",
      "tree": {
        "sha": "9cda5725b14bcc14d8fed8698f241d9b439d0356",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9cda5725b14bcc14d8fed8698f241d9b439d0356"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a760aa14a974cc18fa70a91f87a96a3db395a624",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a760aa14a974cc18fa70a91f87a96a3db395a624",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a760aa14a974cc18fa70a91f87a96a3db395a624",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a760aa14a974cc18fa70a91f87a96a3db395a624/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9a60bef50def228da763fe842bc2a7b9bf4fbcd7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a60bef50def228da763fe842bc2a7b9bf4fbcd7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9a60bef50def228da763fe842bc2a7b9bf4fbcd7"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 1,
      "deletions": 5
    },
    "files": [
      {
        "sha": "ed440a2cd845dd6ee5f0a2e541d336136e04703c",
        "filename": "test/functional/test_framework/bignum.py",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a760aa14a974cc18fa70a91f87a96a3db395a624/test/functional/test_framework/bignum.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a760aa14a974cc18fa70a91f87a96a3db395a624/test/functional/test_framework/bignum.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/bignum.py?ref=a760aa14a974cc18fa70a91f87a96a3db395a624",
        "patch": "@@ -44,10 +44,6 @@ def bn2mpi(v):\n             v_bin[0] |= 0x80\n     return ext + v_bin\n \n-def mpi2vch(s):\n-    \"\"\"Convert MPI format to bitcoin-specific little endian format.\"\"\"\n-    return s[::-1]  # reverse string, converting BE->LE\n-\n def bn2vch(v):\n     \"\"\"Convert number to bitcoin-specific little endian format.\"\"\"\n-    return bytes(mpi2vch(bn2mpi(v)))\n+    return bytes(reversed(bn2mpi(v)))"
      }
    ]
  },
  {
    "sha": "3b9b38579c59d5b31bd75103618776eafc05c132",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYjliMzg1NzljNTlkNWIzMWJkNzUxMDM2MTg3NzZlYWZjMDVjMTMy",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-10-30T14:30:36Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-10-30T14:53:19Z"
      },
      "message": "[tests] remove bn_bytes() function\n\nIt is one line and is called in one place.",
      "tree": {
        "sha": "1651d52bbbb690c6b857494be2f4c17d5ec03a1b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1651d52bbbb690c6b857494be2f4c17d5ec03a1b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b9b38579c59d5b31bd75103618776eafc05c132",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b9b38579c59d5b31bd75103618776eafc05c132",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3b9b38579c59d5b31bd75103618776eafc05c132",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b9b38579c59d5b31bd75103618776eafc05c132/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a760aa14a974cc18fa70a91f87a96a3db395a624",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a760aa14a974cc18fa70a91f87a96a3db395a624",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a760aa14a974cc18fa70a91f87a96a3db395a624"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 2,
      "deletions": 7
    },
    "files": [
      {
        "sha": "c34704aa0cc695dbef711eee6be837746c9bfc64",
        "filename": "test/functional/test_framework/bignum.py",
        "status": "modified",
        "additions": 2,
        "deletions": 7,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b9b38579c59d5b31bd75103618776eafc05c132/test/functional/test_framework/bignum.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b9b38579c59d5b31bd75103618776eafc05c132/test/functional/test_framework/bignum.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/bignum.py?ref=3b9b38579c59d5b31bd75103618776eafc05c132",
        "patch": "@@ -9,17 +9,12 @@\n \n This file is copied from python-bitcoinlib.\n \"\"\"\n-def bn_bytes(v):\n-    \"\"\"Return number of bytes in integer representation of v.\"\"\"\n-    return (v.bit_length() + 7) // 8\n-\n def bn2bin(v):\n     \"\"\"Convert a number to a byte array.\"\"\"\n     s = bytearray()\n-    i = bn_bytes(v)\n-    while i > 0:\n+    bytes_len = (v.bit_length() + 7) // 8\n+    for i in range(bytes_len, 0, -1):\n         s.append((v >> ((i - 1) * 8)) & 0xff)\n-        i -= 1\n     return s\n \n def bn2mpi(v):"
      }
    ]
  },
  {
    "sha": "f950ec25201e8ff7948be99ce3171f9700c4a8dc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmOTUwZWMyNTIwMWU4ZmY3OTQ4YmU5OWNlMzE3MWY5NzAwYzRhOGRj",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-10-30T14:39:15Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-10-30T14:53:19Z"
      },
      "message": "[tests] remove bn2bin()\n\nIt's only called in one place.",
      "tree": {
        "sha": "77f9baa6ab542cc79570d29961602cbed5c5a683",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/77f9baa6ab542cc79570d29961602cbed5c5a683"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f950ec25201e8ff7948be99ce3171f9700c4a8dc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f950ec25201e8ff7948be99ce3171f9700c4a8dc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f950ec25201e8ff7948be99ce3171f9700c4a8dc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f950ec25201e8ff7948be99ce3171f9700c4a8dc/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3b9b38579c59d5b31bd75103618776eafc05c132",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b9b38579c59d5b31bd75103618776eafc05c132",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3b9b38579c59d5b31bd75103618776eafc05c132"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 12,
      "deletions": 12
    },
    "files": [
      {
        "sha": "529d39c420d4cfb6569cc3ab7892d91ce6237148",
        "filename": "test/functional/test_framework/bignum.py",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f950ec25201e8ff7948be99ce3171f9700c4a8dc/test/functional/test_framework/bignum.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f950ec25201e8ff7948be99ce3171f9700c4a8dc/test/functional/test_framework/bignum.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/bignum.py?ref=f950ec25201e8ff7948be99ce3171f9700c4a8dc",
        "patch": "@@ -9,29 +9,29 @@\n \n This file is copied from python-bitcoinlib.\n \"\"\"\n-def bn2bin(v):\n-    \"\"\"Convert a number to a byte array.\"\"\"\n-    s = bytearray()\n-    bytes_len = (v.bit_length() + 7) // 8\n-    for i in range(bytes_len, 0, -1):\n-        s.append((v >> ((i - 1) * 8)) & 0xff)\n-    return s\n-\n def bn2mpi(v):\n     \"\"\"Convert number to MPI format, without the sign byte.\"\"\"\n+    # The top bit is used to indicate the sign of the number. If there\n+    # isn't a spare bit in the bit length, add an extension byte.\n     have_ext = False\n+    ext = bytearray()\n     if v.bit_length() > 0:\n         have_ext = (v.bit_length() & 0x07) == 0\n+        ext.append(0)\n \n+    # Is the number negative?\n     neg = False\n     if v < 0:\n         neg = True\n         v = -v\n \n-    ext = bytearray()\n-    if have_ext:\n-        ext.append(0)\n-    v_bin = bn2bin(v)\n+    # Convert the int to bytes\n+    v_bin = bytearray()\n+    bytes_len = (v.bit_length() + 7) // 8\n+    for i in range(bytes_len, 0, -1):\n+        v_bin.append((v >> ((i - 1) * 8)) & 0xff)\n+\n+    # Add the sign bit if necessary\n     if neg:\n         if have_ext:\n             ext[0] |= 0x80"
      }
    ]
  },
  {
    "sha": "3ed772d2219e58d6afea3d12c0ebebb8487445e7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZWQ3NzJkMjIxOWU1OGQ2YWZlYTNkMTJjMGViZWJiODQ4NzQ0NWU3",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-10-30T14:45:03Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-10-30T15:02:51Z"
      },
      "message": "[tests] remove bignum.py\n\nIt only contains one function and is only imported by one\nother module (script.py). Just move the function to\nscript.py.",
      "tree": {
        "sha": "eb7c44f2b95e26dae70b206d011fc9f359ac917e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eb7c44f2b95e26dae70b206d011fc9f359ac917e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ed772d2219e58d6afea3d12c0ebebb8487445e7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ed772d2219e58d6afea3d12c0ebebb8487445e7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3ed772d2219e58d6afea3d12c0ebebb8487445e7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ed772d2219e58d6afea3d12c0ebebb8487445e7/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f950ec25201e8ff7948be99ce3171f9700c4a8dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f950ec25201e8ff7948be99ce3171f9700c4a8dc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f950ec25201e8ff7948be99ce3171f9700c4a8dc"
      }
    ],
    "stats": {
      "total": 82,
      "additions": 34,
      "deletions": 48
    },
    "files": [
      {
        "sha": "92a2bf36f7193e87912945b08309b6e72978a9f0",
        "filename": "test/functional/README.md",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ed772d2219e58d6afea3d12c0ebebb8487445e7/test/functional/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ed772d2219e58d6afea3d12c0ebebb8487445e7/test/functional/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/README.md?ref=3ed772d2219e58d6afea3d12c0ebebb8487445e7",
        "patch": "@@ -121,9 +121,6 @@ Utilities for manipulating transaction scripts (originally from python-bitcoinli\n #### [key.py](test_framework/key.py)\n Test-only secp256k1 elliptic curve implementation\n \n-#### [bignum.py](test_framework/bignum.py)\n-Helpers for script.py\n-\n #### [blocktools.py](test_framework/blocktools.py)\n Helper functions for creating blocks and transactions.\n "
      },
      {
        "sha": "529d39c420d4cfb6569cc3ab7892d91ce6237148",
        "filename": "test/functional/test_framework/bignum.py",
        "status": "removed",
        "additions": 0,
        "deletions": 44,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f950ec25201e8ff7948be99ce3171f9700c4a8dc/test/functional/test_framework/bignum.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f950ec25201e8ff7948be99ce3171f9700c4a8dc/test/functional/test_framework/bignum.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/bignum.py?ref=f950ec25201e8ff7948be99ce3171f9700c4a8dc",
        "patch": "@@ -1,44 +0,0 @@\n-#!/usr/bin/env python3\n-#\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Big number routines.\n-\n-Functions for converting numbers to MPI format and Bitcoin-specific little\n-endian format.\n-\n-This file is copied from python-bitcoinlib.\n-\"\"\"\n-def bn2mpi(v):\n-    \"\"\"Convert number to MPI format, without the sign byte.\"\"\"\n-    # The top bit is used to indicate the sign of the number. If there\n-    # isn't a spare bit in the bit length, add an extension byte.\n-    have_ext = False\n-    ext = bytearray()\n-    if v.bit_length() > 0:\n-        have_ext = (v.bit_length() & 0x07) == 0\n-        ext.append(0)\n-\n-    # Is the number negative?\n-    neg = False\n-    if v < 0:\n-        neg = True\n-        v = -v\n-\n-    # Convert the int to bytes\n-    v_bin = bytearray()\n-    bytes_len = (v.bit_length() + 7) // 8\n-    for i in range(bytes_len, 0, -1):\n-        v_bin.append((v >> ((i - 1) * 8)) & 0xff)\n-\n-    # Add the sign bit if necessary\n-    if neg:\n-        if have_ext:\n-            ext[0] |= 0x80\n-        else:\n-            v_bin[0] |= 0x80\n-    return ext + v_bin\n-\n-def bn2vch(v):\n-    \"\"\"Convert number to bitcoin-specific little endian format.\"\"\"\n-    return bytes(reversed(bn2mpi(v)))"
      },
      {
        "sha": "f14191fe5108cab4b17732447a507e384af49238",
        "filename": "test/functional/test_framework/script.py",
        "status": "modified",
        "additions": 34,
        "deletions": 1,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ed772d2219e58d6afea3d12c0ebebb8487445e7/test/functional/test_framework/script.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ed772d2219e58d6afea3d12c0ebebb8487445e7/test/functional/test_framework/script.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/script.py?ref=3ed772d2219e58d6afea3d12c0ebebb8487445e7",
        "patch": "@@ -9,7 +9,6 @@\n import hashlib\n import struct\n \n-from .bignum import bn2vch\n from .messages import (\n     CTransaction,\n     CTxOut,\n@@ -26,6 +25,40 @@\n def hash160(s):\n     return hashlib.new('ripemd160', sha256(s)).digest()\n \n+def bn2vch(v):\n+    \"\"\"Convert number to bitcoin-specific little endian format.\"\"\"\n+    # The top bit is used to indicate the sign of the number. If there\n+    # isn't a spare bit in the bit length, add an extension byte.\n+    have_ext = False\n+    ext = bytearray()\n+    if v.bit_length() > 0:\n+        have_ext = (v.bit_length() & 0x07) == 0\n+        ext.append(0)\n+\n+    # Is the number negative?\n+    neg = False\n+    if v < 0:\n+        neg = True\n+        v = -v\n+\n+    # Convert the int to bytes\n+    v_bin = bytearray()\n+    bytes_len = (v.bit_length() + 7) // 8\n+    for i in range(bytes_len, 0, -1):\n+        v_bin.append((v >> ((i - 1) * 8)) & 0xff)\n+\n+    # Add the sign bit if necessary\n+    if neg:\n+        if have_ext:\n+            ext[0] |= 0x80\n+        else:\n+            v_bin[0] |= 0x80\n+\n+    v_bytes = ext + v_bin\n+    # Reverse bytes ordering for LE\n+    v_bytes.reverse()\n+\n+    return bytes(v_bytes)\n \n _opcode_instances = []\n class CScriptOp(int):"
      }
    ]
  }
]