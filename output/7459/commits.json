[
  {
    "sha": "f3757a039196c804f252a4efba294e8f2b4d301d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMzc1N2EwMzkxOTZjODA0ZjI1MmE0ZWZiYTI5NGU4ZjJiNGQzMDFk",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-12-02T02:15:42Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-02-04T18:21:55Z"
      },
      "message": "Consensus: Decouple pow.cpp from util.h",
      "tree": {
        "sha": "7be4b642d3dfc00421f09f0b5a5547fa2954fd04",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7be4b642d3dfc00421f09f0b5a5547fa2954fd04"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f3757a039196c804f252a4efba294e8f2b4d301d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3757a039196c804f252a4efba294e8f2b4d301d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f3757a039196c804f252a4efba294e8f2b4d301d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3757a039196c804f252a4efba294e8f2b4d301d/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "11d74f6a6b3452d7a1280629b39cd3fde54859ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11d74f6a6b3452d7a1280629b39cd3fde54859ac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/11d74f6a6b3452d7a1280629b39cd3fde54859ac"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 5,
      "deletions": 12
    },
    "files": [
      {
        "sha": "8bed2962fc3c0122bb939b56fe80a87611406471",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f3757a039196c804f252a4efba294e8f2b4d301d/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f3757a039196c804f252a4efba294e8f2b4d301d/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=f3757a039196c804f252a4efba294e8f2b4d301d",
        "patch": "@@ -2291,8 +2291,9 @@ void static UpdateTip(CBlockIndex *pindexNew) {\n     nTimeBestReceived = GetTime();\n     mempool.AddTransactionsUpdated(1);\n \n-    LogPrintf(\"%s: new best=%s  height=%d  log2_work=%.8g  tx=%lu  date=%s progress=%f  cache=%.1fMiB(%utx)\\n\", __func__,\n-      chainActive.Tip()->GetBlockHash().ToString(), chainActive.Height(), log(chainActive.Tip()->nChainWork.getdouble())/log(2.0), (unsigned long)chainActive.Tip()->nChainTx,\n+    LogPrintf(\"%s: new best=%s  height=%d bits=%d log2_work=%.8g  tx=%lu  date=%s progress=%f  cache=%.1fMiB(%utx)\\n\", __func__,\n+      chainActive.Tip()->GetBlockHash().ToString(), chainActive.Height(), chainActive.Tip()->nBits,\n+      log(chainActive.Tip()->nChainWork.getdouble())/log(2.0), (unsigned long)chainActive.Tip()->nChainTx,\n       DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", chainActive.Tip()->GetBlockTime()),\n       Checkpoints::GuessVerificationProgress(chainParams.Checkpoints(), chainActive.Tip()), pcoinsTip->DynamicMemoryUsage() * (1.0 / (1<<20)), pcoinsTip->GetCacheSize());\n "
      },
      {
        "sha": "058404f357b0b83c8e7d74532d9b185a9d0e3fb1",
        "filename": "src/pow.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 10,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f3757a039196c804f252a4efba294e8f2b4d301d/src/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f3757a039196c804f252a4efba294e8f2b4d301d/src/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.cpp?ref=f3757a039196c804f252a4efba294e8f2b4d301d",
        "patch": "@@ -9,7 +9,6 @@\n #include \"chain.h\"\n #include \"primitives/block.h\"\n #include \"uint256.h\"\n-#include \"util.h\"\n \n unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock, const Consensus::Params& params)\n {\n@@ -57,7 +56,6 @@ unsigned int CalculateNextWorkRequired(const CBlockIndex* pindexLast, int64_t nF\n \n     // Limit adjustment step\n     int64_t nActualTimespan = pindexLast->GetBlockTime() - nFirstBlockTime;\n-    LogPrintf(\"  nActualTimespan = %d  before bounds\\n\", nActualTimespan);\n     if (nActualTimespan < params.nPowTargetTimespan/4)\n         nActualTimespan = params.nPowTargetTimespan/4;\n     if (nActualTimespan > params.nPowTargetTimespan*4)\n@@ -75,12 +73,6 @@ unsigned int CalculateNextWorkRequired(const CBlockIndex* pindexLast, int64_t nF\n     if (bnNew > bnPowLimit)\n         bnNew = bnPowLimit;\n \n-    /// debug print\n-    LogPrintf(\"GetNextWorkRequired RETARGET\\n\");\n-    LogPrintf(\"params.nPowTargetTimespan = %d    nActualTimespan = %d\\n\", params.nPowTargetTimespan, nActualTimespan);\n-    LogPrintf(\"Before: %08x  %s\\n\", pindexLast->nBits, bnOld.ToString());\n-    LogPrintf(\"After:  %08x  %s\\n\", bnNew.GetCompact(), bnNew.ToString());\n-\n     return bnNew.GetCompact();\n }\n \n@@ -94,11 +86,11 @@ bool CheckProofOfWork(uint256 hash, unsigned int nBits, const Consensus::Params&\n \n     // Check range\n     if (fNegative || bnTarget == 0 || fOverflow || bnTarget > UintToArith256(params.powLimit))\n-        return error(\"CheckProofOfWork(): nBits below minimum work\");\n+        return false;\n \n     // Check proof of work matches claimed amount\n     if (UintToArith256(hash) > bnTarget)\n-        return error(\"CheckProofOfWork(): hash doesn't match nBits\");\n+        return false;\n \n     return true;\n }"
      }
    ]
  }
]