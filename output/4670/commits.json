[
  {
    "sha": "1e21c17d208e310295475c0e4a46d750a5c9ba2d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZTIxYzE3ZDIwOGUzMTAyOTU0NzVjMGU0YTQ2ZDc1MGE1YzliYTJk",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2014-04-06T07:18:52Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2014-08-11T01:36:06Z"
      },
      "message": "Make CCryptoKeyStore::Unlock check all keys.\n\nCCryptoKeyStore::Unlock has a loop to attempt decrypting each key which\n only executes once, likely due to a simple mistake when the code was\n originally written.\n\nThis patch fixes the behavior by making it check all keys. It also adds\n a fatal assertion in the case some decrypt but some do not, since that\n indicates that the wallet is in some kind of really bad state.\n\nThis may make unlocking noticeably slower on wallets with many keys.",
      "tree": {
        "sha": "247bec498d6cb2221a9e262cb88cfc5b2b95000f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/247bec498d6cb2221a9e262cb88cfc5b2b95000f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e21c17d208e310295475c0e4a46d750a5c9ba2d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e21c17d208e310295475c0e4a46d750a5c9ba2d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1e21c17d208e310295475c0e4a46d750a5c9ba2d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e21c17d208e310295475c0e4a46d750a5c9ba2d/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "36065cc529bb9be5655fcaaad2746edb7b6f4ddb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36065cc529bb9be5655fcaaad2746edb7b6f4ddb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/36065cc529bb9be5655fcaaad2746edb7b6f4ddb"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 22,
      "deletions": 4
    },
    "files": [
      {
        "sha": "2f94e0827361c85cce1216ce97636a221f6f5e33",
        "filename": "src/crypter.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 4,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e21c17d208e310295475c0e4a46d750a5c9ba2d/src/crypter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e21c17d208e310295475c0e4a46d750a5c9ba2d/src/crypter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypter.cpp?ref=1e21c17d208e310295475c0e4a46d750a5c9ba2d",
        "patch": "@@ -152,22 +152,40 @@ bool CCryptoKeyStore::Unlock(const CKeyingMaterial& vMasterKeyIn)\n         if (!SetCrypted())\n             return false;\n \n+        bool keyPass = false;\n+        bool keyFail = false;\n         CryptedKeyMap::const_iterator mi = mapCryptedKeys.begin();\n         for (; mi != mapCryptedKeys.end(); ++mi)\n         {\n             const CPubKey &vchPubKey = (*mi).second.first;\n             const std::vector<unsigned char> &vchCryptedSecret = (*mi).second.second;\n             CKeyingMaterial vchSecret;\n             if(!DecryptSecret(vMasterKeyIn, vchCryptedSecret, vchPubKey.GetHash(), vchSecret))\n-                return false;\n+            {\n+                keyFail = true;\n+                break;\n+            }\n             if (vchSecret.size() != 32)\n-                return false;\n+            {\n+                keyFail = true;\n+                break;\n+            }\n             CKey key;\n             key.Set(vchSecret.begin(), vchSecret.end(), vchPubKey.IsCompressed());\n-            if (key.GetPubKey() == vchPubKey)\n+            if (key.GetPubKey() != vchPubKey)\n+            {\n+                keyFail = true;\n                 break;\n-            return false;\n+            }\n+            keyPass = true;\n+        }\n+        if (keyPass && keyFail)\n+        {\n+            LogPrintf(\"The wallet is probably corrupted: Some keys decrypt but not all.\");\n+            assert(false);\n         }\n+        if (keyFail || !keyPass)\n+            return false;\n         vMasterKey = vMasterKeyIn;\n     }\n     NotifyStatusChanged(this);"
      }
    ]
  },
  {
    "sha": "a35b55b522da8eeaed895f0ed43ba595fc083498",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMzViNTViNTIyZGE4ZWVhZWQ4OTVmMGVkNDNiYTU5NWZjMDgzNDk4",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2014-08-10T01:49:07Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2014-08-11T01:36:07Z"
      },
      "message": "Dont run full check every time we decrypt wallet.",
      "tree": {
        "sha": "304446bc89f551fb1024ca33d889a96edcb48ad8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/304446bc89f551fb1024ca33d889a96edcb48ad8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a35b55b522da8eeaed895f0ed43ba595fc083498",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a35b55b522da8eeaed895f0ed43ba595fc083498",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a35b55b522da8eeaed895f0ed43ba595fc083498",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a35b55b522da8eeaed895f0ed43ba595fc083498/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1e21c17d208e310295475c0e4a46d750a5c9ba2d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e21c17d208e310295475c0e4a46d750a5c9ba2d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1e21c17d208e310295475c0e4a46d750a5c9ba2d"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 7,
      "deletions": 1
    },
    "files": [
      {
        "sha": "122e06d97ef7c786acd7901bbaf3f3f811c19c53",
        "filename": "src/crypter.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a35b55b522da8eeaed895f0ed43ba595fc083498/src/crypter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a35b55b522da8eeaed895f0ed43ba595fc083498/src/crypter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypter.cpp?ref=a35b55b522da8eeaed895f0ed43ba595fc083498",
        "patch": "@@ -178,6 +178,8 @@ bool CCryptoKeyStore::Unlock(const CKeyingMaterial& vMasterKeyIn)\n                 break;\n             }\n             keyPass = true;\n+            if (fDecryptionThoroughlyChecked)\n+                break;\n         }\n         if (keyPass && keyFail)\n         {\n@@ -187,6 +189,7 @@ bool CCryptoKeyStore::Unlock(const CKeyingMaterial& vMasterKeyIn)\n         if (keyFail || !keyPass)\n             return false;\n         vMasterKey = vMasterKeyIn;\n+        fDecryptionThoroughlyChecked = true;\n     }\n     NotifyStatusChanged(this);\n     return true;"
      },
      {
        "sha": "f16fcef9c70237da378546ab712d13975e6b41c9",
        "filename": "src/crypter.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a35b55b522da8eeaed895f0ed43ba595fc083498/src/crypter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a35b55b522da8eeaed895f0ed43ba595fc083498/src/crypter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypter.h?ref=a35b55b522da8eeaed895f0ed43ba595fc083498",
        "patch": "@@ -121,6 +121,9 @@ class CCryptoKeyStore : public CBasicKeyStore\n     // if fUseCrypto is false, vMasterKey must be empty\n     bool fUseCrypto;\n \n+    // keeps track of whether Unlock has run a thourough check before\n+    bool fDecryptionThoroughlyChecked;\n+\n protected:\n     bool SetCrypted();\n \n@@ -130,7 +133,7 @@ class CCryptoKeyStore : public CBasicKeyStore\n     bool Unlock(const CKeyingMaterial& vMasterKeyIn);\n \n public:\n-    CCryptoKeyStore() : fUseCrypto(false)\n+    CCryptoKeyStore() : fUseCrypto(false), fDecryptionThoroughlyChecked(false)\n     {\n     }\n "
      }
    ]
  }
]