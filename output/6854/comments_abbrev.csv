jonasschnelli,2015-10-19T13:55:56Z,Nice. Concept ACK.\n\nASLR/PIE check on OSX can be done with `otool -hv <file>`. Not sure how we would execute `otools` in gitian. NX checks can be done over a `vmmap` check. For Travis we should create a native osx build (which could run otools to check the executable).\n,https://github.com/bitcoin/bitcoin/pull/6854#issuecomment-149220107,149220107,
gavinandresen,2015-10-19T14:34:30Z,Nice!  So testing this would be:\n  Recompile with --disable-hardening (or subsets of those flags) and making sure security-check.py complains?\n,https://github.com/bitcoin/bitcoin/pull/6854#issuecomment-149233293,149233293,
LongShao007,2015-10-19T14:51:45Z,How to check security for Windows ?\n,https://github.com/bitcoin/bitcoin/pull/6854#issuecomment-149238289,149238289,
laanwj,2015-10-19T15:35:30Z,"@gavinandresen Right, to speed up testing you could use any C file:\n\n``` bash\ncat >  test1.c << EOF\n#include <stdio.h>\n\nint main()\n{\n    printf(""the quick brown fox jumps over the lazy god\n"");\n    return 0;\n}\nEOF\ngcc test1.c -o test1 -Wl,-zexecstack;\ncontrib/devtools/security-check.py test1; echo $?\ngcc test1.c -o test1\ncontrib/devtools/security-check.py test1; echo $?\ngcc test1.c",https://github.com/bitcoin/bitcoin/pull/6854#issuecomment-149251400,149251400,
laanwj,2015-10-19T15:53:39Z,"On windows:\n\nNX: DllCharacteristics bit 0x100 signifies `nxcompat` (DEP):\n\n```\n-DllCharacteristics     00000100\n+DllCharacteristics     00000000\n```\n\nPIE: DllCharacteristics bit 0x40 signifies `dynamicbase` (ASLR):\n\n```\n+DllCharacteristics     00000000\n-DllCharacteristics     00000040\n```\n\nNot sure whether there is a RELRO equivalent, Canary is there but difficult to check from the",https://github.com/bitcoin/bitcoin/pull/6854#issuecomment-149256365,149256365,
laanwj,2015-10-21T11:17:11Z,"@theuni paths to tools like READELF, OBJDUMP can now be overridden\n",https://github.com/bitcoin/bitcoin/pull/6854#issuecomment-149858706,149858706,
dcousens,2015-10-21T13:03:14Z,concept ACK\n,https://github.com/bitcoin/bitcoin/pull/6854#issuecomment-149887595,149887595,
theuni,2015-10-21T18:08:35Z,"Looks good other than the comment above. Something to note:\nThe libevent brought in a dependency on clock_gettime, which is a glibc compat issue. Once we bump to a newer gcc, we'll have to work that out for releases.\n\nAs discussed on IRC, this should also be hooked up to a make target for easier testing w/ travis and gitian. That can be done as a next step.\n",https://github.com/bitcoin/bitcoin/pull/6854#issuecomment-149980693,149980693,
MarcoFalke,2015-10-21T12:17:11Z,Nit: orphan `%s`.\n,https://github.com/bitcoin/bitcoin/pull/6854#discussion_r42615136,42615136,contrib/devtools/security-check.py
laanwj,2015-10-21T12:19:30Z,Good catch. Fixed\n,https://github.com/bitcoin/bitcoin/pull/6854#discussion_r42615283,42615283,contrib/devtools/security-check.py
theuni,2015-10-21T17:39:42Z,"Interestingly on my machine, whether or not this shows up as R or RW seems to depend on the linker. I'm afraid I don't know enough to determine if having this section writable is a security implication.\n\n``` bash\n$ g++ ... -o bitcoin-cli -fuse-ld=bfd\n$ readelf -l -W bitcoin-cli | grep RELRO\n  GNU_RELRO      0x243e20 0x0000000000443e20 0x0000000000443e20 0x0201e0 0x0201e0 R   0x1\n```\n\n``` b",https://github.com/bitcoin/bitcoin/pull/6854#discussion_r42656253,42656253,contrib/devtools/security-check.py
laanwj,2015-10-22T01:15:16Z,"One important point of RELRO in combination with BIND_NOW is that the area can be read-only, as that part contains function pointers. Common heap overflow exploits allow overwriting a word, these frequently invoked function pointers make good targets.\n\n```\n  LOAD           0x000000 0x0000000000400000 0x0000000000400000 0x0007d4 0x0007d4 R E 0x200000\n   02     .interp .note.ABI-tag .note.gnu.bu",https://github.com/bitcoin/bitcoin/pull/6854#discussion_r42702688,42702688,contrib/devtools/security-check.py
laanwj,2015-10-22T01:20:39Z,"See also this thread: http://permalink.gmane.org/gmane.comp.gnu.binutils/71347\nWill remove the check - although I agree with Alan that having it as 'R' is clearer, as that is the eventual intention.\n",https://github.com/bitcoin/bitcoin/pull/6854#discussion_r42702978,42702978,contrib/devtools/security-check.py
