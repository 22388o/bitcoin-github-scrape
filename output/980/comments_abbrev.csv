TheBlueMatt,2012-03-23T22:51:02Z,How does bitcoin-qt cope if you start a second instance which runs this patch (ie a testnet one and a mainnet one at the same time)?\n,https://github.com/bitcoin/bitcoin/pull/980#issuecomment-4669389,4669389,
Diapolo,2012-03-23T23:02:34Z,"@TheBlueMatt I will have to try this ... never used testnet before (does this work in the default and same data-dir?). But I have an idea if it causes problems in the current state. Perhaps I could add an ""testnet"" string to the message_queue name, which is now ""BitcoinURL"". Is there a utility function to query where I mine?\n",https://github.com/bitcoin/bitcoin/pull/980#issuecomment-4669552,4669552,
TheBlueMatt,2012-03-23T23:28:49Z,"Adding a testnet string doesnt fix the problem, there are also valid uses for opening two bitcoin-qt.exes on mainnet at the same time (using different datadirs and ports).\n",https://github.com/bitcoin/bitcoin/pull/980#issuecomment-4669880,4669880,
Diapolo,2012-03-23T23:45:05Z,"@TheBlueMatt I will do some tests on this tomorrow. I don't even know if there are issues with your mentioned case at all, but thanks for your input :)!\n",https://github.com/bitcoin/bitcoin/pull/980#issuecomment-4670034,4670034,
sipa,2012-03-24T01:17:59Z,"1) can you rebase this into one commit? (15 is a bit excessive for a bug fix...)\n2) there seem to be some coding style errors and unneccesary code moves.\n3) if this indeed fixes #956, nice! that was the last blocking bug for 0.6.0, afaik.\n",https://github.com/bitcoin/bitcoin/pull/980#issuecomment-4670756,4670756,
Diapolo,2012-03-24T09:13:02Z,"@sipa What do you mean by coding style errors, would be nice if you can point me to them, so I can fix it. I only added so many commits, to get some kind of history, will rebase.\n",https://github.com/bitcoin/bitcoin/pull/980#issuecomment-4672501,4672501,
Diapolo,2012-03-24T09:53:48Z,"Question on coding style, is it common to only use ex for exeption handling, no matter what type they are? If yes, I will revert that, too. And what about boost::interprocess::message_queue mq -> boost::interprocess::message_queue mqMessageQueue, good or bad? I'm asking, because in bitcoin.cpp it's still mq.\n",https://github.com/bitcoin/bitcoin/pull/980#issuecomment-4672663,4672663,
Diapolo,2012-03-24T10:16:44Z,"But back to the test case ... as I currently can't compile Bitcoin-Qt with static libs, I'm not able to run 2 instanced at the same time. But I think this definately needs some further investigation and clarification!\n\nSo 2 instances with different ports and different data-dirs currently work on RC4? They even share the same message queue, right? Then this fix needs to take this into account and",https://github.com/bitcoin/bitcoin/pull/980#issuecomment-4672750,4672750,
laanwj,2012-03-24T10:38:45Z,"So to summarize: If you start multiple instances, it will work, but the most recent instance will get the URLs?\n\nThat behavior is OK with me. \n\nI don't think many people start multiple instances of bitcoin, and if they do, they generally have no use case involving a browser (more for servers etc...). However, it should be _possible_ to start multiple instances with multiple datadirs.\n",https://github.com/bitcoin/bitcoin/pull/980#issuecomment-4672850,4672850,
Diapolo,2012-03-24T13:42:20Z,"Okay, so the latest version is more friendly in terms of what is displayed in the debug.log.\n\nstale message queue IS there and can be removed:\nipcInit - boost interprocess exception #9: File already exists.\nipcRecover - possible stale message queue found, trying to remove C:\ProgramData\boost_interprocess\BitcoinURL ...success\n\nThis tries ipcInit() again!\n\n---\n\nmessage queue IS there and",https://github.com/bitcoin/bitcoin/pull/980#issuecomment-4673669,4673669,
sipa,2012-03-25T14:25:42Z,"Since this is a workaround for a boost-specific windows-only problem, I have no problem with using undocumented and windows-only boost internals. You do need to make sure it keeps working on other systems though, so enclose the fix in #ifdef WIN32 / #else / #endif, and try to keep the windows-specific part as small as possible. You'll probably need other #ifdefs to select specific boost versions a",https://github.com/bitcoin/bitcoin/pull/980#issuecomment-4681883,4681883,
Diapolo,2012-03-25T14:47:12Z,"For now I will add the needed #ifdefs, so that the fix is activated only on Windows. After we are sure this works and breaks nothing, I will definately look into how I can write this in a platform independent way (new pull request and no blocking change ^^).\n\nOh and thanks for the ""using namespace"" clarification ... that was in my mind, too. Easier to read code and better understandable code.\n",https://github.com/bitcoin/bitcoin/pull/980#issuecomment-4681991,4681991,
gavinandresen,2012-03-25T15:36:02Z,"It feels to me like this feature (click-to-open bitcoin: URIs) needs a re-think on Windows; poking boost::interprocess internals is a bad idea that we should avoid if at all possible.\n\nFor the 0.6 release, I'm inclined to disable click-to-open bitcoin: URIs on Windows entirely, and get a cleaner fix for 0.7.\n",https://github.com/bitcoin/bitcoin/pull/980#issuecomment-4682296,4682296,
Diapolo,2012-03-25T16:02:43Z,Tell me the intended release date for 0.6 ... I'm trying to get a cleaner fix ready.\n,https://github.com/bitcoin/bitcoin/pull/980#issuecomment-4682454,4682454,
TheBlueMatt,2012-03-25T16:42:01Z,"Due to the massive list of changes since rc4, we really need to push an rc5 and give it a while to simmer before we can really release a 0.6 release (IMO).  In that case, I have no problem merging this and poking windows-only boost internals, as long as all the changes in here are within #ifdef WIN32's\n",https://github.com/bitcoin/bitcoin/pull/980#issuecomment-4682705,4682705,
Diapolo,2012-03-25T17:03:02Z,"May I suggest the following, as this one has plenty of commits, I will rebase it into a single one with the current code here.\n\nIt could then be used in a possible RC5, but I would really like a dev to test a compilation and execution with Linux / Mac before, as I can't do this. During the testing phase of a possible RC5 I have time to work on a cross-platform compatible version without the use ",https://github.com/bitcoin/bitcoin/pull/980#issuecomment-4682826,4682826,
sipa,2012-03-25T17:06:38Z,"Don't worry, we won't merge it if it doesn't compile cleanly.\n",https://github.com/bitcoin/bitcoin/pull/980#issuecomment-4682864,4682864,
Diapolo,2012-03-25T17:50:28Z,"Last commit does not use any boost::interprocess internals, it works and removes stale message queues (tested this after I once more crashed / switched of my Windows machine to create a stale mq).\n\nIf an existing message queue is detected the first try is to remove it. If it's locked (i.e. by another BC instance) that won't work and I try ipcInit() again with the open_or_create mode on the messa",https://github.com/bitcoin/bitcoin/pull/980#issuecomment-4683134,4683134,
TheBlueMatt,2012-03-25T20:20:49Z,"An alternative to this that (should) work and also fixes #981 can be found at:\nhttps://github.com/TheBlueMatt/bitcoin/commit/1b327daeb510d91c065ea3610c4b5740c743fffe\nthough its more of a hack since I really, really dont feel like diving into the win32 apis and figuring out whats going on in that ugly mess.\n",https://github.com/bitcoin/bitcoin/pull/980#issuecomment-4684338,4684338,
Diapolo,2012-03-25T20:28:51Z,@TheBlueMatt I compiled Bitcoin-Qt with boost 1.49 and that did NOT fix this bug. Is your commit a backport from boost > 1.47 to 1.47?\n,https://github.com/bitcoin/bitcoin/pull/980#issuecomment-4684387,4684387,
TheBlueMatt,2012-03-25T20:37:02Z,"No, that commit is something I wrote, afaict boost has not yet fixed the bug (though it was filed 12 months ago as https://svn.boost.org/trac/boost/ticket/5392 )\n",https://github.com/bitcoin/bitcoin/pull/980#issuecomment-4684457,4684457,
gavinandresen,2012-03-26T15:19:06Z,"I'm going to be the ""bad guy"" for this one and take the conservative route: lets get this fixed and thoroughly tested early in the 0.7 release, and disable bitcoin: URI handling on Windows for the 0.6 release.\n",https://github.com/bitcoin/bitcoin/pull/980#issuecomment-4696339,4696339,
sipa,2012-03-26T15:21:04Z,"Given #985, it seems URI's never worked on windows anyway...\n",https://github.com/bitcoin/bitcoin/pull/980#issuecomment-4696386,4696386,
Diapolo,2012-03-26T15:38:26Z,"The URI feature is little known, so perhaps the problem with URI handling in general was not observed, since no one ever used it on Windows (i.e. because currently there are very few links out in the internet).\n\n@gavinandresen I'm fine with 0.7 ... you would only be the bad guy, if you said that code sucks all over the place, go away ;) ... but you didn't do that.\n",https://github.com/bitcoin/bitcoin/pull/980#issuecomment-4696747,4696747,
Diapolo,2012-03-26T20:13:09Z,"Would the main devs prefer a rebase now, so that it's a single commit or after it's discussed, tested and finished?\n",https://github.com/bitcoin/bitcoin/pull/980#issuecomment-4703048,4703048,
Diapolo,2012-03-27T09:49:58Z,Rebased with current master and fixed up a little git mess I created ...\n,https://github.com/bitcoin/bitcoin/pull/980#issuecomment-4713076,4713076,
Diapolo,2012-03-29T21:26:04Z,"Doh, this one seems completely obsolete in the light of my current work on the IPC server and URI-handling code. It's a pain in Windows to use a ""file"" for doing IPC communication it seems (at least when things go wrong ^^). There a severe handling problems with stale / wrong mq files and the combination of 2 Bitcoin-Qt instances ... but I made some good progress.\n\nI would like to close this one",https://github.com/bitcoin/bitcoin/pull/980#issuecomment-4831547,4831547,
Diapolo,2012-04-01T11:33:14Z,Closed!\n,https://github.com/bitcoin/bitcoin/pull/980#issuecomment-4865795,4865795,
TheBlueMatt,2012-03-23T22:53:14Z,"Though it looks like it should probably never happen, the possibility of an infinite recursion here scares me.\n",https://github.com/bitcoin/bitcoin/pull/980#discussion_r599364,599364,src/qt/qtipcserver.cpp
Diapolo,2012-03-23T23:00:23Z,"I had the same in my mind and came to the conclusion it should never happen ... I don't decide it, but I guess there are several places in the code where are theoretical chances that something bad happens, you could surround nearly everything with try - catch. But let's discuss it :).\n",https://github.com/bitcoin/bitcoin/pull/980#discussion_r599386,599386,src/qt/qtipcserver.cpp
TheBlueMatt,2012-03-23T23:21:49Z,"Or just add a simple flag to say, dont try again if you fail here...\n",https://github.com/bitcoin/bitcoin/pull/980#discussion_r599453,599453,src/qt/qtipcserver.cpp
Diapolo,2012-03-23T23:40:39Z,"Yes, that's even better.\n",https://github.com/bitcoin/bitcoin/pull/980#discussion_r599509,599509,src/qt/qtipcserver.cpp
luke-jr,2012-03-24T03:06:10Z,"Don't shoot me, but I suggest goto...\n",https://github.com/bitcoin/bitcoin/pull/980#discussion_r599884,599884,src/qt/qtipcserver.cpp
laanwj,2012-03-24T08:26:30Z,Please make this a parameter to ipcInit instead of a global\n,https://github.com/bitcoin/bitcoin/pull/980#discussion_r600044,600044,src/qt/qtipcserver.cpp
Diapolo,2012-03-24T09:10:47Z,I wont ever use a goto in C-like languages ^^ ... you would have to force me to do this :D!\n,https://github.com/bitcoin/bitcoin/pull/980#discussion_r600059,600059,src/qt/qtipcserver.cpp
laanwj,2012-03-24T09:43:43Z,as you asked for coding style errors: please indent this break the same depth as the printf :)\n,https://github.com/bitcoin/bitcoin/pull/980#discussion_r600076,600076,src/qt/bitcoin.cpp
Diapolo,2012-03-24T09:52:09Z,"Thanks, used tabs there, doh ...\n",https://github.com/bitcoin/bitcoin/pull/980#discussion_r600079,600079,src/qt/bitcoin.cpp
luke-jr,2012-03-25T01:23:08Z,There is no interprocess::ipcdetail on Linux.\n,https://github.com/bitcoin/bitcoin/pull/980#discussion_r600665,600665,src/qt/qtipcserver.cpp
Diapolo,2012-03-25T11:30:45Z,"Investigating... got it, with boost 1.47 this is ""detail"" instead of ""ipcdetail"" for 1.49 ... will see if the fix still compiles with 1.47 (I was on 1.49 in my build-lab).\n\nI would vote for a switch to 1.49 in the near future!\n",https://github.com/bitcoin/bitcoin/pull/980#discussion_r600957,600957,src/qt/qtipcserver.cpp
Diapolo,2012-03-25T12:11:43Z,"Fixed with last commit, compiles again with boost 1.47!\n",https://github.com/bitcoin/bitcoin/pull/980#discussion_r600963,600963,src/qt/qtipcserver.cpp
luke-jr,2012-03-25T12:38:52Z,"Don't see a reason to change this. It's better to have explicit namespaces, IMO.\n",https://github.com/bitcoin/bitcoin/pull/980#discussion_r600966,600966,src/qt/bitcoin.cpp
luke-jr,2012-03-25T12:42:32Z,"It doesn't matter which boost version's internals you use, this is _still_ Windows-only... Isn't there a way to recover with documented methods?\n",https://github.com/bitcoin/bitcoin/pull/980#discussion_r600967,600967,src/qt/qtipcserver.cpp
Diapolo,2012-03-25T13:04:10Z,"There IS really no consistency in the source code, some us it, some not ... what's the coding standard? I'm fine with leaving out using namespace boost, but then this should be changed globally. Or can you explain it to me?\n",https://github.com/bitcoin/bitcoin/pull/980#discussion_r600975,600975,src/qt/bitcoin.cpp
Diapolo,2012-03-25T13:06:57Z,"As I said, treat me as a newb, so ... what you mean by Windows-only?\n\nI read through the boost docs and found no other way to get the current path and filename to the stale file. We have a condition here, that causes problems and I'm only trying to fix it ...\n",https://github.com/bitcoin/bitcoin/pull/980#discussion_r600976,600976,src/qt/qtipcserver.cpp
luke-jr,2012-03-25T13:13:34Z,"boost::interprocess doesn't use files, except on Windows. Other platforms don't have these internals.\n",https://github.com/bitcoin/bitcoin/pull/980#discussion_r600977,600977,src/qt/qtipcserver.cpp
Diapolo,2012-03-25T14:23:29Z,"Thanks, didn't know that ... I'm rewriting the code to remove the need for directly calling functions from ::detail / ::ipcdetail!\n",https://github.com/bitcoin/bitcoin/pull/980#discussion_r601019,601019,src/qt/qtipcserver.cpp
luke-jr,2012-03-25T21:06:56Z,"I _think_ it's been ""use absolute namespaces in new code, but don't bother changing old code"". In this case, you're changing absolute to relative, and it also makes it harder to find the actual code changes. ;)\n",https://github.com/bitcoin/bitcoin/pull/980#discussion_r601264,601264,src/qt/bitcoin.cpp
