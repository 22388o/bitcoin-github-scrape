sdaftuar,2019-02-26T20:31:48Z,"I think this should resolve #15484, but it's not clear to me if this is entirely sufficient to protect against the class of error, or if we should add additional logic to ResolveCollisions() to ensure that collisions get eventually resolved.",https://github.com/bitcoin/bitcoin/pull/15486#issuecomment-467601659,467601659,
DrahtBot,2019-02-26T21:37:11Z,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/15486#issuecomment-467624016,467624016,
sdaftuar,2019-02-26T21:39:01Z,"Updated with a commit that tries to fix the underlying problem in addrman, by doing eviction anyway after 20 minutes (to prevent m_tried_collisions from never being drained).  \n\nIf it looks good, I'll update the OP of this PR before merge.",https://github.com/bitcoin/bitcoin/pull/15486#issuecomment-467624670,467624670,
gmaxwell,2019-02-26T22:43:29Z,This bugfix should probably get tagged for 0.18.,https://github.com/bitcoin/bitcoin/pull/15486#issuecomment-467645594,467645594,
sipa,2019-02-28T00:53:35Z,utACK f71fdda3bc2e7acd2a8b74e882364866b8b0f55b,https://github.com/bitcoin/bitcoin/pull/15486#issuecomment-468091836,468091836,
Sjors,2019-03-01T16:18:47Z,"Useful background info for context:\n* Eclipse Attacks on Bitcoinâ€™s Peer-to-Peer Network"" https://eprint.iacr.org/2015/263.pdf (by @ethanheilman e.a.\n* #8282\n* #9037",https://github.com/bitcoin/bitcoin/pull/15486#issuecomment-468720505,468720505,
sdaftuar,2019-03-01T21:18:00Z,Addressed nits.,https://github.com/bitcoin/bitcoin/pull/15486#issuecomment-468814869,468814869,
gmaxwell,2019-03-01T23:23:00Z,utACK,https://github.com/bitcoin/bitcoin/pull/15486#issuecomment-468845833,468845833,
Sjors,2019-03-02T10:48:05Z,"To clarify what I brought up inline:\nhttps://github.com/bitcoin/bitcoin/blob/20e6ea259b222b10f066f22695a5f56c52071f63/src/addrman.cpp#L240-L253\n\nThe log statement says we're moving it to `m_tried_collisions`, but that's not true if that's full. Hence my suggestion to move the log statement inside the if statement (line 245).\n\nFor the case `m_tried_collisions` is full @sdaftuar wrote:\n>",https://github.com/bitcoin/bitcoin/pull/15486#issuecomment-468909429,468909429,
gmaxwell,2019-03-02T14:14:29Z,"> We don't know anything about this new entry,\n\nWhen we insert the new entry in tried in the first place, it's because we've actually tried it.  When inserting it we may find that it causes us to want to evict an old tried entry (which has also been tried, but not as recently).  What the code is supposed to do (post try before evict) is to test the old tried entry before evicting it, in order ",https://github.com/bitcoin/bitcoin/pull/15486#issuecomment-468924236,468924236,
Sjors,2019-03-02T14:55:54Z,"Ah, I think I get it now... since we don't specifically track when things were added to `m_tried_collisions`,  the check `info_new.nLastSuccess > ADDRMAN_TEST_WINDOW`  is just the way we determine when the entry was added to the `new` table, which coincides with the time we last heard from it, i.e. when it last sent us a version message. And that's also when it's added to `m_tried_collisions`.\n",https://github.com/bitcoin/bitcoin/pull/15486#issuecomment-468927608,468927608,
sdaftuar,2019-03-02T16:39:30Z,"> Ah, I think I get it now... since we don't specifically track when things were added to m_tried_collisions, the check info_new.nLastSuccess > ADDRMAN_TEST_WINDOW is just the way we determine when the entry was added to the new table\n\nThat's not necessarily when the entry was added to the `new` table -- we can do that when learning about an address, for instance when relayed to us via an addr",https://github.com/bitcoin/bitcoin/pull/15486#issuecomment-468936769,468936769,
naumenkogs,2019-03-04T20:25:21Z,utACK,https://github.com/bitcoin/bitcoin/pull/15486#issuecomment-469408312,469408312,
sdaftuar,2019-03-06T21:45:50Z,I think this is ready to go -- anything left that I missed?,https://github.com/bitcoin/bitcoin/pull/15486#issuecomment-470289925,470289925,
laanwj,2019-03-09T06:12:13Z,utACK 20e6ea259b222b10f066f22695a5f56c52071f63,https://github.com/bitcoin/bitcoin/pull/15486#issuecomment-471149918,471149918,
fanquake,2019-03-09T07:07:45Z,"~~Backported in #15563.~~\n\nDone by @laanwj in https://github.com/bitcoin/bitcoin/compare/f810f14cf61d...b80dedb59678b3b35a7808e3fc09cf0610170070.",https://github.com/bitcoin/bitcoin/pull/15486#issuecomment-471153160,471153160,
EthanHeilman,2019-02-27T19:13:21Z,"Unless I'm missing something this should be set to a value higher than 20 minutes.\n\n1. A feeler connection is made according to a Poisson distribution with an average of 2 minutes. 50% of the time the interval will take more than 2 minutes. Additionally this interval does not include the connection time. Consider that if each address in the buffer times out.\n2. The collision set buffer can h",https://github.com/bitcoin/bitcoin/pull/15486#discussion_r260900957,260900957,src/addrman.h
sipa,2019-02-27T19:17:02Z,"I haven't looked into this in detail, but wanted to point out that the chance that the time between 2 Poisson-distributed events has only a 1/e = 36.8% chance of being larger than the average interval.",https://github.com/bitcoin/bitcoin/pull/15486#discussion_r260902403,260902403,src/addrman.h
sipa,2019-02-27T19:26:32Z,"Oops, used the wrong arguments on Wolfram Alpha in the previous comment.\n\nIs the question what the probability is that the sum of 10 exponentially-distributed variables (independent and each with an average of 2 minutes) exceeds 20 minutes?\n\nhttps://www.wolframalpha.com/input/?i=P(X%3E20)+where+X~GammaDistribution(10,2) says 45.8%.\n\nExceeding 40 minutes has a chance of 0.5%.",https://github.com/bitcoin/bitcoin/pull/15486#discussion_r260906838,260906838,src/addrman.h
sdaftuar,2019-02-27T19:46:26Z,How likely is it that we add things to `m_tried_collisions` more often than once every 2 minutes or so?,https://github.com/bitcoin/bitcoin/pull/15486#discussion_r260914594,260914594,src/addrman.h
EthanHeilman,2019-02-27T20:39:38Z,">How likely is it that we add things to `m_tried_collisions` more often than once every 2 minutes or so?\n\nNot sure how to compute that probability but I can contrive a scenario where it happens:\n\n1. Assume a victim nodes tried table is full of good nodes, and the victim nodes new table is full of attacker nodes. \n\n2. Victim makes 8 outgoing connections and gets unlucky and chooses all ",https://github.com/bitcoin/bitcoin/pull/15486#discussion_r260933977,260933977,src/addrman.h
sdaftuar,2019-02-27T21:56:11Z,"I've updated to 40 minutes, thanks.",https://github.com/bitcoin/bitcoin/pull/15486#discussion_r260962177,260962177,src/addrman.h
naumenkogs,2019-02-28T02:48:04Z,"I'm not sure, but shouldn't the variables be swapped?",https://github.com/bitcoin/bitcoin/pull/15486#discussion_r261029373,261029373,src/addrman.cpp
EthanHeilman,2019-02-28T15:23:42Z,"The log message is correct, but agree the log message doesn't match what the code is doing. I think there is a bug in the code.\n\nThe collision logic puts the entry in tried into `m_tried_collisions` and then feeler connections tests values in `m_tried_collisions`. Why is it using the `info_new.nLastSuccess` shouldn't it be checking the last success of `info_old` in `m_tried_collisions`?\n\nT",https://github.com/bitcoin/bitcoin/pull/15486#discussion_r261245001,261245001,src/addrman.cpp
EthanHeilman,2019-02-28T15:26:32Z,"Nevermind, I am wrong ignore my last message. The log message and the code is correct.\n\n`} else if (GetAdjustedTime() - info_new.nLastSuccess > ADDRMAN_TEST_WINDOW) {`\nis testing how long it has been since the collision was first found.",https://github.com/bitcoin/bitcoin/pull/15486#discussion_r261246357,261246357,src/addrman.cpp
Sjors,2019-03-01T18:21:03Z,"when `m_tried_collisions` is full we don't add the entry, so this log statement should be inside the if statement below.\n\nBackground question: why is ok that we don't add this collision to `m_tried_collisions`, yet also don't call `MakeTried`? I assume it' because when called with `test_before_evict`, we don't evict when in doubt.",https://github.com/bitcoin/bitcoin/pull/15486#discussion_r261707616,261707616,src/addrman.cpp
Sjors,2019-03-01T18:33:22Z,"The word ""swap"" confused me, also in the log message a few lines above (`if (GetAdjustedTime() - info_old.nLastTry > 60)`). The phrase ""replace [old] with [new]"" is more clear.\n\nAlso, this new behaviour contradicts the ""when in doubt, don't evict"" rule I mentioned above. Though maybe I'm wrong there?  It seems more consistent to just drop the entry.",https://github.com/bitcoin/bitcoin/pull/15486#discussion_r261711418,261711418,src/addrman.cpp
Sjors,2019-03-01T18:39:39Z,"```cpp\n// Require outbound connections, other than feelers, to be to distinct network groups\n```",https://github.com/bitcoin/bitcoin/pull/15486#discussion_r261713340,261713340,src/net.cpp
Sjors,2019-03-01T18:41:25Z,"```cpp\n// if we selected an invalid or a local address, restart\n```",https://github.com/bitcoin/bitcoin/pull/15486#discussion_r261713892,261713892,src/net.cpp
EthanHeilman,2019-03-01T19:13:50Z,Which line are you referring to with the statement about not adding the collision to `m_tried_collisions`?,https://github.com/bitcoin/bitcoin/pull/15486#discussion_r261724754,261724754,src/addrman.cpp
EthanHeilman,2019-03-01T19:17:52Z,"This new behavior does contradict ""when in doubt, don't evict"" but only minimally because we give the IP-to-be-tested 40 minutes to be tested. If something prevents us from connecting to the IP-to-be-tested in that 40 minute window something is probably wrong with the IP-to-be-tested.",https://github.com/bitcoin/bitcoin/pull/15486#discussion_r261726038,261726038,src/addrman.cpp
sdaftuar,2019-03-01T21:02:02Z,"The idea is that if we've been trying to test the old entry and can't for some reason, then something is probably wrong with that old entry, so we do want to do the replacement.",https://github.com/bitcoin/bitcoin/pull/15486#discussion_r261756762,261756762,src/addrman.cpp
sdaftuar,2019-03-01T21:09:24Z,I can edit the language of the log message if this is confusing.,https://github.com/bitcoin/bitcoin/pull/15486#discussion_r261758663,261758663,src/addrman.cpp
sdaftuar,2019-03-01T21:09:28Z,"I don't think it's quite as simple as ""when in doubt, don't evict"".  I think in the case of a collision we bias ourselves towards not evicting, unless the peer we might evict can't be connected to via feeler connection.\n\nMy thought is that if `m_tried_collisions` is ever full, it seems like that is a scenario where we may be under attack; so not replacing things in our tried table (which we as",https://github.com/bitcoin/bitcoin/pull/15486#discussion_r261758676,261758676,src/addrman.cpp
EthanHeilman,2019-03-01T21:37:29Z,"I agree with your intuition.\n\nWe bias toward not evicting. The assumption is that if the tried table is contains many evil IPs we have  already lost and won't hear about good IPs. Thus, we assume the tried has many good IPs and that they should not be evicted unless a particular IP in tried is offline and thus no longer provides security.",https://github.com/bitcoin/bitcoin/pull/15486#discussion_r261766151,261766151,src/addrman.cpp
