DrahtBot,2020-12-02 05:16:00,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22778](https://github.com/bitcoin/bitcoin/pull/22778) (net processing: Reduce resource usage for inbound block-relay-onl",https://github.com/bitcoin/bitcoin/pull/20541#issuecomment-736996062,736996062,
MarcoFalke,2020-12-02 10:41:31,"Concept ACK.\n\nDoes this conflict with any backports we might want to do for 0.21?",https://github.com/bitcoin/bitcoin/pull/20541#issuecomment-737147335,737147335,
sipa,2020-12-02 23:23:54,@MarcoFalke I don't think so. It doesn't conflict with #20516 (either can be backported without affecting the other). Anything else you're thinking of?,https://github.com/bitcoin/bitcoin/pull/20541#issuecomment-737556164,737556164,
MarcoFalke,2020-12-03 07:28:25,"> It is somewhat worrying that all tests passed with the swapped services and address\n\nIndeed. I think we should add unit test vectors for all message types with an example message and the expected deserialization? Assert that both are identical. Though, message format (deserialization) is handled in the same function that does the processing, so I am not sure how to test this in general witho",https://github.com/bitcoin/bitcoin/pull/20541#issuecomment-737720567,737720567,
sipa,2020-12-03 19:08:57,"> It is somewhat worrying that all tests passed with the swapped services and address\n\nIt is, but that's at least partially explained by the fact that we barely use these values. One is ignored entirely, the other is used for statistics about our local IP. The nService fields are also ignored entirely.\n\n> I think we should add unit test vectors for all message types with an example message",https://github.com/bitcoin/bitcoin/pull/20541#issuecomment-738232497,738232497,
naumenkogs,2020-12-04 01:48:49,Concept ACK,https://github.com/bitcoin/bitcoin/pull/20541#issuecomment-738501249,738501249,
lontivero,2020-12-04 02:55:53,ACK 158c0ec,https://github.com/bitcoin/bitcoin/pull/20541#issuecomment-738529623,738529623,
sipa,2021-07-03 00:13:41,Rebased.,https://github.com/bitcoin/bitcoin/pull/20541#issuecomment-873312291,873312291,
jnewbery,2021-07-06 08:41:16,"When we receive a `version` message, we ignore the following fields:\n\n- (4) receiver's services\n- (7) sender's services (duplicate with field 2 - services)\n- (8/9) sender's ipv6 addr/port\n\nPerhaps in the next p2p version bump, we should explicitly document those fields as unused, since there's no purpose for them.",https://github.com/bitcoin/bitcoin/pull/20541#issuecomment-874575197,874575197,
MarcoFalke,2021-08-23 16:20:09,crACK,https://github.com/bitcoin/bitcoin/pull/20541#issuecomment-903921493,903921493,
jnewbery,2021-08-25 15:47:38,"Code review ACK 75290ae61e37f9b7c432b59d03eca6f07f7529cd\n\nThe comment here:\n\nhttps://github.com/bitcoin/bitcoin/blob/75290ae61e37f9b7c432b59d03eca6f07f7529cd/src/protocol.h#L439\n\nCan probably be removed at this point.",https://github.com/bitcoin/bitcoin/pull/20541#issuecomment-905635787,905635787,
MarcoFalke,2021-08-25 15:49:16,#22780 ,https://github.com/bitcoin/bitcoin/pull/20541#issuecomment-905638156,905638156,
vasild,2020-12-02 08:31:10,"""services"" must go before the address and port.\n\n```suggestion\n            (uint64_t)addr.nServices, addr_you, // Together the pre-version-31402 serialization of CAddress ""addrYou"" (without nTime)\n            (uint64_t)nLocalNodeServices, CService(), // Together the pre-version-31402 serialization of CAddress ""addrMe"" (without nTime)\n```",https://github.com/bitcoin/bitcoin/pull/20541#discussion_r533980130,533980130,src/net_processing.cpp
vasild,2020-12-02 08:36:56,"What is `31402`?\n\n```sh\n$ git grep 31402\n$\n```",https://github.com/bitcoin/bitcoin/pull/20541#discussion_r533983581,533983581,src/net_processing.cpp
vasild,2020-12-02 08:41:53,ditto: swap services and address,https://github.com/bitcoin/bitcoin/pull/20541#discussion_r533986388,533986388,src/net_processing.cpp
vasild,2020-12-02 08:42:50,"ditto: swap services and address\n",https://github.com/bitcoin/bitcoin/pull/20541#discussion_r533986961,533986961,src/net_processing.cpp
vasild,2020-12-02 09:35:16,By removing this we assume that for non-disk serialization `s.GetType() & SER_GETHASH` is always false. I.e. `SER_GETHASH` is not used in non-disk ser/deser of `CAddress`. I think this is the case indeed.,https://github.com/bitcoin/bitcoin/pull/20541#discussion_r534021680,534021680,src/protocol.h
sipa,2020-12-02 09:43:14,"31402 is the protocol version that introduced the `nTime` field in CAddress. INIT_PROTO_VERSION (=209) being below it is the reason why the addresses inside the version message don't have it. There is no code left that depends on this, as all connections must be MIN_PEER_PROTO_VERSION (31800) after version negotiation now.\n\n* 209 is from may 2010\n* 31402 is from october 2010\n* 31800 is fro",https://github.com/bitcoin/bitcoin/pull/20541#discussion_r534027133,534027133,src/net_processing.cpp
lontivero,2020-12-02 14:58:36,Yes. No test caught this. ,https://github.com/bitcoin/bitcoin/pull/20541#discussion_r534233283,534233283,src/net_processing.cpp
sipa,2020-12-02 23:21:40,Fixed.,https://github.com/bitcoin/bitcoin/pull/20541#discussion_r534549791,534549791,src/net_processing.cpp
sipa,2020-12-02 23:21:47,Fixed.,https://github.com/bitcoin/bitcoin/pull/20541#discussion_r534549840,534549840,src/net_processing.cpp
sipa,2020-12-02 23:21:54,Fixed.,https://github.com/bitcoin/bitcoin/pull/20541#discussion_r534549874,534549874,src/net_processing.cpp
sipa,2020-12-02 23:23:04,"Yes, this is the case. #20516 adds an assert for this, actually.",https://github.com/bitcoin/bitcoin/pull/20541#discussion_r534550305,534550305,src/protocol.h
jnewbery,2021-07-06 08:10:02,"Since `addFrom` is just thrown away, maybe make this more explicit:\n\n```diff\n--- a/src/net_processing.cpp\n+++ b/src/net_processing.cpp\n@@ -2439,7 +2439,6 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n \n         int64_t nTime;\n         CAddress addrMe;\n-        CAddress addrFrom;\n         uint64_t nNonce = 1;\n         ServiceFlags nServices",https://github.com/bitcoin/bitcoin/pull/20541#discussion_r664332315,664332315,src/net_processing.cpp
jnewbery,2021-07-06 08:15:29,"The service bits here are never used (we don't care what the peer thinks our services are), so we can be more explicit in discarding them and only using the `CService` data:\n\n```diff\n--- a/src/net_processing.cpp\n+++ b/src/net_processing.cpp\n@@ -2438,7 +2438,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         int64_t nTime;\n- ",https://github.com/bitcoin/bitcoin/pull/20541#discussion_r664336347,664336347,src/net_processing.cpp
jnewbery,2021-07-06 08:29:55,"Rather than having these casts in the `Make()` call, perhaps it's a bit more legible as:\n\n```diff\n--- a/src/net_processing.cpp\n+++ b/src/net_processing.cpp\n@@ -1034,18 +1034,19 @@ void PeerManagerImpl::PushNodeVersion(CNode& pnode, int64_t nTime)\n     // Note that pnode->GetLocalServices() is a reflection of the local\n     // services we were offering when the CNode object was create",https://github.com/bitcoin/bitcoin/pull/20541#discussion_r664347584,664347584,src/net_processing.cpp
jnewbery,2021-07-06 08:32:51,"I'm not sure that references to version 31402 are very useful (beyond being a historical footnote). The `version` message contains {services, ipv6 addr, port} elements - the fact that that also used to be how address records used to be serialized in `addr` messages is not helpful in understanding the current protocol.",https://github.com/bitcoin/bitcoin/pull/20541#discussion_r664349865,664349865,src/net_processing.cpp
MarcoFalke,2021-07-09 11:20:21,Agree that `addrFrom` can be removed completely if it is never read from,https://github.com/bitcoin/bitcoin/pull/20541#discussion_r666875768,666875768,src/net_processing.cpp
sipa,2021-08-20 19:17:30,Done (using `vRecv.Ignore(26);` instead).,https://github.com/bitcoin/bitcoin/pull/20541#discussion_r693167654,693167654,src/net_processing.cpp
sipa,2021-08-20 19:17:51,Done (using `vRecv.ignore(8);` instead).,https://github.com/bitcoin/bitcoin/pull/20541#discussion_r693167862,693167862,src/net_processing.cpp
sipa,2021-08-20 19:18:00,Done.,https://github.com/bitcoin/bitcoin/pull/20541#discussion_r693167932,693167932,src/net_processing.cpp
sipa,2021-08-20 19:18:36,"I think they're useful for the time being, as I'd expect more descriptions and documentations of the protocol will keep referring to these fields as `CAddress`es.",https://github.com/bitcoin/bitcoin/pull/20541#discussion_r693168220,693168220,src/net_processing.cpp
MarcoFalke,2021-08-21 13:56:46,nNonce uninitialized?,https://github.com/bitcoin/bitcoin/pull/20541#discussion_r693358001,693358001,src/net_processing.cpp
MarcoFalke,2021-08-21 13:58:28,"`uint64_t my_services{pnode.GetLocalServices()};` is shorter, safer, and looks better",https://github.com/bitcoin/bitcoin/pull/20541#discussion_r693358185,693358185,src/net_processing.cpp
MarcoFalke,2021-08-21 13:59:43,same,https://github.com/bitcoin/bitcoin/pull/20541#discussion_r693358244,693358244,src/net_processing.cpp
sipa,2021-08-21 23:53:11,Done.,https://github.com/bitcoin/bitcoin/pull/20541#discussion_r693416005,693416005,src/net_processing.cpp
sipa,2021-08-21 23:53:21,Fixed.,https://github.com/bitcoin/bitcoin/pull/20541#discussion_r693416011,693416011,src/net_processing.cpp
sipa,2021-08-21 23:53:30,"Agree, done.",https://github.com/bitcoin/bitcoin/pull/20541#discussion_r693416029,693416029,src/net_processing.cpp
jonatack,2021-08-22 15:04:40,"nit, can be const\n```diff\n-    uint64_t my_services{pnode.GetLocalServices()};\n-    uint64_t nonce = pnode.GetLocalNonce();\n+    const uint64_t my_services{pnode.GetLocalServices()};\n+    const uint64_t nonce{pnode.GetLocalNonce()};\n     const int nNodeStartingHeight{m_best_height};\n-    NodeId nodeid = pnode.GetId();\n+    const NodeId nodeid{pnode.GetId()};\n     CAddress addr = ",https://github.com/bitcoin/bitcoin/pull/20541#discussion_r693515258,693515258,src/net_processing.cpp
sipa,2021-08-23 14:37:34,Will include this if I have to retouch for other reasons.,https://github.com/bitcoin/bitcoin/pull/20541#discussion_r694032533,694032533,src/net_processing.cpp
jnewbery,2021-08-25 15:35:18,Thanks for teaching me about `CDataStream.ignore()`!,https://github.com/bitcoin/bitcoin/pull/20541#discussion_r695873779,695873779,src/net_processing.cpp
jnewbery,2021-08-25 15:35:44,Seems reasonable,https://github.com/bitcoin/bitcoin/pull/20541#discussion_r695874141,695874141,src/net_processing.cpp
