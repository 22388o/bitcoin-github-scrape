[
  {
    "sha": "aad309065d38613a7e98aba39d947ca215b7c2f7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYWQzMDkwNjVkMzg2MTNhN2U5OGFiYTM5ZDk0N2NhMjE1YjdjMmY3",
    "commit": {
      "author": {
        "name": "Jeff Rade",
        "email": "jeffrade@gmail.com",
        "date": "2017-12-24T00:42:34Z"
      },
      "committer": {
        "name": "Jeff Rade",
        "email": "jeffrade@gmail.com",
        "date": "2017-12-29T14:56:44Z"
      },
      "message": "[rpc] Adding ::minRelayTxFee amount to getmempoolinfo and updating mempoolminfee help description",
      "tree": {
        "sha": "628423b681fc40b204e11e9a1f46f56687c2a8b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/628423b681fc40b204e11e9a1f46f56687c2a8b0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aad309065d38613a7e98aba39d947ca215b7c2f7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aad309065d38613a7e98aba39d947ca215b7c2f7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/aad309065d38613a7e98aba39d947ca215b7c2f7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aad309065d38613a7e98aba39d947ca215b7c2f7/comments",
    "author": {
      "login": "jeffrade",
      "id": 1307806,
      "node_id": "MDQ6VXNlcjEzMDc4MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1307806?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeffrade",
      "html_url": "https://github.com/jeffrade",
      "followers_url": "https://api.github.com/users/jeffrade/followers",
      "following_url": "https://api.github.com/users/jeffrade/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeffrade/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeffrade/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeffrade/subscriptions",
      "organizations_url": "https://api.github.com/users/jeffrade/orgs",
      "repos_url": "https://api.github.com/users/jeffrade/repos",
      "events_url": "https://api.github.com/users/jeffrade/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeffrade/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jeffrade",
      "id": 1307806,
      "node_id": "MDQ6VXNlcjEzMDc4MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1307806?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeffrade",
      "html_url": "https://github.com/jeffrade",
      "followers_url": "https://api.github.com/users/jeffrade/followers",
      "following_url": "https://api.github.com/users/jeffrade/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeffrade/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeffrade/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeffrade/subscriptions",
      "organizations_url": "https://api.github.com/users/jeffrade/orgs",
      "repos_url": "https://api.github.com/users/jeffrade/repos",
      "events_url": "https://api.github.com/users/jeffrade/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeffrade/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d9fdac130a5ed1d96fcac6bb87c10bec9d596b17",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9fdac130a5ed1d96fcac6bb87c10bec9d596b17",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d9fdac130a5ed1d96fcac6bb87c10bec9d596b17"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 13,
      "deletions": 6
    },
    "files": [
      {
        "sha": "4f754a49cfaeee28f16808f8de3a72f9ae6797b0",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aad309065d38613a7e98aba39d947ca215b7c2f7/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aad309065d38613a7e98aba39d947ca215b7c2f7/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=aad309065d38613a7e98aba39d947ca215b7c2f7",
        "patch": "@@ -1358,6 +1358,7 @@ UniValue mempoolInfoToJSON()\n     size_t maxmempool = gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;\n     ret.push_back(Pair(\"maxmempool\", (int64_t) maxmempool));\n     ret.push_back(Pair(\"mempoolminfee\", ValueFromAmount(std::max(mempool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK())));\n+    ret.push_back(Pair(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK())));\n \n     return ret;\n }\n@@ -1374,7 +1375,8 @@ UniValue getmempoolinfo(const JSONRPCRequest& request)\n             \"  \\\"bytes\\\": xxxxx,              (numeric) Sum of all virtual transaction sizes as defined in BIP 141. Differs from actual serialized size because witness data is discounted\\n\"\n             \"  \\\"usage\\\": xxxxx,              (numeric) Total memory usage for the mempool\\n\"\n             \"  \\\"maxmempool\\\": xxxxx,         (numeric) Maximum memory usage for the mempool\\n\"\n-            \"  \\\"mempoolminfee\\\": xxxxx       (numeric) Minimum fee rate in \" + CURRENCY_UNIT + \"/kB for tx to be accepted\\n\"\n+            \"  \\\"mempoolminfee\\\": xxxxx       (numeric) Minimum fee rate in \" + CURRENCY_UNIT + \"/kB for tx to be accepted. Is the maximum of minrelaytxfee and minimum mempool fee\\n\"\n+            \"  \\\"minrelaytxfee\\\": xxxxx       (numeric) Current minimum relay fee for transactions\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getmempoolinfo\", \"\")"
      },
      {
        "sha": "d8cc9922fd97944f865ab416cd280b6b1a36ea47",
        "filename": "test/functional/mempool_limit.py",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aad309065d38613a7e98aba39d947ca215b7c2f7/test/functional/mempool_limit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aad309065d38613a7e98aba39d947ca215b7c2f7/test/functional/mempool_limit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_limit.py?ref=aad309065d38613a7e98aba39d947ca215b7c2f7",
        "patch": "@@ -17,10 +17,14 @@ def run_test(self):\n         txouts = gen_return_txouts()\n         relayfee = self.nodes[0].getnetworkinfo()['relayfee']\n \n+        self.log.info('Check that mempoolminfee is minrelytxfee')\n+        assert_equal(self.nodes[0].getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n+        assert_equal(self.nodes[0].getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n+\n         txids = []\n         utxos = create_confirmed_utxos(relayfee, self.nodes[0], 91)\n \n-        #create a mempool tx that will be evicted\n+        self.log.info('Create a mempool tx that will be evicted')\n         us0 = utxos.pop()\n         inputs = [{ \"txid\" : us0[\"txid\"], \"vout\" : us0[\"vout\"]}]\n         outputs = {self.nodes[0].getnewaddress() : 0.0001}\n@@ -37,10 +41,14 @@ def run_test(self):\n             txids.append([])\n             txids[i] = create_lots_of_big_transactions(self.nodes[0], txouts, utxos[30*i:30*i+30], 30, (i+1)*base_fee)\n \n-        # by now, the tx should be evicted, check confirmation state\n+        self.log.info('The tx should be evicted by now')\n         assert(txid not in self.nodes[0].getrawmempool())\n         txdata = self.nodes[0].gettransaction(txid)\n         assert(txdata['confirmations'] ==  0) #confirmation should still be 0\n \n+        self.log.info('Check that mempoolminfee is larger than minrelytxfee')\n+        assert_equal(self.nodes[0].getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n+        assert_greater_than(self.nodes[0].getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n+\n if __name__ == '__main__':\n     MempoolLimitTest().main()"
      },
      {
        "sha": "db60df18ede0089fd36ccc851c288550bf0c6bfa",
        "filename": "test/functional/wallet.py",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aad309065d38613a7e98aba39d947ca215b7c2f7/test/functional/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aad309065d38613a7e98aba39d947ca215b7c2f7/test/functional/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet.py?ref=aad309065d38613a7e98aba39d947ca215b7c2f7",
        "patch": "@@ -33,9 +33,6 @@ def run_test(self):\n         assert_equal(len(self.nodes[1].listunspent()), 0)\n         assert_equal(len(self.nodes[2].listunspent()), 0)\n \n-        self.log.info(\"Check for mempoolminfee in getmempoolinfo\")\n-        assert_equal(self.nodes[0].getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n-\n         self.log.info(\"Mining blocks...\")\n \n         self.nodes[0].generate(1)"
      }
    ]
  }
]