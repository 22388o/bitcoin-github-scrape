jtimon,2015-06-21T12:49:00Z,"Needed rebase. Also replaced GetParamsHelpMessages with AppendParamsHelpMessages, which optionally takes a showDebugHelp boolean.\n",https://github.com/bitcoin/bitcoin/pull/6235#issuecomment-113896338,113896338,
jtimon,2015-06-25T18:53:15Z,@theuni this may interact with your code.\n,https://github.com/bitcoin/bitcoin/pull/6235#issuecomment-115361224,115361224,
jtimon,2015-06-25T21:25:35Z,Closing for now to reduce noise\n,https://github.com/bitcoin/bitcoin/pull/6235#issuecomment-115403477,115403477,
jtimon,2015-07-06T21:34:27Z,Great. MAX_NETWORK_TYPES is removed in the second commit.\n,https://github.com/bitcoin/bitcoin/pull/6235#issuecomment-119004314,119004314,
rustyrussell,2015-07-07T06:24:57Z,Ack (tested).\n,https://github.com/bitcoin/bitcoin/pull/6235#issuecomment-119085602,119085602,
jgarzik,2015-07-07T06:46:17Z,"General approach OK.  Comments:\n- Still repeating a chain lookup in chainparams.cpp & chainparamsbase.cpp\n- Only now it is worse because it is a more expensive (now duplicated) string comparison\n- Seeing this duplication hints that a table-driven approach, with each string inside the param struct, is superior to manually administered case statements (& duplicated) of chain strings.\n\nSeems lik",https://github.com/bitcoin/bitcoin/pull/6235#issuecomment-119090545,119090545,
rustyrussell,2015-07-07T07:16:53Z,"@jgarzik since each param has a strNetworkID which is exactly the same as the CBaseChainParams constants introduced, I think a set would be the simplest.\n\nRe-introducing an intermediate type would defeat the point of these patches for me, which is to allow me to easily create a new testnet.  I've been hacking bitcoind to run a megablocks testnet, for example.\n\nBut I like the simplicity of the ",https://github.com/bitcoin/bitcoin/pull/6235#issuecomment-119099072,119099072,
jtimon,2015-07-07T07:58:24Z,"> - Still repeating a chain lookup in chainparams.cpp & chainparamsbase.cpp\n> - Only now it is worse because it is a more expensive (now duplicated) string comparison\n\nYes, the string comparison is more expensive, but it's done on init or tests, so I think it's fine.\nWhat do you mean by ""now duplicated"". Can you point out what exactly am I duplicating here?\n\n> -Seeing this duplication hints ",https://github.com/bitcoin/bitcoin/pull/6235#issuecomment-119110111,119110111,
jtimon,2015-07-28T17:00:06Z,"EDIT (after reverting #6077 ):\n~~This (and thus #6382) should fail the compilation if merged after #6077, I will rebase both: but don't merge this now.~~\n",https://github.com/bitcoin/bitcoin/pull/6235#issuecomment-125679240,125679240,
jtimon,2015-08-20T23:26:45Z,ping @theuni . This should be useful for #6526 just like it's useful for #6382 \n,https://github.com/bitcoin/bitcoin/pull/6235#issuecomment-133210340,133210340,
jtimon,2015-08-21T23:35:00Z,Rebased and fixed (see https://github.com/bitcoin/bitcoin/pull/6077#issuecomment-133584041 ).\n,https://github.com/bitcoin/bitcoin/pull/6235#issuecomment-133589420,133589420,
sipa,2015-08-26T00:32:04Z,Untested ACK\n,https://github.com/bitcoin/bitcoin/pull/6235#issuecomment-134778522,134778522,
theuni,2015-08-26T18:25:34Z,ut ACK\n,https://github.com/bitcoin/bitcoin/pull/6235#issuecomment-135130814,135130814,
jtimon,2015-08-26T19:26:27Z,Fixed @sipa 's nit.\n,https://github.com/bitcoin/bitcoin/pull/6235#issuecomment-135145994,135145994,
jgarzik,2015-09-16T15:14:28Z,ut ACK - though this pushes the bounds of my refactor size-o-meter for end-user utility versus source code disturbance ;p\n,https://github.com/bitcoin/bitcoin/pull/6235#issuecomment-140772638,140772638,
dcousens,2015-09-17T04:08:12Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/6235#issuecomment-140965006,140965006,
jtimon,2015-09-17T13:48:30Z,For more context on more long-term utility of this change see #6382 (needs rebase on top of #6672 ).\n,https://github.com/bitcoin/bitcoin/pull/6235#issuecomment-141092225,141092225,
jtimon,2015-09-22T12:47:14Z,ping\n,https://github.com/bitcoin/bitcoin/pull/6235#issuecomment-142277761,142277761,
apoelstra,2015-10-02T14:44:07Z,"ut ACK. I'm not concerned about string comparisons on init.\n\nWith #6382 NACK'd there is less direct utility to this patch, but I like the deduplication of the error handling. (The whole ""selecting chainparams"" area of the code can be frustrating to read because it has a lot of redundancy like this.)\n",https://github.com/bitcoin/bitcoin/pull/6235#issuecomment-145044592,145044592,
laanwj,2015-10-20T11:33:30Z,ut ACK\n,https://github.com/bitcoin/bitcoin/pull/6235#issuecomment-149533931,149533931,
jtimon,2015-10-20T12:31:57Z,Updated without translating errors or messages that are only shown when debugHelp is true (solved @laanwj and @MarcoFalke 's nits).\n,https://github.com/bitcoin/bitcoin/pull/6235#issuecomment-149550682,149550682,
Diapolo,2015-07-07T06:45:27Z,Why move away from a switch case construct?\n,https://github.com/bitcoin/bitcoin/pull/6235#discussion_r34011498,34011498,src/chainparams.cpp
rustyrussell,2015-07-07T06:58:30Z,You can't switch on a string...\n,https://github.com/bitcoin/bitcoin/pull/6235#discussion_r34012155,34012155,src/chainparams.cpp
sipa,2015-08-26T00:17:44Z,This last line is outdated. That behaviour moved to the separate `generate` RPC call.\n,https://github.com/bitcoin/bitcoin/pull/6235#discussion_r37935236,37935236,src/chainparamsbase.cpp
laanwj,2015-10-20T11:32:39Z,Options help that is only shown with debugHelp should not be translated (see doc/translation_strings_policy.md)\n,https://github.com/bitcoin/bitcoin/pull/6235#discussion_r42483715,42483715,src/chainparamsbase.cpp
MarcoFalke,2015-10-20T11:39:46Z,This one as well? https://github.com/bitcoin/bitcoin/blob/master/doc/translation_strings_policy.md#do-not-translate-internal-errors\n,https://github.com/bitcoin/bitcoin/pull/6235#discussion_r42484244,42484244,src/chainparamsbase.cpp
jtimon,2015-10-20T11:56:16Z,"I didn't know that, thanks. I will correct it.\n",https://github.com/bitcoin/bitcoin/pull/6235#discussion_r42485480,42485480,src/chainparamsbase.cpp
jtimon,2015-10-20T12:00:20Z,"Well, I believe this is an initialization error rather than an internal error. But the initialization errors translation in init.o::AppInit2() seems inconsistent (some times they are translated, some times they aren't).\n@laanwj can you help us here? \n",https://github.com/bitcoin/bitcoin/pull/6235#discussion_r42485872,42485872,src/chainparamsbase.cpp
Diapolo,2015-10-21T19:31:50Z,"I don't get it, why such stuff is alway reintroduced or even used at all:\nShould be: `catch (const std::exception& e)`\n",https://github.com/bitcoin/bitcoin/pull/6235#discussion_r42670699,42670699,src/bitcoin-cli.cpp
Diapolo,2015-10-21T19:32:07Z,"Same here, should be: `catch (const std::exception& e)`\n",https://github.com/bitcoin/bitcoin/pull/6235#discussion_r42670743,42670743,src/bitcoin-tx.cpp
Diapolo,2015-10-21T19:34:35Z,And here: `catch (const std::exception& e)`\n,https://github.com/bitcoin/bitcoin/pull/6235#discussion_r42671004,42671004,src/bitcoind.cpp
Diapolo,2015-10-21T19:35:51Z,And here: `catch (const std::exception& e)`\n,https://github.com/bitcoin/bitcoin/pull/6235#discussion_r42671160,42671160,src/qt/bitcoin.cpp
Diapolo,2015-10-21T19:39:37Z,Nit: These indentations could've been corrected also...\n,https://github.com/bitcoin/bitcoin/pull/6235#discussion_r42671571,42671571,src/chainparams.cpp
jtimon,2015-10-30T10:39:55Z,My fault. I would have changed it if someone had nit it on time.\n,https://github.com/bitcoin/bitcoin/pull/6235#discussion_r43489305,43489305,src/bitcoin-cli.cpp
jtimon,2015-10-30T10:41:47Z,Doing it later in something like #6907 results in less total changes.\n,https://github.com/bitcoin/bitcoin/pull/6235#discussion_r43489443,43489443,src/chainparams.cpp
