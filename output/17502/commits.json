[
  {
    "sha": "1bb5d517aa616c1d5b5801d2ea36a2de5fb61eba",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYmI1ZDUxN2FhNjE2YzFkNWI1ODAxZDJlYTM2YTJkZTVmYjYxZWJh",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2019-11-18T02:16:56Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2019-11-21T15:05:39Z"
      },
      "message": "test: add unit test for non-standard bare multisig txs\n\nThe function IsStandardTx() returns rejection reason \"bare-multisig\" if the\ntransaction has a bare multisig output and the policy flag fIsBareMultisigStd\nis false (set by the boolean command-line argument \"-permitbaremultisig\" -- for\nthe unit test, we simply set the global flag variable directly).",
      "tree": {
        "sha": "98e80394542b577ddafa589a61d409908ffd112f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/98e80394542b577ddafa589a61d409908ffd112f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1bb5d517aa616c1d5b5801d2ea36a2de5fb61eba",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1bb5d517aa616c1d5b5801d2ea36a2de5fb61eba",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1bb5d517aa616c1d5b5801d2ea36a2de5fb61eba",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1bb5d517aa616c1d5b5801d2ea36a2de5fb61eba/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7dbc33f6176443fafdefadebd62438a69ad79a32",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7dbc33f6176443fafdefadebd62438a69ad79a32",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7dbc33f6176443fafdefadebd62438a69ad79a32"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 11,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c144aa9efaf139651ebf3451a7551d18911d031e",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bb5d517aa616c1d5b5801d2ea36a2de5fb61eba/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bb5d517aa616c1d5b5801d2ea36a2de5fb61eba/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=1bb5d517aa616c1d5b5801d2ea36a2de5fb61eba",
        "patch": "@@ -797,6 +797,17 @@ BOOST_AUTO_TEST_CASE(test_IsStandard)\n     reason.clear();\n     BOOST_CHECK(!IsStandardTx(CTransaction(t), reason));\n     BOOST_CHECK_EQUAL(reason, \"scriptsig-size\");\n+\n+    // Check bare multisig (standard if policy flag fIsBareMultisigStd is set)\n+    fIsBareMultisigStd = true;\n+    t.vout[0].scriptPubKey = GetScriptForMultisig(1, {key.GetPubKey()}); // simple 1-of-1\n+    t.vin[0].scriptSig = CScript() << std::vector<unsigned char>(65, 0);\n+    BOOST_CHECK(IsStandardTx(CTransaction(t), reason));\n+\n+    fIsBareMultisigStd = false;\n+    reason.clear();\n+    BOOST_CHECK(!IsStandardTx(CTransaction(t), reason));\n+    BOOST_CHECK_EQUAL(reason, \"bare-multisig\");\n }\n \n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  }
]