[
  {
    "sha": "2fd985dd2901869ac5f620bc0f098fae5ccd8421",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZmQ5ODVkZDI5MDE4NjlhYzVmNjIwYmMwZjA5OGZhZTVjY2Q4NDIx",
    "commit": {
      "author": {
        "name": "Pedro Branco",
        "email": "pedro.branco@uphold.com",
        "date": "2019-01-26T15:05:54Z"
      },
      "committer": {
        "name": "Pedro Branco",
        "email": "pedro.branco@uphold.com",
        "date": "2019-01-26T15:05:54Z"
      },
      "message": "Optional update rescan on importmulti",
      "tree": {
        "sha": "ea2d3fe5f8f5aab8a246ee6909a8924befda98ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ea2d3fe5f8f5aab8a246ee6909a8924befda98ee"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2fd985dd2901869ac5f620bc0f098fae5ccd8421",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2fd985dd2901869ac5f620bc0f098fae5ccd8421",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2fd985dd2901869ac5f620bc0f098fae5ccd8421",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2fd985dd2901869ac5f620bc0f098fae5ccd8421/comments",
    "author": {
      "login": "pedrobranco",
      "id": 4319748,
      "node_id": "MDQ6VXNlcjQzMTk3NDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4319748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pedrobranco",
      "html_url": "https://github.com/pedrobranco",
      "followers_url": "https://api.github.com/users/pedrobranco/followers",
      "following_url": "https://api.github.com/users/pedrobranco/following{/other_user}",
      "gists_url": "https://api.github.com/users/pedrobranco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pedrobranco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pedrobranco/subscriptions",
      "organizations_url": "https://api.github.com/users/pedrobranco/orgs",
      "repos_url": "https://api.github.com/users/pedrobranco/repos",
      "events_url": "https://api.github.com/users/pedrobranco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pedrobranco/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pedrobranco",
      "id": 4319748,
      "node_id": "MDQ6VXNlcjQzMTk3NDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4319748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pedrobranco",
      "html_url": "https://github.com/pedrobranco",
      "followers_url": "https://api.github.com/users/pedrobranco/followers",
      "following_url": "https://api.github.com/users/pedrobranco/following{/other_user}",
      "gists_url": "https://api.github.com/users/pedrobranco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pedrobranco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pedrobranco/subscriptions",
      "organizations_url": "https://api.github.com/users/pedrobranco/orgs",
      "repos_url": "https://api.github.com/users/pedrobranco/repos",
      "events_url": "https://api.github.com/users/pedrobranco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pedrobranco/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ab46fe6ec1b37e88c5a06ee7a06ab31cbd18304f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab46fe6ec1b37e88c5a06ee7a06ab31cbd18304f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ab46fe6ec1b37e88c5a06ee7a06ab31cbd18304f"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 7,
      "deletions": 1
    },
    "files": [
      {
        "sha": "6c55669d710be1646bbb492b1dbe74d8f9e174a0",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2fd985dd2901869ac5f620bc0f098fae5ccd8421/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2fd985dd2901869ac5f620bc0f098fae5ccd8421/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=2fd985dd2901869ac5f620bc0f098fae5ccd8421",
        "patch": "@@ -1189,6 +1189,7 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n                     {\"options\", RPCArg::Type::OBJ, /* opt */ true, /* default_val */ \"null\", \"\",\n                         {\n                             {\"rescan\", RPCArg::Type::BOOL, /* opt */ true, /* default_val */ \"true\", \"Stating if should rescan the blockchain after all imports\"},\n+                            {\"update\", RPCArg::Type::BOOL, /* opt */ true, /* default_val */ \"true\", \"Stating if rescan should notify existent transactions\"},\n                         },\n                         \"\\\"options\\\"\"},\n                 }}\n@@ -1210,13 +1211,18 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     //Default options\n     bool fRescan = true;\n+    bool update = true;\n \n     if (!mainRequest.params[1].isNull()) {\n         const UniValue& options = mainRequest.params[1];\n \n         if (options.exists(\"rescan\")) {\n             fRescan = options[\"rescan\"].get_bool();\n         }\n+\n+        if (options.exists(\"update\")) {\n+            update = options[\"update\"].get_bool();\n+        }\n     }\n \n     WalletRescanReserver reserver(pwallet);\n@@ -1268,7 +1274,7 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n         }\n     }\n     if (fRescan && fRunScan && requests.size()) {\n-        int64_t scannedTime = pwallet->RescanFromTime(nLowestTimestamp, reserver, true /* update */);\n+        int64_t scannedTime = pwallet->RescanFromTime(nLowestTimestamp, reserver, update /* update */);\n         pwallet->ReacceptWalletTransactions();\n \n         if (pwallet->IsAbortingRescan()) {"
      }
    ]
  }
]