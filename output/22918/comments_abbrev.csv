0xB10C,2021-09-08 11:38:41,Concept ACK. Thanks for picking this up. Will review now that the requested changes are in.,https://github.com/bitcoin/bitcoin/pull/22918#issuecomment-915159513,915159513,
DrahtBot,2021-09-08 13:14:05,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22981](https://github.com/bitcoin/bitcoin/pull/22981) (doc: Fix incorrect C++ named args by MarcoFalke)\n* [#22924](http",https://github.com/bitcoin/bitcoin/pull/22918#issuecomment-915228167,915228167,
laanwj,2021-09-16 14:52:41,"Concept ACK, this is a useful feature to have, an interesting approach to use the undo data.",https://github.com/bitcoin/bitcoin/pull/22918#issuecomment-920973917,920973917,
kiminuo,2021-10-06 20:59:23,@luke-jr Could you please re-ACK if you feel like it?,https://github.com/bitcoin/bitcoin/pull/22918#issuecomment-937124792,937124792,
kiminuo,2021-10-08 12:24:41,"> I am leaning towards including the helptext for the new verbosity level. Obviously that will make the help output pretty long, but I think it should be documented.\n\nDo you possibly mean https://github.com/kiminuo/bitcoin/commit/b0bf4f255f86aeaddce68889087c22f9068f4d97 mentioned in the OP (under Possible improvements)? Or what do you mean by helptext, please?",https://github.com/bitcoin/bitcoin/pull/22918#issuecomment-938600872,938600872,
kiminuo,2021-10-08 12:28:16,"> re-utACK [b0f7af3](https://github.com/bitcoin/bitcoin/commit/b0f7af35481c1ed6db4f20cec41443f9c0159f2b)\n\n@luke-jr Ah, you acked previous version, not the current one.",https://github.com/bitcoin/bitcoin/pull/22918#issuecomment-938603717,938603717,
kiminuo,2021-10-11 06:38:41,@theStack Would you please re-ACK if you feel like it?,https://github.com/bitcoin/bitcoin/pull/22918#issuecomment-939727722,939727722,
0xB10C,2021-10-11 15:03:19,ACK 5c34507ecbbdc29c086276d1c62835b461823507,https://github.com/bitcoin/bitcoin/pull/22918#issuecomment-940110748,940110748,
kiminuo,2021-10-13 05:53:35,@MarcoFalke Should I address the review comments now (and thus invalidate ACKs) or can I do it in a follow-up PR? I mean can the PR be merged?,https://github.com/bitcoin/bitcoin/pull/22918#issuecomment-941945156,941945156,
laanwj,2021-10-19 14:20:38,"Merged this as there were no critical comments, many ACKs, and to not drag this on forever. I do think in general it's better to just incorporate comments and not move small nits 'to follow-up PRs' because of fear of invalidating ACKs.",https://github.com/bitcoin/bitcoin/pull/22918#issuecomment-946774355,946774355,
fanquake,2021-10-20 05:33:36,"> I do think in general it's better to just incorporate comments and not move small nits 'to follow-up PRs' because of fear of invalidating ACKs.\n\nI agree. The point of PR review (among other things) is to get code to a mergable state. There are trade-offs depending on the size/complexity of a change, and whether or not everything _must_ be addressed, but I think we have started to drift too f",https://github.com/bitcoin/bitcoin/pull/22918#issuecomment-947342903,947342903,
mjdietzx,2021-10-25 15:56:55,"Post merge ACK 5c34507ecbbdc29c086276d1c62835b461823507\n\nDid some review and light testing while rebasing #22924\n\nI'll be joining in on review of #23320 bc I also had some nits",https://github.com/bitcoin/bitcoin/pull/22918#issuecomment-951068997,951068997,
meshcollider,2021-10-08 11:57:05,nit: `verbose` -> `verbosity` and `inputs` -> `inputs'`,https://github.com/bitcoin/bitcoin/pull/22918#discussion_r724947182,724947182,doc/release-notes.md
kiminuo,2021-10-11 06:39:20,Thank you. I will fix in a next rebase or in a follow-up PR.,https://github.com/bitcoin/bitcoin/pull/22918#discussion_r725826466,725826466,doc/release-notes.md
jonatack,2021-10-11 15:43:25,"Per `doc/developer-notes.md::L672-694`,the following comment and assert are usually employed with self-contained switch statements so the compiler can warn about missing cases. It looks like that could work here as the switch is scoped within the `have_undo` conditional:\n```cpp\n    } // no default case, so the compiler can warn about missing cases\n    assert(false);\n}\n```\n(usually, the",https://github.com/bitcoin/bitcoin/pull/22918#discussion_r726236848,726236848,src/core_write.cpp
kiminuo,2021-10-11 17:21:27,Thank you. I would like to address that a next rebase or in a follow-up PR.,https://github.com/bitcoin/bitcoin/pull/22918#discussion_r726398764,726398764,src/core_write.cpp
promag,2021-10-12 08:47:54,"3cc95345ca49b87e8caca9a0e6418c63ae1e463a\n\nnit, add `break;`?",https://github.com/bitcoin/bitcoin/pull/22918#discussion_r726901134,726901134,src/rpc/blockchain.cpp
promag,2021-10-12 08:52:42,"51dbc167e98daab317baa80cf80bfda337672dab\n\nnit, we only care about one value, what's wrong with\n```cpp\nif (verbosity == TxVerbosity::SHOW_DETAILS_AND_PREVOUT) {\n```\nIf you do this, then declare `prev_coin` in the inner scope.",https://github.com/bitcoin/bitcoin/pull/22918#discussion_r726905478,726905478,src/core_write.cpp
kiminuo,2021-10-12 10:36:50,Thank you. I would like to address that a next rebase or in a follow-up PR.,https://github.com/bitcoin/bitcoin/pull/22918#discussion_r726988280,726988280,src/core_write.cpp
kiminuo,2021-10-12 11:35:11,I have actually proposed the same in the original PR: https://github.com/bitcoin/bitcoin/pull/21245#discussion_r630497819,https://github.com/bitcoin/bitcoin/pull/22918#discussion_r727045238,727045238,src/core_write.cpp
