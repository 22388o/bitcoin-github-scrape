[
  {
    "sha": "685ea2facf993725cb79df56ee9817553e6a0c5b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ODVlYTJmYWNmOTkzNzI1Y2I3OWRmNTZlZTk4MTc1NTNlNmEwYzVi",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-11-16T15:13:41Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2019-03-05T05:36:30Z"
      },
      "message": "build: Optionally include dependency headers with -isystem\n\nWhen configured with --enable-isystem.\n\nWas necessary to split QT_INCLUDES into QT_INCLUDES and\nQT_MOC_INCLUDES because moc does not understand -isystem, e.g.:\n\n    Unknown options: isystem/usr/local/Cellar/qt/5.10.0_1/include/QtNetwork[...]\n\nThis does not convert all uses, but focuses on libraries which have triggered\nwarnings/errors when applying initial additional build checks: QT, Univalue, and Berkeley DB.\nLevelDb requires additional measures as its code is compiled with the project warnings\nvia AM_CXXFLAGS.\n\nNote -isystem should not be applied to /usr/include, see BITCOIN_SYSTEM_INCLUDE\nfor a helper to convert -I to -isystem with /usr/include excepted.",
      "tree": {
        "sha": "cfad3ee9c7d82738d747d41d31c1d956bcf2339e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cfad3ee9c7d82738d747d41d31c1d956bcf2339e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/685ea2facf993725cb79df56ee9817553e6a0c5b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+XLHXoy4Dim7e8hvTYykuhgECQYFAlx+Ct4ACgkQTYykuhgE\nCQbP2A//dqnOzKXfkLEu1o+IqQoYezG+arB3GwwiXR+6b3iJ+H0QltFyOPzALODG\nWdFpjxDpc5phOxs7hU9YYoNtLr++vw6JE9tmvDbOY8Yc6vWpXhvSoVeC053gg3G8\ngaf8A7uS7IvnwsTluYLnx2k0o0tgUa+vS6WzAcrenLpAvyJE++Z1oVO/fQ7e/DSs\nSpJ4ly4FznseNGnrdTxggcGW02UexO1PXoYQ9CmVUq3wW9PD71LGKJIcqkJ/4o7r\nkVojp9LFDdhBgdfsDua1pBjP3btUU5nMcKtDf30UKpL3cgSrILFPrntjI0oZ0BsH\nGFC4gvSqkSzE/SjjYkaxj6k7be4AVjKtbf5m249tNo9cQhaeOmOd/Vv9vFGmYjqL\n11EkeBASXk2CeGZrSaMl67hxxVJhvAiVRIDjn+C/0JS1p1akvt3t7UhACfjNqW+k\nG6HDd3Qyj2fVJRo0u1x3wjWtKwB4/W9iCdxDW8s78NrCfI1bNyF7nCvfLftxe+Qy\nUb2RCsrQa6FaiXjOmmxQ61+d+gxqXzbI16xXo/cC0G+xdCwnuuqwAKFw5jcl9A3R\nrOapAPuKw5uPBrm7xk7aHyHa4xclHvJ1bGTUSaF0TQzMPzbNGp2G6zvrjlM8VwgS\ng06OLfp468XI/LKvTltn5TLEuTYYF6XDw818sGAvK+ORmbGrTkE=\n=vXXR\n-----END PGP SIGNATURE-----",
        "payload": "tree cfad3ee9c7d82738d747d41d31c1d956bcf2339e\nparent 14023c966c51a0a14a2e4477fbe3e5d810f91076\nauthor Ben Woosley <ben.woosley@gmail.com> 1542381221 -0500\ncommitter Ben Woosley <ben.woosley@gmail.com> 1551764190 -0800\n\nbuild: Optionally include dependency headers with -isystem\n\nWhen configured with --enable-isystem.\n\nWas necessary to split QT_INCLUDES into QT_INCLUDES and\nQT_MOC_INCLUDES because moc does not understand -isystem, e.g.:\n\n    Unknown options: isystem/usr/local/Cellar/qt/5.10.0_1/include/QtNetwork[...]\n\nThis does not convert all uses, but focuses on libraries which have triggered\nwarnings/errors when applying initial additional build checks: QT, Univalue, and Berkeley DB.\nLevelDb requires additional measures as its code is compiled with the project warnings\nvia AM_CXXFLAGS.\n\nNote -isystem should not be applied to /usr/include, see BITCOIN_SYSTEM_INCLUDE\nfor a helper to convert -I to -isystem with /usr/include excepted.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/685ea2facf993725cb79df56ee9817553e6a0c5b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/685ea2facf993725cb79df56ee9817553e6a0c5b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/685ea2facf993725cb79df56ee9817553e6a0c5b/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "14023c966c51a0a14a2e4477fbe3e5d810f91076",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/14023c966c51a0a14a2e4477fbe3e5d810f91076",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/14023c966c51a0a14a2e4477fbe3e5d810f91076"
      }
    ],
    "stats": {
      "total": 58,
      "additions": 45,
      "deletions": 13
    },
    "files": [
      {
        "sha": "3a1bd16549aa04ff46ed92956f50e64379b016ec",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/685ea2facf993725cb79df56ee9817553e6a0c5b/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/685ea2facf993725cb79df56ee9817553e6a0c5b/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=685ea2facf993725cb79df56ee9817553e6a0c5b",
        "patch": "@@ -410,17 +410,17 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n     QT_LIB_PREFIX=Qt5\n     qt5_modules=\"Qt5Core Qt5Gui Qt5Network Qt5Widgets\"\n     BITCOIN_QT_CHECK([\n-      PKG_CHECK_MODULES([QT5], [$qt5_modules], [QT_INCLUDES=\"$QT5_CFLAGS\"; QT_LIBS=\"$QT5_LIBS\" have_qt=yes],[have_qt=no])\n+      PKG_CHECK_MODULES([QT5], [$qt5_modules], [have_qt=yes; BITCOIN_SYSTEM_INCLUDE([QT_INCLUDES], [$QT5_CFLAGS]) QT_MOC_INCLUDES=\"$QT5_CFLAGS\"; QT_LIBS=\"$QT5_LIBS\"],[have_qt=no])\n \n       if test \"x$have_qt\" != xyes; then\n         have_qt=no\n         BITCOIN_QT_FAIL([Qt dependencies not found])\n       fi\n     ])\n     BITCOIN_QT_CHECK([\n-      PKG_CHECK_MODULES([QT_TEST], [${QT_LIB_PREFIX}Test], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n+      PKG_CHECK_MODULES([QT_TEST], [${QT_LIB_PREFIX}Test], [have_qt_test=yes; BITCOIN_SYSTEM_INCLUDE([QT_TEST_INCLUDES], [$QT_TEST_CFLAGS])], [have_qt_test=no])\n       if test \"x$use_dbus\" != xno; then\n-        PKG_CHECK_MODULES([QT_DBUS], [${QT_LIB_PREFIX}DBus], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n+        PKG_CHECK_MODULES([QT_DBUS], [${QT_LIB_PREFIX}DBus], [have_qt_dbus=yes; BITCOIN_SYSTEM_INCLUDE([QT_DBUS_INCLUDES], [$QT_DBUS_CFLAGS])], [have_qt_dbus=no])\n       fi\n     ])\n   ])\n@@ -440,7 +440,8 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n   TEMP_LIBS=\"$LIBS\"\n   BITCOIN_QT_CHECK([\n     if test \"x$qt_include_path\" != x; then\n-      QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtWidgets -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n+      QT_MOC_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtWidgets -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n+      BITCOIN_SYSTEM_INCLUDE([QT_INCLUDES], [$QT_MOC_INCLUDES])\n       CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n     fi\n   ])"
      },
      {
        "sha": "34fe832344774574644ceb305d6006cbe1d39048",
        "filename": "build-aux/m4/bitcoin_subdir_to_include.m4",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/685ea2facf993725cb79df56ee9817553e6a0c5b/build-aux/m4/bitcoin_subdir_to_include.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/685ea2facf993725cb79df56ee9817553e6a0c5b/build-aux/m4/bitcoin_subdir_to_include.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_subdir_to_include.m4?ref=685ea2facf993725cb79df56ee9817553e6a0c5b",
        "patch": "@@ -12,7 +12,8 @@ AC_DEFUN([BITCOIN_SUBDIR_TO_INCLUDE],[\n     newinclpath=`${CXXCPP} ${CPPFLAGS} -M conftest.cpp 2>/dev/null | [ tr -d '\\\\n\\\\r\\\\\\\\' | sed -e 's/^.*[[:space:]:]\\(\\/[^[:space:]]*\\)]$3[\\.h[[:space:]].*$/\\1/' -e t -e d`]\n     AC_MSG_RESULT([${newinclpath}])\n     if test \"x${newinclpath}\" != \"x\"; then\n-      eval \"$1=\\\"\\$$1\\\"' -I${newinclpath}'\"\n+      BITCOIN_SYSTEM_INCLUDE([newincl], [\"-I${newinclpath}\"])\n+      eval \"$1=\\\"\\$$1\\\"' ${newincl}'\"\n     fi\n   fi\n ])"
      },
      {
        "sha": "f626f26e93b18fc440817b557453bea601ee86ce",
        "filename": "build-aux/m4/bitcoin_system_include.m4",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/685ea2facf993725cb79df56ee9817553e6a0c5b/build-aux/m4/bitcoin_system_include.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/685ea2facf993725cb79df56ee9817553e6a0c5b/build-aux/m4/bitcoin_system_include.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_system_include.m4?ref=685ea2facf993725cb79df56ee9817553e6a0c5b",
        "patch": "@@ -0,0 +1,19 @@\n+dnl Copyright (c) 2018 The Bitcoin Core developers\n+dnl Distributed under the MIT software license, see the accompanying\n+dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+dnl BITCOIN_SYSTEM_INCLUDE([DESTINATION-VARIABLE-NAME], [INCLUDES-STRING])\n+dnl Populates the variable DESTINATION with the value from INCLUDES but\n+dnl with -I includes switched to -isystem, with the exception of -I/usr/include,\n+dnl which is left unmodified to avoid order issues with /usr/include. See:\n+dnl https://stackoverflow.com/questions/37218953/isystem-on-a-system-include-directory-causes-errors\n+AC_DEFUN([BITCOIN_SYSTEM_INCLUDE],[\n+  if test \"x$use_isystem\" = \"xyes\" && test \"x$2\" != \"x\"; then\n+    dnl Including /usr/include with -isystem is known to cause problems, e.g.\n+    dnl breaking include_next due to, the directive changing inclusion order.\n+    dnl https://bugreports.qt.io/browse/QTBUG-53367\n+    $1=$(echo $2 | sed -e 's| -I| -isystem|g' -e 's|^-I|-isystem|g' -e 's|-isystem/usr/include|-I/usr/include|g')\n+  else\n+    $1=$2\n+  fi\n+])"
      },
      {
        "sha": "bc9d595e4755f8bd41ae9694250cbb1de7b1e8fe",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 17,
        "deletions": 6,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/685ea2facf993725cb79df56ee9817553e6a0c5b/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/685ea2facf993725cb79df56ee9817553e6a0c5b/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=685ea2facf993725cb79df56ee9817553e6a0c5b",
        "patch": "@@ -176,6 +176,12 @@ AC_ARG_ENABLE([ccache],\n   [use_ccache=$enableval],\n   [use_ccache=auto])\n \n+AC_ARG_ENABLE([isystem],\n+  [AS_HELP_STRING([--enable-isystem],\n+  [enable isystem includes for dependencies and stricter warning checks (default is no)])],\n+  [use_isystem=$enableval],\n+  [use_isystem=no])\n+\n AC_ARG_ENABLE([lcov],\n   [AS_HELP_STRING([--enable-lcov],\n   [enable lcov testing (default is no)])],\n@@ -539,7 +545,8 @@ case $host in\n            export PKG_CONFIG_PATH\n          fi\n          if test x$bdb_prefix != x; then\n-           CPPFLAGS=\"$CPPFLAGS -I$bdb_prefix/include\"\n+           BITCOIN_SYSTEM_INCLUDE([bdb_cppflags], [\"-I$bdb_prefix/include\"])\n+           CPPFLAGS=\"$CPPFLAGS $bdb_cppflags\"\n            LIBS=\"$LIBS -L$bdb_prefix/lib\"\n          fi\n          if test x$qt5_prefix != x; then\n@@ -1081,6 +1088,8 @@ AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n LIBS=\"$TEMP_LIBS\"\n CPPFLAGS=\"$TEMP_CPPFLAGS\"\n fi\n+dnl Treat boost includes with isystem if applicable\n+BITCOIN_SYSTEM_INCLUDE([BOOST_CPPFLAGS], [$BOOST_CPPFLAGS])\n \n if test x$boost_sleep != xyes; then\n   AC_MSG_ERROR(No working boost sleep implementation found.)\n@@ -1093,18 +1102,18 @@ if test x$use_pkgconfig = xyes; then\n   m4_ifdef(\n     [PKG_CHECK_MODULES],\n     [\n-      PKG_CHECK_MODULES([SSL], [libssl],, [AC_MSG_ERROR(openssl not found.)])\n-      PKG_CHECK_MODULES([CRYPTO], [libcrypto],,[AC_MSG_ERROR(libcrypto not found.)])\n+      PKG_CHECK_MODULES([SSL], [libssl], [BITCOIN_SYSTEM_INCLUDE([SSL_CFLAGS], [$SSL_CFLAGS])], [AC_MSG_ERROR(openssl not found.)])\n+      PKG_CHECK_MODULES([CRYPTO], [libcrypto], [BITCOIN_SYSTEM_INCLUDE([CRYPTO_CFLAGS], [$CRYPTO_CFLAGS])],[AC_MSG_ERROR(libcrypto not found.)])\n       if test x$enable_bip70 != xno; then\n-        BITCOIN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [have_protobuf=no])])\n+        BITCOIN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes; BITCOIN_SYSTEM_INCLUDE([PROTOBUF_CFLAGS], [$PROTOBUF_CFLAGS])], [have_protobuf=no])])\n       fi\n       if test x$use_qr != xno; then\n         BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n       fi\n       if test x$build_bitcoin_cli$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n-        PKG_CHECK_MODULES([EVENT], [libevent],, [AC_MSG_ERROR(libevent not found.)])\n+        PKG_CHECK_MODULES([EVENT], [libevent], [BITCOIN_SYSTEM_INCLUDE([EVENT_CFLAGS], [$EVENT_CFLAGS])], [AC_MSG_ERROR(libevent not found.)])\n         if test x$TARGET_OS != xwindows; then\n-          PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads],, [AC_MSG_ERROR(libevent_pthreads not found.)])\n+          PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads], [BITCOIN_SYSTEM_INCLUDE([EVENT_PTHREADS_CFLAGS], [$EVENT_PTHREADS_CFLAGS])], [AC_MSG_ERROR(libevent_pthreads not found.)])\n         fi\n       fi\n \n@@ -1228,6 +1237,7 @@ fi\n \n if test x$need_bundled_univalue = xyes ; then\n   UNIVALUE_CFLAGS='-I$(srcdir)/univalue/include'\n+  BITCOIN_SYSTEM_INCLUDE([UNIVALUE_CFLAGS], [$UNIVALUE_CFLAGS])\n   UNIVALUE_LIBS='univalue/libunivalue.la'\n fi\n \n@@ -1559,6 +1569,7 @@ fi\n echo \"  with bench    = $use_bench\"\n echo \"  with upnp     = $use_upnp\"\n echo \"  use asm       = $use_asm\"\n+echo \"  use isystem   = $use_isystem\"\n echo \"  sanitizers    = $use_sanitizers\"\n echo \"  debug enabled = $enable_debug\"\n echo \"  gprof enabled = $enable_gprof\""
      },
      {
        "sha": "5817dc09bca29edddd223324a6b1b152f531cd57",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/685ea2facf993725cb79df56ee9817553e6a0c5b/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/685ea2facf993725cb79df56ee9817553e6a0c5b/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=685ea2facf993725cb79df56ee9817553e6a0c5b",
        "patch": "@@ -477,11 +477,11 @@ ui_%.h: %.ui\n \t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(UIC) -o $@ $< || (echo \"Error creating $@\"; false)\n \n %.moc: %.cpp\n-\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_INCLUDES) $(MOC_DEFS) $< | \\\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_MOC_INCLUDES) $(MOC_DEFS) $< | \\\n \t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@\n \n moc_%.cpp: %.h\n-\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_INCLUDES) $(MOC_DEFS) $< | \\\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_MOC_INCLUDES) $(MOC_DEFS) $< | \\\n \t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@\n \n %.qm: %.ts"
      }
    ]
  },
  {
    "sha": "4334b4c4642a81f3d2076e6a5d3cc12c7fbe21b9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MzM0YjRjNDY0MmE4MWYzZDIwNzZlNmE1ZDNjYzEyYzdmYmUyMWI5",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2019-03-07T15:20:30Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2019-03-07T16:22:29Z"
      },
      "message": "Fix -Wdocumentation errors",
      "tree": {
        "sha": "0e8aa4c27a1720b029b2d53c9de375c911ae20d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0e8aa4c27a1720b029b2d53c9de375c911ae20d1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4334b4c4642a81f3d2076e6a5d3cc12c7fbe21b9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJcgUVOAAoJEG7l83hfeLNF/9sIAJ4CqEaTMuszz9hKSNhQjLjc\n756KO161AcCB7RmOHb2DXn97yv3ycB0MjJ5rhIUJI/YcskUpkb17sSLlgIj/x7Uc\nrgveJ5B1jAZ9x/+qzp/wnq8arsyH/0DFNGjsgCrgPVrs7tzWQNMfeZQXw5J/iaNp\nhUdfAYXTaioZx4bqew14UubwD497AsJdWV3hnixZz4FVh3AvNofh4Ah4nDxiBokn\n4ACfOzLvenvghZw1DkqPV2P8LxGu8cwZWhP9FdsjhScSNTKu2fRxVb2awQlfnfMZ\n8jJXwHBMsHS0Su5B47l7nyKWwYp7AdRy/TorqmLkisi4DjEqzT8GEAyWe4WAfio=\n=uZzr\n-----END PGP SIGNATURE-----",
        "payload": "tree 0e8aa4c27a1720b029b2d53c9de375c911ae20d1\nparent 685ea2facf993725cb79df56ee9817553e6a0c5b\nauthor Ben Woosley <ben.woosley@gmail.com> 1551972030 -0500\ncommitter Ben Woosley <ben.woosley@gmail.com> 1551975749 -0500\n\nFix -Wdocumentation errors\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4334b4c4642a81f3d2076e6a5d3cc12c7fbe21b9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4334b4c4642a81f3d2076e6a5d3cc12c7fbe21b9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4334b4c4642a81f3d2076e6a5d3cc12c7fbe21b9/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "685ea2facf993725cb79df56ee9817553e6a0c5b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/685ea2facf993725cb79df56ee9817553e6a0c5b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/685ea2facf993725cb79df56ee9817553e6a0c5b"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "1f05fee423c75e00c568dfaacb4b6acb277243d7",
        "filename": "src/node/transaction.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4334b4c4642a81f3d2076e6a5d3cc12c7fbe21b9/src/node/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4334b4c4642a81f3d2076e6a5d3cc12c7fbe21b9/src/node/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/transaction.h?ref=4334b4c4642a81f3d2076e6a5d3cc12c7fbe21b9",
        "patch": "@@ -27,8 +27,8 @@ std::string TransactionErrorString(const TransactionError error);\n  * Broadcast a transaction\n  *\n  * @param[in]  tx the transaction to broadcast\n- * @param[out] &txid the txid of the transaction, if successfully broadcast\n- * @param[out] &err_string reference to std::string to fill with error string if available\n+ * @param[out] txid the txid of the transaction, if successfully broadcast\n+ * @param[out] err_string std::string to fill with error string if available\n  * @param[in]  highfee Reject txs with fees higher than this (if 0, accept any fee)\n  * return error\n  */"
      },
      {
        "sha": "65e7fd039a3265b9acfa643abdfa130dad93beec",
        "filename": "src/psbt.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4334b4c4642a81f3d2076e6a5d3cc12c7fbe21b9/src/psbt.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4334b4c4642a81f3d2076e6a5d3cc12c7fbe21b9/src/psbt.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/psbt.h?ref=4334b4c4642a81f3d2076e6a5d3cc12c7fbe21b9",
        "patch": "@@ -557,15 +557,15 @@ bool SignPSBTInput(const SigningProvider& provider, PartiallySignedTransaction&\n /**\n  * Finalizes a PSBT if possible, combining partial signatures.\n  *\n- * @param[in,out] &psbtx reference to PartiallySignedTransaction to finalize\n+ * @param[in,out] psbtx PartiallySignedTransaction to finalize\n  * return True if the PSBT is now complete, false otherwise\n  */\n bool FinalizePSBT(PartiallySignedTransaction& psbtx);\n \n /**\n  * Finalizes a PSBT if possible, and extracts it to a CMutableTransaction if it could be finalized.\n  *\n- * @param[in]  &psbtx reference to PartiallySignedTransaction\n+ * @param[in]  psbtx PartiallySignedTransaction\n  * @param[out] result CMutableTransaction representing the complete transaction, if successful\n  * @return True if we successfully extracted the transaction, false otherwise\n  */\n@@ -574,7 +574,7 @@ bool FinalizeAndExtractPSBT(PartiallySignedTransaction& psbtx, CMutableTransacti\n /**\n  * Combines PSBTs with the same underlying transaction, resulting in a single PSBT with all partial signatures from each input.\n  *\n- * @param[out] &out   the combined PSBT, if successful\n+ * @param[out] out   the combined PSBT, if successful\n  * @param[in]  psbtxs the PSBTs to combine\n  * @return error (OK if we successfully combined the transactions, other error if they were not compatible)\n  */"
      },
      {
        "sha": "46dc60a235ad4bc838f8a0842dc61ca1a6e44027",
        "filename": "src/wallet/psbtwallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4334b4c4642a81f3d2076e6a5d3cc12c7fbe21b9/src/wallet/psbtwallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4334b4c4642a81f3d2076e6a5d3cc12c7fbe21b9/src/wallet/psbtwallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/psbtwallet.h?ref=4334b4c4642a81f3d2076e6a5d3cc12c7fbe21b9",
        "patch": "@@ -17,8 +17,8 @@\n  * finalize.) Sets `error` and returns false if something goes wrong.\n  *\n  * @param[in]  pwallet pointer to a wallet\n- * @param[in]  &psbtx reference to PartiallySignedTransaction to fill in\n- * @param[out] &complete indicates whether the PSBT is now complete\n+ * @param[in]  psbtx PartiallySignedTransaction to fill in\n+ * @param[out] complete indicates whether the PSBT is now complete\n  * @param[in]  sighash_type the sighash type to use when signing (if PSBT does not specify)\n  * @param[in]  sign whether to sign or not\n  * @param[in]  bip32derivs whether to fill in bip32 derivation information if available"
      },
      {
        "sha": "fa9efc1ab0562493f80652acee3e4d86a9731c06",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4334b4c4642a81f3d2076e6a5d3cc12c7fbe21b9/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4334b4c4642a81f3d2076e6a5d3cc12c7fbe21b9/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=4334b4c4642a81f3d2076e6a5d3cc12c7fbe21b9",
        "patch": "@@ -101,7 +101,7 @@ class CKeyMetadata\n     std::string hdKeypath; //optional HD/bip32 keypath. Still used to determine whether a key is a seed. Also kept for backwards compatibility\n     CKeyID hd_seed_id; //id of the HD seed used to derive this key\n     KeyOriginInfo key_origin; // Key origin info with path and fingerprint\n-    bool has_key_origin = false; //< Whether the key_origin is useful\n+    bool has_key_origin = false; //!< Whether the key_origin is useful\n \n     CKeyMetadata()\n     {"
      }
    ]
  },
  {
    "sha": "b51f4e14137e45d8d52fbf0b925287dde45ee97b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNTFmNGUxNDEzN2U0NWQ4ZDUyZmJmMGI5MjUyODdkZGU0NWVlOTdi",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-08-08T19:13:42Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2019-03-07T16:23:01Z"
      },
      "message": "build: Enable -Wdocumentation if isystem is enabled\n\n-Werror=documentation if isystem & werror are enabled.",
      "tree": {
        "sha": "bf6cb4211dd03e20d5c31d38992a80d499cf4a57",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bf6cb4211dd03e20d5c31d38992a80d499cf4a57"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b51f4e14137e45d8d52fbf0b925287dde45ee97b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJcgUVlAAoJEG7l83hfeLNFXGsIAKGEiK9AZXoxj0nx//vdwNhs\nPAfkcjbF2Tbjb+7MNFn4oanyfY8t8jG4M6PqSUS3Z+Wf8c404iS76n+B7ZJUUm8A\n3Qq3DGQC49klumBdGY27dzkxE+EdLizbuBycUxvlY9VV8xVwXcdN4TY+bAl8IPRE\nRWN5O1SUQNvcUD5JM5WDgjDfoewIESz5XdaTBfka0jiWZHEDZQasqlXwsIJuiSz0\nQesXX9pMhzuTKinimz4WRObMzRRTERDEffi6aMB66XAN93yVsZcuMJ5fcDClgdYi\nW7klN+xl27MjzNMsCiYnzglJKCk/SLMWlL6vKQh/wubYUpcxQU9RLK2rIiHIwXQ=\n=SoAW\n-----END PGP SIGNATURE-----",
        "payload": "tree bf6cb4211dd03e20d5c31d38992a80d499cf4a57\nparent 4334b4c4642a81f3d2076e6a5d3cc12c7fbe21b9\nauthor practicalswift <practicalswift@users.noreply.github.com> 1533755622 +0200\ncommitter Ben Woosley <ben.woosley@gmail.com> 1551975781 -0500\n\nbuild: Enable -Wdocumentation if isystem is enabled\n\n-Werror=documentation if isystem & werror are enabled.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b51f4e14137e45d8d52fbf0b925287dde45ee97b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b51f4e14137e45d8d52fbf0b925287dde45ee97b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b51f4e14137e45d8d52fbf0b925287dde45ee97b/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4334b4c4642a81f3d2076e6a5d3cc12c7fbe21b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4334b4c4642a81f3d2076e6a5d3cc12c7fbe21b9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4334b4c4642a81f3d2076e6a5d3cc12c7fbe21b9"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 14,
      "deletions": 1
    },
    "files": [
      {
        "sha": "39e0b8a7c0b487f961a0a493c20ea2247e975661",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b51f4e14137e45d8d52fbf0b925287dde45ee97b/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b51f4e14137e45d8d52fbf0b925287dde45ee97b/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=b51f4e14137e45d8d52fbf0b925287dde45ee97b",
        "patch": "@@ -163,4 +163,4 @@ jobs:\n         RUN_UNIT_TESTS=false\n         RUN_FUNCTIONAL_TESTS=false\n         GOAL=\"deploy\"\n-        BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror\"\n+        BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror --enable-isystem\""
      },
      {
        "sha": "f4bfbab89cc19df587361d3a70dc6d616dd0c7a6",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b51f4e14137e45d8d52fbf0b925287dde45ee97b/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b51f4e14137e45d8d52fbf0b925287dde45ee97b/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=b51f4e14137e45d8d52fbf0b925287dde45ee97b",
        "patch": "@@ -323,6 +323,13 @@ if test \"x$enable_werror\" = \"xyes\"; then\n   fi\n   AX_CHECK_COMPILE_FLAG([-Werror=vla],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=vla\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Werror=thread-safety-analysis],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=thread-safety-analysis\"],,[[$CXXFLAG_WERROR]])\n+\n+  ## Some warnings alert on violations in our dependencies. Only enable them when\n+  ## isystem is in use to keep the build clean\n+  if test \"x$use_isystem\" = \"xyes\"; then\n+    AX_CHECK_COMPILE_FLAG([-Werror=documentation],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=documentation\"],,[[$CXXFLAG_WERROR]])\n+  fi\n+  werror_enabled = yes\n fi\n \n if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n@@ -343,6 +350,12 @@ if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n   AX_CHECK_COMPILE_FLAG([-Wunused-local-typedef],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-unused-local-typedef\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wdeprecated-register],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-deprecated-register\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wimplicit-fallthrough],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-implicit-fallthrough\"],,[[$CXXFLAG_WERROR]])\n+\n+  ## Some warnings alert on violations in our dependencies. Only enable them when\n+  ## isystem is in use to keep the build clean\n+  if test \"x$use_isystem\" = \"xyes\" && test \"x$werror_enabled\" == \"x\"; then\n+    AX_CHECK_COMPILE_FLAG([-Wdocumentation],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wdocumentation\"],,[[$CXXFLAG_WERROR]])\n+  fi\n fi\n \n # Check for optional instruction set support. Enabling these does _not_ imply that all code will"
      }
    ]
  },
  {
    "sha": "db2f41b6d028aaabe45b816fdc602813f6d9fb69",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYjJmNDFiNmQwMjhhYWFiZTQ1YjgxNmZkYzYwMjgxM2Y2ZDlmYjY5",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2019-03-07T16:30:24Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2019-03-07T16:54:57Z"
      },
      "message": "build: Optionally enable -Wthread-safety-attributes\n\nAnd solve associated error:\n    In file included from sync.cpp:5:\n    ./sync.h:66:106: error: 'assert_exclusive_lock' attribute requires arguments whose type is annotated with 'capability' attribute; type here is 'void *' [-Werror,-Wthread-safety-attributes]\n    void static inline AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs) ASSERT_EXCLUSIVE_LOCK(cs) {}\n                                                                                                           ^\n    ./threadsafety.h:34:49: note: expanded from macro 'ASSERT_EXCLUSIVE_LOCK'\n    #define ASSERT_EXCLUSIVE_LOCK(...) __attribute((assert_exclusive_lock(__VA_ARGS__)))\n                                                  ^\n    In file included from threadinterrupt.cpp:6:\n    In file included from ./threadinterrupt.h:8:\n    ./sync.h:66:106: error: 'assert_exclusive_lock' attribute requires arguments whose type is annotated with 'capability' attribute; type here is 'void *' [-Werror,-Wthread-safety-attributes]\n    void static inline AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs) ASSERT_EXCLUSIVE_LOCK(cs) {}\n                                                                                                           ^\n    ./threadsafety.h:34:49: note: expanded from macro 'ASSERT_EXCLUSIVE_LOCK'\n    #define ASSERT_EXCLUSIVE_LOCK(...) __attribute((assert_exclusive_lock(__VA_ARGS__)))\n                                                  ^\n    1 error generated.",
      "tree": {
        "sha": "e203dd12bc76afe1087c59be089b42556772a8e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e203dd12bc76afe1087c59be089b42556772a8e7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/db2f41b6d028aaabe45b816fdc602813f6d9fb69",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJcgUzjAAoJEG7l83hfeLNFPJoH/RghE42SofrJBiCk5d4N8+oJ\nb7gi3cR9pSyXBV0ibq5vbciKEL3mtf4tzBfnQBL5kzcezYWkjR8a+K37B//L8yMK\nhxxRhEx/yceKiW9FcktuszkZetgTBfXfXt7TlQ4yJAZt7fIXOxa7l/hZMaPAOT/J\nCgOI60zolyWVPb6wQv349EmVCH+7WRKZJfgSxmUKE++3030NgZdVdg62/pH/u3jG\n2hEWrixERUsVIAPA/NaJeCvSHpb+NA9w8WA8puf59PA3ILj1/fc6avnj1DCzZv0o\n1VDhLAgU1XKRSmr+d3Hp/DBqpNOW1cprcshlRLQTxaKgrjYz4Jeiv1aTpJiEHDE=\n=r6YY\n-----END PGP SIGNATURE-----",
        "payload": "tree e203dd12bc76afe1087c59be089b42556772a8e7\nparent b51f4e14137e45d8d52fbf0b925287dde45ee97b\nauthor Ben Woosley <ben.woosley@gmail.com> 1551976224 -0500\ncommitter Ben Woosley <ben.woosley@gmail.com> 1551977697 -0500\n\nbuild: Optionally enable -Wthread-safety-attributes\n\nAnd solve associated error:\n    In file included from sync.cpp:5:\n    ./sync.h:66:106: error: 'assert_exclusive_lock' attribute requires arguments whose type is annotated with 'capability' attribute; type here is 'void *' [-Werror,-Wthread-safety-attributes]\n    void static inline AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs) ASSERT_EXCLUSIVE_LOCK(cs) {}\n                                                                                                           ^\n    ./threadsafety.h:34:49: note: expanded from macro 'ASSERT_EXCLUSIVE_LOCK'\n    #define ASSERT_EXCLUSIVE_LOCK(...) __attribute((assert_exclusive_lock(__VA_ARGS__)))\n                                                  ^\n    In file included from threadinterrupt.cpp:6:\n    In file included from ./threadinterrupt.h:8:\n    ./sync.h:66:106: error: 'assert_exclusive_lock' attribute requires arguments whose type is annotated with 'capability' attribute; type here is 'void *' [-Werror,-Wthread-safety-attributes]\n    void static inline AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs) ASSERT_EXCLUSIVE_LOCK(cs) {}\n                                                                                                           ^\n    ./threadsafety.h:34:49: note: expanded from macro 'ASSERT_EXCLUSIVE_LOCK'\n    #define ASSERT_EXCLUSIVE_LOCK(...) __attribute((assert_exclusive_lock(__VA_ARGS__)))\n                                                  ^\n    1 error generated.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db2f41b6d028aaabe45b816fdc602813f6d9fb69",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/db2f41b6d028aaabe45b816fdc602813f6d9fb69",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db2f41b6d028aaabe45b816fdc602813f6d9fb69/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b51f4e14137e45d8d52fbf0b925287dde45ee97b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b51f4e14137e45d8d52fbf0b925287dde45ee97b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b51f4e14137e45d8d52fbf0b925287dde45ee97b"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 18,
      "deletions": 4
    },
    "files": [
      {
        "sha": "4a4a2a5586a419c134d645eff2f42fd2bd5bc11f",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db2f41b6d028aaabe45b816fdc602813f6d9fb69/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db2f41b6d028aaabe45b816fdc602813f6d9fb69/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=db2f41b6d028aaabe45b816fdc602813f6d9fb69",
        "patch": "@@ -328,6 +328,7 @@ if test \"x$enable_werror\" = \"xyes\"; then\n   ## isystem is in use to keep the build clean\n   if test \"x$use_isystem\" = \"xyes\"; then\n     AX_CHECK_COMPILE_FLAG([-Werror=documentation],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=documentation\"],,[[$CXXFLAG_WERROR]])\n+    AX_CHECK_COMPILE_FLAG([-Werror=thread-safety-attributes],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=thread-safety-attributes\"],,[[$CXXFLAG_WERROR]])\n   fi\n   werror_enabled = yes\n fi\n@@ -355,6 +356,7 @@ if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n   ## isystem is in use to keep the build clean\n   if test \"x$use_isystem\" = \"xyes\" && test \"x$werror_enabled\" == \"x\"; then\n     AX_CHECK_COMPILE_FLAG([-Wdocumentation],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wdocumentation\"],,[[$CXXFLAG_WERROR]])\n+    AX_CHECK_COMPILE_FLAG([-Wthread-safety-attributes],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wthread-safety-attributes\"],,[[$CXXFLAG_WERROR]])\n   fi\n fi\n "
      },
      {
        "sha": "7da9f850b26ac2489e9e4d9a84dd1661bdc4af45",
        "filename": "src/sync.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db2f41b6d028aaabe45b816fdc602813f6d9fb69/src/sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db2f41b6d028aaabe45b816fdc602813f6d9fb69/src/sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.cpp?ref=db2f41b6d028aaabe45b816fdc602813f6d9fb69",
        "patch": "@@ -157,7 +157,7 @@ std::string LocksHeld()\n     return result;\n }\n \n-void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs)\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, Lock* cs)\n {\n     for (const std::pair<void*, CLockLocation>& i : g_lockstack)\n         if (i.first == cs)"
      },
      {
        "sha": "2db0e4aca957220cb11776b08fac22b24a73cc17",
        "filename": "src/sync.h",
        "status": "modified",
        "additions": 15,
        "deletions": 3,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db2f41b6d028aaabe45b816fdc602813f6d9fb69/src/sync.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db2f41b6d028aaabe45b816fdc602813f6d9fb69/src/sync.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.h?ref=db2f41b6d028aaabe45b816fdc602813f6d9fb69",
        "patch": "@@ -46,11 +46,23 @@ LEAVE_CRITICAL_SECTION(mutex); // no RAII\n //                           //\n ///////////////////////////////\n \n+/**\n+ * Abstract lock interface\n+ */\n+class LOCKABLE Lock\n+{\n+public:\n+    virtual ~Lock() {}\n+    virtual void lock() EXCLUSIVE_LOCK_FUNCTION() = 0;\n+    virtual void unlock() UNLOCK_FUNCTION() = 0;\n+    virtual bool try_lock() EXCLUSIVE_TRYLOCK_FUNCTION(true) = 0;\n+};\n+\n #ifdef DEBUG_LOCKORDER\n void EnterCritical(const char* pszName, const char* pszFile, int nLine, void* cs, bool fTry = false);\n void LeaveCritical();\n std::string LocksHeld();\n-void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs) ASSERT_EXCLUSIVE_LOCK(cs);\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, Lock* cs) ASSERT_EXCLUSIVE_LOCK(cs);\n void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs);\n void DeleteLock(void* cs);\n \n@@ -63,7 +75,7 @@ extern bool g_debug_lockorder_abort;\n #else\n void static inline EnterCritical(const char* pszName, const char* pszFile, int nLine, void* cs, bool fTry = false) {}\n void static inline LeaveCritical() {}\n-void static inline AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs) ASSERT_EXCLUSIVE_LOCK(cs) {}\n+void static inline AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, Lock* cs) ASSERT_EXCLUSIVE_LOCK(cs) {}\n void static inline AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs) {}\n void static inline DeleteLock(void* cs) {}\n #endif\n@@ -75,7 +87,7 @@ void static inline DeleteLock(void* cs) {}\n  * checking to a subset of the mutex API.\n  */\n template <typename PARENT>\n-class LOCKABLE AnnotatedMixin : public PARENT\n+class LOCKABLE AnnotatedMixin : public Lock, public PARENT\n {\n public:\n     ~AnnotatedMixin() {"
      }
    ]
  }
]