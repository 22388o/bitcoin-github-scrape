DrahtBot,2019-11-04 23:26:25,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17681](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17681.html) (wallet: Keep inactive seeds after sethdseed",https://github.com/bitcoin/bitcoin/pull/17373#issuecomment-549593880,549593880,
achow101,2019-11-05 19:06:56,"> The change seems useful, but incomplete. CTxDestination is more generic than CPubKey, which offers more flexibility with (e.g. multisig) descriptor wallets. But then I think we should use CTxDestination everywhere, so maybe:\n\nI would prefer to clean this up in a followup.",https://github.com/bitcoin/bitcoin/pull/17373#issuecomment-549972243,549972243,
ryanofsky,2019-11-07 22:04:01,"I would love for somebody to do a novelization of this PR like I did for https://github.com/bitcoin/bitcoin/pull/17369#pullrequestreview-313636620. I think I understand what the changes here are doing, but not why they are being made. Particularly I don't understand motivation for commits:\n\n- 8b9a1ed9fb5ef64385d3881b1423059e4daaef13 Key pool: Move TopUp call (3/6)\n- 8fc748e8050525a4235e34f3d",https://github.com/bitcoin/bitcoin/pull/17373#issuecomment-551287220,551287220,
achow101,2019-11-07 23:56:35,@ryanofsky I've updated the OP with something like that.,https://github.com/bitcoin/bitcoin/pull/17373#issuecomment-551321055,551321055,
Sjors,2019-11-08 08:37:06,"Thanks for the novelization.\n\n> Also unclear if Sjors comment above about ""Make TopUp fail"" [#17373 (review)](https://github.com/bitcoin/bitcoin/pull/17373#pullrequestreview-311826649) needs to be addressed\n\nI.e. descriptor wallets with `WALLET_FLAG_DISABLE_PRIVATE_KEYS` should be able to up their ""keypool"". Not too hard to change that later though.\n",https://github.com/bitcoin/bitcoin/pull/17373#issuecomment-551436646,551436646,
Sjors,2019-11-15 12:03:53,"ACK eb9c2601377d40c4d55798a5ffcbe8c4791b91e5\n\nNits:\n* you're not really selling 06d411488c1c669f00a1c947416267941dbb7f7b with the current commit message; maybe replace with what you wrote in the PR description.\n* maybe call `reserved_key_to_index.erase(index)` in `KeepDestination()` as well for completeness\n* `m_reserved_key_to_index` could be more accurately called `m_index_to_reserved_",https://github.com/bitcoin/bitcoin/pull/17373#issuecomment-554334361,554334361,
ryanofsky,2019-11-21 15:27:52,"@instagibbs and @meshcollider, you may be interested to review this. This is code you previously acked when it was part of #16341",https://github.com/bitcoin/bitcoin/pull/17373#issuecomment-557135350,557135350,
Sjors,2019-11-22 15:37:26,re-ACK 42ddfe9125fce4da6738307ef3acf100daac9d75,https://github.com/bitcoin/bitcoin/pull/17373#issuecomment-557580485,557580485,
achow101,2019-11-23 04:29:10,"Rebased.\n\nTo resolve some issues during the rebase, I had to change a LearnRelatedScripts into a LearnAllRelatedScripts. This shoudn't change behavior since all of the scripts were implicitly learned anyways.",https://github.com/bitcoin/bitcoin/pull/17373#issuecomment-557765963,557765963,
Sjors,2019-11-23 12:32:15,"re-ACK 5daefe31c34e12d2a0678aa93e74e94b76d834f5\n\nYou could stick to `LearnRelatedScripts` with https://github.com/Sjors/bitcoin/commit/8b75834396b1731f36f57712ba962074b3f7c6c1 but that's not pretty.  The only way `LearnAllRelatedScripts` produces a different result from `LearnRelatedScripts` is if you reserved a key for a legacy change address. I'm a bit confused about the other code paths tha",https://github.com/bitcoin/bitcoin/pull/17373#issuecomment-557794121,557794121,
instagibbs,2019-11-27 16:17:25,"utACK https://github.com/bitcoin/bitcoin/pull/17373/commits/66b82896d5c9d40abb9e62a7035a97025aa8aad3\n\nonly changes are the ones suggested in my previous review",https://github.com/bitcoin/bitcoin/pull/17373#issuecomment-559155298,559155298,
Sjors,2019-12-03 11:41:16,"Code review re-ACK 886f1731bec4393dd342403ac34069a3a4f95eea\n\n(original nit about `m_reserved_key_to_index` in 386a994b853bc5b3a2ed0d812673465b8ffa4849 description still stands, not worth losing ACKs)",https://github.com/bitcoin/bitcoin/pull/17373#issuecomment-561130581,561130581,
Sjors,2019-11-05 15:41:47,nit: remove one more line,https://github.com/bitcoin/bitcoin/pull/17373#discussion_r342634238,342634238,src/wallet/wallet.cpp
Sjors,2019-11-05 15:45:42,"Move assert for `vchPubKey.IsValid()` as well? (I know it's deleted later, but that commit is still under discussion)",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r342636404,342636404,src/wallet/wallet.cpp
achow101,2019-11-05 19:15:39,Does it really matter? It's removed a few commits later anyways.,https://github.com/bitcoin/bitcoin/pull/17373#discussion_r342748149,342748149,src/wallet/wallet.cpp
achow101,2019-11-05 19:16:54,"Ignoring that it's removed later, the check matters here. since the pubkey should always be valid after GetReservedDestination. Either it was fetched earlier, or it was fetched just then.",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r342748706,342748706,src/wallet/wallet.cpp
Sjors,2019-11-05 20:21:42,"No, it's a nit :-)",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r342778921,342778921,src/wallet/wallet.cpp
ryanofsky,2019-11-14 21:14:02,"In commit ""Key pool: Move CanGetAddresses call"" (f034e5748aa2fac9fb8c9010c806d00b2b8d79ba)\n\nMaybe say something like ""Call LegacyScriptPubKeyMan::CanGetAddresses directly instead of calling CWallet::CanGetAddresses to only query the relevant key manager"" in the commit description be clearer about what the change is supposed to do.\n\nIn case it helps anybody else, after 9b161a718f3c9d3014199",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r346548666,346548666,src/wallet/wallet.cpp
ryanofsky,2019-11-14 21:26:59,"In commit ""Key pool: Move LearnRelated and GetDestination calls"" (35c37b59c5bb918c15aca3092b6506ef3974e50c)\n\nMaybe point out in the commit description that addresses are determined by LegacyScriptPubKeyMan::GetReservedDestination \ninstead of ReserveDestination::GetReservedDestination because other key manager implementations might construct them in other ways.",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r346554060,346554060,src/wallet/scriptpubkeyman.cpp
ryanofsky,2019-11-14 21:37:30,"In commit ""Key pool: Move TopUp call"" (8b9a1ed9fb5ef64385d3881b1423059e4daaef13)\n\nSorry if this is a dumb question, because my understanding here is not great, but the PR description says this call has to be moved so ""it will work after future changes where m_spk_man is not a global thing in CWallet and is fetched based on type and internal-ness"".\n\nBut why couldn't the code here just look ",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r346558726,346558726,src/wallet/wallet.cpp
ryanofsky,2019-11-14 21:46:00,"In commit ""Key pool: Move TopUp call"" (8b9a1ed9fb5ef64385d3881b1423059e4daaef13)\n\nSince aside from the call in `GetNewChangeDestination` this code is also called from `CWallet::CreateTransaction`, I'm wondering if this is a change in behavior. Is topup already called when creating transactions? Wondering if this the ""unsollicited keypool topup"" refered to by https://github.com/bitcoin/bitcoin/",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r346562487,346562487,src/wallet/wallet.cpp
achow101,2019-11-14 22:01:29,The place it is moved to does the lookup as well. It was redundant to do the lookup twice.,https://github.com/bitcoin/bitcoin/pull/17373#discussion_r346568939,346568939,src/wallet/wallet.cpp
achow101,2019-11-14 22:06:16,This is not a change in behavior because `TopUp` is called in `LegacyScriptPubKeyMan::ReserveKeyFromKeyPool`,https://github.com/bitcoin/bitcoin/pull/17373#discussion_r346570868,346570868,src/wallet/wallet.cpp
achow101,2019-11-14 22:16:47,Done,https://github.com/bitcoin/bitcoin/pull/17373#discussion_r346575149,346575149,src/wallet/wallet.cpp
achow101,2019-11-14 22:16:51,Done,https://github.com/bitcoin/bitcoin/pull/17373#discussion_r346575165,346575165,src/wallet/scriptpubkeyman.cpp
ryanofsky,2019-11-19 20:20:40,"In commit ""Key pool: Move LearnRelated and GetDestination calls"" (863655ae1c1325d9dbb3b1e73ec82f4fe16e9425)\n\nNote (mainly for myself): #17237 moves LearnRelatedScripts \n\n`ReserveDestination::GetReservedDestination -> ReserveDestination::KeepDestination`\n\nwhile this moves it:\n\n`ReserveDestination::GetReservedDestination -> LegacyScriptPubKeyMan::GetReservedDestination`\n\nSo I gue",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348146744,348146744,src/wallet/scriptpubkeyman.cpp
ryanofsky,2019-11-19 20:54:24,"> This is not a change in behavior because `TopUp` is called in `LegacyScriptPubKeyMan::ReserveKeyFromKeyPool`\n\n:dizzy_face:\n\nSo if it's already called then why do we need to add a call here?\n\nIn any case, could we move all of this stuff (keyman lookup and topup call) inside the nIndex == -1 block? It seems less confusing to do lookup, topup, reservation all at once, and also maybe mor",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348161590,348161590,src/wallet/wallet.cpp
ryanofsky,2019-11-19 21:39:29,"In commit ""Key pool: Move TopUp call"" (a175268f0e406336cc5d97a0ed458b8f4a805b91)\n\n> The place it is moved to does the lookup as well. It was redundant to do the lookup twice.\n\nOk, so ""so that it will work after future changes"" in the PR description could be clarified to ""so that it will work without an extra address type -> keyman lookup after future changes"".\n\nI'd suggest replacing th",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348182343,348182343,src/wallet/wallet.cpp
ryanofsky,2019-11-19 22:15:27,"In commit ""Key pool: Make TopUp fail if unexpected wallet flags are set"" (b12121d52f46ac7e8455479bc9ded100cfccc841)\n\nThere should be a code comment here to explain what's mentioned in the PR description: that the blank wallet check is needed for TopUp to return false instead of true in a wallet without any keyman objects. It would also be good to say why that's important, because on the surfac",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348198405,348198405,src/wallet/wallet.cpp
ryanofsky,2019-11-19 22:26:23,"In commit ""Key pool: Change ReturnDestination interface to take address instead of key"" (06d411488c1c669f00a1c947416267941dbb7f7b)\n\n`assert(m_reserved_key_to_index.count(nIndex) == 0);` could be reassuring here",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348202544,348202544,src/wallet/scriptpubkeyman.cpp
ryanofsky,2019-11-19 22:27:34,"In commit ""Key pool: Change ReturnDestination interface to take address instead of key"" (06d411488c1c669f00a1c947416267941dbb7f7b)\n\nShould there be separate map for internal / external key indexes? Or should map key be an (index_number, is_internal) pair? Otherwise how do you know the internal/external index numbers don't overlap?",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348202997,348202997,src/wallet/scriptpubkeyman.h
ryanofsky,2019-11-19 22:34:17,"In commit ""Key pool: Change ReturnDestination interface to take address instead of key"" (06d411488c1c669f00a1c947416267941dbb7f7b)\n\nI still don't understand why there is this distinction between ReturnKey and ReturnDestination. Why not just rename ReturnKey to ReturnDestination and get rid of the awkward wrapping?\n\nPrevious: https://github.com/bitcoin/bitcoin/pull/17304#discussion_r3403119",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348205511,348205511,src/wallet/scriptpubkeyman.cpp
ryanofsky,2019-11-19 22:36:25,"In commit ""Key pool: Change ReturnDestination interface to take address instead of key"" (06d411488c1c669f00a1c947416267941dbb7f7b)\n\nWhy doesn't this need to call m_reserved_key_to_index.erase?",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348206310,348206310,src/wallet/scriptpubkeyman.cpp
ryanofsky,2019-11-19 22:39:16,"In commit ""Key pool: Change ReturnDestination interface to take address instead of key"" (06d411488c1c669f00a1c947416267941dbb7f7b)\n\nThis commit needs a better description. The current handwavy placeholder text doesn't explain very much. Suggest replacing it with the explanation in your PR description ""In order for ScriptPubKeyMan to be generic...""",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348207366,348207366,src/wallet/scriptpubkeyman.cpp
achow101,2019-11-19 23:56:14,The indexes do not overlap. See https://github.com/bitcoin/bitcoin/blob/b4a1da9ef8e4b673c290d5b882527e627ae1b43a/src/wallet/scriptpubkeyman.cpp#L1079-L1093,https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348230649,348230649,src/wallet/scriptpubkeyman.h
achow101,2019-11-20 00:06:13,Updated the commit message.,https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348233119,348233119,src/wallet/wallet.cpp
achow101,2019-11-20 00:07:08,"> So if it's already called then why do we need to add a call here?\n\nIt's a belt-and-suspenders as not all ScriptPubKeyMans are guaranteed to do this.\n\nI've moved it inside the block.",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348233366,348233366,src/wallet/wallet.cpp
achow101,2019-11-20 00:07:35,"Looking at this change further, I don't think it's needed, so I've removed this commit.",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348233485,348233485,src/wallet/wallet.cpp
achow101,2019-11-20 00:07:46,Done,https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348233531,348233531,src/wallet/scriptpubkeyman.cpp
achow101,2019-11-20 00:08:41,"The wrapper was for the original PR to make it clearer that things were being moved. As that no longer matters, I've added a commit to rename them.",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348233753,348233753,src/wallet/scriptpubkeyman.cpp
achow101,2019-11-20 00:08:52,Updated the commit message.,https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348233792,348233792,src/wallet/scriptpubkeyman.cpp
achow101,2019-11-20 00:11:33,"It should, and I've added it.\n\nThis wasn't necessarily a bug as it doesn't effect behavior.",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348234425,348234425,src/wallet/scriptpubkeyman.cpp
Sjors,2019-11-20 09:04:53,Nit: in the previous commit you renamed `nIndex` to `index`.,https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348360598,348360598,src/wallet/scriptpubkeyman.cpp
Sjors,2019-11-20 09:07:53,You lost the assert (https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348233531),https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348362355,348362355,src/wallet/scriptpubkeyman.cpp
ryanofsky,2019-11-20 16:28:48,"In commit ""Key pool: Move TopUp call"" (d195dcf841e4037a517ead16db063db9d496b42b)\n\nre: https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348233366\n\n> It's a belt-and-suspenders as not all ScriptPubKeyMans are guaranteed to do this.\n\nWould encourage adding this TopUp call in a new commit (see below), or possibly not doing it in this PR. Commit title ""Key pool: Move TopUp call"" is",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348598174,348598174,src/wallet/wallet.cpp
ryanofsky,2019-11-20 16:38:53,"In commit ""Rename Keep/ReturnKey to Keep/ReturnDestination and remove the wrapper"" (1fecf5d0e681a266ea6adb6ae3c695b404cd3b94)\n\nShould be nIndex (this commit doesn't compile)",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348611654,348611654,src/wallet/scriptpubkeyman.cpp
ryanofsky,2019-11-20 16:49:00,"In commit ""Key pool: Change ReturnDestination interface to take address instead of key"" (8707ba99cf78c556ddda42bf74ddcda164ec9db9)\n\nWould be good to change `[nIndex]` to `.at(nIndex)` here and move this before the inserts above. Safer throw an exception if a bad index is provided than insert nonsense into the keypool.",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348622786,348622786,src/wallet/scriptpubkeyman.cpp
ryanofsky,2019-11-20 16:53:35,"In commit ""Key pool: Change ReturnDestination interface to take address instead of key"" (8707ba99cf78c556ddda42bf74ddcda164ec9db9)\n\nMaybe change `const CTxDestination& addr` to `const CTxDestination&` to make it more obvious the address argument is not used by this implementation.",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348626943,348626943,src/wallet/scriptpubkeyman.cpp
achow101,2019-11-20 17:31:32,I've dropped this commit for now.,https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348646936,348646936,src/wallet/wallet.cpp
achow101,2019-11-20 17:31:36,Fixed,https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348646964,348646964,src/wallet/scriptpubkeyman.cpp
achow101,2019-11-20 17:31:41,Done,https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348646993,348646993,src/wallet/scriptpubkeyman.cpp
achow101,2019-11-20 17:31:44,Done,https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348647019,348647019,src/wallet/scriptpubkeyman.cpp
achow101,2019-11-20 17:31:49,Fixed,https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348647055,348647055,src/wallet/scriptpubkeyman.cpp
achow101,2019-11-20 17:31:55,oops fixed,https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348647091,348647091,src/wallet/scriptpubkeyman.cpp
achow101,2019-11-20 17:55:22,Done as #17537,https://github.com/bitcoin/bitcoin/pull/17373#discussion_r348658200,348658200,src/wallet/wallet.cpp
instagibbs,2019-11-22 14:53:49,s/m_reserved_key_to_index/m_index_to_pool_key/ ? As-is I expected it to be a map from keys to index...,https://github.com/bitcoin/bitcoin/pull/17373#discussion_r349634553,349634553,src/wallet/scriptpubkeyman.h
instagibbs,2019-11-22 15:03:37,"Do we really want to crash if that entry doesn't exist?\n\nI guess this is supposed to never happen, since `nIndex==-1` unless it was set otherwise in `GetReservedDestination` where `m_reserved_key_to_index` is also populated.\n\n",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r349639850,349639850,src/wallet/scriptpubkeyman.cpp
ryanofsky,2019-11-26 00:38:42,"In commit ""Key pool: Move LearnRelated and GetDestination calls"" (c593c2e96351677821e367a6c7aae1ca58f81ff7)\n\nWould move this call outside the assert. It's bad to execute code that has side effects in an assert because in a build with NDEBUG defined it the code will be skipped. We don't support these builds currently, but we may in the future, and it's bad that the breakage caused by this could",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r350493216,350493216,src/wallet/scriptpubkeyman.cpp
ryanofsky,2019-11-26 00:41:15,"In commit ""Key pool: Move LearnRelated and GetDestination calls"" (c593c2e96351677821e367a6c7aae1ca58f81ff7)\n\nThis commit doesn't compile because m_reserved_key_to_index isn't defined yet.",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r350493783,350493783,src/wallet/scriptpubkeyman.cpp
ryanofsky,2019-11-26 00:48:43,"In commit ""Key pool: Move LearnRelated and GetDestination calls"" (c593c2e96351677821e367a6c7aae1ca58f81ff7)\n\nI don't like calling LearnAllRelatedScripts here. There's no reason for nonsense scripts to be added to memory, and it's crazy when wallet code just does random stuff like this with no explanation. Also I don't think this PR needs to be subtly changing behavior more than its already doi",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r350495492,350495492,src/wallet/scriptpubkeyman.cpp
ryanofsky,2019-11-26 00:50:38,"In commit ""Key pool: Move LearnRelated and GetDestination calls"" (c593c2e96351677821e367a6c7aae1ca58f81ff7)\n\nSecond half of the commit message ""There is a minor change in behavior"" is now out of date and should be updated.",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r350495953,350495953,src/wallet/wallet.cpp
achow101,2019-11-26 05:58:33,"I don't see a good way to fix that. i don't really like adding the type as an argument to KeepDestination as it isn't useful in other ScriptPubKeyMans.\n\nThis also doesn't actually change anything since those scripts are already in memory as they are added via `ImplicitlyLearnRelatedScripts` which is called during key loading. This just writes them to the wallet file.",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r350555210,350555210,src/wallet/scriptpubkeyman.cpp
ryanofsky,2019-11-26 12:25:25,"> This just writes them to the wallet file.\n\nWow, that is even worse. If you think this is a good idea please add a comment here explaining that this is doing something nonsensical because design considerations make it not possible for the `KeepDestination` function to be aware of the destination type.\n\nBut I'd encourage you to take a look at my straight refactoring of this code in https:/",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r350710206,350710206,src/wallet/scriptpubkeyman.cpp
achow101,2019-11-26 17:03:51,Done,https://github.com/bitcoin/bitcoin/pull/17373#discussion_r350870174,350870174,src/wallet/scriptpubkeyman.cpp
achow101,2019-11-26 17:03:55,Fixed,https://github.com/bitcoin/bitcoin/pull/17373#discussion_r350870216,350870216,src/wallet/scriptpubkeyman.cpp
achow101,2019-11-26 17:04:29,"I don't see how this is at all ""nonsensical"" or ""even worse'. But whatever, I've learned my lesson from the multiple days spent stuck on `TopUp()` so it's changed.",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r350870468,350870468,src/wallet/scriptpubkeyman.cpp
ryanofsky,2019-11-26 21:22:39,"In commit ""Key pool: Move LearnRelated and GetDestination calls"" (094f0545d2d1309ad85eb66f107dec52746490df)\n\nCommit description ""There is a minor change in behavior"" seems out of date. Would just say ""This commit does not change behavior"".\n\nThe previous description was referring to LearnRelatedScripts call moving under the GetReservedDestination `nIndex == -1` check in the old version of t",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r350986220,350986220,src/wallet/scriptpubkeyman.cpp
ryanofsky,2019-11-26 21:25:25,"In commit ""Key pool: Change ReturnDestination interface to take address instead of key"" (8e70f2b4150ca2d25f06cc65295cb27a86c49681)\n\nThis should call `m_reserved_key_to_index.erase(nIndex);` to clean up",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r350987323,350987323,src/wallet/scriptpubkeyman.cpp
instagibbs,2019-11-27 14:47:19,"as noted a few days ago, this should be renamed",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r351328532,351328532,src/wallet/scriptpubkeyman.h
achow101,2019-11-27 16:15:23,Fixed.,https://github.com/bitcoin/bitcoin/pull/17373#discussion_r351379175,351379175,src/wallet/scriptpubkeyman.cpp
achow101,2019-11-27 16:15:27,Fixed.,https://github.com/bitcoin/bitcoin/pull/17373#discussion_r351379228,351379228,src/wallet/scriptpubkeyman.cpp
achow101,2019-11-27 16:16:08,Renamed it.,https://github.com/bitcoin/bitcoin/pull/17373#discussion_r351379620,351379620,src/wallet/scriptpubkeyman.h
Sjors,2019-11-29 10:37:54,"Note to other reviewers: this assert is lost, but `GetReservedDestination` calls `ReserveKeyFromKeyPool` which throws if `!keypool.vchPubKey.IsValid()`",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r352074009,352074009,src/wallet/wallet.cpp
ryanofsky,2019-12-02 01:24:36,"In commit ""Key pool: Move LearnRelated and GetDestination calls"" (393315354da454eb0f9322b92ad736bd23606f97\n\nDo we need:\n\n```diff\n@@ -3308,6 +3308,8 @@ bool ReserveDestination::GetReservedDestination(CTxDestination& dest, bool inter\n         vchPubKey = keypool.vchPubKey;\n         fInternal = keypool.fInternal;\n         address = dest;\n+    } else {\n+        dest = address;\n  ",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r352391220,352391220,src/wallet/wallet.cpp
achow101,2019-12-02 14:56:58,Done as suggested.,https://github.com/bitcoin/bitcoin/pull/17373#discussion_r352640636,352640636,src/wallet/wallet.cpp
ryanofsky,2019-12-02 16:41:52,"re: https://github.com/bitcoin/bitcoin/pull/17373#discussion_r352391220\n\n> Done as suggested.\n\nNote: This change was done in the wrong commit ""Change ReturnDestination interface"" (82dbc9344c33217e01c16b27d1418f042d0d0d77) instead the suggested ""Move LearnRelated and GetDestination"" (393315354da454eb0f9322b92ad736bd23606f97), so `dest` return value is temporarily left unset by the earlier c",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r352703450,352703450,src/wallet/scriptpubkeyman.cpp
achow101,2019-12-02 16:59:47,"Oops, moved it to the right commit.",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r352713871,352713871,src/wallet/wallet.cpp
instagibbs,2019-12-02 17:09:58,"future work: address vs dest clarification via renaming would be great, even just `m_dest` vs `dest`",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r352719014,352719014,src/wallet/wallet.cpp
promag,2019-12-06 17:46:20,"nit, could avoid 2nd lookup:\n```\nauto it = find(index)\n...\nerase(it)\n```",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r354953549,354953549,src/wallet/scriptpubkeyman.cpp
promag,2019-12-06 17:49:05,"nit, could also avoid 2nd lookup:\n```\nauto res = emplace(nIndex, ...)\nassert(res.second)\n```",https://github.com/bitcoin/bitcoin/pull/17373#discussion_r354954643,354954643,src/wallet/scriptpubkeyman.cpp
achow101,2019-12-06 18:03:32,Leaving as is to keep ACKs,https://github.com/bitcoin/bitcoin/pull/17373#discussion_r354960510,354960510,src/wallet/scriptpubkeyman.cpp
achow101,2019-12-06 18:03:36,Leaving as is to keep ACKs,https://github.com/bitcoin/bitcoin/pull/17373#discussion_r354960526,354960526,src/wallet/scriptpubkeyman.cpp
