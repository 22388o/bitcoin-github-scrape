[
  {
    "sha": "596f6460f9fd8273665c8754ccd673d93a4f25f0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OTZmNjQ2MGY5ZmQ4MjczNjY1Yzg3NTRjY2Q2NzNkOTNhNGYyNWYw",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-10-07T18:11:34Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-11-23T03:41:27Z"
      },
      "message": "Key pool: Move CanGetAddresses call\n\nCall LegacyScriptPubKeyMan::CanGetAddresses directly instead of calling\nCWallet::CanGetAddresses to only query the relevant key manager\n\nThis is a minor change in behavior: call now only happens if a new key needs to\nbe reserved, since if a key is already reserved it might fail unnecessarily.\n\nThis change also serves as a sanity check\nhttps://github.com/bitcoin/bitcoin/pull/16341#discussion_r331238394",
      "tree": {
        "sha": "e61c4da9158cff7385ee7c46d79df719658de673",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e61c4da9158cff7385ee7c46d79df719658de673"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/596f6460f9fd8273665c8754ccd673d93a4f25f0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/596f6460f9fd8273665c8754ccd673d93a4f25f0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/596f6460f9fd8273665c8754ccd673d93a4f25f0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/596f6460f9fd8273665c8754ccd673d93a4f25f0/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0b79caf658019de2c65a53c9e11fd1d2f4c369b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b79caf658019de2c65a53c9e11fd1d2f4c369b6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b79caf658019de2c65a53c9e11fd1d2f4c369b6"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "9c5f2b5098d492a8355794bf5a682381d4cd3cb1",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/596f6460f9fd8273665c8754ccd673d93a4f25f0/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/596f6460f9fd8273665c8754ccd673d93a4f25f0/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=596f6460f9fd8273665c8754ccd673d93a4f25f0",
        "patch": "@@ -264,6 +264,10 @@ bool LegacyScriptPubKeyMan::EncryptKeys(CKeyingMaterial& vMasterKeyIn)\n \n bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool internal, int64_t& index, CKeyPool& keypool)\n {\n+    if (!CanGetAddresses(internal)) {\n+        return false;\n+    }\n+\n     if (!ReserveKeyFromKeyPool(index, keypool, internal)) {\n         return false;\n     }"
      },
      {
        "sha": "89309a01d66046be65978596c31f335bea98d055",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/596f6460f9fd8273665c8754ccd673d93a4f25f0/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/596f6460f9fd8273665c8754ccd673d93a4f25f0/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=596f6460f9fd8273665c8754ccd673d93a4f25f0",
        "patch": "@@ -3298,9 +3298,6 @@ bool ReserveDestination::GetReservedDestination(CTxDestination& dest, bool inter\n         return false;\n     }\n \n-    if (!pwallet->CanGetAddresses(internal)) {\n-        return false;\n-    }\n \n     if (nIndex == -1)\n     {"
      }
    ]
  },
  {
    "sha": "9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZmNmOGNlN2FlMDJiZjE3MGI5YmYwYzI4ODdmZDcwOWQ3NTJjYmY3",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-11-19T23:33:20Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-11-26T16:46:40Z"
      },
      "message": "Rename Keep/ReturnKey to Keep/ReturnDestination and remove the wrapper\n\nThere is no reason to have Keep/ReturnDestination to be a wrapper for\nKeep/ReturnKey. Instead just make them the same function.",
      "tree": {
        "sha": "4416ea6c352f2c8dabea6aa83864a2cd957bc3d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4416ea6c352f2c8dabea6aa83864a2cd957bc3d9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "596f6460f9fd8273665c8754ccd673d93a4f25f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/596f6460f9fd8273665c8754ccd673d93a4f25f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/596f6460f9fd8273665c8754ccd673d93a4f25f0"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 3,
      "deletions": 16
    },
    "files": [
      {
        "sha": "76a678d06a67330610a35eb9f585255b3a97ab54",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 13,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7",
        "patch": "@@ -274,16 +274,6 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     return true;\n }\n \n-void LegacyScriptPubKeyMan::KeepDestination(int64_t index)\n-{\n-    KeepKey(index);\n-}\n-\n-void LegacyScriptPubKeyMan::ReturnDestination(int64_t index, bool internal, const CPubKey& pubkey)\n-{\n-    ReturnKey(index, internal, pubkey);\n-}\n-\n void LegacyScriptPubKeyMan::MarkUnusedAddresses(const CScript& script)\n {\n     AssertLockHeld(cs_wallet);\n@@ -1096,15 +1086,15 @@ void LegacyScriptPubKeyMan::AddKeypoolPubkeyWithDB(const CPubKey& pubkey, const\n     m_pool_key_to_index[pubkey.GetID()] = index;\n }\n \n-void LegacyScriptPubKeyMan::KeepKey(int64_t nIndex)\n+void LegacyScriptPubKeyMan::KeepDestination(int64_t nIndex)\n {\n     // Remove from key pool\n     WalletBatch batch(m_storage.GetDatabase());\n     batch.ErasePool(nIndex);\n     WalletLogPrintf(\"keypool keep %d\\n\", nIndex);\n }\n \n-void LegacyScriptPubKeyMan::ReturnKey(int64_t nIndex, bool fInternal, const CPubKey& pubkey)\n+void LegacyScriptPubKeyMan::ReturnDestination(int64_t nIndex, bool fInternal, const CPubKey& pubkey)\n {\n     // Return to key pool\n     {\n@@ -1138,7 +1128,7 @@ bool LegacyScriptPubKeyMan::GetKeyFromPool(CPubKey& result, bool internal)\n             result = GenerateNewKey(batch, internal);\n             return true;\n         }\n-        KeepKey(nIndex);\n+        KeepDestination(nIndex);\n         result = keypool.vchPubKey;\n     }\n     return true;"
      },
      {
        "sha": "5d366f441ebb79ccbe1b29bc816902ee7be39ce8",
        "filename": "src/wallet/scriptpubkeyman.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7/src/wallet/scriptpubkeyman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7/src/wallet/scriptpubkeyman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.h?ref=9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7",
        "patch": "@@ -266,9 +266,6 @@ class LegacyScriptPubKeyMan : public ScriptPubKeyMan, public FillableSigningProv\n      */\n     bool ReserveKeyFromKeyPool(int64_t& nIndex, CKeyPool& keypool, bool fRequestedInternal);\n \n-    void KeepKey(int64_t nIndex);\n-    void ReturnKey(int64_t nIndex, bool fInternal, const CPubKey& pubkey);\n-\n public:\n     bool GetNewDestination(const OutputType type, CTxDestination& dest, std::string& error) override;\n     isminetype IsMine(const CScript& script) const override;"
      }
    ]
  },
  {
    "sha": "65833a74076cddf986037c6eb3b29a9b9dbe31c5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NTgzM2E3NDA3NmNkZGY5ODYwMzdjNmViM2IyOWE5YjlkYmUzMWM1",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-11-26T16:52:51Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-11-26T16:52:51Z"
      },
      "message": "Add OutputType and CPubKey parameters to KeepDestination\n\nThese need to be added so that LearnRelatedScripts can be called\nfrom within KeepDestination later.",
      "tree": {
        "sha": "785a8a3f8ed8369d8954fd38d6ba2369753cb8f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/785a8a3f8ed8369d8954fd38d6ba2369753cb8f1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/65833a74076cddf986037c6eb3b29a9b9dbe31c5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65833a74076cddf986037c6eb3b29a9b9dbe31c5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/65833a74076cddf986037c6eb3b29a9b9dbe31c5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65833a74076cddf986037c6eb3b29a9b9dbe31c5/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "f7153a751f08620e0ca63380bba245b9bf1e781b",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/65833a74076cddf986037c6eb3b29a9b9dbe31c5/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/65833a74076cddf986037c6eb3b29a9b9dbe31c5/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=65833a74076cddf986037c6eb3b29a9b9dbe31c5",
        "patch": "@@ -18,7 +18,7 @@ bool LegacyScriptPubKeyMan::GetNewDestination(const OutputType type, CTxDestinat\n \n     // Generate a new key that is added to wallet\n     CPubKey new_key;\n-    if (!GetKeyFromPool(new_key)) {\n+    if (!GetKeyFromPool(new_key, type)) {\n         error = \"Error: Keypool ran out, please call keypoolrefill first\";\n         return false;\n     }\n@@ -1086,7 +1086,7 @@ void LegacyScriptPubKeyMan::AddKeypoolPubkeyWithDB(const CPubKey& pubkey, const\n     m_pool_key_to_index[pubkey.GetID()] = index;\n }\n \n-void LegacyScriptPubKeyMan::KeepDestination(int64_t nIndex)\n+void LegacyScriptPubKeyMan::KeepDestination(int64_t nIndex, const OutputType& type, const CPubKey& pubkey)\n {\n     // Remove from key pool\n     WalletBatch batch(m_storage.GetDatabase());\n@@ -1112,7 +1112,7 @@ void LegacyScriptPubKeyMan::ReturnDestination(int64_t nIndex, bool fInternal, co\n     WalletLogPrintf(\"keypool return %d\\n\", nIndex);\n }\n \n-bool LegacyScriptPubKeyMan::GetKeyFromPool(CPubKey& result, bool internal)\n+bool LegacyScriptPubKeyMan::GetKeyFromPool(CPubKey& result, const OutputType type, bool internal)\n {\n     if (!CanGetAddresses(internal)) {\n         return false;\n@@ -1128,7 +1128,7 @@ bool LegacyScriptPubKeyMan::GetKeyFromPool(CPubKey& result, bool internal)\n             result = GenerateNewKey(batch, internal);\n             return true;\n         }\n-        KeepDestination(nIndex);\n+        KeepDestination(nIndex, type, keypool.vchPubKey);\n         result = keypool.vchPubKey;\n     }\n     return true;"
      },
      {
        "sha": "16901952a6b0d8ec9b16a09d5ed836cec7fde910",
        "filename": "src/wallet/scriptpubkeyman.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/65833a74076cddf986037c6eb3b29a9b9dbe31c5/src/wallet/scriptpubkeyman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/65833a74076cddf986037c6eb3b29a9b9dbe31c5/src/wallet/scriptpubkeyman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.h?ref=65833a74076cddf986037c6eb3b29a9b9dbe31c5",
        "patch": "@@ -151,7 +151,7 @@ class ScriptPubKeyMan\n     virtual isminetype IsMine(const CScript& script) const { return ISMINE_NO; }\n \n     virtual bool GetReservedDestination(const OutputType type, bool internal, int64_t& index, CKeyPool& keypool) { return false; }\n-    virtual void KeepDestination(int64_t index) {}\n+    virtual void KeepDestination(int64_t index, const OutputType& type, const CPubKey& pubkey) {}\n     virtual void ReturnDestination(int64_t index, bool internal, const CPubKey& pubkey) {}\n \n     virtual bool TopUp(unsigned int size = 0) { return false; }\n@@ -248,7 +248,7 @@ class LegacyScriptPubKeyMan : public ScriptPubKeyMan, public FillableSigningProv\n     std::map<CKeyID, int64_t> m_pool_key_to_index;\n \n     //! Fetches a key from the keypool\n-    bool GetKeyFromPool(CPubKey &key, bool internal = false);\n+    bool GetKeyFromPool(CPubKey &key, const OutputType type, bool internal = false);\n \n     /**\n      * Reserves a key from the keypool and sets nIndex to its index\n@@ -274,7 +274,7 @@ class LegacyScriptPubKeyMan : public ScriptPubKeyMan, public FillableSigningProv\n     bool EncryptKeys(CKeyingMaterial& vMasterKeyIn);\n \n     bool GetReservedDestination(const OutputType type, bool internal, int64_t& index, CKeyPool& keypool) override;\n-    void KeepDestination(int64_t index) override;\n+    void KeepDestination(int64_t index, const OutputType& type, const CPubKey& pubkey) override;\n     void ReturnDestination(int64_t index, bool internal, const CPubKey& pubkey) override;\n \n     bool TopUp(unsigned int size = 0) override;"
      },
      {
        "sha": "179e7b39eac15a32c239d2e59a61ef5c5f6310a5",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/65833a74076cddf986037c6eb3b29a9b9dbe31c5/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/65833a74076cddf986037c6eb3b29a9b9dbe31c5/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=65833a74076cddf986037c6eb3b29a9b9dbe31c5",
        "patch": "@@ -3317,7 +3317,7 @@ bool ReserveDestination::GetReservedDestination(CTxDestination& dest, bool inter\n void ReserveDestination::KeepDestination()\n {\n     if (nIndex != -1) {\n-        m_spk_man->KeepDestination(nIndex);\n+        m_spk_man->KeepDestination(nIndex, type, vchPubKey);\n         m_spk_man->LearnRelatedScripts(vchPubKey, type);\n     }\n     nIndex = -1;"
      }
    ]
  },
  {
    "sha": "ba41aa4969169cd73d6b4f57444ed7d8d875de10",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYTQxYWE0OTY5MTY5Y2Q3M2Q2YjRmNTc0NDRlZDdkOGQ4NzVkZTEw",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-10-07T18:11:34Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-12-02T16:57:20Z"
      },
      "message": "Key pool: Move LearnRelated and GetDestination calls\n\nAddresses are determined by LegacyScriptPubKeyMan::GetReservedDestination\ninstead of ReserveDestination::GetReservedDestination as other ScriptPubKeyMan\nimplementations may construct addresses differently\n\nThis does not change behavior.",
      "tree": {
        "sha": "1645f6defd962dc195bde34031a862a9bc84eed3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1645f6defd962dc195bde34031a862a9bc84eed3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ba41aa4969169cd73d6b4f57444ed7d8d875de10",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba41aa4969169cd73d6b4f57444ed7d8d875de10",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ba41aa4969169cd73d6b4f57444ed7d8d875de10",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba41aa4969169cd73d6b4f57444ed7d8d875de10/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "65833a74076cddf986037c6eb3b29a9b9dbe31c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65833a74076cddf986037c6eb3b29a9b9dbe31c5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/65833a74076cddf986037c6eb3b29a9b9dbe31c5"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 8,
      "deletions": 7
    },
    "files": [
      {
        "sha": "4986871fb708283285233135a59a1443dd6720ca",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba41aa4969169cd73d6b4f57444ed7d8d875de10/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba41aa4969169cd73d6b4f57444ed7d8d875de10/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=ba41aa4969169cd73d6b4f57444ed7d8d875de10",
        "patch": "@@ -262,7 +262,7 @@ bool LegacyScriptPubKeyMan::EncryptKeys(CKeyingMaterial& vMasterKeyIn)\n     return true;\n }\n \n-bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool internal, int64_t& index, CKeyPool& keypool)\n+bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool internal, CTxDestination& address, int64_t& index, CKeyPool& keypool)\n {\n     if (!CanGetAddresses(internal)) {\n         return false;\n@@ -271,6 +271,7 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     if (!ReserveKeyFromKeyPool(index, keypool, internal)) {\n         return false;\n     }\n+    address = GetDestinationForKey(keypool.vchPubKey, type);\n     return true;\n }\n \n@@ -1091,6 +1092,7 @@ void LegacyScriptPubKeyMan::KeepDestination(int64_t nIndex, const OutputType& ty\n     // Remove from key pool\n     WalletBatch batch(m_storage.GetDatabase());\n     batch.ErasePool(nIndex);\n+    LearnRelatedScripts(pubkey, type);\n     WalletLogPrintf(\"keypool keep %d\\n\", nIndex);\n }\n "
      },
      {
        "sha": "bcc62ece1e9ee9dfd74dcd8fb990e07f0ef212ce",
        "filename": "src/wallet/scriptpubkeyman.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba41aa4969169cd73d6b4f57444ed7d8d875de10/src/wallet/scriptpubkeyman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba41aa4969169cd73d6b4f57444ed7d8d875de10/src/wallet/scriptpubkeyman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.h?ref=ba41aa4969169cd73d6b4f57444ed7d8d875de10",
        "patch": "@@ -150,7 +150,7 @@ class ScriptPubKeyMan\n     virtual bool GetNewDestination(const OutputType type, CTxDestination& dest, std::string& error) { return false; }\n     virtual isminetype IsMine(const CScript& script) const { return ISMINE_NO; }\n \n-    virtual bool GetReservedDestination(const OutputType type, bool internal, int64_t& index, CKeyPool& keypool) { return false; }\n+    virtual bool GetReservedDestination(const OutputType type, bool internal, CTxDestination& address, int64_t& index, CKeyPool& keypool) { return false; }\n     virtual void KeepDestination(int64_t index, const OutputType& type, const CPubKey& pubkey) {}\n     virtual void ReturnDestination(int64_t index, bool internal, const CPubKey& pubkey) {}\n \n@@ -273,7 +273,7 @@ class LegacyScriptPubKeyMan : public ScriptPubKeyMan, public FillableSigningProv\n     //! will encrypt previously unencrypted keys\n     bool EncryptKeys(CKeyingMaterial& vMasterKeyIn);\n \n-    bool GetReservedDestination(const OutputType type, bool internal, int64_t& index, CKeyPool& keypool) override;\n+    bool GetReservedDestination(const OutputType type, bool internal, CTxDestination& address, int64_t& index, CKeyPool& keypool) override;\n     void KeepDestination(int64_t index, const OutputType& type, const CPubKey& pubkey) override;\n     void ReturnDestination(int64_t index, bool internal, const CPubKey& pubkey) override;\n "
      },
      {
        "sha": "2bdec16f289708ea7b3bdb3f3f789c4be7f771b4",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba41aa4969169cd73d6b4f57444ed7d8d875de10/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba41aa4969169cd73d6b4f57444ed7d8d875de10/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=ba41aa4969169cd73d6b4f57444ed7d8d875de10",
        "patch": "@@ -3302,14 +3302,13 @@ bool ReserveDestination::GetReservedDestination(CTxDestination& dest, bool inter\n     if (nIndex == -1)\n     {\n         CKeyPool keypool;\n-        if (!m_spk_man->GetReservedDestination(type, internal, nIndex, keypool)) {\n+        if (!m_spk_man->GetReservedDestination(type, internal, address, nIndex, keypool)) {\n             return false;\n         }\n         vchPubKey = keypool.vchPubKey;\n         fInternal = keypool.fInternal;\n     }\n     assert(vchPubKey.IsValid());\n-    address = GetDestinationForKey(vchPubKey, type);\n     dest = address;\n     return true;\n }\n@@ -3318,7 +3317,6 @@ void ReserveDestination::KeepDestination()\n {\n     if (nIndex != -1) {\n         m_spk_man->KeepDestination(nIndex, type, vchPubKey);\n-        m_spk_man->LearnRelatedScripts(vchPubKey, type);\n     }\n     nIndex = -1;\n     vchPubKey = CPubKey();"
      },
      {
        "sha": "f6cbe6f6de7937a207465647bfbbd091a7b11e50",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba41aa4969169cd73d6b4f57444ed7d8d875de10/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba41aa4969169cd73d6b4f57444ed7d8d875de10/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=ba41aa4969169cd73d6b4f57444ed7d8d875de10",
        "patch": "@@ -141,7 +141,8 @@ class ReserveDestination\n protected:\n     //! The wallet to reserve from\n     CWallet* const pwallet;\n-    LegacyScriptPubKeyMan* m_spk_man{nullptr};\n+    //! The ScriptPubKeyMan to reserve from. Based on type when GetReservedDestination is called\n+    ScriptPubKeyMan* m_spk_man{nullptr};\n     OutputType const type;\n     //! The index of the address's key in the keypool\n     int64_t nIndex{-1};"
      }
    ]
  },
  {
    "sha": "386a994b853bc5b3a2ed0d812673465b8ffa4849",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozODZhOTk0Yjg1M2JjNWIzYTJlZDBkODEyNjczNDY1YjhmZmE0ODQ5",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-10-07T18:11:34Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-12-02T16:57:46Z"
      },
      "message": "Key pool: Change ReturnDestination interface to take address instead of key\n\nIn order for ScriptPubKeyMan to be generic and work with future\nScriptPubKeyMans, ScriptPubKeyMan::ReturnDestination is changed to\ntake a CTxDestination instead of a CPubKey. Since LegacyScriptPubKeyMan\nstill deals with keys internally, a new map m_reserved_key_to_index is\nadded in order to track the keypool indexes that have been reserved.\n\nThe CPubKey argument of KeepDestination is also  removed so that it is\nmore generic. Instead of taking a CPubKey or a CTxDestination, we just use\nthe nIndex given to find the pubkey.",
      "tree": {
        "sha": "0589f2d5ad8d22fe0d089f2de67bf62b842378cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0589f2d5ad8d22fe0d089f2de67bf62b842378cb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/386a994b853bc5b3a2ed0d812673465b8ffa4849",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/386a994b853bc5b3a2ed0d812673465b8ffa4849",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/386a994b853bc5b3a2ed0d812673465b8ffa4849",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/386a994b853bc5b3a2ed0d812673465b8ffa4849/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ba41aa4969169cd73d6b4f57444ed7d8d875de10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba41aa4969169cd73d6b4f57444ed7d8d875de10",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ba41aa4969169cd73d6b4f57444ed7d8d875de10"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 20,
      "deletions": 16
    },
    "files": [
      {
        "sha": "e5b45a81a1b2a4954f51ebf70beef6088baaf3b4",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 4,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/386a994b853bc5b3a2ed0d812673465b8ffa4849/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/386a994b853bc5b3a2ed0d812673465b8ffa4849/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=386a994b853bc5b3a2ed0d812673465b8ffa4849",
        "patch": "@@ -1087,16 +1087,20 @@ void LegacyScriptPubKeyMan::AddKeypoolPubkeyWithDB(const CPubKey& pubkey, const\n     m_pool_key_to_index[pubkey.GetID()] = index;\n }\n \n-void LegacyScriptPubKeyMan::KeepDestination(int64_t nIndex, const OutputType& type, const CPubKey& pubkey)\n+void LegacyScriptPubKeyMan::KeepDestination(int64_t nIndex, const OutputType& type)\n {\n     // Remove from key pool\n     WalletBatch batch(m_storage.GetDatabase());\n     batch.ErasePool(nIndex);\n+    CPubKey pubkey;\n+    bool have_pk = GetPubKey(m_index_to_reserved_key.at(nIndex), pubkey);\n+    assert(have_pk);\n     LearnRelatedScripts(pubkey, type);\n+    m_index_to_reserved_key.erase(nIndex);\n     WalletLogPrintf(\"keypool keep %d\\n\", nIndex);\n }\n \n-void LegacyScriptPubKeyMan::ReturnDestination(int64_t nIndex, bool fInternal, const CPubKey& pubkey)\n+void LegacyScriptPubKeyMan::ReturnDestination(int64_t nIndex, bool fInternal, const CTxDestination&)\n {\n     // Return to key pool\n     {\n@@ -1108,7 +1112,9 @@ void LegacyScriptPubKeyMan::ReturnDestination(int64_t nIndex, bool fInternal, co\n         } else {\n             setExternalKeyPool.insert(nIndex);\n         }\n-        m_pool_key_to_index[pubkey.GetID()] = nIndex;\n+        CKeyID& pubkey_id = m_index_to_reserved_key.at(nIndex);\n+        m_pool_key_to_index[pubkey_id] = nIndex;\n+        m_index_to_reserved_key.erase(nIndex);\n         NotifyCanGetAddressesChanged();\n     }\n     WalletLogPrintf(\"keypool return %d\\n\", nIndex);\n@@ -1130,7 +1136,7 @@ bool LegacyScriptPubKeyMan::GetKeyFromPool(CPubKey& result, const OutputType typ\n             result = GenerateNewKey(batch, internal);\n             return true;\n         }\n-        KeepDestination(nIndex, type, keypool.vchPubKey);\n+        KeepDestination(nIndex, type);\n         result = keypool.vchPubKey;\n     }\n     return true;\n@@ -1175,6 +1181,8 @@ bool LegacyScriptPubKeyMan::ReserveKeyFromKeyPool(int64_t& nIndex, CKeyPool& key\n             throw std::runtime_error(std::string(__func__) + \": keypool entry invalid\");\n         }\n \n+        assert(m_index_to_reserved_key.count(nIndex) == 0);\n+        m_index_to_reserved_key[nIndex] = keypool.vchPubKey.GetID();\n         m_pool_key_to_index.erase(keypool.vchPubKey.GetID());\n         WalletLogPrintf(\"keypool reserve %d\\n\", nIndex);\n     }"
      },
      {
        "sha": "6ed9a4787ac88376cf49d896348c5a4060c30a5a",
        "filename": "src/wallet/scriptpubkeyman.h",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/386a994b853bc5b3a2ed0d812673465b8ffa4849/src/wallet/scriptpubkeyman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/386a994b853bc5b3a2ed0d812673465b8ffa4849/src/wallet/scriptpubkeyman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.h?ref=386a994b853bc5b3a2ed0d812673465b8ffa4849",
        "patch": "@@ -151,8 +151,8 @@ class ScriptPubKeyMan\n     virtual isminetype IsMine(const CScript& script) const { return ISMINE_NO; }\n \n     virtual bool GetReservedDestination(const OutputType type, bool internal, CTxDestination& address, int64_t& index, CKeyPool& keypool) { return false; }\n-    virtual void KeepDestination(int64_t index, const OutputType& type, const CPubKey& pubkey) {}\n-    virtual void ReturnDestination(int64_t index, bool internal, const CPubKey& pubkey) {}\n+    virtual void KeepDestination(int64_t index, const OutputType& type) {}\n+    virtual void ReturnDestination(int64_t index, bool internal, const CTxDestination& addr) {}\n \n     virtual bool TopUp(unsigned int size = 0) { return false; }\n \n@@ -246,6 +246,8 @@ class LegacyScriptPubKeyMan : public ScriptPubKeyMan, public FillableSigningProv\n     std::set<int64_t> set_pre_split_keypool GUARDED_BY(cs_wallet);\n     int64_t m_max_keypool_index GUARDED_BY(cs_wallet) = 0;\n     std::map<CKeyID, int64_t> m_pool_key_to_index;\n+    // Tracks keypool indexes to CKeyIDs of keys that have been taken out of the keypool but may be returned to it\n+    std::map<int64_t, CKeyID> m_index_to_reserved_key;\n \n     //! Fetches a key from the keypool\n     bool GetKeyFromPool(CPubKey &key, const OutputType type, bool internal = false);\n@@ -274,8 +276,8 @@ class LegacyScriptPubKeyMan : public ScriptPubKeyMan, public FillableSigningProv\n     bool EncryptKeys(CKeyingMaterial& vMasterKeyIn);\n \n     bool GetReservedDestination(const OutputType type, bool internal, CTxDestination& address, int64_t& index, CKeyPool& keypool) override;\n-    void KeepDestination(int64_t index, const OutputType& type, const CPubKey& pubkey) override;\n-    void ReturnDestination(int64_t index, bool internal, const CPubKey& pubkey) override;\n+    void KeepDestination(int64_t index, const OutputType& type) override;\n+    void ReturnDestination(int64_t index, bool internal, const CTxDestination&) override;\n \n     bool TopUp(unsigned int size = 0) override;\n "
      },
      {
        "sha": "e50dd1c127c915aa70fc84e557a3102fea850541",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 6,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/386a994b853bc5b3a2ed0d812673465b8ffa4849/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/386a994b853bc5b3a2ed0d812673465b8ffa4849/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=386a994b853bc5b3a2ed0d812673465b8ffa4849",
        "patch": "@@ -3305,31 +3305,27 @@ bool ReserveDestination::GetReservedDestination(CTxDestination& dest, bool inter\n         if (!m_spk_man->GetReservedDestination(type, internal, address, nIndex, keypool)) {\n             return false;\n         }\n-        vchPubKey = keypool.vchPubKey;\n         fInternal = keypool.fInternal;\n     }\n-    assert(vchPubKey.IsValid());\n     dest = address;\n     return true;\n }\n \n void ReserveDestination::KeepDestination()\n {\n     if (nIndex != -1) {\n-        m_spk_man->KeepDestination(nIndex, type, vchPubKey);\n+        m_spk_man->KeepDestination(nIndex, type);\n     }\n     nIndex = -1;\n-    vchPubKey = CPubKey();\n     address = CNoDestination();\n }\n \n void ReserveDestination::ReturnDestination()\n {\n     if (nIndex != -1) {\n-        m_spk_man->ReturnDestination(nIndex, fInternal, vchPubKey);\n+        m_spk_man->ReturnDestination(nIndex, fInternal, address);\n     }\n     nIndex = -1;\n-    vchPubKey = CPubKey();\n     address = CNoDestination();\n }\n "
      },
      {
        "sha": "db5788ebb5d19a083c9310159dba48bd07ad090b",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/386a994b853bc5b3a2ed0d812673465b8ffa4849/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/386a994b853bc5b3a2ed0d812673465b8ffa4849/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=386a994b853bc5b3a2ed0d812673465b8ffa4849",
        "patch": "@@ -146,8 +146,6 @@ class ReserveDestination\n     OutputType const type;\n     //! The index of the address's key in the keypool\n     int64_t nIndex{-1};\n-    //! The public key for the address\n-    CPubKey vchPubKey;\n     //! The destination\n     CTxDestination address;\n     //! Whether this is from the internal (change output) keypool"
      }
    ]
  },
  {
    "sha": "886f1731bec4393dd342403ac34069a3a4f95eea",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ODZmMTczMWJlYzQzOTNkZDM0MjQwM2FjMzQwNjlhM2E0Zjk1ZWVh",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-10-07T18:11:34Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-12-02T16:57:46Z"
      },
      "message": "Key pool: Fix omitted pre-split count in GetKeyPoolSize\n\nThis is a bugfix: https://github.com/bitcoin/bitcoin/pull/16341#discussion_r330669214",
      "tree": {
        "sha": "c0924d07f93efe422861f94f784015aa6e4c4265",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c0924d07f93efe422861f94f784015aa6e4c4265"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/886f1731bec4393dd342403ac34069a3a4f95eea",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/886f1731bec4393dd342403ac34069a3a4f95eea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/886f1731bec4393dd342403ac34069a3a4f95eea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/886f1731bec4393dd342403ac34069a3a4f95eea/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "386a994b853bc5b3a2ed0d812673465b8ffa4849",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/386a994b853bc5b3a2ed0d812673465b8ffa4849",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/386a994b853bc5b3a2ed0d812673465b8ffa4849"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "2b9e8fbf2aa7e2e2c0162e19dabae30e670d3294",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/886f1731bec4393dd342403ac34069a3a4f95eea/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/886f1731bec4393dd342403ac34069a3a4f95eea/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=886f1731bec4393dd342403ac34069a3a4f95eea",
        "patch": "@@ -455,7 +455,7 @@ size_t LegacyScriptPubKeyMan::KeypoolCountExternalKeys()\n unsigned int LegacyScriptPubKeyMan::GetKeyPoolSize() const\n {\n     AssertLockHeld(cs_wallet);\n-    return setInternalKeyPool.size() + setExternalKeyPool.size();\n+    return setInternalKeyPool.size() + setExternalKeyPool.size() + set_pre_split_keypool.size();\n }\n \n int64_t LegacyScriptPubKeyMan::GetTimeFirstKey() const"
      }
    ]
  }
]