[
  {
    "sha": "bbbbb3f8850907d413db4715c10ef6df055234f6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYmJiYjNmODg1MDkwN2Q0MTNkYjQ3MTVjMTBlZjZkZjA1NTIzNGY2",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-10-22T03:36:23Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-11-05T16:13:32Z"
      },
      "message": "qa: Add test to ensure node can generate all help texts at runtime",
      "tree": {
        "sha": "3c95089219fa75d7a4fe50890fd2dccbf863e53b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3c95089219fa75d7a4fe50890fd2dccbf863e53b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bbbbb3f8850907d413db4715c10ef6df055234f6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJb4GwsAAoJEM4rdWl+aaVIPWcL/iok5B2Mxc69xlGM0gg45IJc\nLMZBLjgZ+qpEojnCl3cwCjoARpNj5MAIXxCU1iwQQmdCMjdfFS/ZL5ddj7IV5Z45\nMasUOf8jA5fzlzDoBW/bGepaZPRIeqWNn5gKxxDDLR83oTX4X5D/gm0txIaKDXow\n2SRfgtf9mwREt7GlNQYG7RrZlMuV1+i9ULiIyYiTdvrJBM7lJ1WY2/3+MDdcJAZm\nUiR20jsIOFBqmTmAV3S0UD0BKJw3zL0ZkqbETO4fNxPgYOmQ1wvFqbK25MI5/zWs\nqAxIjVSmi1D8cks3apqy3vufc2yNpnuSdcJ8+mIVwvnIC96SbFguKn7X1Ahnb1CJ\noCId2ktEw5jscH5MJpDwezRTbaD1EW4Phlr8GQt2jQLb7re36O4THijL22TjgLiH\n0aPZXle/rhIsBvMaNBCB9EAO/SOr0dyjUkVjyrdOn2evHJTOe4BoJwjVcubM9YGL\n6mLzLkDCvoTRUY/6gegL8/t8VvWhUGglJTpUMXj6cQ==\n=DXh2\n-----END PGP SIGNATURE-----",
        "payload": "tree 3c95089219fa75d7a4fe50890fd2dccbf863e53b\nparent 73a8408bc3e4806fc102268a78bf52bd3f03c64b\nauthor MarcoFalke <falke.marco@gmail.com> 1540179383 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1541434412 -0500\n\nqa: Add test to ensure node can generate all help texts at runtime\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbbbb3f8850907d413db4715c10ef6df055234f6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bbbbb3f8850907d413db4715c10ef6df055234f6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbbbb3f8850907d413db4715c10ef6df055234f6/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "73a8408bc3e4806fc102268a78bf52bd3f03c64b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73a8408bc3e4806fc102268a78bf52bd3f03c64b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/73a8408bc3e4806fc102268a78bf52bd3f03c64b"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 15,
      "deletions": 0
    },
    "files": [
      {
        "sha": "78d6e78aed21a6289a15a6bace6ec9a8f5d559b4",
        "filename": "test/functional/rpc_help.py",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bbbbb3f8850907d413db4715c10ef6df055234f6/test/functional/rpc_help.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bbbbb3f8850907d413db4715c10ef6df055234f6/test/functional/rpc_help.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_help.py?ref=bbbbb3f8850907d413db4715c10ef6df055234f6",
        "patch": "@@ -7,12 +7,18 @@\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal, assert_raises_rpc_error\n \n+import os\n+\n \n class HelpRpcTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n     def run_test(self):\n+        self.test_categories()\n+        self.dump_help()\n+\n+    def test_categories(self):\n         node = self.nodes[0]\n \n         # wrong argument count\n@@ -37,6 +43,15 @@ def run_test(self):\n \n         assert_equal(titles, components)\n \n+    def dump_help(self):\n+        dump_dir = os.path.join(self.options.tmpdir, 'rpc_help_dump')\n+        os.mkdir(dump_dir)\n+        calls = [line.split(' ', 1)[0] for line in self.nodes[0].help().splitlines() if line and not line.startswith('==')]\n+        for call in calls:\n+            with open(os.path.join(dump_dir, call), 'w', encoding='utf-8') as f:\n+                # Make sure the node can generate the help at runtime without crashing\n+                f.write(self.nodes[0].help(call))\n+\n \n if __name__ == '__main__':\n     HelpRpcTest().main()"
      }
    ]
  }
]