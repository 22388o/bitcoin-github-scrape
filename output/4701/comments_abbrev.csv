gmaxwell,2014-08-14T22:06:57Z,Very cool. I went to go make some random suggestions but found you implemented them already. I'll give this more review soon.\n,https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-52251508,52251508,
gmaxwell,2014-08-24T00:30:01Z,"luke: wrt pruning depth, probably what would be good eventually is a size target and then the software can make use of the size target usefully... but I don't know that it makes sense at this point since we don't yet have a good way to make use of a sparse blockchain. \n",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-53172016,53172016,
luke-jr,2014-08-24T01:00:24Z,We have to use it for reorgs. Setting a default prune depth is probably dangerous enough to becoming an (inconsistent) consensus rule already.\n,https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-53172814,53172814,
gmaxwell,2014-08-24T01:12:05Z,"By sparse I mean containing any blocks other than the last N. If you'll note, the number 288 above comes from my comments on the prior PR as a minimum number I'd consider acceptable as an absolute minimum for the purpose of reorgs.\n",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-53173114,53173114,
sipa,2014-08-26T23:39:25Z,"When a block is being disconnected due to a reorg, and its data cannot be loaded from disk, there is currently just a state.Abort with ""Failed to read block"". Exceedingly unlikely, but we need to be able to deal with such situations. I wonder whether crashing with some extra help/debug output may be enough, or whether we need to retry downloading the missing data...\n\nEDIT: Downloading the missin",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-53508821,53508821,
gmaxwell,2014-08-26T23:49:47Z,"I'd like to re-download, and thought that would be interesting to explore with headers first in place— but the problem is that if the undo data is deleted we cannot usefully redownload.\n\nEdit: ah, you noticed that. Yea, well— we could have different retention policies for undo date. I considered that future work. If ever we make the undo data normative we could just store hashes of it and fetch ",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-53509539,53509539,
sipa,2014-08-26T23:53:43Z,"Of course, we could for example delete blocks data at depth N, but only delete undo data at depth N_3 or so (undo data is 7-10 times smaller than block data). Of course, that just moves the problem further to what to do when an N_3 deep reorg is encountered.\n",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-53509821,53509821,
sipa,2014-08-27T00:49:31Z, Untested ACK. I guess I'm fine with resolving the missing-block/undo problem for reorgs later.\n,https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-53513673,53513673,
sipa,2014-09-12T17:38:49Z,Needs rebase.\n,https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-55436314,55436314,
rdponticelli,2014-09-17T17:46:32Z,"Added configure options, refactored a little to improve readability, rebased and fixed some small formatting nits remaining.\n",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-55932295,55932295,
gmaxwell,2014-09-19T16:13:09Z,"Can someone help me understand the usecase for running pruned without autopruning?  My original expectation was that you'd just tell it to prune and a disk usage limit,  and it would do the right thing(tm) for the network within that limit (subject to the constraint that it won't prune so much that its likely to get stuck).\n",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-56198847,56198847,
sipa,2014-09-19T17:26:10Z,"Agree with @gmaxwell. It seems an artefact of how it got implemented to see ""ability to run without all data"" and ""automatically remove data under some policy"" as separate. Once you delete a single block file, you're already unable to function as a full node (in the traditional NODE_NETWORK sense).\n",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-56207906,56207906,
ghost,2014-09-22T17:01:52Z,I have been able to successfully sync a non-listening x86_64 node over the network using this patch using very little disk space and the option `prune=-50000`. Node has been stable for 4 days without any problems so far. Was able to do unusual operations like reducing the number of retained blocks during the initial synchronization with no apparent problems. \n\n```\nAutopruning active.\nAutoprune,https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-56404751,56404751,
laanwj,2014-09-23T09:27:03Z,@bitcoinpulltesterhuman thanks for testing\n,https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-56494695,56494695,
BitcoinPullTester,2014-09-26T18:41:40Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4701_8893254172c8efd807418218dea7a7a4022d3f26/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-57003437,57003437,
sipa,2014-09-30T22:05:25Z,"I've submitted a patch (#4988) that keeps data about all block files in\nmemory, which should simplify making a version of this that functions\nas gmaxwell's suggestion (have a disk usage limit instead of a block number\nlimit).\n",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-57390617,57390617,
ghost,2014-10-11T05:05:26Z,"@rdponticelli I'm not convinced 98daccf is quite right. @gmaxwell's suggestion that the limit should be in megabytes of blocks is sound, but defining them as a negative of the amount of disk space is not the right direction to go. Depending how I use my disks I could end up ridiculously overpruning my blocks, which requires an unfriendly resync to rectify. I believe it would be a lot more useful f",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-58738414,58738414,
laanwj,2014-10-11T10:17:41Z,"I agree with @BitcoinPullTesterHuman here. Setting a fixed quota on bitcoind's disk usage would be most useful. Making it about keeping a certain amount of disk space free would make it depend on other factors, and potentially interact very badly with other programs that reason in the same way.\n",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-58744993,58744993,
rdponticelli,2014-10-11T21:07:31Z,Better now?\n,https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-58764562,58764562,
ghost,2014-10-12T00:47:00Z,Seems to do what it says on the tin. \n\n```\n...\nUpdateTip: new best=000000000000000020cb9c249f38d295031483debe1966608859a8c3576f0be9  height=314903  log2_work=80.125233  tx=44239173  date=2014-08-10 12:50:42 progress=0.800166  cache=6452  \nUpdateTip: new best=000000000000000036e888b57e08c72d2d3c57869e24b759d8f728f87002ee41  height=314904  log2_work=80.125326  tx=44239192  date=2014-08-10 12:49,https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-58769739,58769739,
rdponticelli,2014-10-18T18:25:38Z,"Rebased. I'm also trying to improve the commits history to make the changes less invasive, and the whole thing more review-able. But meanwhile, this is at least working .\n",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-59624462,59624462,
Michagogo,2014-10-30T10:00:58Z,"Re: txindex, what does txindex track exactly? List of transaction hashes in each block? In that case, how about just saying ""if a pruned transaction is requested, pull that block from a peer to find it""?\n",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-61068417,61068417,
sipa,2014-11-04T15:13:37Z,@Michagogo easier said than done.\n,https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-61654099,61654099,
rdponticelli,2014-11-05T22:09:13Z,"Some commits were pushed addressing the feedback. I'll rebase and squash if there aren't further comments, not to change commits already reviewed.\n",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-61890408,61890408,
rdponticelli,2014-11-07T18:59:58Z,Rebased and squashed.\n,https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-62194438,62194438,
sipa,2014-11-10T17:44:33Z,"Just testing with -prune=1000, and I notice that it prefers deleting block files over undo files. That's suboptimal for two reasons:\n- undo data is useless without the corresponding block data (unless we have a mechanism in place to redownload missing blocks, which is safe, while undo data can't be reconstructed).\n- over time, a larger and larger percentage of the selected disk space will be was",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-62423142,62423142,
laanwj,2014-11-17T16:41:33Z,"I'm going to bump this to 0.11 - probably an unpopular decision, but the 0.10 split-off is coming very close IMO this hasn't received enough testing yet. I would like to hear more reports from some people that have actually used this first. I've tried to solicit this on twitter and other places, without much success.\n",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-63333513,63333513,
gavinandresen,2014-11-17T16:49:10Z,"This could really use a written test plan (e.g. test with existing, populated datadir, test with fresh sync, test what happens if prune size is increased or decreased, test on windows, etc). See https://github.com/bitcoin/QA/\n\nOnce a test plan is written, I'd be happy to pay (out of core dev grant funds) testers 50,000 bits to work through the tests.\n",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-63334895,63334895,
sipa,2014-11-17T17:17:36Z,"Just tested with a clean datadir, with -prune=500, and seems to work as expected (block and undo files are added and deleted in sync, remaining under 500 MB.\n\nStarting afterwards without -prune (and before full sync is done) results in a:\nError checking required block files. There must be missing or unreadable data.\n\nDo you want to rebuild the block database now?\n",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-63339637,63339637,
rdponticelli,2014-11-17T17:45:30Z,Yes. Should I allow it to run on a pruned state even if the -prune switch isn't specified? I thought such behavior has been discouraged on previous comments...\n,https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-63344091,63344091,
sipa,2014-11-17T17:56:31Z,Not a criticism; just a test report.\n,https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-63345810,63345810,
TheBlueMatt,2014-11-18T00:52:31Z,"I was trying to test this with a new block-tester, but ran into #5267\n(and some issues here, as mentioned), before I could get very far :(.\n\nOn 11/17/14 16:49, Gavin Andresen wrote:\n\n> This could really use a written test plan (e.g. test with existing,\n> populated datadir, test with fresh sync, test what happens if prune size\n> is increased or decreased, test on windows, etc). See\n> https:",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-63404964,63404964,
sipa,2014-11-18T10:00:14Z,"If a pruned block is being connected or disconnected, the node will just abort with ""Failed to read block"". Is that intentional? With a guaranteed 288-block window that is retained, I guess it's acceptable, but we need IMHO at least some documentation mentioning how to recover from such a state.\n",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-63446763,63446763,
instagibbs,2014-11-24T03:13:41Z,"Ran my own tests, same setup to sipa. (500 MB)\n\nEverything worked as expected until I tried to run a full node again ""-prune=0"", and was greeted with the missing data message. Responding with ""yes"" gives me:\n\n2014-11-24 03:06:39 : Error checking required block files. There must be missing or unreadable data.\n\nDo you want to rebuild the block database now?\n2014-11-24 03:06:39 Aborted block d",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-64148395,64148395,
rebroad,2014-11-24T06:07:07Z,Does this pull cause random blocks to be deleted or the oldest blocks?\nHopefully the former!\n,https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-64155020,64155020,
gmaxwell,2014-11-24T06:42:35Z,"Not hopefully the former. Random is quite pessimal, and in the current setup of the system the best behavior (that which maximizes utility given limited space) is to remove the oldest first.  The behavior will change (e.g. to determinstically random segments) when there are facilities for actually make use of different behavior.\n",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-64156467,64156467,
rdponticelli,2014-11-26T18:41:14Z,@instagibbs Are you sure you answered yes to the question on bitcoin-qt? Working fine here. The issue could be with bitcoind which doesn't have a way of receiving the input. You need a -reindex there to go back to full node.\n,https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-64691921,64691921,
instagibbs,2014-11-26T18:56:43Z,@rdponticelli that would explain it. I was running bitcoind only. I guess as a bitcoind user I would have expected a message telling me to reindex. But that might be out of scope for this. Thanks. \n,https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-64694141,64694141,
rebroad,2014-11-27T01:06:15Z,"@gmaxwell surely if everyone pruned the oldest blocks, this would be like sharing a video on bittorrent where no-one has the first part of the video...\n",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-64732594,64732594,
gmaxwell,2014-11-27T01:24:34Z,"@rebroad sure, and there is no risk of that currently (this disables node network and the wallet). Not deleting old blocks wouldn't help here, because without extensions to the p2p protocol sparse block possession is not useful, any missing blocks makes the node no longer node-network.\n\nPlease go read the old discussion about this, back to pieter's first pruning posts on bitcoin development.\n",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-64734219,64734219,
laanwj,2014-11-27T08:47:21Z,"This is different from a video on bittorrent. The demand is not uniform over the block chain. The recent blocks are requested most frequently, the early blocks are only used when a new node wants to catch up which happens less often. So it makes sense to have nodes that can serve recent history only. Of course, that will break if everyone does it, but let's not wield the categorical imperative her",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-64760823,64760823,
luke-jr,2014-12-24T10:11:34Z,I merged this into 0.10.0rc1 and built binaries so others can help test: http://luke.dashjr.org/programs/bitcoin/files/bitcoind/misc/0.10.x/0.10.0rc1.autoprune/\n,https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-68042235,68042235,
Michagogo,2014-12-24T10:13:28Z,"Why are they named 0.10.0rc2?\n\nOn Wed, Dec 24, 2014 at 12:12 PM, Luke-Jr notifications@github.com wrote:\n\n> I merged this into 0.10.0rc1 and built binaries so others can help test:\n> http://luke.dashjr.org/programs/bitcoin/files/bitcoind/misc/0.10.x/0.10.0rc1.autoprune/\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-6",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-68042349,68042349,
luke-jr,2014-12-24T10:13:44Z,"Typo, will rename.\n",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-68042377,68042377,
TheBlueMatt,2014-12-24T16:27:35Z,"Has anyone tried this with a low prune limit and #5422? Last I checked it crashed and burned pretty quick. Also, anything that lets you make your node unable to reorg back at least a week is entirely unacceptable as far as I'm concerned.\n",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-68062090,68062090,
luke-jr,2014-12-24T21:09:46Z,"I would expect handling _any_ reorg to be a requirement, even if the node has to begin reindexing from scratch...\n",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-68074380,68074380,
gmaxwell,2014-12-24T21:13:19Z,"I was willing to look the other way for 0.10, but since we missed it and the headers-first work should have made it easier. I do believe that we should correctly respond to a too-long reorg by going into a rebuild.\n",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-68074532,68074532,
welshjf,2015-01-02T05:33:40Z,"I volunteer to help testing, given instructions. I've been running a full node for a while but I'm not familiar with the code. Linux or Win7 x64.\n",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-68509648,68509648,
laanwj,2015-01-06T19:39:21Z,"I think it makes sense to move this forward soon by merging this in some form, as long as there are no regressions, it can be improved later.\nOr alternatively, @rdponticelli are there preparatory changes that can be merged already to make keeping this rebased easier?\n",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-68920680,68920680,
rdponticelli,2015-01-10T14:37:26Z,@laanwj: #4515 would certainly help. I'll rebase this one soon.\n,https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-69457908,69457908,
rdponticelli,2015-01-12T19:03:38Z,Rebased.\n,https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-69625257,69625257,
shivaenigma,2015-01-29T12:47:21Z,Testing this from https://github.com/luke-jr/bitcoin/tree/0.10.0rc3.autoprune \nJust curious on what is the desired behaviour of -reindex when run on already pruned blocks ?\n,https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-72018451,72018451,
Michagogo,2015-01-29T13:48:00Z,"I would assume reindexing would force it to redownload all the blocks from\nscratch.\n\nOn Thursday, January 29, 2015, shivaenigma notifications@github.com wrote:\n\n> Testing this from\n> https://github.com/luke-jr/bitcoin/tree/0.10.0rc3.autoprune\n> Just curious on what is the desired behaviour of -reindex when run on\n> already pruned blocks ?\n> \n> —\n> Reply to this email directly or view it",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-72026107,72026107,
mrbandrews,2015-01-29T19:59:36Z,"Hi.  I've been testing this also (building from source) and I think the latest commit may have re-introduced the issue of re-opening a block and undo file for each block in the active chain.  Thus, on testnet (about 320k blocks) each call to CheckBlockFiles results in 640k calls to the file system.  I know that @rdponticelli has a separate PR (#4515) which appears to still have the code which shou",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-72093360,72093360,
ghost,2015-02-01T19:35:52Z,This has been tagged as v0.11. What time frame is that indicative of?\n,https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-72380007,72380007,
gmaxwell,2015-02-01T20:46:35Z,"@21E14  presumably and hopefully in the next couple months.  Right now much attention is focused on getting 0.10 out (as it should be), after that you should expect to see more attention on getting this merged from the rest of the contributors.\n",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-72383360,72383360,
laanwj,2015-02-01T20:56:59Z,"@21E14 July 2015 is the time frame for 0.11. The tag is no guarantee that it will make it into that release though, but just a reminder. If it isn't ready to merge well before 0.11's release date it will be bumped to 0.12.\n\nYou can help by testing and reviewing the code.\n",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-72383774,72383774,
ghost,2015-02-02T00:29:00Z,"@gmaxwell @laanwj I'm assuming a few minor releases in-between?\n\nThis PR is looking pretty good so far. Running the daemon though, just for kicks, with the prune option set to less than 300 MiB results in the following awkward message:\n\n---\n\nAppInit2 : parameter interaction: -prune -> setting -disablewallet=1\nAutoprune configured below the minimum of 300MiB. Setting at the maximum possible ",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-72393510,72393510,
shivaenigma,2015-02-04T17:40:47Z,Did more testing from https://github.com/luke-jr/bitcoin/tree/0.10.0rc3.autoprune \nTested using -prune=300 and blocks are getting deleted \n\nBut sometimes size of .bitcoin/blocks is more than much more than 300\n`\n2015-02-04 17:34:59 Data for blocks from 1 to 184525 has been pruned\n2015-02-04 17:34:59 Undo data for blocks from 1 to 184525 has been pruned`\ndu -sh ~/.bitcoin/blocks/ is 496MB\n\,https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-72901059,72901059,
Michagogo,2015-02-04T18:29:49Z,"@shivaenigma What's the size of the index/ directory? Perhaps that's the rest. I don't know if the index shrinks with a pruned node. A couple hundred megabytes is insignificant compared to 30+ GB, but indeed, with pruned nodes like this that does become a factor. And at the end, do you mean switching to non-pruned mode? In that case, yes, of course you're missing data -- you've just deleted most o",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-72910211,72910211,
shivaenigma,2015-02-04T18:53:59Z,"@Michagogo \nsize of my blocks/index/ 34MB.  I think the parameter -pruned=300MB is misleading, even if after pruning the size end of 496MB . How does the error scale, so if I set 2GB will it take 2.1GB or 3GB\n\nso I guess its checking all the blocks at startup on non pruned mode and throws an error. I think there should be way to disable this check. Because now I can never switch from pruned mod",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-72914789,72914789,
Michagogo,2015-02-04T19:06:14Z,"Uh, what? By definition, non-pruned means that you have the entire\nblockchain. So yes, you do need to redownload it. It would be nice, though,\nif it were smart enough to make the switch gracefully and just fill in the\nhistory, with the headers-first mechanism. If you mean you don't want to\nprune _more_, you can just set the threshold to something high (100000000\nor whatever) and you'll be cov",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-72917081,72917081,
shivaenigma,2015-02-05T06:07:52Z,"> If you mean you don't want to prune _more_, you can just set the threshold to something high (100000000 or whatever) and you'll be covered for the foreseeable future\n\nYes this is actually what I wanted . Thanks\n",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-72999158,72999158,
sipa,2015-03-01T12:21:07Z,"Do you plan to work on this any more in the future? If not, I may try to maintain/update it.\n",https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-76594491,76594491,
laanwj,2015-03-09T08:31:16Z,Closing in favor of #5863\n,https://github.com/bitcoin/bitcoin/pull/4701#issuecomment-77815872,77815872,
sipa,2014-08-23T11:28:20Z,"Nit: ""Prune old blocks"" may be an easier explanation for the flag.\n",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r16630227,16630227,src/init.cpp
sipa,2014-08-23T11:31:04Z,I think you should disconnect such peers (for their sake) rather than just ignoring. \n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r16630232,16630232,src/main.cpp
TheBlueMatt,2014-08-23T23:00:44Z,"Actually, I might just always InitError here. Its not obvious that -pruned will disable wallet from the explanation given and it may be overly confusing.\n",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r16633181,16633181,src/init.cpp
luke-jr,2014-08-23T23:05:47Z,Should probably warn of the destructive nature of -pruned?\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r16633202,16633202,src/init.cpp
luke-jr,2014-08-23T23:08:11Z,Maybe this should be configurable? -pruned 500 to keep all blocks in the main chain at height 500+ vs -pruned -500 to keep the last 500?\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r16633209,16633209,src/main.cpp
luke-jr,2014-08-23T23:09:08Z,Why not?\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r16633217,16633217,src/init.cpp
rdponticelli,2014-08-24T20:59:03Z,"Because otherwise people can very easily shoot themselves in the foot by plugging in an old wallet which silently fails rescanning, getting in an inconsistent state.\n",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r16637955,16637955,src/init.cpp
luke-jr,2014-08-24T21:11:31Z,Could just fail if it needs a rescan...\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r16638034,16638034,src/init.cpp
rdponticelli,2014-08-24T22:05:44Z,"Yeah, but I would better leave that for another pull, when such a case has been more extensively tested.\n",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r16638252,16638252,src/init.cpp
rdponticelli,2014-08-24T22:07:01Z,A proper explanation has been added.\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r16638259,16638259,src/init.cpp
rdponticelli,2014-08-24T22:07:53Z,Added rejection and disconnection.\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r16638263,16638263,src/main.cpp
sipa,2014-08-26T14:19:55Z,Nit: no need for the intermediate variable.\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r16715734,16715734,src/main.cpp
sipa,2014-08-26T14:21:14Z,No need for the ? true : false.\nboost::filesystem::remove already returns a bool.\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r16715809,16715809,src/main.cpp
sipa,2014-08-26T14:21:20Z,Same.\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r16715816,16715816,src/main.cpp
sipa,2014-08-26T14:27:22Z,disconnecting\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r16716273,16716273,src/main.cpp
sipa,2014-08-26T14:28:14Z,mapBlkDataFileReadable[pindex->nFile] = false;\n\netc\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r16716332,16716332,src/main.cpp
sipa,2014-08-26T14:29:13Z,notfound message instead of reject?\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r16716412,16716412,src/main.cpp
rdponticelli,2014-09-02T01:56:41Z,"I'm working on something like this. The code is still messy, but I would wait for it to be ready before merging this. The default would be -pruned=0 which means do now autoprune, just allow running pruned.\n",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r16967795,16967795,src/main.cpp
Diapolo,2014-09-18T05:08:47Z,May I suggest calling this `-prune` or `-autoprune` and also rephrase the help message for this? It IMHO sounds weird to have an option in that grammar.\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r17709303,17709303,src/init.cpp
laanwj,2014-09-18T09:39:32Z,"Let's not assume that people know what you mean with ""prune"" at the beginning of the message. Also the warning should not be in the (...), and I'd just say ""re-downloading"" instead of ""a very expensive resync process"".\n\nInstead of \n\n> Run in a pruned state (default: 0 = allow running pruned but do not autoprune; <n> > 0 = automatically prune old block files up to height <n>; <n> < 0 = automati",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r17717671,17717671,src/init.cpp
rdponticelli,2014-09-18T17:24:20Z,Any suggestion about how to make this user facing text better?\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r17741477,17741477,src/init.cpp
laanwj,2014-09-19T07:10:51Z,"I'd just say ""Error checking required block files"" in both cases. I wouldn't suggest using -pruned as a way to get around errors caused by random disk corruption (for example). Someone that wants to run a pruned node will make a conscious choice to do so.\n",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r17771561,17771561,src/init.cpp
Diapolo,2014-09-19T14:29:52Z,"Much better, thanks :)! A little nit, you are missing a single space after `-prune=<n>` ;).\n\nMay I also suggest splitting the sentences of the description, like in `-debug=<category>`? That makes it (IMHO) easier to change the string in the future (translations) and better looking in the output.\n\nWhile I'm at nitting:\n`Warning: going back to full storage after pruning requires re-downloading ",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r17787611,17787611,src/init.cpp
Diapolo,2014-09-19T14:39:53Z,This should be moved to parameter interactions in `Step 2: parameter interactions` in init.cpp?\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r17788137,17788137,src/init.cpp
Diapolo,2014-09-19T14:42:02Z,"Wouldn't it be possible to just use `GetArg(""-prune"", 0);` to determine if pruned mode is active? If != 0 it's active and you've got `<n>`.\n",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r17788254,17788254,src/init.cpp
Diapolo,2014-09-19T14:45:35Z,"I fear that this message is too generic? At least you are using 2 different messages for failing calls to `!CheckAndPruneBlockFiles()`.\n\nEdit: This is still true, see below.\n",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r17788458,17788458,src/init.cpp
Diapolo,2014-09-19T14:50:06Z,"Perhaps use `GetBlockPosFilename(pos, ""blk"")` also for the log message? You could perhaps also merge these 2 functions into one by just passing a flag for undo or normal block file, as most code is a duplicate.\n",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r17788716,17788716,src/main.cpp
Diapolo,2014-09-19T14:51:36Z,Nit: `.` seems unneeded.\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r17788806,17788806,src/main.cpp
rdponticelli,2014-09-19T16:02:39Z,That's right were it is? :P\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r17793196,17793196,src/init.cpp
rdponticelli,2014-09-19T16:07:11Z,But that way you lose the possibility or running pruned without autopruning.\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r17793453,17793453,src/init.cpp
Diapolo,2014-09-26T06:49:18Z,"You might change this to (so we don't need to rework log strings when function names change in the future):\n`LogPrintf(""%s: parameter interaction: -prune set -> setting -disablewallet=1\n"", __func__);`\n",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r18075789,18075789,src/init.cpp
Diapolo,2014-09-26T06:50:41Z,Talking about that message here ;).\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r18075818,18075818,src/main.cpp
Diapolo,2014-09-26T06:51:30Z,@sipa Should such a thing be logged so that it's clear we are not a full node anymore?\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r18075835,18075835,src/init.cpp
gmaxwell,2014-09-26T06:57:16Z,"It is a full node— its validation and security model is the same; its not node-network though. Service bits are show in the rpc info output, no harm in logging something. Just please don't say that it's not a full node.\n",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r18075968,18075968,src/init.cpp
Diapolo,2014-09-26T06:58:41Z,"I'm sorry, I didn't know the term full node is still correct here!\n",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r18076009,18076009,src/init.cpp
rdponticelli,2014-09-26T16:21:37Z,"Any suggestion?\n\nAnyway, take into account that in case of failure, the function itself throws a more specific log...\n",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r18098364,18098364,src/main.cpp
TheBlueMatt,2014-10-12T01:41:01Z,For sanity you may want to actually add bool operator() to CAutoFIle (the only bool operator declared there is bool operator!()).\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r18745256,18745256,src/main.cpp
rebroad,2014-10-12T08:53:09Z,What's the point in running this if not as a wallet?\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r18746514,18746514,src/init.cpp
,2014-10-12T09:36:28Z,"Being autopruned is incompatible with a wallet, really. If you need to rescan or load a wallet that's older than the blocks you have on disk, you're going to have to download them and throw them out all over again. As I understand it, it's an implied requirement of having a wallet that you must be able to do a rescan as necessary. \n",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r18746671,18746671,src/init.cpp
laanwj,2014-10-12T09:43:34Z,CAutoFile already 'degenerates' into a  FILE*. Let's not add more magic behavior.\n\n```\noperator FILE*()            { return file; }\n```\n\nI'd prefer an explicit method 'bool IsNull() const { return file==0; }'.\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r18746698,18746698,src/main.cpp
gmaxwell,2014-10-12T09:45:04Z,"This isn't so, but the extra things required to do that haven't been implemented yet and shouldn't be part of this patch.\n",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r18746704,18746704,src/init.cpp
laanwj,2014-10-12T09:45:20Z,Running with wallet usefully with pruned blocks (and still allowing import/rescan) would require SPV support in the wallet.\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r18746707,18746707,src/init.cpp
TheBlueMatt,2014-10-12T18:18:13Z,"Sure, that'd be better. Maybe remove the bool operator!() too, since that is strange.\n",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r18749025,18749025,src/main.cpp
Diapolo,2014-10-21T10:47:50Z,IMHO the formatting spaces in front of this should be moved out of the translations string.\nAlso is there a minimum defined which needs to be set for this to work?\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r19140610,19140610,src/init.cpp
Diapolo,2014-10-21T10:49:26Z,"Ah, here it is... you could use that in the help message string.\n",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r19140655,19140655,src/init.cpp
Diapolo,2014-10-21T10:50:53Z,"Not sure this needs to be an error, why not set the default instead? See nConnectTimeout for example.\n",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r19140710,19140710,src/init.cpp
Diapolo,2014-10-21T10:52:20Z,Could also be: `if (!setDataFilePrunable.empty() && RemoveBlockFile(*setDataFilePrunable.rbegin()))`.\nSame for next if clause.\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r19140755,19140755,src/main.cpp
Diapolo,2014-10-21T10:52:49Z,Nit: I guess that's not intended ;)?\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r19140769,19140769,src/main.cpp
Diapolo,2014-10-21T10:53:30Z,This needs to be changed when @laanwj CAutoFile pull is merged then...\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r19140798,19140798,src/main.cpp
TheBlueMatt,2014-11-12T08:35:52Z,"I would avoid considering -prune as a mandate, I'd prefer if it was a soft goal (maybe with an option to quit if it gets too large)\n",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r20206602,20206602,src/main.cpp
gmaxwell,2014-11-12T08:41:42Z,"We already have a quit if you run out of space... which could be made user tunable, though I worry about introducing too many arguments at once. Perhaps in a follow on patch?\n",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r20206860,20206860,src/main.cpp
TheBlueMatt,2014-11-12T09:04:40Z,"Tried to test, but couldnt get a value for prune that didnt just quit here, and removing the quit resulted in an infinite loop calling CheckBlockFiles.\n",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r20207772,20207772,src/main.cpp
rdponticelli,2014-11-12T13:54:14Z,"Did you run it on a node already pruned by a previous version of this patch, or pruned manually?\n\nAnyway, I'll fix this behavior.\n",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r20219260,20219260,src/main.cpp
TheBlueMatt,2014-11-12T20:27:23Z,Started with a completely fresh datadir.\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r20247994,20247994,src/main.cpp
theuni,2015-01-12T21:19:27Z,"It seems this doesn't make the distinction between missing a pruned block and a failed read. If a non-pruned block fails to read when pruning is enabled, shouldn't we fail as before?\n\nAlternatively.. couldn't the pruning check happen before ReadBlockFromDisk(), to avoid the overhead entirely for pruned nodes? If we're comfortable with randomly answering with a notfound, why not do it constantly?",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r22823206,22823206,src/main.cpp
sipa,2015-02-16T20:41:29Z,"There is a distinction in the expectation of what a node does. If you enable pruning, the node does not promise to the network to behave as a full node, so it's fine to not answer. If a node advertizes as NODE_NETWORK, and can't answer a request for a block, it's buggy.\n",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r24774566,24774566,src/main.cpp
sipa,2015-02-16T20:45:02Z,"I think it's more clear if you just say something like ""Leaving pruned mode enabled, but not deleting any more blocks for now"".\n",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r24774757,24774757,src/init.cpp
sipa,2015-02-16T20:49:42Z,Is it guaranteed that both setDataFilePrunable and setUndoFilePrunable are both non-empty at this stage? The test above only guarantees that at least one of them is non-empty. Don't dereference begin() of an empty set.\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r24775005,24775005,src/main.cpp
sipa,2015-02-16T23:16:59Z,This may lose never-fully-connected branches. I think this condition as a whole should just change to (pindex->nStatus & BLOCK_VALID_TRANSACTIONS && pindex->nTx != 0).\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r24782232,24782232,src/main.cpp
sipa,2015-02-16T23:20:32Z,This shouldn't require BLOCK_VALID_CHAIN anymore; I think BLOCK_VALID_TRANSACTIONS is enough.\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r24782386,24782386,src/main.cpp
sipa,2015-02-16T23:57:29Z,"This will not iterate over side branches of the block chain, and may perhaps miss things that way. The chances for that are really low, as this code still checks the last height in each affected file, and then deletes whole files, so unless a file consists solely of side branch blocks, it will still be processed.\n\nHowever, I think this flaw indicates a conceptual mistake: this function should it",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r24783758,24783758,src/main.cpp
rebroad,2015-06-15T12:00:02Z,@laanwj Would it be desirable to add SPV support to Bitcoin Core now that pruning is included?\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r32412396,32412396,src/init.cpp
jonasschnelli,2015-06-15T12:11:14Z,SPV and autoprune are orthogonal IMO.\nI'm working on a SPV mode for bitcoin-cores wallet.\n,https://github.com/bitcoin/bitcoin/pull/4701#discussion_r32413098,32413098,src/init.cpp
laanwj,2015-06-15T12:15:06Z,"I was wrong in my above comment, it is possible to use the wallet with pruning as of #6057. It just excludes some operations such as rescanning which need the entire chain.\n\nSPV mode is orthogonal to that, though. That has always been desirable, and pruning hasn't changed that.\n",https://github.com/bitcoin/bitcoin/pull/4701#discussion_r32413345,32413345,src/init.cpp
