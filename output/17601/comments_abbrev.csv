DrahtBot,2019-11-25 21:37:59,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19271 (validation: Warm coins cache during prevalidation to connect blocks faster by andrewtoth)\n* #15545 ([doc] explain",https://github.com/bitcoin/bitcoin/pull/17601#issuecomment-558351518,558351518,
jnewbery,2020-03-13 17:04:13,"Rebased on latest master and removed the final commit.\n\n@ariard \n> Maybe hold for follow-up but did you look to remove `CheckBlockHeader` from `CheckBlock`\n\nAs you note, if we did that, we'd need to add `CheckBlockHeader()` to `TestBlockValidity()` and also `CVerifyDB::VerifyDB()`. I don't think that counts as a simplification.\n",https://github.com/bitcoin/bitcoin/pull/17601#issuecomment-598823045,598823045,
jnewbery,2020-07-09 05:54:07,"Closing this for now. I think it's the right change, but it's not high priority and there doesn't seem to be much interest.",https://github.com/bitcoin/bitcoin/pull/17601#issuecomment-655917446,655917446,
jonatack,2020-07-09 09:08:02,"GitHub doesn't seem to parse its own link https://github.com/bitcoin/bitcoin/pull/17601/#discussion_r392311705 (`https://github.com/bitcoin/bitcoin/pull/17601/#discussion_r392311705`) correctly, so I meant the items in the following comment, in increasing order of preference:\n\n> I think this should either:\n> \n>     * be a comment in `CheckBlock` saying that `cs_main` should usually be held",https://github.com/bitcoin/bitcoin/pull/17601#issuecomment-656008937,656008937,
jonatack,2020-07-09 09:25:07,"> I think it's the right change, but it's not high priority and there doesn't seem to be much interest.\n\nI empathise with this sentiment and have closed my own pull requests for the same reason, combined with the growing stack of open PRs needing attention and thinking I shouldn't have too many PRs open. That said, unless a squeaky wheel calls for grease, review attention seems to be flood-or-",https://github.com/bitcoin/bitcoin/pull/17601#issuecomment-656017677,656017677,
jnewbery,2020-07-09 09:35:45,"This is consensus-critical and the changing the ordering of checks here could potentially introduce very subtle consensus failures, and so this PR requires very careful review. I have 9 other PRs open and more branches that I haven't PRed and I'd prefer to focus review attention on those.",https://github.com/bitcoin/bitcoin/pull/17601#issuecomment-656022875,656022875,
ariard,2019-12-05 18:26:23,If you keep CheckBlock as it is can we keep this to inform future refactors ?,https://github.com/bitcoin/bitcoin/pull/17601#discussion_r354475171,354475171,src/validation.cpp
ariard,2019-12-05 18:39:16,You said here than not caching failure is okay because CheckBlock() isn't very expensive but at same time we use `fChecked` to return early to avoid reprocessing. It seems a bit an inconsistent position. If it's cheap enough we shouldn't bother with `fChecked` and lock tacking shouldn't cover CheckBlock? Or we could split CheckBlock between CheckBlockIntegrity and CheckBlockValidity and have a `fD,https://github.com/bitcoin/bitcoin/pull/17601#discussion_r354481122,354481122,src/validation.cpp
ariard,2019-12-05 18:42:53,"nit: keep struct construction outside of cs_main, that's still a concurrency",https://github.com/bitcoin/bitcoin/pull/17601#discussion_r354482841,354482841,src/validation.cpp
promag,2019-12-06 08:08:05,"> that's still a concurrency\n\nWhat you mean?",https://github.com/bitcoin/bitcoin/pull/17601#discussion_r354706030,354706030,src/validation.cpp
jnewbery,2020-03-13 15:19:40,"I think @ariard means that there's no need to construct the `BlockValidationState` object within the `cs_main` scope. That's true, but constructing this object is very cheap, so I don't think it's a problem (and placing the variable declaration next to where it's used make this clearer).\n\nI'm actually going to remove this commit from the PR, since I don't think it's necessary (and may make it ",https://github.com/bitcoin/bitcoin/pull/17601#discussion_r392293960,392293960,src/validation.cpp
jnewbery,2020-03-13 15:41:37,"`fChecked` is a slightly different caching mechanism. It's stored on the `CBlock` object and prevents having to do the merkle root and POW checking for the same object more than once. The `CBlock` object is new each time we redownload a block, so this caching doesn't prevent us from re-checking an invalid block downloaded more than once. On the other hand, the `BlockManager.m_block_index` is what ",https://github.com/bitcoin/bitcoin/pull/17601#discussion_r392307204,392307204,src/validation.cpp
jnewbery,2020-03-13 15:49:00,"I think this should either:\n\n- be a comment in `CheckBlock` saying that `cs_main` should usually be held when calling `CheckBlock`\n- add an `AssertLockHeld(cs_main)` to `CheckBlock` (and also add that to `FillBlock` and update the callers in bench to hold the lock)\n- remove `fChecked` so that `CheckBlock` doesn't need to hold `cs_main`\n",https://github.com/bitcoin/bitcoin/pull/17601#discussion_r392311705,392311705,src/validation.cpp
