[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/558351518",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#issuecomment-558351518",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17601",
    "id": 558351518,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODM1MTUxOA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-25T21:37:59Z",
    "updated_at": "2020-06-14T12:31:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19271 (validation: Warm coins cache during prevalidation to connect blocks faster by andrewtoth)\n* #15545 ([doc] explain why CheckBlock() is called before AcceptBlock by Sjors)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/558351518/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/598823045",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#issuecomment-598823045",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17601",
    "id": 598823045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODgyMzA0NQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-13T17:04:13Z",
    "updated_at": "2020-03-13T17:04:13Z",
    "author_association": "MEMBER",
    "body": "Rebased on latest master and removed the final commit.\r\n\r\n@ariard \r\n> Maybe hold for follow-up but did you look to remove `CheckBlockHeader` from `CheckBlock`\r\n\r\nAs you note, if we did that, we'd need to add `CheckBlockHeader()` to `TestBlockValidity()` and also `CVerifyDB::VerifyDB()`. I don't think that counts as a simplification.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/598823045/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/655917446",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#issuecomment-655917446",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17601",
    "id": 655917446,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NTkxNzQ0Ng==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-09T05:54:07Z",
    "updated_at": "2020-07-09T05:54:07Z",
    "author_association": "MEMBER",
    "body": "Closing this for now. I think it's the right change, but it's not high priority and there doesn't seem to be much interest.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/655917446/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656008937",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#issuecomment-656008937",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17601",
    "id": 656008937,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjAwODkzNw==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-09T09:08:02Z",
    "updated_at": "2020-07-09T09:09:09Z",
    "author_association": "MEMBER",
    "body": "GitHub doesn't seem to parse its own link https://github.com/bitcoin/bitcoin/pull/17601/#discussion_r392311705 (`https://github.com/bitcoin/bitcoin/pull/17601/#discussion_r392311705`) correctly, so I meant the items in the following comment, in increasing order of preference:\r\n\r\n> I think this should either:\r\n> \r\n>     * be a comment in `CheckBlock` saying that `cs_main` should usually be held when calling `CheckBlock`\r\n> \r\n>     * add an `AssertLockHeld(cs_main)` to `CheckBlock` (and also add that to `FillBlock` and update the callers in bench to hold the lock)\r\n> \r\n>     * remove `fChecked` so that `CheckBlock` doesn't need to hold `cs_main`\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656008937/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656017677",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#issuecomment-656017677",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17601",
    "id": 656017677,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjAxNzY3Nw==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-09T09:25:07Z",
    "updated_at": "2020-07-09T09:25:07Z",
    "author_association": "MEMBER",
    "body": "> I think it's the right change, but it's not high priority and there doesn't seem to be much interest.\r\n\r\nI empathise with this sentiment and have closed my own pull requests for the same reason, combined with the growing stack of open PRs needing attention and thinking I shouldn't have too many PRs open. That said, unless a squeaky wheel calls for grease, review attention seems to be flood-or-drought. Dormant, then suddenly, unexpectedly present. So I guess what matters most is if the PR author is still interested in their own PR.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656017677/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656022875",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#issuecomment-656022875",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17601",
    "id": 656022875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjAyMjg3NQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-09T09:35:45Z",
    "updated_at": "2020-07-09T09:35:45Z",
    "author_association": "MEMBER",
    "body": "This is consensus-critical and the changing the ordering of checks here could potentially introduce very subtle consensus failures, and so this PR requires very careful review. I have 9 other PRs open and more branches that I haven't PRed and I'd prefer to focus review attention on those.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656022875/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/354475171",
    "pull_request_review_id": 327758786,
    "id": 354475171,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NDQ3NTE3MQ==",
    "diff_hunk": "@@ -3769,18 +3781,9 @@ bool ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<cons\n         if (fNewBlock) *fNewBlock = false;\n         BlockValidationState state;\n \n-        // CheckBlock() does not support multi-threaded block validation because CBlock::fChecked can cause data race.",
    "path": "src/validation.cpp",
    "position": 50,
    "original_position": 28,
    "commit_id": "eb3b20e157f79da5afff18af30eb8cf224c980ff",
    "original_commit_id": "bdf7b9df31b1aff2dd0f096afc96b00d16ba4ae4",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If you keep CheckBlock as it is can we keep this to inform future refactors ?",
    "created_at": "2019-12-05T18:26:23Z",
    "updated_at": "2020-03-13T17:03:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#discussion_r354475171",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17601",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/354475171"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17601#discussion_r354475171"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17601"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/354475171/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3805,
    "original_line": 3805,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/354481122",
    "pull_request_review_id": 327758786,
    "id": 354481122,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NDQ4MTEyMg==",
    "diff_hunk": "@@ -3726,9 +3726,21 @@ bool CChainState::AcceptBlock(const std::shared_ptr<const CBlock>& pblock, Block\n         if (pindex->nChainWork < nMinimumChainWork) return true;\n     }\n \n-    if (!CheckBlock(block, state, chainparams.GetConsensus()) ||\n-        !ContextualCheckBlock(block, state, chainparams.GetConsensus(), pindex->pprev)) {\n+    if (!CheckBlock(block, state, chainparams.GetConsensus())) {\n+        // Never mark a block as invalid if CheckBlock() fails.  This is\n+        // protective against consensus failure if there are any unknown forms\n+        // of block mutation that cause CheckBlock() to fail; see e.g.\n+        // CVE-2012-2459 and\n+        // https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-February/016697.html.\n+        // Because CheckBlock() is not very expensive, the anti-DoS benefits of",
    "path": "src/validation.cpp",
    "position": 30,
    "original_position": 12,
    "commit_id": "eb3b20e157f79da5afff18af30eb8cf224c980ff",
    "original_commit_id": "bdf7b9df31b1aff2dd0f096afc96b00d16ba4ae4",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You said here than not caching failure is okay because CheckBlock() isn't very expensive but at same time we use `fChecked` to return early to avoid reprocessing. It seems a bit an inconsistent position. If it's cheap enough we shouldn't bother with `fChecked` and lock tacking shouldn't cover CheckBlock? Or we could split CheckBlock between CheckBlockIntegrity and CheckBlockValidity and have a `fDefinitelyInvalid` to skip both if see block again?",
    "created_at": "2019-12-05T18:39:16Z",
    "updated_at": "2020-03-13T17:03:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#discussion_r354481122",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17601",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/354481122"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17601#discussion_r354481122"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17601"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/354481122/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3768,
    "original_line": 3768,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/354482841",
    "pull_request_review_id": 327758786,
    "id": 354482841,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NDQ4Mjg0MQ==",
    "diff_hunk": "@@ -3775,18 +3775,15 @@ bool CChainState::AcceptBlock(const std::shared_ptr<const CBlock>& pblock, Block\n bool ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<const CBlock> pblock, bool fForceProcessing, bool *fNewBlock)\n {\n     AssertLockNotHeld(cs_main);\n-\n     {\n-        if (fNewBlock) *fNewBlock = false;\n-        BlockValidationState state;\n-\n         LOCK(cs_main);\n \n+        BlockValidationState state;",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 11,
    "commit_id": "eb3b20e157f79da5afff18af30eb8cf224c980ff",
    "original_commit_id": "c433cc43719c7428281351f2426621b1aa36fb05",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: keep struct construction outside of cs_main, that's still a concurrency",
    "created_at": "2019-12-05T18:42:53Z",
    "updated_at": "2020-03-13T17:03:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#discussion_r354482841",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17601",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/354482841"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17601#discussion_r354482841"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17601"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/354482841/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3781,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/354706030",
    "pull_request_review_id": 328046644,
    "id": 354706030,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NDcwNjAzMA==",
    "diff_hunk": "@@ -3775,18 +3775,15 @@ bool CChainState::AcceptBlock(const std::shared_ptr<const CBlock>& pblock, Block\n bool ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<const CBlock> pblock, bool fForceProcessing, bool *fNewBlock)\n {\n     AssertLockNotHeld(cs_main);\n-\n     {\n-        if (fNewBlock) *fNewBlock = false;\n-        BlockValidationState state;\n-\n         LOCK(cs_main);\n \n+        BlockValidationState state;",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 11,
    "commit_id": "eb3b20e157f79da5afff18af30eb8cf224c980ff",
    "original_commit_id": "c433cc43719c7428281351f2426621b1aa36fb05",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> that's still a concurrency\r\n\r\nWhat you mean?",
    "created_at": "2019-12-06T08:08:05Z",
    "updated_at": "2020-03-13T17:03:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#discussion_r354706030",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17601",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/354706030"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17601#discussion_r354706030"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17601"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/354706030/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3781,
    "side": "RIGHT",
    "in_reply_to_id": 354482841
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392293960",
    "pull_request_review_id": 374387314,
    "id": 392293960,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI5Mzk2MA==",
    "diff_hunk": "@@ -3775,18 +3775,15 @@ bool CChainState::AcceptBlock(const std::shared_ptr<const CBlock>& pblock, Block\n bool ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<const CBlock> pblock, bool fForceProcessing, bool *fNewBlock)\n {\n     AssertLockNotHeld(cs_main);\n-\n     {\n-        if (fNewBlock) *fNewBlock = false;\n-        BlockValidationState state;\n-\n         LOCK(cs_main);\n \n+        BlockValidationState state;",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 11,
    "commit_id": "eb3b20e157f79da5afff18af30eb8cf224c980ff",
    "original_commit_id": "c433cc43719c7428281351f2426621b1aa36fb05",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think @ariard means that there's no need to construct the `BlockValidationState` object within the `cs_main` scope. That's true, but constructing this object is very cheap, so I don't think it's a problem (and placing the variable declaration next to where it's used make this clearer).\r\n\r\nI'm actually going to remove this commit from the PR, since I don't think it's necessary (and may make it more likely to introduce a bug, since the callers to `ProcessNewBlock()` in net_processing don't check the return code of the function before using the `fNewBlock` out param.",
    "created_at": "2020-03-13T15:19:40Z",
    "updated_at": "2020-03-13T17:03:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#discussion_r392293960",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17601",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392293960"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17601#discussion_r392293960"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17601"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392293960/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3781,
    "side": "RIGHT",
    "in_reply_to_id": 354482841
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392307204",
    "pull_request_review_id": 374404551,
    "id": 392307204,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMwNzIwNA==",
    "diff_hunk": "@@ -3726,9 +3726,21 @@ bool CChainState::AcceptBlock(const std::shared_ptr<const CBlock>& pblock, Block\n         if (pindex->nChainWork < nMinimumChainWork) return true;\n     }\n \n-    if (!CheckBlock(block, state, chainparams.GetConsensus()) ||\n-        !ContextualCheckBlock(block, state, chainparams.GetConsensus(), pindex->pprev)) {\n+    if (!CheckBlock(block, state, chainparams.GetConsensus())) {\n+        // Never mark a block as invalid if CheckBlock() fails.  This is\n+        // protective against consensus failure if there are any unknown forms\n+        // of block mutation that cause CheckBlock() to fail; see e.g.\n+        // CVE-2012-2459 and\n+        // https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-February/016697.html.\n+        // Because CheckBlock() is not very expensive, the anti-DoS benefits of",
    "path": "src/validation.cpp",
    "position": 30,
    "original_position": 12,
    "commit_id": "eb3b20e157f79da5afff18af30eb8cf224c980ff",
    "original_commit_id": "bdf7b9df31b1aff2dd0f096afc96b00d16ba4ae4",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`fChecked` is a slightly different caching mechanism. It's stored on the `CBlock` object and prevents having to do the merkle root and POW checking for the same object more than once. The `CBlock` object is new each time we redownload a block, so this caching doesn't prevent us from re-checking an invalid block downloaded more than once. On the other hand, the `BlockManager.m_block_index` is what prevents us from checking an invalid block downloaded a second time.\r\n\r\nWe may actually be able to remove `fChecked` after this PR. Before this PR, we call `CheckBlock` three times on the same block:\r\n\r\n1. from `ProcessNewBlock()`\r\n2. from `AcceptBlock()`\r\n3. from `ConnectBlock()`\r\n\r\n(1) is removed by this PR and (3) is not on the critical path for compact block relay (since we relay the compact block as soon as we've done the merkle tree/pow checks the first time, and before we save to disk or connect the block).",
    "created_at": "2020-03-13T15:41:37Z",
    "updated_at": "2020-03-13T17:03:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#discussion_r392307204",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17601",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392307204"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17601#discussion_r392307204"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17601"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392307204/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3768,
    "original_line": 3768,
    "side": "RIGHT",
    "in_reply_to_id": 354481122
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392311705",
    "pull_request_review_id": 374410306,
    "id": 392311705,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMxMTcwNQ==",
    "diff_hunk": "@@ -3769,18 +3781,9 @@ bool ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<cons\n         if (fNewBlock) *fNewBlock = false;\n         BlockValidationState state;\n \n-        // CheckBlock() does not support multi-threaded block validation because CBlock::fChecked can cause data race.",
    "path": "src/validation.cpp",
    "position": 50,
    "original_position": 28,
    "commit_id": "eb3b20e157f79da5afff18af30eb8cf224c980ff",
    "original_commit_id": "bdf7b9df31b1aff2dd0f096afc96b00d16ba4ae4",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think this should either:\r\n\r\n- be a comment in `CheckBlock` saying that `cs_main` should usually be held when calling `CheckBlock`\r\n- add an `AssertLockHeld(cs_main)` to `CheckBlock` (and also add that to `FillBlock` and update the callers in bench to hold the lock)\r\n- remove `fChecked` so that `CheckBlock` doesn't need to hold `cs_main`\r\n",
    "created_at": "2020-03-13T15:49:00Z",
    "updated_at": "2020-03-13T17:03:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#discussion_r392311705",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17601",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392311705"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17601#discussion_r392311705"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17601"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392311705/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3805,
    "original_line": 3805,
    "side": "LEFT",
    "in_reply_to_id": 354475171
  }
]