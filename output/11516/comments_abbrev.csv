sipa,2017-10-18T09:16:34Z,"Is this necessary? There is no problem with creating a one-past-end pointer; only dereferencing them, which doesn't happen here.",https://github.com/bitcoin/bitcoin/pull/11516#issuecomment-337518961,337518961,
practicalswift,2017-10-18T10:15:47Z,"@sipa Both zero length `memset`:s and creating of one-past-end pointers are legal, so from a language legality sense this change is not needed.\n\nHowever, I've seen multiple static analyzers flag this line of code as a potential mistake. This small change makes it apparent for both static analyzers and humans what the real intention of the code is.\n\nMy experience is that code that looks lik",https://github.com/bitcoin/bitcoin/pull/11516#issuecomment-337539285,337539285,
laanwj,2017-10-18T13:29:05Z,"Pointers to the end of a range are absolutely valid C/C++. This is commonly used for iteration end-exclusive ranges. So is a zero-length memset.\n\nI tend towards NACK adding unnecessary checks here. I think minor harmless changes to fix static analyzer false-positives are sometimes okay, but at some point it goes too far, we don't write our code to appease static analyzers. This kind of rufflin",https://github.com/bitcoin/bitcoin/pull/11516#issuecomment-337590429,337590429,
practicalswift,2017-10-18T15:30:17Z,@sipa @laanwj PR updated - now keeping only the new test cases covering the key length boundaries :-),https://github.com/bitcoin/bitcoin/pull/11516#issuecomment-337630682,337630682,
laanwj,2017-10-19T16:11:42Z,ACK https://github.com/bitcoin/bitcoin/pull/11516/commits/a3f56578ab79931f3a35a44b6ff43d0da6308602,https://github.com/bitcoin/bitcoin/pull/11516#issuecomment-337958176,337958176,
practicalswift,2017-10-30T10:40:48Z,Ready for merge? :-),https://github.com/bitcoin/bitcoin/pull/11516#issuecomment-340406732,340406732,
TheBlueMatt,2017-12-12T18:38:56Z,Post-merge was-here-looks-fine.,https://github.com/bitcoin/bitcoin/pull/11516#issuecomment-351146720,351146720,
practicalswift,2017-10-18T15:26:21Z,Removing this change as requested.,https://github.com/bitcoin/bitcoin/pull/11516#discussion_r145450796,145450796,src/crypto/hmac_sha256.cpp
practicalswift,2017-10-18T15:26:32Z,Removing this change as requested.,https://github.com/bitcoin/bitcoin/pull/11516#discussion_r145450875,145450875,src/crypto/hmac_sha512.cpp
