[
  {
    "sha": "b2a2ba5b780c18158f4fbaa292e15cc8817cdb4c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMmEyYmE1Yjc4MGMxODE1OGY0ZmJhYTI5MmUxNWNjODgxN2NkYjRj",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2017-01-19T02:54:04Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2017-04-05T22:59:55Z"
      },
      "message": "Net: Trivial-review: Make SendMessages easier to review\n\nMore things to do later with more disruption:\n\n- The new functions can be turned into static unless someone else has a better idea\n- The documentation should be moved to doxygen\n- An indentation can be done for each of the new function\n- MsgGetData() could be divided in 2, but I don't know if it makes sense",
      "tree": {
        "sha": "a91a14fc63ea013163e27a2b7d86626af6494038",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a91a14fc63ea013163e27a2b7d86626af6494038"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b2a2ba5b780c18158f4fbaa292e15cc8817cdb4c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJY5XbrAAoJEIhmwY6hyUSiT68P/2jYps30TKEVoea+/6Yharg2\nHy0CWWU7MKwD2XjG4yxbeJ8LZkIDdzsHBDdZKaxxTeoqAySOm1t3cmnRwN7tDAcD\nArZiXD/IAGl6M9eB7TK3p+Q/Irn7L3g+N3+0U2HzV7jtvRsV8txF6+W//sQyRhAu\nCPf672zbZ9E62233VM2gcpUKTfjddw6HE6cj1NPLPWDVxtN7V+JWCt81Bjyd3FBJ\nbLSis7tcuWFtNCZ31tZv+yMLlsN2R5y3yuPHhSeJwPXVN+99/53O/D18F8KklPgy\n8U7k3R8uVdDEXmmsvOQG4lvKK6wV9SR9+/IVi52E/7Wt6gaxZa1Z2rhvwwcjXt/i\npirukW21P0x9bbcIZ3ZQJiSgNeAzTW6OBZtY0D4z5QUP7Kv+WPvjLAfmVjsCdKoi\ncnzq6oT1NqiZMaZsJiNd7437Gitgy6GK3K6gERBcR7KtBkggcEB0V9V9aHeIvR3B\nm6/eTaHBF5yTxsgBX42+TsNxclTBWpPKqOZkLjnwp2+0CRpWyy1uVx88hmDTdXFB\n9RGKunZeG4/a2KzedyydgogUe22L7ku6V8CvdX4W5eqb8BGixGJKsZ6fhnnuwewj\n+JeeWgPUZKpsdcUhvuXYpqUDbCHaC8j94DcmKjO6NH6vqxCbnY+oHIo4SPpZ+SWX\nj7CY9Fdc6jdY8QTpK5OV\n=ZufX\n-----END PGP SIGNATURE-----",
        "payload": "tree a91a14fc63ea013163e27a2b7d86626af6494038\nparent c7e73eafa139c29a38f73ab697e2e967a386908d\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1484794444 +0100\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1491433195 +0200\n\nNet: Trivial-review: Make SendMessages easier to review\n\nMore things to do later with more disruption:\n\n- The new functions can be turned into static unless someone else has a better idea\n- The documentation should be moved to doxygen\n- An indentation can be done for each of the new function\n- MsgGetData() could be divided in 2, but I don't know if it makes sense\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2a2ba5b780c18158f4fbaa292e15cc8817cdb4c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b2a2ba5b780c18158f4fbaa292e15cc8817cdb4c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2a2ba5b780c18158f4fbaa292e15cc8817cdb4c/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c7e73eafa139c29a38f73ab697e2e967a386908d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7e73eafa139c29a38f73ab697e2e967a386908d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c7e73eafa139c29a38f73ab697e2e967a386908d"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 13,
      "deletions": 3
    },
    "files": [
      {
        "sha": "27c4ee0387528b01d26fe8cc56d4db4a21d579c5",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 3,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2a2ba5b780c18158f4fbaa292e15cc8817cdb4c/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2a2ba5b780c18158f4fbaa292e15cc8817cdb4c/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=b2a2ba5b780c18158f4fbaa292e15cc8817cdb4c",
        "patch": "@@ -2776,6 +2776,9 @@ class CompareInvMempoolOrder\n     }\n };\n \n+void SendMsgGetData(const Consensus::Params& consensusParams, CNode* pto, CConnman& connman, const CNetMsgMaker& msgMaker, CNodeState& state, const int64_t nNow, const bool fFetch);\n+void SendMsgFeeFilter(CNode* pto, CConnman& connman, const CNetMsgMaker& msgMaker);\n+\n bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interruptMsgProc)\n {\n     const Consensus::Params& consensusParams = Params().GetConsensus();\n@@ -3191,7 +3194,14 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n                 return true;\n             }\n         }\n+        SendMsgGetData(consensusParams, pto, connman, msgMaker, state, nNow, fFetch);\n+        SendMsgFeeFilter(pto, connman, msgMaker);\n+    }\n+    return true;\n+}\n \n+void SendMsgGetData(const Consensus::Params& consensusParams, CNode* pto, CConnman& connman, const CNetMsgMaker& msgMaker, CNodeState& state, const int64_t nNow, const bool fFetch)\n+{\n         //\n         // Message: getdata (blocks)\n         //\n@@ -3238,11 +3248,13 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n         }\n         if (!vGetData.empty())\n             connman.PushMessage(pto, msgMaker.Make(NetMsgType::GETDATA, vGetData));\n-\n+}\n         //\n         // Message: feefilter\n         //\n         // We don't want white listed peers to filter txs to us if we have -whitelistforcerelay\n+void SendMsgFeeFilter(CNode* pto, CConnman& connman, const CNetMsgMaker& msgMaker)\n+{\n         if (pto->nVersion >= FEEFILTER_VERSION && GetBoolArg(\"-feefilter\", DEFAULT_FEEFILTER) &&\n             !(pto->fWhitelisted && GetBoolArg(\"-whitelistforcerelay\", DEFAULT_WHITELISTFORCERELAY))) {\n             CAmount currentFilter = mempool.GetMinFee(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFeePerK();\n@@ -3266,8 +3278,6 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n                 pto->nextSendTimeFeeFilter = timeNow + GetRandInt(MAX_FEEFILTER_CHANGE_DELAY) * 1000000;\n             }\n         }\n-    }\n-    return true;\n }\n \n class CNetProcessingCleanup"
      }
    ]
  }
]