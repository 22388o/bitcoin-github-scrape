DrahtBot,2018-09-27T02:37:31Z,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/14336#issuecomment-424937472,424937472,
pstratem,2018-09-29T00:51:55Z,It seems that lots of the functional tests have races cause this pull request keeps triggering random seeming failures.,https://github.com/bitcoin/bitcoin/pull/14336#issuecomment-425601942,425601942,
laanwj,2018-10-02T19:37:32Z,"Concept ACK, will review in detail when my brain works again.",https://github.com/bitcoin/bitcoin/pull/14336#issuecomment-426403018,426403018,
theuni,2018-10-02T20:19:32Z,Concept ACK. Will also review shortly.,https://github.com/bitcoin/bitcoin/pull/14336#issuecomment-426415581,426415581,
laanwj,2018-11-01T13:10:37Z,some minor comments but otherwise utACK from me,https://github.com/bitcoin/bitcoin/pull/14336#issuecomment-435036036,435036036,
sdaftuar,2018-11-06T18:25:04Z,"I haven't reviewed the code at all, but this doesn't seem to work on my mac (macos 10.13.3).  It looks like I can't maintain a connection to any peers, here's an example of debug.log output when I grep for a single peer, to show an example:\n\n```\n2018-11-06T18:20:54Z Added connection peer=1788\n2018-11-06T18:20:54Z sending version (103 bytes) peer=1788\n2018-11-06T18:20:54Z send version mes",https://github.com/bitcoin/bitcoin/pull/14336#issuecomment-436356628,436356628,
pstratem,2018-11-06T23:25:02Z,"@sdaftuar the last commit insures that there is a single struct pollfd per fd and adds significantly more logging\n\ncan you give that a try, i dont have an os x system",https://github.com/bitcoin/bitcoin/pull/14336#issuecomment-436446576,436446576,
sdaftuar,2018-11-07T01:54:13Z,"@pstratem New version seems to be working, I'll let it run overnight and report back.",https://github.com/bitcoin/bitcoin/pull/14336#issuecomment-436475415,436475415,
DrahtBot,2018-11-07T17:51:14Z,<!--a722867cd34abeea1fadc8d60700f111-->\nGitian builds for commit d864e45730be82879abe9c096c4d577975fdda7d (master):\n * `4d597d216dc0ed5dae23214891153729...` [bitcoin-0.17.99-aarch64-linux-gnu-debug.tar.gz](https://drahtbot.space/gitian/bitcoin/bitcoin/d864e45730be82879abe9c096c4d577975fdda7d/bitcoin-0.17.99-aarch64-linux-gnu-debug.tar.gz)\n * `574346fdb743373d59742354b44fa6eb...` [bitcoin-0.17.9,https://github.com/bitcoin/bitcoin/pull/14336#issuecomment-436715423,436715423,
pstratem,2018-11-07T20:48:25Z,"@sdaftuar that's interesting, seems there's a bug in the os x implementation of poll regarding the same fd having multiple pollfd entries",https://github.com/bitcoin/bitcoin/pull/14336#issuecomment-436771773,436771773,
jamesob,2018-11-09T14:58:04Z,"I've been trying to figure out why [an earlier iteration of this PR](https://github.com/pstratem/bitcoin/commit/15b9b4ddc9998400f6e2025a9956956c15435187) fails on macOS (Darwin). The earlier version passes in a separate `pollfd` struct for each (fd, event type) pair, potentially having duplicate entries for file descriptors listed in multiple `*_select_set` sets. The current version deduplicates p",https://github.com/bitcoin/bitcoin/pull/14336#issuecomment-437384408,437384408,
pstratem,2018-11-09T19:06:17Z,"I've modified to not use poll() on OSX.\nHowever that should probably by an automake m4 of some kind, but I'm not sure how to do that.",https://github.com/bitcoin/bitcoin/pull/14336#issuecomment-437462592,437462592,
pstratem,2018-11-30T23:04:01Z,"With 87 connections the effect of generating the pollfd list shows up on a profile but isn't significant.\n\nThe poll() implementation is on the order of 1000 ns slower per call than the select() implementation.\n\nI don't think that's significant.",https://github.com/bitcoin/bitcoin/pull/14336#issuecomment-443366339,443366339,
laanwj,2018-12-13T18:41:59Z,utACK 4927bf2f257ac53569978980eaf1f61c2c6b04cc,https://github.com/bitcoin/bitcoin/pull/14336#issuecomment-447075575,447075575,
BlockMechanic,2019-10-12T09:47:20Z,Crashes on android 7 8 and 9 armv7a. May need to implement a work around,https://github.com/bitcoin/bitcoin/pull/14336#issuecomment-541308094,541308094,
practicalswift,2018-09-29T07:18:27Z,`struct pollfd pollfd = {}` instead of `memset`?,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r221419247,221419247,src/net.cpp
practicalswift,2018-09-29T07:20:21Z,`recvSet = recv_set.count(pnode->hSocket) > 0` to avoid implicit conversion from `unsigned long` to `bool`. Applies also to the following to lines. Explicit is better than implicit :-),https://github.com/bitcoin/bitcoin/pull/14336#discussion_r221419285,221419285,src/net.cpp
practicalswift,2018-09-29T07:22:12Z,Use `&&` instead of `and` :-),https://github.com/bitcoin/bitcoin/pull/14336#discussion_r221419345,221419345,src/net.cpp
practicalswift,2018-09-29T07:23:41Z,Use another variable name: `pollfd` shadows the already existing local variable with the same name :-),https://github.com/bitcoin/bitcoin/pull/14336#discussion_r221419392,221419392,src/net.cpp
jimpo,2018-09-29T23:16:43Z,"~~Move this into `SocketHandler` after the `SocketEvents` call? Or this method cool return a bool, true if it completes, false if it is interrupted.~~\n\nNOTE: this was fixed in the commit `maybe fix things?`",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r221442419,221442419,src/net.cpp
jimpo,2018-09-29T23:25:51Z,`pollfds.reserve(recv_select_set.size() + send_select_set.size() + error_select_set.size())`,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r221442547,221442547,src/net.cpp
jimpo,2018-09-29T23:26:54Z,"nit: vectors now have `.data()`, which returns `&pollfds[0]` in a more object-oriented way.",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r221442558,221442558,src/net.cpp
jimpo,2018-09-29T23:31:14Z,nit: Make the 50 a named constant along with `timeout.tv_usec` in the `select` impl.,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r221442622,221442622,src/net.cpp
jimpo,2018-09-29T23:34:39Z,nit: Replace 50 with `timeout.tv_usec/1000`,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r221442660,221442660,src/net.cpp
jimpo,2018-09-29T23:37:44Z,"I see this is the same as the code currently, but it seems like this should be `fdsetError` instead of `fdsetRecv`, even though they are handled exactly the same.",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r221442700,221442700,src/net.cpp
pstratem,2018-10-01T17:35:12Z,"I don't think it should be there at all really. select() failures dont mean the sockets themselves have failed, but i guess it could mean we made a mistake and called select() with a closed socket?",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r221693842,221693842,src/net.cpp
jimpo,2018-10-02T21:53:28Z,"Yeah, then iterating through each one and calling `recv` would identify which peer to disconnect. Though, if it's `fdsetError` and not `fdsetRecv`, it probably shouldn't disconnect when `nBytes == 0`.",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r222124763,222124763,src/net.cpp
jamesob,2018-10-16T20:10:44Z,Could be worth having `GenerateSelectSet` return a bool that indicates whether or not the sets have any content so that we can avoid the `.empty()` checks below (and the repetition necessary for the legacy `select` impl).,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r225690949,225690949,src/net.cpp
jamesob,2018-10-16T20:13:57Z,"This is ignored and reported on `revents` in any case, no? I guess no harm in being explicit.",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r225691877,225691877,src/net.cpp
jamesob,2018-10-16T20:19:12Z,Should we make use of `SELECT_TIMEOUT_MILLISECONDS` here?,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r225693517,225693517,src/net.cpp
jamesob,2018-10-16T20:19:32Z,nit: space after `if` + braces,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r225693624,225693624,src/net.cpp
jamesob,2018-10-16T20:26:07Z,Apparently [`poll` has been flaky on previous versions of MacOS](https://daniel.haxx.se/blog/2016/10/11/poll-on-mac-10-12-is-broken/). Do we want to fall back to `select` on Darwin systems just to be safe?,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r225695613,225695613,src/net.cpp
jamesob,2018-10-16T20:29:34Z,(from a previous comment on the outdated `#ifdef WIN32`) Apparently [`poll` has been flaky on previous versions of MacOS](https://daniel.haxx.se/blog/2016/10/11/poll-on-mac-10-12-is-broken/). Do we want to fall back to select on Darwin systems just to be safe?,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r225696650,225696650,src/net.cpp
pstratem,2018-10-18T23:53:59Z,I'm avoiding using poll() or select() to sleep specifically because of this class of bug.,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r226500199,226500199,src/net.cpp
pstratem,2018-10-18T23:55:06Z,I'm reusing the `struct pollfd` so it's necessary to overwrite the previous value.,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r226500376,226500376,src/net.cpp
pstratem,2018-10-18T23:55:21Z,yeah,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r226500409,226500409,src/net.cpp
pstratem,2018-10-20T19:53:59Z,"i'm specifically avoiding calling poll (or select) with nothing to listen for because of that class of bugs, i'll add a comment",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r226838085,226838085,src/net.cpp
laanwj,2018-11-01T12:32:00Z,"don't know how long the old code waited, but isn't 50 milliseconds a bit short? if there are no events, why not sleep as long as possible? (saving CPU cycles) can you please add a comment explaining the reasoning for this specific value",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r230026550,230026550,src/net.cpp
laanwj,2018-11-01T12:52:36Z,"I guess we *want* these sets to be sorted by fd, or at least predictably sorted, as it's iterated over--so using `set` over `unordered_set` makes sense",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r230031558,230031558,src/net.cpp
pstratem,2018-11-01T17:52:58Z,"I carried over the existing value.\n\nThere are two reasons for this to be a short value:\n\n- we cant modify the list of sockets while waiting, so the sleep time is potentially the delay before a new connection is serviced at all\n- the disconnectnodes and inactivitychecks are time based and independent of socketevents",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r230135886,230135886,src/net.cpp
pstratem,2018-11-01T17:55:06Z,regardless of iterating i cant imagine we'd see any change in a benchmark here,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r230136620,230136620,src/net.cpp
pstratem,2018-11-01T17:57:02Z,"i just checked and this is the value from satoshi, so im sure it was entirely arbitrarily chosen",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r230137381,230137381,src/net.cpp
ken2812221,2018-11-06T01:09:02Z,nit: MSVC does not like this. I would suggest to use `#ifndef`,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r230971331,230971331,src/compat.h
laanwj,2018-11-06T07:02:59Z,"I think the official syntax, which works with any C++ compiler, is\n```c++\n#if !defined(WIN32)\n```",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r231014724,231014724,src/compat.h
jamesob,2018-11-09T02:42:40Z,`vpollfds.reserve(pollfds.size())`?,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r232128578,232128578,src/net.cpp
jamesob,2018-11-09T02:42:55Z, `.push_back(std::move(it.second))`? ,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r232128628,232128628,src/net.cpp
pstratem,2018-11-09T02:45:39Z,i believe std::map::size is o(n),https://github.com/bitcoin/bitcoin/pull/14336#discussion_r232128989,232128989,src/net.cpp
sipa,2018-11-09T02:46:50Z,"Nope, guaranteed to be O(1). https://en.cppreference.com/w/cpp/container/map/size",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r232129158,232129158,src/net.cpp
practicalswift,2018-11-09T08:33:24Z,~~Could use `std::transform`?~~,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r232173803,232173803,src/net.cpp
jamesob,2018-11-09T15:21:06Z,Transform looks overly complicated for this: https://stackoverflow.com/a/771482,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r232289036,232289036,src/net.cpp
pstratem,2018-11-09T18:48:42Z,ok changing now,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r232354883,232354883,src/net.cpp
sipa,2018-11-10T19:35:58Z,"It's probably slightly more efficient to return sorted vectors, and use `std::binary_search` to look up things in it (as `std::map` needs one allocation per element), but agree that it is unlikely to matter here.",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r232463506,232463506,src/net.cpp
sipa,2018-11-10T19:37:12Z,Tiny nit: variable naming style for `hSocket`.,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r232463540,232463540,src/net.cpp
sipa,2018-11-10T19:37:30Z,Tiny nit: space after `for` (and after `if` further).,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r232463550,232463550,src/net.cpp
sipa,2018-11-10T19:39:00Z,Style nit: braces whenever the next lines are indented (or put the then clause on the same line as the `if`).,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r232463592,232463592,src/net.cpp
sipa,2018-11-10T19:42:47Z,"Style nit: braces when indenting, and spaces after `if`.",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r232463674,232463674,src/net.cpp
sipa,2018-11-10T19:43:44Z,It doesn't seem like the current code is using `poll` on Windows.,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r232463698,232463698,src/netbase.h
sipa,2018-11-10T19:44:02Z,It doesn't seem like the current code is using `poll` on Windows.,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r232463705,232463705,src/net.h
pstratem,2018-11-10T21:36:09Z,it isnt?,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r232466820,232466820,src/net.h
pstratem,2018-11-10T21:36:21Z,it isnt?,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r232466827,232466827,src/netbase.h
sipa,2018-11-10T21:38:00Z,"```c++\n#if defined(__linux__)\n#define USE_POLL\n#endif\n```\n",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r232466869,232466869,src/netbase.h
sipa,2018-11-10T21:38:30Z,"Oh, damn, I misread if**n**def.",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r232466883,232466883,src/netbase.h
sipa,2018-11-11T02:54:41Z,"Perhaps add a comment here listen the reason for excluding every platform not included here, so it is easy to re-asses later.",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r232472956,232472956,src/compat.h
sipa,2018-11-11T02:57:28Z,"```\nnet.cpp: In member function ‘void CConnman::SocketEvents(std::set<unsigned int>&, std::set<unsigned int>&, std::set<unsigned int>&)’:\nnet.cpp:1351:10: warning: types may not be defined in a for-range-declaration\n     for (struct pollfd pollfd : vpollfds) {\n          ^~~~~~\n```",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r232472974,232472974,src/net.cpp
pstratem,2018-11-11T03:50:28Z,done,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r232473557,232473557,src/net.cpp
pstratem,2018-11-11T03:50:35Z,done,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r232473558,232473558,src/net.cpp
pstratem,2018-11-11T03:50:41Z,done,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r232473559,232473559,src/net.cpp
pstratem,2018-11-11T03:50:48Z,done,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r232473562,232473562,src/net.cpp
Empact,2018-11-22T16:18:38Z,Should this be behind `#ifdef USE_POLL` instead? To match the `pollfd` reference below.,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r235777795,235777795,src/net.h
Empact,2018-11-22T16:21:33Z,"Seems this include should be in `netbase.cpp`, given there's no publicly exposed reference.",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r235778556,235778556,src/netbase.h
Empact,2018-11-22T16:30:41Z,"nit: would be nice to avoid the duplication between these lines, something like:\n\n```C++\n#ifdef USE_POLL\n    int fd_max = nFD;\n#else\n    int fd_max = FD_SETSIZE;\n#endif\n    nMaxConnections = std::max(std::min<int>(nMaxConnections, fd_max - nBind - MIN_CORE_FILEDESCRIPTORS - MAX_ADDNODE_CONNECTIONS), 0);\n```",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r235780957,235780957,src/init.cpp
Empact,2018-11-22T16:37:51Z,"If this fails, we probs don't want to call `poll` in `SocketEvents`, right? Seems better to return false and handle the error in the caller.",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r235782693,235782693,src/net.cpp
Empact,2018-11-22T16:40:12Z,"This could overload `GenerateSelectSet`, maybe under a different name - e.g. `GenerateEventSet`",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r235783267,235783267,src/net.cpp
Empact,2018-11-22T16:43:09Z,"There are a few whitespace issues, could do with running clang-format.",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r235783932,235783932,src/net.cpp
pstratem,2018-11-29T23:02:04Z,"This is really just temporary to ensure there's no performance issues, the last commit will probably be removed actually.",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r237692484,237692484,src/net.cpp
jamesob,2018-12-03T15:50:52Z,"(non-blocking) Wondering if it's worth logging a negative error code here, eg \n```patch\ndiff --git a/src/net.cpp b/src/net.cpp\nindex 7b8b6e5ea2..3b05aad6d1 100644\n--- a/src/net.cpp\n+++ b/src/net.cpp\n@@ -1344,7 +1344,10 @@ void CConnman::SocketEvents(std::set<SOCKET> &recv_set, std::set<SOCKET> &send_s\n         vpollfds.push_back(std::move(it.second));\n     }\n \n-    if (poll(vpo",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r238323382,238323382,src/net.cpp
jamesob,2018-12-03T15:56:50Z,"(non-blocking)\n```patch\ndiff --git a/src/net.cpp b/src/net.cpp\nindex 7b8b6e5ea2..03d165d701 100644\n--- a/src/net.cpp\n+++ b/src/net.cpp\n@@ -1355,6 +1355,7 @@ void CConnman::SocketEvents(std::set<SOCKET> &recv_set, std::set<SOCKET> &send_s\n     }\n }\n #else\n+// Use select() on platforms where poll() is unavailable.\n void CConnman::SocketEvents(std::set<SOCKET> &recv_set, std::se",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r238325977,238325977,src/net.cpp
jamesob,2018-12-03T16:07:25Z,"(non-blocking) `std::min(endTime - curTime, maxWait)` could be deduplicated.",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r238330665,238330665,src/netbase.cpp
jamesob,2018-12-03T16:12:13Z,"(non-blocking) This might be academic, but since this clause is handling both `select()` and `poll()` might be safer to say `if (nRet < 0)`? Though right now there's no difference in the return value for both APIs (and I doubt that'll ever change...).",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r238332711,238332711,src/netbase.cpp
pstratem,2018-12-03T17:09:49Z,"It might be, but I'd like to cleanup the error logging more in the future, the select() code randomly spams the log with EINTR errors as well, so I'd say it's a separate issue.",https://github.com/bitcoin/bitcoin/pull/14336#discussion_r238356672,238356672,src/net.cpp
pstratem,2018-12-03T19:26:00Z,agreed,https://github.com/bitcoin/bitcoin/pull/14336#discussion_r238404313,238404313,src/netbase.cpp
