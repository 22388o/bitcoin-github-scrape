paveljanik,2016-02-26T08:57:17Z,"I think that logging SSL library used for generating random numbers is still worth it. We do not need it in the GUI though, I agree.\n",https://github.com/bitcoin/bitcoin/pull/7605#issuecomment-189170987,189170987,
MarcoFalke,2016-02-26T09:29:40Z,"Great to see this removed from the GUI.\n\n~~utACK  5ecfa36. (building right now)~~\n\nTested ACK 5ecfa36\n\n(I am ok to keep it in the debug.log, but I don't have a strong opinion here)\n",https://github.com/bitcoin/bitcoin/pull/7605#issuecomment-189187760,189187760,
AliceWonderMiscreations,2016-02-27T09:36:53Z,"I also think it should be in the debug log but I do not think it serves a purpose in the Qt Information dialog.\n\nWay off topic but in my dialog, the Build date appears to be wrong, reporting 17 Feb which is before 0.12.0 was released. Wonder if that is a bug in my chroot build environment.\n",https://github.com/bitcoin/bitcoin/pull/7605#issuecomment-189612563,189612563,
MarcoFalke,2016-02-27T11:12:05Z,"> I also think it should be in the debug log\n\nImo it's just not worth the effort to maintain. (We've had more than 3 pull request about ""fixing"" this in the last month). There are other trivial ways to determine the version of the library you are using\n\n> Way off topic but in my dialog, the Build date appears to be wrong, reporting 17 Feb which is before 0.12.0 was released. Wonder if that is ",https://github.com/bitcoin/bitcoin/pull/7605#issuecomment-189618918,189618918,
paveljanik,2016-02-27T12:02:51Z,"@MarcoFalke The sentence ""There are other trivial ways to determine the version of the library you are using"" unfortunately applies only to users with deep technical knowledge. Our users mix different versions of SSL libraries, at compile time and at runtime. The fixes applied to this part of our code only handle such strange instances. It is very useful to know what was used at runtime, really.\n",https://github.com/bitcoin/bitcoin/pull/7605#issuecomment-189624938,189624938,
AliceWonderMiscreations,2016-02-27T12:11:36Z,"Thanks @MarcoFalke so it isn't really the ""build"" date as I think of ""build"" date (compile)\n-=-\nsorry for OT\n",https://github.com/bitcoin/bitcoin/pull/7605#issuecomment-189626748,189626748,
laanwj,2016-02-29T08:38:08Z,"I like this solution.\n\nThe build date should probably go away as well, it's confusing at least for the executables built in gitian, as the date/time is overridden to create deterministic executables. I don't think it adds very much in any case.\n\n> Imo it's just not worth the effort to maintain. (We've had more than 3 pull request about ""fixing"" this in the last month). \n\nYes, that's kind of ",https://github.com/bitcoin/bitcoin/pull/7605#issuecomment-190103168,190103168,
jonasschnelli,2016-02-29T09:10:10Z,"Agree with removing the build-date (in another PR), an alternative solution would be to only show the build date in non release builds (`!CLIENT_VERSION_IS_RELEASE`).\n\nI think we should merge this PR and remove openssl from the logs and the GUI. IMO there is not much value in logging the openssl version regarding to PRNG, and, eventually we'll end up with a custom PRNG implementation (https://gi",https://github.com/bitcoin/bitcoin/pull/7605#issuecomment-190113266,190113266,
luke-jr,2016-02-29T23:55:24Z,"It may actually be useful to log the version/hash of every library being used, but probably no reason to single out OpenSSL.\n",https://github.com/bitcoin/bitcoin/pull/7605#issuecomment-190454918,190454918,
laanwj,2016-03-01T17:14:18Z,"@luke-jr Well we log BerkeleyDB version as well. But at least there's a good reason for that, to troubleshoot wallet incompatibility.\n",https://github.com/bitcoin/bitcoin/pull/7605#issuecomment-190819267,190819267,
