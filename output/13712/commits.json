[
  {
    "sha": "722326389989757c58879feb74cc2480bd58bdfc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MjIzMjYzODk5ODk3NTdjNTg4NzlmZWI3NGNjMjQ4MGJkNThiZGZj",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-07-19T12:52:09Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-07-19T19:13:03Z"
      },
      "message": "wallet: Add tests for ParseHDKeypath(...)",
      "tree": {
        "sha": "d2487e53c7dc590a605cff91f502687091fe0eba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d2487e53c7dc590a605cff91f502687091fe0eba"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/722326389989757c58879feb74cc2480bd58bdfc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/722326389989757c58879feb74cc2480bd58bdfc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/722326389989757c58879feb74cc2480bd58bdfc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/722326389989757c58879feb74cc2480bd58bdfc/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b6547234616fd4950034b7f53fb33be637cc43e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6547234616fd4950034b7f53fb33be637cc43e0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b6547234616fd4950034b7f53fb33be637cc43e0"
      }
    ],
    "stats": {
      "total": 76,
      "additions": 76,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2cc995bf048a1a1f46908809047f11241100a030",
        "filename": "src/wallet/test/psbt_wallet_tests.cpp",
        "status": "modified",
        "additions": 76,
        "deletions": 0,
        "changes": 76,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/722326389989757c58879feb74cc2480bd58bdfc/src/wallet/test/psbt_wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/722326389989757c58879feb74cc2480bd58bdfc/src/wallet/test/psbt_wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/psbt_wallet_tests.cpp?ref=722326389989757c58879feb74cc2480bd58bdfc",
        "patch": "@@ -13,6 +13,8 @@\n #include <test/test_bitcoin.h>\n #include <wallet/test/wallet_test_fixture.h>\n \n+extern bool ParseHDKeypath(std::string keypath_str, std::vector<uint32_t>& keypath);\n+\n BOOST_FIXTURE_TEST_SUITE(psbt_wallet_tests, WalletTestingSetup)\n \n BOOST_AUTO_TEST_CASE(psbt_updater_test)\n@@ -71,4 +73,78 @@ BOOST_AUTO_TEST_CASE(psbt_updater_test)\n     BOOST_CHECK_EQUAL(final_hex, \"70736274ff01009a020000000258e87a21b56daf0c23be8e7070456c336f7cbaa5c8757924f545887bb2abdd750000000000ffffffff838d0427d0ec650a68aa46bb0b098aea4422c071b2ca78352a077959d07cea1d0100000000ffffffff0270aaf00800000000160014d85c2b71d0060b09c9886aeb815e50991dda124d00e1f5050000000016001400aea9a2e5f0f876a588df5546e8742d1d87008f00000000000100bb0200000001aad73931018bd25f84ae400b68848be09db706eac2ac18298babee71ab656f8b0000000048473044022058f6fc7c6a33e1b31548d481c826c015bd30135aad42cd67790dab66d2ad243b02204a1ced2604c6735b6393e5b41691dd78b00f0c5942fb9f751856faa938157dba01feffffff0280f0fa020000000017a9140fb9463421696b82c833af241c78c17ddbde493487d0f20a270100000017a91429ca74f8a08f81999428185c97b5d852e4063f6187650000000104475221029583bf39ae0a609747ad199addd634fa6108559d6c5cd39b4c2183f1ab96e07f2102dab61ff49a14db6a7d02b0cd1fbb78fc4b18312b5b4e54dae4dba2fbfef536d752ae2206029583bf39ae0a609747ad199addd634fa6108559d6c5cd39b4c2183f1ab96e07f10d90c6a4f000000800000008000000080220602dab61ff49a14db6a7d02b0cd1fbb78fc4b18312b5b4e54dae4dba2fbfef536d710d90c6a4f0000008000000080010000800001012000c2eb0b0000000017a914b7f5faf40e3d40a5a459b1db3535f2b72fa921e88701042200208c2353173743b595dfb4a07b72ba8e42e3797da74e87fe7d9d7497e3b2028903010547522103089dc10c7ac6db54f91329af617333db388cead0c231f723379d1b99030b02dc21023add904f3d6dcf59ddb906b0dee23529b7ffb9ed50e5e86151926860221f0e7352ae2206023add904f3d6dcf59ddb906b0dee23529b7ffb9ed50e5e86151926860221f0e7310d90c6a4f000000800000008003000080220603089dc10c7ac6db54f91329af617333db388cead0c231f723379d1b99030b02dc10d90c6a4f00000080000000800200008000220203a9a4c37f5996d3aa25dbac6b570af0650394492942460b354753ed9eeca5877110d90c6a4f000000800000008004000080002202027f6399757d2eff55a136ad02c684b1838b6556e5f1b6b34282a94b6b5005109610d90c6a4f00000080000000800500008000\");\n }\n \n+BOOST_AUTO_TEST_CASE(parse_hd_keypath)\n+{\n+    std::vector<uint32_t> keypath;\n+\n+    BOOST_CHECK(ParseHDKeypath(\"1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1\", keypath));\n+    BOOST_CHECK(!ParseHDKeypath(\"///////////////////////////\", keypath));\n+\n+    BOOST_CHECK(ParseHDKeypath(\"1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1'/1\", keypath));\n+    BOOST_CHECK(!ParseHDKeypath(\"//////////////////////////'/\", keypath));\n+\n+    BOOST_CHECK(ParseHDKeypath(\"1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/\", keypath));\n+    BOOST_CHECK(!ParseHDKeypath(\"1///////////////////////////\", keypath));\n+\n+    BOOST_CHECK(ParseHDKeypath(\"1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1'/\", keypath));\n+    BOOST_CHECK(!ParseHDKeypath(\"1/'//////////////////////////\", keypath));\n+\n+    BOOST_CHECK(ParseHDKeypath(\"\", keypath));\n+    BOOST_CHECK(!ParseHDKeypath(\" \", keypath));\n+\n+    BOOST_CHECK(ParseHDKeypath(\"0\", keypath));\n+    BOOST_CHECK(!ParseHDKeypath(\"O\", keypath));\n+\n+    BOOST_CHECK(ParseHDKeypath(\"0000'/0000'/0000'\", keypath));\n+    BOOST_CHECK(!ParseHDKeypath(\"0000,/0000,/0000,\", keypath));\n+\n+    BOOST_CHECK(ParseHDKeypath(\"01234\", keypath));\n+    BOOST_CHECK(!ParseHDKeypath(\"0x1234\", keypath));\n+\n+    BOOST_CHECK(ParseHDKeypath(\"1\", keypath));\n+    BOOST_CHECK(!ParseHDKeypath(\" 1\", keypath));\n+\n+    BOOST_CHECK(ParseHDKeypath(\"42\", keypath));\n+    BOOST_CHECK(!ParseHDKeypath(\"m42\", keypath));\n+\n+    BOOST_CHECK(ParseHDKeypath(\"4294967295\", keypath)); // 4294967295 == 0xFFFFFFFF (uint32_t max)\n+    BOOST_CHECK(!ParseHDKeypath(\"4294967296\", keypath)); // 4294967296 == 0xFFFFFFFF (uint32_t max) + 1\n+\n+    BOOST_CHECK(ParseHDKeypath(\"m\", keypath));\n+    BOOST_CHECK(!ParseHDKeypath(\"n\", keypath));\n+\n+    BOOST_CHECK(ParseHDKeypath(\"m/\", keypath));\n+    BOOST_CHECK(!ParseHDKeypath(\"n/\", keypath));\n+\n+    BOOST_CHECK(ParseHDKeypath(\"m/0\", keypath));\n+    BOOST_CHECK(!ParseHDKeypath(\"n/0\", keypath));\n+\n+    BOOST_CHECK(ParseHDKeypath(\"m/0'\", keypath));\n+    BOOST_CHECK(!ParseHDKeypath(\"m/0''\", keypath));\n+\n+    BOOST_CHECK(ParseHDKeypath(\"m/0'/0'\", keypath));\n+    BOOST_CHECK(!ParseHDKeypath(\"m/'0/0'\", keypath));\n+\n+    BOOST_CHECK(ParseHDKeypath(\"m/0/0\", keypath));\n+    BOOST_CHECK(!ParseHDKeypath(\"n/0/0\", keypath));\n+\n+    BOOST_CHECK(ParseHDKeypath(\"m/0/0/00\", keypath));\n+    BOOST_CHECK(!ParseHDKeypath(\"m/0/0/f00\", keypath));\n+\n+    BOOST_CHECK(ParseHDKeypath(\"m/0/0/000000000000000000000000000000000000000000000000000000000000000000000000000000000000\", keypath));\n+    BOOST_CHECK(!ParseHDKeypath(\"m/1/1/111111111111111111111111111111111111111111111111111111111111111111111111111111111111\", keypath));\n+\n+    BOOST_CHECK(ParseHDKeypath(\"m/0/00/0\", keypath));\n+    BOOST_CHECK(!ParseHDKeypath(\"m/0'/00/'0\", keypath));\n+\n+    BOOST_CHECK(ParseHDKeypath(\"m/1/\", keypath));\n+    BOOST_CHECK(!ParseHDKeypath(\"m/1//\", keypath));\n+\n+    BOOST_CHECK(ParseHDKeypath(\"m/0/4294967295\", keypath)); // 4294967295 == 0xFFFFFFFF (uint32_t max)\n+    BOOST_CHECK(!ParseHDKeypath(\"m/0/4294967296\", keypath)); // 4294967296 == 0xFFFFFFFF (uint32_t max) + 1\n+\n+    BOOST_CHECK(ParseHDKeypath(\"m/4294967295\", keypath)); // 4294967295 == 0xFFFFFFFF (uint32_t max)\n+    BOOST_CHECK(!ParseHDKeypath(\"m/4294967296\", keypath)); // 4294967296 == 0xFFFFFFFF (uint32_t max) + 1\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "27ee53c1aedae4f27458537c61804b6fef34ce3c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyN2VlNTNjMWFlZGFlNGYyNzQ1ODUzN2M2MTgwNGI2ZmVmMzRjZTNj",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-07-19T08:30:20Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-07-19T19:13:03Z"
      },
      "message": "wallet: Add error handling. Check return value of ParseUInt32(...) in ParseHDKeypath(...).",
      "tree": {
        "sha": "7f0a49d951d60e2c69df1f519eb7da990928f090",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7f0a49d951d60e2c69df1f519eb7da990928f090"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27ee53c1aedae4f27458537c61804b6fef34ce3c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27ee53c1aedae4f27458537c61804b6fef34ce3c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/27ee53c1aedae4f27458537c61804b6fef34ce3c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27ee53c1aedae4f27458537c61804b6fef34ce3c/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "722326389989757c58879feb74cc2480bd58bdfc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/722326389989757c58879feb74cc2480bd58bdfc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/722326389989757c58879feb74cc2480bd58bdfc"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 3,
      "deletions": 1
    },
    "files": [
      {
        "sha": "02cdd0f9f194f522f60a87b63dc106032f329d1e",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27ee53c1aedae4f27458537c61804b6fef34ce3c/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27ee53c1aedae4f27458537c61804b6fef34ce3c/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=27ee53c1aedae4f27458537c61804b6fef34ce3c",
        "patch": "@@ -4433,7 +4433,9 @@ bool ParseHDKeypath(std::string keypath_str, std::vector<uint32_t>& keypath)\n             return false;\n         }\n         uint32_t number;\n-        ParseUInt32(item, &number);\n+        if (!ParseUInt32(item, &number)) {\n+            return false;\n+        }\n         path |= number;\n \n         keypath.push_back(path);"
      }
    ]
  }
]