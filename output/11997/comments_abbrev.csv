MarcoFalke,2018-01-03T13:15:34Z,"Concept ACK, but agree with @promag ",https://github.com/bitcoin/bitcoin/pull/11997#issuecomment-355009201,355009201,
MarcoFalke,2018-01-04T14:09:12Z,"```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nutACK c99a3c32c830384a9959a468a13441fcd2e48a72\n-----BEGIN PGP SIGNATURE-----\n\niQIcBAEBCgAGBQJaTjV7AAoJENLqSFDnUoslYJUP+wRtblQkTEa0UlmhOiDk4KFa\nBPiYWVsYCIfS2Mt7OtQq0RlxcGnNydneulsVQHzOhzTMo0DQdvKS32W5sUzhCjUa\nJBc3McQ1kprl0NoiHoD3VuR2YbSdBPs8iwue14oD1ilNjGO3P6SlJdiv6Cg5svN0\nFdpTEsJFkaZqIbceG4kfOlHnxqMhfUuaXoXCcN4KEPVG+FqUCE5fyx",https://github.com/bitcoin/bitcoin/pull/11997#issuecomment-355290935,355290935,
promag,2018-01-02T02:38:58Z,IMO remove this assert.,https://github.com/bitcoin/bitcoin/pull/11997#discussion_r159170073,159170073,src/test/util_tests.cpp
ajtowns,2018-01-03T12:16:43Z,"The assert doesn't have any runtime cost, and documents/enforces the change as well as helping avoid the same mistake happening again, so seems better to have it to me?\n\nAn alternative approach is using templates to directly determine the size of the array:\n\n    template<size_t N>\n    inline void ParseParameters(int argc, const char* (&argv)[N])\n    {\n        assert(argc >= 0 && (siz",https://github.com/bitcoin/bitcoin/pull/11997#discussion_r159412541,159412541,src/test/util_tests.cpp
MarcoFalke,2018-01-03T13:06:08Z,"Since passing an `argc` that does not specify the size of `argv` is only ever used in tests, you could pass `argv_test.size()` instead of `7` by switching to `const std::array<const char*, 7> argv_test = {... braced-init-list ...}`",https://github.com/bitcoin/bitcoin/pull/11997#discussion_r159420368,159420368,src/test/util_tests.cpp
MarcoFalke,2018-01-03T13:14:53Z,"That makes it robust to future changes, but not robust to future changes that remove the trailing or the two trailing args. Imo such buggy changes must be covered by code review. Not excessive documentation. Note that we are talking about a function that spans about 20 lines... If code review does not work on that scale we have far worse issues.",https://github.com/bitcoin/bitcoin/pull/11997#discussion_r159421999,159421999,src/test/util_tests.cpp
ajtowns,2018-01-03T14:15:22Z,Removed,https://github.com/bitcoin/bitcoin/pull/11997#discussion_r159433482,159433482,src/test/util_tests.cpp
