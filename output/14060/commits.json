[
  {
    "sha": "a4edb168b635b6f5c36324e44961cd42cf9bbbaa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNGVkYjE2OGI2MzViNmY1YzM2MzI0ZTQ0OTYxY2Q0MmNmOWJiYmFh",
    "commit": {
      "author": {
        "name": "mruddy",
        "email": "6440430+mruddy@users.noreply.github.com",
        "date": "2018-08-25T00:42:03Z"
      },
      "committer": {
        "name": "mruddy",
        "email": "6440430+mruddy@users.noreply.github.com",
        "date": "2018-10-19T11:36:13Z"
      },
      "message": "ZMQ: add options to configure outbound message high water mark, aka SNDHWM",
      "tree": {
        "sha": "b3d617db74c7b1f86ee79df156139627fb7cabfe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b3d617db74c7b1f86ee79df156139627fb7cabfe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a4edb168b635b6f5c36324e44961cd42cf9bbbaa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4edb168b635b6f5c36324e44961cd42cf9bbbaa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a4edb168b635b6f5c36324e44961cd42cf9bbbaa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4edb168b635b6f5c36324e44961cd42cf9bbbaa/comments",
    "author": {
      "login": "mruddy",
      "id": 6440430,
      "node_id": "MDQ6VXNlcjY0NDA0MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6440430?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mruddy",
      "html_url": "https://github.com/mruddy",
      "followers_url": "https://api.github.com/users/mruddy/followers",
      "following_url": "https://api.github.com/users/mruddy/following{/other_user}",
      "gists_url": "https://api.github.com/users/mruddy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mruddy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mruddy/subscriptions",
      "organizations_url": "https://api.github.com/users/mruddy/orgs",
      "repos_url": "https://api.github.com/users/mruddy/repos",
      "events_url": "https://api.github.com/users/mruddy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mruddy/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mruddy",
      "id": 6440430,
      "node_id": "MDQ6VXNlcjY0NDA0MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6440430?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mruddy",
      "html_url": "https://github.com/mruddy",
      "followers_url": "https://api.github.com/users/mruddy/followers",
      "following_url": "https://api.github.com/users/mruddy/following{/other_user}",
      "gists_url": "https://api.github.com/users/mruddy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mruddy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mruddy/subscriptions",
      "organizations_url": "https://api.github.com/users/mruddy/orgs",
      "repos_url": "https://api.github.com/users/mruddy/repos",
      "events_url": "https://api.github.com/users/mruddy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mruddy/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d387507aeca652a5569825af65243536f2ce26ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d387507aeca652a5569825af65243536f2ce26ea",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d387507aeca652a5569825af65243536f2ce26ea"
      }
    ],
    "stats": {
      "total": 73,
      "additions": 59,
      "deletions": 14
    },
    "files": [
      {
        "sha": "06893407f5fef454ad17da0eabdfa0c0947a6b8d",
        "filename": "contrib/zmq/zmq_sub.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4edb168b635b6f5c36324e44961cd42cf9bbbaa/contrib/zmq/zmq_sub.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4edb168b635b6f5c36324e44961cd42cf9bbbaa/contrib/zmq/zmq_sub.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub.py?ref=a4edb168b635b6f5c36324e44961cd42cf9bbbaa",
        "patch": "@@ -42,6 +42,7 @@ def __init__(self):\n         self.zmqContext = zmq.asyncio.Context()\n \n         self.zmqSubSocket = self.zmqContext.socket(zmq.SUB)\n+        self.zmqSubSocket.setsockopt(zmq.RCVHWM, 0)\n         self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"hashblock\")\n         self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"hashtx\")\n         self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"rawblock\")"
      },
      {
        "sha": "66fdf7887fe97d829270513e83ac2de67f08c0a1",
        "filename": "contrib/zmq/zmq_sub3.4.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4edb168b635b6f5c36324e44961cd42cf9bbbaa/contrib/zmq/zmq_sub3.4.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4edb168b635b6f5c36324e44961cd42cf9bbbaa/contrib/zmq/zmq_sub3.4.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub3.4.py?ref=a4edb168b635b6f5c36324e44961cd42cf9bbbaa",
        "patch": "@@ -46,6 +46,7 @@ def __init__(self):\n         self.zmqContext = zmq.asyncio.Context()\n \n         self.zmqSubSocket = self.zmqContext.socket(zmq.SUB)\n+        self.zmqSubSocket.setsockopt(zmq.RCVHWM, 0)\n         self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"hashblock\")\n         self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"hashtx\")\n         self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"rawblock\")"
      },
      {
        "sha": "7ffc5623b63abcd3f205e308628305994fed7bcc",
        "filename": "doc/zmq.md",
        "status": "modified",
        "additions": 12,
        "deletions": 1,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4edb168b635b6f5c36324e44961cd42cf9bbbaa/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4edb168b635b6f5c36324e44961cd42cf9bbbaa/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=a4edb168b635b6f5c36324e44961cd42cf9bbbaa",
        "patch": "@@ -66,10 +66,21 @@ Currently, the following notifications are supported:\n The socket type is PUB and the address must be a valid ZeroMQ socket\n address. The same address can be used in more than one notification.\n \n+The option to set the PUB socket's outbound message high water mark\n+(SNDHWM) may be set individually for each notification:\n+\n+    -zmqpubhashtxhwm=n\n+    -zmqpubhashblockhwm=n\n+    -zmqpubrawblockhwm=n\n+    -zmqpubrawtxhwm=n\n+\n+The high water mark value must be an integer greater than or equal to 0.\n+\n For instance:\n \n     $ bitcoind -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n-               -zmqpubrawtx=ipc:///tmp/bitcoind.tx.raw\n+               -zmqpubrawtx=ipc:///tmp/bitcoind.tx.raw \\\n+               -zmqpubhashtxhwm=10000\n \n Each PUB notification has a topic and body, where the header\n corresponds to the notification type. For instance, for the"
      },
      {
        "sha": "06f9ace7ec498110f402e6faac67706f05cd586d",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4edb168b635b6f5c36324e44961cd42cf9bbbaa/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4edb168b635b6f5c36324e44961cd42cf9bbbaa/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=a4edb168b635b6f5c36324e44961cd42cf9bbbaa",
        "patch": "@@ -62,6 +62,7 @@\n #include <openssl/crypto.h>\n \n #if ENABLE_ZMQ\n+#include <zmq/zmqabstractnotifier.h>\n #include <zmq/zmqnotificationinterface.h>\n #include <zmq/zmqrpc.h>\n #endif\n@@ -418,11 +419,19 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-zmqpubhashtx=<address>\", \"Enable publish hash transaction in <address>\", false, OptionsCategory::ZMQ);\n     gArgs.AddArg(\"-zmqpubrawblock=<address>\", \"Enable publish raw block in <address>\", false, OptionsCategory::ZMQ);\n     gArgs.AddArg(\"-zmqpubrawtx=<address>\", \"Enable publish raw transaction in <address>\", false, OptionsCategory::ZMQ);\n+    gArgs.AddArg(\"-zmqpubhashblockhwm=<n>\", strprintf(\"Set publish hash block outbound message high water mark (default: %d)\", CZMQAbstractNotifier::DEFAULT_ZMQ_SNDHWM), false, OptionsCategory::ZMQ);\n+    gArgs.AddArg(\"-zmqpubhashtxhwm=<n>\", strprintf(\"Set publish hash transaction outbound message high water mark (default: %d)\", CZMQAbstractNotifier::DEFAULT_ZMQ_SNDHWM), false, OptionsCategory::ZMQ);\n+    gArgs.AddArg(\"-zmqpubrawblockhwm=<n>\", strprintf(\"Set publish raw block outbound message high water mark (default: %d)\", CZMQAbstractNotifier::DEFAULT_ZMQ_SNDHWM), false, OptionsCategory::ZMQ);\n+    gArgs.AddArg(\"-zmqpubrawtxhwm=<n>\", strprintf(\"Set publish raw transaction outbound message high water mark (default: %d)\", CZMQAbstractNotifier::DEFAULT_ZMQ_SNDHWM), false, OptionsCategory::ZMQ);\n #else\n     hidden_args.emplace_back(\"-zmqpubhashblock=<address>\");\n     hidden_args.emplace_back(\"-zmqpubhashtx=<address>\");\n     hidden_args.emplace_back(\"-zmqpubrawblock=<address>\");\n     hidden_args.emplace_back(\"-zmqpubrawtx=<address>\");\n+    hidden_args.emplace_back(\"-zmqpubhashblockhwm=<n>\");\n+    hidden_args.emplace_back(\"-zmqpubhashtxhwm=<n>\");\n+    hidden_args.emplace_back(\"-zmqpubrawblockhwm=<n>\");\n+    hidden_args.emplace_back(\"-zmqpubrawtxhwm=<n>\");\n #endif\n \n     gArgs.AddArg(\"-checkblocks=<n>\", strprintf(\"How many blocks to check at startup (default: %u, 0 = all)\", DEFAULT_CHECKBLOCKS), true, OptionsCategory::DEBUG_TEST);"
      },
      {
        "sha": "0eeef8cf1d6dbb25d497b104e2e388dd60e20760",
        "filename": "src/zmq/zmqabstractnotifier.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4edb168b635b6f5c36324e44961cd42cf9bbbaa/src/zmq/zmqabstractnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4edb168b635b6f5c36324e44961cd42cf9bbbaa/src/zmq/zmqabstractnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqabstractnotifier.cpp?ref=a4edb168b635b6f5c36324e44961cd42cf9bbbaa",
        "patch": "@@ -5,6 +5,7 @@\n #include <zmq/zmqabstractnotifier.h>\n #include <util.h>\n \n+const int CZMQAbstractNotifier::DEFAULT_ZMQ_SNDHWM;\n \n CZMQAbstractNotifier::~CZMQAbstractNotifier()\n {"
      },
      {
        "sha": "887dde7b27124101a3360afe6e183a1a44dbfe65",
        "filename": "src/zmq/zmqabstractnotifier.h",
        "status": "modified",
        "additions": 10,
        "deletions": 1,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4edb168b635b6f5c36324e44961cd42cf9bbbaa/src/zmq/zmqabstractnotifier.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4edb168b635b6f5c36324e44961cd42cf9bbbaa/src/zmq/zmqabstractnotifier.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqabstractnotifier.h?ref=a4edb168b635b6f5c36324e44961cd42cf9bbbaa",
        "patch": "@@ -15,7 +15,9 @@ typedef CZMQAbstractNotifier* (*CZMQNotifierFactory)();\n class CZMQAbstractNotifier\n {\n public:\n-    CZMQAbstractNotifier() : psocket(nullptr) { }\n+    static const int DEFAULT_ZMQ_SNDHWM {1000};\n+\n+    CZMQAbstractNotifier() : psocket(nullptr), outbound_message_high_water_mark(DEFAULT_ZMQ_SNDHWM) { }\n     virtual ~CZMQAbstractNotifier();\n \n     template <typename T>\n@@ -28,6 +30,12 @@ class CZMQAbstractNotifier\n     void SetType(const std::string &t) { type = t; }\n     std::string GetAddress() const { return address; }\n     void SetAddress(const std::string &a) { address = a; }\n+    int GetOutboundMessageHighWaterMark() const { return outbound_message_high_water_mark; }\n+    void SetOutboundMessageHighWaterMark(const int sndhwm) {\n+        if (sndhwm >= 0) {\n+            outbound_message_high_water_mark = sndhwm;\n+        }\n+    }\n \n     virtual bool Initialize(void *pcontext) = 0;\n     virtual void Shutdown() = 0;\n@@ -39,6 +47,7 @@ class CZMQAbstractNotifier\n     void *psocket;\n     std::string type;\n     std::string address;\n+    int outbound_message_high_water_mark; // aka SNDHWM\n };\n \n #endif // BITCOIN_ZMQ_ZMQABSTRACTNOTIFIER_H"
      },
      {
        "sha": "680e38bd77717a41718ce446d959baf84307e679",
        "filename": "src/zmq/zmqnotificationinterface.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4edb168b635b6f5c36324e44961cd42cf9bbbaa/src/zmq/zmqnotificationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4edb168b635b6f5c36324e44961cd42cf9bbbaa/src/zmq/zmqnotificationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.cpp?ref=a4edb168b635b6f5c36324e44961cd42cf9bbbaa",
        "patch": "@@ -59,6 +59,7 @@ CZMQNotificationInterface* CZMQNotificationInterface::Create()\n             CZMQAbstractNotifier *notifier = factory();\n             notifier->SetType(entry.first);\n             notifier->SetAddress(address);\n+            notifier->SetOutboundMessageHighWaterMark(static_cast<int>(gArgs.GetArg(arg + \"hwm\", CZMQAbstractNotifier::DEFAULT_ZMQ_SNDHWM)));\n             notifiers.push_back(notifier);\n         }\n     }\n@@ -102,11 +103,11 @@ bool CZMQNotificationInterface::Initialize()\n         CZMQAbstractNotifier *notifier = *i;\n         if (notifier->Initialize(pcontext))\n         {\n-            LogPrint(BCLog::ZMQ, \"  Notifier %s ready (address = %s)\\n\", notifier->GetType(), notifier->GetAddress());\n+            LogPrint(BCLog::ZMQ, \"zmq: Notifier %s ready (address = %s)\\n\", notifier->GetType(), notifier->GetAddress());\n         }\n         else\n         {\n-            LogPrint(BCLog::ZMQ, \"  Notifier %s failed (address = %s)\\n\", notifier->GetType(), notifier->GetAddress());\n+            LogPrint(BCLog::ZMQ, \"zmq: Notifier %s failed (address = %s)\\n\", notifier->GetType(), notifier->GetAddress());\n             break;\n         }\n     }\n@@ -128,7 +129,7 @@ void CZMQNotificationInterface::Shutdown()\n         for (std::list<CZMQAbstractNotifier*>::iterator i=notifiers.begin(); i!=notifiers.end(); ++i)\n         {\n             CZMQAbstractNotifier *notifier = *i;\n-            LogPrint(BCLog::ZMQ, \"   Shutdown notifier %s at %s\\n\", notifier->GetType(), notifier->GetAddress());\n+            LogPrint(BCLog::ZMQ, \"zmq: Shutdown notifier %s at %s\\n\", notifier->GetType(), notifier->GetAddress());\n             notifier->Shutdown();\n         }\n         zmq_ctx_term(pcontext);"
      },
      {
        "sha": "280cd1642e0609ec905bf80abf22715cb967b093",
        "filename": "src/zmq/zmqpublishnotifier.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 3,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4edb168b635b6f5c36324e44961cd42cf9bbbaa/src/zmq/zmqpublishnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4edb168b635b6f5c36324e44961cd42cf9bbbaa/src/zmq/zmqpublishnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.cpp?ref=a4edb168b635b6f5c36324e44961cd42cf9bbbaa",
        "patch": "@@ -76,8 +76,18 @@ bool CZMQAbstractPublishNotifier::Initialize(void *pcontext)\n             return false;\n         }\n \n-        int rc = zmq_bind(psocket, address.c_str());\n-        if (rc!=0)\n+        LogPrint(BCLog::ZMQ, \"zmq: Outbound message high water mark for %s at %s is %d\\n\", type, address, outbound_message_high_water_mark);\n+\n+        int rc = zmq_setsockopt(psocket, ZMQ_SNDHWM, &outbound_message_high_water_mark, sizeof(outbound_message_high_water_mark));\n+        if (rc != 0)\n+        {\n+            zmqError(\"Failed to set outbound message high water mark\");\n+            zmq_close(psocket);\n+            return false;\n+        }\n+\n+        rc = zmq_bind(psocket, address.c_str());\n+        if (rc != 0)\n         {\n             zmqError(\"Failed to bind address\");\n             zmq_close(psocket);\n@@ -120,7 +130,7 @@ void CZMQAbstractPublishNotifier::Shutdown()\n \n     if (count == 1)\n     {\n-        LogPrint(BCLog::ZMQ, \"Close socket at address %s\\n\", address);\n+        LogPrint(BCLog::ZMQ, \"zmq: Close socket at address %s\\n\", address);\n         int linger = 0;\n         zmq_setsockopt(psocket, ZMQ_LINGER, &linger, sizeof(linger));\n         zmq_close(psocket);"
      },
      {
        "sha": "278fdb94d2ccdc8babd6fe02e9fa1339b47024a9",
        "filename": "src/zmq/zmqpublishnotifier.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4edb168b635b6f5c36324e44961cd42cf9bbbaa/src/zmq/zmqpublishnotifier.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4edb168b635b6f5c36324e44961cd42cf9bbbaa/src/zmq/zmqpublishnotifier.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.h?ref=a4edb168b635b6f5c36324e44961cd42cf9bbbaa",
        "patch": "@@ -12,7 +12,7 @@ class CBlockIndex;\n class CZMQAbstractPublishNotifier : public CZMQAbstractNotifier\n {\n private:\n-    uint32_t nSequence; //!< upcounting per message sequence number\n+    uint32_t nSequence {0U}; //!< upcounting per message sequence number\n \n public:\n "
      },
      {
        "sha": "0e0b74537546b1be694eaf4201d4966c859ba6ec",
        "filename": "src/zmq/zmqrpc.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4edb168b635b6f5c36324e44961cd42cf9bbbaa/src/zmq/zmqrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4edb168b635b6f5c36324e44961cd42cf9bbbaa/src/zmq/zmqrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqrpc.cpp?ref=a4edb168b635b6f5c36324e44961cd42cf9bbbaa",
        "patch": "@@ -22,7 +22,8 @@ UniValue getzmqnotifications(const JSONRPCRequest& request)\n             \"[\\n\"\n             \"  {                        (json object)\\n\"\n             \"    \\\"type\\\": \\\"pubhashtx\\\",   (string) Type of notification\\n\"\n-            \"    \\\"address\\\": \\\"...\\\"       (string) Address of the publisher\\n\"\n+            \"    \\\"address\\\": \\\"...\\\",      (string) Address of the publisher\\n\"\n+            \"    \\\"hwm\\\": n                 (numeric) Outbound message high water mark\\n\"\n             \"  },\\n\"\n             \"  ...\\n\"\n             \"]\\n\"\n@@ -38,6 +39,7 @@ UniValue getzmqnotifications(const JSONRPCRequest& request)\n             UniValue obj(UniValue::VOBJ);\n             obj.pushKV(\"type\", n->GetType());\n             obj.pushKV(\"address\", n->GetAddress());\n+            obj.pushKV(\"hwm\", n->GetOutboundMessageHighWaterMark());\n             result.push_back(obj);\n         }\n     }"
      },
      {
        "sha": "037cdaf38df9755c8123db67c61240b4aaf0fa1a",
        "filename": "test/functional/interface_zmq.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4edb168b635b6f5c36324e44961cd42cf9bbbaa/test/functional/interface_zmq.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4edb168b635b6f5c36324e44961cd42cf9bbbaa/test/functional/interface_zmq.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_zmq.py?ref=a4edb168b635b6f5c36324e44961cd42cf9bbbaa",
        "patch": "@@ -121,10 +121,10 @@ def _zmq_test(self):\n \n         self.log.info(\"Test the getzmqnotifications RPC\")\n         assert_equal(self.nodes[0].getzmqnotifications(), [\n-            {\"type\": \"pubhashblock\", \"address\": ADDRESS},\n-            {\"type\": \"pubhashtx\", \"address\": ADDRESS},\n-            {\"type\": \"pubrawblock\", \"address\": ADDRESS},\n-            {\"type\": \"pubrawtx\", \"address\": ADDRESS},\n+            {\"type\": \"pubhashblock\", \"address\": ADDRESS, \"hwm\": 1000},\n+            {\"type\": \"pubhashtx\", \"address\": ADDRESS, \"hwm\": 1000},\n+            {\"type\": \"pubrawblock\", \"address\": ADDRESS, \"hwm\": 1000},\n+            {\"type\": \"pubrawtx\", \"address\": ADDRESS, \"hwm\": 1000},\n         ])\n \n         assert_equal(self.nodes[1].getzmqnotifications(), [])"
      }
    ]
  }
]