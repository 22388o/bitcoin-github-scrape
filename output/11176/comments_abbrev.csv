promag,2017-08-28T11:43:45Z,"Should the flag mention SHA256 like `--enable-asm-sha256`?\n\nEither way LGTM.",https://github.com/bitcoin/bitcoin/pull/11176#issuecomment-325331081,325331081,
laanwj,2017-08-28T12:20:53Z,"> Should the flag mention SHA256 like --enable-asm-sha256?\n\nNo, I think we should have a general asm flag, build-side, as this does. This is similar to OpenSSL's flag to use assembly or not. Something else creates too many combinations to test, and I don't see why it would be useful.\n(besides testing, but run-time selection is much more useful for that)",https://github.com/bitcoin/bitcoin/pull/11176#issuecomment-325338361,325338361,
promag,2017-08-28T14:10:07Z,"Ok, just had to ask.\n\nutACK 538cc0c.",https://github.com/bitcoin/bitcoin/pull/11176#issuecomment-325364086,325364086,
kallewoof,2017-08-28T14:42:49Z,"If this is meant for 0.15, the [release notes](https://github.com/bitcoin/bitcoin/blob/0.15/doc/release-notes.md) need to be updated. They currently read\n\n> SHA256 hashing has been optimized for architectures supporting SSE 4 (See PR 10182). SHA256 is around 50% faster on supported hardware, which results in around 5% faster IBD and block validation. In version 0.15, SHA256 hardware optimizati",https://github.com/bitcoin/bitcoin/pull/11176#issuecomment-325373282,325373282,
laanwj,2017-08-28T14:44:26Z,"No, this is not meant for 0.15, certainly not for 0.15.0\n\n> Now that 0.15 is branched off, enable assembler SHA256 optimizations by default",https://github.com/bitcoin/bitcoin/pull/11176#issuecomment-325373739,325373739,
kallewoof,2017-08-28T14:58:02Z,Sorry about that. I should've read the PR message more closely.,https://github.com/bitcoin/bitcoin/pull/11176#issuecomment-325377809,325377809,
sipa,2017-08-28T17:49:33Z,"@laanwj There are plenty more versions of SHA256 to add (for starters, a RORX version, a SHA-NI version, but later perhaps a 4-way parallel SSE4 or 8-way parallel AVX2 version). Do we all want to include them under ""--enable-asm"", or will they first go into a reinstated ""--enable-experimental-asm"" before being promoted?",https://github.com/bitcoin/bitcoin/pull/11176#issuecomment-325425597,325425597,
laanwj,2017-08-28T18:55:38Z,"> Do we all want to include them under ""--enable-asm"" or will they first go into a reinstated ""--enable-experimental-asm"" before being promoted?\n\nBoth are valid options, we should probably decide on a case by case basis - depending on how much we trust the code, how long it can be in master until the release.",https://github.com/bitcoin/bitcoin/pull/11176#issuecomment-325445416,325445416,
fanquake,2017-09-02T08:38:19Z,utACK 538cc0c,https://github.com/bitcoin/bitcoin/pull/11176#issuecomment-326731277,326731277,
droark,2017-12-12T23:03:49Z,"Posthumous review comment: Is USE_ASM meant to be a catch-all for any other assembly optimizations added in the future, or is it solely for the SHA256 optimizations? I ask because the language in the changes is a little ambiguous (IMO). I'd like to fix that. I just don't want to step on toes first.\n\nThanks.",https://github.com/bitcoin/bitcoin/pull/11176#issuecomment-351224433,351224433,
