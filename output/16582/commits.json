[
  {
    "sha": "fafe78f6aedfc0ac865379c412a87670b6211021",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWZlNzhmNmFlZGZjMGFjODY1Mzc5YzQxMmE4NzY3MGI2MjExMDIx",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-08-10T15:32:55Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-08-15T15:11:45Z"
      },
      "message": "ci: Rename .travis/ to ./ci/",
      "tree": {
        "sha": "a0a9b63b6fc3db34075175f160481cba5409fbde",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a0a9b63b6fc3db34075175f160481cba5409fbde"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fafe78f6aedfc0ac865379c412a87670b6211021",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgxBQv/Tt9MW/OUql/Dj49NTsWlfH2KP++M79JDda5TII9Ic3Pen8KrNbem8MeP\ndFAXvPrySiCrwdQXVzaR7iIaRWtan9lWMogqh7Wf1iW67+IGhokA67mbdi0Iyg9N\noSgNA/bDWxjuf4d67oO3WKbS+KdOYgvvrN8VnYqdPErCc2SUyp5iTYUM2iYNao4U\n5Gkkkn9wIyJ2ng2pO79SJp3X4F2xwujUjFwbUzWrqnVDDfH1m77IWU0Ujyg10Qf2\nU95zko+raWHYFYrO9n70MN3kGcoEMPCnJhtudL+fJFhLIk6e4RdVOYJ1Bg1uRJ6A\nkx05SF/KB9IhDDHRO0gOk+TOFLR9vXyLo87XcM5U1/0B027aL1Z7tJib3T6PsiTk\njcZ7QURtbNYC0MA4fmnMewW3Hd1h99VRg1TU2A46cJuk1xwozqpbJl0Y4G40RZAx\nqzBN7lcOWP2VZmpothulucuAl7vmxvloJE210ENwNgqd8OYf78S26LRsN3/OzXcO\n4SnfdEfE\n=zI9R\n-----END PGP SIGNATURE-----",
        "payload": "tree a0a9b63b6fc3db34075175f160481cba5409fbde\nparent 8bd5e0af9983c6892d4076881d634cc524d643fd\nauthor MarcoFalke <falke.marco@gmail.com> 1565451175 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1565881905 -0400\n\nci: Rename .travis/ to ./ci/\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fafe78f6aedfc0ac865379c412a87670b6211021",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fafe78f6aedfc0ac865379c412a87670b6211021",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fafe78f6aedfc0ac865379c412a87670b6211021/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8bd5e0af9983c6892d4076881d634cc524d643fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8bd5e0af9983c6892d4076881d634cc524d643fd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8bd5e0af9983c6892d4076881d634cc524d643fd"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 19,
      "deletions": 19
    },
    "files": [
      {
        "sha": "b54ed67b020938417e81c43cda4e042c81fc6bf4",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fafe78f6aedfc0ac865379c412a87670b6211021/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fafe78f6aedfc0ac865379c412a87670b6211021/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=fafe78f6aedfc0ac865379c412a87670b6211021",
        "patch": "@@ -56,19 +56,19 @@ env:\n     - DOCKER_PACKAGES=\"build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache\"\n     - CACHE_ERR_MSG=\"Error! Initial build successful, but not enough time remains to run later build stages and tests. Please manually re-run this job by using the travis restart button or asking a bitcoin maintainer to restart. The next run should not time out because the build cache has been saved.\"\n before_install:\n-  - set -o errexit; source .travis/test_03_before_install.sh\n+  - set -o errexit; source ./ci/test/03_before_install.sh\n install:\n-  - set -o errexit; source .travis/test_04_install.sh\n+  - set -o errexit; source ./ci/test/04_install.sh\n before_script:\n-  - set -o errexit; source .travis/test_05_before_script.sh\n+  - set -o errexit; source ./ci/test/05_before_script.sh\n script:\n   - export CONTINUE=1\n   - if [ $SECONDS -gt 1200 ]; then export CONTINUE=0; fi  # Likely the depends build took very long\n   - if [ $TRAVIS_REPO_SLUG = \"bitcoin/bitcoin\" ]; then export CONTINUE=1; fi  # Whitelisted repo (90 minutes build time)\n-  - if [ $CONTINUE = \"1\" ]; then set -o errexit; source .travis/test_06_script_a.sh; else set +o errexit; echo \"$CACHE_ERR_MSG\"; false; fi\n+  - if [ $CONTINUE = \"1\" ]; then set -o errexit; source ./ci/test/06_script_a.sh; else set +o errexit; echo \"$CACHE_ERR_MSG\"; false; fi\n   - if [ $SECONDS -gt 2000 ]; then export CONTINUE=0; fi  # Likely the build took very long; The tests take about 1000s, so we should abort if we have less than 50*60-1000=2000s left\n   - if [ $TRAVIS_REPO_SLUG = \"bitcoin/bitcoin\" ]; then export CONTINUE=1; fi  # Whitelisted repo (90 minutes build time)\n-  - if [ $CONTINUE = \"1\" ]; then set -o errexit; source .travis/test_06_script_b.sh; else set +o errexit; echo \"$CACHE_ERR_MSG\"; false; fi\n+  - if [ $CONTINUE = \"1\" ]; then set -o errexit; source ./ci/test/06_script_b.sh; else set +o errexit; echo \"$CACHE_ERR_MSG\"; false; fi\n after_script:\n   - echo $TRAVIS_COMMIT_RANGE\n   - echo $TRAVIS_COMMIT_LOG\n@@ -82,11 +82,11 @@ jobs:\n       language: python\n       python: '3.5' # Oldest supported version according to doc/dependencies.md\n       install:\n-        - set -o errexit; source .travis/lint_04_install.sh\n+        - set -o errexit; source ./ci/lint/04_install.sh\n       before_script:\n-        - set -o errexit; source .travis/lint_05_before_script.sh\n+        - set -o errexit; source ./ci/lint/05_before_script.sh\n       script:\n-        - set -o errexit; source .travis/lint_06_script.sh\n+        - set -o errexit; source ./ci/lint/06_script.sh\n \n     - stage: extended-lint\n       name: 'extended lint [runtime >= 60 seconds]'\n@@ -95,11 +95,11 @@ jobs:\n       language: python\n       python: '3.5'\n       install:\n-        - set -o errexit; source .travis/extended_lint_04_install.sh\n+        - set -o errexit; source ./ci/extended_lint/04_install.sh\n       before_script:\n-        - set -o errexit; source .travis/lint_05_before_script.sh\n+        - set -o errexit; source ./ci/lint/05_before_script.sh\n       script:\n-        - set -o errexit; source .travis/extended_lint_06_script.sh\n+        - set -o errexit; source ./ci/extended_lint/06_script.sh\n \n     - stage: test\n       name: 'ARM  [GOAL: install]  [no unit or functional tests]'"
      },
      {
        "sha": "21d1b9cc03aea1599db7dd258c945f5bce240067",
        "filename": ".travis/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8bd5e0af9983c6892d4076881d634cc524d643fd/.travis/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8bd5e0af9983c6892d4076881d634cc524d643fd/.travis/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis/README.md?ref=8bd5e0af9983c6892d4076881d634cc524d643fd",
        "patch": "@@ -1,8 +0,0 @@\n-## travis build scripts\n-\n-The `.travis` directory contains scripts for each build step in each build stage.\n-Currently the travis build defines two stages `lint` and `test`. Each stage has\n-it's own [lifecycle](https://docs.travis-ci.com/user/customizing-the-build/#the-build-lifecycle).\n-Every script in here is named and numbered according to which stage and lifecycle\n-step it belongs to.\n-"
      },
      {
        "sha": "0aed238c776ae1b969dbb1c964df05644aea7c3e",
        "filename": "ci/README.md",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fafe78f6aedfc0ac865379c412a87670b6211021/ci/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fafe78f6aedfc0ac865379c412a87670b6211021/ci/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/README.md?ref=fafe78f6aedfc0ac865379c412a87670b6211021",
        "patch": "@@ -0,0 +1,8 @@\n+## ci scripts\n+\n+This directory contains scripts for each build step in each build stage.\n+\n+Currently three stages `lint`, `extended_lint` and `test` are defined. Each stage has its own lifecycle, similar to the\n+[Travis CI lifecycle](https://docs.travis-ci.com/user/job-lifecycle#the-job-lifecycle).  Every script in here is named\n+and numbered according to which stage and lifecycle step it belongs to.\n+"
      },
      {
        "sha": "123d874a84da4b8531edf5e51052b581688cef27",
        "filename": "ci/extended_lint/04_install.sh",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fafe78f6aedfc0ac865379c412a87670b6211021/ci/extended_lint/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fafe78f6aedfc0ac865379c412a87670b6211021/ci/extended_lint/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/extended_lint/04_install.sh?ref=fafe78f6aedfc0ac865379c412a87670b6211021",
        "previous_filename": ".travis/extended_lint_04_install.sh"
      },
      {
        "sha": "e8228c9c4d912c81e16b772e79e85231a2b6c1b9",
        "filename": "ci/extended_lint/06_script.sh",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fafe78f6aedfc0ac865379c412a87670b6211021/ci/extended_lint/06_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fafe78f6aedfc0ac865379c412a87670b6211021/ci/extended_lint/06_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/extended_lint/06_script.sh?ref=fafe78f6aedfc0ac865379c412a87670b6211021",
        "previous_filename": ".travis/extended_lint_06_script.sh"
      },
      {
        "sha": "20bff368a583d1dfe164ca8bdb4a00f1dc36e682",
        "filename": "ci/lint/04_install.sh",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fafe78f6aedfc0ac865379c412a87670b6211021/ci/lint/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fafe78f6aedfc0ac865379c412a87670b6211021/ci/lint/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/04_install.sh?ref=fafe78f6aedfc0ac865379c412a87670b6211021",
        "previous_filename": ".travis/lint_04_install.sh"
      },
      {
        "sha": "28bcbb47f748986c8e95bb87abd5a45faef75e1b",
        "filename": "ci/lint/05_before_script.sh",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fafe78f6aedfc0ac865379c412a87670b6211021/ci/lint/05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fafe78f6aedfc0ac865379c412a87670b6211021/ci/lint/05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/05_before_script.sh?ref=fafe78f6aedfc0ac865379c412a87670b6211021",
        "previous_filename": ".travis/lint_05_before_script.sh"
      },
      {
        "sha": "c7dea599dcd7e8769e088a561372195986a3693b",
        "filename": "ci/lint/06_script.sh",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fafe78f6aedfc0ac865379c412a87670b6211021/ci/lint/06_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fafe78f6aedfc0ac865379c412a87670b6211021/ci/lint/06_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/06_script.sh?ref=fafe78f6aedfc0ac865379c412a87670b6211021",
        "previous_filename": ".travis/lint_06_script.sh"
      },
      {
        "sha": "3c9fcf3f983ae0cd200bc86a9b10b603ee3e6a4f",
        "filename": "ci/test/03_before_install.sh",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fafe78f6aedfc0ac865379c412a87670b6211021/ci/test/03_before_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fafe78f6aedfc0ac865379c412a87670b6211021/ci/test/03_before_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/03_before_install.sh?ref=fafe78f6aedfc0ac865379c412a87670b6211021",
        "previous_filename": ".travis/test_03_before_install.sh"
      },
      {
        "sha": "319f2c5b212526193ff18546bd34cde8898cdbd2",
        "filename": "ci/test/04_install.sh",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fafe78f6aedfc0ac865379c412a87670b6211021/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fafe78f6aedfc0ac865379c412a87670b6211021/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=fafe78f6aedfc0ac865379c412a87670b6211021",
        "previous_filename": ".travis/test_04_install.sh"
      },
      {
        "sha": "516d3fc0428ba30588a1be864be324551318dcd4",
        "filename": "ci/test/05_before_script.sh",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fafe78f6aedfc0ac865379c412a87670b6211021/ci/test/05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fafe78f6aedfc0ac865379c412a87670b6211021/ci/test/05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/05_before_script.sh?ref=fafe78f6aedfc0ac865379c412a87670b6211021",
        "previous_filename": ".travis/test_05_before_script.sh"
      },
      {
        "sha": "8cc593f936521e92b0a5f82b58955535c9499ce8",
        "filename": "ci/test/06_script_a.sh",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fafe78f6aedfc0ac865379c412a87670b6211021/ci/test/06_script_a.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fafe78f6aedfc0ac865379c412a87670b6211021/ci/test/06_script_a.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_a.sh?ref=fafe78f6aedfc0ac865379c412a87670b6211021",
        "previous_filename": ".travis/test_06_script_a.sh"
      },
      {
        "sha": "e40055a6ee130fddb135debd2159fc2a2f84d555",
        "filename": "ci/test/06_script_b.sh",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fafe78f6aedfc0ac865379c412a87670b6211021/ci/test/06_script_b.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fafe78f6aedfc0ac865379c412a87670b6211021/ci/test/06_script_b.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_b.sh?ref=fafe78f6aedfc0ac865379c412a87670b6211021",
        "previous_filename": ".travis/test_06_script_b.sh"
      }
    ]
  },
  {
    "sha": "fa0aac0f43a108a88b03a346464ecda4ae2cf630",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTBhYWMwZjQzYTEwOGE4OGIwM2EzNDY0NjRlY2RhNGFlMmNmNjMw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-08-11T14:08:42Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-08-15T15:12:22Z"
      },
      "message": "ci: Add retry\n\nFrom: https://github.com/kadwanev/retry/tree/a1b1826bdb0a78189d5c70c858dc676f5133b1d7",
      "tree": {
        "sha": "6981dcb76ddcb5480c5e9e3e56d8f12b3d5c713b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6981dcb76ddcb5480c5e9e3e56d8f12b3d5c713b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa0aac0f43a108a88b03a346464ecda4ae2cf630",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUj4UQv+KX1q/vgk7nu9/ff3c+fU1VCF2ytieSeNzB6UdXcGP6jFQR5klf4XhVg7\nAxhkYoWOs4fMoyzhV6wgfcT00fAnwMx9nuxRJigYN8zkScMrSUsaeie8e9OcgKsP\n6f4fvCgAWZ58bBpMxbRfjDxeZUZph9rM6pJkn834H3gwcCS1Cr0vmkEevWb2awEM\ngcneC7y6E5ozLng+vD026nwa+zQrCNr5zu1fAnGaQfoawzbd4UANcCoxoeZQlyTO\n0OX2HW6i7ZMtKtjdMzDAXNtSpVPHWphyY6tnaIiacLuJLJX0++2X7CL89swFonXw\n3cxkJLvN04JgBv2ZP8Li21sSrM149Z3O2otWIIRfLu5fK5TaViaan6cylfY7vnS+\ny9pT/BmaQ31iAA99KSjYZHR0voinOgfS/MNqSnDhVBx+aUSRZBKTMvRfZEjj20Xf\nwK9BBNP/sMkSSskHe1xIwinON5UXZ2RMZ9Uj75TQroDqgWJalDLnYkLM4rco0WuF\nlevG9b0t\n=M7Pw\n-----END PGP SIGNATURE-----",
        "payload": "tree 6981dcb76ddcb5480c5e9e3e56d8f12b3d5c713b\nparent fafe78f6aedfc0ac865379c412a87670b6211021\nauthor MarcoFalke <falke.marco@gmail.com> 1565532522 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1565881942 -0400\n\nci: Add retry\n\nFrom: https://github.com/kadwanev/retry/tree/a1b1826bdb0a78189d5c70c858dc676f5133b1d7\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa0aac0f43a108a88b03a346464ecda4ae2cf630",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa0aac0f43a108a88b03a346464ecda4ae2cf630",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa0aac0f43a108a88b03a346464ecda4ae2cf630/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fafe78f6aedfc0ac865379c412a87670b6211021",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fafe78f6aedfc0ac865379c412a87670b6211021",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fafe78f6aedfc0ac865379c412a87670b6211021"
      }
    ],
    "stats": {
      "total": 286,
      "additions": 286,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ead2271f64a3bf70c7bfd989e3cf2c5d37ec81b6",
        "filename": "ci/retry/README.md",
        "status": "added",
        "additions": 123,
        "deletions": 0,
        "changes": 123,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa0aac0f43a108a88b03a346464ecda4ae2cf630/ci/retry/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa0aac0f43a108a88b03a346464ecda4ae2cf630/ci/retry/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/retry/README.md?ref=fa0aac0f43a108a88b03a346464ecda4ae2cf630",
        "patch": "@@ -0,0 +1,123 @@\n+retry - The command line retry tool\n+------------------------------------------\n+\n+Retry any shell command with exponential backoff or constant delay.\n+\n+### Instructions\n+\n+Install:\n+\n+retry is a shell script, so drop it somewhere and make sure it's added to your $PATH. Or you can use the following one-liner:\n+\n+```sh\n+sudo sh -c \"curl https://raw.githubusercontent.com/kadwanev/retry/master/retry -o /usr/local/bin/retry && chmod +x /usr/local/bin/retry\"\n+```\n+\n+If you're on OS X, retry is also on Homebrew:\n+\n+```\n+brew pull 27283\n+brew install retry\n+```\n+Not popular enough for homebrew-core. Please star this project to help.\n+\n+### Usage\n+\n+Help:\n+\n+`retry -?`\n+\n+    Usage: retry [options] -- execute command\n+        -h, -?, --help\n+        -v, --verbose                    Verbose output\n+        -t, --tries=#                    Set max retries: Default 10\n+        -s, --sleep=secs                 Constant sleep amount (seconds)\n+        -m, --min=secs                   Exponenetial Backoff: minimum sleep amount (seconds): Default 0.3\n+        -x, --max=secs                   Exponenetial Backoff: maximum sleep amount (seconds): Default 60\n+        -f, --fail=\"script +cmds\"        Fail Script: run in case of final failure\n+    \n+### Examples\n+\n+No problem:\n+\n+`retry echo u work good`\n+\n+    u work good\n+\n+Test functionality:\n+\n+`retry 'echo \"y u no work\"; false'`\n+\n+    y u no work\n+    Before retry #1: sleeping 0.3 seconds\n+    y u no work\n+    Before retry #2: sleeping 0.6 seconds\n+    y u no work\n+    Before retry #3: sleeping 1.2 seconds\n+    y u no work\n+    Before retry #4: sleeping 2.4 seconds\n+    y u no work\n+    Before retry #5: sleeping 4.8 seconds\n+    y u no work\n+    Before retry #6: sleeping 9.6 seconds\n+    y u no work\n+    Before retry #7: sleeping 19.2 seconds\n+    y u no work\n+    Before retry #8: sleeping 38.4 seconds\n+    y u no work\n+    Before retry #9: sleeping 60.0 seconds\n+    y u no work\n+    Before retry #10: sleeping 60.0 seconds\n+    y u no work\n+    etc..\n+\n+Limit retries:\n+\n+`retry -t 4 'echo \"y u no work\"; false'`\n+\n+    y u no work\n+    Before retry #1: sleeping 0.3 seconds\n+    y u no work\n+    Before retry #2: sleeping 0.6 seconds\n+    y u no work\n+    Before retry #3: sleeping 1.2 seconds\n+    y u no work\n+    Before retry #4: sleeping 2.4 seconds\n+    y u no work\n+    Retries exhausted\n+\n+Bad command:\n+\n+`retry poop`\n+\n+    bash: poop: command not found\n+\n+Fail command:\n+\n+`retry -t 3 -f 'echo \"oh poopsickles\"' 'echo \"y u no work\"; false'`\n+\n+    y u no work\n+    Before retry #1: sleeping 0.3 seconds\n+    y u no work\n+    Before retry #2: sleeping 0.6 seconds\n+    y u no work\n+    Before retry #3: sleeping 1.2 seconds\n+    y u no work\n+    Retries exhausted, running fail script\n+    oh poopsickles\n+\n+Last attempt passed:\n+\n+`retry -t 3 -- 'if [ $RETRY_ATTEMPT -eq 3 ]; then echo Passed at attempt $RETRY_ATTEMPT; true; else echo Failed at attempt $RETRY_ATTEMPT; false; fi;'`\n+\n+    Failed at attempt 0\n+    Before retry #1: sleeping 0.3 seconds\n+    Failed at attempt 1\n+    Before retry #2: sleeping 0.6 seconds\n+    Failed at attempt 2\n+    Before retry #3: sleeping 1.2 seconds\n+    Passed at attempt 3\n+\n+### License\n+\n+Apache 2.0 - go nuts"
      },
      {
        "sha": "03dc180ef2320bc092c1887e19dfe7baea9da26f",
        "filename": "ci/retry/retry",
        "status": "added",
        "additions": 163,
        "deletions": 0,
        "changes": 163,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa0aac0f43a108a88b03a346464ecda4ae2cf630/ci/retry/retry",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa0aac0f43a108a88b03a346464ecda4ae2cf630/ci/retry/retry",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/retry/retry?ref=fa0aac0f43a108a88b03a346464ecda4ae2cf630",
        "patch": "@@ -0,0 +1,163 @@\n+#!/usr/bin/env bash\n+\n+GETOPT_BIN=$IN_GETOPT_BIN\n+GETOPT_BIN=${GETOPT_BIN:-getopt}\n+\n+__sleep_amount() {\n+  if [ -n \"$constant_sleep\" ]; then \n+    sleep_time=$constant_sleep\n+  else\n+    #TODO: check for awk\n+    #TODO: check if user would rather use one of the other possible dependencies: python, ruby, bc, dc\n+    sleep_time=`awk \"BEGIN {t = $min_sleep * $(( (1<<($attempts -1)) )); print (t > $max_sleep ? $max_sleep : t)}\"`\n+  fi\n+}\n+\n+__log_out() {\n+  echo \"$1\" 1>&2\n+}\n+\n+# Paramters: max_tries min_sleep max_sleep constant_sleep fail_script EXECUTION_COMMAND\n+retry()\n+{\n+  local max_tries=\"$1\"; shift\n+  local min_sleep=\"$1\"; shift\n+  local max_sleep=\"$1\"; shift\n+  local constant_sleep=\"$1\"; shift\n+  local fail_script=\"$1\"; shift\n+  if [ -n \"$VERBOSE\" ]; then\n+    __log_out \"Retry Parameters: max_tries=$max_tries min_sleep=$min_sleep max_sleep=$max_sleep constant_sleep=$constant_sleep\"\n+    if [ -n \"$fail_script\" ]; then __log_out \"Fail script: $fail_script\"; fi\n+    __log_out \"\"\n+    __log_out \"Execution Command: $*\"\n+    __log_out \"\"\n+  fi\n+\n+  local attempts=0\n+  local return_code=1\n+\n+\n+  while [[ $return_code -ne 0 && $attempts -le $max_tries ]]; do\n+    if [ $attempts -gt 0 ]; then\n+      __sleep_amount\n+      __log_out \"Before retry #$attempts: sleeping $sleep_time seconds\"\n+      sleep $sleep_time\n+    fi\n+\n+    P=\"$1\"\n+    for param in \"${@:2}\"; do P=\"$P '$param'\"; done\n+    #TODO: replace single quotes in each arg with '\"'\"' ?\n+    export RETRY_ATTEMPT=$attempts\n+    bash -c \"$P\"\n+    return_code=$?\n+    #__log_out \"Process returned $return_code on attempt $attempts\"\n+    if [ $return_code -eq 127 ]; then\n+      # command not found\n+      exit $return_code\n+    elif [ $return_code -ne 0 ]; then\n+      attempts=$[$attempts +1]\n+    fi\n+  done\n+\n+  if [ $attempts -gt $max_tries ]; then\n+    if [ -n \"$fail_script\" ]; then\n+      __log_out \"Retries exhausted, running fail script\"\n+      eval $fail_script\n+    else\n+      __log_out \"Retries exhausted\"\n+    fi\n+  fi\n+\n+  exit $return_code\n+}\n+\n+# If we're being sourced, don't worry about such things\n+if [ \"$BASH_SOURCE\" == \"$0\" ]; then\n+  # Prints the help text\n+  help()\n+  {\n+    local retry=$(basename $0)\n+    cat <<EOF\n+Usage: $retry [options] -- execute command\n+    -h, -?, --help\n+    -v, --verbose                    Verbose output\n+    -t, --tries=#                    Set max retries: Default 10\n+    -s, --sleep=secs                 Constant sleep amount (seconds)\n+    -m, --min=secs                   Exponenetial Backoff: minimum sleep amount (seconds): Default 0.3\n+    -x, --max=secs                   Exponenetial Backoff: maximum sleep amount (seconds): Default 60\n+    -f, --fail=\"script +cmds\"        Fail Script: run in case of final failure\n+EOF\n+  }\n+\n+  # show help for no arguments if stdin is a terminal\n+  if { [ -z \"$1\" ] && [ -t 0 ] ; } || [ \"$1\" == '-h' ] || [ \"$1\" == '-?' ] || [ \"$1\" == '--help' ]\n+  then\n+    help\n+    exit 0\n+  fi\n+\n+  $GETOPT_BIN --test > /dev/null\n+  if [[ $? -ne 4 ]]; then\n+      echo \"I\u2019m sorry, 'getopt --test' failed in this environment. Please load GNU getopt.\"\n+      exit 1\n+  fi\n+\n+  OPTIONS=vt:s:m:x:f:\n+  LONGOPTIONS=verbose,tries:,sleep:,min:,max:,fail:\n+\n+  PARSED=$($GETOPT_BIN --options=\"$OPTIONS\" --longoptions=\"$LONGOPTIONS\" --name \"$0\" -- \"$@\")\n+  if [[ $? -ne 0 ]]; then\n+    # e.g. $? == 1\n+    #  then getopt has complained about wrong arguments to stdout\n+    exit 2\n+  fi\n+  # read getopt\u2019s output this way to handle the quoting right:\n+  eval set -- \"$PARSED\"\n+\n+  max_tries=10\n+  min_sleep=0.3\n+  max_sleep=60.0\n+  constant_sleep=\n+  fail_script=\n+\n+  # now enjoy the options in order and nicely split until we see --\n+  while true; do\n+      case \"$1\" in\n+          -v|--verbose)\n+              VERBOSE=true\n+              shift\n+              ;;\n+          -t|--tries)\n+              max_tries=\"$2\"\n+              shift 2\n+              ;;\n+          -s|--sleep)\n+              constant_sleep=\"$2\"\n+              shift 2\n+              ;;\n+          -m|--min)\n+              min_sleep=\"$2\"\n+              shift 2\n+              ;;\n+          -x|--max)\n+              max_sleep=\"$2\"\n+              shift 2\n+              ;;\n+          -f|--fail)\n+              fail_script=\"$2\"\n+              shift 2\n+              ;;\n+          --)\n+              shift\n+              break\n+              ;;\n+          *)\n+              echo \"Programming error\"\n+              exit 3\n+              ;;\n+      esac\n+  done\n+\n+  retry \"$max_tries\" \"$min_sleep\" \"$max_sleep\" \"$constant_sleep\" \"$fail_script\" \"$@\"\n+  \n+fi"
      }
    ]
  },
  {
    "sha": "fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTMxYmMzNWViOGRkN2U3MjdlM2UxZWFmMmM0NTAxN2NkNjNiZGNi",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-08-10T16:56:46Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-08-15T15:12:34Z"
      },
      "message": "ci: Remove dependence on travis, use it as fallback env",
      "tree": {
        "sha": "6cf47d9094d34eab3b9f6d09f2918cf1106faad9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6cf47d9094d34eab3b9f6d09f2918cf1106faad9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUi8Ygv6A6/4Mszcw93SvWTyRLGuBvR32fGlccxG7uFIZJmieaTaXhMJuhLxmLrc\nrMJ2/4FgUNlQBMK/MlSjBz4Brv84flQU8cqxXNbpwXfiRriFWvadpJGJUpAhzkxS\nAEfjQgDHT9OjiDgRedWl00m861XdRjglTqgZYTYWFbN1GpPyuTDN4WVPin3r8/ch\nbU6+HMM6XJ1jqIDTsj07RE/qJwIfoB8BXkhd74D9mR0iQoM99Wcn0XhECX6crKtZ\nCX9QhLY5qf+PGo/sp7IJu86RL+HYHetE1FmwgrN7w5dOawzLD3tOycfhFd+b+CGD\naOjDFUuFAlTZ5xKGbWbuChwsCYJGJk4JUVMihx0Z36ywmpgyits7L7wMv20pbNKO\nSpOlmJ7EjuZbCDDp3wquoD9Vwdht7geluKkEao+BE+fcZTA0aLn1MQONC1fe7c9h\nuveB6kycmrWte+HPiQUbsROYxnpwP4PJo4ts1edHOy8ED83uq4e9O9uhudaaN9W9\nRx4KWwlm\n=4Lxq\n-----END PGP SIGNATURE-----",
        "payload": "tree 6cf47d9094d34eab3b9f6d09f2918cf1106faad9\nparent fa0aac0f43a108a88b03a346464ecda4ae2cf630\nauthor MarcoFalke <falke.marco@gmail.com> 1565456206 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1565881954 -0400\n\nci: Remove dependence on travis, use it as fallback env\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa0aac0f43a108a88b03a346464ecda4ae2cf630",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa0aac0f43a108a88b03a346464ecda4ae2cf630",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa0aac0f43a108a88b03a346464ecda4ae2cf630"
      }
    ],
    "stats": {
      "total": 131,
      "additions": 91,
      "deletions": 40
    },
    "files": [
      {
        "sha": "7753dcc51f3bc8c50a82a5c4d5589a0897f30a08",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 15,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb",
        "patch": "@@ -40,22 +40,10 @@ stages:\n   - extended-lint\n env:\n   global:\n-    - MAKEJOBS=-j3\n-    - RUN_UNIT_TESTS=true\n-    - RUN_FUNCTIONAL_TESTS=true\n-    - RUN_FUZZ_TESTS=false\n-    - DOCKER_NAME_TAG=ubuntu:18.04\n-    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID\n-    - CCACHE_SIZE=100M\n-    - CCACHE_TEMPDIR=/tmp/.ccache-temp\n-    - CCACHE_COMPRESS=1\n-    - CCACHE_DIR=$HOME/.ccache\n-    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out\n-    - SDK_URL=https://bitcoincore.org/depends-sources/sdks\n-    - WINEDEBUG=fixme-all\n-    - DOCKER_PACKAGES=\"build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache\"\n+    - CI_RETRY_EXE=\"travis_retry\"\n     - CACHE_ERR_MSG=\"Error! Initial build successful, but not enough time remains to run later build stages and tests. Please manually re-run this job by using the travis restart button or asking a bitcoin maintainer to restart. The next run should not time out because the build cache has been saved.\"\n before_install:\n+  - set -o errexit; source ./ci/test/00_setup_env.sh\n   - set -o errexit; source ./ci/test/03_before_install.sh\n install:\n   - set -o errexit; source ./ci/test/04_install.sh\n@@ -71,7 +59,6 @@ script:\n   - if [ $CONTINUE = \"1\" ]; then set -o errexit; source ./ci/test/06_script_b.sh; else set +o errexit; echo \"$CACHE_ERR_MSG\"; false; fi\n after_script:\n   - echo $TRAVIS_COMMIT_RANGE\n-  - echo $TRAVIS_COMMIT_LOG\n jobs:\n   include:\n "
      },
      {
        "sha": "a50c7868a6314a307c681e294ed51f24f9bdedff",
        "filename": "ci/README.md",
        "status": "modified",
        "additions": 17,
        "deletions": 1,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb/ci/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb/ci/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/README.md?ref=fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb",
        "patch": "@@ -3,6 +3,22 @@\n This directory contains scripts for each build step in each build stage.\n \n Currently three stages `lint`, `extended_lint` and `test` are defined. Each stage has its own lifecycle, similar to the\n-[Travis CI lifecycle](https://docs.travis-ci.com/user/job-lifecycle#the-job-lifecycle).  Every script in here is named\n+[Travis CI lifecycle](https://docs.travis-ci.com/user/job-lifecycle#the-job-lifecycle). Every script in here is named\n and numbered according to which stage and lifecycle step it belongs to.\n \n+### Running a stage locally\n+\n+To allow for a wide range of tested environments, but also ensure reproducibility to some extent, the test stage\n+requires `docker` to be installed. To install all requirements on Ubuntu, run\n+\n+```\n+sudo apt install docker.io ccache bash git\n+```\n+\n+To run the test stage,\n+\n+```\n+./ci/test_run_all.sh\n+```\n+\n+Be aware that the tests will be build and run in-place, so please run at your own risk."
      },
      {
        "sha": "983a4980708409020797091f1a73cbd0b6662b3f",
        "filename": "ci/retry/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb/ci/retry/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb/ci/retry/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/retry/README.md?ref=fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb",
        "patch": "@@ -35,7 +35,7 @@ Help:\n         -m, --min=secs                   Exponenetial Backoff: minimum sleep amount (seconds): Default 0.3\n         -x, --max=secs                   Exponenetial Backoff: maximum sleep amount (seconds): Default 60\n         -f, --fail=\"script +cmds\"        Fail Script: run in case of final failure\n-    \n+\n ### Examples\n \n No problem:"
      },
      {
        "sha": "0e5f6e97014db2377acecf3e84e44b1b1ca1f683",
        "filename": "ci/retry/retry",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb/ci/retry/retry",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb/ci/retry/retry",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/retry/retry?ref=fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb",
        "patch": "@@ -4,7 +4,7 @@ GETOPT_BIN=$IN_GETOPT_BIN\n GETOPT_BIN=${GETOPT_BIN:-getopt}\n \n __sleep_amount() {\n-  if [ -n \"$constant_sleep\" ]; then \n+  if [ -n \"$constant_sleep\" ]; then\n     sleep_time=$constant_sleep\n   else\n     #TODO: check for awk\n@@ -159,5 +159,5 @@ EOF\n   done\n \n   retry \"$max_tries\" \"$min_sleep\" \"$max_sleep\" \"$constant_sleep\" \"$fail_script\" \"$@\"\n-  \n+\n fi"
      },
      {
        "sha": "fae48ba17647e761eb3b3489ae518b1a7ed91215",
        "filename": "ci/test/00_setup_env.sh",
        "status": "added",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb/ci/test/00_setup_env.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb/ci/test/00_setup_env.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env.sh?ref=fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb",
        "patch": "@@ -0,0 +1,33 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+echo \"Setting default values in env\"\n+\n+BASE_ROOT_DIR=$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\"/../../ >/dev/null 2>&1 && pwd )\n+export BASE_ROOT_DIR\n+\n+export MAKEJOBS=${MAKEJOBS:--j3}\n+export HOST=${HOST:-x86_64-unknown-linux-gnu}\n+export RUN_UNIT_TESTS=${RUN_UNIT_TESTS:-true}\n+export RUN_FUNCTIONAL_TESTS=${RUN_FUNCTIONAL_TESTS:-true}\n+export RUN_FUZZ_TESTS=${RUN_FUZZ_TESTS:-false}\n+export DOCKER_NAME_TAG=${DOCKER_NAME_TAG:-ubuntu:18.04}\n+export BOOST_TEST_RANDOM=${BOOST_TEST_RANDOM:-1$TRAVIS_BUILD_ID}\n+export CCACHE_SIZE=${CCACHE_SIZE:-100M}\n+export CCACHE_TEMPDIR=${CCACHE_TEMPDIR:-/tmp/.ccache-temp}\n+export CCACHE_COMPRESS=${CCACHE_COMPRESS:-1}\n+export CCACHE_DIR=${CCACHE_DIR:-$HOME/.ccache}\n+export BASE_BUILD_DIR=${BASE_BUILD_DIR:-${TRAVIS_BUILD_DIR:-$BASE_ROOT_DIR}}\n+export BASE_OUTDIR=${BASE_OUTDIR:-$BASE_BUILD_DIR/out/$HOST}\n+export SDK_URL=${SDK_URL:-https://bitcoincore.org/depends-sources/sdks}\n+export WINEDEBUG=${WINEDEBUG:-fixme-all}\n+export DOCKER_PACKAGES=${DOCKER_PACKAGES:-build-essential libtool autotools-dev automake pkg-config bsdmainutils curl ca-certificates ccache python3}\n+export GOAL=${GOAL:-install}\n+export DIR_QA_ASSETS=${DIR_QA_ASSETS:-${BASE_BUILD_DIR}/qa-assets}\n+export PATH=${BASE_ROOT_DIR}/ci/retry:$PATH\n+export CI_RETRY_EXE=${CI_RETRY_EXE:retry}"
      },
      {
        "sha": "2230f5c8ebe25fba1ac947dd092538fb939e9dc9",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 14,
        "deletions": 11,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb",
        "patch": "@@ -9,29 +9,32 @@ export LC_ALL=C.UTF-8\n free -m -h\n echo \"Number of CPUs (nproc): $(nproc)\"\n \n-travis_retry docker pull \"$DOCKER_NAME_TAG\"\n+ccache echo \"Creating ccache dir if it didn't already exist\"\n \n-export DIR_FUZZ_IN=${TRAVIS_BUILD_DIR}/qa-assets\n-git clone https://github.com/bitcoin-core/qa-assets ${DIR_FUZZ_IN}\n-export DIR_FUZZ_IN=${DIR_FUZZ_IN}/fuzz_seed_corpus/\n+${CI_RETRY_EXE} docker pull \"$DOCKER_NAME_TAG\"\n \n-mkdir -p \"${TRAVIS_BUILD_DIR}/sanitizer-output/\"\n+if [ ! -d ${DIR_QA_ASSETS} ]; then\n+  git clone https://github.com/bitcoin-core/qa-assets ${DIR_QA_ASSETS}\n+fi\n+export DIR_FUZZ_IN=${DIR_QA_ASSETS}/fuzz_seed_corpus/\n+\n+mkdir -p \"${BASE_BUILD_DIR}/sanitizer-output/\"\n export ASAN_OPTIONS=\"\"\n-export LSAN_OPTIONS=\"suppressions=${TRAVIS_BUILD_DIR}/test/sanitizer_suppressions/lsan\"\n-export TSAN_OPTIONS=\"suppressions=${TRAVIS_BUILD_DIR}/test/sanitizer_suppressions/tsan:log_path=${TRAVIS_BUILD_DIR}/sanitizer-output/tsan\"\n-export UBSAN_OPTIONS=\"suppressions=${TRAVIS_BUILD_DIR}/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1\"\n+export LSAN_OPTIONS=\"suppressions=${BASE_BUILD_DIR}/test/sanitizer_suppressions/lsan\"\n+export TSAN_OPTIONS=\"suppressions=${BASE_BUILD_DIR}/test/sanitizer_suppressions/tsan:log_path=${BASE_BUILD_DIR}/sanitizer-output/tsan\"\n+export UBSAN_OPTIONS=\"suppressions=${BASE_BUILD_DIR}/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1\"\n env | grep -E '^(BITCOIN_CONFIG|CCACHE_|WINEDEBUG|LC_ALL|BOOST_TEST_RANDOM|CONFIG_SHELL|(ASAN|LSAN|TSAN|UBSAN)_OPTIONS)' | tee /tmp/env\n if [[ $HOST = *-mingw32 ]]; then\n   DOCKER_ADMIN=\"--cap-add SYS_ADMIN\"\n elif [[ $BITCOIN_CONFIG = *--with-sanitizers=*address* ]]; then # If ran with (ASan + LSan), Docker needs access to ptrace (https://github.com/google/sanitizers/issues/764)\n   DOCKER_ADMIN=\"--cap-add SYS_PTRACE\"\n fi\n-DOCKER_ID=$(docker run $DOCKER_ADMIN -idt --mount type=bind,src=$TRAVIS_BUILD_DIR,dst=$TRAVIS_BUILD_DIR --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR -w $TRAVIS_BUILD_DIR --env-file /tmp/env $DOCKER_NAME_TAG)\n+DOCKER_ID=$(docker run $DOCKER_ADMIN -idt --mount type=bind,src=$BASE_BUILD_DIR,dst=$BASE_BUILD_DIR --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR -w $BASE_BUILD_DIR --env-file /tmp/env $DOCKER_NAME_TAG)\n \n DOCKER_EXEC () {\n   docker exec $DOCKER_ID bash -c \"cd $PWD && $*\"\n }\n \n-travis_retry DOCKER_EXEC apt-get update\n-travis_retry DOCKER_EXEC apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES $DOCKER_PACKAGES\n+${CI_RETRY_EXE} DOCKER_EXEC apt-get update\n+${CI_RETRY_EXE} DOCKER_EXEC apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES $DOCKER_PACKAGES\n "
      },
      {
        "sha": "eb6ade7919f89c60f0b5aa492b6778f0e929e409",
        "filename": "ci/test/06_script_a.sh",
        "status": "modified",
        "additions": 4,
        "deletions": 8,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb/ci/test/06_script_a.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb/ci/test/06_script_a.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_a.sh?ref=fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb",
        "patch": "@@ -6,11 +6,7 @@\n \n export LC_ALL=C.UTF-8\n \n-TRAVIS_COMMIT_LOG=$(git log --format=fuller -1)\n-export TRAVIS_COMMIT_LOG\n-\n-OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n-BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n+BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$BASE_BUILD_DIR/depends/$HOST --bindir=$BASE_OUTDIR/bin --libdir=$BASE_OUTDIR/lib\"\n if [ -z \"$NO_DEPENDS\" ]; then\n   DOCKER_EXEC ccache --max-size=$CCACHE_SIZE\n fi\n@@ -23,7 +19,7 @@ else\n fi\n END_FOLD\n \n-mkdir build\n+mkdir -p build\n cd build || (echo \"could not enter build directory\"; exit 1)\n \n BEGIN_FOLD configure\n@@ -41,10 +37,10 @@ DOCKER_EXEC ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOI\n END_FOLD\n \n set -o errtrace\n-trap 'DOCKER_EXEC \"cat ${TRAVIS_BUILD_DIR}/sanitizer-output/* 2> /dev/null\"' ERR\n+trap 'DOCKER_EXEC \"cat ${BASE_BUILD_DIR}/sanitizer-output/* 2> /dev/null\"' ERR\n \n BEGIN_FOLD build\n DOCKER_EXEC make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && DOCKER_EXEC make $GOAL V=1 ; false )\n END_FOLD\n \n-cd ${TRAVIS_BUILD_DIR} || (echo \"could not enter travis build dir $TRAVIS_BUILD_DIR\"; exit 1)\n+cd ${BASE_BUILD_DIR} || (echo \"could not enter travis build dir $BASE_BUILD_DIR\"; exit 1)"
      },
      {
        "sha": "fafb6e0493b739e478e876918e00c5d02423ab7d",
        "filename": "ci/test/06_script_b.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb/ci/test/06_script_b.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb/ci/test/06_script_b.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_b.sh?ref=fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb",
        "patch": "@@ -10,7 +10,7 @@ cd \"build/bitcoin-$HOST\" || (echo \"could not enter distdir build/bitcoin-$HOST\";\n \n if [ \"$RUN_UNIT_TESTS\" = \"true\" ]; then\n   BEGIN_FOLD unit-tests\n-  DOCKER_EXEC LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib make $MAKEJOBS check VERBOSE=1\n+  DOCKER_EXEC LD_LIBRARY_PATH=$BASE_BUILD_DIR/depends/$HOST/lib make $MAKEJOBS check VERBOSE=1\n   END_FOLD\n fi\n \n@@ -26,4 +26,4 @@ if [ \"$RUN_FUZZ_TESTS\" = \"true\" ]; then\n   END_FOLD\n fi\n \n-cd ${TRAVIS_BUILD_DIR} || (echo \"could not enter travis build dir $TRAVIS_BUILD_DIR\"; exit 1)\n+cd ${BASE_BUILD_DIR} || (echo \"could not enter travis build dir $BASE_BUILD_DIR\"; exit 1)"
      },
      {
        "sha": "a39f1f9f09de177c9db155bc6ce5554929cd8464",
        "filename": "ci/test_run_all.sh",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb/ci/test_run_all.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb/ci/test_run_all.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test_run_all.sh?ref=fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb",
        "patch": "@@ -0,0 +1,16 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+echo \"Setting default values in env\"\n+\n+set -o errexit; source ./ci/test/00_setup_env.sh\n+set -o errexit; source ./ci/test/03_before_install.sh\n+set -o errexit; source ./ci/test/04_install.sh\n+set -o errexit; source ./ci/test/05_before_script.sh\n+set -o errexit; source ./ci/test/06_script_a.sh\n+set -o errexit; source ./ci/test/06_script_b.sh"
      }
    ]
  },
  {
    "sha": "fa6cbdc3c9ab42b7e55c666e83b4b8d5545bb745",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTZjYmRjM2M5YWI0MmI3ZTU1YzY2NmU4M2I0YjhkNTU0NWJiNzQ1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-08-11T15:57:21Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-08-15T15:13:09Z"
      },
      "message": "ci: Use ./ci/ on non-travis host",
      "tree": {
        "sha": "88af70a7a52622aa18c670d9ea4337201a2333e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/88af70a7a52622aa18c670d9ea4337201a2333e9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa6cbdc3c9ab42b7e55c666e83b4b8d5545bb745",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjnTwv/TAeewt2cuRx2YYEw/dNQOaGRvLqumz3Tpj/maVYGfke+V6hcxqwbEmZT\nraSKAckTzFmDI8Umgd3AamJy6Ty0YgPXzf7Mk572iEUW97LpVyIwgnZEdsqnMHuZ\ncK67M6nn0r7oxIS48H/vRahJvH7KRxahyW9MBSLQvJZ/1aiWLuCDMarXwCghqzTW\nrIXxHLrgVRpoHw7+0q0gEhgPVebQiwA3pNn8an1Yt6lx4yLkgcPCyj5GbdFogLCh\njyfRKDoj5ZXOlvb2vpk6i6akTXSwx9nw6X70rF9RCoUfykrjC7YqXZkjXaeu+xIn\nMCLHYYn1wNfYMDOl7X/ING6MmC1ZqCutA1nnTPXqU7/vyTtjPhNEolkEyX+9nUOA\nzSSFi0F3lqGoSUvPvUgRIYjVBd+mu7I+ApM5n+NiyxBW99OrnsON3gkCbxA62bE4\nT1nmoMPaK9nAeOU3sGyNpMQHIn2aZYhvSd5fDpEIp8yig59yNWSuTwy5BbVyvZ6B\ng0aRovyS\n=vTFX\n-----END PGP SIGNATURE-----",
        "payload": "tree 88af70a7a52622aa18c670d9ea4337201a2333e9\nparent fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb\nauthor MarcoFalke <falke.marco@gmail.com> 1565539041 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1565881989 -0400\n\nci: Use ./ci/ on non-travis host\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa6cbdc3c9ab42b7e55c666e83b4b8d5545bb745",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa6cbdc3c9ab42b7e55c666e83b4b8d5545bb745",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa6cbdc3c9ab42b7e55c666e83b4b8d5545bb745/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa31bc35eb8dd7e727e3e1eaf2c45017cd63bdcb"
      }
    ],
    "stats": {
      "total": 52,
      "additions": 42,
      "deletions": 10
    },
    "files": [
      {
        "sha": "1e6e6937da4e3852958e4ffda2ffc273c7e6ece4",
        "filename": ".cirrus.yml",
        "status": "modified",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa6cbdc3c9ab42b7e55c666e83b4b8d5545bb745/.cirrus.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa6cbdc3c9ab42b7e55c666e83b4b8d5545bb745/.cirrus.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.cirrus.yml?ref=fa6cbdc3c9ab42b7e55c666e83b4b8d5545bb745",
        "patch": "@@ -27,3 +27,27 @@ task:\n     - gmake check ${MAKEJOBS} VERBOSE=1\n   functional_test_script:\n     - ./test/functional/test_runner.py --jobs 9 --ci --extended --exclude feature_dbcrash --combinedlogslen=1000 --quiet --failfast\n+task:\n+  name: \"x86_64 Linux  [GOAL: install]  [bionic]  [Using ./ci/ system]\"\n+  container:\n+    image: ubuntu:18.04\n+    cpu: 8\n+    memory: 8G\n+  timeout_in: 60m\n+  env:\n+    MAKEJOBS: \"-j9\"\n+    RUN_CI_ON_HOST: \"1\"\n+    CCACHE_SIZE: \"200M\"\n+    CCACHE_DIR: \"/tmp/ccache_dir\"\n+  ccache_cache:\n+    folder: \"/tmp/ccache_dir\"\n+  depends_built_cache:\n+    folder: \"/tmp/cirrus-ci-build/depends/built\"\n+  depends_sdk_cache:\n+    folder: \"/tmp/cirrus-ci-build/depends/sdk-sources\"\n+  install_script:\n+    - apt-get update\n+    - apt-get -y install git bash ccache\n+    - ccache --max-size=${CCACHE_SIZE}\n+  ci_script:\n+    - ./ci/test_run_all.sh"
      },
      {
        "sha": "5086114ba16e85b0399ffce587f6e1cf2b187bf9",
        "filename": "ci/test/03_before_install.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa6cbdc3c9ab42b7e55c666e83b4b8d5545bb745/ci/test/03_before_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa6cbdc3c9ab42b7e55c666e83b4b8d5545bb745/ci/test/03_before_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/03_before_install.sh?ref=fa6cbdc3c9ab42b7e55c666e83b4b8d5545bb745",
        "patch": "@@ -6,7 +6,6 @@\n \n export LC_ALL=C.UTF-8\n \n-PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/python/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\n # Add llvm-symbolizer directory to PATH. Needed to get symbolized stack traces from the sanitizers.\n PATH=$PATH:/usr/lib/llvm-6.0/bin/\n export PATH"
      },
      {
        "sha": "3535746e83f1a6fb8347fc4440f59a7706d1c6c4",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 18,
        "deletions": 9,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa6cbdc3c9ab42b7e55c666e83b4b8d5545bb745/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa6cbdc3c9ab42b7e55c666e83b4b8d5545bb745/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=fa6cbdc3c9ab42b7e55c666e83b4b8d5545bb745",
        "patch": "@@ -6,13 +6,8 @@\n \n export LC_ALL=C.UTF-8\n \n-free -m -h\n-echo \"Number of CPUs (nproc): $(nproc)\"\n-\n ccache echo \"Creating ccache dir if it didn't already exist\"\n \n-${CI_RETRY_EXE} docker pull \"$DOCKER_NAME_TAG\"\n-\n if [ ! -d ${DIR_QA_ASSETS} ]; then\n   git clone https://github.com/bitcoin-core/qa-assets ${DIR_QA_ASSETS}\n fi\n@@ -29,11 +24,25 @@ if [[ $HOST = *-mingw32 ]]; then\n elif [[ $BITCOIN_CONFIG = *--with-sanitizers=*address* ]]; then # If ran with (ASan + LSan), Docker needs access to ptrace (https://github.com/google/sanitizers/issues/764)\n   DOCKER_ADMIN=\"--cap-add SYS_PTRACE\"\n fi\n-DOCKER_ID=$(docker run $DOCKER_ADMIN -idt --mount type=bind,src=$BASE_BUILD_DIR,dst=$BASE_BUILD_DIR --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR -w $BASE_BUILD_DIR --env-file /tmp/env $DOCKER_NAME_TAG)\n \n-DOCKER_EXEC () {\n-  docker exec $DOCKER_ID bash -c \"cd $PWD && $*\"\n-}\n+if [ -z \"$RUN_CI_ON_HOST\" ]; then\n+  echo \"Creating $DOCKER_NAME_TAG container to run in\"\n+  ${CI_RETRY_EXE} docker pull \"$DOCKER_NAME_TAG\"\n+\n+  DOCKER_ID=$(docker run $DOCKER_ADMIN -idt --mount type=bind,src=$BASE_BUILD_DIR,dst=$BASE_BUILD_DIR --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR -w $BASE_BUILD_DIR --env-file /tmp/env $DOCKER_NAME_TAG)\n+\n+  DOCKER_EXEC () {\n+    docker exec $DOCKER_ID bash -c \"cd $PWD && $*\"\n+  }\n+else\n+  echo \"Running on host system without docker wrapper\"\n+  DOCKER_EXEC () {\n+    bash -c \"cd $PWD && $*\"\n+  }\n+fi\n+\n+DOCKER_EXEC free -m -h\n+DOCKER_EXEC echo \"Number of CPUs \\(nproc\\): $(nproc)\"\n \n ${CI_RETRY_EXE} DOCKER_EXEC apt-get update\n ${CI_RETRY_EXE} DOCKER_EXEC apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES $DOCKER_PACKAGES"
      }
    ]
  },
  {
    "sha": "faeacf32691ada64c2321f30ff7537b6eaed0409",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWVhY2YzMjY5MWFkYTY0YzIzMjFmMzBmZjc1MzdiNmVhZWQwNDA5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-08-15T13:01:04Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-08-15T15:13:10Z"
      },
      "message": "ci: Add note that this assumes a fresh git clone",
      "tree": {
        "sha": "763fa1fdbe41ba94d0eddd16814fbe01669a69dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/763fa1fdbe41ba94d0eddd16814fbe01669a69dd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faeacf32691ada64c2321f30ff7537b6eaed0409",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUibjwv/ZHLCFpC9EpBPm4vQdQ/O1p2QnPvKcUA3KmI/Xltmn/3sX143qMIyhwJh\nsYtehOnmklK8I77oEi28fCaqwPWuP+Va4rghllpa1qc6+nbvumb7L4zpYsErbA8n\nCuexSAZ3lvZCQWI8k4FHF17JugETO/brQfDduRh+pSvFerXMqdc86owqIX0qPI7R\nxIYjJdLrg3Bs8iP3xhqnooorLGowBvLO1cvKnjkfxGc8F8FDtGq3blWaz1688yLT\np7BezMm5PHJSas7KzrE3jvMJXA/kqbPmmi8R4B3oxjByqPXFbifsm8uVk7U0byUM\nz/EVC5ZUGk5EzxYhG1EhZzeEk2jFf5t9QG9gV0hCymNTXFyrjyGfUCjn4QXKu8qm\nuK0M3ld5AxZT+wwAPW45YEnPepwHjvIYF61r2MvcmPSPrqxkJYC8QZq8IthAVndl\ndpzmBGPtPPU6yRCFdjYDqI7sgLSmQ+teL+k7h/bOjk9UV6o6CFZ1n1GFIY+m7ove\nRjFnjWyY\n=6rIi\n-----END PGP SIGNATURE-----",
        "payload": "tree 763fa1fdbe41ba94d0eddd16814fbe01669a69dd\nparent fa6cbdc3c9ab42b7e55c666e83b4b8d5545bb745\nauthor MarcoFalke <falke.marco@gmail.com> 1565874064 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1565881990 -0400\n\nci: Add note that this assumes a fresh git clone\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faeacf32691ada64c2321f30ff7537b6eaed0409",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faeacf32691ada64c2321f30ff7537b6eaed0409",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faeacf32691ada64c2321f30ff7537b6eaed0409/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa6cbdc3c9ab42b7e55c666e83b4b8d5545bb745",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa6cbdc3c9ab42b7e55c666e83b4b8d5545bb745",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa6cbdc3c9ab42b7e55c666e83b4b8d5545bb745"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "754cbc7c95509d84561445c93939e17a7b3f3edb",
        "filename": "ci/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faeacf32691ada64c2321f30ff7537b6eaed0409/ci/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faeacf32691ada64c2321f30ff7537b6eaed0409/ci/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/README.md?ref=faeacf32691ada64c2321f30ff7537b6eaed0409",
        "patch": "@@ -22,3 +22,4 @@ To run the test stage,\n ```\n \n Be aware that the tests will be build and run in-place, so please run at your own risk.\n+If the repository is not a fresh git clone, you might have to clean files from previous builds or test runs first."
      }
    ]
  }
]