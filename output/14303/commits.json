[
  {
    "sha": "93196eeaccfe0f532c54b61d8b4cf398ad84ec1d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MzE5NmVlYWNjZmUwZjUzMmM1NGI2MWQ4YjRjZjM5OGFkODRlYzFk",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-09-23T22:53:12Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-10-20T10:04:26Z"
      },
      "message": "rpc: Early call once CWallet::MarkDirty in import calls",
      "tree": {
        "sha": "1d70948d5435a6f0875fe8a7e7fb614bc7729952",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1d70948d5435a6f0875fe8a7e7fb614bc7729952"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/93196eeaccfe0f532c54b61d8b4cf398ad84ec1d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93196eeaccfe0f532c54b61d8b4cf398ad84ec1d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/93196eeaccfe0f532c54b61d8b4cf398ad84ec1d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93196eeaccfe0f532c54b61d8b4cf398ad84ec1d/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6746a8951923513590dd241912cb67100f6e0aac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6746a8951923513590dd241912cb67100f6e0aac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6746a8951923513590dd241912cb67100f6e0aac"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 11,
      "deletions": 15
    },
    "files": [
      {
        "sha": "a74aca2de2b1f9b79f03ed14cde77229447b5695",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 15,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93196eeaccfe0f532c54b61d8b4cf398ad84ec1d/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93196eeaccfe0f532c54b61d8b4cf398ad84ec1d/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=93196eeaccfe0f532c54b61d8b4cf398ad84ec1d",
        "patch": "@@ -221,8 +221,6 @@ static void ImportScript(CWallet* const pwallet, const CScript& script, const st\n         throw JSONRPCError(RPC_WALLET_ERROR, \"The wallet already contains the private key for this address or script\");\n     }\n \n-    pwallet->MarkDirty();\n-\n     if (!pwallet->HaveWatchOnly(script) && !pwallet->AddWatchOnly(script, 0 /* nCreateTime */)) {\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding address to wallet\");\n     }\n@@ -307,6 +305,9 @@ UniValue importaddress(const JSONRPCRequest& request)\n     {\n         LOCK2(cs_main, pwallet->cs_wallet);\n \n+        // Make sure balances of all wallet transactions are recalculated.\n+        pwallet->MarkDirty();\n+\n         CTxDestination dest = DecodeDestination(request.params[0].get_str());\n         if (IsValidDestination(dest)) {\n             if (fP2SH) {\n@@ -485,6 +486,9 @@ UniValue importpubkey(const JSONRPCRequest& request)\n     {\n         LOCK2(cs_main, pwallet->cs_wallet);\n \n+        // Make sure balances of all wallet transactions are recalculated.\n+        pwallet->MarkDirty();\n+\n         for (const auto& dest : GetAllDestinationsForKey(pubKey)) {\n             ImportAddress(pwallet, dest, strLabel);\n         }\n@@ -539,6 +543,8 @@ UniValue importwallet(const JSONRPCRequest& request)\n \n         EnsureWalletIsUnlocked(pwallet);\n \n+        pwallet->MarkDirty();\n+\n         fsbridge::ifstream file;\n         file.open(request.params[0].get_str(), std::ios::in | std::ios::ate);\n         if (!file.is_open()) {\n@@ -622,7 +628,6 @@ UniValue importwallet(const JSONRPCRequest& request)\n     }\n     uiInterface.ShowProgress(\"\", 100, false); // hide progress dialog in GUI\n     RescanWallet(*pwallet, reserver, nTimeBegin, false /* update */);\n-    pwallet->MarkDirty();\n \n     if (!fGood)\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding some keys/scripts to wallet\");\n@@ -885,8 +890,6 @@ static UniValue ProcessImport(CWallet * const pwallet, const UniValue& data, con\n                 throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid P2SH address / script\");\n             }\n \n-            pwallet->MarkDirty();\n-\n             if (!pwallet->AddWatchOnly(redeemScript, timestamp)) {\n                 throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding address to wallet\");\n             }\n@@ -902,8 +905,6 @@ static UniValue ProcessImport(CWallet * const pwallet, const UniValue& data, con\n                 throw JSONRPCError(RPC_WALLET_ERROR, \"The wallet already contains the private key for this address or script\");\n             }\n \n-            pwallet->MarkDirty();\n-\n             if (!pwallet->AddWatchOnly(redeemDestination, timestamp)) {\n                 throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding address to wallet\");\n             }\n@@ -928,7 +929,6 @@ static UniValue ProcessImport(CWallet * const pwallet, const UniValue& data, con\n                     assert(key.VerifyPubKey(pubkey));\n \n                     CKeyID vchAddress = pubkey.GetID();\n-                    pwallet->MarkDirty();\n                     pwallet->SetAddressBook(vchAddress, label, \"receive\");\n \n                     if (pwallet->HaveKey(vchAddress)) {\n@@ -975,8 +975,6 @@ static UniValue ProcessImport(CWallet * const pwallet, const UniValue& data, con\n                     throw JSONRPCError(RPC_WALLET_ERROR, \"The wallet already contains the private key for this address or script\");\n                 }\n \n-                pwallet->MarkDirty();\n-\n                 if (!pwallet->AddWatchOnly(pubKeyScript, timestamp)) {\n                     throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding address to wallet\");\n                 }\n@@ -993,8 +991,6 @@ static UniValue ProcessImport(CWallet * const pwallet, const UniValue& data, con\n                     throw JSONRPCError(RPC_WALLET_ERROR, \"The wallet already contains the private key for this address or script\");\n                 }\n \n-                pwallet->MarkDirty();\n-\n                 if (!pwallet->AddWatchOnly(scriptRawPubKey, timestamp)) {\n                     throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding address to wallet\");\n                 }\n@@ -1024,7 +1020,6 @@ static UniValue ProcessImport(CWallet * const pwallet, const UniValue& data, con\n                 }\n \n                 CKeyID vchAddress = pubKey.GetID();\n-                pwallet->MarkDirty();\n                 pwallet->SetAddressBook(vchAddress, label, \"receive\");\n \n                 if (pwallet->HaveKey(vchAddress)) {\n@@ -1048,8 +1043,6 @@ static UniValue ProcessImport(CWallet * const pwallet, const UniValue& data, con\n                     throw JSONRPCError(RPC_WALLET_ERROR, \"The wallet already contains the private key for this address or script\");\n                 }\n \n-                pwallet->MarkDirty();\n-\n                 if (!pwallet->AddWatchOnly(script, timestamp)) {\n                     throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding address to wallet\");\n                 }\n@@ -1170,6 +1163,9 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n         LOCK2(cs_main, pwallet->cs_wallet);\n         EnsureWalletIsUnlocked(pwallet);\n \n+        // Make sure balances of all wallet transactions are recalculated.\n+        pwallet->MarkDirty();\n+\n         // Verify all timestamps are present before importing any keys.\n         now = chainActive.Tip() ? chainActive.Tip()->GetMedianTimePast() : 0;\n         for (const UniValue& data : requests.getValues()) {"
      }
    ]
  },
  {
    "sha": "852f295ea6ba3854d7be16fafc5164dfc0918087",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NTJmMjk1ZWE2YmEzODU0ZDdiZTE2ZmFmYzUxNjRkZmMwOTE4MDg3",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-09-23T22:58:34Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-10-20T10:04:28Z"
      },
      "message": "wallet: Refactor CWallet::MarkDirty to EXCLUSIVE_LOCKS_REQUIRED(cs_wallet)",
      "tree": {
        "sha": "689f2d7893f87bbc86cfadc47851ebfdff92f8f6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/689f2d7893f87bbc86cfadc47851ebfdff92f8f6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/852f295ea6ba3854d7be16fafc5164dfc0918087",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/852f295ea6ba3854d7be16fafc5164dfc0918087",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/852f295ea6ba3854d7be16fafc5164dfc0918087",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/852f295ea6ba3854d7be16fafc5164dfc0918087/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "93196eeaccfe0f532c54b61d8b4cf398ad84ec1d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93196eeaccfe0f532c54b61d8b4cf398ad84ec1d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/93196eeaccfe0f532c54b61d8b4cf398ad84ec1d"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "cd15d648217c69a4c3a58dbd56bb9b658f66c0e2",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/852f295ea6ba3854d7be16fafc5164dfc0918087/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/852f295ea6ba3854d7be16fafc5164dfc0918087/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=852f295ea6ba3854d7be16fafc5164dfc0918087",
        "patch": "@@ -804,10 +804,10 @@ int64_t CWallet::IncOrderPosNext(WalletBatch *batch)\n \n void CWallet::MarkDirty()\n {\n-    {\n-        LOCK(cs_wallet);\n-        for (std::pair<const uint256, CWalletTx>& item : mapWallet)\n-            item.second.MarkDirty();\n+    AssertLockHeld(cs_wallet);\n+\n+    for (std::pair<const uint256, CWalletTx>& item : mapWallet) {\n+        item.second.MarkDirty();\n     }\n }\n "
      },
      {
        "sha": "1d54f4ad7dfe6a3d3a9a87c968c4d5f64b6f8e6f",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/852f295ea6ba3854d7be16fafc5164dfc0918087/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/852f295ea6ba3854d7be16fafc5164dfc0918087/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=852f295ea6ba3854d7be16fafc5164dfc0918087",
        "patch": "@@ -854,7 +854,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     int64_t IncOrderPosNext(WalletBatch *batch = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     DBErrors ReorderTransactions();\n \n-    void MarkDirty();\n+    void MarkDirty() EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     bool AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose=true);\n     void LoadToWallet(const CWalletTx& wtxIn);\n     void TransactionAddedToMempool(const CTransactionRef& tx) override;"
      }
    ]
  }
]