laanwj,2020-09-11 12:50:38,Concept ACK,https://github.com/bitcoin/bitcoin/pull/19935#issuecomment-691075598,691075598,
DrahtBot,2020-09-19 13:40:30,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20788 (net: add RAII socket and use it instead of bare SOCKET by vasild)\n* #20753 (rpc: Allow to ignore specific policy ",https://github.com/bitcoin/bitcoin/pull/19935#issuecomment-695214870,695214870,
practicalswift,2020-09-27 06:22:53,"Concept ACK\n\n+1 on @promag's feedback regarding `hashers.{cpp,h}` and making use of all hashers.",https://github.com/bitcoin/bitcoin/pull/19935#issuecomment-699592150,699592150,
achow101,2020-09-28 16:16:10,"> Maybe name the file hashers.{h,cpp}?\n\nDone.\n\n> Would be nice to see `SaltedScriptHasher` and `SaltedPubkeyHasher` being used - didn't find them in #19602 either.\n\nI'm using them in another branch that I haven't opened a PR for yet.",https://github.com/bitcoin/bitcoin/pull/19935#issuecomment-700136411,700136411,
sipa,2020-09-28 19:39:50,"For the non-optimized ones, it may be better to have a single `SaltedSipHasher` (or `UnsaltedSipHasher`) that takes a `Span<const unsigned char>` as input. That would automatically work for uint256, CPubKey, CScript, CKeyId, and generic ones like `std::vector<unsigned char>`.",https://github.com/bitcoin/bitcoin/pull/19935#issuecomment-700240671,700240671,
achow101,2020-09-28 23:50:14,"> For the non-optimized ones, it may be better to have a single `SaltedSipHasher` (or `UnsaltedSipHasher`) that takes a `Span<const unsigned char>` as input. That would automatically work for uint256, CPubKey, CScript, CKeyId, and generic ones like `std::vector<unsigned char>`.\n\nGood idea. Done.\n\nApparently we have other Hashers too, so I've added those to `util/hasher`.",https://github.com/bitcoin/bitcoin/pull/19935#issuecomment-700341748,700341748,
laanwj,2020-11-23 15:28:02,"Code review ACK 281fd1a4a032cded7f9ea9857e3e99fc793c714b\n\nI must say that in general I think throwing all hashers of all kinds of different data structures into one grabbag header is not a great subdivision criterion. However in this case it's all consensus transaction/block related things so I think it's fine!\n\nBut I wouldn't want to say, add P2P, wallet or mempool specific data structure",https://github.com/bitcoin/bitcoin/pull/19935#issuecomment-732232655,732232655,
achow101,2020-11-23 17:13:34,"> I must say that in general I think throwing all hashers of all kinds of different data structures into one grabbag header is not a great subdivision criterion. However in this case it's all consensus transaction/block related things so I think it's fine!\n\nRight. What I had really needed was `TxidHasher` and `OutpointHasher` and it didn't seem right to be including `txmempool.h` and `sigcache",https://github.com/bitcoin/bitcoin/pull/19935#issuecomment-732300279,732300279,
MarcoFalke,2021-01-13 10:55:34,"Follow ups: \n\n* https://github.com/bitcoin/bitcoin/pull/19935#discussion_r554152715\n* https://github.com/bitcoin/bitcoin/pull/19935#discussion_r554152507\n",https://github.com/bitcoin/bitcoin/pull/19935#issuecomment-759371342,759371342,
laanwj,2020-09-11 12:49:54,Maybe place these in `util` or `crypto`? I'd prefer not to add files to the source root anymore when possible.,https://github.com/bitcoin/bitcoin/pull/19935#discussion_r487022379,487022379,src/Makefile.am
achow101,2020-09-14 16:36:40,Moved to util.,https://github.com/bitcoin/bitcoin/pull/19935#discussion_r488070312,488070312,src/Makefile.am
jnewbery,2020-12-11 12:25:36,"Our minimum boost version is now 1.58, and has been higher than 1.46 since #8920. According to this comment: https://github.com/bitcoin/bitcoin/pull/4635#issuecomment-51188993, boost versions higher than 1.54 are fine.\n\nI think we can just delete this part of the comment rather than retaining it.",https://github.com/bitcoin/bitcoin/pull/19935#discussion_r540911134,540911134,src/util/hasher.h
mzumsande,2020-12-16 16:59:02,Looks like `KeyIDHasher` could be removed since it's no longer used after this this change.,https://github.com/bitcoin/bitcoin/pull/19935#discussion_r544464524,544464524,src/wallet/scriptpubkeyman.h
fjahr,2020-12-26 11:00:17,I think it would be great if there was a small comment here explaining what belongs into this file and what doesn't to help future contributors so they don't have to go back in git history to understand it.,https://github.com/bitcoin/bitcoin/pull/19935#discussion_r548971000,548971000,src/util/hasher.h
fjahr,2020-12-26 11:01:04,nit: 2020,https://github.com/bitcoin/bitcoin/pull/19935#discussion_r548971043,548971043,src/util/hasher.h
achow101,2021-01-08 19:40:47,Will remove if I have to push again.,https://github.com/bitcoin/bitcoin/pull/19935#discussion_r554152507,554152507,src/wallet/scriptpubkeyman.h
achow101,2021-01-08 19:41:12,Will remove if I have to push again,https://github.com/bitcoin/bitcoin/pull/19935#discussion_r554152715,554152715,src/util/hasher.h
achow101,2021-01-08 19:41:30,Will add if I have to push again.,https://github.com/bitcoin/bitcoin/pull/19935#discussion_r554152886,554152886,src/util/hasher.h
achow101,2021-01-08 19:41:36,Will fix if I have to push again.,https://github.com/bitcoin/bitcoin/pull/19935#discussion_r554152959,554152959,src/util/hasher.h
