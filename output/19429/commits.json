[
  {
    "sha": "fabd33b5416f2a2cd635d02b85d5bc2681cfaf17",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWJkMzNiNTQxNmYyYTJjZDYzNWQwMmI4NWQ1YmMyNjgxY2ZhZjE3",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-07-02T00:02:05Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-07-02T00:08:04Z"
      },
      "message": "test: Fix intermittent failure in wallet_encryption",
      "tree": {
        "sha": "dae4d47bcd3c4eb67cf51a7ae739abe692faf597",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dae4d47bcd3c4eb67cf51a7ae739abe692faf597"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fabd33b5416f2a2cd635d02b85d5bc2681cfaf17",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiF5Qv/Y+1dYFb2MP0rfdxDCGTihwnw0T2L2jXFv/iXeDs4wZ64m+JQhiJbHcU0\nICqQ8V2mcXhUTkgeSOqdws7gpxFZZZvlNW6M8jSx1AQyryTryWvpvoQcGS22u2aN\nXPaYoe0Oc+pAhJhweHF5gWR1Tg7Z0BiwDUMkHkvMnQohDX4ucy59job8sh1VLtB9\nD/pv7c25T+IAirJk01M1EoDM6uncpPJ3BR/CEoUgoGaukgKiyPcXopsVwSgZU/qX\nlbBDvfQ0W+HuQ5SIYdYY8sD4WhJVYVIfbTuDFgdOCVrT3AhXaAM+MSx880F5HiAy\nvPDgAE2Yt73QhNdXoLZqBevw2UZCJLwXyyFe0KqXMdN6uzYMtwuHkwtQG1OJcUY2\nBanxdysi8zG2oPLa2eGDQmnLDX+453Kd9hKtAHAgP6T+wWDkm6X4sB46NMAyYyhL\nyAPjVmTTW9jAEl442aLamvbk2yaxt8DY1UyU9UeMDZdsufiOnXhwnkb4PNX0YSnP\n4fhCtBsh\n=z1Zy\n-----END PGP SIGNATURE-----",
        "payload": "tree dae4d47bcd3c4eb67cf51a7ae739abe692faf597\nparent 501203aa9101e624e1cc3710daad8da29fdf1ecd\nauthor MarcoFalke <falke.marco@gmail.com> 1593648125 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1593648484 -0400\n\ntest: Fix intermittent failure in wallet_encryption\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fabd33b5416f2a2cd635d02b85d5bc2681cfaf17",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fabd33b5416f2a2cd635d02b85d5bc2681cfaf17",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fabd33b5416f2a2cd635d02b85d5bc2681cfaf17/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "501203aa9101e624e1cc3710daad8da29fdf1ecd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/501203aa9101e624e1cc3710daad8da29fdf1ecd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/501203aa9101e624e1cc3710daad8da29fdf1ecd"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 11,
      "deletions": 5
    },
    "files": [
      {
        "sha": "4509c1e0b2632f1a7987d219e5350f26fdae8f63",
        "filename": "test/functional/wallet_encryption.py",
        "status": "modified",
        "additions": 11,
        "deletions": 5,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fabd33b5416f2a2cd635d02b85d5bc2681cfaf17/test/functional/wallet_encryption.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fabd33b5416f2a2cd635d02b85d5bc2681cfaf17/test/functional/wallet_encryption.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_encryption.py?ref=fabd33b5416f2a2cd635d02b85d5bc2681cfaf17",
        "patch": "@@ -13,6 +13,7 @@\n     assert_greater_than_or_equal,\n )\n \n+\n class WalletEncryptionTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n@@ -72,20 +73,25 @@ def run_test(self):\n \n         # Test timeout bounds\n         assert_raises_rpc_error(-8, \"Timeout cannot be negative.\", self.nodes[0].walletpassphrase, passphrase2, -10)\n-        # Check the timeout\n-        # Check a time less than the limit\n+\n+        self.log.info('Check a timeout less than the limit')\n         MAX_VALUE = 100000000\n         expected_time = int(time.time()) + MAX_VALUE - 600\n         self.nodes[0].walletpassphrase(passphrase2, MAX_VALUE - 600)\n+        # give buffer for walletpassphrase, since it iterates over all crypted keys\n+        expected_time_with_buffer = time.time() + MAX_VALUE - 600\n         actual_time = self.nodes[0].getwalletinfo()['unlocked_until']\n         assert_greater_than_or_equal(actual_time, expected_time)\n-        assert_greater_than(expected_time + 5, actual_time) # 5 second buffer\n-        # Check a time greater than the limit\n+        assert_greater_than(expected_time_with_buffer, actual_time)\n+\n+        self.log.info('Check a timeout greater than the limit')\n         expected_time = int(time.time()) + MAX_VALUE - 1\n         self.nodes[0].walletpassphrase(passphrase2, MAX_VALUE + 1000)\n+        expected_time_with_buffer = time.time() + MAX_VALUE\n         actual_time = self.nodes[0].getwalletinfo()['unlocked_until']\n         assert_greater_than_or_equal(actual_time, expected_time)\n-        assert_greater_than(expected_time + 5, actual_time) # 5 second buffer\n+        assert_greater_than(expected_time_with_buffer, actual_time)\n+\n \n if __name__ == '__main__':\n     WalletEncryptionTest().main()"
      }
    ]
  }
]