[
  {
    "sha": "5fc3a0f70784051ba213948cbee0763e1c241c19",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZmMzYTBmNzA3ODQwNTFiYTIxMzk0OGNiZWUwNzYzZTFjMjQxYzE5",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-08-23T10:20:49Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-08-29T17:57:51Z"
      },
      "message": "remove FIRST_CLASS_MESSAGING support from the client\n\n- removes the FIRST_CLASS_MESSAGING support from the client, which was no\n  default setting anyway",
      "tree": {
        "sha": "622d97ff80a5eac388bdd825c691148399ae427b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/622d97ff80a5eac388bdd825c691148399ae427b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5fc3a0f70784051ba213948cbee0763e1c241c19",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fc3a0f70784051ba213948cbee0763e1c241c19",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5fc3a0f70784051ba213948cbee0763e1c241c19",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fc3a0f70784051ba213948cbee0763e1c241c19/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "c7df832d7aa6805d96f121ad458d7b45607c2f30",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7df832d7aa6805d96f121ad458d7b45607c2f30",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c7df832d7aa6805d96f121ad458d7b45607c2f30"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 0,
      "deletions": 49
    },
    "files": [
      {
        "sha": "12dfcffe695491563c436ccfb70df50efe0d8f95",
        "filename": "bitcoin-qt.pro",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fc3a0f70784051ba213948cbee0763e1c241c19/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fc3a0f70784051ba213948cbee0763e1c241c19/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-qt.pro?ref=5fc3a0f70784051ba213948cbee0763e1c241c19",
        "patch": "@@ -65,12 +65,6 @@ contains(USE_DBUS, 1) {\n     QT += dbus\n }\n \n-# use: qmake \"FIRST_CLASS_MESSAGING=1\"\n-contains(FIRST_CLASS_MESSAGING, 1) {\n-    message(Building with first-class messaging)\n-    DEFINES += FIRST_CLASS_MESSAGING\n-}\n-\n # use: qmake \"USE_IPV6=1\" ( enabled by default; default)\n #  or: qmake \"USE_IPV6=0\" (disabled by default)\n #  or: qmake \"USE_IPV6=-\" (not supported)"
      },
      {
        "sha": "0ad8e95e1394dd69afa727f7c5a0c19ee8ab100d",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 42,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fc3a0f70784051ba213948cbee0763e1c241c19/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fc3a0f70784051ba213948cbee0763e1c241c19/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=5fc3a0f70784051ba213948cbee0763e1c241c19",
        "patch": "@@ -115,9 +115,6 @@ BitcoinGUI::BitcoinGUI(QWidget *parent):\n     centralWidget->addWidget(addressBookPage);\n     centralWidget->addWidget(receiveCoinsPage);\n     centralWidget->addWidget(sendCoinsPage);\n-#ifdef FIRST_CLASS_MESSAGING\n-    centralWidget->addWidget(signVerifyMessageDialog);\n-#endif\n     setCentralWidget(centralWidget);\n \n     // Create status bar\n@@ -233,13 +230,6 @@ void BitcoinGUI::createActions()\n     verifyMessageAction->setToolTip(tr(\"Verify a message to ensure it was signed with a specified Bitcoin address\"));\n     tabGroup->addAction(verifyMessageAction);\n \n-#ifdef FIRST_CLASS_MESSAGING\n-    firstClassMessagingAction = new QAction(QIcon(\":/icons/edit\"), tr(\"S&ignatures\"), this);\n-    firstClassMessagingAction->setToolTip(signMessageAction->toolTip() + QString(\". / \") + verifyMessageAction->toolTip() + QString(\".\"));\n-    firstClassMessagingAction->setCheckable(true);\n-    tabGroup->addAction(firstClassMessagingAction);\n-#endif\n-\n     connect(overviewAction, SIGNAL(triggered()), this, SLOT(showNormalIfMinimized()));\n     connect(overviewAction, SIGNAL(triggered()), this, SLOT(gotoOverviewPage()));\n     connect(historyAction, SIGNAL(triggered()), this, SLOT(showNormalIfMinimized()));\n@@ -254,11 +244,6 @@ void BitcoinGUI::createActions()\n     connect(signMessageAction, SIGNAL(triggered()), this, SLOT(gotoSignMessageTab()));\n     connect(verifyMessageAction, SIGNAL(triggered()), this, SLOT(showNormalIfMinimized()));\n     connect(verifyMessageAction, SIGNAL(triggered()), this, SLOT(gotoVerifyMessageTab()));\n-#ifdef FIRST_CLASS_MESSAGING\n-    connect(firstClassMessagingAction, SIGNAL(triggered()), this, SLOT(showNormalIfMinimized()));\n-    // Always start with the sign message tab for FIRST_CLASS_MESSAGING\n-    connect(firstClassMessagingAction, SIGNAL(triggered()), this, SLOT(gotoSignMessageTab()));\n-#endif\n \n     quitAction = new QAction(QIcon(\":/icons/quit\"), tr(\"E&xit\"), this);\n     quitAction->setToolTip(tr(\"Quit application\"));\n@@ -310,10 +295,8 @@ void BitcoinGUI::createMenuBar()\n     QMenu *file = appMenuBar->addMenu(tr(\"&File\"));\n     file->addAction(backupWalletAction);\n     file->addAction(exportAction);\n-#ifndef FIRST_CLASS_MESSAGING\n     file->addAction(signMessageAction);\n     file->addAction(verifyMessageAction);\n-#endif\n     file->addSeparator();\n     file->addAction(quitAction);\n \n@@ -339,9 +322,6 @@ void BitcoinGUI::createToolBars()\n     toolbar->addAction(receiveCoinsAction);\n     toolbar->addAction(historyAction);\n     toolbar->addAction(addressBookAction);\n-#ifdef FIRST_CLASS_MESSAGING\n-    toolbar->addAction(firstClassMessagingAction);\n-#endif\n \n     QToolBar *toolbar2 = addToolBar(tr(\"Actions toolbar\"));\n     toolbar2->setToolButtonStyle(Qt::ToolButtonTextBesideIcon);\n@@ -441,9 +421,7 @@ void BitcoinGUI::createTrayIcon()\n     trayIconMenu->addSeparator();\n     trayIconMenu->addAction(sendCoinsAction);\n     trayIconMenu->addAction(receiveCoinsAction);\n-#ifndef FIRST_CLASS_MESSAGING\n     trayIconMenu->addSeparator();\n-#endif\n     trayIconMenu->addAction(signMessageAction);\n     trayIconMenu->addAction(verifyMessageAction);\n     trayIconMenu->addSeparator();\n@@ -747,37 +725,17 @@ void BitcoinGUI::gotoSendCoinsPage()\n \n void BitcoinGUI::gotoSignMessageTab(QString addr)\n {\n-#ifdef FIRST_CLASS_MESSAGING\n-    firstClassMessagingAction->setChecked(true);\n-    centralWidget->setCurrentWidget(signVerifyMessageDialog);\n-\n-    exportAction->setEnabled(false);\n-    disconnect(exportAction, SIGNAL(triggered()), 0, 0);\n-\n-    signVerifyMessageDialog->showTab_SM(false);\n-#else\n     // call show() in showTab_SM()\n     signVerifyMessageDialog->showTab_SM(true);\n-#endif\n \n     if(!addr.isEmpty())\n         signVerifyMessageDialog->setAddress_SM(addr);\n }\n \n void BitcoinGUI::gotoVerifyMessageTab(QString addr)\n {\n-#ifdef FIRST_CLASS_MESSAGING\n-    firstClassMessagingAction->setChecked(true);\n-    centralWidget->setCurrentWidget(signVerifyMessageDialog);\n-\n-    exportAction->setEnabled(false);\n-    disconnect(exportAction, SIGNAL(triggered()), 0, 0);\n-\n-    signVerifyMessageDialog->showTab_VM(false);\n-#else\n     // call show() in showTab_VM()\n     signVerifyMessageDialog->showTab_VM(true);\n-#endif\n \n     if(!addr.isEmpty())\n         signVerifyMessageDialog->setAddress_VM(addr);"
      },
      {
        "sha": "7f2022c28b96833d330f079b1e31181fd7b00c5f",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fc3a0f70784051ba213948cbee0763e1c241c19/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fc3a0f70784051ba213948cbee0763e1c241c19/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=5fc3a0f70784051ba213948cbee0763e1c241c19",
        "patch": "@@ -80,7 +80,6 @@ class BitcoinGUI : public QMainWindow\n     QAction *addressBookAction;\n     QAction *signMessageAction;\n     QAction *verifyMessageAction;\n-    QAction *firstClassMessagingAction;\n     QAction *aboutAction;\n     QAction *receiveCoinsAction;\n     QAction *optionsAction;"
      }
    ]
  },
  {
    "sha": "382e9e25ffb12d26fe6f28442466376107aca9d7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozODJlOWUyNWZmYjEyZDI2ZmU2ZjI4NDQyNDY2Mzc2MTA3YWNhOWQ3",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-08-29T08:12:34Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-08-29T17:59:22Z"
      },
      "message": "Qt: re-order GUI code\n\n- re-order Qt Actions and connect() calls to match the real GUI layout,\n  which makes things easier to read and understand\n- remove signMessageAction and verifyMessageAction from tabGroup as we\n  didn't use them anyway (as tooltips are not displayed in the menu remove\n  these too)\n- update 2 comments",
      "tree": {
        "sha": "4146797eb9dbc458a2829550e61b095659c5a8cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4146797eb9dbc458a2829550e61b095659c5a8cc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/382e9e25ffb12d26fe6f28442466376107aca9d7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/382e9e25ffb12d26fe6f28442466376107aca9d7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/382e9e25ffb12d26fe6f28442466376107aca9d7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/382e9e25ffb12d26fe6f28442466376107aca9d7/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "5fc3a0f70784051ba213948cbee0763e1c241c19",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fc3a0f70784051ba213948cbee0763e1c241c19",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5fc3a0f70784051ba213948cbee0763e1c241c19"
      }
    ],
    "stats": {
      "total": 59,
      "additions": 26,
      "deletions": 33
    },
    "files": [
      {
        "sha": "4e8bc8d31b19ecb9d466b9b99ed344cbf2e8fb85",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 33,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/382e9e25ffb12d26fe6f28442466376107aca9d7/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/382e9e25ffb12d26fe6f28442466376107aca9d7/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=382e9e25ffb12d26fe6f28442466376107aca9d7",
        "patch": "@@ -198,6 +198,18 @@ void BitcoinGUI::createActions()\n     overviewAction->setShortcut(QKeySequence(Qt::ALT + Qt::Key_1));\n     tabGroup->addAction(overviewAction);\n \n+    sendCoinsAction = new QAction(QIcon(\":/icons/send\"), tr(\"&Send coins\"), this);\n+    sendCoinsAction->setToolTip(tr(\"Send coins to a Bitcoin address\"));\n+    sendCoinsAction->setCheckable(true);\n+    sendCoinsAction->setShortcut(QKeySequence(Qt::ALT + Qt::Key_2));\n+    tabGroup->addAction(sendCoinsAction);\n+\n+    receiveCoinsAction = new QAction(QIcon(\":/icons/receiving_addresses\"), tr(\"&Receive coins\"), this);\n+    receiveCoinsAction->setToolTip(tr(\"Show the list of addresses for receiving payments\"));\n+    receiveCoinsAction->setCheckable(true);\n+    receiveCoinsAction->setShortcut(QKeySequence(Qt::ALT + Qt::Key_3));\n+    tabGroup->addAction(receiveCoinsAction);\n+\n     historyAction = new QAction(QIcon(\":/icons/history\"), tr(\"&Transactions\"), this);\n     historyAction->setToolTip(tr(\"Browse transaction history\"));\n     historyAction->setCheckable(true);\n@@ -210,40 +222,16 @@ void BitcoinGUI::createActions()\n     addressBookAction->setShortcut(QKeySequence(Qt::ALT + Qt::Key_5));\n     tabGroup->addAction(addressBookAction);\n \n-    receiveCoinsAction = new QAction(QIcon(\":/icons/receiving_addresses\"), tr(\"&Receive coins\"), this);\n-    receiveCoinsAction->setToolTip(tr(\"Show the list of addresses for receiving payments\"));\n-    receiveCoinsAction->setCheckable(true);\n-    receiveCoinsAction->setShortcut(QKeySequence(Qt::ALT + Qt::Key_3));\n-    tabGroup->addAction(receiveCoinsAction);\n-\n-    sendCoinsAction = new QAction(QIcon(\":/icons/send\"), tr(\"&Send coins\"), this);\n-    sendCoinsAction->setToolTip(tr(\"Send coins to a Bitcoin address\"));\n-    sendCoinsAction->setCheckable(true);\n-    sendCoinsAction->setShortcut(QKeySequence(Qt::ALT + Qt::Key_2));\n-    tabGroup->addAction(sendCoinsAction);\n-\n-    signMessageAction = new QAction(QIcon(\":/icons/edit\"), tr(\"Sign &message...\"), this);\n-    signMessageAction->setToolTip(tr(\"Sign a message to prove you own a Bitcoin address\"));\n-    tabGroup->addAction(signMessageAction);\n-\n-    verifyMessageAction = new QAction(QIcon(\":/icons/transaction_0\"), tr(\"&Verify message...\"), this);\n-    verifyMessageAction->setToolTip(tr(\"Verify a message to ensure it was signed with a specified Bitcoin address\"));\n-    tabGroup->addAction(verifyMessageAction);\n-\n     connect(overviewAction, SIGNAL(triggered()), this, SLOT(showNormalIfMinimized()));\n     connect(overviewAction, SIGNAL(triggered()), this, SLOT(gotoOverviewPage()));\n+    connect(sendCoinsAction, SIGNAL(triggered()), this, SLOT(showNormalIfMinimized()));\n+    connect(sendCoinsAction, SIGNAL(triggered()), this, SLOT(gotoSendCoinsPage()));\n+    connect(receiveCoinsAction, SIGNAL(triggered()), this, SLOT(showNormalIfMinimized()));\n+    connect(receiveCoinsAction, SIGNAL(triggered()), this, SLOT(gotoReceiveCoinsPage()));\n     connect(historyAction, SIGNAL(triggered()), this, SLOT(showNormalIfMinimized()));\n     connect(historyAction, SIGNAL(triggered()), this, SLOT(gotoHistoryPage()));\n     connect(addressBookAction, SIGNAL(triggered()), this, SLOT(showNormalIfMinimized()));\n     connect(addressBookAction, SIGNAL(triggered()), this, SLOT(gotoAddressBookPage()));\n-    connect(receiveCoinsAction, SIGNAL(triggered()), this, SLOT(showNormalIfMinimized()));\n-    connect(receiveCoinsAction, SIGNAL(triggered()), this, SLOT(gotoReceiveCoinsPage()));\n-    connect(sendCoinsAction, SIGNAL(triggered()), this, SLOT(showNormalIfMinimized()));\n-    connect(sendCoinsAction, SIGNAL(triggered()), this, SLOT(gotoSendCoinsPage()));\n-    connect(signMessageAction, SIGNAL(triggered()), this, SLOT(showNormalIfMinimized()));\n-    connect(signMessageAction, SIGNAL(triggered()), this, SLOT(gotoSignMessageTab()));\n-    connect(verifyMessageAction, SIGNAL(triggered()), this, SLOT(showNormalIfMinimized()));\n-    connect(verifyMessageAction, SIGNAL(triggered()), this, SLOT(gotoVerifyMessageTab()));\n \n     quitAction = new QAction(QIcon(\":/icons/quit\"), tr(\"E&xit\"), this);\n     quitAction->setToolTip(tr(\"Quit application\"));\n@@ -259,26 +247,31 @@ void BitcoinGUI::createActions()\n     optionsAction->setToolTip(tr(\"Modify configuration options for Bitcoin\"));\n     optionsAction->setMenuRole(QAction::PreferencesRole);\n     toggleHideAction = new QAction(QIcon(\":/icons/bitcoin\"), tr(\"&Show / Hide\"), this);\n-    exportAction = new QAction(QIcon(\":/icons/export\"), tr(\"&Export...\"), this);\n-    exportAction->setToolTip(tr(\"Export the data in the current tab to a file\"));\n     encryptWalletAction = new QAction(QIcon(\":/icons/lock_closed\"), tr(\"&Encrypt Wallet...\"), this);\n     encryptWalletAction->setToolTip(tr(\"Encrypt or decrypt wallet\"));\n     encryptWalletAction->setCheckable(true);\n     backupWalletAction = new QAction(QIcon(\":/icons/filesave\"), tr(\"&Backup Wallet...\"), this);\n     backupWalletAction->setToolTip(tr(\"Backup wallet to another location\"));\n     changePassphraseAction = new QAction(QIcon(\":/icons/key\"), tr(\"&Change Passphrase...\"), this);\n     changePassphraseAction->setToolTip(tr(\"Change the passphrase used for wallet encryption\"));\n+    signMessageAction = new QAction(QIcon(\":/icons/edit\"), tr(\"Sign &message...\"), this);\n+    verifyMessageAction = new QAction(QIcon(\":/icons/transaction_0\"), tr(\"&Verify message...\"), this);\n+\n+    exportAction = new QAction(QIcon(\":/icons/export\"), tr(\"&Export...\"), this);\n+    exportAction->setToolTip(tr(\"Export the data in the current tab to a file\"));\n     openRPCConsoleAction = new QAction(QIcon(\":/icons/debugwindow\"), tr(\"&Debug window\"), this);\n     openRPCConsoleAction->setToolTip(tr(\"Open debugging and diagnostic console\"));\n \n     connect(quitAction, SIGNAL(triggered()), qApp, SLOT(quit()));\n-    connect(optionsAction, SIGNAL(triggered()), this, SLOT(optionsClicked()));\n     connect(aboutAction, SIGNAL(triggered()), this, SLOT(aboutClicked()));\n     connect(aboutQtAction, SIGNAL(triggered()), qApp, SLOT(aboutQt()));\n+    connect(optionsAction, SIGNAL(triggered()), this, SLOT(optionsClicked()));\n     connect(toggleHideAction, SIGNAL(triggered()), this, SLOT(toggleHidden()));\n     connect(encryptWalletAction, SIGNAL(triggered(bool)), this, SLOT(encryptWallet(bool)));\n     connect(backupWalletAction, SIGNAL(triggered()), this, SLOT(backupWallet()));\n     connect(changePassphraseAction, SIGNAL(triggered()), this, SLOT(changePassphrase()));\n+    connect(signMessageAction, SIGNAL(triggered()), this, SLOT(gotoSignMessageTab()));\n+    connect(verifyMessageAction, SIGNAL(triggered()), this, SLOT(gotoVerifyMessageTab()));\n }\n \n void BitcoinGUI::createMenuBar()\n@@ -479,7 +472,7 @@ void BitcoinGUI::setNumConnections(int count)\n \n void BitcoinGUI::setNumBlocks(int count, int nTotalBlocks)\n {\n-    // don't show / hide progressBar and its label if we have no connection(s) to the network\n+    // don't show / hide progress bar and it's label if we have no connection to the network\n     if (!clientModel || clientModel->getNumConnections() == 0)\n     {\n         progressBarLabel->setVisible(false);\n@@ -517,7 +510,7 @@ void BitcoinGUI::setNumBlocks(int count, int nTotalBlocks)\n         tooltip = tr(\"Downloaded %1 blocks of transaction history.\").arg(count);\n     }\n \n-    // Override progressBarLabel text and hide progressBar, when we have warnings to display\n+    // Override progressBarLabel text and hide progress bar, when we have warnings to display\n     if (!strStatusBarWarnings.isEmpty())\n     {\n         progressBarLabel->setText(strStatusBarWarnings);"
      }
    ]
  }
]