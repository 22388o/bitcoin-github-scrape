[
  {
    "sha": "ac7c7ab99aeee4aeea333d720c5a211a443a366d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYzdjN2FiOTlhZWVlNGFlZWEzMzNkNzIwYzVhMjExYTQ0M2EzNjZk",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-05-13T10:35:39Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-05-13T10:35:39Z"
      },
      "message": "Improve error reporting at startup",
      "tree": {
        "sha": "68d5a71f061939435d34f924c585d98bd2b9c409",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/68d5a71f061939435d34f924c585d98bd2b9c409"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac7c7ab99aeee4aeea333d720c5a211a443a366d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac7c7ab99aeee4aeea333d720c5a211a443a366d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ac7c7ab99aeee4aeea333d720c5a211a443a366d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac7c7ab99aeee4aeea333d720c5a211a443a366d/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "82f66082b986132ab9ef039afa3c1e116dcbb36b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/82f66082b986132ab9ef039afa3c1e116dcbb36b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/82f66082b986132ab9ef039afa3c1e116dcbb36b"
      }
    ],
    "stats": {
      "total": 71,
      "additions": 37,
      "deletions": 34
    },
    "files": [
      {
        "sha": "92ccc58fba142ab821f35754b0c5a88c3992a39e",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 37,
        "deletions": 34,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac7c7ab99aeee4aeea333d720c5a211a443a366d/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac7c7ab99aeee4aeea333d720c5a211a443a366d/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=ac7c7ab99aeee4aeea333d720c5a211a443a366d",
        "patch": "@@ -119,15 +119,26 @@ bool AppInit(int argc, char* argv[])\n     return fRet;\n }\n \n+bool static InitError(const std::string &str)\n+{\n+    ThreadSafeMessageBox(str, _(\"Bitcoin\"), wxOK | wxMODAL);\n+    return false;\n+\n+}\n+\n+bool static InitWarning(const std::string &str)\n+{\n+    ThreadSafeMessageBox(str, _(\"Bitcoin\"), wxOK | wxICON_EXCLAMATION | wxMODAL);\n+    return true;\n+}\n+\n+\n bool static Bind(const CService &addr) {\n     if (IsLimited(addr))\n         return false;\n     std::string strError;\n     if (!BindListenPort(addr, strError))\n-    {\n-        ThreadSafeMessageBox(strError, _(\"Bitcoin\"), wxOK | wxMODAL);\n-        return false;\n-    }\n+        return InitError(strError);\n     return true;\n }\n \n@@ -352,10 +363,7 @@ bool AppInit2(int argc, char* argv[])\n     if (file) fclose(file);\n     static boost::interprocess::file_lock lock(pathLockFile.string().c_str());\n     if (!lock.try_lock())\n-    {\n-        ThreadSafeMessageBox(strprintf(_(\"Cannot obtain a lock on data directory %s.  Bitcoin is probably already running.\"), GetDataDir().string().c_str()), _(\"Bitcoin\"), wxOK|wxMODAL);\n-        return false;\n-    }\n+        return InitError(strprintf(_(\"Cannot obtain a lock on data directory %s.  Bitcoin is probably already running.\"), GetDataDir().string().c_str()));\n \n     std::ostringstream strErrors;\n     //\n@@ -414,8 +422,7 @@ bool AppInit2(int argc, char* argv[])\n         {\n             strErrors << _(\"Wallet needed to be rewritten: restart Bitcoin to complete\") << \"\\n\";\n             printf(\"%s\", strErrors.str().c_str());\n-            ThreadSafeMessageBox(strErrors.str(), _(\"Bitcoin\"), wxOK | wxICON_ERROR | wxMODAL);\n-            return false;\n+            return InitError(strErrors.str());\n         }\n         else\n             strErrors << _(\"Error loading wallet.dat\") << \"\\n\";\n@@ -485,10 +492,7 @@ bool AppInit2(int argc, char* argv[])\n     printf(\"mapAddressBook.size() = %d\\n\",  pwalletMain->mapAddressBook.size());\n \n     if (!strErrors.str().empty())\n-    {\n-        ThreadSafeMessageBox(strErrors.str(), _(\"Bitcoin\"), wxOK | wxICON_ERROR | wxMODAL);\n-        return false;\n-    }\n+        return InitError(strErrors.str());\n \n     // Add wallet transactions that aren't already in a block to mapTransactions\n     pwalletMain->ReacceptWalletTransactions();\n@@ -541,20 +545,15 @@ bool AppInit2(int argc, char* argv[])\n         fUseProxy = true;\n         addrProxy = CService(mapArgs[\"-proxy\"], 9050);\n         if (!addrProxy.IsValid())\n-        {\n-            ThreadSafeMessageBox(_(\"Invalid -proxy address\"), _(\"Bitcoin\"), wxOK | wxMODAL);\n-            return false;\n-        }\n+            return InitError(strprintf(_(\"Invalid -proxy address: '%s'\"), mapArgs[\"-proxy\"].c_str()));\n     }\n \n     if (mapArgs.count(\"-noproxy\"))\n     {\n         BOOST_FOREACH(std::string snet, mapMultiArgs[\"-noproxy\"]) {\n             enum Network net = ParseNetwork(snet);\n-            if (net == NET_UNROUTABLE) {\n-                ThreadSafeMessageBox(_(\"Unknown network specified in -noproxy\"), _(\"Bitcoin\"), wxOK | wxMODAL);\n-                return false;\n-            }\n+            if (net == NET_UNROUTABLE)\n+                return InitError(strprintf(_(\"Unknown network specified in -noproxy: '%s'\"), snet.c_str()));\n             SetNoProxy(net);\n         }\n     }\n@@ -581,10 +580,8 @@ bool AppInit2(int argc, char* argv[])\n     if (mapArgs.count(\"-blocknet\")) {\n         BOOST_FOREACH(std::string snet, mapMultiArgs[\"-blocknet\"]) {\n             enum Network net = ParseNetwork(snet);\n-            if (net == NET_UNROUTABLE) {\n-                ThreadSafeMessageBox(_(\"Unknown network specified in -blocknet\"), _(\"Bitcoin\"), wxOK | wxMODAL);\n-                return false;\n-            }\n+            if (net == NET_UNROUTABLE)\n+                return InitError(strprintf(_(\"Unknown network specified in -blocknet: '%s'\"), snet.c_str()));\n             SetLimited(net);\n         }\n     }\n@@ -595,6 +592,8 @@ bool AppInit2(int argc, char* argv[])\n         fNameLookup = true;\n     fNoListen = !GetBoolArg(\"-listen\", true);\n     nSocksVersion = GetArg(\"-socks\", 5);\n+    if (nSocksVersion != 4 && nSocksVersion != 5)\n+        return InitError(strprintf(_(\"Unknown -socks proxy version requested: %i\"), nSocksVersion));\n \n     BOOST_FOREACH(string strDest, mapMultiArgs[\"-seednode\"])\n         AddOneShot(strDest);\n@@ -611,7 +610,10 @@ bool AppInit2(int argc, char* argv[])\n         std::string strError;\n         if (mapArgs.count(\"-bind\")) {\n             BOOST_FOREACH(std::string strBind, mapMultiArgs[\"-bind\"]) {\n-                fBound |= Bind(CService(strBind, GetListenPort(), false));\n+                CService addrBind(strBind, GetListenPort(), false);\n+                if (!addrBind.IsValid())\n+                    return InitError(strprintf(_(\"Cannot resolve -bind address: '%s'\"), strBind.c_str()));\n+                fBound |= Bind(addrBind);\n             }\n         } else {\n             struct in_addr inaddr_any;\n@@ -627,19 +629,20 @@ bool AppInit2(int argc, char* argv[])\n \n     if (mapArgs.count(\"-externalip\"))\n     {\n-        BOOST_FOREACH(string strAddr, mapMultiArgs[\"-externalip\"])\n+        BOOST_FOREACH(string strAddr, mapMultiArgs[\"-externalip\"]) {\n+            CService addrLocal(strAddr, GetListenPort(), fNameLookup);\n+            if (!addrLocal.IsValid())\n+                return InitError(strprintf(_(\"Cannot resolve -externalip address: '%s'\"), strAddr.c_str()));\n             AddLocal(CService(strAddr, GetListenPort(), fNameLookup), LOCAL_MANUAL);\n+        }\n     }\n \n     if (mapArgs.count(\"-paytxfee\"))\n     {\n         if (!ParseMoney(mapArgs[\"-paytxfee\"], nTransactionFee))\n-        {\n-            ThreadSafeMessageBox(_(\"Invalid amount for -paytxfee=<amount>\"), _(\"Bitcoin\"), wxOK | wxMODAL);\n-            return false;\n-        }\n+            return InitError(strprintf(_(\"Invalid amount for -paytxfee=<amount>: '%s'\"), mapArgs[\"-paytxfee\"].c_str()));\n         if (nTransactionFee > 0.25 * COIN)\n-            ThreadSafeMessageBox(_(\"Warning: -paytxfee is set very high.  This is the transaction fee you will pay if you send a transaction.\"), _(\"Bitcoin\"), wxOK | wxICON_EXCLAMATION | wxMODAL);\n+            InitWarning(_(\"Warning: -paytxfee is set very high.  This is the transaction fee you will pay if you send a transaction.\"));\n     }\n \n     //\n@@ -651,7 +654,7 @@ bool AppInit2(int argc, char* argv[])\n     RandAddSeedPerfmon();\n \n     if (!CreateThread(StartNode, NULL))\n-        ThreadSafeMessageBox(_(\"Error: CreateThread(StartNode) failed\"), _(\"Bitcoin\"), wxOK | wxMODAL);\n+        InitError(_(\"Error: could not start node\"));\n \n     if (fServer)\n         CreateThread(ThreadRPCServer, NULL);"
      }
    ]
  }
]