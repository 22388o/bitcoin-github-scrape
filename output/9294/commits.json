[
  {
    "sha": "02592f4c5e6d9416165deef96398ac7760f457d1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMjU5MmY0YzVlNmQ5NDE2MTY1ZGVlZjk2Mzk4YWM3NzYwZjQ1N2Qx",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-01-10T15:45:30Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-24T09:28:37Z"
      },
      "message": "[Wallet] split the keypool in an internal and external part",
      "tree": {
        "sha": "e253d748e905d589885c1816acb798bd123434d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e253d748e905d589885c1816acb798bd123434d9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/02592f4c5e6d9416165deef96398ac7760f457d1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAljU5sUACgkQHrd2uwPH\nki2dkQ//c9TZjGxzeMubuDUn1+953EBOccyZM0zgT37IF3YsEAGnP97M/Es6uFA+\nUa86pSx4g5pArt4a2V4nUG2HCkjkAIBI1FbBTH5cJC62reA0iqT8h0QE8m1UIBmm\nHMS5tXLc5UzWsInblD9l/NvYBw+0i9R7vNteYPuhiIdmph0BQR8pQRhiSG2dOoaK\nqYIObMFefX63nFRzMIjLTlFYJLUiGXN/HLgMT44ntPop0VfFjM9YXJ3fLGB1CkGQ\nXvCOkQQ/iWxxrM+AAOB0dhQPHPbUBfjlDN83/j70AHgr6Qsk9rZNKdXZsDmVTEUs\nqWkAh1hdavkyxyj/RKYF2kUWSfuMbRArjzrY+b/WBIuc917Jn83pyMaqQ5Y+8CAT\nbushfLaDETU8PIU93Axh3AdIDgGzjNts3TIAsVFOd9VgLY98dfjNTur9Xy2sx4Eo\ns/Fz1ktE8YSBb4FGlcSu6GSCy0Z5mPSS+cFftWW+NGBJ6EmUIpNI8lnf0L3CY9tD\nEpV62JdKmomNwWCNuyAV57IFUqS25+G2NjZQ/1QuZKpaaZoPihAdpq0sGSRx49oF\ngrO0hvSUrjmxA/OD3emke/AEPwXqHrGd6dac350SKcWq68Yvo4trb4lLDOfbMghb\nTtp/wkiH2ZvCUa7w4iR8pmAxSYEsIbOHVWGgPmu7DoymE8bMIvU=\n=MBLv\n-----END PGP SIGNATURE-----",
        "payload": "tree e253d748e905d589885c1816acb798bd123434d9\nparent a230b0588788dbe1ac84622aea169c577b381241\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1484063130 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1490347717 +0100\n\n[Wallet] split the keypool in an internal and external part\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02592f4c5e6d9416165deef96398ac7760f457d1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/02592f4c5e6d9416165deef96398ac7760f457d1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02592f4c5e6d9416165deef96398ac7760f457d1/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a230b0588788dbe1ac84622aea169c577b381241",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a230b0588788dbe1ac84622aea169c577b381241",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a230b0588788dbe1ac84622aea169c577b381241"
      }
    ],
    "stats": {
      "total": 256,
      "additions": 180,
      "deletions": 76
    },
    "files": [
      {
        "sha": "7ab01040f0e6c2b509776482e3a3a8f7f24f2c35",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 13,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02592f4c5e6d9416165deef96398ac7760f457d1/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02592f4c5e6d9416165deef96398ac7760f457d1/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=02592f4c5e6d9416165deef96398ac7760f457d1",
        "patch": "@@ -221,7 +221,7 @@ UniValue getrawchangeaddress(const JSONRPCRequest& request)\n \n     CReserveKey reservekey(pwallet);\n     CPubKey vchPubKey;\n-    if (!reservekey.GetReservedKey(vchPubKey))\n+    if (!reservekey.GetReservedKey(vchPubKey, true))\n         throw JSONRPCError(RPC_WALLET_KEYPOOL_RAN_OUT, \"Error: Keypool ran out, please call keypoolrefill first\");\n \n     reservekey.KeepKey();\n@@ -2418,16 +2418,17 @@ UniValue getwalletinfo(const JSONRPCRequest& request)\n             \"Returns an object containing various wallet state info.\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n-            \"  \\\"walletversion\\\": xxxxx,       (numeric) the wallet version\\n\"\n-            \"  \\\"balance\\\": xxxxxxx,           (numeric) the total confirmed balance of the wallet in \" + CURRENCY_UNIT + \"\\n\"\n-            \"  \\\"unconfirmed_balance\\\": xxx,   (numeric) the total unconfirmed balance of the wallet in \" + CURRENCY_UNIT + \"\\n\"\n-            \"  \\\"immature_balance\\\": xxxxxx,   (numeric) the total immature balance of the wallet in \" + CURRENCY_UNIT + \"\\n\"\n-            \"  \\\"txcount\\\": xxxxxxx,           (numeric) the total number of transactions in the wallet\\n\"\n-            \"  \\\"keypoololdest\\\": xxxxxx,      (numeric) the timestamp (seconds since Unix epoch) of the oldest pre-generated key in the key pool\\n\"\n-            \"  \\\"keypoolsize\\\": xxxx,          (numeric) how many new keys are pre-generated\\n\"\n-            \"  \\\"unlocked_until\\\": ttt,        (numeric) the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked\\n\"\n-            \"  \\\"paytxfee\\\": x.xxxx,           (numeric) the transaction fee configuration, set in \" + CURRENCY_UNIT + \"/kB\\n\"\n-            \"  \\\"hdmasterkeyid\\\": \\\"<hash160>\\\" (string) the Hash160 of the HD master pubkey\\n\"\n+            \"  \\\"walletversion\\\": xxxxx,          (numeric) the wallet version\\n\"\n+            \"  \\\"balance\\\": xxxxxxx,              (numeric) the total confirmed balance of the wallet in \" + CURRENCY_UNIT + \"\\n\"\n+            \"  \\\"unconfirmed_balance\\\": xxx,      (numeric) the total unconfirmed balance of the wallet in \" + CURRENCY_UNIT + \"\\n\"\n+            \"  \\\"immature_balance\\\": xxxxxx,      (numeric) the total immature balance of the wallet in \" + CURRENCY_UNIT + \"\\n\"\n+            \"  \\\"txcount\\\": xxxxxxx,              (numeric) the total number of transactions in the wallet\\n\"\n+            \"  \\\"keypoololdest\\\": xxxxxx,         (numeric) the timestamp (seconds since Unix epoch) of the oldest pre-generated key in the key pool\\n\"\n+            \"  \\\"keypoolsize\\\": xxxx,             (numeric) how many new keys are pre-generated\\n\"\n+            \"  \\\"keypoolsize_hd_internal\\\": xxxx, (numeric) how many new keys are pre-generated for internal use (change outputs, 10% of the -keypoolsize target, only appears if HD is enabled)\\n\"\n+            \"  \\\"unlocked_until\\\": ttt,           (numeric) the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked\\n\"\n+            \"  \\\"paytxfee\\\": x.xxxx,              (numeric) the transaction fee configuration, set in \" + CURRENCY_UNIT + \"/kB\\n\"\n+            \"  \\\"hdmasterkeyid\\\": \\\"<hash160>\\\"     (string) the Hash160 of the HD master pubkey\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getwalletinfo\", \"\")\n@@ -2437,18 +2438,22 @@ UniValue getwalletinfo(const JSONRPCRequest& request)\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     UniValue obj(UniValue::VOBJ);\n+    size_t kpExternalSize = (int)pwallet->KeypoolCountExternalKeys();\n     obj.push_back(Pair(\"walletversion\", pwallet->GetVersion()));\n     obj.push_back(Pair(\"balance\",       ValueFromAmount(pwallet->GetBalance())));\n     obj.push_back(Pair(\"unconfirmed_balance\", ValueFromAmount(pwallet->GetUnconfirmedBalance())));\n     obj.push_back(Pair(\"immature_balance\",    ValueFromAmount(pwallet->GetImmatureBalance())));\n     obj.push_back(Pair(\"txcount\",       (int)pwallet->mapWallet.size()));\n     obj.push_back(Pair(\"keypoololdest\", pwallet->GetOldestKeyPoolTime()));\n-    obj.push_back(Pair(\"keypoolsize\",   (int)pwallet->GetKeyPoolSize()));\n+    obj.push_back(Pair(\"keypoolsize\", (int64_t)kpExternalSize));\n+    CKeyID masterKeyID = pwallet->GetHDChain().masterKeyID;\n+    if (!masterKeyID.IsNull()) {\n+        obj.push_back(Pair(\"keypoolsize_hd_internal\",   (int64_t)(pwallet->GetKeyPoolSize() - kpExternalSize)));\n+    }\n     if (pwallet->IsCrypted()) {\n         obj.push_back(Pair(\"unlocked_until\", pwallet->nRelockTime));\n     }\n     obj.push_back(Pair(\"paytxfee\",      ValueFromAmount(payTxFee.GetFeePerK())));\n-    CKeyID masterKeyID = pwallet->GetHDChain().masterKeyID;\n     if (!masterKeyID.IsNull())\n          obj.push_back(Pair(\"hdmasterkeyid\", masterKeyID.GetHex()));\n     return obj;"
      },
      {
        "sha": "71c97a4e8708c6ada42ffd4d71162d4aadac7c0e",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 85,
        "deletions": 42,
        "changes": 127,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02592f4c5e6d9416165deef96398ac7760f457d1/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02592f4c5e6d9416165deef96398ac7760f457d1/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=02592f4c5e6d9416165deef96398ac7760f457d1",
        "patch": "@@ -85,7 +85,7 @@ const CWalletTx* CWallet::GetWalletTx(const uint256& hash) const\n     return &(it->second);\n }\n \n-CPubKey CWallet::GenerateNewKey()\n+CPubKey CWallet::GenerateNewKey(bool internal)\n {\n     AssertLockHeld(cs_wallet); // mapKeyMetadata\n     bool fCompressed = CanSupportFeature(FEATURE_COMPRPUBKEY); // default to compressed public keys if we want 0.6.0 wallets\n@@ -98,7 +98,7 @@ CPubKey CWallet::GenerateNewKey()\n \n     // use HD key derivation if HD was enabled during wallet creation\n     if (IsHDEnabled()) {\n-        DeriveNewChildKey(metadata, secret);\n+        DeriveNewChildKey(metadata, secret, (CanSupportFeature(FEATURE_HD_SPLIT) ? internal : false));\n     } else {\n         secret.MakeNewKey(fCompressed);\n     }\n@@ -118,13 +118,13 @@ CPubKey CWallet::GenerateNewKey()\n     return pubkey;\n }\n \n-void CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret)\n+void CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret, bool internal)\n {\n     // for now we use a fixed keypath scheme of m/0'/0'/k\n     CKey key;                      //master key seed (256bit)\n     CExtKey masterKey;             //hd master key\n     CExtKey accountKey;            //key at m/0'\n-    CExtKey externalChainChildKey; //key at m/0'/0'\n+    CExtKey chainChildKey;         //key at m/0'/0' (external) or m/0'/1' (internal)\n     CExtKey childKey;              //key at m/0'/0'/<n>'\n \n     // try to get the master key\n@@ -137,19 +137,22 @@ void CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret)\n     // use hardened derivation (child keys >= 0x80000000 are hardened after bip32)\n     masterKey.Derive(accountKey, BIP32_HARDENED_KEY_LIMIT);\n \n-    // derive m/0'/0'\n-    accountKey.Derive(externalChainChildKey, BIP32_HARDENED_KEY_LIMIT);\n+    // derive m/0'/0' (external chain) OR m/0'/1' (internal chain)\n+    accountKey.Derive(chainChildKey, BIP32_HARDENED_KEY_LIMIT+(internal ? 1 : 0));\n \n     // derive child key at next index, skip keys already known to the wallet\n     do {\n         // always derive hardened keys\n         // childIndex | BIP32_HARDENED_KEY_LIMIT = derive childIndex in hardened child-index-range\n         // example: 1 | BIP32_HARDENED_KEY_LIMIT == 0x80000001 == 2147483649\n-        externalChainChildKey.Derive(childKey, hdChain.nExternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n-        metadata.hdKeypath = \"m/0'/0'/\" + std::to_string(hdChain.nExternalChainCounter) + \"'\";\n+        chainChildKey.Derive(childKey, (internal ? hdChain.nInternalChainCounter : hdChain.nExternalChainCounter) | BIP32_HARDENED_KEY_LIMIT);\n+        metadata.hdKeypath = \"m/0'/\" + std::string(internal ? \"1'/\"+ std::to_string(hdChain.nInternalChainCounter) : \"0'/\" + std::to_string(hdChain.nExternalChainCounter)) + \"'\";\n         metadata.hdMasterKeyID = hdChain.masterKeyID;\n         // increment childkey index\n-        hdChain.nExternalChainCounter++;\n+        if (internal)\n+            hdChain.nInternalChainCounter++;\n+        else\n+            hdChain.nExternalChainCounter++;\n     } while (HaveKey(childKey.key.GetPubKey().GetID()));\n     secret = childKey.key;\n \n@@ -799,7 +802,7 @@ bool CWallet::GetAccountPubkey(CPubKey &pubKey, std::string strAccount, bool bFo\n \n     // Generate a new key\n     if (bForceNew) {\n-        if (!GetKeyFromPool(account.vchPubKey))\n+        if (!GetKeyFromPool(account.vchPubKey, false))\n             return false;\n \n         SetAddressBook(account.vchPubKey.GetID(), strAccount, \"receive\");\n@@ -1304,8 +1307,8 @@ bool CWallet::SetHDMasterKey(const CPubKey& pubkey)\n {\n     LOCK(cs_wallet);\n \n-    // ensure this wallet.dat can only be opened by clients supporting HD\n-    SetMinVersion(FEATURE_HD);\n+    // ensure this wallet.dat can only be opened by clients supporting HD with chain split\n+    SetMinVersion(FEATURE_HD_SPLIT);\n \n     // store the keyid (hash160) together with\n     // the child index counter in the database\n@@ -2445,7 +2448,7 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CWalletT\n                         // Reserve a new key pair from key pool\n                         CPubKey vchPubKey;\n                         bool ret;\n-                        ret = reservekey.GetReservedKey(vchPubKey);\n+                        ret = reservekey.GetReservedKey(vchPubKey, true);\n                         if (!ret)\n                         {\n                             strFailReason = _(\"Keypool ran out, please call keypoolrefill first\");\n@@ -2899,18 +2902,31 @@ bool CWallet::NewKeyPool()\n         if (IsLocked())\n             return false;\n \n-        int64_t nKeys = std::max(GetArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t)0);\n-        for (int i = 0; i < nKeys; i++)\n-        {\n-            int64_t nIndex = i+1;\n-            walletdb.WritePool(nIndex, CKeyPool(GenerateNewKey()));\n-            setKeyPool.insert(nIndex);\n-        }\n-        LogPrintf(\"CWallet::NewKeyPool wrote %d new keys\\n\", nKeys);\n+        TopUpKeyPool();\n+        LogPrintf(\"CWallet::NewKeyPool rewrote keypool\\n\");\n     }\n     return true;\n }\n \n+size_t CWallet::KeypoolCountExternalKeys()\n+{\n+    AssertLockHeld(cs_wallet); // setKeyPool\n+\n+    CWalletDB walletdb(strWalletFile);\n+\n+    // count amount of external keys\n+    size_t amountE = 0;\n+    for(const int64_t& id : setKeyPool)\n+    {\n+        CKeyPool tmpKeypool;\n+        if (!walletdb.ReadPool(id, tmpKeypool))\n+            throw std::runtime_error(std::string(__func__) + \": read failed\");\n+        amountE += !tmpKeypool.fInternal;\n+    }\n+\n+    return amountE;\n+}\n+\n bool CWallet::TopUpKeyPool(unsigned int kpSize)\n {\n     {\n@@ -2919,30 +2935,46 @@ bool CWallet::TopUpKeyPool(unsigned int kpSize)\n         if (IsLocked())\n             return false;\n \n-        CWalletDB walletdb(strWalletFile);\n-\n         // Top up key pool\n         unsigned int nTargetSize;\n         if (kpSize > 0)\n             nTargetSize = kpSize;\n         else\n             nTargetSize = std::max(GetArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n \n-        while (setKeyPool.size() < (nTargetSize + 1))\n+        // count amount of available keys (internal, external)\n+        // make sure the keypool of external keys fits the user selected target (-keypool)\n+        // generate +20% internal keys (minimum 2 keys)\n+        int64_t amountExternal = KeypoolCountExternalKeys();\n+        int64_t amountInternal = setKeyPool.size() - amountExternal;\n+        int64_t targetInternal = max((int64_t)ceil(nTargetSize * 0.2), (int64_t) 2);\n+        int64_t missingExternal = max( (int64_t)(nTargetSize - amountExternal), (int64_t) 0);\n+        int64_t missingInternal = max(targetInternal - amountInternal, (int64_t) 0);\n+\n+        if (!IsHDEnabled() || !CanSupportFeature(FEATURE_HD_SPLIT))\n+        {\n+            // don't create extra internal keys\n+            missingInternal = 0;\n+        }\n+        bool internal = false;\n+        CWalletDB walletdb(strWalletFile);\n+        for (int64_t i = missingInternal + missingExternal; i--;)\n         {\n             int64_t nEnd = 1;\n+            if (i < missingInternal)\n+                internal = true;\n             if (!setKeyPool.empty())\n                 nEnd = *(--setKeyPool.end()) + 1;\n-            if (!walletdb.WritePool(nEnd, CKeyPool(GenerateNewKey())))\n+            if (!walletdb.WritePool(nEnd, CKeyPool(GenerateNewKey(internal), internal)))\n                 throw std::runtime_error(std::string(__func__) + \": writing generated key failed\");\n             setKeyPool.insert(nEnd);\n-            LogPrintf(\"keypool added key %d, size=%u\\n\", nEnd, setKeyPool.size());\n+            LogPrintf(\"keypool added key %d, size=%u, internal=%d\\n\", nEnd, setKeyPool.size(), internal);\n         }\n     }\n     return true;\n }\n \n-void CWallet::ReserveKeyFromKeyPool(int64_t& nIndex, CKeyPool& keypool)\n+void CWallet::ReserveKeyFromKeyPool(int64_t& nIndex, CKeyPool& keypool, bool internal)\n {\n     nIndex = -1;\n     keypool.vchPubKey = CPubKey();\n@@ -2958,14 +2990,24 @@ void CWallet::ReserveKeyFromKeyPool(int64_t& nIndex, CKeyPool& keypool)\n \n         CWalletDB walletdb(strWalletFile);\n \n-        nIndex = *(setKeyPool.begin());\n-        setKeyPool.erase(setKeyPool.begin());\n-        if (!walletdb.ReadPool(nIndex, keypool))\n-            throw std::runtime_error(std::string(__func__) + \": read failed\");\n-        if (!HaveKey(keypool.vchPubKey.GetID()))\n-            throw std::runtime_error(std::string(__func__) + \": unknown key in key pool\");\n-        assert(keypool.vchPubKey.IsValid());\n-        LogPrintf(\"keypool reserve %d\\n\", nIndex);\n+        // try to find a key that matches the internal/external filter\n+        for(const int64_t& id : setKeyPool)\n+        {\n+            CKeyPool tmpKeypool;\n+            if (!walletdb.ReadPool(id, tmpKeypool))\n+                throw std::runtime_error(std::string(__func__) + \": read failed\");\n+            if (!HaveKey(tmpKeypool.vchPubKey.GetID()))\n+                throw std::runtime_error(std::string(__func__) + \": unknown key in key pool\");\n+            if (!IsHDEnabled() || tmpKeypool.fInternal == internal)\n+            {\n+                nIndex = id;\n+                keypool = tmpKeypool;\n+                setKeyPool.erase(id);\n+                assert(keypool.vchPubKey.IsValid());\n+                LogPrintf(\"keypool reserve %d\\n\", nIndex);\n+                return;\n+            }\n+        }\n     }\n }\n \n@@ -2990,17 +3032,17 @@ void CWallet::ReturnKey(int64_t nIndex)\n     LogPrintf(\"keypool return %d\\n\", nIndex);\n }\n \n-bool CWallet::GetKeyFromPool(CPubKey& result)\n+bool CWallet::GetKeyFromPool(CPubKey& result, bool internal)\n {\n     int64_t nIndex = 0;\n     CKeyPool keypool;\n     {\n         LOCK(cs_wallet);\n-        ReserveKeyFromKeyPool(nIndex, keypool);\n+        ReserveKeyFromKeyPool(nIndex, keypool, internal);\n         if (nIndex == -1)\n         {\n             if (IsLocked()) return false;\n-            result = GenerateNewKey();\n+            result = GenerateNewKey(internal);\n             return true;\n         }\n         KeepKey(nIndex);\n@@ -3205,12 +3247,12 @@ std::set<CTxDestination> CWallet::GetAccountAddresses(const std::string& strAcco\n     return result;\n }\n \n-bool CReserveKey::GetReservedKey(CPubKey& pubkey)\n+bool CReserveKey::GetReservedKey(CPubKey& pubkey, bool internal)\n {\n     if (nIndex == -1)\n     {\n         CKeyPool keypool;\n-        pwallet->ReserveKeyFromKeyPool(nIndex, keypool);\n+        pwallet->ReserveKeyFromKeyPool(nIndex, keypool, internal);\n         if (nIndex != -1)\n             vchPubKey = keypool.vchPubKey;\n         else {\n@@ -3629,7 +3671,7 @@ CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n                 throw std::runtime_error(std::string(__func__) + \": Storing master key failed\");\n         }\n         CPubKey newDefaultKey;\n-        if (walletInstance->GetKeyFromPool(newDefaultKey)) {\n+        if (walletInstance->GetKeyFromPool(newDefaultKey, false)) {\n             walletInstance->SetDefaultKey(newDefaultKey);\n             if (!walletInstance->SetAddressBook(walletInstance->vchDefaultKey.GetID(), \"\", \"receive\")) {\n                 InitError(_(\"Cannot write default address\") += \"\\n\");\n@@ -3890,10 +3932,11 @@ CKeyPool::CKeyPool()\n     nTime = GetTime();\n }\n \n-CKeyPool::CKeyPool(const CPubKey& vchPubKeyIn)\n+CKeyPool::CKeyPool(const CPubKey& vchPubKeyIn, bool internalIn)\n {\n     nTime = GetTime();\n     vchPubKey = vchPubKeyIn;\n+    fInternal = internalIn;\n }\n \n CWalletKey::CWalletKey(int64_t nExpires)"
      },
      {
        "sha": "bf6c5a2a8781437a1ac7fd9292926f7bdcf6bdd3",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 19,
        "deletions": 6,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02592f4c5e6d9416165deef96398ac7760f457d1/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02592f4c5e6d9416165deef96398ac7760f457d1/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=02592f4c5e6d9416165deef96398ac7760f457d1",
        "patch": "@@ -86,6 +86,10 @@ enum WalletFeature\n     FEATURE_COMPRPUBKEY = 60000, // compressed public keys\n \n     FEATURE_HD = 130000, // Hierarchical key derivation after BIP32 (HD Wallet)\n+\n+    //TODO: FEATURE_HD_SPLIT needs to be bumped to 140000 once we branch of 0.14 //\n+    FEATURE_HD_SPLIT = 139900, // Wallet with HD chain split (change outputs will use m/0'/1'/k)\n+\n     FEATURE_LATEST = FEATURE_COMPRPUBKEY // HD is optional, use FEATURE_COMPRPUBKEY as latest version\n };\n \n@@ -96,9 +100,10 @@ class CKeyPool\n public:\n     int64_t nTime;\n     CPubKey vchPubKey;\n+    bool fInternal; // for change outputs\n \n     CKeyPool();\n-    CKeyPool(const CPubKey& vchPubKeyIn);\n+    CKeyPool(const CPubKey& vchPubKeyIn, bool internalIn);\n \n     ADD_SERIALIZE_METHODS;\n \n@@ -109,6 +114,13 @@ class CKeyPool\n             READWRITE(nVersion);\n         READWRITE(nTime);\n         READWRITE(vchPubKey);\n+        if (nVersion >= FEATURE_HD_SPLIT)\n+            READWRITE(fInternal);\n+        else\n+        {\n+            if (ser_action.ForRead())\n+                fInternal = false;\n+        }\n     }\n };\n \n@@ -774,8 +786,8 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n      * keystore implementation\n      * Generate a new key\n      */\n-    CPubKey GenerateNewKey();\n-    void DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret);\n+    CPubKey GenerateNewKey(bool internal = false);\n+    void DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret, bool internal = false);\n     //! Adds a key to the store, and saves it to disk.\n     bool AddKeyPubKey(const CKey& key, const CPubKey &pubkey) override;\n     //! Adds a key to the store, without saving it to disk (used by LoadWallet)\n@@ -883,11 +895,12 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     static CAmount GetRequiredFee(unsigned int nTxBytes);\n \n     bool NewKeyPool();\n+    size_t KeypoolCountExternalKeys();\n     bool TopUpKeyPool(unsigned int kpSize = 0);\n-    void ReserveKeyFromKeyPool(int64_t& nIndex, CKeyPool& keypool);\n+    void ReserveKeyFromKeyPool(int64_t& nIndex, CKeyPool& keypool, bool internal);\n     void KeepKey(int64_t nIndex);\n     void ReturnKey(int64_t nIndex);\n-    bool GetKeyFromPool(CPubKey &key);\n+    bool GetKeyFromPool(CPubKey &key, bool internal = false);\n     int64_t GetOldestKeyPoolTime();\n     void GetAllReserveKeys(std::set<CKeyID>& setAddress) const;\n \n@@ -1063,7 +1076,7 @@ class CReserveKey : public CReserveScript\n     }\n \n     void ReturnKey();\n-    bool GetReservedKey(CPubKey &pubkey);\n+    bool GetReservedKey(CPubKey &pubkey, bool internal = false);\n     void KeepKey();\n     void KeepScript() { KeepKey(); }\n };"
      },
      {
        "sha": "016296f259e497707ee553666c13d074eb49599b",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02592f4c5e6d9416165deef96398ac7760f457d1/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02592f4c5e6d9416165deef96398ac7760f457d1/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=02592f4c5e6d9416165deef96398ac7760f457d1",
        "patch": "@@ -46,9 +46,12 @@ class CHDChain\n {\n public:\n     uint32_t nExternalChainCounter;\n+    uint32_t nInternalChainCounter;\n     CKeyID masterKeyID; //!< master key hash160\n \n-    static const int CURRENT_VERSION = 1;\n+    static const int VERSION_HD_BASE        = 1;\n+    static const int VERSION_HD_CHAIN_SPLIT = 2;\n+    static const int CURRENT_VERSION        = VERSION_HD_CHAIN_SPLIT;\n     int nVersion;\n \n     CHDChain() { SetNull(); }\n@@ -58,13 +61,16 @@ class CHDChain\n     {\n         READWRITE(this->nVersion);\n         READWRITE(nExternalChainCounter);\n+        if (this->nVersion >= VERSION_HD_CHAIN_SPLIT)\n+            READWRITE(nInternalChainCounter);\n         READWRITE(masterKeyID);\n     }\n \n     void SetNull()\n     {\n         nVersion = CHDChain::CURRENT_VERSION;\n         nExternalChainCounter = 0;\n+        nInternalChainCounter = 0;\n         masterKeyID.SetNull();\n     }\n };"
      },
      {
        "sha": "a28ff94655d4a50a582ba475fd2c4593c5ddbe85",
        "filename": "test/functional/fundrawtransaction.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02592f4c5e6d9416165deef96398ac7760f457d1/test/functional/fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02592f4c5e6d9416165deef96398ac7760f457d1/test/functional/fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/fundrawtransaction.py?ref=02592f4c5e6d9416165deef96398ac7760f457d1",
        "patch": "@@ -467,6 +467,8 @@ def run_test(self):\n \n         # drain the keypool\n         self.nodes[1].getnewaddress()\n+        self.nodes[1].getrawchangeaddress()\n+        self.nodes[1].getrawchangeaddress()\n         inputs = []\n         outputs = {self.nodes[0].getnewaddress():1.1}\n         rawTx = self.nodes[1].createrawtransaction(inputs, outputs)\n@@ -476,6 +478,7 @@ def run_test(self):\n \n         #refill the keypool\n         self.nodes[1].walletpassphrase(\"test\", 100)\n+        self.nodes[1].keypoolrefill(8) #need to refill the keypool to get an internal change address\n         self.nodes[1].walletlock()\n \n         assert_raises_jsonrpc(-13, \"walletpassphrase\", self.nodes[1].sendtoaddress, self.nodes[0].getnewaddress(), 1.2)"
      },
      {
        "sha": "26585fc4adbc018ddc5c28460d56c5912f2c46f8",
        "filename": "test/functional/keypool.py",
        "status": "modified",
        "additions": 26,
        "deletions": 11,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02592f4c5e6d9416165deef96398ac7760f457d1/test/functional/keypool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02592f4c5e6d9416165deef96398ac7760f457d1/test/functional/keypool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/keypool.py?ref=02592f4c5e6d9416165deef96398ac7760f457d1",
        "patch": "@@ -27,28 +27,38 @@ def run_test(self):\n         wallet_info = nodes[0].getwalletinfo()\n         assert(addr_before_encrypting_data['hdmasterkeyid'] != wallet_info['hdmasterkeyid'])\n         assert(addr_data['hdmasterkeyid'] == wallet_info['hdmasterkeyid'])\n-        \n         assert_raises_jsonrpc(-12, \"Error: Keypool ran out, please call keypoolrefill first\", nodes[0].getnewaddress)\n \n-        # put three new keys in the keypool\n+        # put six (plus 2) new keys in the keypool (100% external-, +20% internal-keys, 2 in min)\n         nodes[0].walletpassphrase('test', 12000)\n-        nodes[0].keypoolrefill(3)\n+        nodes[0].keypoolrefill(6)\n         nodes[0].walletlock()\n+        wi = nodes[0].getwalletinfo()\n+        assert_equal(wi['keypoolsize_hd_internal'], 2)\n+        assert_equal(wi['keypoolsize'], 6)\n \n-        # drain the keys\n+        # drain the internal keys\n+        nodes[0].getrawchangeaddress()\n+        nodes[0].getrawchangeaddress()\n         addr = set()\n-        addr.add(nodes[0].getrawchangeaddress())\n-        addr.add(nodes[0].getrawchangeaddress())\n-        addr.add(nodes[0].getrawchangeaddress())\n-        addr.add(nodes[0].getrawchangeaddress())\n-        # assert that four unique addresses were returned\n-        assert(len(addr) == 4)\n         # the next one should fail\n         assert_raises_jsonrpc(-12, \"Keypool ran out\", nodes[0].getrawchangeaddress)\n \n+        # drain the external keys\n+        addr.add(nodes[0].getnewaddress())\n+        addr.add(nodes[0].getnewaddress())\n+        addr.add(nodes[0].getnewaddress())\n+        addr.add(nodes[0].getnewaddress())\n+        addr.add(nodes[0].getnewaddress())\n+        addr.add(nodes[0].getnewaddress())\n+        assert(len(addr) == 6)\n+        # the next one should fail\n+        assert_raises_jsonrpc(-12, \"Error: Keypool ran out, please call keypoolrefill first\", nodes[0].getnewaddress)\n+\n         # refill keypool with three new addresses\n         nodes[0].walletpassphrase('test', 1)\n         nodes[0].keypoolrefill(3)\n+\n         # test walletpassphrase timeout\n         time.sleep(1.1)\n         assert_equal(nodes[0].getwalletinfo()[\"unlocked_until\"], 0)\n@@ -57,9 +67,14 @@ def run_test(self):\n         nodes[0].generate(1)\n         nodes[0].generate(1)\n         nodes[0].generate(1)\n-        nodes[0].generate(1)\n         assert_raises_jsonrpc(-12, \"Keypool ran out\", nodes[0].generate, 1)\n \n+        nodes[0].walletpassphrase('test', 100)\n+        nodes[0].keypoolrefill(100)\n+        wi = nodes[0].getwalletinfo()\n+        assert_equal(wi['keypoolsize_hd_internal'], 20)\n+        assert_equal(wi['keypoolsize'], 100)\n+\n     def __init__(self):\n         super().__init__()\n         self.setup_clean_chain = False"
      },
      {
        "sha": "7eaa8090b5dff47b06108c278b937dcda0f208e3",
        "filename": "test/functional/wallet-dump.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02592f4c5e6d9416165deef96398ac7760f457d1/test/functional/wallet-dump.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02592f4c5e6d9416165deef96398ac7760f457d1/test/functional/wallet-dump.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet-dump.py?ref=02592f4c5e6d9416165deef96398ac7760f457d1",
        "patch": "@@ -88,7 +88,7 @@ def run_test (self):\n             read_dump(tmpdir + \"/node0/wallet.unencrypted.dump\", addrs, None)\n         assert_equal(found_addr, test_addr_count)  # all keys must be in the dump\n         assert_equal(found_addr_chg, 50)  # 50 blocks where mined\n-        assert_equal(found_addr_rsv, 90 + 1)  # keypool size (TODO: fix off-by-one)\n+        assert_equal(found_addr_rsv, 90*1.2) # 90 keys plus 20% internal keys\n \n         #encrypt wallet, restart, unlock and dump\n         self.nodes[0].encryptwallet('test')\n@@ -102,8 +102,8 @@ def run_test (self):\n         found_addr, found_addr_chg, found_addr_rsv, hd_master_addr_enc = \\\n             read_dump(tmpdir + \"/node0/wallet.encrypted.dump\", addrs, hd_master_addr_unenc)\n         assert_equal(found_addr, test_addr_count)\n-        assert_equal(found_addr_chg, 90 + 1 + 50)  # old reserve keys are marked as change now\n-        assert_equal(found_addr_rsv, 90 + 1)  # keypool size (TODO: fix off-by-one)\n+        assert_equal(found_addr_chg, 90*1.2 + 50)  # old reserve keys are marked as change now\n+        assert_equal(found_addr_rsv, 90*1.2) \n \n if __name__ == '__main__':\n     WalletDumpTest().main ()"
      },
      {
        "sha": "b17f788433e7dc666712e6c73d3fd34e8f28d0c1",
        "filename": "test/functional/wallet-hd.py",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02592f4c5e6d9416165deef96398ac7760f457d1/test/functional/wallet-hd.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02592f4c5e6d9416165deef96398ac7760f457d1/test/functional/wallet-hd.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet-hd.py?ref=02592f4c5e6d9416165deef96398ac7760f457d1",
        "patch": "@@ -42,6 +42,11 @@ def run_test (self):\n         masterkeyid = self.nodes[1].getwalletinfo()['hdmasterkeyid']\n         assert_equal(len(masterkeyid), 40)\n \n+        #create an internal key\n+        change_addr = self.nodes[1].getrawchangeaddress()\n+        change_addrV= self.nodes[1].validateaddress(change_addr);\n+        assert_equal(change_addrV[\"hdkeypath\"], \"m/0'/1'/0'\") #first internal child key\n+\n         # Import a non-HD private key in the HD wallet\n         non_hd_add = self.nodes[0].getnewaddress()\n         self.nodes[1].importprivkey(self.nodes[0].dumpprivkey(non_hd_add))\n@@ -65,6 +70,11 @@ def run_test (self):\n         self.nodes[0].sendtoaddress(non_hd_add, 1)\n         self.nodes[0].generate(1)\n \n+        #create an internal key (again)\n+        change_addr = self.nodes[1].getrawchangeaddress()\n+        change_addrV= self.nodes[1].validateaddress(change_addr);\n+        assert_equal(change_addrV[\"hdkeypath\"], \"m/0'/1'/1'\") #second internal child key\n+\n         self.sync_all()\n         assert_equal(self.nodes[1].getbalance(), num_hd_adds + 1)\n \n@@ -90,6 +100,15 @@ def run_test (self):\n         #connect_nodes_bi(self.nodes, 0, 1)\n         assert_equal(self.nodes[1].getbalance(), num_hd_adds + 1)\n \n+        #send a tx and make sure its using the internal chain for the changeoutput\n+        txid = self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), 1)\n+        outs = self.nodes[1].decoderawtransaction(self.nodes[1].gettransaction(txid)['hex'])['vout'];\n+        keypath = \"\"\n+        for out in outs:\n+            if out['value'] != 1:\n+                keypath = self.nodes[1].validateaddress(out['scriptPubKey']['addresses'][0])['hdkeypath']\n+        \n+        assert(keypath[0:7] == \"m/0'/1'\")\n \n if __name__ == '__main__':\n     WalletHDTest().main ()"
      }
    ]
  },
  {
    "sha": "d59531ddfc09f705c2ef3a33c41d6d910756da18",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNTk1MzFkZGZjMDlmNzA1YzJlZjNhMzNjNDFkNmQ5MTA3NTZkYTE4",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-01-16T07:56:37Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-24T09:28:37Z"
      },
      "message": "Immediately return setKeyPool's size if HD or HD_SPLIT is disabled or not supported",
      "tree": {
        "sha": "7b7f98783301e1b895b7d678997022575a3b9c8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7b7f98783301e1b895b7d678997022575a3b9c8f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d59531ddfc09f705c2ef3a33c41d6d910756da18",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAljU5sYACgkQHrd2uwPH\nki2gYBAArihqn6bTYuobUw5kPQzhTO+gC5Dsqf4QX5nSz48XPjzcoLPhLR6/WfF2\nYvNafs0vpUCbpg4To9dE+0Abk0DCmWeatg1X0MqSNXqTfs9wl8iSE/hDyHKc7HBK\nFo+BI/Loedb5VE70f8Z9hMOuzjdt0wecxs1u009rhRiht0kRNwytaGADgG8/KSnP\nvvVcaIuUavC6TH1oplUNoX0Kr28PROW4Qp6BacfXkwWDEMjajmIDZjyj4YMeKN6W\nOToJmrTZvHgHSkYDIb2hOX8uEVxMbMVR/BZ23Qcid0t71y9e7T/0GIvcNvf4mnF9\nG3yExTj9kr6O68+XY0LvWi+EU6OsB0QgnbpXxdg1TaN55BF3w6+qd0gi3ms4BAS9\nDgEtlJ6VsGR+TcL4Dwb+uPY2sddiDlo+RaOY+cP0uRw3o1jENCmimhOQnb/P2Jt5\nsRijbKiXntQHVdFoOYsEHX6e20sXKmc9r1YBomuSbVronN1iZTl/fG6ecjazy8ZQ\nQBjjCRxZX3i86RJY1wx0Z5KkPhg92FSjamIiqFV0G/nhsV9R3H/0+eBPwd+7nbFQ\nbKicaPB4pCfzZJqaVFWZ6kVinKdANojRRttdPDpq5hK8gbw1rFxmcv9B/ZHIPcwz\nXNEUSKJSfqq8sn/Ha55hvMeSRreXTrcY+k0t0IDx1KnAVyYaT6s=\n=B/sP\n-----END PGP SIGNATURE-----",
        "payload": "tree 7b7f98783301e1b895b7d678997022575a3b9c8f\nparent 02592f4c5e6d9416165deef96398ac7760f457d1\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1484553397 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1490347717 +0100\n\nImmediately return setKeyPool's size if HD or HD_SPLIT is disabled or not supported\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d59531ddfc09f705c2ef3a33c41d6d910756da18",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d59531ddfc09f705c2ef3a33c41d6d910756da18",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d59531ddfc09f705c2ef3a33c41d6d910756da18/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "02592f4c5e6d9416165deef96398ac7760f457d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02592f4c5e6d9416165deef96398ac7760f457d1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/02592f4c5e6d9416165deef96398ac7760f457d1"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "349dff4f2ef2c710d585259cadbd8f11db12f7f0",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d59531ddfc09f705c2ef3a33c41d6d910756da18/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d59531ddfc09f705c2ef3a33c41d6d910756da18/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=d59531ddfc09f705c2ef3a33c41d6d910756da18",
        "patch": "@@ -2912,6 +2912,10 @@ size_t CWallet::KeypoolCountExternalKeys()\n {\n     AssertLockHeld(cs_wallet); // setKeyPool\n \n+    // immediately return setKeyPool's size if HD or HD_SPLIT is disabled or not supported\n+    if (!IsHDEnabled() || !CanSupportFeature(FEATURE_HD_SPLIT))\n+        return setKeyPool.size();\n+\n     CWalletDB walletdb(strWalletFile);\n \n     // count amount of external keys"
      }
    ]
  },
  {
    "sha": "01de822c8dbc92d8039dd17de9193d72eb7fadd2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMWRlODIyYzhkYmM5MmQ4MDM5ZGQxN2RlOTE5M2Q3MmViN2ZhZGQy",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-01-16T07:57:31Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-24T09:28:38Z"
      },
      "message": "Removed redundant IsLocked() check in NewKeyPool()",
      "tree": {
        "sha": "588fd7bb4dd14cfc30f10ce5aea2f56fb1ad0a65",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/588fd7bb4dd14cfc30f10ce5aea2f56fb1ad0a65"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/01de822c8dbc92d8039dd17de9193d72eb7fadd2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAljU5sYACgkQHrd2uwPH\nki30DA//d0j/YBTmNkeJUczwApaMXcgUtdq8zTRm75lGgvgSa2xBG32CJPtfHcAS\nIdknGksBrOl5CBO/1Ia7MuetrFvP/wy6lmqQPeTxnDOvkt1CcCYHBLKF7ALVl/Jm\n4guepmjxKB2h5BGGiasGnpDHGhziJxZHDsreiTolyKeUD5zqy5qKTcD1EgcIwZZ2\nngZV3Zf5o5MRo/GuTKhEP8NdySAeVBGXn7Pm5ENj11RkK04r+sDqif6BMUjwm5E1\nVjKaw9HQhhPSz0ZNCvH/AN3Ron5lM+g3HSyvQHGMSNq27gdO1SssPvcAGQB9i7YI\nJi9UbvAaDov7EtjmXhSfsB3Q7G3C3rH7ZxtttzgYJl6tEq7k075Tmz0+zqutz72S\nvh2mRDQkoApbXFUs4XRyBjOprcihCJutfNvGkUUi003zP8Kekq5tSZN9xbG94oMY\n17Y0h7P3+F7tHKZt0Lcb7sSm61uv14DoZPs+mN21fXTzutNCGpwC73PuHiionJao\n7XczWpnTyEVKafUQgEK6VfdAZRAAMxSfMpyCjukC3GEFYjYfr8jn/K/rljxxYnZm\no8t0WpcBNfp7Ok25KvGI8DUvH9Gg/v7625wXXv1k5TUI3H/t+FGIBMUpiADgDpJ9\nYwOcnbC2R54v6PdzHkOcs9UP02J0IdyFaRDBC+wd+OEmSjd5yts=\n=0c3K\n-----END PGP SIGNATURE-----",
        "payload": "tree 588fd7bb4dd14cfc30f10ce5aea2f56fb1ad0a65\nparent d59531ddfc09f705c2ef3a33c41d6d910756da18\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1484553451 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1490347718 +0100\n\nRemoved redundant IsLocked() check in NewKeyPool()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01de822c8dbc92d8039dd17de9193d72eb7fadd2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/01de822c8dbc92d8039dd17de9193d72eb7fadd2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01de822c8dbc92d8039dd17de9193d72eb7fadd2/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d59531ddfc09f705c2ef3a33c41d6d910756da18",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d59531ddfc09f705c2ef3a33c41d6d910756da18",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d59531ddfc09f705c2ef3a33c41d6d910756da18"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 2,
      "deletions": 3
    },
    "files": [
      {
        "sha": "15dabad7f5e890b1c078dfb200818e4fd6154cf5",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/01de822c8dbc92d8039dd17de9193d72eb7fadd2/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/01de822c8dbc92d8039dd17de9193d72eb7fadd2/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=01de822c8dbc92d8039dd17de9193d72eb7fadd2",
        "patch": "@@ -2899,10 +2899,9 @@ bool CWallet::NewKeyPool()\n             walletdb.ErasePool(nIndex);\n         setKeyPool.clear();\n \n-        if (IsLocked())\n+        if (!TopUpKeyPool()) {\n             return false;\n-\n-        TopUpKeyPool();\n+        }\n         LogPrintf(\"CWallet::NewKeyPool rewrote keypool\\n\");\n     }\n     return true;"
      }
    ]
  },
  {
    "sha": "05a9b493eb93605c8d147634aecfd8bc92006847",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNWE5YjQ5M2ViOTM2MDVjOGQxNDc2MzRhZWNmZDhiYzkyMDA2ODQ3",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-01-16T08:00:23Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-24T09:28:38Z"
      },
      "message": "Fix wrong keypool internal size in RPC getwalletinfo help",
      "tree": {
        "sha": "fe00d2643ecbec172a87d38d37047d77486bea39",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fe00d2643ecbec172a87d38d37047d77486bea39"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/05a9b493eb93605c8d147634aecfd8bc92006847",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAljU5sYACgkQHrd2uwPH\nki35Kg//WckMBYuHjqhVHnFZ9N/QL7DVWeeW6+0fOTtuCDaEwL9TFP84h4qNvq38\nm/3R3GbjfTERx1ctxCq7DHQmj8vWVPvBeB+ViZ9q8RCqvyEOOWQji0HBmV/RTZRj\n8oj0seBBQbNIDLo7FFcrNu84hEU6xqwSokq3cCnElpywcvKaBZR4U1QyYk+p1hXG\nI+yf1/3IeBzfiBShxCcYmdqYf0EB1dOFaD5L/Sr44yLtInQVDTjHQ0+qQ/X6kbWR\nR/WZVJR49h+F1QOq3i4AekEwWGgLix6p3xrBNi63XS4wWAAiDEkE8Eskx3vMJ5Is\nlKh3wsfmB8LuIKwekvAZm6gQID1jdKnDDkLTn11ab75/GHYGIxEwhbYasGATNmqY\nBjSApq/vdZkz2HDm+mCOvG3H2zgf03g7iZaHOgQzt0s9ekUiFX0y4MGdi8ysw5jE\n7Dl4bQjscJ57lKGV3MnrPrwdSmHTkEWE0VI9Ferm0o+fHAS6ofbQZUwQ3vOwVpH2\nO6mf5RKBhxbfsZ6tyxEDr+SQ+Z1Bkw/N9/Bumsd6Hpu360xpVU3yT9h98tUT9o+r\nO3cqkmwKK7TAHeNahH5MTs162TG8jCo96MTu9zpkoQRPvH0yhN+SgPzetw9IE13x\nAh1pydmh8TYO2mYYgqetq2ZYIbAQNkXSu2j7Gl1rqdrbeH/WP3Q=\n=KL7Z\n-----END PGP SIGNATURE-----",
        "payload": "tree fe00d2643ecbec172a87d38d37047d77486bea39\nparent 01de822c8dbc92d8039dd17de9193d72eb7fadd2\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1484553623 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1490347718 +0100\n\nFix wrong keypool internal size in RPC getwalletinfo help\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05a9b493eb93605c8d147634aecfd8bc92006847",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/05a9b493eb93605c8d147634aecfd8bc92006847",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05a9b493eb93605c8d147634aecfd8bc92006847/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "01de822c8dbc92d8039dd17de9193d72eb7fadd2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01de822c8dbc92d8039dd17de9193d72eb7fadd2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/01de822c8dbc92d8039dd17de9193d72eb7fadd2"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "4e91c0be9e2185c8f9cc854b4fa700caef4538b3",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05a9b493eb93605c8d147634aecfd8bc92006847/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05a9b493eb93605c8d147634aecfd8bc92006847/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=05a9b493eb93605c8d147634aecfd8bc92006847",
        "patch": "@@ -1852,7 +1852,7 @@ UniValue gettransaction(const JSONRPCRequest& request)\n             \"      \\\"fee\\\": x.xxx,                     (numeric) The amount of the fee in \" + CURRENCY_UNIT + \". This is negative and only available for the \\n\"\n             \"                                           'send' category of transactions.\\n\"\n             \"      \\\"abandoned\\\": xxx                  (bool) 'true' if the transaction has been abandoned (inputs are respendable). Only available for the \\n\"\n-            \"                                           'send' category of transactions.\\n\"\t\t\t\n+            \"                                           'send' category of transactions.\\n\"\n             \"    }\\n\"\n             \"    ,...\\n\"\n             \"  ],\\n\"\n@@ -2424,8 +2424,8 @@ UniValue getwalletinfo(const JSONRPCRequest& request)\n             \"  \\\"immature_balance\\\": xxxxxx,      (numeric) the total immature balance of the wallet in \" + CURRENCY_UNIT + \"\\n\"\n             \"  \\\"txcount\\\": xxxxxxx,              (numeric) the total number of transactions in the wallet\\n\"\n             \"  \\\"keypoololdest\\\": xxxxxx,         (numeric) the timestamp (seconds since Unix epoch) of the oldest pre-generated key in the key pool\\n\"\n-            \"  \\\"keypoolsize\\\": xxxx,             (numeric) how many new keys are pre-generated\\n\"\n-            \"  \\\"keypoolsize_hd_internal\\\": xxxx, (numeric) how many new keys are pre-generated for internal use (change outputs, 10% of the -keypoolsize target, only appears if HD is enabled)\\n\"\n+            \"  \\\"keypoolsize\\\": xxxx,             (numeric) how many new keys are pre-generated (excluding internal-/chnage-output keys)\\n\"\n+            \"  \\\"keypoolsize_hd_internal\\\": xxxx, (numeric) how many new keys are pre-generated for internal use (change outputs, 20% of the -keypoolsize target, only appears if HD is enabled)\\n\"\n             \"  \\\"unlocked_until\\\": ttt,           (numeric) the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked\\n\"\n             \"  \\\"paytxfee\\\": x.xxxx,              (numeric) the transaction fee configuration, set in \" + CURRENCY_UNIT + \"/kB\\n\"\n             \"  \\\"hdmasterkeyid\\\": \\\"<hash160>\\\"     (string) the Hash160 of the HD master pubkey\\n\""
      }
    ]
  },
  {
    "sha": "469a47b7601bddeba052415efe95d0e8b0a7b05e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NjlhNDdiNzYwMWJkZGViYTA1MjQxNWVmZTk1ZDBlOGIwYTdiMDVl",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-01-16T08:05:27Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-24T09:28:38Z"
      },
      "message": "Make sure ReserveKeyFromKeyPool only hands out internal keys if HD_SPLIT is supported",
      "tree": {
        "sha": "cbf80270367f8f8909d06166e224746b3c7e7bbc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cbf80270367f8f8909d06166e224746b3c7e7bbc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/469a47b7601bddeba052415efe95d0e8b0a7b05e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAljU5sYACgkQHrd2uwPH\nki0WMxAAghAc5OdXo9FmN+uoK28tW9UkOwes5PlDCOXSxBbEbp/9c5SyG3clcDkx\nsYxguXG/N8xN2/I1BSgSf0McSsxBSjEtYaIJ3YcZ7L/lWplGRYI/161zvbJhm/KU\ntbyVIeXNb9//3UNnVoukTZkhhXGnixqpQpQtrGj+3HCsZg+4T/klmC1BXZhy5n7p\n4hPBs8deFCkQbg7eYOT+cNdEnTOB+rDelaYkdfZK70BfXVZuG01mC5K5ayGBtGsZ\nqnMRK3gvfc8Q1jkGVuCll1ilYT4QS7SVB8FQnltGT8pwxYV8RRI2Rx5cleByr4Vf\nLfxmPY4rfbyOmEpapvww3wEYm1AytvMJ2axti/8rqqrNrnylrGW243O9OMnebpUT\nvu32PqWxOiYatOYf+WaQch+CL/IKMXdUNsnZwqAHHN0bGbPcz+uQjk2Eq/xDrNzA\nvfLBpOVsTD3/DhumQYWvoAPSHgrNG/YP58RI0YoRy6qwDHKc+MO6RaNy9WVi/F8o\nShuRHX6UQx1PPaV783y7ollfjZLy3GLmjcKU0m6OiH5it4rIpW1C/3gPJVqzDlh1\nYCxTg/jYodrNd2qCxmJnLlWh3h0zNgyDBCG9AnNw2nzfbuMGs9wny0eDRdUSQe5k\nwJ5wJLCtOeUKV/mDyF7XR23gVeAZvN5TUkf0QsNxqEmyyvB0Vr8=\n=o1Ow\n-----END PGP SIGNATURE-----",
        "payload": "tree cbf80270367f8f8909d06166e224746b3c7e7bbc\nparent 05a9b493eb93605c8d147634aecfd8bc92006847\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1484553927 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1490347718 +0100\n\nMake sure ReserveKeyFromKeyPool only hands out internal keys if HD_SPLIT is supported\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/469a47b7601bddeba052415efe95d0e8b0a7b05e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/469a47b7601bddeba052415efe95d0e8b0a7b05e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/469a47b7601bddeba052415efe95d0e8b0a7b05e/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "05a9b493eb93605c8d147634aecfd8bc92006847",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05a9b493eb93605c8d147634aecfd8bc92006847",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/05a9b493eb93605c8d147634aecfd8bc92006847"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "2707567e8219bc3843ddd7abfa4737b40dc276f7",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/469a47b7601bddeba052415efe95d0e8b0a7b05e/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/469a47b7601bddeba052415efe95d0e8b0a7b05e/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=469a47b7601bddeba052415efe95d0e8b0a7b05e",
        "patch": "@@ -3001,7 +3001,7 @@ void CWallet::ReserveKeyFromKeyPool(int64_t& nIndex, CKeyPool& keypool, bool int\n                 throw std::runtime_error(std::string(__func__) + \": read failed\");\n             if (!HaveKey(tmpKeypool.vchPubKey.GetID()))\n                 throw std::runtime_error(std::string(__func__) + \": unknown key in key pool\");\n-            if (!IsHDEnabled() || tmpKeypool.fInternal == internal)\n+            if (!IsHDEnabled() || (tmpKeypool.fInternal == internal && CanSupportFeature(FEATURE_HD_SPLIT)))\n             {\n                 nIndex = id;\n                 keypool = tmpKeypool;"
      }
    ]
  },
  {
    "sha": "9af8f00a7530934d4c9c64eb6c2676ac80b24ace",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YWY4ZjAwYTc1MzA5MzRkNGM5YzY0ZWI2YzI2NzZhYzgwYjI0YWNl",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-01-16T10:08:00Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-24T09:28:38Z"
      },
      "message": "Make sure we hand out keypool keys if HD_SPLIT is not enabled",
      "tree": {
        "sha": "92a0c26f8aec2ec708ac2135afd1d430814a0c6f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/92a0c26f8aec2ec708ac2135afd1d430814a0c6f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9af8f00a7530934d4c9c64eb6c2676ac80b24ace",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAljU5sYACgkQHrd2uwPH\nki09Ww//WuLjQGUVxljbx15zlRzansBRZX9EnhdCoefdzYM3L7i5g9SRD0J+fX0D\ngq4rjCY8wWotXOy01fZkzHx28GspsXu7WK2IzyNetoZQojpisj2Q3HezcwLBNti9\n1nwHmvaSTB19WJDn55bHKE+Gb8G616xO3VhhPCKwv9jbLsOjj3JBZemTNOsT1ChV\nK7XX+k1R/HSfmdrdKqN3hQ/QihAxo63bHsz3I0JDppD5a8/WEjmz4HPu0u6eY1HS\n7jG553+auXZYz+rnU5GG5dNbhy4j4qbDCNMRkrX4QGuOoDJcCCoHmdy6Haz4hQZV\nEgY/jZ6JoEkozGfvXLakpU/x+LEroAoyzKk4FTruasYSIy4XdHcPdiYvnkukJHT3\nbxnz7SZj0RZTcR2zaa5Q89j4QpEFSvY2mLneXdG5Ok7dZsMmPXr2QcFhC5oMTDhv\n/3PtcdenjCBtFgMNZyuud+5x2OT2gIOM7tatYQGrS1mW+FrpYUGlCkHmgLmYUj7I\nBWc+SjNeu0+nluYFNeIBiUlbG/Y8EDvGmGJaR/aLT/wNTXfOidDeagM6vEVdqiRW\nChJ2lNoY/AgvcOa6lDzi9MV8lIIOWSmU3RKJKkeKA2UTj1fdNK5SHj/DBmdt7Y8P\nQVcOinxyXMBrQ/IcZQuFRPVTJelGlsVqc6Qw0uPXKSczQea/9xI=\n=TdA6\n-----END PGP SIGNATURE-----",
        "payload": "tree 92a0c26f8aec2ec708ac2135afd1d430814a0c6f\nparent 469a47b7601bddeba052415efe95d0e8b0a7b05e\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1484561280 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1490347718 +0100\n\nMake sure we hand out keypool keys if HD_SPLIT is not enabled\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9af8f00a7530934d4c9c64eb6c2676ac80b24ace",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9af8f00a7530934d4c9c64eb6c2676ac80b24ace",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9af8f00a7530934d4c9c64eb6c2676ac80b24ace/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "469a47b7601bddeba052415efe95d0e8b0a7b05e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/469a47b7601bddeba052415efe95d0e8b0a7b05e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/469a47b7601bddeba052415efe95d0e8b0a7b05e"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "9c51723664ec6736a3fb7e7e1a668aeecd090920",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9af8f00a7530934d4c9c64eb6c2676ac80b24ace/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9af8f00a7530934d4c9c64eb6c2676ac80b24ace/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=9af8f00a7530934d4c9c64eb6c2676ac80b24ace",
        "patch": "@@ -3001,7 +3001,7 @@ void CWallet::ReserveKeyFromKeyPool(int64_t& nIndex, CKeyPool& keypool, bool int\n                 throw std::runtime_error(std::string(__func__) + \": read failed\");\n             if (!HaveKey(tmpKeypool.vchPubKey.GetID()))\n                 throw std::runtime_error(std::string(__func__) + \": unknown key in key pool\");\n-            if (!IsHDEnabled() || (tmpKeypool.fInternal == internal && CanSupportFeature(FEATURE_HD_SPLIT)))\n+            if (!IsHDEnabled() || !CanSupportFeature(FEATURE_HD_SPLIT) || tmpKeypool.fInternal == internal)\n             {\n                 nIndex = id;\n                 keypool = tmpKeypool;"
      }
    ]
  },
  {
    "sha": "d0a627a53aa8cc5cd190f54c95b888dff88a4d37",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMGE2MjdhNTNhYThjYzVjZDE5MGY1NGM5NWI4ODhkZmY4OGE0ZDM3",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-01-16T10:10:12Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-24T09:28:39Z"
      },
      "message": "Fix issue where CDataStream->nVersion was taken a CKeyPool record version",
      "tree": {
        "sha": "7cf29b3bec17ea60859875eb6b76c9a5fb8612ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7cf29b3bec17ea60859875eb6b76c9a5fb8612ce"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d0a627a53aa8cc5cd190f54c95b888dff88a4d37",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAljU5scACgkQHrd2uwPH\nki1B9w//dqjD8R3rYL266Alydv7ZtMhNt9ZdQgArR+S8hHNaSEoqO9xGLipIprAA\ngyr+fV+42AXKrrP8xMX7J6SOKK75tQgEE0h0AufWk6IcK7nBSFJBPm5+Xb1gMjtF\nkVUCypbZsQluCdm5KNqfaRj9XeRhuJ9hOmiXxzU3XSm997fDPF7gXpsoE/wEfgwI\nL3DjcoBEOykkF/46XrBpIPDaM+9qHKBNd4h3i2D6SlT+9ASZozrGwfHOKpAwmnuL\n2yv1522ueG/GTNHYHySyP7UeeaGR+6IYdI+ynDlEkfvt9DA7FxZryqFyEJCSF10A\n3ve9MGqmW+R++VdszwaccIvzuzgvLRvTE8VmDMsL/vU6mozx1kXu3nrfger32PWP\nhlyumkHNXemSBtwE1Qz6OWfQBsnKLBLtfdqlbVdR5lbCYZpXHupfuNIEy88/JQvg\nSkaXOt/UXVlxw+KhaFo8IUUOY9gS6o0lMqVwtR0R/I087J8UtPh/u/rEzA3RgK0Z\nTtlUaW/GDt4TYKZGFQU1ezH99L/CB0nzP5WzAisqICI/Q3TGA5w9Fg5XAeW6NjQ8\nKsmfKOn398C8I/s+MTmM9Y6mFCYLvF4qgUP3sPeJHWwGMSJ4l6CcV4wNhPyKx47C\nzKsszwEXxTSfZ1Vz4mxcOl3yolU9fTQkKeWMY88NFvVfBHXVy5s=\n=liPY\n-----END PGP SIGNATURE-----",
        "payload": "tree 7cf29b3bec17ea60859875eb6b76c9a5fb8612ce\nparent 9af8f00a7530934d4c9c64eb6c2676ac80b24ace\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1484561412 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1490347719 +0100\n\nFix issue where CDataStream->nVersion was taken a CKeyPool record version\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0a627a53aa8cc5cd190f54c95b888dff88a4d37",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d0a627a53aa8cc5cd190f54c95b888dff88a4d37",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0a627a53aa8cc5cd190f54c95b888dff88a4d37/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9af8f00a7530934d4c9c64eb6c2676ac80b24ace",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9af8f00a7530934d4c9c64eb6c2676ac80b24ace",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9af8f00a7530934d4c9c64eb6c2676ac80b24ace"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 11,
      "deletions": 5
    },
    "files": [
      {
        "sha": "488e6690cf6c99f1135a11b4322c5416ad8c3ab4",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0a627a53aa8cc5cd190f54c95b888dff88a4d37/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0a627a53aa8cc5cd190f54c95b888dff88a4d37/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=d0a627a53aa8cc5cd190f54c95b888dff88a4d37",
        "patch": "@@ -3933,6 +3933,7 @@ bool CWallet::BackupWallet(const std::string& strDest)\n CKeyPool::CKeyPool()\n {\n     nTime = GetTime();\n+    fInternal = false;\n }\n \n CKeyPool::CKeyPool(const CPubKey& vchPubKeyIn, bool internalIn)"
      },
      {
        "sha": "d93830f0857d3b2f1889fae8e144a2d35a91469b",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 10,
        "deletions": 5,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0a627a53aa8cc5cd190f54c95b888dff88a4d37/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0a627a53aa8cc5cd190f54c95b888dff88a4d37/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=d0a627a53aa8cc5cd190f54c95b888dff88a4d37",
        "patch": "@@ -114,12 +114,17 @@ class CKeyPool\n             READWRITE(nVersion);\n         READWRITE(nTime);\n         READWRITE(vchPubKey);\n-        if (nVersion >= FEATURE_HD_SPLIT)\n-            READWRITE(fInternal);\n-        else\n-        {\n-            if (ser_action.ForRead())\n+        if (ser_action.ForRead()) {\n+            try {\n+                READWRITE(fInternal);\n+            }\n+            catch (...) {\n+                /* flag as external address if we can't read the internal boolean */\n                 fInternal = false;\n+            }\n+        }\n+        else {\n+            READWRITE(fInternal);\n         }\n     }\n };"
      }
    ]
  },
  {
    "sha": "bcafca1077cf789ba79d16501a8cbb5d692bf8e6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiY2FmY2ExMDc3Y2Y3ODliYTc5ZDE2NTAxYThjYmI1ZDY5MmJmOGU2",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-01-16T10:22:30Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-24T09:28:39Z"
      },
      "message": "Make sure we always generate one keypool key at minimum",
      "tree": {
        "sha": "e138e694f49d7a8f57fe3b78ae6f95c29b86f1e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e138e694f49d7a8f57fe3b78ae6f95c29b86f1e1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bcafca1077cf789ba79d16501a8cbb5d692bf8e6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAljU5scACgkQHrd2uwPH\nki2KtRAAwBdb+yktSv9Ncm8GbGoJfGfgee56aUBz/26bBqbAKBREXHxHOj9D656Z\nPnGyXb0JUCnSjChZ7yzQb9q+06Gu18bw35i0+IU6A0RDtGrAsoa7solcm6kYy90L\niZAfHLylAAlKy1T7+y41IY+869kUyp1kakUbrOKcDhuRtJZu6TSI2yVoAnF6nszr\nP+tJFKW/xMYKlgKCBg2jFnf9IHNVK6iOEAOCkkzw7hOiswqYaZtKHH3r0jkAWtPd\nsqUZ2NRl7QIGDSkPX5ZnQ4jo0mk3MmvHD6oICbmztvL89iZrfDqgupH/4AqkIu4R\nqWodMxHaPWp74IpQqafu6ADngB4dRaCkhaUSg67EeSC8dqRJcjVZanrIGcH67EXQ\nu67OcRLXZfaOgCF+WnPi52rU2O+TrgMOThRbxHA6Up8INMlT5asSgIDpeqMmAlRm\ndxLGDOmqU44uWEZphgQN3pOK99v0VWnBRkSM37cZW6jFS1k1hQwBWFAbF35OR8Kj\nlARlT+TYmBoPOgK8TwcKU+PdCGDRJTjb7XbTO3tKGKKywP0Yb/WjmNsPbEcjqZaH\niVBgw8VZqNADnEpDD2WiBKrubZsHnKEb2SB93nwGQZ/T/wdHq2YzNPodKQwOWNgd\n3JAj/c2zXPlCxGz6XUIytU5UJcn7MKZwjFIaI0yyZAL7mQUGPPE=\n=hW1P\n-----END PGP SIGNATURE-----",
        "payload": "tree e138e694f49d7a8f57fe3b78ae6f95c29b86f1e1\nparent d0a627a53aa8cc5cd190f54c95b888dff88a4d37\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1484562150 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1490347719 +0100\n\nMake sure we always generate one keypool key at minimum\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bcafca1077cf789ba79d16501a8cbb5d692bf8e6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bcafca1077cf789ba79d16501a8cbb5d692bf8e6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bcafca1077cf789ba79d16501a8cbb5d692bf8e6/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d0a627a53aa8cc5cd190f54c95b888dff88a4d37",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0a627a53aa8cc5cd190f54c95b888dff88a4d37",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d0a627a53aa8cc5cd190f54c95b888dff88a4d37"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "e7ac918b279cee2ccbfd53f9928154e9a3dee7fa",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bcafca1077cf789ba79d16501a8cbb5d692bf8e6/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bcafca1077cf789ba79d16501a8cbb5d692bf8e6/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=bcafca1077cf789ba79d16501a8cbb5d692bf8e6",
        "patch": "@@ -2950,9 +2950,9 @@ bool CWallet::TopUpKeyPool(unsigned int kpSize)\n         // generate +20% internal keys (minimum 2 keys)\n         int64_t amountExternal = KeypoolCountExternalKeys();\n         int64_t amountInternal = setKeyPool.size() - amountExternal;\n-        int64_t targetInternal = max((int64_t)ceil(nTargetSize * 0.2), (int64_t) 2);\n-        int64_t missingExternal = max( (int64_t)(nTargetSize - amountExternal), (int64_t) 0);\n-        int64_t missingInternal = max(targetInternal - amountInternal, (int64_t) 0);\n+        int64_t targetInternal = std::max((int64_t)ceil(nTargetSize * 0.2), (int64_t) 2);\n+        int64_t missingExternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - amountExternal, (int64_t) 0);\n+        int64_t missingInternal = std::max(targetInternal - amountInternal, (int64_t) 0);\n \n         if (!IsHDEnabled() || !CanSupportFeature(FEATURE_HD_SPLIT))\n         {"
      }
    ]
  },
  {
    "sha": "79df9df3482d71391dee1dd59054aed8f7bbfa6b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OWRmOWRmMzQ4MmQ3MTM5MWRlZTFkZDU5MDU0YWVkOGY3YmJmYTZi",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-01-17T07:55:30Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-24T09:28:39Z"
      },
      "message": "Switch to 100% for the HD internal keypool size",
      "tree": {
        "sha": "6fcfc3d7002941d921faf4ee5c4c0440e1fcce46",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6fcfc3d7002941d921faf4ee5c4c0440e1fcce46"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/79df9df3482d71391dee1dd59054aed8f7bbfa6b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAljU5scACgkQHrd2uwPH\nki2MIA/+KV0+Fv/YVN/lvEO0Onh/ZwmotX5xob+Ouye67X4A9MmyeyanyMeKa8JI\nVbY/K668JS0jGoRrlFoCZuCSvOfr2OyyoR3fPWVzH/92Sjsk3BXRnNROaYJYWRbi\nR63I3rCtkDAVDHPVqaO3Yl9kk2EBwDF5tDT+40pqVdfAKl5yhkrEc66aleKMK5WJ\nVfvdOF3+RtfyuVMljMo/l9Mc40MTOgNQ1cQzojGgbfH4HkTrUzA6U9cy1ALVk7db\nuvP8xmSFSZtbtdcZD0CSoQeX3/bRTuaG+hJw+uMJWoKYEHQ6b6bd2uxqqM+B9bbm\n7d7jq0C/JMe5rzNG90Js3IoN7xFKrdAUV85BAMOahBNJsCzplcD5G8CM+sjg7vop\nZpeV/YzqR2ezPHST1Hah3qcFmAE342x2IbVDdtHSWNZzONbb+o7tovE/+0nLhiDw\nN4kTY5AoS/zxuJv2yVCwU1jfpeiXs0Qut7CoDQEhF4OWRDKRqU7FDAwY7Tp0XgDQ\ntMrDMEZeIdIvLb2LimIvV4A7nbYTXQOkm5SbN+KbNN7C5LWdfh0pK3aCHtJw1f8L\nphFwsFoBPkKO5oZieCyM+y7J11jAz70tIpk6bLK0Ncli4tqABeBVAu+lXfFOTjjG\nEAKcbhAlsegTl4wu7uFAPwPuHyYsQoVKonO3F9sVcIW9bK7E8cs=\n=21jI\n-----END PGP SIGNATURE-----",
        "payload": "tree 6fcfc3d7002941d921faf4ee5c4c0440e1fcce46\nparent bcafca1077cf789ba79d16501a8cbb5d692bf8e6\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1484639730 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1490347719 +0100\n\nSwitch to 100% for the HD internal keypool size\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79df9df3482d71391dee1dd59054aed8f7bbfa6b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/79df9df3482d71391dee1dd59054aed8f7bbfa6b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79df9df3482d71391dee1dd59054aed8f7bbfa6b/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bcafca1077cf789ba79d16501a8cbb5d692bf8e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bcafca1077cf789ba79d16501a8cbb5d692bf8e6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bcafca1077cf789ba79d16501a8cbb5d692bf8e6"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 14,
      "deletions": 13
    },
    "files": [
      {
        "sha": "f07c187c87a72124c6143883a0b3efa3ea3d9add",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79df9df3482d71391dee1dd59054aed8f7bbfa6b/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79df9df3482d71391dee1dd59054aed8f7bbfa6b/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=79df9df3482d71391dee1dd59054aed8f7bbfa6b",
        "patch": "@@ -2424,8 +2424,8 @@ UniValue getwalletinfo(const JSONRPCRequest& request)\n             \"  \\\"immature_balance\\\": xxxxxx,      (numeric) the total immature balance of the wallet in \" + CURRENCY_UNIT + \"\\n\"\n             \"  \\\"txcount\\\": xxxxxxx,              (numeric) the total number of transactions in the wallet\\n\"\n             \"  \\\"keypoololdest\\\": xxxxxx,         (numeric) the timestamp (seconds since Unix epoch) of the oldest pre-generated key in the key pool\\n\"\n-            \"  \\\"keypoolsize\\\": xxxx,             (numeric) how many new keys are pre-generated (excluding internal-/chnage-output keys)\\n\"\n-            \"  \\\"keypoolsize_hd_internal\\\": xxxx, (numeric) how many new keys are pre-generated for internal use (change outputs, 20% of the -keypoolsize target, only appears if HD is enabled)\\n\"\n+            \"  \\\"keypoolsize\\\": xxxx,             (numeric) how many new keys are pre-generated (only counts external keys)\\n\"\n+            \"  \\\"keypoolsize_hd_internal\\\": xxxx, (numeric) how many new keys are pre-generated for internal use (used for change outputs, only appears if HD is enabled otherwise there is no need for internal keys)\\n\"\n             \"  \\\"unlocked_until\\\": ttt,           (numeric) the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked\\n\"\n             \"  \\\"paytxfee\\\": x.xxxx,              (numeric) the transaction fee configuration, set in \" + CURRENCY_UNIT + \"/kB\\n\"\n             \"  \\\"hdmasterkeyid\\\": \\\"<hash160>\\\"     (string) the Hash160 of the HD master pubkey\\n\""
      },
      {
        "sha": "7ad48e37b0eae2bdac31bc7f1cf1101a5a7ab82b",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79df9df3482d71391dee1dd59054aed8f7bbfa6b/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79df9df3482d71391dee1dd59054aed8f7bbfa6b/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=79df9df3482d71391dee1dd59054aed8f7bbfa6b",
        "patch": "@@ -2946,13 +2946,11 @@ bool CWallet::TopUpKeyPool(unsigned int kpSize)\n             nTargetSize = std::max(GetArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n \n         // count amount of available keys (internal, external)\n-        // make sure the keypool of external keys fits the user selected target (-keypool)\n-        // generate +20% internal keys (minimum 2 keys)\n+        // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n         int64_t amountExternal = KeypoolCountExternalKeys();\n         int64_t amountInternal = setKeyPool.size() - amountExternal;\n-        int64_t targetInternal = std::max((int64_t)ceil(nTargetSize * 0.2), (int64_t) 2);\n         int64_t missingExternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - amountExternal, (int64_t) 0);\n-        int64_t missingInternal = std::max(targetInternal - amountInternal, (int64_t) 0);\n+        int64_t missingInternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - amountInternal, (int64_t) 0);\n \n         if (!IsHDEnabled() || !CanSupportFeature(FEATURE_HD_SPLIT))\n         {"
      },
      {
        "sha": "6bb7d7f3349f43531243294bf137c8cd73cd2083",
        "filename": "test/functional/fundrawtransaction.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79df9df3482d71391dee1dd59054aed8f7bbfa6b/test/functional/fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79df9df3482d71391dee1dd59054aed8f7bbfa6b/test/functional/fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/fundrawtransaction.py?ref=79df9df3482d71391dee1dd59054aed8f7bbfa6b",
        "patch": "@@ -468,7 +468,6 @@ def run_test(self):\n         # drain the keypool\n         self.nodes[1].getnewaddress()\n         self.nodes[1].getrawchangeaddress()\n-        self.nodes[1].getrawchangeaddress()\n         inputs = []\n         outputs = {self.nodes[0].getnewaddress():1.1}\n         rawTx = self.nodes[1].createrawtransaction(inputs, outputs)"
      },
      {
        "sha": "cb9ab688d1ce05961ed96a018c0fa15373c26168",
        "filename": "test/functional/keypool.py",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79df9df3482d71391dee1dd59054aed8f7bbfa6b/test/functional/keypool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79df9df3482d71391dee1dd59054aed8f7bbfa6b/test/functional/keypool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/keypool.py?ref=79df9df3482d71391dee1dd59054aed8f7bbfa6b",
        "patch": "@@ -29,17 +29,21 @@ def run_test(self):\n         assert(addr_data['hdmasterkeyid'] == wallet_info['hdmasterkeyid'])\n         assert_raises_jsonrpc(-12, \"Error: Keypool ran out, please call keypoolrefill first\", nodes[0].getnewaddress)\n \n-        # put six (plus 2) new keys in the keypool (100% external-, +20% internal-keys, 2 in min)\n+        # put six (plus 2) new keys in the keypool (100% external-, +100% internal-keys, 1 in min)\n         nodes[0].walletpassphrase('test', 12000)\n         nodes[0].keypoolrefill(6)\n         nodes[0].walletlock()\n         wi = nodes[0].getwalletinfo()\n-        assert_equal(wi['keypoolsize_hd_internal'], 2)\n+        assert_equal(wi['keypoolsize_hd_internal'], 6)\n         assert_equal(wi['keypoolsize'], 6)\n \n         # drain the internal keys\n         nodes[0].getrawchangeaddress()\n         nodes[0].getrawchangeaddress()\n+        nodes[0].getrawchangeaddress()\n+        nodes[0].getrawchangeaddress()\n+        nodes[0].getrawchangeaddress()\n+        nodes[0].getrawchangeaddress()\n         addr = set()\n         # the next one should fail\n         assert_raises_jsonrpc(-12, \"Keypool ran out\", nodes[0].getrawchangeaddress)\n@@ -72,7 +76,7 @@ def run_test(self):\n         nodes[0].walletpassphrase('test', 100)\n         nodes[0].keypoolrefill(100)\n         wi = nodes[0].getwalletinfo()\n-        assert_equal(wi['keypoolsize_hd_internal'], 20)\n+        assert_equal(wi['keypoolsize_hd_internal'], 100)\n         assert_equal(wi['keypoolsize'], 100)\n \n     def __init__(self):"
      },
      {
        "sha": "8876f935a48f3e1180615bca963a2b2696cd309e",
        "filename": "test/functional/wallet-dump.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79df9df3482d71391dee1dd59054aed8f7bbfa6b/test/functional/wallet-dump.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79df9df3482d71391dee1dd59054aed8f7bbfa6b/test/functional/wallet-dump.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet-dump.py?ref=79df9df3482d71391dee1dd59054aed8f7bbfa6b",
        "patch": "@@ -88,7 +88,7 @@ def run_test (self):\n             read_dump(tmpdir + \"/node0/wallet.unencrypted.dump\", addrs, None)\n         assert_equal(found_addr, test_addr_count)  # all keys must be in the dump\n         assert_equal(found_addr_chg, 50)  # 50 blocks where mined\n-        assert_equal(found_addr_rsv, 90*1.2) # 90 keys plus 20% internal keys\n+        assert_equal(found_addr_rsv, 90*2) # 90 keys plus 100% internal keys\n \n         #encrypt wallet, restart, unlock and dump\n         self.nodes[0].encryptwallet('test')\n@@ -102,8 +102,8 @@ def run_test (self):\n         found_addr, found_addr_chg, found_addr_rsv, hd_master_addr_enc = \\\n             read_dump(tmpdir + \"/node0/wallet.encrypted.dump\", addrs, hd_master_addr_unenc)\n         assert_equal(found_addr, test_addr_count)\n-        assert_equal(found_addr_chg, 90*1.2 + 50)  # old reserve keys are marked as change now\n-        assert_equal(found_addr_rsv, 90*1.2) \n+        assert_equal(found_addr_chg, 90*2 + 50)  # old reserve keys are marked as change now\n+        assert_equal(found_addr_rsv, 90*2) \n \n if __name__ == '__main__':\n     WalletDumpTest().main ()"
      }
    ]
  },
  {
    "sha": "dd526c2a2d2f0f7427047891a5e94b4e6c18b190",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZDUyNmMyYTJkMmYwZjc0MjcwNDc4OTFhNWU5NGI0ZTZjMThiMTkw",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-01-17T08:07:48Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-24T09:28:39Z"
      },
      "message": "Don't switch to HD-chain-split during wallet encryption of non HD-chain-split wallets",
      "tree": {
        "sha": "5571a574d24bbd2e2313b90e139ce4072065bf02",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5571a574d24bbd2e2313b90e139ce4072065bf02"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dd526c2a2d2f0f7427047891a5e94b4e6c18b190",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAljU5scACgkQHrd2uwPH\nki2MXg/8C1oG8TDwvEVBM4cb3/151WOILppYeZ4W+eAp0Xt1a57qkVndWxPPpYbC\nYtojKvu1rHQ5sHKLi1vRXpw+XzvJ70uS85PwcjV8aw3RjiyXx7vvQdkBcWI4i1Tw\nXmkIGFrGR/FM9BExn2T/pG9ETUENm9y5wWWEnzQmT+tyfY2kMBUhdKH8uECKYGre\n4/qplOJU0yZhh9fIwnEJOHjGlDDNTslyjsiF3iTFwkaLP0UEr5EtvN/jAvzGt5KZ\nysRBHqiWzHpUyWhf4wXKFuypNrKLWWkFktsu69imD4uTCe6pQ40in/7RJkV4U7Vf\nZHKxolesdJI6kB7oyyAI3MaG0LRc6kXWZLsx5j1AWWr9lvSNvaJhZXm/RCXxnsjy\nlbT2sE0vRDnbVbtCZ8KoVKffzwuN2Ug0wMOaMAJaIo1RoLhDAiW6Gwib5ixuw5aa\nWCoo7q7U2sY6l6x9amDMJWFyAYeUlKZ0rMq1vzXusPeTKpJQBmIINX1TTlpFiF6w\ncieHkcuF02b4UW3xB28RGHNgDyDIWx7hG5SeqoffiByZXkNXP+c0sUyx9Z2c/yb0\ng6uck2cZHaI8+ia7avIehww5Hd8ppdJv+NdWoc6QLk89g/lOgBgDndE4Ims+7mKb\nouq8bYVcCOC5ORAq85LUs/CIhdxxRRDpoETLVoI6ZjacwCZoHyE=\n=iwqQ\n-----END PGP SIGNATURE-----",
        "payload": "tree 5571a574d24bbd2e2313b90e139ce4072065bf02\nparent 79df9df3482d71391dee1dd59054aed8f7bbfa6b\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1484640468 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1490347719 +0100\n\nDon't switch to HD-chain-split during wallet encryption of non HD-chain-split wallets\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd526c2a2d2f0f7427047891a5e94b4e6c18b190",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dd526c2a2d2f0f7427047891a5e94b4e6c18b190",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd526c2a2d2f0f7427047891a5e94b4e6c18b190/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "79df9df3482d71391dee1dd59054aed8f7bbfa6b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79df9df3482d71391dee1dd59054aed8f7bbfa6b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/79df9df3482d71391dee1dd59054aed8f7bbfa6b"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 3,
      "deletions": 4
    },
    "files": [
      {
        "sha": "7687810794fa56da33ddbfa70d4e8e7b7e3ae2a1",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd526c2a2d2f0f7427047891a5e94b4e6c18b190/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd526c2a2d2f0f7427047891a5e94b4e6c18b190/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=dd526c2a2d2f0f7427047891a5e94b4e6c18b190",
        "patch": "@@ -1306,10 +1306,6 @@ CPubKey CWallet::GenerateNewHDMasterKey()\n bool CWallet::SetHDMasterKey(const CPubKey& pubkey)\n {\n     LOCK(cs_wallet);\n-\n-    // ensure this wallet.dat can only be opened by clients supporting HD with chain split\n-    SetMinVersion(FEATURE_HD_SPLIT);\n-\n     // store the keyid (hash160) together with\n     // the child index counter in the database\n     // as a hdchain object\n@@ -3670,6 +3666,9 @@ CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n             CPubKey masterPubKey = walletInstance->GenerateNewHDMasterKey();\n             if (!walletInstance->SetHDMasterKey(masterPubKey))\n                 throw std::runtime_error(std::string(__func__) + \": Storing master key failed\");\n+\n+            // ensure this wallet.dat can only be opened by clients supporting HD with chain split\n+            walletInstance->SetMinVersion(FEATURE_HD_SPLIT);\n         }\n         CPubKey newDefaultKey;\n         if (walletInstance->GetKeyFromPool(newDefaultKey, false)) {"
      }
    ]
  },
  {
    "sha": "add38d9b83fe570a16ccda8e3c2642cb3b0b1f2f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZGQzOGQ5YjgzZmU1NzBhMTZjY2RhOGUzYzI2NDJjYjNiMGIxZjJm",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-01-17T08:43:12Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-24T09:28:39Z"
      },
      "message": "GetOldestKeyPoolTime: if HD & HD Chain Split is enabled, response max(oldest-internal-key, oldest-external-key)",
      "tree": {
        "sha": "59949eeb48f6e7361bf74ecf17aeb4c7fb1196d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/59949eeb48f6e7361bf74ecf17aeb4c7fb1196d8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/add38d9b83fe570a16ccda8e3c2642cb3b0b1f2f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAljU5scACgkQHrd2uwPH\nki3FUA/7BmKoIUnxfUbjBIlckQ3TBivtgRVhn283hjVwdEhJPKFXjLMQNPsL1B0x\nJEYj8WonZOuOWPEuKcjZRcqoD/ErcTvlOenKSeMXV7TWeJxqs8t0nGlF7Hwx2var\naHXK1NmxsJlSvkPIIdlgOFTX0FIrcA6Ticxp6HkK/31CNGG6VSm8hvATa5FoBQG7\ny8ZobwbsPA3b4qKzRO3tSyrpx69R6KTt61qA3fVrkIwR4X4jpIjEUnr/F5KA8IDX\ncuvphENY+TuhGq/ojmz4ilUiiWlHaBoh07IsimuZh7ZEQA4xcBDqNvUkq3NIS4Tn\nNVNtDSejwMBoRpepx7u84ak0pTKHGzrCH+mr8s7A/vqap550lVkG37HRsZrnVCR5\nUXe3QY6hxTuRBPWHYWXiL6ZgyOnp94Wjxe3/NnpZrQ7FZNeRtPKckPynj1bWxJzS\njxfhOsFZRhcu7aDb1EIPZIQeju+t7FxoNJ1seRRl8Y08IhOIIFImF0TUEAIe1HQE\nmoCJvHImE0OqX0b4bVRVSPwBbWr3RMIphrC+sHMfQwkebu2j4QKrtyXVi+jabX8m\nHyDDKbBzSIY4M1jXIeDuBww1fnFHOiofu0+VA5HNAUYfuBWoZChkyne0RLVIw34O\nugu/cfLqx902mNAgOYV9w54XANTiIsXdpydap2gedspwWhP0RU4=\n=M4ES\n-----END PGP SIGNATURE-----",
        "payload": "tree 59949eeb48f6e7361bf74ecf17aeb4c7fb1196d8\nparent dd526c2a2d2f0f7427047891a5e94b4e6c18b190\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1484642592 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1490347719 +0100\n\nGetOldestKeyPoolTime: if HD & HD Chain Split is enabled, response max(oldest-internal-key, oldest-external-key)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/add38d9b83fe570a16ccda8e3c2642cb3b0b1f2f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/add38d9b83fe570a16ccda8e3c2642cb3b0b1f2f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/add38d9b83fe570a16ccda8e3c2642cb3b0b1f2f/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dd526c2a2d2f0f7427047891a5e94b4e6c18b190",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd526c2a2d2f0f7427047891a5e94b4e6c18b190",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dd526c2a2d2f0f7427047891a5e94b4e6c18b190"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 19,
      "deletions": 1
    },
    "files": [
      {
        "sha": "7da45587bf310f2ca70fdebefdb797c1a297e481",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 1,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/add38d9b83fe570a16ccda8e3c2642cb3b0b1f2f/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/add38d9b83fe570a16ccda8e3c2642cb3b0b1f2f/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=add38d9b83fe570a16ccda8e3c2642cb3b0b1f2f",
        "patch": "@@ -3056,9 +3056,27 @@ int64_t CWallet::GetOldestKeyPoolTime()\n     if (setKeyPool.empty())\n         return GetTime();\n \n-    // load oldest key from keypool, get time and return\n     CKeyPool keypool;\n     CWalletDB walletdb(strWalletFile);\n+\n+    if (IsHDEnabled() && CanSupportFeature(FEATURE_HD_SPLIT))\n+    {\n+        // if HD & HD Chain Split is enabled, response max(oldest-internal-key, oldest-external-key)\n+        int64_t now = GetTime();\n+        int64_t oldest_external = now, oldest_internal = now;\n+\n+        for(const int64_t& id : setKeyPool)\n+        {\n+            if (!walletdb.ReadPool(id, keypool))\n+                throw std::runtime_error(std::string(__func__) + \": read failed\");\n+            if (keypool.fInternal && keypool.nTime < oldest_internal)\n+                oldest_internal = keypool.nTime;\n+            else if (!keypool.fInternal && keypool.nTime < oldest_external)\n+                oldest_external = keypool.nTime;\n+        }\n+        return std::max(oldest_internal, oldest_external);\n+    }\n+    // load oldest key from keypool, get time and return\n     int64_t nIndex = *(setKeyPool.begin());\n     if (!walletdb.ReadPool(nIndex, keypool))\n         throw std::runtime_error(std::string(__func__) + \": read oldest key in keypool failed\");"
      }
    ]
  },
  {
    "sha": "e138876f0abc6e13a8240f99e4143712fc02ec92",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMTM4ODc2ZjBhYmM2ZTEzYTgyNDBmOTllNDE0MzcxMmZjMDJlYzky",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-01-17T14:50:11Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-24T09:28:40Z"
      },
      "message": "Only show keypoolsize_hd_internal if HD split is enabled",
      "tree": {
        "sha": "8c4bb17afe78512b7fd399a33f50e5324d6c6f0e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8c4bb17afe78512b7fd399a33f50e5324d6c6f0e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e138876f0abc6e13a8240f99e4143712fc02ec92",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAljU5sgACgkQHrd2uwPH\nki18Fg//WI1CxI93T5rD9SOKkX9fljNxCuoIVX5m4I16eK8nQgSniUGSEVbGCbzi\ndbeUkAVbnffWsoYsuHGsdd9uAmhBFGDNcLv5JPQI7+WRNjLqvfkCz4LdDWywZMpt\nShoVW/ulNrpxvQc/bejlaoZpWkgp5+preg50lyjFrUmrGHmAiVHJWjYF+QMJ0d1o\nqXcbpewTXURQa90m2OQdx4Yb2h8cPD+9ymAzKLubF0Glie94dMQH4P87UCAIPmeL\n7mEq5W7Xgkx/FDXqnWINqc7By75lwMFJJZlpxrqP2aWcoPf0dmuQ4YaqYlnt3hMj\nKj5d5UqMzdYWPVxitkWpyxnjJ+Pobz51+SJHewryhutut2HkAZERKFRyPiN57dmk\n3FpC64xK5r7wYWGchBHU4jxPg6VjydJCdPc7OXTlFgGOmkuKaUwyW9vOez/Ybg3i\nfxEIoEP629+QbP/AOQfAK9ZgYLQfMSb0FSpJmtdyh5iPf/OS1XD15eTaV8AUY4ID\nXOnSEn65gFCSe5UdzOt2//wWhkI/dkRyRPclQj+gZpTvn9OEpxcfl9Fvg+tzS/CU\nsuSeA+51bNXyyShNatj/Iz9B0rsjk++zzRHAV8ng7cn6417shX+QbfeI/xha0Hva\n+TSdRpPsZ4r36Nds3fpeEZ2nfQTCP+3iJ6zVjJLH5q+TgjQV1SQ=\n=Sxq/\n-----END PGP SIGNATURE-----",
        "payload": "tree 8c4bb17afe78512b7fd399a33f50e5324d6c6f0e\nparent add38d9b83fe570a16ccda8e3c2642cb3b0b1f2f\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1484664611 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1490347720 +0100\n\nOnly show keypoolsize_hd_internal if HD split is enabled\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e138876f0abc6e13a8240f99e4143712fc02ec92",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e138876f0abc6e13a8240f99e4143712fc02ec92",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e138876f0abc6e13a8240f99e4143712fc02ec92/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "add38d9b83fe570a16ccda8e3c2642cb3b0b1f2f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/add38d9b83fe570a16ccda8e3c2642cb3b0b1f2f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/add38d9b83fe570a16ccda8e3c2642cb3b0b1f2f"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "62aefc4bc2b575397774aa21d0750cfea271faa3",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e138876f0abc6e13a8240f99e4143712fc02ec92/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e138876f0abc6e13a8240f99e4143712fc02ec92/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=e138876f0abc6e13a8240f99e4143712fc02ec92",
        "patch": "@@ -2425,7 +2425,7 @@ UniValue getwalletinfo(const JSONRPCRequest& request)\n             \"  \\\"txcount\\\": xxxxxxx,              (numeric) the total number of transactions in the wallet\\n\"\n             \"  \\\"keypoololdest\\\": xxxxxx,         (numeric) the timestamp (seconds since Unix epoch) of the oldest pre-generated key in the key pool\\n\"\n             \"  \\\"keypoolsize\\\": xxxx,             (numeric) how many new keys are pre-generated (only counts external keys)\\n\"\n-            \"  \\\"keypoolsize_hd_internal\\\": xxxx, (numeric) how many new keys are pre-generated for internal use (used for change outputs, only appears if HD is enabled otherwise there is no need for internal keys)\\n\"\n+            \"  \\\"keypoolsize_hd_internal\\\": xxxx, (numeric) how many new keys are pre-generated for internal use (used for change outputs, only appears if the wallet is using this feature, otherwise external keys are used)\\n\"\n             \"  \\\"unlocked_until\\\": ttt,           (numeric) the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked\\n\"\n             \"  \\\"paytxfee\\\": x.xxxx,              (numeric) the transaction fee configuration, set in \" + CURRENCY_UNIT + \"/kB\\n\"\n             \"  \\\"hdmasterkeyid\\\": \\\"<hash160>\\\"     (string) the Hash160 of the HD master pubkey\\n\"\n@@ -2447,7 +2447,7 @@ UniValue getwalletinfo(const JSONRPCRequest& request)\n     obj.push_back(Pair(\"keypoololdest\", pwallet->GetOldestKeyPoolTime()));\n     obj.push_back(Pair(\"keypoolsize\", (int64_t)kpExternalSize));\n     CKeyID masterKeyID = pwallet->GetHDChain().masterKeyID;\n-    if (!masterKeyID.IsNull()) {\n+    if (!masterKeyID.IsNull() && pwallet->CanSupportFeature(FEATURE_HD_SPLIT)) {\n         obj.push_back(Pair(\"keypoolsize_hd_internal\",   (int64_t)(pwallet->GetKeyPoolSize() - kpExternalSize)));\n     }\n     if (pwallet->IsCrypted()) {"
      }
    ]
  },
  {
    "sha": "58e148333eb4b7ad87154a8b4d45ff0ebc3c9591",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OGUxNDgzMzNlYjRiN2FkODcxNTRhOGI0ZDQ1ZmYwZWJjM2M5NTkx",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-01-17T15:04:16Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-24T09:28:40Z"
      },
      "message": "CKeyPool avoid \"catch (...)\" in SerializationOp",
      "tree": {
        "sha": "63d3bea9098140514981d5ddc1bae459de942575",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/63d3bea9098140514981d5ddc1bae459de942575"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/58e148333eb4b7ad87154a8b4d45ff0ebc3c9591",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAljU5sgACgkQHrd2uwPH\nki0vuw/9EQcAmYpl2w8X/MMN5tiHR3vobgeBr+MG6+HCVcE7DVmXOb9OfQfdYqbS\nqgWtzfeXVjOHrn4pP6ZRXVtgJj3ee71mDzZp0Vxbj/R79weLXG4Pxlw9E0FyGPR/\nbQidDDYB2+Bw7/+AOW06dzR2yRrE2QJpu0rYO6pvFGWrHgSDOM64wbR40RjugqSL\nd8GVEBKYgLOHNzo9yobXToofLT6SBfUYuhotqG0V6lytYT/PLIcwKds/Iqu5STdy\n2o1m5dbe02qbYRoJCrxEshMoudLqtXd30JUmhBUm6Cntvxl1A98It32u54+zY9UI\naVDZQipwuiLWeIo5bCL38fFSeHyRnHkIz9goLXAlNB0xoX0KC5xyDFk4EKCZ1NwL\nsjCdxlyD4szax6Mlt/82EnGwHmsX4/MaeAyURA93v2Ip+oUS+5p8/0PIWFzxNkeN\naGDFpqXZwK7lyMdHFsTmTGCK0FUoYEigkHrwvhz/xG89vqmXfEE+IM5+kGGnjdoN\nHo3RtiK5REq7NhWnupuafl+gotLRxmPwJFtPsOh+H0sXWrVnROrm3rXaZobFuAtx\nD9kaqgnm/oGHA22tWVsAu1xA5HR1lNwjlMAf13dGyeOeVoPlVZ/3qSzsaU19K6Ll\nASznGStXTOzHR1UccpCXGaoTHUkH3rlp5A+/eVSduoKSdqkKL9E=\n=lXUO\n-----END PGP SIGNATURE-----",
        "payload": "tree 63d3bea9098140514981d5ddc1bae459de942575\nparent e138876f0abc6e13a8240f99e4143712fc02ec92\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1484665456 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1490347720 +0100\n\nCKeyPool avoid \"catch (...)\" in SerializationOp\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58e148333eb4b7ad87154a8b4d45ff0ebc3c9591",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/58e148333eb4b7ad87154a8b4d45ff0ebc3c9591",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58e148333eb4b7ad87154a8b4d45ff0ebc3c9591/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e138876f0abc6e13a8240f99e4143712fc02ec92",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e138876f0abc6e13a8240f99e4143712fc02ec92",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e138876f0abc6e13a8240f99e4143712fc02ec92"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "4b40da1683e849710470823d6bd9b18bffd2e947",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58e148333eb4b7ad87154a8b4d45ff0ebc3c9591/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58e148333eb4b7ad87154a8b4d45ff0ebc3c9591/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=58e148333eb4b7ad87154a8b4d45ff0ebc3c9591",
        "patch": "@@ -118,7 +118,7 @@ class CKeyPool\n             try {\n                 READWRITE(fInternal);\n             }\n-            catch (...) {\n+            catch (std::ios_base::failure&) {\n                 /* flag as external address if we can't read the internal boolean */\n                 fInternal = false;\n             }"
      }
    ]
  },
  {
    "sha": "1090502c3e90f3f24fdc6c1e74f62d7669697b31",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMDkwNTAyYzNlOTBmM2YyNGZkYzZjMWU3NGY2MmQ3NjY5Njk3YjMx",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-01-26T19:52:57Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-24T09:28:40Z"
      },
      "message": "Fix superfluous cast and code style nits in RPC wallet-hd.py test",
      "tree": {
        "sha": "a07502ec24d9c5451056ffb2c628850e7ee0d3c9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a07502ec24d9c5451056ffb2c628850e7ee0d3c9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1090502c3e90f3f24fdc6c1e74f62d7669697b31",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAljU5sgACgkQHrd2uwPH\nki0sihAAjm7mm7+I3MuUk0CPOc/Xo7dn3XXTgopGAQQFgdjLdOq2EJuBh3RyLyNK\ngJJ+ES/4ASggcVr5xkVkgP0KmxFgoiRLiOn9onrDpASR6OpDwV1zRqVVdm2+Q+js\nIdtnGwtKzmnCatcPcA2yBpHikQPy0NHAgu41ErmCW3G6EGT9g+VQfNzQ3Pj6YGYW\nJPEps6w6hBQaDUY3zd89bihSaKH6b3hui180WEM0EJHMJ0SiD9rbNukD/ceiMCQi\ny3tcQsXpvJE1v3EkeIokm9BZ5PiecoN6xSphx+/Ezp+cpyHPg4uWWxEJH6e2GJ8V\nWpL68tsCdT5KiBr6laa9g0pLI16C1xixqAhgKyZ0ScsYl+XoTcbl4EM0mSduNHZx\ntBN3fwKHK50+hmptXqQzjYVp19te3KwcEDiV8OonWMc27ovyPE6QnBV9/hwT56Vw\np0xUcS8sgf/JFModgQ7VAbuX50CIQIw3QWHFXMj7inWtRNAgv7CkLZSK4gMwL2Nz\nbCx4yWJldMiwEe0gI7x9C3n/ebZdmCOEOvmDT8XarCCv3FpzOEjXXu28qxricnGn\niiQV8hPzaXGg6nPS/mlgNm10XKiGkHiHCdgRwqLKV+NaVh/mhH050w6PV2wihvtU\n13A3nihj55oN/0gBIJ7ouTdrwKD8yqZliovv4SlQywdUEBwsz0w=\n=8b3w\n-----END PGP SIGNATURE-----",
        "payload": "tree a07502ec24d9c5451056ffb2c628850e7ee0d3c9\nparent 58e148333eb4b7ad87154a8b4d45ff0ebc3c9591\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1485460377 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1490347720 +0100\n\nFix superfluous cast and code style nits in RPC wallet-hd.py test\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1090502c3e90f3f24fdc6c1e74f62d7669697b31",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1090502c3e90f3f24fdc6c1e74f62d7669697b31",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1090502c3e90f3f24fdc6c1e74f62d7669697b31/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "58e148333eb4b7ad87154a8b4d45ff0ebc3c9591",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58e148333eb4b7ad87154a8b4d45ff0ebc3c9591",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/58e148333eb4b7ad87154a8b4d45ff0ebc3c9591"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 6,
      "deletions": 5
    },
    "files": [
      {
        "sha": "c715da8e9f68857a3f7f1303eda9e146068336b7",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1090502c3e90f3f24fdc6c1e74f62d7669697b31/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1090502c3e90f3f24fdc6c1e74f62d7669697b31/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=1090502c3e90f3f24fdc6c1e74f62d7669697b31",
        "patch": "@@ -2438,7 +2438,8 @@ UniValue getwalletinfo(const JSONRPCRequest& request)\n     LOCK2(cs_main, pwallet->cs_wallet);\n \n     UniValue obj(UniValue::VOBJ);\n-    size_t kpExternalSize = (int)pwallet->KeypoolCountExternalKeys();\n+\n+    size_t kpExternalSize = pwalletMain->KeypoolCountExternalKeys();\n     obj.push_back(Pair(\"walletversion\", pwallet->GetVersion()));\n     obj.push_back(Pair(\"balance\",       ValueFromAmount(pwallet->GetBalance())));\n     obj.push_back(Pair(\"unconfirmed_balance\", ValueFromAmount(pwallet->GetUnconfirmedBalance())));"
      },
      {
        "sha": "64a6c92782d28c42fdca5239cc26d43b791f2699",
        "filename": "test/functional/wallet-hd.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1090502c3e90f3f24fdc6c1e74f62d7669697b31/test/functional/wallet-hd.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1090502c3e90f3f24fdc6c1e74f62d7669697b31/test/functional/wallet-hd.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet-hd.py?ref=1090502c3e90f3f24fdc6c1e74f62d7669697b31",
        "patch": "@@ -42,7 +42,7 @@ def run_test (self):\n         masterkeyid = self.nodes[1].getwalletinfo()['hdmasterkeyid']\n         assert_equal(len(masterkeyid), 40)\n \n-        #create an internal key\n+        # create an internal key\n         change_addr = self.nodes[1].getrawchangeaddress()\n         change_addrV= self.nodes[1].validateaddress(change_addr);\n         assert_equal(change_addrV[\"hdkeypath\"], \"m/0'/1'/0'\") #first internal child key\n@@ -70,7 +70,7 @@ def run_test (self):\n         self.nodes[0].sendtoaddress(non_hd_add, 1)\n         self.nodes[0].generate(1)\n \n-        #create an internal key (again)\n+        # create an internal key (again)\n         change_addr = self.nodes[1].getrawchangeaddress()\n         change_addrV= self.nodes[1].validateaddress(change_addr);\n         assert_equal(change_addrV[\"hdkeypath\"], \"m/0'/1'/1'\") #second internal child key\n@@ -100,15 +100,15 @@ def run_test (self):\n         #connect_nodes_bi(self.nodes, 0, 1)\n         assert_equal(self.nodes[1].getbalance(), num_hd_adds + 1)\n \n-        #send a tx and make sure its using the internal chain for the changeoutput\n+        # send a tx and make sure its using the internal chain for the changeoutput\n         txid = self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), 1)\n         outs = self.nodes[1].decoderawtransaction(self.nodes[1].gettransaction(txid)['hex'])['vout'];\n         keypath = \"\"\n         for out in outs:\n             if out['value'] != 1:\n                 keypath = self.nodes[1].validateaddress(out['scriptPubKey']['addresses'][0])['hdkeypath']\n         \n-        assert(keypath[0:7] == \"m/0'/1'\")\n+        assert_equal(keypath[0:7], \"m/0'/1'\")\n \n if __name__ == '__main__':\n     WalletHDTest().main ()"
      }
    ]
  },
  {
    "sha": "d9638e5aa46cd7e5fce4392f5333bbc556014160",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkOTYzOGU1YWE0NmNkN2U1ZmNlNDM5MmY1MzMzYmJjNTU2MDE0MTYw",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-01-26T20:02:55Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-24T09:28:40Z"
      },
      "message": "Overhaul the internal/external key derive switch",
      "tree": {
        "sha": "2952a1e62e6e7a5fed5ab2b7454565c652c9e192",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2952a1e62e6e7a5fed5ab2b7454565c652c9e192"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d9638e5aa46cd7e5fce4392f5333bbc556014160",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAljU5sgACgkQHrd2uwPH\nki2Rzg/9FjIsIkolQgn8wygTMGZqRUqQ8h1+yBX/2Cb9prlFOTJg3FT8V+ujZC5A\n5OCi9cSj7j2+niyztsk6MQadsl9gyaWRrvVHvT7LwXC9TzwhVJONEYC8WjCcvY4z\nYoXwDpsD8tdewwrsy+48xYhKawk0jnr+QgFe+sVN4joTmMvdyIheELtY8mrtgl7t\nC7fLOmS3tN8QC+KRYwkFIMI64JGCBPU1tM5BJg3XAGrTFgZvVeJkaeS+6fXXjXDG\nhyWpaaIr4eSWgCF+hRfGDGxKOjp2eLv7AKaYwqlVJ8keXRhkDEC0F6OxCenqt1Hx\nKxoVn8p0O15bQTu8gYXaK+XGRJ2Wo+GQf0+TaIA5aXfiAvnCQrJcwAw7XVlEL2Z7\n5vom1MDQhd5lSeN9J2QkMiVFN33dqkrsvPivExmMRRDrBxL5HPe73eTxaKHn6uAd\nUJO/TiJtaeMEyWJRChhMZEKfekBwi06DZglM2foOgbjA54iov/XMIAjq5j/I2X+R\nlnaALmgpCeopVMvHv299gzg06AMloBzpTQkijaITsYRyavzEXO8GCr6gvy6f3VSJ\nfdPVXnsX9PNOyaTuoPEz83GjbFqyonykydF3+NQSKHo/1cyv+HQef11Hl+NXNvwa\n0Jl6HhcXWJCbnxYq1ZuphcG3SCJw0lVP1njnSu1mbRnqMfM94Ic=\n=B/kY\n-----END PGP SIGNATURE-----",
        "payload": "tree 2952a1e62e6e7a5fed5ab2b7454565c652c9e192\nparent 1090502c3e90f3f24fdc6c1e74f62d7669697b31\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1485460975 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1490347720 +0100\n\nOverhaul the internal/external key derive switch\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9638e5aa46cd7e5fce4392f5333bbc556014160",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d9638e5aa46cd7e5fce4392f5333bbc556014160",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9638e5aa46cd7e5fce4392f5333bbc556014160/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1090502c3e90f3f24fdc6c1e74f62d7669697b31",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1090502c3e90f3f24fdc6c1e74f62d7669697b31",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1090502c3e90f3f24fdc6c1e74f62d7669697b31"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 9,
      "deletions": 7
    },
    "files": [
      {
        "sha": "733afd49c15874fa150f63df0b4cc6a8f8318fce",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 7,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d9638e5aa46cd7e5fce4392f5333bbc556014160/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d9638e5aa46cd7e5fce4392f5333bbc556014160/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=d9638e5aa46cd7e5fce4392f5333bbc556014160",
        "patch": "@@ -145,17 +145,19 @@ void CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret, bool inter\n         // always derive hardened keys\n         // childIndex | BIP32_HARDENED_KEY_LIMIT = derive childIndex in hardened child-index-range\n         // example: 1 | BIP32_HARDENED_KEY_LIMIT == 0x80000001 == 2147483649\n-        chainChildKey.Derive(childKey, (internal ? hdChain.nInternalChainCounter : hdChain.nExternalChainCounter) | BIP32_HARDENED_KEY_LIMIT);\n-        metadata.hdKeypath = \"m/0'/\" + std::string(internal ? \"1'/\"+ std::to_string(hdChain.nInternalChainCounter) : \"0'/\" + std::to_string(hdChain.nExternalChainCounter)) + \"'\";\n-        metadata.hdMasterKeyID = hdChain.masterKeyID;\n-        // increment childkey index\n-        if (internal)\n+        if (internal) {\n+            chainChildKey.Derive(childKey, hdChain.nInternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n+            metadata.hdKeypath = \"m/0'/1'/\" + std::to_string(hdChain.nInternalChainCounter) + \"'\";\n             hdChain.nInternalChainCounter++;\n-        else\n+        }\n+        else {\n+            chainChildKey.Derive(childKey, hdChain.nExternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n+            metadata.hdKeypath = \"m/0'/0'/\" + std::to_string(hdChain.nExternalChainCounter) + \"'\";\n             hdChain.nExternalChainCounter++;\n+        }\n     } while (HaveKey(childKey.key.GetPubKey().GetID()));\n     secret = childKey.key;\n-\n+    metadata.hdMasterKeyID = hdChain.masterKeyID;\n     // update the chain model in the database\n     if (!CWalletDB(strWalletFile).WriteHDChain(hdChain))\n         throw std::runtime_error(std::string(__func__) + \": Writing HD chain model failed\");"
      }
    ]
  },
  {
    "sha": "003e1974986d62fa7c8112009d6fa1ee5871550e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMDNlMTk3NDk4NmQ2MmZhN2M4MTEyMDA5ZDZmYTFlZTU4NzE1NTBl",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-01-26T20:04:05Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-24T09:28:40Z"
      },
      "message": "Remove FEATURE_HD_SPLIT bump TODO",
      "tree": {
        "sha": "24cb1f2f4bb1bd13b54bcca4536058c09917edfa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/24cb1f2f4bb1bd13b54bcca4536058c09917edfa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/003e1974986d62fa7c8112009d6fa1ee5871550e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAljU5sgACgkQHrd2uwPH\nki2eTQ/+MvaB1bBSb57KqC4jOZ8IKjEhAqmb10JqtvIMGnss0yQTFKkc1oFmhSIC\nnQ0ERjXr8qaw2NyXh9l7UFMGK4WXAGLxwdwNiaUtUM6pIb8E1NMCJo/xkRCEL+nz\nBkOjdayPRIHJ2nWQY1BIMgWcJ1RdaCBFWadK2ccYf2pWUdMp+F5q8EEfN4vJO5vz\na4T1mrDYGI/5zALHXl0NPQr0o3eWcr43ZD5AwzPmzTb7bUzuLJuPTP/TQ1P8qmbD\n58829QhvVlmeOcdWGkj6gVcdxiBNCdlgUmZhgJc9ippbLrVfcV0m4Lp6UBmkrhv8\nhA39qN946A+0L11tf8s2DaUo4a6aXhblN4HpAC253sYJGiEoiN0oOamVgsiOUC3B\nmtiCDZNQLsZSRFqBjCi4EV5ipxfWOC9pVfTDrW52havOgHwx4R+Fi1Iywvw4rGMs\nWWiU8Q/uTnvTeyBTYxObGPLBDBQ6QUiHqKt8RCa/zun6POdn9BzrpcMdjrAnPyJ7\na8f2+J5haccaYOE6DSq7MbF/usXdOPagsAeOjYyO1u+CHWkvEtgHVggx1sBochhH\neSOWJfX+hDSM3AhF9px0djY/8zAZy8vSL//fm3T4fZ9yHzOyrfX601uEJazHtB6f\nM9rphQ8EQJvwpmcBpsWRABqxJzcc4EESftmeRcEia8EtT1JulGM=\n=YOAy\n-----END PGP SIGNATURE-----",
        "payload": "tree 24cb1f2f4bb1bd13b54bcca4536058c09917edfa\nparent d9638e5aa46cd7e5fce4392f5333bbc556014160\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1485461045 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1490347720 +0100\n\nRemove FEATURE_HD_SPLIT bump TODO\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/003e1974986d62fa7c8112009d6fa1ee5871550e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/003e1974986d62fa7c8112009d6fa1ee5871550e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/003e1974986d62fa7c8112009d6fa1ee5871550e/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d9638e5aa46cd7e5fce4392f5333bbc556014160",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9638e5aa46cd7e5fce4392f5333bbc556014160",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d9638e5aa46cd7e5fce4392f5333bbc556014160"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 0,
      "deletions": 1
    },
    "files": [
      {
        "sha": "21c7f47f92ee543dc1aa355287b2bea057b6b5ed",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/003e1974986d62fa7c8112009d6fa1ee5871550e/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/003e1974986d62fa7c8112009d6fa1ee5871550e/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=003e1974986d62fa7c8112009d6fa1ee5871550e",
        "patch": "@@ -87,7 +87,6 @@ enum WalletFeature\n \n     FEATURE_HD = 130000, // Hierarchical key derivation after BIP32 (HD Wallet)\n \n-    //TODO: FEATURE_HD_SPLIT needs to be bumped to 140000 once we branch of 0.14 //\n     FEATURE_HD_SPLIT = 139900, // Wallet with HD chain split (change outputs will use m/0'/1'/k)\n \n     FEATURE_LATEST = FEATURE_COMPRPUBKEY // HD is optional, use FEATURE_COMPRPUBKEY as latest version"
      }
    ]
  },
  {
    "sha": "1b3b5c6f8fa6aff93935319888bf0cfd242359dd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYjNiNWM2ZjhmYTZhZmY5MzkzNTMxOTg4OGJmMGNmZDI0MjM1OWRk",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-02-01T08:12:13Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-24T09:28:41Z"
      },
      "message": "Slightly modify fundrawtransaction.py test (change getnewaddress() into getrawchangeaddress())",
      "tree": {
        "sha": "a1ee725f13afa10baaad7ddd99873786235e67e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a1ee725f13afa10baaad7ddd99873786235e67e7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1b3b5c6f8fa6aff93935319888bf0cfd242359dd",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAljU5skACgkQHrd2uwPH\nki08Nw/+POwFZVCyQ82L1BrGTWEvC63iJ8qWAv40DYTSM4pfM6lTASFFKUIF23R9\nfUG+/QFoDRY4I6APWtjhxKaE0Ckfu02myhdiW2DT67ULx05YH8AjtPdb6gNSuFZv\nufYfNskr4zCQmEealxvdfnJNHOoU3o34aNTRTBQLCkpDqp/iKNXAPtuQqFiGTFzW\nb5SLznTWwpEEVwPSnMppBCmjXTpjqeA8M87zb3aZpXw3sBJilZ7qe3agoSmPOQz+\njXSx78E3ne+0xQIynz19N6tyH5DAGYmp3OIzT8EiO7tPGpuLEOduOnS2kKeYhXlm\nK9DuZEy5FZjrZ7B/4PHK34YZhugwg2fGzeSW6fWUT3iFRw09TKnGMKAMrU+T/SRw\nD7DI5t3QZzXLYwBxiYiFENQe7V0nnhzlXciSHddi5/zGDYRUZZXcxqzw4I9CgIAp\nT5mttonDO8M/PLzVUAEMrvINhRp1HjDDcq7DQQYra77PbW3nbrSvHUv1dfJNoO0Y\n+Y+5CFLWLufxZJmUB183FNxMrhkPG3fn4W1VQUyhiRgS3h5zk0lNDuI4BcZGwTzt\n6L80slhMmZCs6rVwLx8tG5hj5rIknJmdB3Ud2vSR8wZAm8Aa/C8587gWrjiiPAkR\neYg6NfVGjCBVnSQ6TtAHyxiEtXcyvChGVkZxgRge/OUjmzJpVIE=\n=z6UD\n-----END PGP SIGNATURE-----",
        "payload": "tree a1ee725f13afa10baaad7ddd99873786235e67e7\nparent 003e1974986d62fa7c8112009d6fa1ee5871550e\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1485936733 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1490347721 +0100\n\nSlightly modify fundrawtransaction.py test (change getnewaddress() into getrawchangeaddress())\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1b3b5c6f8fa6aff93935319888bf0cfd242359dd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1b3b5c6f8fa6aff93935319888bf0cfd242359dd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1b3b5c6f8fa6aff93935319888bf0cfd242359dd/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "003e1974986d62fa7c8112009d6fa1ee5871550e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/003e1974986d62fa7c8112009d6fa1ee5871550e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/003e1974986d62fa7c8112009d6fa1ee5871550e"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "69f2c29f5124d54ec92721bf042274674ce02871",
        "filename": "test/functional/fundrawtransaction.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1b3b5c6f8fa6aff93935319888bf0cfd242359dd/test/functional/fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1b3b5c6f8fa6aff93935319888bf0cfd242359dd/test/functional/fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/fundrawtransaction.py?ref=1b3b5c6f8fa6aff93935319888bf0cfd242359dd",
        "patch": "@@ -646,7 +646,7 @@ def run_test(self):\n             if out['value'] > 1.0:\n                 changeaddress += out['scriptPubKey']['addresses'][0]\n         assert(changeaddress != \"\")\n-        nextaddr = self.nodes[3].getnewaddress()\n+        nextaddr = self.nodes[3].getrawchangeaddress()\n         # frt should not have removed the key from the keypool\n         assert(changeaddress == nextaddr)\n "
      }
    ]
  },
  {
    "sha": "771a304ffe3c074a8ca1cdfb83d08379a5516e88",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NzFhMzA0ZmZlM2MwNzRhOGNhMWNkZmI4M2QwODM3OWE1NTE2ZTg4",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-24T09:53:35Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-24T09:53:35Z"
      },
      "message": "Make sure we set the wallets min version to FEATURE_HD_SPLIT at the very first point",
      "tree": {
        "sha": "daf37632d79eb10336987f4a110c2a0cfea3f99d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/daf37632d79eb10336987f4a110c2a0cfea3f99d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/771a304ffe3c074a8ca1cdfb83d08379a5516e88",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAljU7NcACgkQHrd2uwPH\nki0k4w//Rc5B4m5wDIFTwdDSwFSrsiEyX2qYVGmJybBl/05K+VZHKxm0cdgAy06j\nkdsFs1MUsBy2IJlMk74wgWK/s/4hw4xN2YCzzb5QSQyqXM6dz09wLh2crowETYk7\nnzkhsP3zyHVI6Fw8PPZssPU5Cv6kdSFxUufc380CcJDcYVctyBu8x9G0eeohc3VW\nBgsGYUVqe+YHHmuJ9hz2xipYDPw5wQfTiRSsbYRNM7pv2MfaJKQ4t/BmWTZQdIrR\ncHms3vspOcj0Ih/83ogAFvzbiiZzc67ES+Zsh7loLhAa+Eu74M+T33bv5yDQj6rG\nTSKvvQJ4h/oz9JAMw+TZIS9G9YJEJ/Sb+oKBfmdJQM4aWwRpO9ijc4qoFMMh0sQw\n41xmQReki9aHnMsjfT/Qm4xAJjwe1uTzZAUFFppYPyGSgyPjVBo8iEfmvjDqdSKj\nGf/Go8XaY/0mOo8TE5rle7hSPe5EXvh3cX845NwK9C7uTjK/WdDk75eRrY5cwGMQ\nPEAJ2aIGZ4wxEvWiqhc21zeexcwSPY4ah9AcUUKIU/kx8I5WEwTGkhb5rqRbtiB4\nCFo3HyBnphhnvGdHDvX/lU8Xr8Z/PgzOwfTtQIEQWFn/fohqd8oIv42E/Ad7QR9B\nKR/r6wrxiqdd70i9Q/Z7VfK7hq4SQ1yOWkDIoxHiaV39MljOFcI=\n=V6sf\n-----END PGP SIGNATURE-----",
        "payload": "tree daf37632d79eb10336987f4a110c2a0cfea3f99d\nparent 1b3b5c6f8fa6aff93935319888bf0cfd242359dd\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1490349215 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1490349215 +0100\n\nMake sure we set the wallets min version to FEATURE_HD_SPLIT at the very first point\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/771a304ffe3c074a8ca1cdfb83d08379a5516e88",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/771a304ffe3c074a8ca1cdfb83d08379a5516e88",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/771a304ffe3c074a8ca1cdfb83d08379a5516e88/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1b3b5c6f8fa6aff93935319888bf0cfd242359dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1b3b5c6f8fa6aff93935319888bf0cfd242359dd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1b3b5c6f8fa6aff93935319888bf0cfd242359dd"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "0a06879754b2675e31f84945f35d0c3e751da4cd",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/771a304ffe3c074a8ca1cdfb83d08379a5516e88/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/771a304ffe3c074a8ca1cdfb83d08379a5516e88/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=771a304ffe3c074a8ca1cdfb83d08379a5516e88",
        "patch": "@@ -3682,13 +3682,14 @@ CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n     {\n         // Create new keyUser and set as default key\n         if (GetBoolArg(\"-usehd\", DEFAULT_USE_HD_WALLET) && !walletInstance->IsHDEnabled()) {\n+\n+            // ensure this wallet.dat can only be opened by clients supporting HD with chain split\n+            walletInstance->SetMinVersion(FEATURE_HD_SPLIT);\n+\n             // generate a new master key\n             CPubKey masterPubKey = walletInstance->GenerateNewHDMasterKey();\n             if (!walletInstance->SetHDMasterKey(masterPubKey))\n                 throw std::runtime_error(std::string(__func__) + \": Storing master key failed\");\n-\n-            // ensure this wallet.dat can only be opened by clients supporting HD with chain split\n-            walletInstance->SetMinVersion(FEATURE_HD_SPLIT);\n         }\n         CPubKey newDefaultKey;\n         if (walletInstance->GetKeyFromPool(newDefaultKey, false)) {"
      }
    ]
  },
  {
    "sha": "ed79e4f497a9a7747b006a5cb04d4173a6bbc1c5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZDc5ZTRmNDk3YTlhNzc0N2IwMDZhNWNiMDRkNDE3M2E2YmJjMWM1",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-24T09:54:48Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-24T09:54:48Z"
      },
      "message": "Optimize GetOldestKeyPoolTime(), return as soon as we have both oldest keys",
      "tree": {
        "sha": "179b5e801c450299e6c71dfed01f80973da74c99",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/179b5e801c450299e6c71dfed01f80973da74c99"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed79e4f497a9a7747b006a5cb04d4173a6bbc1c5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAljU7X4ACgkQHrd2uwPH\nki3aIg//WNnM5XK5V0QnP0lXvAkccbFywGsOVLz6TCEJXUdJK6Xtie/bNkS7WmSE\npFpG1artt1P1qRNyarxIwRntn0TCjlYpac4oS7hYIY9vt+H/Kih9m30THYQuxyCU\nNg0ApiL6/Yc1274uLkz7L8CVcljker2gA5Y+WHJRl7P1TLAiaiP0Xjg+ySaKIJF/\ndMmrJ6I8QSTEpNcbnGQax8YwogYJr20UlHlm3QIY3sN94AbgrKEWYsp5R+owvohC\nen2DN1XwjV3UVmsQNGl3VovoQ+/znMBdiWDb/Jy6C4/9OKN6b/mhvNI/bW2Vvmq6\naFvjdpSiq2glPcveKH7A/0+SNjnPolawYlYV26iLRv8e6xD3SnfzZT64gruoExt/\nBD0OGo6UzxkmfAwP/5GVSBQ2xEo3eLHLObM9shRL4eLifpeAGKJ38o2v+KETDzmd\n/vzfmAA3b2HcqarxJKgOke5USum7PFwut5Z7BFFcW/+bUKjG9MABOQnWGaNJ1rSJ\n2IF2wG/f/TOr5KXkrxKjAnXPlcjRly/qFl9SPf0Gx+xVP+qOYRLm68pEtLAW1zz2\nDN17oBVViBO4VMF7erjJlv+ybxgVTkkYdtt60VJFk3hgydcYrO/6crJ7w4iiHiPr\nm2uvJB1H6FJ6fODkblbImWR7A24hjkF2LLuNJToVRQ1a6PaqEQk=\n=kZ8W\n-----END PGP SIGNATURE-----",
        "payload": "tree 179b5e801c450299e6c71dfed01f80973da74c99\nparent 771a304ffe3c074a8ca1cdfb83d08379a5516e88\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1490349288 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1490349288 +0100\n\nOptimize GetOldestKeyPoolTime(), return as soon as we have both oldest keys\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed79e4f497a9a7747b006a5cb04d4173a6bbc1c5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ed79e4f497a9a7747b006a5cb04d4173a6bbc1c5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed79e4f497a9a7747b006a5cb04d4173a6bbc1c5/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "771a304ffe3c074a8ca1cdfb83d08379a5516e88",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/771a304ffe3c074a8ca1cdfb83d08379a5516e88",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/771a304ffe3c074a8ca1cdfb83d08379a5516e88"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 9,
      "deletions": 3
    },
    "files": [
      {
        "sha": "d7d2927ba2e2ec16a91a471017093ae88f14217f",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 3,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed79e4f497a9a7747b006a5cb04d4173a6bbc1c5/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed79e4f497a9a7747b006a5cb04d4173a6bbc1c5/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=ed79e4f497a9a7747b006a5cb04d4173a6bbc1c5",
        "patch": "@@ -3069,12 +3069,18 @@ int64_t CWallet::GetOldestKeyPoolTime()\n \n         for(const int64_t& id : setKeyPool)\n         {\n-            if (!walletdb.ReadPool(id, keypool))\n+            if (!walletdb.ReadPool(id, keypool)) {\n                 throw std::runtime_error(std::string(__func__) + \": read failed\");\n-            if (keypool.fInternal && keypool.nTime < oldest_internal)\n+            }\n+            if (keypool.fInternal && keypool.nTime < oldest_internal) {\n                 oldest_internal = keypool.nTime;\n-            else if (!keypool.fInternal && keypool.nTime < oldest_external)\n+            }\n+            else if (!keypool.fInternal && keypool.nTime < oldest_external) {\n                 oldest_external = keypool.nTime;\n+            }\n+            if (oldest_internal != now && oldest_external != now) {\n+                break;\n+            }\n         }\n         return std::max(oldest_internal, oldest_external);\n     }"
      }
    ]
  },
  {
    "sha": "cd468d07d5dc3bc953f3fa07784aa842ecfd6b9f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZDQ2OGQwN2Q1ZGMzYmM5NTNmM2ZhMDc3ODRhYTg0MmVjZmQ2Yjlm",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-24T09:57:31Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-24T09:57:31Z"
      },
      "message": "Define CWallet::DeriveNewChildKey() as private",
      "tree": {
        "sha": "f6ccb868f98771d60ff67faa9105176d86924c8e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f6ccb868f98771d60ff67faa9105176d86924c8e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cd468d07d5dc3bc953f3fa07784aa842ecfd6b9f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAljU7ZYACgkQHrd2uwPH\nki3xLxAAuPQ6uY2/li4Of3j2+KlpRcieFiUHOMT6CKJQ3Y+UL6gibl9NiZq7Sug/\nZSol7WSY5BMCyG/0Lcqneg8ARn7J4c1V80MoRejsYINiu8BCzVslPIeuUYnj+ZcZ\nIVODR//ic3ddHOnknf3Z12RXnsEH+tbrsq95sayuk1zJJvz0Drbdd21gVKFc61Gk\nf2oIstWDIgcSXhY0lB2ug7fsfhn73HfhFyfJoUf8+G9owdhtVXq89K3vM+NJ9y7h\nf8AqcHBLIAufB151H+8R5ZBE5FO10RJO31fztkZoCVpstNslWbV3wvpVNqpV9GCG\n+6rFJuHUCgxPMdv8ui5A1zOSCWKVvzXu5FNUyqAymfyVWpVDZcu+VLwfaFr2OpuT\nFPrjonaTXa1oMMjWxUZ7q9OyqtSrfMpfjtMII0YNcDo9Ly5t2JyE3bbFRp40mgOz\nZ8+0Q1P9h8hxjMZ5pTj7n5peHyZFgWzaD7FILCQ8fCn74a8zzREDJA9G6OB6yBRj\n0A4y6H32YASKzNF97OEd3YFUHqd50i9yREeLaTqJVv+9Bhg6usA0+vJUHEes6mhi\nIbPy3DcftmfPWGI1GmO01GzzHiXXtFV80/vUCA3lMCCd8MrrNLQb21pD137QIH2V\n7Ie3NNGONjTOtt6dFhbdG/YTZmUhzRDvEPgmp4DIdoBsenUVU24=\n=nckM\n-----END PGP SIGNATURE-----",
        "payload": "tree f6ccb868f98771d60ff67faa9105176d86924c8e\nparent ed79e4f497a9a7747b006a5cb04d4173a6bbc1c5\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1490349451 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1490349451 +0100\n\nDefine CWallet::DeriveNewChildKey() as private\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd468d07d5dc3bc953f3fa07784aa842ecfd6b9f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cd468d07d5dc3bc953f3fa07784aa842ecfd6b9f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd468d07d5dc3bc953f3fa07784aa842ecfd6b9f/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ed79e4f497a9a7747b006a5cb04d4173a6bbc1c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed79e4f497a9a7747b006a5cb04d4173a6bbc1c5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ed79e4f497a9a7747b006a5cb04d4173a6bbc1c5"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 5,
      "deletions": 2
    },
    "files": [
      {
        "sha": "0b762cd897a467ee06b8a2fa0ba83b314a282b00",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd468d07d5dc3bc953f3fa07784aa842ecfd6b9f/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd468d07d5dc3bc953f3fa07784aa842ecfd6b9f/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=cd468d07d5dc3bc953f3fa07784aa842ecfd6b9f",
        "patch": "@@ -118,7 +118,8 @@ class CKeyPool\n                 READWRITE(fInternal);\n             }\n             catch (std::ios_base::failure&) {\n-                /* flag as external address if we can't read the internal boolean */\n+                /* flag as external address if we can't read the internal boolean\n+                   (this will be the case for any wallet before the HD chain split version) */\n                 fInternal = false;\n             }\n         }\n@@ -663,6 +664,9 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     /* the HD chain data model (external chain counters) */\n     CHDChain hdChain;\n \n+    /* HD derive new child key (on internal or external chain) */\n+    void DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret, bool internal = false);\n+\n     bool fFileBacked;\n \n     std::set<int64_t> setKeyPool;\n@@ -791,7 +795,6 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n      * Generate a new key\n      */\n     CPubKey GenerateNewKey(bool internal = false);\n-    void DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret, bool internal = false);\n     //! Adds a key to the store, and saves it to disk.\n     bool AddKeyPubKey(const CKey& key, const CPubKey &pubkey) override;\n     //! Adds a key to the store, without saving it to disk (used by LoadWallet)"
      }
    ]
  },
  {
    "sha": "1df08d1580fbab9e58017cf6c1ecb73550bf6ed7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZGYwOGQxNTgwZmJhYjllNTgwMTdjZjZjMWVjYjczNTUwYmY2ZWQ3",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-24T09:57:55Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-24T09:57:55Z"
      },
      "message": "Add assertion for CanSupportFeature(FEATURE_HD_SPLIT)",
      "tree": {
        "sha": "e80c3368437840a546859f7bbd783682bd0e59c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e80c3368437840a546859f7bbd783682bd0e59c6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1df08d1580fbab9e58017cf6c1ecb73550bf6ed7",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAljU7bMACgkQHrd2uwPH\nki3+tRAA1hNwO5/MSJoSmDkuXUHNv/fnd8I1yGXLRwlA/hdAAIPTqAI7NWb2n+Zk\n77b1KHAl6GVArZ/TepJb93YgNH4FHw56MYOwYyA4aPSpsp/47uxquFnWDJARdkUu\nFPyT7Xn6vigjc2eMbulqV8I4H9+jOlXWKcQUm8+m1ZvwfkgwjsV7QYjd+B6RUqhJ\ny7KMWWH0jI1UQFmQNdKENLPTsnJbxubqsY9mhWwHsKyBhOpn9+tVoPmJsmCwHPue\nbNFHf4XR3S9xLkjtOMQihhA6cn2dDqhqAeVVpk/czCxo0fAX+9ERfiOKZc7SPi3O\nJrkj7avYRdVW4dNJKioWBKjMRA1FPtZwT/gDkQpVLpEAvgTDOajp0yIO4HYaPlL8\nwQ67xWaBMdoIF4rYdeRLyq92kXWC8S57XZFH/gaCaJHPfT4CqRuJxDIIBKOOOOKx\nP0JelE2l9D9/79vvw8YXp5gtomFAzWzpBoPpXl5m1EQFbXwFnf8B9P1eYPSbjRid\nvYPe1EEfbnLsXrUz82r4IF2h+5fTmAH0LaGYXIYN3RNEuk0BYWMIq0iBRXyCRzzq\nV04YAAmVvEXOtTnZsPYcpmd3OcucKlGUeRCqucJQROQWvWyYdFgA7Of5rJSztSP3\n8Nph2cOCoseE1ggrcT1uhprHfu0ELRHH8Bp9SALvXdHXuMm9KFE=\n=SbD+\n-----END PGP SIGNATURE-----",
        "payload": "tree e80c3368437840a546859f7bbd783682bd0e59c6\nparent cd468d07d5dc3bc953f3fa07784aa842ecfd6b9f\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1490349475 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1490349475 +0100\n\nAdd assertion for CanSupportFeature(FEATURE_HD_SPLIT)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1df08d1580fbab9e58017cf6c1ecb73550bf6ed7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1df08d1580fbab9e58017cf6c1ecb73550bf6ed7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1df08d1580fbab9e58017cf6c1ecb73550bf6ed7/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cd468d07d5dc3bc953f3fa07784aa842ecfd6b9f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd468d07d5dc3bc953f3fa07784aa842ecfd6b9f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cd468d07d5dc3bc953f3fa07784aa842ecfd6b9f"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "4e625f64d19161979fb2af3b3b8f9e75520028de",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1df08d1580fbab9e58017cf6c1ecb73550bf6ed7/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1df08d1580fbab9e58017cf6c1ecb73550bf6ed7/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=1df08d1580fbab9e58017cf6c1ecb73550bf6ed7",
        "patch": "@@ -138,6 +138,7 @@ void CWallet::DeriveNewChildKey(CKeyMetadata& metadata, CKey& secret, bool inter\n     masterKey.Derive(accountKey, BIP32_HARDENED_KEY_LIMIT);\n \n     // derive m/0'/0' (external chain) OR m/0'/1' (internal chain)\n+    assert(internal ? CanSupportFeature(FEATURE_HD_SPLIT) : true);\n     accountKey.Derive(chainChildKey, BIP32_HARDENED_KEY_LIMIT+(internal ? 1 : 0));\n \n     // derive child key at next index, skip keys already known to the wallet"
      }
    ]
  },
  {
    "sha": "9382f0425e87b30e4621e0e23a99d6e880ec2200",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MzgyZjA0MjVlODdiMzBlNDYyMWUwZTIzYTk5ZDZlODgwZWMyMjAw",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-27T07:51:55Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-27T07:51:55Z"
      },
      "message": "Do not break backward compatibility during wallet encryption",
      "tree": {
        "sha": "6be2142f3b28b2918962928f09c2572e3abcd150",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6be2142f3b28b2918962928f09c2572e3abcd150"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9382f0425e87b30e4621e0e23a99d6e880ec2200",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAljYxLwACgkQHrd2uwPH\nki0pgRAAg95G2b4NQvS+QOVu6H2aeRl+9R1yhgfrj++0faiEzG35Lk1nWRDlF4Jg\nV1cbB4M/W+/wXQhRxevDH5xSKj9pGiiIQnmhp9NS/o9srKmyo5fMkMQy18YNAUpv\n5f9mgf1cd2fpTRJpVeGzkxmh0mB/qun95mY6UuNLq6F+bv+6uSQ2NhYsIQK8/7CE\neeo+cEenpCWYujbbAqEqkdOUbRcwCsKT8CRsrf5WqwckmBJlcn3MaDScQY0xN10i\n+8iTiPobp8LX7BC23TSlifmlrIkx18+xpG5Mky20h1qFw3mpakj6KRZhvAi/tJDA\nGtMfMfBT2N5rUm1bUl90YDS+Q47YGDtPJXhKmcdYXGJPd3CWH0vsR49GVOr3tnWK\nungoyN3Sgvfo8H99IZovvRA3Q/01J8X4dXS3JH9nI3GfwRWWB82hoO7I5y50ZLYg\nVn8gsKGMDvv2DLRzKKNsHUbTxnqluQGnbUxmaB5EUzL504XcKrC5bFuCmJmBrtfT\nB2yEtlnYMc7RAUWCwFG3AHDB7buhgLR1Dfk/nociru54PTM2ymjfQPkjpokCPo3X\ny65KHr5P6oeN7a5N6RH0c0gO/D42ALB4MRSOCyhJwoi94NiHi1hEjNsa3Z0LhX81\ngcKFjzht7fKA6T2WNZyScsrygMCd+MO9QZu+aXzvupc5TYq+5/c=\n=Zvy3\n-----END PGP SIGNATURE-----",
        "payload": "tree 6be2142f3b28b2918962928f09c2572e3abcd150\nparent 1df08d1580fbab9e58017cf6c1ecb73550bf6ed7\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1490601115 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1490601115 +0200\n\nDo not break backward compatibility during wallet encryption\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9382f0425e87b30e4621e0e23a99d6e880ec2200",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9382f0425e87b30e4621e0e23a99d6e880ec2200",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9382f0425e87b30e4621e0e23a99d6e880ec2200/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1df08d1580fbab9e58017cf6c1ecb73550bf6ed7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1df08d1580fbab9e58017cf6c1ecb73550bf6ed7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1df08d1580fbab9e58017cf6c1ecb73550bf6ed7"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 12,
      "deletions": 4
    },
    "files": [
      {
        "sha": "a998179584b5ac9b420eb3223edcb79fbbdc9c4e",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9382f0425e87b30e4621e0e23a99d6e880ec2200/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9382f0425e87b30e4621e0e23a99d6e880ec2200/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=9382f0425e87b30e4621e0e23a99d6e880ec2200",
        "patch": "@@ -639,7 +639,9 @@ bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)\n         if (IsHDEnabled()) {\n             CKey key;\n             CPubKey masterPubKey = GenerateNewHDMasterKey();\n-            if (!SetHDMasterKey(masterPubKey))\n+            // preserve the old chains version to not break backward compatibility\n+            CHDChain oldChain = GetHDChain();\n+            if (!SetHDMasterKey(masterPubKey, &oldChain))\n                 return false;\n         }\n \n@@ -1306,13 +1308,17 @@ CPubKey CWallet::GenerateNewHDMasterKey()\n     return pubkey;\n }\n \n-bool CWallet::SetHDMasterKey(const CPubKey& pubkey)\n+bool CWallet::SetHDMasterKey(const CPubKey& pubkey, CHDChain *possibleOldChain)\n {\n     LOCK(cs_wallet);\n     // store the keyid (hash160) together with\n     // the child index counter in the database\n     // as a hdchain object\n     CHDChain newHdChain;\n+    if (possibleOldChain) {\n+        // preserve the old chains version\n+        newHdChain.nVersion = possibleOldChain->nVersion;\n+    }\n     newHdChain.masterKeyID = pubkey.GetID();\n     SetHDChain(newHdChain, false);\n "
      },
      {
        "sha": "ccede600975db3941e2a25e012b0416aced879fc",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9382f0425e87b30e4621e0e23a99d6e880ec2200/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9382f0425e87b30e4621e0e23a99d6e880ec2200/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=9382f0425e87b30e4621e0e23a99d6e880ec2200",
        "patch": "@@ -1055,8 +1055,10 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     /* Generates a new HD master key (will not be activated) */\n     CPubKey GenerateNewHDMasterKey();\n     \n-    /* Set the current HD master key (will reset the chain child index counters) */\n-    bool SetHDMasterKey(const CPubKey& key);\n+    /* Set the current HD master key (will reset the chain child index counters)\n+       If possibleOldChain is provided, the parameters from the old chain (version)\n+       will be preserved. */\n+    bool SetHDMasterKey(const CPubKey& key, CHDChain *possibleOldChain = nullptr);\n };\n \n /** A key allocated from the key pool. */"
      }
    ]
  },
  {
    "sha": "4115af7ac78971617c4fb80b7db336ff6bf254db",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MTE1YWY3YWM3ODk3MTYxN2M0ZmI4MGI3ZGIzMzZmZjZiZjI1NGRi",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-28T07:18:20Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-03-28T07:18:20Z"
      },
      "message": "Fix rebase issue where pwalletMain was used instead of pwallet\nSer./Deser. nInternalChainCounter as last element",
      "tree": {
        "sha": "dd48e792fae1466201f15bea038bb720437a6a1e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dd48e792fae1466201f15bea038bb720437a6a1e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4115af7ac78971617c4fb80b7db336ff6bf254db",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAljaDnYACgkQHrd2uwPH\nki1yzg//dKx29G4vUxrf7kOo/cw1/RA5tjqFDCMf0kT9FP8jfKbIcJJp6vQt9o+R\naYqhUvPrQiX6SoORXeMGWkVcBEfoYAx3lN7V+RePN+m4wd190PQcgZrjBsWuQ7Ju\nYrckHmspsdymtnrNS/GD7xuCBhqilwfDW0ZjHelT8+TsjOX9MyTEMeHVfTHGEyD/\nDj8zVkfZ3eDEWbLLvsejyeTB0d+FLsoxcJEqukMzCZ2d3P2yaxvHy8BGpUfbvcjG\n/b8OsGeX3OkQjv10IENBS5EdsdK8R39+dZx/9/G/IqKfEC2Brag7UPbsrFPuL7vR\nzBlGCcXo/gW1qIAGXOWDOpRplL3Zs1D01dGWWdIc8iRc6bdOODuKhFOSlPqCHBac\n83sk14oQOWTGgUSj9Ip4uH6CXfl+cqinXxd6fFLJJOUCpqR/fNPdhiPjmwKEcqEP\nU2JQ56QoDWbUkIwvFQVRiP/JCtoS/Yp4dTB+mo/M9glGpnRCc3XaekwYzs9y0vbP\nLzmEE5/xOFrw2rEXVrRKCGcXI965cG9TdG9y1FK3a1GaE3vQlwxKp86L+6lphaq6\nH2LC41mSu+JqNXilEvukaKmMOt/LErffS5tRHWsSUikTbLIYGhZdiChiKLk6Fuzi\nqDoQnXrSRDlfNvyBeTgCmwMRCraKuhOxPLgAuMTO0jbY/hvG2nM=\n=RQLJ\n-----END PGP SIGNATURE-----",
        "payload": "tree dd48e792fae1466201f15bea038bb720437a6a1e\nparent 9382f0425e87b30e4621e0e23a99d6e880ec2200\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1490685500 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1490685500 +0200\n\nFix rebase issue where pwalletMain was used instead of pwallet\nSer./Deser. nInternalChainCounter as last element\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4115af7ac78971617c4fb80b7db336ff6bf254db",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4115af7ac78971617c4fb80b7db336ff6bf254db",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4115af7ac78971617c4fb80b7db336ff6bf254db/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9382f0425e87b30e4621e0e23a99d6e880ec2200",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9382f0425e87b30e4621e0e23a99d6e880ec2200",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9382f0425e87b30e4621e0e23a99d6e880ec2200"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "22b1e3522cc44fb8a32e7ae82b2d5f7e4bab7df8",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4115af7ac78971617c4fb80b7db336ff6bf254db/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4115af7ac78971617c4fb80b7db336ff6bf254db/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=4115af7ac78971617c4fb80b7db336ff6bf254db",
        "patch": "@@ -2439,7 +2439,7 @@ UniValue getwalletinfo(const JSONRPCRequest& request)\n \n     UniValue obj(UniValue::VOBJ);\n \n-    size_t kpExternalSize = pwalletMain->KeypoolCountExternalKeys();\n+    size_t kpExternalSize = pwallet->KeypoolCountExternalKeys();\n     obj.push_back(Pair(\"walletversion\", pwallet->GetVersion()));\n     obj.push_back(Pair(\"balance\",       ValueFromAmount(pwallet->GetBalance())));\n     obj.push_back(Pair(\"unconfirmed_balance\", ValueFromAmount(pwallet->GetUnconfirmedBalance())));"
      },
      {
        "sha": "271c1d66c9d4a3d12a62cdc8248c1af6482a3922",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4115af7ac78971617c4fb80b7db336ff6bf254db/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4115af7ac78971617c4fb80b7db336ff6bf254db/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=4115af7ac78971617c4fb80b7db336ff6bf254db",
        "patch": "@@ -61,9 +61,9 @@ class CHDChain\n     {\n         READWRITE(this->nVersion);\n         READWRITE(nExternalChainCounter);\n+        READWRITE(masterKeyID);\n         if (this->nVersion >= VERSION_HD_CHAIN_SPLIT)\n             READWRITE(nInternalChainCounter);\n-        READWRITE(masterKeyID);\n     }\n \n     void SetNull()"
      }
    ]
  }
]