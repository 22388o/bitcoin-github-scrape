jgarzik,2015-07-06T16:21:10Z,"Context?  Zero explanation of ""why""\n",https://github.com/bitcoin/bitcoin/pull/6380#issuecomment-118915776,118915776,
laanwj,2015-07-06T16:57:44Z,"Useful from JSON-RPC implementations where it's not possible to have direct control over the text of numbers (e.g. where numbers are always doubles), and it's still desired to send an exact value.\n",https://github.com/bitcoin/bitcoin/pull/6380#issuecomment-118924390,118924390,
laanwj,2015-07-06T16:59:31Z,See also  #3759 for previous discussion - I hadn't thought any more context was necessary here.\n,https://github.com/bitcoin/bitcoin/pull/6380#issuecomment-118924720,118924720,
jgarzik,2015-07-06T17:16:24Z,"@laanwj Someone looking at the git commit will have no idea about any of that background context...\n\nCommit messages should answer ""why?"" not just ""what?""\n",https://github.com/bitcoin/bitcoin/pull/6380#issuecomment-118928531,118928531,
laanwj,2015-07-06T18:16:43Z,"Ok, don't feel like this discussion, closing...\n",https://github.com/bitcoin/bitcoin/pull/6380#issuecomment-118943643,118943643,
jonasschnelli,2015-07-06T18:42:56Z,"Hmm.. i think this is useful.\nFor the new wallet i did implement something similar (`val.setNumStr(val.get_str());` see -> https://github.com/jonasschnelli/bitcoin/blob/2015/05/corewallet/src/corewallet/corewallet_rpc.cpp#L109).\n\nThis would allow users to post JSON content with encoded numbers like `{""value"": ""0.00000001""}` instead of `""value"": {0.00000001}` which some php/python encoders wrap ",https://github.com/bitcoin/bitcoin/pull/6380#issuecomment-118953554,118953554,
laanwj,2015-07-06T19:19:23Z,"@jonasschnelli Yes, that's exactly the idea.\n",https://github.com/bitcoin/bitcoin/pull/6380#issuecomment-118968821,118968821,
luke-jr,2015-07-07T00:24:05Z,"As a reminder, the conclusion from #3759 was to use satoshi/integer Numbers, not to stringify...\n",https://github.com/bitcoin/bitcoin/pull/6380#issuecomment-119033812,119033812,
laanwj,2015-07-07T07:54:55Z,"@luke-jr But that would be a major API change, while this could be used today and does not introduce any 1 satoshi versus 1 BTC magnitude risk.\n",https://github.com/bitcoin/bitcoin/pull/6380#issuecomment-119109208,119109208,
jonasschnelli,2015-07-07T08:22:57Z,"I think using `int` Satoshis for all values in RPC would make sense. But as @laanwj said, this would be a major API change with many risks. And i also think that people are ""thinking"" in BTC rather then in Satoshis. Somehow this is a legacy we have to deal with.\n\nNevertheless this PR would also be a slightly API change. In the current releases (before UniValue) and in the current master, numbers",https://github.com/bitcoin/bitcoin/pull/6380#issuecomment-119116080,119116080,
morcos,2015-07-07T14:58:00Z,"I like this pull as well.  We fixed the JSON parsing in #6379 , but what's to say somebody won't be dealing with a broken JSON composer on their end.  This provides a nice safe alternative.\n\nACK\n",https://github.com/bitcoin/bitcoin/pull/6380#issuecomment-119229046,119229046,
jgarzik,2015-07-07T15:00:06Z,ACK.  Thanks for updating the commit.\n,https://github.com/bitcoin/bitcoin/pull/6380#issuecomment-119229985,119229985,
sipa,2015-07-09T20:37:46Z,ACK. We shouldn't forget to mention this in release notes if it gets merged.\n,https://github.com/bitcoin/bitcoin/pull/6380#issuecomment-120138178,120138178,
laanwj,2015-07-10T13:29:33Z,"Yes, and needs to be exercised at least once in the RPC tests as well.\n",https://github.com/bitcoin/bitcoin/pull/6380#issuecomment-120411697,120411697,
jonasschnelli,2015-07-14T19:23:31Z,Tested ACK.\nRPC test extension for `wallet.py` : https://github.com/jonasschnelli/bitcoin/commit/39b44374f78891839d1488133e9a2c3a60ad44e7\n,https://github.com/bitcoin/bitcoin/pull/6380#issuecomment-121347966,121347966,
laanwj,2015-07-15T14:07:24Z,Cherry-picked @jonasschnelli 's test. Thanks!\n,https://github.com/bitcoin/bitcoin/pull/6380#issuecomment-121626141,121626141,
laanwj,2015-07-27T12:05:24Z,Added small mention in release notes.\n,https://github.com/bitcoin/bitcoin/pull/6380#issuecomment-125181657,125181657,
jonasschnelli,2015-07-27T12:06:50Z,reACK\n,https://github.com/bitcoin/bitcoin/pull/6380#issuecomment-125182098,125182098,
