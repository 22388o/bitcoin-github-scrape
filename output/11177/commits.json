[
  {
    "sha": "a50038461338ea9758d198a4d20e434bae3d536c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNTAwMzg0NjEzMzhlYTk3NThkMTk4YTRkMjBlNDM0YmFlM2Q1MzZj",
    "commit": {
      "author": {
        "name": "Raw Ol' Dirty",
        "email": "rawodb@users.noreply.github.com",
        "date": "2017-08-28T21:38:25Z"
      },
      "committer": {
        "name": "Raw Ol' Dirty",
        "email": "rawodb@users.noreply.github.com",
        "date": "2017-08-31T17:30:09Z"
      },
      "message": "[MOVEONLY] Move local Witnessifier to the top of the file",
      "tree": {
        "sha": "4e2999b16f5c63ffa16ccfc6bed4182147a7d0bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e2999b16f5c63ffa16ccfc6bed4182147a7d0bb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a50038461338ea9758d198a4d20e434bae3d536c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a50038461338ea9758d198a4d20e434bae3d536c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a50038461338ea9758d198a4d20e434bae3d536c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a50038461338ea9758d198a4d20e434bae3d536c/comments",
    "author": {
      "login": "rawodb",
      "id": 20778324,
      "node_id": "MDQ6VXNlcjIwNzc4MzI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/20778324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rawodb",
      "html_url": "https://github.com/rawodb",
      "followers_url": "https://api.github.com/users/rawodb/followers",
      "following_url": "https://api.github.com/users/rawodb/following{/other_user}",
      "gists_url": "https://api.github.com/users/rawodb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rawodb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rawodb/subscriptions",
      "organizations_url": "https://api.github.com/users/rawodb/orgs",
      "repos_url": "https://api.github.com/users/rawodb/repos",
      "events_url": "https://api.github.com/users/rawodb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rawodb/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rawodb",
      "id": 20778324,
      "node_id": "MDQ6VXNlcjIwNzc4MzI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/20778324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rawodb",
      "html_url": "https://github.com/rawodb",
      "followers_url": "https://api.github.com/users/rawodb/followers",
      "following_url": "https://api.github.com/users/rawodb/following{/other_user}",
      "gists_url": "https://api.github.com/users/rawodb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rawodb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rawodb/subscriptions",
      "organizations_url": "https://api.github.com/users/rawodb/orgs",
      "repos_url": "https://api.github.com/users/rawodb/repos",
      "events_url": "https://api.github.com/users/rawodb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rawodb/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d81dccf191a48a6b59c3747d7b4ccbe3535dde40",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d81dccf191a48a6b59c3747d7b4ccbe3535dde40",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d81dccf191a48a6b59c3747d7b4ccbe3535dde40"
      }
    ],
    "stats": {
      "total": 110,
      "additions": 55,
      "deletions": 55
    },
    "files": [
      {
        "sha": "3fd9ae5cab2bd79ca5952c2ed7edefcb7282d877",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 55,
        "deletions": 55,
        "changes": 110,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a50038461338ea9758d198a4d20e434bae3d536c/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a50038461338ea9758d198a4d20e434bae3d536c/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=a50038461338ea9758d198a4d20e434bae3d536c",
        "patch": "@@ -49,6 +49,61 @@ CWallet *GetWalletForJSONRPCRequest(const JSONRPCRequest& request)\n     return ::vpwallets.size() == 1 || (request.fHelp && ::vpwallets.size() > 0) ? ::vpwallets[0] : nullptr;\n }\n \n+class Witnessifier : public boost::static_visitor<bool>\n+{\n+public:\n+    CWallet * const pwallet;\n+    CScriptID result;\n+\n+    Witnessifier(CWallet *_pwallet) : pwallet(_pwallet) {}\n+\n+    bool operator()(const CNoDestination &dest) const { return false; }\n+\n+    bool operator()(const CKeyID &keyID) {\n+        if (pwallet) {\n+            CScript basescript = GetScriptForDestination(keyID);\n+            CScript witscript = GetScriptForWitness(basescript);\n+            SignatureData sigs;\n+            // This check is to make sure that the script we created can actually be solved for and signed by us\n+            // if we were to have the private keys. This is just to make sure that the script is valid and that,\n+            // if found in a transaction, we would still accept and relay that transcation.\n+            if (!ProduceSignature(DummySignatureCreator(pwallet), witscript, sigs) ||\n+                !VerifyScript(sigs.scriptSig, witscript, &sigs.scriptWitness, MANDATORY_SCRIPT_VERIFY_FLAGS | SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, DummySignatureCreator(pwallet).Checker())) {\n+                return false;\n+            }\n+            pwallet->AddCScript(witscript);\n+            result = CScriptID(witscript);\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    bool operator()(const CScriptID &scriptID) {\n+        CScript subscript;\n+        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n+            int witnessversion;\n+            std::vector<unsigned char> witprog;\n+            if (subscript.IsWitnessProgram(witnessversion, witprog)) {\n+                result = scriptID;\n+                return true;\n+            }\n+            CScript witscript = GetScriptForWitness(subscript);\n+            SignatureData sigs;\n+            // This check is to make sure that the script we created can actually be solved for and signed by us\n+            // if we were to have the private keys. This is just to make sure that the script is valid and that,\n+            // if found in a transaction, we would still accept and relay that transcation.\n+            if (!ProduceSignature(DummySignatureCreator(pwallet), witscript, sigs) ||\n+                !VerifyScript(sigs.scriptSig, witscript, &sigs.scriptWitness, MANDATORY_SCRIPT_VERIFY_FLAGS | SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, DummySignatureCreator(pwallet).Checker())) {\n+                return false;\n+            }\n+            pwallet->AddCScript(witscript);\n+            result = CScriptID(witscript);\n+            return true;\n+        }\n+        return false;\n+    }\n+};\n+\n std::string HelpRequiringPassphrase(CWallet * const pwallet)\n {\n     return pwallet && pwallet->IsCrypted()\n@@ -1131,61 +1186,6 @@ UniValue addmultisigaddress(const JSONRPCRequest& request)\n     return CBitcoinAddress(innerID).ToString();\n }\n \n-class Witnessifier : public boost::static_visitor<bool>\n-{\n-public:\n-    CWallet * const pwallet;\n-    CScriptID result;\n-\n-    explicit Witnessifier(CWallet *_pwallet) : pwallet(_pwallet) {}\n-\n-    bool operator()(const CNoDestination &dest) const { return false; }\n-\n-    bool operator()(const CKeyID &keyID) {\n-        if (pwallet) {\n-            CScript basescript = GetScriptForDestination(keyID);\n-            CScript witscript = GetScriptForWitness(basescript);\n-            SignatureData sigs;\n-            // This check is to make sure that the script we created can actually be solved for and signed by us\n-            // if we were to have the private keys. This is just to make sure that the script is valid and that,\n-            // if found in a transaction, we would still accept and relay that transaction.\n-            if (!ProduceSignature(DummySignatureCreator(pwallet), witscript, sigs) ||\n-                !VerifyScript(sigs.scriptSig, witscript, &sigs.scriptWitness, MANDATORY_SCRIPT_VERIFY_FLAGS | SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, DummySignatureCreator(pwallet).Checker())) {\n-                return false;\n-            }\n-            pwallet->AddCScript(witscript);\n-            result = CScriptID(witscript);\n-            return true;\n-        }\n-        return false;\n-    }\n-\n-    bool operator()(const CScriptID &scriptID) {\n-        CScript subscript;\n-        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n-            int witnessversion;\n-            std::vector<unsigned char> witprog;\n-            if (subscript.IsWitnessProgram(witnessversion, witprog)) {\n-                result = scriptID;\n-                return true;\n-            }\n-            CScript witscript = GetScriptForWitness(subscript);\n-            SignatureData sigs;\n-            // This check is to make sure that the script we created can actually be solved for and signed by us\n-            // if we were to have the private keys. This is just to make sure that the script is valid and that,\n-            // if found in a transaction, we would still accept and relay that transaction.\n-            if (!ProduceSignature(DummySignatureCreator(pwallet), witscript, sigs) ||\n-                !VerifyScript(sigs.scriptSig, witscript, &sigs.scriptWitness, MANDATORY_SCRIPT_VERIFY_FLAGS | SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, DummySignatureCreator(pwallet).Checker())) {\n-                return false;\n-            }\n-            pwallet->AddCScript(witscript);\n-            result = CScriptID(witscript);\n-            return true;\n-        }\n-        return false;\n-    }\n-};\n-\n UniValue addwitnessaddress(const JSONRPCRequest& request)\n {\n     CWallet * const pwallet = GetWalletForJSONRPCRequest(request);"
      }
    ]
  },
  {
    "sha": "42e6a7c7dd3e55a1851bda3b41f0a93182d3815c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MmU2YTdjN2RkM2U1NWExODUxYmRhM2I0MWYwYTkzMTgyZDM4MTVj",
    "commit": {
      "author": {
        "name": "Raw Ol' Dirty",
        "email": "rawodb@users.noreply.github.com",
        "date": "2017-08-28T21:40:08Z"
      },
      "committer": {
        "name": "Raw Ol' Dirty",
        "email": "rawodb@users.noreply.github.com",
        "date": "2017-08-31T17:30:09Z"
      },
      "message": "Add -defaultwitnessaddress startup parameter to enable default witnessification",
      "tree": {
        "sha": "c3fbc9a0904cd98fde97d69b266fa446390bc104",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c3fbc9a0904cd98fde97d69b266fa446390bc104"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/42e6a7c7dd3e55a1851bda3b41f0a93182d3815c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42e6a7c7dd3e55a1851bda3b41f0a93182d3815c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/42e6a7c7dd3e55a1851bda3b41f0a93182d3815c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42e6a7c7dd3e55a1851bda3b41f0a93182d3815c/comments",
    "author": {
      "login": "rawodb",
      "id": 20778324,
      "node_id": "MDQ6VXNlcjIwNzc4MzI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/20778324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rawodb",
      "html_url": "https://github.com/rawodb",
      "followers_url": "https://api.github.com/users/rawodb/followers",
      "following_url": "https://api.github.com/users/rawodb/following{/other_user}",
      "gists_url": "https://api.github.com/users/rawodb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rawodb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rawodb/subscriptions",
      "organizations_url": "https://api.github.com/users/rawodb/orgs",
      "repos_url": "https://api.github.com/users/rawodb/repos",
      "events_url": "https://api.github.com/users/rawodb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rawodb/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rawodb",
      "id": 20778324,
      "node_id": "MDQ6VXNlcjIwNzc4MzI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/20778324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rawodb",
      "html_url": "https://github.com/rawodb",
      "followers_url": "https://api.github.com/users/rawodb/followers",
      "following_url": "https://api.github.com/users/rawodb/following{/other_user}",
      "gists_url": "https://api.github.com/users/rawodb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rawodb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rawodb/subscriptions",
      "organizations_url": "https://api.github.com/users/rawodb/orgs",
      "repos_url": "https://api.github.com/users/rawodb/repos",
      "events_url": "https://api.github.com/users/rawodb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rawodb/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a50038461338ea9758d198a4d20e434bae3d536c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a50038461338ea9758d198a4d20e434bae3d536c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a50038461338ea9758d198a4d20e434bae3d536c"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c9833741dc2fe453f63cf897248c1d47c4c986b3",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/42e6a7c7dd3e55a1851bda3b41f0a93182d3815c/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/42e6a7c7dd3e55a1851bda3b41f0a93182d3815c/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=42e6a7c7dd3e55a1851bda3b41f0a93182d3815c",
        "patch": "@@ -453,6 +453,7 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-limitdescendantcount=<n>\", strprintf(\"Do not accept transactions if any ancestor would have <n> or more in-mempool descendants (default: %u)\", DEFAULT_DESCENDANT_LIMIT));\n         strUsage += HelpMessageOpt(\"-limitdescendantsize=<n>\", strprintf(\"Do not accept transactions if any ancestor would have more than <n> kilobytes of in-mempool descendants (default: %u).\", DEFAULT_DESCENDANT_SIZE_LIMIT));\n         strUsage += HelpMessageOpt(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\");\n+        strUsage += HelpMessageOpt(\"-defaultwitnessaddress\", \"Return witness addresses by default in RPC calls (default: false)\");\n     }\n     strUsage += HelpMessageOpt(\"-debug=<category>\", strprintf(_(\"Output debugging information (default: %u, supplying <category> is optional)\"), 0) + \". \" +\n         _(\"If <category> is not supplied or if <category> = 1, output all debugging information.\") + \" \" + _(\"<category> can be:\") + \" \" + ListLogCategories() + \".\");"
      }
    ]
  },
  {
    "sha": "d3347f722d1259aca17419c6a668dcd6dc74a983",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMzM0N2Y3MjJkMTI1OWFjYTE3NDE5YzZhNjY4ZGNkNmRjNzRhOTgz",
    "commit": {
      "author": {
        "name": "Raw Ol' Dirty",
        "email": "rawodb@users.noreply.github.com",
        "date": "2017-08-28T21:41:15Z"
      },
      "committer": {
        "name": "Raw Ol' Dirty",
        "email": "rawodb@users.noreply.github.com",
        "date": "2017-08-31T17:30:09Z"
      },
      "message": "Add GetWitnessScriptFromAddress / WitnessifyBitcoinAddress accessors",
      "tree": {
        "sha": "3a73ed49361ebd32857596b38332da71dbeda467",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3a73ed49361ebd32857596b38332da71dbeda467"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d3347f722d1259aca17419c6a668dcd6dc74a983",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3347f722d1259aca17419c6a668dcd6dc74a983",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d3347f722d1259aca17419c6a668dcd6dc74a983",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3347f722d1259aca17419c6a668dcd6dc74a983/comments",
    "author": {
      "login": "rawodb",
      "id": 20778324,
      "node_id": "MDQ6VXNlcjIwNzc4MzI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/20778324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rawodb",
      "html_url": "https://github.com/rawodb",
      "followers_url": "https://api.github.com/users/rawodb/followers",
      "following_url": "https://api.github.com/users/rawodb/following{/other_user}",
      "gists_url": "https://api.github.com/users/rawodb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rawodb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rawodb/subscriptions",
      "organizations_url": "https://api.github.com/users/rawodb/orgs",
      "repos_url": "https://api.github.com/users/rawodb/repos",
      "events_url": "https://api.github.com/users/rawodb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rawodb/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rawodb",
      "id": 20778324,
      "node_id": "MDQ6VXNlcjIwNzc4MzI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/20778324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rawodb",
      "html_url": "https://github.com/rawodb",
      "followers_url": "https://api.github.com/users/rawodb/followers",
      "following_url": "https://api.github.com/users/rawodb/following{/other_user}",
      "gists_url": "https://api.github.com/users/rawodb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rawodb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rawodb/subscriptions",
      "organizations_url": "https://api.github.com/users/rawodb/orgs",
      "repos_url": "https://api.github.com/users/rawodb/repos",
      "events_url": "https://api.github.com/users/rawodb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rawodb/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "42e6a7c7dd3e55a1851bda3b41f0a93182d3815c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42e6a7c7dd3e55a1851bda3b41f0a93182d3815c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/42e6a7c7dd3e55a1851bda3b41f0a93182d3815c"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 17,
      "deletions": 0
    },
    "files": [
      {
        "sha": "63cab26a5cd2e69264544f4d695c8b054216f41f",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3347f722d1259aca17419c6a668dcd6dc74a983/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3347f722d1259aca17419c6a668dcd6dc74a983/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=d3347f722d1259aca17419c6a668dcd6dc74a983",
        "patch": "@@ -104,6 +104,23 @@ class Witnessifier : public boost::static_visitor<bool>\n     }\n };\n \n+CScriptID GetWitnessScriptFromAddress(CWallet * const pwallet, CBitcoinAddress addr)\n+{\n+        Witnessifier w(pwallet);\n+        CTxDestination dest = addr.Get();\n+        if (!boost::apply_visitor(w, dest)) \n+\t\t\tthrow JSONRPCError(RPC_WALLET_ERROR, \"Public key or redeemscript not known to wallet, or the key is uncompressed\");\n+        return w.result;\n+}\n+\n+CBitcoinAddress WitnessifyBitcoinAddress(CWallet* const pwallet, std::string strAccount, CBitcoinAddress addr)\n+{\n+        Witnessifier w(pwallet);\n+        CScriptID wscript = GetWitnessScriptFromAddress(pwallet, addr);\n+        pwallet->SetAddressBook(wscript, strAccount, \"receive\");\n+        return CBitcoinAddress(wscript);\n+}\n+\n std::string HelpRequiringPassphrase(CWallet * const pwallet)\n {\n     return pwallet && pwallet->IsCrypted()"
      }
    ]
  },
  {
    "sha": "0e9c9403aedc152393615cd28a754f8c6a3e348d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZTljOTQwM2FlZGMxNTIzOTM2MTVjZDI4YTc1NGY4YzZhM2UzNDhk",
    "commit": {
      "author": {
        "name": "Raw Ol' Dirty",
        "email": "rawodb@users.noreply.github.com",
        "date": "2017-08-28T21:50:44Z"
      },
      "committer": {
        "name": "Raw Ol' Dirty",
        "email": "rawodb@users.noreply.github.com",
        "date": "2017-08-31T17:30:09Z"
      },
      "message": "Add support for witness/-defaultwitnessaddress flag to getnewaddress",
      "tree": {
        "sha": "cd291f5ccf80492bd6cd7b6bb5073143cce9bdc9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cd291f5ccf80492bd6cd7b6bb5073143cce9bdc9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0e9c9403aedc152393615cd28a754f8c6a3e348d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e9c9403aedc152393615cd28a754f8c6a3e348d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0e9c9403aedc152393615cd28a754f8c6a3e348d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e9c9403aedc152393615cd28a754f8c6a3e348d/comments",
    "author": {
      "login": "rawodb",
      "id": 20778324,
      "node_id": "MDQ6VXNlcjIwNzc4MzI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/20778324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rawodb",
      "html_url": "https://github.com/rawodb",
      "followers_url": "https://api.github.com/users/rawodb/followers",
      "following_url": "https://api.github.com/users/rawodb/following{/other_user}",
      "gists_url": "https://api.github.com/users/rawodb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rawodb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rawodb/subscriptions",
      "organizations_url": "https://api.github.com/users/rawodb/orgs",
      "repos_url": "https://api.github.com/users/rawodb/repos",
      "events_url": "https://api.github.com/users/rawodb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rawodb/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rawodb",
      "id": 20778324,
      "node_id": "MDQ6VXNlcjIwNzc4MzI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/20778324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rawodb",
      "html_url": "https://github.com/rawodb",
      "followers_url": "https://api.github.com/users/rawodb/followers",
      "following_url": "https://api.github.com/users/rawodb/following{/other_user}",
      "gists_url": "https://api.github.com/users/rawodb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rawodb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rawodb/subscriptions",
      "organizations_url": "https://api.github.com/users/rawodb/orgs",
      "repos_url": "https://api.github.com/users/rawodb/repos",
      "events_url": "https://api.github.com/users/rawodb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rawodb/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d3347f722d1259aca17419c6a668dcd6dc74a983",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3347f722d1259aca17419c6a668dcd6dc74a983",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d3347f722d1259aca17419c6a668dcd6dc74a983"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 17,
      "deletions": 5
    },
    "files": [
      {
        "sha": "4e0556f98010dcb417b9931a819c119079a84f5a",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e9c9403aedc152393615cd28a754f8c6a3e348d/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e9c9403aedc152393615cd28a754f8c6a3e348d/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=0e9c9403aedc152393615cd28a754f8c6a3e348d",
        "patch": "@@ -120,6 +120,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"estimaterawfee\", 1, \"threshold\" },\n     { \"prioritisetransaction\", 1, \"dummy\" },\n     { \"prioritisetransaction\", 2, \"fee_delta\" },\n+    { \"getnewaddress\", 1, \"witness\" },\n     { \"setban\", 2, \"bantime\" },\n     { \"setban\", 3, \"absolute\" },\n     { \"setnetworkactive\", 0, \"state\" },"
      },
      {
        "sha": "3b6fab7c69d624837a2812be2fe7e54ea31c3aea",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 5,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e9c9403aedc152393615cd28a754f8c6a3e348d/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e9c9403aedc152393615cd28a754f8c6a3e348d/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=0e9c9403aedc152393615cd28a754f8c6a3e348d",
        "patch": "@@ -206,19 +206,22 @@ UniValue getnewaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() > 1)\n+    if (request.fHelp || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"getnewaddress ( \\\"account\\\" )\\n\"\n+            \"getnewaddress ( \\\"account\\\" \\\"witness\\\" )\\n\"\n             \"\\nReturns a new Bitcoin address for receiving payments.\\n\"\n             \"If 'account' is specified (DEPRECATED), it is added to the address book \\n\"\n             \"so payments received with the address will be credited to 'account'.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"account\\\"        (string, optional) DEPRECATED. The account name for the address to be linked to. If not provided, the default account \\\"\\\" is used. It can also be set to the empty string \\\"\\\" to represent the default account. The account does not need to exist, it will be created if there is no account by the given name.\\n\"\n+            \"2. \\\"witness\\\"        (boolean, optional, default=false) Return a witness address\"\n             \"\\nResult:\\n\"\n             \"\\\"address\\\"    (string) The new bitcoin address\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getnewaddress\", \"\")\n+            + HelpExampleCli(\"getnewaddress\", \"\\\"account\\\" false\")\n             + HelpExampleRpc(\"getnewaddress\", \"\")\n+            + HelpExampleRpc(\"getnewaddress\", \"\\\"account\\\" false\")\n         );\n \n     LOCK2(cs_main, pwallet->cs_wallet);\n@@ -238,12 +241,20 @@ UniValue getnewaddress(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_WALLET_KEYPOOL_RAN_OUT, \"Error: Keypool ran out, please call keypoolrefill first\");\n     }\n     CKeyID keyID = newKey.GetID();\n+    CBitcoinAddress addr = CBitcoinAddress(keyID);\n \n     pwallet->SetAddressBook(keyID, strAccount, \"receive\");\n+    bool witnessify = gArgs.GetBoolArg(\"-defaultwitnessaddress\", false);\n+    if (!request.params[1].isNull()) {\n+\t\twitnessify = request.params[1].get_bool();\n+    }\n \n-    return CBitcoinAddress(keyID).ToString();\n-}\n+    if (witnessify) {\n+\t\treturn WitnessifyBitcoinAddress(pwallet, strAccount, addr).ToString();\n+    }\n \n+    return addr.ToString();\n+}\n \n CBitcoinAddress GetAccountAddress(CWallet* const pwallet, std::string strAccount, bool bForceNew=false)\n {\n@@ -3193,7 +3204,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"getaccount\",               &getaccount,               true,   {\"address\"} },\n     { \"wallet\",             \"getaddressesbyaccount\",    &getaddressesbyaccount,    true,   {\"account\"} },\n     { \"wallet\",             \"getbalance\",               &getbalance,               false,  {\"account\",\"minconf\",\"include_watchonly\"} },\n-    { \"wallet\",             \"getnewaddress\",            &getnewaddress,            true,   {\"account\"} },\n+    { \"wallet\",             \"getnewaddress\",            &getnewaddress,            true,   {\"account\", \"witness\"} },\n     { \"wallet\",             \"getrawchangeaddress\",      &getrawchangeaddress,      true,   {} },\n     { \"wallet\",             \"getreceivedbyaccount\",     &getreceivedbyaccount,     false,  {\"account\",\"minconf\"} },\n     { \"wallet\",             \"getreceivedbyaddress\",     &getreceivedbyaddress,     false,  {\"address\",\"minconf\"} },"
      }
    ]
  },
  {
    "sha": "fc3759292a6a0d78b36138dc37ff8a96cc5a7ecc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYzM3NTkyOTJhNmEwZDc4YjM2MTM4ZGMzN2ZmOGE5NmNjNWE3ZWNj",
    "commit": {
      "author": {
        "name": "Raw Ol' Dirty",
        "email": "rawodb@users.noreply.github.com",
        "date": "2017-08-28T21:51:57Z"
      },
      "committer": {
        "name": "Raw Ol' Dirty",
        "email": "rawodb@users.noreply.github.com",
        "date": "2017-08-31T17:30:09Z"
      },
      "message": "Add support for witness/-defaultwitnessaddress flag to getaccountaddress and witness destination check to GetAccountPubkey",
      "tree": {
        "sha": "1b139128f4cd464534624da9eeb9b00805883900",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1b139128f4cd464534624da9eeb9b00805883900"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fc3759292a6a0d78b36138dc37ff8a96cc5a7ecc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc3759292a6a0d78b36138dc37ff8a96cc5a7ecc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fc3759292a6a0d78b36138dc37ff8a96cc5a7ecc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc3759292a6a0d78b36138dc37ff8a96cc5a7ecc/comments",
    "author": {
      "login": "rawodb",
      "id": 20778324,
      "node_id": "MDQ6VXNlcjIwNzc4MzI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/20778324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rawodb",
      "html_url": "https://github.com/rawodb",
      "followers_url": "https://api.github.com/users/rawodb/followers",
      "following_url": "https://api.github.com/users/rawodb/following{/other_user}",
      "gists_url": "https://api.github.com/users/rawodb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rawodb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rawodb/subscriptions",
      "organizations_url": "https://api.github.com/users/rawodb/orgs",
      "repos_url": "https://api.github.com/users/rawodb/repos",
      "events_url": "https://api.github.com/users/rawodb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rawodb/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rawodb",
      "id": 20778324,
      "node_id": "MDQ6VXNlcjIwNzc4MzI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/20778324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rawodb",
      "html_url": "https://github.com/rawodb",
      "followers_url": "https://api.github.com/users/rawodb/followers",
      "following_url": "https://api.github.com/users/rawodb/following{/other_user}",
      "gists_url": "https://api.github.com/users/rawodb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rawodb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rawodb/subscriptions",
      "organizations_url": "https://api.github.com/users/rawodb/orgs",
      "repos_url": "https://api.github.com/users/rawodb/repos",
      "events_url": "https://api.github.com/users/rawodb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rawodb/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0e9c9403aedc152393615cd28a754f8c6a3e348d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e9c9403aedc152393615cd28a754f8c6a3e348d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0e9c9403aedc152393615cd28a754f8c6a3e348d"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 19,
      "deletions": 5
    },
    "files": [
      {
        "sha": "5c917b46ce0e8363d9709fad1d71d2f416741223",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc3759292a6a0d78b36138dc37ff8a96cc5a7ecc/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc3759292a6a0d78b36138dc37ff8a96cc5a7ecc/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=fc3759292a6a0d78b36138dc37ff8a96cc5a7ecc",
        "patch": "@@ -120,6 +120,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"estimaterawfee\", 1, \"threshold\" },\n     { \"prioritisetransaction\", 1, \"dummy\" },\n     { \"prioritisetransaction\", 2, \"fee_delta\" },\n+    { \"getaccountaddress\", 1, \"witness\" },\n     { \"getnewaddress\", 1, \"witness\" },\n     { \"setban\", 2, \"bantime\" },\n     { \"setban\", 3, \"absolute\" },"
      },
      {
        "sha": "bf29f47763994b237cf75be842c155b55a24c31e",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 4,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc3759292a6a0d78b36138dc37ff8a96cc5a7ecc/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc3759292a6a0d78b36138dc37ff8a96cc5a7ecc/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=fc3759292a6a0d78b36138dc37ff8a96cc5a7ecc",
        "patch": "@@ -273,19 +273,22 @@ UniValue getaccountaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() != 1)\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"getaccountaddress \\\"account\\\"\\n\"\n+            \"getaccountaddress \\\"account\\\" \\\"witness\\\"\\n\"\n             \"\\nDEPRECATED. Returns the current Bitcoin address for receiving payments to this account.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"account\\\"       (string, required) The account name for the address. It can also be set to the empty string \\\"\\\" to represent the default account. The account does not need to exist, it will be created and a new address created  if there is no account by the given name.\\n\"\n+            \"2. \\\"witness\\\"       (boolean, optional, default=false) Return a witness address\\n\"\n             \"\\nResult:\\n\"\n             \"\\\"address\\\"          (string) The account bitcoin address\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getaccountaddress\", \"\")\n             + HelpExampleCli(\"getaccountaddress\", \"\\\"\\\"\")\n             + HelpExampleCli(\"getaccountaddress\", \"\\\"myaccount\\\"\")\n+            + HelpExampleCli(\"getaccountaddress\", \"\\\"myaccount\\\" true\")\n             + HelpExampleRpc(\"getaccountaddress\", \"\\\"myaccount\\\"\")\n+            + HelpExampleRpc(\"getaccountaddress\", \"\\\"myaccount\\\", true\")\n         );\n \n     LOCK2(cs_main, pwallet->cs_wallet);\n@@ -295,7 +298,16 @@ UniValue getaccountaddress(const JSONRPCRequest& request)\n \n     UniValue ret(UniValue::VSTR);\n \n-    ret = GetAccountAddress(pwallet, strAccount).ToString();\n+    CBitcoinAddress addr = GetAccountAddress(pwallet, strAccount);\n+    bool witnessify = gArgs.GetBoolArg(\"-defaultwitnessaddress\", false);\n+    if (!request.params[1].isNull()) {\n+        witnessify = request.params[1].get_bool();\n+    }\n+\n+    if (witnessify) {\n+        return WitnessifyBitcoinAddress(pwallet, strAccount, addr).ToString();\n+    }\n+    ret = addr.ToString();\n     return ret;\n }\n \n@@ -3200,7 +3212,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"dumpprivkey\",              &dumpprivkey,              true,   {\"address\"}  },\n     { \"wallet\",             \"dumpwallet\",               &dumpwallet,               true,   {\"filename\"} },\n     { \"wallet\",             \"encryptwallet\",            &encryptwallet,            true,   {\"passphrase\"} },\n-    { \"wallet\",             \"getaccountaddress\",        &getaccountaddress,        true,   {\"account\"} },\n+    { \"wallet\",             \"getaccountaddress\",        &getaccountaddress,        true,   {\"account\", \"witness\"} },\n     { \"wallet\",             \"getaccount\",               &getaccount,               true,   {\"address\"} },\n     { \"wallet\",             \"getaddressesbyaccount\",    &getaddressesbyaccount,    true,   {\"account\"} },\n     { \"wallet\",             \"getbalance\",               &getbalance,               false,  {\"account\",\"minconf\",\"include_watchonly\"} },"
      },
      {
        "sha": "a5ba35011da47a5c8481841373b331d332229e3f",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc3759292a6a0d78b36138dc37ff8a96cc5a7ecc/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc3759292a6a0d78b36138dc37ff8a96cc5a7ecc/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=fc3759292a6a0d78b36138dc37ff8a96cc5a7ecc",
        "patch": "@@ -804,11 +804,12 @@ bool CWallet::GetAccountPubkey(CPubKey &pubKey, std::string strAccount, bool bFo\n         else {\n             // Check if the current key has been used\n             CScript scriptPubKey = GetScriptForDestination(account.vchPubKey.GetID());\n+            CScript scriptWitness = GetScriptForDestination(GetScriptForWitness(scriptPubKey));\n             for (std::map<uint256, CWalletTx>::iterator it = mapWallet.begin();\n                  it != mapWallet.end() && account.vchPubKey.IsValid();\n                  ++it)\n                 for (const CTxOut& txout : (*it).second.tx->vout)\n-                    if (txout.scriptPubKey == scriptPubKey) {\n+                    if (txout.scriptPubKey == scriptPubKey || txout.scriptPubKey == scriptWitness) {\n                         bForceNew = true;\n                         break;\n                     }"
      }
    ]
  },
  {
    "sha": "e9959ec35814f5e9d3ea4f825c21bbb924c559c4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOTk1OWVjMzU4MTRmNWU5ZDNlYTRmODI1YzIxYmJiOTI0YzU1OWM0",
    "commit": {
      "author": {
        "name": "Raw Ol' Dirty",
        "email": "rawodb@users.noreply.github.com",
        "date": "2017-08-28T21:55:26Z"
      },
      "committer": {
        "name": "Raw Ol' Dirty",
        "email": "rawodb@users.noreply.github.com",
        "date": "2017-08-31T17:30:09Z"
      },
      "message": "Add label support to addwitnessaddress",
      "tree": {
        "sha": "b622500951b35931a207869028769fbbfe672d97",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b622500951b35931a207869028769fbbfe672d97"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e9959ec35814f5e9d3ea4f825c21bbb924c559c4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9959ec35814f5e9d3ea4f825c21bbb924c559c4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e9959ec35814f5e9d3ea4f825c21bbb924c559c4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9959ec35814f5e9d3ea4f825c21bbb924c559c4/comments",
    "author": {
      "login": "rawodb",
      "id": 20778324,
      "node_id": "MDQ6VXNlcjIwNzc4MzI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/20778324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rawodb",
      "html_url": "https://github.com/rawodb",
      "followers_url": "https://api.github.com/users/rawodb/followers",
      "following_url": "https://api.github.com/users/rawodb/following{/other_user}",
      "gists_url": "https://api.github.com/users/rawodb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rawodb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rawodb/subscriptions",
      "organizations_url": "https://api.github.com/users/rawodb/orgs",
      "repos_url": "https://api.github.com/users/rawodb/repos",
      "events_url": "https://api.github.com/users/rawodb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rawodb/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rawodb",
      "id": 20778324,
      "node_id": "MDQ6VXNlcjIwNzc4MzI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/20778324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rawodb",
      "html_url": "https://github.com/rawodb",
      "followers_url": "https://api.github.com/users/rawodb/followers",
      "following_url": "https://api.github.com/users/rawodb/following{/other_user}",
      "gists_url": "https://api.github.com/users/rawodb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rawodb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rawodb/subscriptions",
      "organizations_url": "https://api.github.com/users/rawodb/orgs",
      "repos_url": "https://api.github.com/users/rawodb/repos",
      "events_url": "https://api.github.com/users/rawodb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rawodb/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fc3759292a6a0d78b36138dc37ff8a96cc5a7ecc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc3759292a6a0d78b36138dc37ff8a96cc5a7ecc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fc3759292a6a0d78b36138dc37ff8a96cc5a7ecc"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 11,
      "deletions": 11
    },
    "files": [
      {
        "sha": "92ac1950d1757ee972b0a7727a0c8593d5ecd5da",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e9959ec35814f5e9d3ea4f825c21bbb924c559c4/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e9959ec35814f5e9d3ea4f825c21bbb924c559c4/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=e9959ec35814f5e9d3ea4f825c21bbb924c559c4",
        "patch": "@@ -1233,14 +1233,15 @@ UniValue addwitnessaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() < 1 || request.params.size() > 1)\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n     {\n-        std::string msg = \"addwitnessaddress \\\"address\\\"\\n\"\n+        std::string msg = \"addwitnessaddress \\\"address\\\" \\\"label\\\"\\n\"\n             \"\\nAdd a witness address for a script (with pubkey or redeemscript known).\\n\"\n             \"It returns the witness script.\\n\"\n \n             \"\\nArguments:\\n\"\n             \"1. \\\"address\\\"       (string, required) An address known to the wallet\\n\"\n+            \"2. \\\"label\\\"         (string, optional) A comment for the address if any\\n\"\n \n             \"\\nResult:\\n\"\n             \"\\\"witnessaddress\\\",  (string) The value of the new address (P2SH of witness script).\\n\"\n@@ -1260,16 +1261,15 @@ UniValue addwitnessaddress(const JSONRPCRequest& request)\n     if (!address.IsValid())\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n \n-    Witnessifier w(pwallet);\n-    CTxDestination dest = address.Get();\n-    bool ret = boost::apply_visitor(w, dest);\n-    if (!ret) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Public key or redeemscript not known to wallet, or the key is uncompressed\");\n-    }\n+\tCScriptID wresult = GetWitnessScriptFromAddress(pwallet, address);\n+\n+    std::string strLabel;\n+    if (request.params.size() >= 2)\n+\t\tstrLabel = request.params[1].get_str();\n \n-    pwallet->SetAddressBook(w.result, \"\", \"receive\");\n+    pwallet->SetAddressBook(wresult, strLabel, \"receive\");\n \n-    return CBitcoinAddress(w.result).ToString();\n+    return CBitcoinAddress(wresult).ToString();\n }\n \n struct tallyitem\n@@ -3206,7 +3206,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"abandontransaction\",       &abandontransaction,       false,  {\"txid\"} },\n     { \"wallet\",             \"abortrescan\",              &abortrescan,              false,  {} },\n     { \"wallet\",             \"addmultisigaddress\",       &addmultisigaddress,       true,   {\"nrequired\",\"keys\",\"account\"} },\n-    { \"wallet\",             \"addwitnessaddress\",        &addwitnessaddress,        true,   {\"address\"} },\n+    { \"wallet\",             \"addwitnessaddress\",        &addwitnessaddress,        true,   {\"address\", \"label\"} },\n     { \"wallet\",             \"backupwallet\",             &backupwallet,             true,   {\"destination\"} },\n     { \"wallet\",             \"bumpfee\",                  &bumpfee,                  true,   {\"txid\", \"options\"} },\n     { \"wallet\",             \"dumpprivkey\",              &dumpprivkey,              true,   {\"address\"}  },"
      }
    ]
  },
  {
    "sha": "4aa503d55210a751018d6a2b856f382241dac8f5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YWE1MDNkNTUyMTBhNzUxMDE4ZDZhMmI4NTZmMzgyMjQxZGFjOGY1",
    "commit": {
      "author": {
        "name": "Raw Ol' Dirty",
        "email": "rawodb@users.noreply.github.com",
        "date": "2017-08-31T17:28:16Z"
      },
      "committer": {
        "name": "Raw Ol' Dirty",
        "email": "rawodb@users.noreply.github.com",
        "date": "2017-09-01T06:54:12Z"
      },
      "message": "Use P2SH SegWit change addresses when -defaultwitnessaddress is used",
      "tree": {
        "sha": "f419845f50601e2f5b6eabeb555147a117558fc8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f419845f50601e2f5b6eabeb555147a117558fc8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4aa503d55210a751018d6a2b856f382241dac8f5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4aa503d55210a751018d6a2b856f382241dac8f5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4aa503d55210a751018d6a2b856f382241dac8f5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4aa503d55210a751018d6a2b856f382241dac8f5/comments",
    "author": {
      "login": "rawodb",
      "id": 20778324,
      "node_id": "MDQ6VXNlcjIwNzc4MzI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/20778324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rawodb",
      "html_url": "https://github.com/rawodb",
      "followers_url": "https://api.github.com/users/rawodb/followers",
      "following_url": "https://api.github.com/users/rawodb/following{/other_user}",
      "gists_url": "https://api.github.com/users/rawodb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rawodb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rawodb/subscriptions",
      "organizations_url": "https://api.github.com/users/rawodb/orgs",
      "repos_url": "https://api.github.com/users/rawodb/repos",
      "events_url": "https://api.github.com/users/rawodb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rawodb/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rawodb",
      "id": 20778324,
      "node_id": "MDQ6VXNlcjIwNzc4MzI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/20778324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rawodb",
      "html_url": "https://github.com/rawodb",
      "followers_url": "https://api.github.com/users/rawodb/followers",
      "following_url": "https://api.github.com/users/rawodb/following{/other_user}",
      "gists_url": "https://api.github.com/users/rawodb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rawodb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rawodb/subscriptions",
      "organizations_url": "https://api.github.com/users/rawodb/orgs",
      "repos_url": "https://api.github.com/users/rawodb/repos",
      "events_url": "https://api.github.com/users/rawodb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rawodb/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e9959ec35814f5e9d3ea4f825c21bbb924c559c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9959ec35814f5e9d3ea4f825c21bbb924c559c4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e9959ec35814f5e9d3ea4f825c21bbb924c559c4"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e2abd7d3b63abd0a204a3e4e67b1f59150ebdcd6",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4aa503d55210a751018d6a2b856f382241dac8f5/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4aa503d55210a751018d6a2b856f382241dac8f5/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=4aa503d55210a751018d6a2b856f382241dac8f5",
        "patch": "@@ -2649,6 +2649,11 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CWalletT\n                 }\n \n                 scriptChange = GetScriptForDestination(vchPubKey.GetID());\n+                if (gArgs.GetBoolArg(\"-defaultwitnessaddress\", false)) {\n+                    scriptChange = GetScriptForWitness(scriptChange);\n+                    this->AddCScript(scriptChange);\n+                    scriptChange = GetScriptForDestination(scriptChange);\n+                }\n             }\n             CTxOut change_prototype_txout(0, scriptChange);\n             size_t change_prototype_size = GetSerializeSize(change_prototype_txout, SER_DISK, 0);"
      }
    ]
  }
]