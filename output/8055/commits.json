[
  {
    "sha": "01b9b217e8bbddace581af985fb8757ea70274f4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMWI5YjIxN2U4YmJkZGFjZTU4MWFmOTg1ZmI4NzU3ZWE3MDI3NGY0",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-15T03:37:25Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-15T03:40:43Z"
      },
      "message": "Move BackupWallet to CWallet::BackupWallet",
      "tree": {
        "sha": "aa1617845d8fec12896f9606491d3a425227434f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aa1617845d8fec12896f9606491d3a425227434f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/01b9b217e8bbddace581af985fb8757ea70274f4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01b9b217e8bbddace581af985fb8757ea70274f4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/01b9b217e8bbddace581af985fb8757ea70274f4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01b9b217e8bbddace581af985fb8757ea70274f4/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "169d379c98357a17e634f34b5e72033c69f9a7cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/169d379c98357a17e634f34b5e72033c69f9a7cb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/169d379c98357a17e634f34b5e72033c69f9a7cb"
      }
    ],
    "stats": {
      "total": 87,
      "additions": 44,
      "deletions": 43
    },
    "files": [
      {
        "sha": "3867310cd68572471ac1a90309d8f919f45259df",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/01b9b217e8bbddace581af985fb8757ea70274f4/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/01b9b217e8bbddace581af985fb8757ea70274f4/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=01b9b217e8bbddace581af985fb8757ea70274f4",
        "patch": "@@ -447,7 +447,7 @@ bool WalletModel::changePassphrase(const SecureString &oldPass, const SecureStri\n \n bool WalletModel::backupWallet(const QString &filename)\n {\n-    return BackupWallet(*wallet, filename.toLocal8Bit().data());\n+    return wallet->BackupWallet(filename.toLocal8Bit().data());\n }\n \n // Handlers for core signals"
      },
      {
        "sha": "dc1654577b7e7902d10d4a592ee4909087f7a761",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/01b9b217e8bbddace581af985fb8757ea70274f4/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/01b9b217e8bbddace581af985fb8757ea70274f4/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=01b9b217e8bbddace581af985fb8757ea70274f4",
        "patch": "@@ -1836,7 +1836,7 @@ UniValue backupwallet(const UniValue& params, bool fHelp)\n     LOCK2(cs_main, pwalletMain->cs_wallet);\n \n     string strDest = params[0].get_str();\n-    if (!BackupWallet(*pwalletMain, strDest))\n+    if (!pwalletMain->BackupWallet(strDest))\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Error: Wallet backup failed!\");\n \n     return NullUniValue;"
      },
      {
        "sha": "3f3d66f22c2b39daa9f9f81c5f4a83b107c8d37a",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/01b9b217e8bbddace581af985fb8757ea70274f4/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/01b9b217e8bbddace581af985fb8757ea70274f4/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=01b9b217e8bbddace581af985fb8757ea70274f4",
        "patch": "@@ -3254,6 +3254,46 @@ bool CWallet::ParameterInteraction()\n     return true;\n }\n \n+bool CWallet::BackupWallet(const std::string& strDest)\n+{\n+    if (!fFileBacked)\n+        return false;\n+    while (true)\n+    {\n+        {\n+            LOCK(bitdb.cs_db);\n+            if (!bitdb.mapFileUseCount.count(strWalletFile) || bitdb.mapFileUseCount[strWalletFile] == 0)\n+            {\n+                // Flush log data to the dat file\n+                bitdb.CloseDb(strWalletFile);\n+                bitdb.CheckpointLSN(strWalletFile);\n+                bitdb.mapFileUseCount.erase(strWalletFile);\n+\n+                // Copy wallet file\n+                boost::filesystem::path pathSrc = GetDataDir() / strWalletFile;\n+                boost::filesystem::path pathDest(strDest);\n+                if (boost::filesystem::is_directory(pathDest))\n+                    pathDest /= strWalletFile;\n+\n+                try {\n+#if BOOST_VERSION >= 104000\n+                    boost::filesystem::copy_file(pathSrc, pathDest, boost::filesystem::copy_option::overwrite_if_exists);\n+#else\n+                    boost::filesystem::copy_file(pathSrc, pathDest);\n+#endif\n+                    LogPrintf(\"copied %s to %s\\n\", strWalletFile, pathDest.string());\n+                    return true;\n+                } catch (const boost::filesystem::filesystem_error& e) {\n+                    LogPrintf(\"error copying %s to %s - %s\\n\", strWalletFile, pathDest.string(), e.what());\n+                    return false;\n+                }\n+            }\n+        }\n+        MilliSleep(100);\n+    }\n+    return false;\n+}\n+\n CKeyPool::CKeyPool()\n {\n     nTime = GetTime();"
      },
      {
        "sha": "bc456af03e3aedbc538332c6fceeca728d0d6310",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/01b9b217e8bbddace581af985fb8757ea70274f4/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/01b9b217e8bbddace581af985fb8757ea70274f4/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=01b9b217e8bbddace581af985fb8757ea70274f4",
        "patch": "@@ -883,6 +883,8 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n \n     /* Wallets parameter interaction */\n     static bool ParameterInteraction();\n+\n+    bool BackupWallet(const std::string& strDest);\n };\n \n /** A key allocated from the key pool. */"
      },
      {
        "sha": "b5037c9a65abf989f3843bcb89962353aead0674",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 40,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/01b9b217e8bbddace581af985fb8757ea70274f4/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/01b9b217e8bbddace581af985fb8757ea70274f4/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=01b9b217e8bbddace581af985fb8757ea70274f4",
        "patch": "@@ -903,46 +903,6 @@ void ThreadFlushWalletDB(const string& strFile)\n     }\n }\n \n-bool BackupWallet(const CWallet& wallet, const string& strDest)\n-{\n-    if (!wallet.fFileBacked)\n-        return false;\n-    while (true)\n-    {\n-        {\n-            LOCK(bitdb.cs_db);\n-            if (!bitdb.mapFileUseCount.count(wallet.strWalletFile) || bitdb.mapFileUseCount[wallet.strWalletFile] == 0)\n-            {\n-                // Flush log data to the dat file\n-                bitdb.CloseDb(wallet.strWalletFile);\n-                bitdb.CheckpointLSN(wallet.strWalletFile);\n-                bitdb.mapFileUseCount.erase(wallet.strWalletFile);\n-\n-                // Copy wallet file\n-                boost::filesystem::path pathSrc = GetDataDir() / wallet.strWalletFile;\n-                boost::filesystem::path pathDest(strDest);\n-                if (boost::filesystem::is_directory(pathDest))\n-                    pathDest /= wallet.strWalletFile;\n-\n-                try {\n-#if BOOST_VERSION >= 104000\n-                    boost::filesystem::copy_file(pathSrc, pathDest, boost::filesystem::copy_option::overwrite_if_exists);\n-#else\n-                    boost::filesystem::copy_file(pathSrc, pathDest);\n-#endif\n-                    LogPrintf(\"copied %s to %s\\n\", wallet.strWalletFile, pathDest.string());\n-                    return true;\n-                } catch (const boost::filesystem::filesystem_error& e) {\n-                    LogPrintf(\"error copying %s to %s - %s\\n\", wallet.strWalletFile, pathDest.string(), e.what());\n-                    return false;\n-                }\n-            }\n-        }\n-        MilliSleep(100);\n-    }\n-    return false;\n-}\n-\n //\n // Try to (very carefully!) recover wallet file if there is a problem.\n //"
      },
      {
        "sha": "00c10ea70f03b0b6b3bf23ccc6b2311b9605e895",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/01b9b217e8bbddace581af985fb8757ea70274f4/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/01b9b217e8bbddace581af985fb8757ea70274f4/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=01b9b217e8bbddace581af985fb8757ea70274f4",
        "patch": "@@ -141,7 +141,6 @@ class CWalletDB : public CDB\n     bool WriteAccountingEntry(const uint64_t nAccEntryNum, const CAccountingEntry& acentry);\n };\n \n-bool BackupWallet(const CWallet& wallet, const std::string& strDest);\n void ThreadFlushWalletDB(const std::string& strFile);\n \n #endif // BITCOIN_WALLET_WALLETDB_H"
      }
    ]
  },
  {
    "sha": "203f5ddbb51167ef56d4d027792920427c86545c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMDNmNWRkYmI1MTE2N2VmNTZkNGQwMjc3OTI5MjA0MjdjODY1NDVj",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-15T05:20:05Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-15T05:53:04Z"
      },
      "message": "Remove pwalletdb parameter from CWallet::AddToWallet",
      "tree": {
        "sha": "62549e28b180df6c5f5b1d0babcef1708adba658",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/62549e28b180df6c5f5b1d0babcef1708adba658"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/203f5ddbb51167ef56d4d027792920427c86545c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/203f5ddbb51167ef56d4d027792920427c86545c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/203f5ddbb51167ef56d4d027792920427c86545c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/203f5ddbb51167ef56d4d027792920427c86545c/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "01b9b217e8bbddace581af985fb8757ea70274f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01b9b217e8bbddace581af985fb8757ea70274f4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/01b9b217e8bbddace581af985fb8757ea70274f4"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 12,
      "deletions": 24
    },
    "files": [
      {
        "sha": "ef6ff99e49220d9c211323ffa4b817872cb04651",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/203f5ddbb51167ef56d4d027792920427c86545c/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/203f5ddbb51167ef56d4d027792920427c86545c/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=203f5ddbb51167ef56d4d027792920427c86545c",
        "patch": "@@ -302,8 +302,7 @@ UniValue importprunedfunds(const UniValue& params, bool fHelp)\n     LOCK2(cs_main, pwalletMain->cs_wallet);\n \n     if (pwalletMain->IsMine(tx)) {\n-        CWalletDB walletdb(pwalletMain->strWalletFile, \"r+\", false);\n-        pwalletMain->AddToWallet(wtx, false, &walletdb);\n+        pwalletMain->AddToWallet(wtx, false);\n         return NullUniValue;\n     }\n "
      },
      {
        "sha": "eaa2a6e4f562d4575705c2335b448bd76c58da20",
        "filename": "src/wallet/test/accounting_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/203f5ddbb51167ef56d4d027792920427c86545c/src/wallet/test/accounting_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/203f5ddbb51167ef56d4d027792920427c86545c/src/wallet/test/accounting_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/accounting_tests.cpp?ref=203f5ddbb51167ef56d4d027792920427c86545c",
        "patch": "@@ -48,7 +48,7 @@ BOOST_AUTO_TEST_CASE(acc_orderupgrade)\n     pwalletMain->AddAccountingEntry(ae, walletdb);\n \n     wtx.mapValue[\"comment\"] = \"z\";\n-    pwalletMain->AddToWallet(wtx, false, &walletdb);\n+    pwalletMain->AddToWallet(wtx, false);\n     vpwtx.push_back(&pwalletMain->mapWallet[wtx.GetHash()]);\n     vpwtx[0]->nTimeReceived = (unsigned int)1333333335;\n     vpwtx[0]->nOrderPos = -1;\n@@ -90,7 +90,7 @@ BOOST_AUTO_TEST_CASE(acc_orderupgrade)\n         --tx.nLockTime;  // Just to change the hash :)\n         *static_cast<CTransaction*>(&wtx) = CTransaction(tx);\n     }\n-    pwalletMain->AddToWallet(wtx, false, &walletdb);\n+    pwalletMain->AddToWallet(wtx, false);\n     vpwtx.push_back(&pwalletMain->mapWallet[wtx.GetHash()]);\n     vpwtx[1]->nTimeReceived = (unsigned int)1333333336;\n \n@@ -100,7 +100,7 @@ BOOST_AUTO_TEST_CASE(acc_orderupgrade)\n         --tx.nLockTime;  // Just to change the hash :)\n         *static_cast<CTransaction*>(&wtx) = CTransaction(tx);\n     }\n-    pwalletMain->AddToWallet(wtx, false, &walletdb);\n+    pwalletMain->AddToWallet(wtx, false);\n     vpwtx.push_back(&pwalletMain->mapWallet[wtx.GetHash()]);\n     vpwtx[2]->nTimeReceived = (unsigned int)1333333329;\n     vpwtx[2]->nOrderPos = -1;"
      },
      {
        "sha": "da3266d5607810bb1174d8a649b7465c382930bf",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 17,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/203f5ddbb51167ef56d4d027792920427c86545c/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/203f5ddbb51167ef56d4d027792920427c86545c/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=203f5ddbb51167ef56d4d027792920427c86545c",
        "patch": "@@ -617,8 +617,9 @@ void CWallet::MarkDirty()\n     }\n }\n \n-bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet, CWalletDB* pwalletdb)\n+bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet)\n {\n+    CWalletDB walletdb(strWalletFile, \"cr+\");\n     uint256 hash = wtxIn.GetHash();\n \n     if (fFromLoadWallet)\n@@ -648,7 +649,7 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet, CWalletD\n         if (fInsertedNew)\n         {\n             wtx.nTimeReceived = GetAdjustedTime();\n-            wtx.nOrderPos = IncOrderPosNext(pwalletdb);\n+            wtx.nOrderPos = IncOrderPosNext(&walletdb);\n             wtxOrdered.insert(make_pair(wtx.nOrderPos, TxPair(&wtx, (CAccountingEntry*)0)));\n \n             wtx.nTimeSmart = wtx.nTimeReceived;\n@@ -730,7 +731,7 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet, CWalletD\n \n         // Write to disk\n         if (fInsertedNew || fUpdated)\n-            if (!pwalletdb->WriteTx(wtx))\n+            if (!walletdb.WriteTx(wtx))\n                 return false;\n \n         // Break debit/credit balance caches:\n@@ -785,11 +786,7 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransaction& tx, const CBlock* pbl\n             if (pblock)\n                 wtx.SetMerkleBranch(*pblock);\n \n-            // Do not flush the wallet here for performance reasons\n-            // this is safe, as in case of a crash, we rescan the necessary blocks on startup through our SetBestChain-mechanism\n-            CWalletDB walletdb(strWalletFile, \"r+\", false);\n-\n-            return AddToWallet(wtx, false, &walletdb);\n+            return AddToWallet(wtx, false);\n         }\n     }\n     return false;\n@@ -2268,17 +2265,12 @@ bool CWallet::CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey)\n         LOCK2(cs_main, cs_wallet);\n         LogPrintf(\"CommitTransaction:\\n%s\", wtxNew.ToString());\n         {\n-            // This is only to keep the database open to defeat the auto-flush for the\n-            // duration of this scope.  This is the only place where this optimization\n-            // maybe makes sense; please don't do it anywhere else.\n-            CWalletDB* pwalletdb = fFileBacked ? new CWalletDB(strWalletFile,\"r+\") : NULL;\n-\n             // Take key pair from key pool so it won't be used again\n             reservekey.KeepKey();\n \n             // Add tx to wallet, because if it has change it's also ours,\n             // otherwise just for transaction history.\n-            AddToWallet(wtxNew, false, pwalletdb);\n+            AddToWallet(wtxNew, false);\n \n             // Notify that old coins are spent\n             set<CWalletTx*> setCoins;\n@@ -2288,9 +2280,6 @@ bool CWallet::CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey)\n                 coin.BindWallet(this);\n                 NotifyTransactionChanged(this, coin.GetHash(), CT_UPDATED);\n             }\n-\n-            if (fFileBacked)\n-                delete pwalletdb;\n         }\n \n         // Track how many getdata requests our transaction gets"
      },
      {
        "sha": "935bab0f88334491ce73098d49588effddecd4b0",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/203f5ddbb51167ef56d4d027792920427c86545c/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/203f5ddbb51167ef56d4d027792920427c86545c/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=203f5ddbb51167ef56d4d027792920427c86545c",
        "patch": "@@ -720,7 +720,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     int64_t IncOrderPosNext(CWalletDB *pwalletdb = NULL);\n \n     void MarkDirty();\n-    bool AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet, CWalletDB* pwalletdb);\n+    bool AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet);\n     void SyncTransaction(const CTransaction& tx, const CBlockIndex *pindex, const CBlock* pblock);\n     bool AddToWalletIfInvolvingMe(const CTransaction& tx, const CBlock* pblock, bool fUpdate);\n     int ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate = false);"
      },
      {
        "sha": "6f34e458831c2eef3dc13504affbac51a14e14d9",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/203f5ddbb51167ef56d4d027792920427c86545c/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/203f5ddbb51167ef56d4d027792920427c86545c/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=203f5ddbb51167ef56d4d027792920427c86545c",
        "patch": "@@ -400,7 +400,7 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             if (wtx.nOrderPos == -1)\n                 wss.fAnyUnordered = true;\n \n-            pwallet->AddToWallet(wtx, true, NULL);\n+            pwallet->AddToWallet(wtx, true);\n         }\n         else if (strType == \"acentry\")\n         {"
      }
    ]
  },
  {
    "sha": "1094ee2a6cef96c098d82561fbbc84e35eaa573a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMDk0ZWUyYTZjZWY5NmMwOThkODI1NjFmYmJjODRlMzVlYWE1NzNh",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-15T06:53:52Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-15T06:53:52Z"
      },
      "message": "Create and use CWallet::Move",
      "tree": {
        "sha": "995210a4bf5376953ab157b9f59920b15d922c37",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/995210a4bf5376953ab157b9f59920b15d922c37"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1094ee2a6cef96c098d82561fbbc84e35eaa573a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1094ee2a6cef96c098d82561fbbc84e35eaa573a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1094ee2a6cef96c098d82561fbbc84e35eaa573a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1094ee2a6cef96c098d82561fbbc84e35eaa573a/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "203f5ddbb51167ef56d4d027792920427c86545c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/203f5ddbb51167ef56d4d027792920427c86545c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/203f5ddbb51167ef56d4d027792920427c86545c"
      }
    ],
    "stats": {
      "total": 62,
      "additions": 35,
      "deletions": 27
    },
    "files": [
      {
        "sha": "1474581ae1307403d9eaf934190231be58a73935",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 27,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1094ee2a6cef96c098d82561fbbc84e35eaa573a/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1094ee2a6cef96c098d82561fbbc84e35eaa573a/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=1094ee2a6cef96c098d82561fbbc84e35eaa573a",
        "patch": "@@ -836,33 +836,7 @@ UniValue movecmd(const UniValue& params, bool fHelp)\n     if (params.size() > 4)\n         strComment = params[4].get_str();\n \n-    CWalletDB walletdb(pwalletMain->strWalletFile);\n-    if (!walletdb.TxnBegin())\n-        throw JSONRPCError(RPC_DATABASE_ERROR, \"database error\");\n-\n-    int64_t nNow = GetAdjustedTime();\n-\n-    // Debit\n-    CAccountingEntry debit;\n-    debit.nOrderPos = pwalletMain->IncOrderPosNext(&walletdb);\n-    debit.strAccount = strFrom;\n-    debit.nCreditDebit = -nAmount;\n-    debit.nTime = nNow;\n-    debit.strOtherAccount = strTo;\n-    debit.strComment = strComment;\n-    pwalletMain->AddAccountingEntry(debit, walletdb);\n-\n-    // Credit\n-    CAccountingEntry credit;\n-    credit.nOrderPos = pwalletMain->IncOrderPosNext(&walletdb);\n-    credit.strAccount = strTo;\n-    credit.nCreditDebit = nAmount;\n-    credit.nTime = nNow;\n-    credit.strOtherAccount = strFrom;\n-    credit.strComment = strComment;\n-    pwalletMain->AddAccountingEntry(credit, walletdb);\n-\n-    if (!walletdb.TxnCommit())\n+    if (!pwalletMain->Move(strFrom, strTo, nAmount, strComment))\n         throw JSONRPCError(RPC_DATABASE_ERROR, \"database error\");\n \n     return true;"
      },
      {
        "sha": "94ca1b6e4f6b3bf70ec50c53d5fdb3668b820da7",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1094ee2a6cef96c098d82561fbbc84e35eaa573a/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1094ee2a6cef96c098d82561fbbc84e35eaa573a/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=1094ee2a6cef96c098d82561fbbc84e35eaa573a",
        "patch": "@@ -2312,6 +2312,39 @@ bool CWallet::AddAccountingEntry(const CAccountingEntry& acentry, CWalletDB & pw\n     return true;\n }\n \n+bool CWallet::Move(std::string strFrom, std::string strTo, CAmount nAmount, std::string strComment) \n+{\n+    CWalletDB walletdb(strWalletFile);\n+    if (!walletdb.TxnBegin())\n+        return false;\n+\n+    int64_t nNow = GetAdjustedTime();\n+\n+    // Debit\n+    CAccountingEntry debit;\n+    debit.nOrderPos = pwalletMain->IncOrderPosNext(&walletdb);\n+    debit.strAccount = strFrom;\n+    debit.nCreditDebit = -nAmount;\n+    debit.nTime = nNow;\n+    debit.strOtherAccount = strTo;\n+    debit.strComment = strComment;\n+    pwalletMain->AddAccountingEntry(debit, walletdb);\n+\n+    // Credit\n+    CAccountingEntry credit;\n+    credit.nOrderPos = pwalletMain->IncOrderPosNext(&walletdb);\n+    credit.strAccount = strTo;\n+    credit.nCreditDebit = nAmount;\n+    credit.nTime = nNow;\n+    credit.strOtherAccount = strFrom;\n+    credit.strComment = strComment;\n+    pwalletMain->AddAccountingEntry(credit, walletdb);\n+\n+    if (!walletdb.TxnCommit())\n+        return false;\n+    return true;\n+}\n+\n CAmount CWallet::GetRequiredFee(unsigned int nTxBytes)\n {\n     return std::max(minTxFee.GetFee(nTxBytes), ::minRelayTxFee.GetFee(nTxBytes));"
      },
      {
        "sha": "a6c14ca6153e4eacb7a69404fe1d2daabbaf09de",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1094ee2a6cef96c098d82561fbbc84e35eaa573a/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1094ee2a6cef96c098d82561fbbc84e35eaa573a/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=1094ee2a6cef96c098d82561fbbc84e35eaa573a",
        "patch": "@@ -750,6 +750,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     bool CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey);\n \n     bool AddAccountingEntry(const CAccountingEntry&, CWalletDB & pwalletdb);\n+    bool Move(std::string strFrom, std::string strTo, CAmount nAmount, std::string strComment);\n \n     static CFeeRate minTxFee;\n     static CFeeRate fallbackFee;"
      }
    ]
  },
  {
    "sha": "ace28ea310aed1d04fa355e5bd058f5b00a9c38d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphY2UyOGVhMzEwYWVkMWQwNGZhMzU1ZTViZDA1OGY1YjAwYTljMzhk",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-15T07:00:20Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-15T07:03:03Z"
      },
      "message": "Create and use CWallet::ReadAccount CWallet::WriteAccount",
      "tree": {
        "sha": "e0707ef0028359d52ad418b63bac4325c6956a7a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e0707ef0028359d52ad418b63bac4325c6956a7a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ace28ea310aed1d04fa355e5bd058f5b00a9c38d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ace28ea310aed1d04fa355e5bd058f5b00a9c38d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ace28ea310aed1d04fa355e5bd058f5b00a9c38d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ace28ea310aed1d04fa355e5bd058f5b00a9c38d/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1094ee2a6cef96c098d82561fbbc84e35eaa573a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1094ee2a6cef96c098d82561fbbc84e35eaa573a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1094ee2a6cef96c098d82561fbbc84e35eaa573a"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 18,
      "deletions": 6
    },
    "files": [
      {
        "sha": "cd1cf33deb8ab66f3b90aba6bae340e87ac8c4ce",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ace28ea310aed1d04fa355e5bd058f5b00a9c38d/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ace28ea310aed1d04fa355e5bd058f5b00a9c38d/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=ace28ea310aed1d04fa355e5bd058f5b00a9c38d",
        "patch": "@@ -146,10 +146,9 @@ UniValue getnewaddress(const UniValue& params, bool fHelp)\n \n CBitcoinAddress GetAccountAddress(string strAccount, bool bForceNew=false)\n {\n-    CWalletDB walletdb(pwalletMain->strWalletFile);\n-\n     CAccount account;\n-    walletdb.ReadAccount(strAccount, account);\n+\n+    pwalletMain->ReadAccount(strAccount, account);\n \n     if (!bForceNew) {\n         if (!account.vchPubKey.IsValid())\n@@ -174,7 +173,7 @@ CBitcoinAddress GetAccountAddress(string strAccount, bool bForceNew=false)\n             throw JSONRPCError(RPC_WALLET_KEYPOOL_RAN_OUT, \"Error: Keypool ran out, please call keypoolrefill first\");\n \n         pwalletMain->SetAddressBook(account.vchPubKey.GetID(), strAccount, \"receive\");\n-        walletdb.WriteAccount(strAccount, account);\n+        pwalletMain->WriteAccount(strAccount, account);\n     }\n \n     return CBitcoinAddress(account.vchPubKey.GetID());"
      },
      {
        "sha": "6782b75545ab420eb433997183250d4611051f58",
        "filename": "src/wallet/test/rpc_wallet_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ace28ea310aed1d04fa355e5bd058f5b00a9c38d/src/wallet/test/rpc_wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ace28ea310aed1d04fa355e5bd058f5b00a9c38d/src/wallet/test/rpc_wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/rpc_wallet_tests.cpp?ref=ace28ea310aed1d04fa355e5bd058f5b00a9c38d",
        "patch": "@@ -78,11 +78,10 @@ BOOST_AUTO_TEST_CASE(rpc_wallet)\n         demoAddress = CBitcoinAddress(CTxDestination(demoPubkey.GetID()));\n         string strPurpose = \"receive\";\n         BOOST_CHECK_NO_THROW({ /*Initialize Wallet with an account */\n-            CWalletDB walletdb(pwalletMain->strWalletFile);\n             CAccount account;\n             account.vchPubKey = demoPubkey;\n             pwalletMain->SetAddressBook(account.vchPubKey.GetID(), strAccount, strPurpose);\n-            walletdb.WriteAccount(strAccount, account);\n+            pwalletMain->WriteAccount(strAccount, account);\n         });\n \n         CPubKey setaccountDemoPubkey = pwalletMain->GenerateNewKey();"
      },
      {
        "sha": "77a2f5fcdb265d820b4e05b0c07f295265a06afb",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ace28ea310aed1d04fa355e5bd058f5b00a9c38d/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ace28ea310aed1d04fa355e5bd058f5b00a9c38d/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=ace28ea310aed1d04fa355e5bd058f5b00a9c38d",
        "patch": "@@ -2345,6 +2345,18 @@ bool CWallet::Move(std::string strFrom, std::string strTo, CAmount nAmount, std:\n     return true;\n }\n \n+bool CWallet::ReadAccount(const std::string& strAccount, CAccount& account)\n+{\n+    CWalletDB walletdb(strWalletFile);\n+    return walletdb.ReadAccount(strAccount, account);\n+}\n+\n+bool CWallet::WriteAccount(const std::string& strAccount, const CAccount& account)\n+{\n+    CWalletDB walletdb(strWalletFile);\n+    return walletdb.WriteAccount(strAccount, account);\n+}\n+\n CAmount CWallet::GetRequiredFee(unsigned int nTxBytes)\n {\n     return std::max(minTxFee.GetFee(nTxBytes), ::minRelayTxFee.GetFee(nTxBytes));"
      },
      {
        "sha": "f518b1be685cf77c5f44ffcaf7d0cb847eaa4a5c",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ace28ea310aed1d04fa355e5bd058f5b00a9c38d/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ace28ea310aed1d04fa355e5bd058f5b00a9c38d/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=ace28ea310aed1d04fa355e5bd058f5b00a9c38d",
        "patch": "@@ -751,6 +751,8 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n \n     bool AddAccountingEntry(const CAccountingEntry&, CWalletDB & pwalletdb);\n     bool Move(std::string strFrom, std::string strTo, CAmount nAmount, std::string strComment);\n+    bool ReadAccount(const std::string& strAccount, CAccount& account);\n+    bool WriteAccount(const std::string& strAccount, const CAccount& account);\n \n     static CFeeRate minTxFee;\n     static CFeeRate fallbackFee;"
      }
    ]
  },
  {
    "sha": "dd6e58d9bc5cf4183c9397ec73f290ef6f8daa11",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZDZlNThkOWJjNWNmNDE4M2M5Mzk3ZWM3M2YyOTBlZjZmOGRhYTEx",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-16T00:02:40Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-16T00:02:40Z"
      },
      "message": "Move GetAccountBalance to CWallet::GetAccountBalance",
      "tree": {
        "sha": "939d196f7b32f972adf5c0955fe802790035f49e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/939d196f7b32f972adf5c0955fe802790035f49e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dd6e58d9bc5cf4183c9397ec73f290ef6f8daa11",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd6e58d9bc5cf4183c9397ec73f290ef6f8daa11",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dd6e58d9bc5cf4183c9397ec73f290ef6f8daa11",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd6e58d9bc5cf4183c9397ec73f290ef6f8daa11/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ace28ea310aed1d04fa355e5bd058f5b00a9c38d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ace28ea310aed1d04fa355e5bd058f5b00a9c38d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ace28ea310aed1d04fa355e5bd058f5b00a9c38d"
      }
    ],
    "stats": {
      "total": 66,
      "additions": 30,
      "deletions": 36
    },
    "files": [
      {
        "sha": "f1302b5518ff23386c4ba2e9e2a984c605612c0f",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 36,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd6e58d9bc5cf4183c9397ec73f290ef6f8daa11/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd6e58d9bc5cf4183c9397ec73f290ef6f8daa11/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=dd6e58d9bc5cf4183c9397ec73f290ef6f8daa11",
        "patch": "@@ -671,39 +671,6 @@ UniValue getreceivedbyaccount(const UniValue& params, bool fHelp)\n     return (double)nAmount / (double)COIN;\n }\n \n-\n-CAmount GetAccountBalance(CWalletDB& walletdb, const string& strAccount, int nMinDepth, const isminefilter& filter)\n-{\n-    CAmount nBalance = 0;\n-\n-    // Tally wallet transactions\n-    for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin(); it != pwalletMain->mapWallet.end(); ++it)\n-    {\n-        const CWalletTx& wtx = (*it).second;\n-        if (!CheckFinalTx(wtx) || wtx.GetBlocksToMaturity() > 0 || wtx.GetDepthInMainChain() < 0)\n-            continue;\n-\n-        CAmount nReceived, nSent, nFee;\n-        wtx.GetAccountAmounts(strAccount, nReceived, nSent, nFee, filter);\n-\n-        if (nReceived != 0 && wtx.GetDepthInMainChain() >= nMinDepth)\n-            nBalance += nReceived;\n-        nBalance -= nSent + nFee;\n-    }\n-\n-    // Tally internal accounting entries\n-    nBalance += walletdb.GetAccountCreditDebit(strAccount);\n-\n-    return nBalance;\n-}\n-\n-CAmount GetAccountBalance(const string& strAccount, int nMinDepth, const isminefilter& filter)\n-{\n-    CWalletDB walletdb(pwalletMain->strWalletFile);\n-    return GetAccountBalance(walletdb, strAccount, nMinDepth, filter);\n-}\n-\n-\n UniValue getbalance(const UniValue& params, bool fHelp)\n {\n     if (!EnsureWalletIsAvailable(fHelp))\n@@ -774,7 +741,7 @@ UniValue getbalance(const UniValue& params, bool fHelp)\n \n     string strAccount = AccountFromValue(params[0]);\n \n-    CAmount nBalance = GetAccountBalance(strAccount, nMinDepth, filter);\n+    CAmount nBalance = pwalletMain->GetAccountBalance(strAccount, nMinDepth, filter);\n \n     return ValueFromAmount(nBalance);\n }\n@@ -896,7 +863,7 @@ UniValue sendfrom(const UniValue& params, bool fHelp)\n     EnsureWalletIsUnlocked();\n \n     // Check funds\n-    CAmount nBalance = GetAccountBalance(strAccount, nMinDepth, ISMINE_SPENDABLE);\n+    CAmount nBalance = pwalletMain->GetAccountBalance(strAccount, nMinDepth, ISMINE_SPENDABLE);\n     if (nAmount > nBalance)\n         throw JSONRPCError(RPC_WALLET_INSUFFICIENT_FUNDS, \"Account has insufficient funds\");\n \n@@ -999,7 +966,7 @@ UniValue sendmany(const UniValue& params, bool fHelp)\n     EnsureWalletIsUnlocked();\n \n     // Check funds\n-    CAmount nBalance = GetAccountBalance(strAccount, nMinDepth, ISMINE_SPENDABLE);\n+    CAmount nBalance = pwalletMain->GetAccountBalance(strAccount, nMinDepth, ISMINE_SPENDABLE);\n     if (totalAmount > nBalance)\n         throw JSONRPCError(RPC_WALLET_INSUFFICIENT_FUNDS, \"Account has insufficient funds\");\n "
      },
      {
        "sha": "da76250f719f198c853c5affbc79830d820a77bd",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd6e58d9bc5cf4183c9397ec73f290ef6f8daa11/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd6e58d9bc5cf4183c9397ec73f290ef6f8daa11/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=dd6e58d9bc5cf4183c9397ec73f290ef6f8daa11",
        "patch": "@@ -2357,6 +2357,32 @@ bool CWallet::WriteAccount(const std::string& strAccount, const CAccount& accoun\n     return walletdb.WriteAccount(strAccount, account);\n }\n \n+CAmount CWallet::GetAccountBalance(const std::string& strAccount, int nMinDepth, const isminefilter& filter)\n+{\n+    CWalletDB walletdb(strWalletFile);\n+    CAmount nBalance = 0;\n+\n+    // Tally wallet transactions\n+    for (map<uint256, CWalletTx>::iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)\n+    {\n+        const CWalletTx& wtx = (*it).second;\n+        if (!CheckFinalTx(wtx) || wtx.GetBlocksToMaturity() > 0 || wtx.GetDepthInMainChain() < 0)\n+            continue;\n+\n+        CAmount nReceived, nSent, nFee;\n+        wtx.GetAccountAmounts(strAccount, nReceived, nSent, nFee, filter);\n+\n+        if (nReceived != 0 && wtx.GetDepthInMainChain() >= nMinDepth)\n+            nBalance += nReceived;\n+        nBalance -= nSent + nFee;\n+    }\n+\n+    // Tally internal accounting entries\n+    nBalance += walletdb.GetAccountCreditDebit(strAccount);\n+\n+    return nBalance;\n+}\n+\n CAmount CWallet::GetRequiredFee(unsigned int nTxBytes)\n {\n     return std::max(minTxFee.GetFee(nTxBytes), ::minRelayTxFee.GetFee(nTxBytes));"
      },
      {
        "sha": "cdacd3640a7a2d1c40eb33d3052a65a2c7e4a0f4",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd6e58d9bc5cf4183c9397ec73f290ef6f8daa11/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd6e58d9bc5cf4183c9397ec73f290ef6f8daa11/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=dd6e58d9bc5cf4183c9397ec73f290ef6f8daa11",
        "patch": "@@ -753,6 +753,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     bool Move(std::string strFrom, std::string strTo, CAmount nAmount, std::string strComment);\n     bool ReadAccount(const std::string& strAccount, CAccount& account);\n     bool WriteAccount(const std::string& strAccount, const CAccount& account);\n+    CAmount GetAccountBalance(const std::string& strAccount, int nMinDepth, const isminefilter& filter);\n \n     static CFeeRate minTxFee;\n     static CFeeRate fallbackFee;"
      }
    ]
  },
  {
    "sha": "6953e5373d6bc21d8c3fb222b3d8229fa68000c4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OTUzZTUzNzNkNmJjMjFkOGMzZmIyMjJiM2Q4MjI5ZmE2ODAwMGM0",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-16T00:03:19Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-16T00:03:19Z"
      },
      "message": "Remove references to pwalletMain inside CWallet::* methods.",
      "tree": {
        "sha": "8bc76c9253e7c72d4c417901fe37664b88101b49",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8bc76c9253e7c72d4c417901fe37664b88101b49"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6953e5373d6bc21d8c3fb222b3d8229fa68000c4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6953e5373d6bc21d8c3fb222b3d8229fa68000c4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6953e5373d6bc21d8c3fb222b3d8229fa68000c4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6953e5373d6bc21d8c3fb222b3d8229fa68000c4/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dd6e58d9bc5cf4183c9397ec73f290ef6f8daa11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd6e58d9bc5cf4183c9397ec73f290ef6f8daa11",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dd6e58d9bc5cf4183c9397ec73f290ef6f8daa11"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "b278949a1766d28b02ac90d2c4966896740dcb59",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6953e5373d6bc21d8c3fb222b3d8229fa68000c4/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6953e5373d6bc21d8c3fb222b3d8229fa68000c4/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=6953e5373d6bc21d8c3fb222b3d8229fa68000c4",
        "patch": "@@ -2322,23 +2322,23 @@ bool CWallet::Move(std::string strFrom, std::string strTo, CAmount nAmount, std:\n \n     // Debit\n     CAccountingEntry debit;\n-    debit.nOrderPos = pwalletMain->IncOrderPosNext(&walletdb);\n+    debit.nOrderPos = IncOrderPosNext(&walletdb);\n     debit.strAccount = strFrom;\n     debit.nCreditDebit = -nAmount;\n     debit.nTime = nNow;\n     debit.strOtherAccount = strTo;\n     debit.strComment = strComment;\n-    pwalletMain->AddAccountingEntry(debit, walletdb);\n+    AddAccountingEntry(debit, walletdb);\n \n     // Credit\n     CAccountingEntry credit;\n-    credit.nOrderPos = pwalletMain->IncOrderPosNext(&walletdb);\n+    credit.nOrderPos = IncOrderPosNext(&walletdb);\n     credit.strAccount = strTo;\n     credit.nCreditDebit = nAmount;\n     credit.nTime = nNow;\n     credit.strOtherAccount = strFrom;\n     credit.strComment = strComment;\n-    pwalletMain->AddAccountingEntry(credit, walletdb);\n+    AddAccountingEntry(credit, walletdb);\n \n     if (!walletdb.TxnCommit())\n         return false;"
      }
    ]
  },
  {
    "sha": "ae411ec24a8ef27114c154eb2e4d90165f1f6f0c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZTQxMWVjMjRhOGVmMjcxMTRjMTU0ZWIyZTRkOTAxNjVmMWY2ZjBj",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-16T01:10:07Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-16T01:10:48Z"
      },
      "message": "Require CWalletDB* parameter to CWallet::IncOrderPosNext != NULL.",
      "tree": {
        "sha": "206a5136a31a3c435b76c53f6f3d48ae7f70e70b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/206a5136a31a3c435b76c53f6f3d48ae7f70e70b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ae411ec24a8ef27114c154eb2e4d90165f1f6f0c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae411ec24a8ef27114c154eb2e4d90165f1f6f0c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ae411ec24a8ef27114c154eb2e4d90165f1f6f0c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae411ec24a8ef27114c154eb2e4d90165f1f6f0c/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6953e5373d6bc21d8c3fb222b3d8229fa68000c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6953e5373d6bc21d8c3fb222b3d8229fa68000c4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6953e5373d6bc21d8c3fb222b3d8229fa68000c4"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 4,
      "deletions": 7
    },
    "files": [
      {
        "sha": "79506eb307c9a9e13b019465eac84165279cd802",
        "filename": "src/wallet/test/accounting_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae411ec24a8ef27114c154eb2e4d90165f1f6f0c/src/wallet/test/accounting_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae411ec24a8ef27114c154eb2e4d90165f1f6f0c/src/wallet/test/accounting_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/accounting_tests.cpp?ref=ae411ec24a8ef27114c154eb2e4d90165f1f6f0c",
        "patch": "@@ -70,7 +70,7 @@ BOOST_AUTO_TEST_CASE(acc_orderupgrade)\n \n     ae.nTime = 1333333330;\n     ae.strOtherAccount = \"d\";\n-    ae.nOrderPos = pwalletMain->IncOrderPosNext();\n+    ae.nOrderPos = pwalletMain->IncOrderPosNext(&walletdb);\n     pwalletMain->AddAccountingEntry(ae, walletdb);\n \n     GetResults(walletdb, results);"
      },
      {
        "sha": "08456d0f885106599704662edfca6c39e8a7f763",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae411ec24a8ef27114c154eb2e4d90165f1f6f0c/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae411ec24a8ef27114c154eb2e4d90165f1f6f0c/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=ae411ec24a8ef27114c154eb2e4d90165f1f6f0c",
        "patch": "@@ -599,12 +599,9 @@ bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)\n int64_t CWallet::IncOrderPosNext(CWalletDB *pwalletdb)\n {\n     AssertLockHeld(cs_wallet); // nOrderPosNext\n+    assert(pwalletdb);\n     int64_t nRet = nOrderPosNext++;\n-    if (pwalletdb) {\n-        pwalletdb->WriteOrderPosNext(nOrderPosNext);\n-    } else {\n-        CWalletDB(strWalletFile).WriteOrderPosNext(nOrderPosNext);\n-    }\n+    pwalletdb->WriteOrderPosNext(nOrderPosNext);\n     return nRet;\n }\n "
      },
      {
        "sha": "ee825be8714b6e4b5956ecee04121e815f59538c",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae411ec24a8ef27114c154eb2e4d90165f1f6f0c/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae411ec24a8ef27114c154eb2e4d90165f1f6f0c/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=ae411ec24a8ef27114c154eb2e4d90165f1f6f0c",
        "patch": "@@ -717,7 +717,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n      * Increment the next transaction order id\n      * @return next transaction order id\n      */\n-    int64_t IncOrderPosNext(CWalletDB *pwalletdb = NULL);\n+    int64_t IncOrderPosNext(CWalletDB *pwalletdb);\n \n     void MarkDirty();\n     bool AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet);"
      }
    ]
  }
]