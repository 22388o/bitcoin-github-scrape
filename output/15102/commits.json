[
  {
    "sha": "fac4e731a8e5f140dc3bbca4c9af6e23fc1cd107",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWM0ZTczMWE4ZTVmMTQwZGMzYmJjYTRjOWFmNmUyM2ZjMWNkMTA3",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-01-04T12:52:24Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-01-05T13:51:25Z"
      },
      "message": "test: Run invalid_txs.InputMissing test in feature_block",
      "tree": {
        "sha": "1d3ce2c7cac48d7a3e0e740da138b0703d4ffdff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1d3ce2c7cac48d7a3e0e740da138b0703d4ffdff"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fac4e731a8e5f140dc3bbca4c9af6e23fc1cd107",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJcMLZdAAoJEM4rdWl+aaVI5kMMAJcSJXRmylFsHAQ4aaqVnm50\n9QDWprizzG0M/KTYPcMK2/T+g/pnXp52zmvz3Rz6QPT88j+GISoUbIf4FTzREdOD\nquyimeMO6eth8TXTcbEaMlH1hl+mFRxAqw0EdYKKD5I+MNNSGqgoPtlPN0Ia5EqM\nbDQzvA8fLjZ1Scv3FxFayzoQDAPJ6ltGzR1dIZ4yRv7ifArTWxFtOEnF10kz8sFd\n9Nh5rNSrAMdrT8sjLzCNXn2TdVxDQ3VAkIo18rVefZUL+tScJ80N8IzD0KBFRHqq\n1mI7posSX2yQzMHyGCq5KofnZa/8lLLyeJLtXqbsDGRq9D1+C7P0zQ9SSJAxZbV3\nq1Tcz1OuSLKV9W1x7j5cTfSaxCg4hi0iXH+UA2sz/aXG/sHAKi5fr/RcfVbU07Uj\n3mdmJCM9FLI88ZLM70rntoypc9UEReeuGcphl8YtHC09noludx1XceREPamoOGdA\n5l8+L3BCe376o7GIp8DOLOz2T6OGlSgGtS8aQi9c3w==\n=Dd0l\n-----END PGP SIGNATURE-----",
        "payload": "tree 1d3ce2c7cac48d7a3e0e740da138b0703d4ffdff\nparent f7e182a973ed66b4c11dc6239e57016655503b4c\nauthor MarcoFalke <falke.marco@gmail.com> 1546606344 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1546696285 +0100\n\ntest: Run invalid_txs.InputMissing test in feature_block\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac4e731a8e5f140dc3bbca4c9af6e23fc1cd107",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fac4e731a8e5f140dc3bbca4c9af6e23fc1cd107",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac4e731a8e5f140dc3bbca4c9af6e23fc1cd107/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f7e182a973ed66b4c11dc6239e57016655503b4c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7e182a973ed66b4c11dc6239e57016655503b4c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f7e182a973ed66b4c11dc6239e57016655503b4c"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 19,
      "deletions": 10
    },
    "files": [
      {
        "sha": "0db22cf6fe1aef799f143f178b6ff0dfaf912205",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac4e731a8e5f140dc3bbca4c9af6e23fc1cd107/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac4e731a8e5f140dc3bbca4c9af6e23fc1cd107/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=fac4e731a8e5f140dc3bbca4c9af6e23fc1cd107",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2012-2018 The Bitcoin Core developers\n+// Copyright (c) 2012-2019 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -47,7 +47,7 @@ BOOST_FIXTURE_TEST_CASE(scan_for_wallet_transactions, TestChain100Setup)\n \n     auto locked_chain = chain->lock();\n \n-    // Verify ScanForWalletTransactions accomodates a null start block.\n+    // Verify ScanForWalletTransactions accommodates a null start block.\n     {\n         CWallet wallet(*chain, WalletLocation(), WalletDatabase::CreateDummy());\n         AddKey(wallet, coinbaseKey);"
      },
      {
        "sha": "244cde044e0f8a8975e11fd304b537a6a80e165d",
        "filename": "test/functional/feature_block.py",
        "status": "modified",
        "additions": 17,
        "deletions": 8,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac4e731a8e5f140dc3bbca4c9af6e23fc1cd107/test/functional/feature_block.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac4e731a8e5f140dc3bbca4c9af6e23fc1cd107/test/functional/feature_block.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_block.py?ref=fac4e731a8e5f140dc3bbca4c9af6e23fc1cd107",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2018 The Bitcoin Core developers\n+# Copyright (c) 2015-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test block processing.\"\"\"\n@@ -137,20 +137,29 @@ def run_test(self):\n         for TxTemplate in invalid_txs.iter_all_templates():\n             template = TxTemplate(spend_tx=attempt_spend_tx)\n \n-            # Something about the serialization code for missing inputs creates\n-            # a different hash in the test client than on bitcoind, resulting\n-            # in a mismatching merkle root during block validation.\n-            # Skip until we figure out what's going on.\n-            if TxTemplate == invalid_txs.InputMissing:\n-                continue\n             if template.valid_in_block:\n                 continue\n \n             self.log.info(\"Reject block with invalid tx: %s\", TxTemplate.__name__)\n             blockname = \"for_invalid.%s\" % TxTemplate.__name__\n             badblock = self.next_block(blockname)\n             badtx = template.get_tx()\n-            self.sign_tx(badtx, attempt_spend_tx)\n+            if TxTemplate != invalid_txs.InputMissing:\n+                self.sign_tx(badtx, attempt_spend_tx)\n+            else:\n+                # Segwit is active in regtest at this point, so to deserialize a\n+                # transaction without any inputs correctly, we set the outputs\n+                # to an empty list. This is a hack, as the serialization of an\n+                # empty list of outputs is deserialized as flags==0 and thus\n+                # deserialization of the outputs is skipped.\n+                # A policy check requires \"loose\" txs to be of a minimum size,\n+                # so vtx is not set to be empty in the TxTemplate class and we\n+                # only apply the workaround where txs are not \"loose\", i.e. in\n+                # blocks.\n+                #\n+                # The workaround has the purpose that both sides calculate\n+                # the same tx hash in the merkle tree\n+                badtx.vout = []\n             badtx.rehash()\n             badblock = self.update_block(blockname, [badtx])\n             self.sync_blocks("
      }
    ]
  }
]