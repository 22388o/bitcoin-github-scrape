[
  {
    "sha": "5ce43da03dff3ee655949cd53d952dace555e268",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1Y2U0M2RhMDNkZmYzZWU2NTU5NDljZDUzZDk1MmRhY2U1NTVlMjY4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-14T23:39:12Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-18T13:38:52Z"
      },
      "message": "init: Ignore SIGPIPE\n\nIgnore SIGPIPE on all non-win32 OSes, otherwise an unexpectedly disconnecting\nRPC client will terminate the application. This problem was introduced\nwith the libhttp-based RPC server.\n\nFixes #6660.",
      "tree": {
        "sha": "422f7bda106f05ed6234c11c0d42391a6ac00acf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/422f7bda106f05ed6234c11c0d42391a6ac00acf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5ce43da03dff3ee655949cd53d952dace555e268",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ce43da03dff3ee655949cd53d952dace555e268",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5ce43da03dff3ee655949cd53d952dace555e268",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ce43da03dff3ee655949cd53d952dace555e268/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3224936bedd8fe777b23d43c253abd2c0cd95d22",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3224936bedd8fe777b23d43c253abd2c0cd95d22",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3224936bedd8fe777b23d43c253abd2c0cd95d22"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 1,
      "deletions": 3
    },
    "files": [
      {
        "sha": "276effe5823a04f56158a4fb1ce3c46e15f8f7cb",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ce43da03dff3ee655949cd53d952dace555e268/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ce43da03dff3ee655949cd53d952dace555e268/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=5ce43da03dff3ee655949cd53d952dace555e268",
        "patch": "@@ -687,10 +687,8 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     sa_hup.sa_flags = 0;\n     sigaction(SIGHUP, &sa_hup, NULL);\n \n-#if defined (__SVR4) && defined (__sun)\n-    // ignore SIGPIPE on Solaris\n+    // Ignore SIGPIPE, otherwise it will bring the daemon down if the client closes unexpectedly\n     signal(SIGPIPE, SIG_IGN);\n-#endif\n #endif\n \n     // ********************************************************* Step 2: parameter interactions"
      }
    ]
  },
  {
    "sha": "8b2d6edaa9fbfb6344ca51edd0b3655b451cbcac",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YjJkNmVkYWE5ZmJmYjYzNDRjYTUxZWRkMGIzNjU1YjQ1MWNiY2Fj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-18T12:58:08Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-21T11:24:34Z"
      },
      "message": "http: Disable libevent debug logging, if not explicitly enabled\n\nAdd a option \"-debug=libevent\" to enable libevent debugging for troubleshooting.\nLibevent logging is redirected to our own log.",
      "tree": {
        "sha": "b7effed5b45d351dbaad7206a7145bfe092bb775",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b7effed5b45d351dbaad7206a7145bfe092bb775"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b2d6edaa9fbfb6344ca51edd0b3655b451cbcac",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b2d6edaa9fbfb6344ca51edd0b3655b451cbcac",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8b2d6edaa9fbfb6344ca51edd0b3655b451cbcac",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b2d6edaa9fbfb6344ca51edd0b3655b451cbcac/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5ce43da03dff3ee655949cd53d952dace555e268",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ce43da03dff3ee655949cd53d952dace555e268",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5ce43da03dff3ee655949cd53d952dace555e268"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 20,
      "deletions": 1
    },
    "files": [
      {
        "sha": "3fc880214310de26d9de68586a9260d89e3538cc",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b2d6edaa9fbfb6344ca51edd0b3655b451cbcac/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b2d6edaa9fbfb6344ca51edd0b3655b451cbcac/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=8b2d6edaa9fbfb6344ca51edd0b3655b451cbcac",
        "patch": "@@ -320,6 +320,15 @@ static void HTTPWorkQueueRun(WorkQueue<HTTPClosure>* queue)\n     queue->Run();\n }\n \n+/** libevent event log callback */\n+static void libevent_log_cb(int severity, const char *msg)\n+{\n+    if (severity >= EVENT_LOG_WARN) // Log warn messages and higher without debug category\n+        LogPrintf(\"libevent: %s\\n\", msg);\n+    else\n+        LogPrint(\"libevent\", \"libevent: %s\\n\", msg);\n+}\n+\n bool InitHTTPServer()\n {\n     struct evhttp* http = 0;\n@@ -335,6 +344,16 @@ bool InitHTTPServer()\n         return false;\n     }\n \n+    // Redirect libevent's logging to our own log\n+    event_set_log_callback(&libevent_log_cb);\n+#if LIBEVENT_VERSION_NUMBER >= 0x02010100\n+    // If -debug=libevent, set full libevent debugging.\n+    // Otherwise, disable all libevent debugging.\n+    if (LogAcceptCategory(\"libevent\"))\n+        event_enable_debug_logging(EVENT_DBG_ALL);\n+    else\n+        event_enable_debug_logging(EVENT_DBG_NONE);\n+#endif\n #ifdef WIN32\n     evthread_use_windows_threads();\n #else"
      },
      {
        "sha": "c259e3fa2d85eb1589cd875176cb243b565da492",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b2d6edaa9fbfb6344ca51edd0b3655b451cbcac/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b2d6edaa9fbfb6344ca51edd0b3655b451cbcac/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=8b2d6edaa9fbfb6344ca51edd0b3655b451cbcac",
        "patch": "@@ -387,7 +387,7 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-flushwallet\", strprintf(\"Run a thread to flush wallet periodically (default: %u)\", 1));\n         strUsage += HelpMessageOpt(\"-stopafterblockimport\", strprintf(\"Stop running after importing blocks from disk (default: %u)\", 0));\n     }\n-    string debugCategories = \"addrman, alert, bench, coindb, db, lock, rand, rpc, selectcoins, mempool, mempoolrej, net, proxy, prune, http\"; // Don't translate these and qt below\n+    string debugCategories = \"addrman, alert, bench, coindb, db, lock, rand, rpc, selectcoins, mempool, mempoolrej, net, proxy, prune, http, libevent\"; // Don't translate these and qt below\n     if (mode == HMM_BITCOIN_QT)\n         debugCategories += \", qt\";\n     strUsage += HelpMessageOpt(\"-debug=<category>\", strprintf(_(\"Output debugging information (default: %u, supplying <category> is optional)\"), 0) + \". \" +"
      }
    ]
  },
  {
    "sha": "2190ea6c4e7f56f29fc18539284801a5f504ee48",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMTkwZWE2YzRlN2Y1NmYyOWZjMTg1MzkyODQ4MDFhNWY1MDRlZTQ4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-18T13:45:38Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-21T15:15:36Z"
      },
      "message": "rpc: Split option -rpctimeout into -rpcservertimeout and -rpcclienttimeout\n\nThe two timeouts for the server and client, are essentially different:\n\n- In the case of the server it should be a lower value to avoid clients\nclogging up connection slots\n\n- In the case of the client it should be a high value to accomedate slow\n  responses from the server, for example for slow queries or when the\n  lock is contended\n\nSplit the options into `-rpcservertimeout` and `-rpcclienttimeout` with\nrespective defaults of 30 and 900.",
      "tree": {
        "sha": "8d4aa8f26c2912f6c53cca7bc34137d254dd9d67",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8d4aa8f26c2912f6c53cca7bc34137d254dd9d67"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2190ea6c4e7f56f29fc18539284801a5f504ee48",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2190ea6c4e7f56f29fc18539284801a5f504ee48",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2190ea6c4e7f56f29fc18539284801a5f504ee48",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2190ea6c4e7f56f29fc18539284801a5f504ee48/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8b2d6edaa9fbfb6344ca51edd0b3655b451cbcac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b2d6edaa9fbfb6344ca51edd0b3655b451cbcac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8b2d6edaa9fbfb6344ca51edd0b3655b451cbcac"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 8,
      "deletions": 5
    },
    "files": [
      {
        "sha": "6aae4ad4d2fc5c99bc744ab91cae7c9196bed63a",
        "filename": "contrib/debian/examples/bitcoin.conf",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2190ea6c4e7f56f29fc18539284801a5f504ee48/contrib/debian/examples/bitcoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2190ea6c4e7f56f29fc18539284801a5f504ee48/contrib/debian/examples/bitcoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/bitcoin.conf?ref=2190ea6c4e7f56f29fc18539284801a5f504ee48",
        "patch": "@@ -73,7 +73,7 @@\n \n # How many seconds bitcoin will wait for a complete RPC HTTP request.\n # after the HTTP connection is established. \n-#rpctimeout=30\n+#rpcclienttimeout=30\n \n # By default, only RPC connections from localhost are allowed.\n # Specify as many rpcallowip= settings as you like to allow connections from other hosts,"
      },
      {
        "sha": "7839b3b6b4e9f8d2c2b94502739578724d5fe793",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2190ea6c4e7f56f29fc18539284801a5f504ee48/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2190ea6c4e7f56f29fc18539284801a5f504ee48/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=2190ea6c4e7f56f29fc18539284801a5f504ee48",
        "patch": "@@ -22,6 +22,8 @@\n \n using namespace std;\n \n+static const int DEFAULT_HTTP_CLIENT_TIMEOUT=900;\n+\n std::string HelpMessageCli()\n {\n     string strUsage;\n@@ -37,6 +39,7 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-rpcwait\", _(\"Wait for RPC server to start\"));\n     strUsage += HelpMessageOpt(\"-rpcuser=<user>\", _(\"Username for JSON-RPC connections\"));\n     strUsage += HelpMessageOpt(\"-rpcpassword=<pw>\", _(\"Password for JSON-RPC connections\"));\n+    strUsage += HelpMessageOpt(\"-rpcclienttimeout=<n>\", strprintf(_(\"Timeout during HTTP requests (default: %d)\"), DEFAULT_HTTP_CLIENT_TIMEOUT));\n \n     return strUsage;\n }\n@@ -150,7 +153,7 @@ UniValue CallRPC(const string& strMethod, const UniValue& params)\n     struct evhttp_connection *evcon = evhttp_connection_base_new(base, NULL, host.c_str(), port); // TODO RAII\n     if (evcon == NULL)\n         throw runtime_error(\"create connection failed\");\n-    evhttp_connection_set_timeout(evcon, GetArg(\"-rpctimeout\", 30));\n+    evhttp_connection_set_timeout(evcon, GetArg(\"-rpcclienttimeout\", DEFAULT_HTTP_CLIENT_TIMEOUT));\n \n     HTTPReply response;\n     struct evhttp_request *req = evhttp_request_new(http_request_done, (void*)&response); // TODO RAII"
      },
      {
        "sha": "600e57b7cc82506e84c5f9e9575744e23dfdc4f0",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2190ea6c4e7f56f29fc18539284801a5f504ee48/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2190ea6c4e7f56f29fc18539284801a5f504ee48/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=2190ea6c4e7f56f29fc18539284801a5f504ee48",
        "patch": "@@ -374,7 +374,7 @@ bool InitHTTPServer()\n         return false;\n     }\n \n-    evhttp_set_timeout(http, GetArg(\"-rpctimeout\", DEFAULT_HTTP_TIMEOUT));\n+    evhttp_set_timeout(http, GetArg(\"-rpcservertimeout\", DEFAULT_HTTP_SERVER_TIMEOUT));\n     evhttp_set_max_body_size(http, MAX_SIZE);\n     evhttp_set_gencb(http, http_request_cb, NULL);\n "
      },
      {
        "sha": "b377dc19fc944886df30bfe631df1fb5dcda0f2f",
        "filename": "src/httpserver.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2190ea6c4e7f56f29fc18539284801a5f504ee48/src/httpserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2190ea6c4e7f56f29fc18539284801a5f504ee48/src/httpserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.h?ref=2190ea6c4e7f56f29fc18539284801a5f504ee48",
        "patch": "@@ -13,7 +13,7 @@\n \n static const int DEFAULT_HTTP_THREADS=4;\n static const int DEFAULT_HTTP_WORKQUEUE=16;\n-static const int DEFAULT_HTTP_TIMEOUT=30;\n+static const int DEFAULT_HTTP_SERVER_TIMEOUT=30;\n \n struct evhttp_request;\n struct event_base;"
      },
      {
        "sha": "3b35fb380e89b14b152d998d88fc6d33f3dec180",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2190ea6c4e7f56f29fc18539284801a5f504ee48/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2190ea6c4e7f56f29fc18539284801a5f504ee48/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=2190ea6c4e7f56f29fc18539284801a5f504ee48",
        "patch": "@@ -440,7 +440,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-rpcthreads=<n>\", strprintf(_(\"Set the number of threads to service RPC calls (default: %d)\"), DEFAULT_HTTP_THREADS));\n     if (showDebug) {\n         strUsage += HelpMessageOpt(\"-rpcworkqueue=<n>\", strprintf(\"Set the depth of the work queue to service RPC calls (default: %d)\", DEFAULT_HTTP_WORKQUEUE));\n-        strUsage += HelpMessageOpt(\"-rpctimeout=<n>\", strprintf(\"Timeout during HTTP requests (default: %d)\", DEFAULT_HTTP_TIMEOUT));\n+        strUsage += HelpMessageOpt(\"-rpcservertimeout=<n>\", strprintf(\"Timeout during HTTP requests (default: %d)\", DEFAULT_HTTP_SERVER_TIMEOUT));\n     }\n \n     if (mode == HMM_BITCOIN_QT)"
      }
    ]
  },
  {
    "sha": "ddf98d1d84343f2db0502a85628ef80f2ec57dbd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZGY5OGQxZDg0MzQzZjJkYjA1MDJhODU2MjhlZjgwZjJlYzU3ZGJk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-19T12:12:44Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-21T15:15:37Z"
      },
      "message": "Make RPC tests cope with server-side timeout between requests\n\nPython's httplib does not graciously handle disconnections from the http server, resulting in BadStatusLine errors.\nSee https://bugs.python.org/issue3566 \"httplib persistent connections violate MUST in RFC2616 sec 8.1.4.\"\n\nThis was fixed in Python 3.5.\n\nWork around it for now.",
      "tree": {
        "sha": "9fc421212938c17f0335f9e634e1cd70a1c2c073",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9fc421212938c17f0335f9e634e1cd70a1c2c073"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ddf98d1d84343f2db0502a85628ef80f2ec57dbd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ddf98d1d84343f2db0502a85628ef80f2ec57dbd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ddf98d1d84343f2db0502a85628ef80f2ec57dbd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ddf98d1d84343f2db0502a85628ef80f2ec57dbd/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2190ea6c4e7f56f29fc18539284801a5f504ee48",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2190ea6c4e7f56f29fc18539284801a5f504ee48",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2190ea6c4e7f56f29fc18539284801a5f504ee48"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 22,
      "deletions": 14
    },
    "files": [
      {
        "sha": "33014dc1393a66328b06b7ee9c069ae811b23865",
        "filename": "qa/rpc-tests/test_framework/authproxy.py",
        "status": "modified",
        "additions": 22,
        "deletions": 14,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddf98d1d84343f2db0502a85628ef80f2ec57dbd/qa/rpc-tests/test_framework/authproxy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddf98d1d84343f2db0502a85628ef80f2ec57dbd/qa/rpc-tests/test_framework/authproxy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/authproxy.py?ref=ddf98d1d84343f2db0502a85628ef80f2ec57dbd",
        "patch": "@@ -106,6 +106,26 @@ def __getattr__(self, name):\n             name = \"%s.%s\" % (self.__service_name, name)\n         return AuthServiceProxy(self.__service_url, name, connection=self.__conn)\n \n+    def _request(self, method, path, postdata):\n+        '''\n+        Do a HTTP request, with retry if we get disconnected (e.g. due to a timeout).\n+        This is a workaround for https://bugs.python.org/issue3566 which is fixed in Python 3.5.\n+        '''\n+        headers = {'Host': self.__url.hostname,\n+                   'User-Agent': USER_AGENT,\n+                   'Authorization': self.__auth_header,\n+                   'Content-type': 'application/json'}\n+        try:\n+            self.__conn.request(method, path, postdata, headers)\n+            return self._get_response()\n+        except httplib.BadStatusLine as e:\n+            if e.line == \"''\": # if connection was closed, try again\n+                self.__conn.close()\n+                self.__conn.request(method, path, postdata, headers)\n+                return self._get_response()\n+            else:\n+                raise\n+\n     def __call__(self, *args):\n         AuthServiceProxy.__id_count += 1\n \n@@ -115,13 +135,7 @@ def __call__(self, *args):\n                                'method': self.__service_name,\n                                'params': args,\n                                'id': AuthServiceProxy.__id_count}, default=EncodeDecimal)\n-        self.__conn.request('POST', self.__url.path, postdata,\n-                            {'Host': self.__url.hostname,\n-                             'User-Agent': USER_AGENT,\n-                             'Authorization': self.__auth_header,\n-                             'Content-type': 'application/json'})\n-\n-        response = self._get_response()\n+        response = self._request('POST', self.__url.path, postdata)\n         if response['error'] is not None:\n             raise JSONRPCException(response['error'])\n         elif 'result' not in response:\n@@ -133,13 +147,7 @@ def __call__(self, *args):\n     def _batch(self, rpc_call_list):\n         postdata = json.dumps(list(rpc_call_list), default=EncodeDecimal)\n         log.debug(\"--> \"+postdata)\n-        self.__conn.request('POST', self.__url.path, postdata,\n-                            {'Host': self.__url.hostname,\n-                             'User-Agent': USER_AGENT,\n-                             'Authorization': self.__auth_header,\n-                             'Content-type': 'application/json'})\n-\n-        return self._get_response()\n+        return self._request('POST', self.__url.path, postdata)\n \n     def _get_response(self):\n         http_response = self.__conn.getresponse()"
      }
    ]
  }
]