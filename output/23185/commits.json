[
  {
    "sha": "fa1477e706504f45a7a0f51b9f4b8014ee6a7d8d",
    "node_id": "C_kwDOABII59oAKGZhMTQ3N2U3MDY1MDRmNDVhN2EwZjUxYjlmNGI4MDE0ZWU2YTdkOGQ",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-10-05T10:57:20Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-10-06T18:01:42Z"
      },
      "message": "test: Add ParseMoney and ParseScript tests",
      "tree": {
        "sha": "71d793ad1dce9cb285a5c3c26a32b517c33df8e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/71d793ad1dce9cb285a5c3c26a32b517c33df8e7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa1477e706504f45a7a0f51b9f4b8014ee6a7d8d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjWuAwAn/dstGEjKq9olxz8C6tkNXLg/u97bDL93dWb08U2nW6Hpf/ofHbyysR/\nMFdUMLAjTP3xTq2+ypGtPyzkdnUDZzYEfng63Can5EOtafuM8OQeyUoSt/+FAPMq\nsR+KSyl5Z2rpKH80z5Cm+pYMiuSpd1o5azJtj3ShG6wTlaJVcXIqprMEWR/nRNQK\nHkb45oOyFFFCgzMa/MgI8rwtCbrnZDeorTNTGbl/bWuBC7ljxxVERPofkud3efnF\nn/vHoTsr7t9H59WEFyAKwQ3DxwjeZxTzihMgYFT8fnDDi4s44DLk8DX6RuAqYgzn\nRskL+X/QL3YsuS3n0RkDS4zo/cSaioyC8zQbDhWmvMj5BwPx2wiXEkcRORRfUqCi\ngwgiykzsp1UW9XKAjEGtuyLB4k1238mcVUherqz0T20A5CqGbrGSgKu0hryGcGFF\njkF5gf8Zc8nbxkBIHqPnNooBGiBNiFWBOQAXnqUQkDbPlzqL5XUQGCV5WjEwHNqW\nsZ2onbZS\n=vBuf\n-----END PGP SIGNATURE-----",
        "payload": "tree 71d793ad1dce9cb285a5c3c26a32b517c33df8e7\nparent c79d9fb2f6e5f47dcb0ac45d66a542dad0c8e7e4\nauthor MarcoFalke <falke.marco@gmail.com> 1633431440 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1633543302 +0200\n\ntest: Add ParseMoney and ParseScript tests\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1477e706504f45a7a0f51b9f4b8014ee6a7d8d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa1477e706504f45a7a0f51b9f4b8014ee6a7d8d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1477e706504f45a7a0f51b9f4b8014ee6a7d8d/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c79d9fb2f6e5f47dcb0ac45d66a542dad0c8e7e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c79d9fb2f6e5f47dcb0ac45d66a542dad0c8e7e4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c79d9fb2f6e5f47dcb0ac45d66a542dad0c8e7e4"
      }
    ],
    "stats": {
      "total": 70,
      "additions": 69,
      "deletions": 1
    },
    "files": [
      {
        "sha": "d70793ffa929150dcf570c9c8e27f83be6d3cbd0",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa1477e706504f45a7a0f51b9f4b8014ee6a7d8d/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa1477e706504f45a7a0f51b9f4b8014ee6a7d8d/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=fa1477e706504f45a7a0f51b9f4b8014ee6a7d8d",
        "patch": "@@ -119,8 +119,9 @@ BITCOIN_TESTS =\\\n   test/sanity_tests.cpp \\\n   test/scheduler_tests.cpp \\\n   test/script_p2sh_tests.cpp \\\n-  test/script_tests.cpp \\\n+  test/script_parse_tests.cpp \\\n   test/script_standard_tests.cpp \\\n+  test/script_tests.cpp \\\n   test/scriptnum_tests.cpp \\\n   test/serfloat_tests.cpp \\\n   test/serialize_tests.cpp \\"
      },
      {
        "sha": "5b8b6a725f712543a8423249d03ac1b39af247cc",
        "filename": "src/test/script_parse_tests.cpp",
        "status": "added",
        "additions": 55,
        "deletions": 0,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa1477e706504f45a7a0f51b9f4b8014ee6a7d8d/src/test/script_parse_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa1477e706504f45a7a0f51b9f4b8014ee6a7d8d/src/test/script_parse_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_parse_tests.cpp?ref=fa1477e706504f45a7a0f51b9f4b8014ee6a7d8d",
        "patch": "@@ -0,0 +1,55 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <core_io.h>\n+#include <script/script.h>\n+#include <util/strencodings.h>\n+#include <test/util/setup_common.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_AUTO_TEST_SUITE(script_parse_tests)\n+BOOST_AUTO_TEST_CASE(parse_script)\n+{\n+    const std::vector<std::pair<std::string,std::string>> IN_OUT{\n+        // {IN: script string , OUT: hex string }\n+        {\"\", \"\"},\n+        {\"0\", \"00\"},\n+        {\"1\", \"51\"},\n+        {\"2\", \"52\"},\n+        {\"3\", \"53\"},\n+        {\"4\", \"54\"},\n+        {\"5\", \"55\"},\n+        {\"6\", \"56\"},\n+        {\"7\", \"57\"},\n+        {\"8\", \"58\"},\n+        {\"9\", \"59\"},\n+        {\"10\", \"5a\"},\n+        {\"11\", \"5b\"},\n+        {\"12\", \"5c\"},\n+        {\"13\", \"5d\"},\n+        {\"14\", \"5e\"},\n+        {\"15\", \"5f\"},\n+        {\"16\", \"60\"},\n+        {\"17\", \"0111\"},\n+        {\"-9\", \"0189\"},\n+        {\"0x17\", \"17\"},\n+        {\"'17'\", \"023137\"},\n+        {\"ELSE\", \"67\"},\n+        {\"NOP10\", \"b9\"},\n+        {\"11111111111111111111\", \"00\"},\n+    };\n+    std::string all_in;\n+    std::string all_out;\n+    for (const auto& [in, out] : IN_OUT) {\n+        BOOST_CHECK_EQUAL(HexStr(ParseScript(in)), out);\n+        all_in += \" \" + in + \" \";\n+        all_out += out;\n+    }\n+    BOOST_CHECK_EQUAL(HexStr(ParseScript(all_in)), all_out);\n+\n+    BOOST_CHECK_EXCEPTION(ParseScript(\"11111111111\"), std::runtime_error, HasReason(\"script parse error: decimal numeric value only allowed in the range -0xFFFFFFFF...0xFFFFFFFF\"));\n+    BOOST_CHECK_EXCEPTION(ParseScript(\"OP_CHECKSIGADD\"), std::runtime_error, HasReason(\"script parse error: unknown opcode\"));\n+}\n+BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "b5088d3c33381800b2b5f8bb9a7b77e7010c3331",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa1477e706504f45a7a0f51b9f4b8014ee6a7d8d/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa1477e706504f45a7a0f51b9f4b8014ee6a7d8d/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=fa1477e706504f45a7a0f51b9f4b8014ee6a7d8d",
        "patch": "@@ -1239,6 +1239,11 @@ BOOST_AUTO_TEST_CASE(util_FormatMoney)\n BOOST_AUTO_TEST_CASE(util_ParseMoney)\n {\n     BOOST_CHECK_EQUAL(ParseMoney(\"0.0\").value(), 0);\n+    BOOST_CHECK_EQUAL(ParseMoney(\".\").value(), 0);\n+    BOOST_CHECK_EQUAL(ParseMoney(\"0.\").value(), 0);\n+    BOOST_CHECK_EQUAL(ParseMoney(\".0\").value(), 0);\n+    BOOST_CHECK_EQUAL(ParseMoney(\".6789\").value(), 6789'0000);\n+    BOOST_CHECK_EQUAL(ParseMoney(\"12345.\").value(), COIN * 12345);\n \n     BOOST_CHECK_EQUAL(ParseMoney(\"12345.6789\").value(), (COIN/10000)*123456789);\n \n@@ -1276,11 +1281,18 @@ BOOST_AUTO_TEST_CASE(util_ParseMoney)\n     BOOST_CHECK(!ParseMoney(\"  \"));\n \n     // Parsing two numbers should fail\n+    BOOST_CHECK(!ParseMoney(\"..\"));\n+    BOOST_CHECK(!ParseMoney(\"0..0\"));\n     BOOST_CHECK(!ParseMoney(\"1 2\"));\n     BOOST_CHECK(!ParseMoney(\" 1 2 \"));\n     BOOST_CHECK(!ParseMoney(\" 1.2 3 \"));\n     BOOST_CHECK(!ParseMoney(\" 1 2.3 \"));\n \n+    // Embedded whitespace should fail\n+    BOOST_CHECK(!ParseMoney(\" -1 .2  \"));\n+    BOOST_CHECK(!ParseMoney(\"  1 .2  \"));\n+    BOOST_CHECK(!ParseMoney(\" +1 .2  \"));\n+\n     // Attempted 63 bit overflow should fail\n     BOOST_CHECK(!ParseMoney(\"92233720368.54775808\"));\n "
      }
    ]
  }
]