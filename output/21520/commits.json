[
  {
    "sha": "48fc675163a657e615fd4b2680fc3accba12f95d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OGZjNjc1MTYzYTY1N2U2MTVmZDRiMjY4MGZjM2FjY2JhMTJmOTVk",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-02-04T23:21:26Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-03-24T04:19:27Z"
      },
      "message": "wallet: Use existing feerate instead of getting a new one\n\nDuring each loop of CreateTransaction, instead of constantly getting a\nnew feerate, use the feerate that we have already fetched for all\nfee calculations. Thix fixes a race condition where the feerate required\nchanges during each iteration of the loop.\n\nThis commit changes behavior as the \"Fee estimation failed\" error will\nnow take priority over \"Signing transaction failed\".\n\nGithub-Pull: #21083\nRebased-From: 1a6a0b0dfb90f9ebd4b86d7934c6aa5594974f5f",
      "tree": {
        "sha": "dc5a0214214a0b9116bb8fb1b5786f1d4d98cf8e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dc5a0214214a0b9116bb8fb1b5786f1d4d98cf8e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/48fc675163a657e615fd4b2680fc3accba12f95d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEFSgSMAeFyWRE0zNNF1ZXMuCOXkEFAmBavc8ACgkQF1ZXMuCO\nXkFr/w/+KiMys+xDCe1nLVNUiyx/4IoAF/E25k83T7C7MB5ceACoK7VjTS4Fwanq\n1MfU8uI7x6HLenFiywfkqueEIeroeDBm42AFhnBjaXqfFjYwq5JLAoT7cPaXurLc\nxt7iQNv0KCKqJLDOx3IhorBPVt0q1fnhvX9SkvIpGBuhMM7JTHBtzzr7AnJEyPx6\noT5IbZQlx3CAqd2Xrp3MeaKWe0GRELgE9dmIOALvYJF/El7DCH5DrW+KMiHi93Mp\nePR/rKJFWM8QnV7h5RoJKCNVt+q7Q3QqhYM7PptT49jCuOVEV9NA/kgBTUSgaMWi\nQmCOqW24xBMU+R8hJxoiJ5UVi4Z0IiwtK1I/fal6lj8m1dOf4ob+9eeJOMr8C2e8\ndvd5FDh0cjHJJSQpSO9OmVQYBsITTLKOE7+sXmoHWuund7dF4jHwDhdQQqtNXdsO\nHoS3/72jjrbQmBnIXk8UmZUQjuIHKS8vzeO28n4IZnw/3v4JV5ES07RlHAnoHb03\nqILGKpEvF4pSDV42cABeAeTdPFuzOUUVRJwC25xh1oX3j0EG3vNWYT3eI9+BKUoo\nQAg+UbyiEq86DJLTrC9bWXLTh3Xmp+/KS+zn5+d1K7ShKAjKvnVfscjfOn5/SLbb\novk0Cx0b/emXM75akKp9/rUe8gcwzqkWadP5MPG6xWiSYJcrJ44=\n=8QnV\n-----END PGP SIGNATURE-----",
        "payload": "tree dc5a0214214a0b9116bb8fb1b5786f1d4d98cf8e\nparent 1bad33f952ead58d6048392f64082b91ced14f0d\nauthor Andrew Chow <achow101-github@achow101.com> 1612480886 -0500\ncommitter Andrew Chow <achow101-github@achow101.com> 1616559567 -0400\n\nwallet: Use existing feerate instead of getting a new one\n\nDuring each loop of CreateTransaction, instead of constantly getting a\nnew feerate, use the feerate that we have already fetched for all\nfee calculations. Thix fixes a race condition where the feerate required\nchanges during each iteration of the loop.\n\nThis commit changes behavior as the \"Fee estimation failed\" error will\nnow take priority over \"Signing transaction failed\".\n\nGithub-Pull: #21083\nRebased-From: 1a6a0b0dfb90f9ebd4b86d7934c6aa5594974f5f\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48fc675163a657e615fd4b2680fc3accba12f95d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/48fc675163a657e615fd4b2680fc3accba12f95d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48fc675163a657e615fd4b2680fc3accba12f95d/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1bad33f952ead58d6048392f64082b91ced14f0d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1bad33f952ead58d6048392f64082b91ced14f0d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1bad33f952ead58d6048392f64082b91ced14f0d"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 7,
      "deletions": 8
    },
    "files": [
      {
        "sha": "12947ea017d10d0546cf2785ade72c8994f8c227",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 8,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48fc675163a657e615fd4b2680fc3accba12f95d/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48fc675163a657e615fd4b2680fc3accba12f95d/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=48fc675163a657e615fd4b2680fc3accba12f95d",
        "patch": "@@ -2821,6 +2821,11 @@ bool CWallet::CreateTransactionInternal(\n                 error = strprintf(_(\"Fee rate (%s) is lower than the minimum fee rate setting (%s)\"), coin_control.m_feerate->ToString(FeeEstimateMode::SAT_VB), nFeeRateNeeded.ToString(FeeEstimateMode::SAT_VB));\n                 return false;\n             }\n+            if (feeCalc.reason == FeeReason::FALLBACK && !m_allow_fallback_fee) {\n+                // eventually allow a fallback fee\n+                error = _(\"Fee estimation failed. Fallbackfee is disabled. Wait a few blocks or enable -fallbackfee.\");\n+                return false;\n+            }\n \n             nFeeRet = 0;\n             bool pick_new_inputs = true;\n@@ -2958,13 +2963,7 @@ bool CWallet::CreateTransactionInternal(\n                     return false;\n                 }\n \n-                nFeeNeeded = GetMinimumFee(*this, nBytes, coin_control, &feeCalc);\n-                if (feeCalc.reason == FeeReason::FALLBACK && !m_allow_fallback_fee) {\n-                    // eventually allow a fallback fee\n-                    error = _(\"Fee estimation failed. Fallbackfee is disabled. Wait a few blocks or enable -fallbackfee.\");\n-                    return false;\n-                }\n-\n+                nFeeNeeded = coin_selection_params.effective_fee.GetFee(nBytes);\n                 if (nFeeRet >= nFeeNeeded) {\n                     // Reduce fee to only the needed amount if possible. This\n                     // prevents potential overpayment in fees if the coins\n@@ -2978,7 +2977,7 @@ bool CWallet::CreateTransactionInternal(\n                     // change output. Only try this once.\n                     if (nChangePosInOut == -1 && nSubtractFeeFromAmount == 0 && pick_new_inputs) {\n                         unsigned int tx_size_with_change = nBytes + coin_selection_params.change_output_size + 2; // Add 2 as a buffer in case increasing # of outputs changes compact size\n-                        CAmount fee_needed_with_change = GetMinimumFee(*this, tx_size_with_change, coin_control, nullptr);\n+                        CAmount fee_needed_with_change = coin_selection_params.effective_fee.GetFee(tx_size_with_change);\n                         CAmount minimum_value_for_change = GetDustThreshold(change_prototype_txout, discard_rate);\n                         if (nFeeRet >= fee_needed_with_change + minimum_value_for_change) {\n                             pick_new_inputs = false;"
      }
    ]
  },
  {
    "sha": "34c89f92f34b5ca12da95d5f0b0240682c5a1c1f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNGM4OWY5MmYzNGI1Y2ExMmRhOTVkNWYwYjAyNDA2ODJjNWExYzFm",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-02-04T23:23:51Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-03-24T04:19:34Z"
      },
      "message": "wallet: Replace nFeeRateNeeded with effective_fee\n\nMake sure that all fee calculations use the same feerate.\ncoin_selection_params.effective_fee is the variable we use for all fee\ncalculations, so get rid of remaining nFeeRateNeeded usages and just\ndirectly set coin_selection_params.effective_fee.\n\nDoes not change behavior.\n\nGithub-Pull: #21083\nRebased-From: e2f429e6bbf7098f278c0247b954ecd3ba53cf37",
      "tree": {
        "sha": "140f5219560a4dc5b4dc7ad3257e42d211466b2d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/140f5219560a4dc5b4dc7ad3257e42d211466b2d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/34c89f92f34b5ca12da95d5f0b0240682c5a1c1f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEFSgSMAeFyWRE0zNNF1ZXMuCOXkEFAmBavdYACgkQF1ZXMuCO\nXkHMGxAAjfpoD75+sCEGFwqAfNdGmMmwFlpEeOY+Ils/ivSV2j13QMcD7KrtThfQ\nGjjDcaLCM2YHrJT+joVB5pQs+tsuuybpXXvcsMTyTVVOxbpgza/wTTF35d1fw+5y\nDrgK2rGrHm1WPBOCFJ393VVNhdfPmnKvf7waXQlq/ZV3YP3noipK1wJ9LPZgn4PD\nKvEIyf3zrOg8imV8g1XfLqcKxQkPNelqzEIDPqGFkizi8jCwRHnU/m9Y7y9lKi8W\nsNn1JfsHYwZ+oAtOgPJgM7P6XM5jzp1d7g1lCQzSXLfN2JEiXbs8rkQ8cgfCLsc4\nQjyCTzIuH2J+ggs3F5xECoQHr/nzCyLUzocr9bR9Z6aimf888GOMaeSe+Twj0HGO\ngjcD2zgkGcUBfyPROmc/ns2obED+MAIFCtJMlh3nsPMKTNhbJtTiGIlmN6y//dsZ\nB35OxdUZURKAYU/waAXlHB9nggs42gRLG08AFSE9VUvtY21QOfmF2ye/Y8ujhwMK\nk+qB7jt0JHTyRcxH7b64S5RLxJCK8PZ730EsMZF+uNGS8Bav7mqcsasrAgIZ/HJY\nxqXc0ou590YJGiLwSzFiGTMYmhiGrmIVe+9dYKJ/2LXNp46ts268l4oYBJPZf7He\n4iPUAdptKBu62kWtz0pvQJ7Vz63SLqT3CF2i7aHSHBMhAt7SE8I=\n=53nt\n-----END PGP SIGNATURE-----",
        "payload": "tree 140f5219560a4dc5b4dc7ad3257e42d211466b2d\nparent 48fc675163a657e615fd4b2680fc3accba12f95d\nauthor Andrew Chow <achow101-github@achow101.com> 1612481031 -0500\ncommitter Andrew Chow <achow101-github@achow101.com> 1616559574 -0400\n\nwallet: Replace nFeeRateNeeded with effective_fee\n\nMake sure that all fee calculations use the same feerate.\ncoin_selection_params.effective_fee is the variable we use for all fee\ncalculations, so get rid of remaining nFeeRateNeeded usages and just\ndirectly set coin_selection_params.effective_fee.\n\nDoes not change behavior.\n\nGithub-Pull: #21083\nRebased-From: e2f429e6bbf7098f278c0247b954ecd3ba53cf37\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34c89f92f34b5ca12da95d5f0b0240682c5a1c1f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/34c89f92f34b5ca12da95d5f0b0240682c5a1c1f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34c89f92f34b5ca12da95d5f0b0240682c5a1c1f/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "48fc675163a657e615fd4b2680fc3accba12f95d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48fc675163a657e615fd4b2680fc3accba12f95d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/48fc675163a657e615fd4b2680fc3accba12f95d"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 3,
      "deletions": 4
    },
    "files": [
      {
        "sha": "3e1d80400012ccfca1cae951f2a3f505f4d4b58b",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34c89f92f34b5ca12da95d5f0b0240682c5a1c1f/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34c89f92f34b5ca12da95d5f0b0240682c5a1c1f/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=34c89f92f34b5ca12da95d5f0b0240682c5a1c1f",
        "patch": "@@ -2814,11 +2814,11 @@ bool CWallet::CreateTransactionInternal(\n             CFeeRate discard_rate = GetDiscardRate(*this);\n \n             // Get the fee rate to use effective values in coin selection\n-            CFeeRate nFeeRateNeeded = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n+            coin_selection_params.effective_fee = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n             // Do not, ever, assume that it's fine to change the fee rate if the user has explicitly\n             // provided one\n-            if (coin_control.m_feerate && nFeeRateNeeded > *coin_control.m_feerate) {\n-                error = strprintf(_(\"Fee rate (%s) is lower than the minimum fee rate setting (%s)\"), coin_control.m_feerate->ToString(FeeEstimateMode::SAT_VB), nFeeRateNeeded.ToString(FeeEstimateMode::SAT_VB));\n+            if (coin_control.m_feerate && coin_selection_params.effective_fee > *coin_control.m_feerate) {\n+                error = strprintf(_(\"Fee rate (%s) is lower than the minimum fee rate setting (%s)\"), coin_control.m_feerate->ToString(FeeEstimateMode::SAT_VB), coin_selection_params.effective_fee.ToString(FeeEstimateMode::SAT_VB));\n                 return false;\n             }\n             if (feeCalc.reason == FeeReason::FALLBACK && !m_allow_fallback_fee) {\n@@ -2900,7 +2900,6 @@ bool CWallet::CreateTransactionInternal(\n                     } else {\n                         coin_selection_params.change_spend_size = (size_t)change_spend_size;\n                     }\n-                    coin_selection_params.effective_fee = nFeeRateNeeded;\n                     if (!SelectCoins(vAvailableCoins, nValueToSelect, setCoins, nValueIn, coin_control, coin_selection_params, bnb_used))\n                     {\n                         // If BnB was used, it was the first pass. No longer the first pass and continue loop with knapsack."
      }
    ]
  },
  {
    "sha": "bcd716670ba8a189a2e9b8b035318abceb9ce631",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiY2Q3MTY2NzBiYThhMTg5YTJlOWI4YjAzNTMxOGFiY2ViOWNlNjMx",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-02-04T23:28:45Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-03-24T04:23:02Z"
      },
      "message": "wallet: Move long term feerate setting to CreateTransaction\n\nInstead of setting the long term feerate for each SelectCoinsMinConf\niteration, set it once during CreateTransaction and let it be shared\nwith each SelectCoinsMinConf through\ncoin_selection_params.m_long_term_feerate.\n\nDoes not change behavior.\n\nGithub-Pull: #21083\nRebased-From: 448d04b931f86941903e855f831249ff5ec77485",
      "tree": {
        "sha": "fe4cb317d999195c0c5bc7a36dba672a1b430857",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fe4cb317d999195c0c5bc7a36dba672a1b430857"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bcd716670ba8a189a2e9b8b035318abceb9ce631",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEFSgSMAeFyWRE0zNNF1ZXMuCOXkEFAmBavqYACgkQF1ZXMuCO\nXkHUdhAAkqPnAB3B8apCFchjS9Uy99AakkypO3rRL6ZnN3iSUlFCUt2/a1JCfCpd\nmc4C0j9kGqeM8lQgjzzQVXLbYgMOLV1JFx6oWA6mzQie1VOaB8BLwltow6jlmtaG\nZWbJ3Vyfv++90eXg2DjBFWD0XyMPkx1mr3b0emvUFwDkqvcGaJZK592KoY+fN9kN\nOa3ddTZgnEgnJ0ZZdckov+s4vRuRgfxeE8anDhqg6EVZonuHcUHPI/JdhX/0bvNU\nhDIm0gf8SDq2ubeuJviCZN6T5A+j5edcLCMUsZz1F351xOmTjz25fms9YDzIIt5g\n/vbkBQKzt04pSyHhM6eAvO9vjtEiLxv9OeWD+uUEhTmBJitXOYdoYp+arc59MhPt\nXp3eKjmKO9ecO47eAhDl6fOthb9BOr1KqUZHHKnFgn7Pf7SSpyyV3wiI8qYYwevV\nKHil6fRSJs0+IbLo5IOTm1cmuEhBGTZUW97bYk1/6QMbDRck0T+oBRJfd7snAMYr\ngTBrV6NuexppxkNGB3PjnKlut6mcr8oRHWh9O33ZYhlpKkFtAznboUzOk4Z8uJ1u\nnXYCYmG690TJQ6WeI83s8ZCHaahHhHQcdGjOZHRu6GxYDC8+CLzmj96zgeqUB9rt\n5/ae1MPvrPXoG/cSg2x8Z137ItAxagYatViUabw9G2ndcWWeIN4=\n=xOef\n-----END PGP SIGNATURE-----",
        "payload": "tree fe4cb317d999195c0c5bc7a36dba672a1b430857\nparent 34c89f92f34b5ca12da95d5f0b0240682c5a1c1f\nauthor Andrew Chow <achow101-github@achow101.com> 1612481325 -0500\ncommitter Andrew Chow <achow101-github@achow101.com> 1616559782 -0400\n\nwallet: Move long term feerate setting to CreateTransaction\n\nInstead of setting the long term feerate for each SelectCoinsMinConf\niteration, set it once during CreateTransaction and let it be shared\nwith each SelectCoinsMinConf through\ncoin_selection_params.m_long_term_feerate.\n\nDoes not change behavior.\n\nGithub-Pull: #21083\nRebased-From: 448d04b931f86941903e855f831249ff5ec77485\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bcd716670ba8a189a2e9b8b035318abceb9ce631",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bcd716670ba8a189a2e9b8b035318abceb9ce631",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bcd716670ba8a189a2e9b8b035318abceb9ce631/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "34c89f92f34b5ca12da95d5f0b0240682c5a1c1f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34c89f92f34b5ca12da95d5f0b0240682c5a1c1f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/34c89f92f34b5ca12da95d5f0b0240682c5a1c1f"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 37,
      "deletions": 14
    },
    "files": [
      {
        "sha": "1ef89a41dd1df7a7c2030f3f22de2d3eea6e858e",
        "filename": "src/bench/coin_selection.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bcd716670ba8a189a2e9b8b035318abceb9ce631/src/bench/coin_selection.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bcd716670ba8a189a2e9b8b035318abceb9ce631/src/bench/coin_selection.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/coin_selection.cpp?ref=bcd716670ba8a189a2e9b8b035318abceb9ce631",
        "patch": "@@ -50,7 +50,10 @@ static void CoinSelection(benchmark::Bench& bench)\n     }\n \n     const CoinEligibilityFilter filter_standard(1, 6, 0);\n-    const CoinSelectionParams coin_selection_params(true, 34, 148, CFeeRate(0), 0);\n+    const CoinSelectionParams coin_selection_params(/* use_bnb= */ true, /* change_output_size= */ 34,\n+                                                    /* change_spend_size= */ 148, /* effective_fee= */ CFeeRate(0),\n+                                                    /* long_term_feerate= */ CFeeRate(0),\n+                                                    /* tx_no_inputs_size= */ 0);\n     bench.run([&] {\n         std::set<CInputCoin> setCoinsRet;\n         CAmount nValueRet;"
      },
      {
        "sha": "f375ce02a5a4fbaeae81bc34df229a34a6b558bb",
        "filename": "src/wallet/test/coinselector_tests.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 4,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bcd716670ba8a189a2e9b8b035318abceb9ce631/src/wallet/test/coinselector_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bcd716670ba8a189a2e9b8b035318abceb9ce631/src/wallet/test/coinselector_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/coinselector_tests.cpp?ref=bcd716670ba8a189a2e9b8b035318abceb9ce631",
        "patch": "@@ -35,7 +35,10 @@ static CAmount balance = 0;\n CoinEligibilityFilter filter_standard(1, 6, 0);\n CoinEligibilityFilter filter_confirmed(1, 1, 0);\n CoinEligibilityFilter filter_standard_extra(6, 6, 0);\n-CoinSelectionParams coin_selection_params(false, 0, 0, CFeeRate(0), 0);\n+CoinSelectionParams coin_selection_params(/* use_bnb= */ false, /* change_output_size= */ 0,\n+                                          /* change_spend_size= */ 0, /* effective_fee= */ CFeeRate(0),\n+                                          /* long_term_feerate= */ CFeeRate(0),\n+                                          /* tx_no_inputs_size= */ 0);\n \n static void add_coin(const CAmount& nValue, int nInput, std::vector<CInputCoin>& set)\n {\n@@ -262,7 +265,10 @@ BOOST_AUTO_TEST_CASE(bnb_search_test)\n     }\n \n     // Make sure that effective value is working in SelectCoinsMinConf when BnB is used\n-    CoinSelectionParams coin_selection_params_bnb(true, 0, 0, CFeeRate(3000), 0);\n+    CoinSelectionParams coin_selection_params_bnb(/* use_bnb= */ true, /* change_output_size= */ 0,\n+                                                  /* change_spend_size= */ 0, /* effective_fee= */ CFeeRate(3000),\n+                                                  /* long_term_feerate= */ CFeeRate(1000),\n+                                                  /* tx_no_inputs_size= */ 0);\n     CoinSet setCoinsRet;\n     CAmount nValueRet;\n     bool bnb_used;\n@@ -632,8 +638,14 @@ BOOST_AUTO_TEST_CASE(SelectCoins_test)\n         CAmount target = rand.randrange(balance - 1000) + 1000;\n \n         // Perform selection\n-        CoinSelectionParams coin_selection_params_knapsack(false, 34, 148, CFeeRate(0), 0);\n-        CoinSelectionParams coin_selection_params_bnb(true, 34, 148, CFeeRate(0), 0);\n+        CoinSelectionParams coin_selection_params_knapsack(/* use_bnb= */ false, /* change_output_size= */ 34,\n+                                                           /* change_spend_size= */ 148, /* effective_fee= */ CFeeRate(0),\n+                                                           /* long_term_feerate= */ CFeeRate(0),\n+                                                           /* tx_no_inputs_size= */ 0);\n+        CoinSelectionParams coin_selection_params_bnb(/* use_bnb= */ true, /* change_output_size= */ 34,\n+                                                      /* change_spend_size= */ 148, /* effective_fee= */ CFeeRate(0),\n+                                                      /* long_term_feerate= */ CFeeRate(0),\n+                                                      /* tx_no_inputs_size= */ 0);\n         CoinSet out_set;\n         CAmount out_value = 0;\n         bool bnb_used = false;"
      },
      {
        "sha": "b1951c0c3d158f44a2332a33b6128f8a7e1b5458",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 8,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bcd716670ba8a189a2e9b8b035318abceb9ce631/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bcd716670ba8a189a2e9b8b035318abceb9ce631/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=bcd716670ba8a189a2e9b8b035318abceb9ce631",
        "patch": "@@ -2362,12 +2362,6 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n \n     std::vector<OutputGroup> utxo_pool;\n     if (coin_selection_params.use_bnb) {\n-        // Get long term estimate\n-        FeeCalculation feeCalc;\n-        CCoinControl temp;\n-        temp.m_confirm_target = 1008;\n-        CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n-\n         // Calculate cost of change\n         CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n \n@@ -2377,9 +2371,9 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n \n             if (coin_selection_params.m_subtract_fee_outputs) {\n                 // Set the effective feerate to 0 as we don't want to use the effective value since the fees will be deducted from the output\n-                group.SetFees(CFeeRate(0) /* effective_feerate */, long_term_feerate);\n+                group.SetFees(CFeeRate(0) /* effective_feerate */, coin_selection_params.m_long_term_feerate);\n             } else {\n-                group.SetFees(coin_selection_params.effective_fee, long_term_feerate);\n+                group.SetFees(coin_selection_params.effective_fee, coin_selection_params.m_long_term_feerate);\n             }\n \n             OutputGroup pos_group = group.GetPositiveOnlyGroup();\n@@ -2827,6 +2821,11 @@ bool CWallet::CreateTransactionInternal(\n                 return false;\n             }\n \n+            // Get long term estimate\n+            CCoinControl cc_temp;\n+            cc_temp.m_confirm_target = chain().estimateMaxBlocks();\n+            coin_selection_params.m_long_term_feerate = GetMinimumFeeRate(*this, cc_temp, nullptr);\n+\n             nFeeRet = 0;\n             bool pick_new_inputs = true;\n             CAmount nValueIn = 0;"
      },
      {
        "sha": "65b57396bfb0d7fb81ad1dd0ac02c9742282e5a3",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 10,
        "deletions": 1,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bcd716670ba8a189a2e9b8b035318abceb9ce631/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bcd716670ba8a189a2e9b8b035318abceb9ce631/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=bcd716670ba8a189a2e9b8b035318abceb9ce631",
        "patch": "@@ -607,11 +607,20 @@ struct CoinSelectionParams\n     size_t change_output_size = 0;\n     size_t change_spend_size = 0;\n     CFeeRate effective_fee = CFeeRate(0);\n+    CFeeRate m_long_term_feerate;\n     size_t tx_noinputs_size = 0;\n     //! Indicate that we are subtracting the fee from outputs\n     bool m_subtract_fee_outputs = false;\n \n-    CoinSelectionParams(bool use_bnb, size_t change_output_size, size_t change_spend_size, CFeeRate effective_fee, size_t tx_noinputs_size) : use_bnb(use_bnb), change_output_size(change_output_size), change_spend_size(change_spend_size), effective_fee(effective_fee), tx_noinputs_size(tx_noinputs_size) {}\n+    CoinSelectionParams(bool use_bnb, size_t change_output_size, size_t change_spend_size, CFeeRate effective_fee,\n+                        CFeeRate long_term_feerate, size_t tx_noinputs_size) :\n+        use_bnb(use_bnb),\n+        change_output_size(change_output_size),\n+        change_spend_size(change_spend_size),\n+        effective_fee(effective_fee),\n+        m_long_term_feerate(long_term_feerate),\n+        tx_noinputs_size(tx_noinputs_size)\n+    {}\n     CoinSelectionParams() {}\n };\n "
      }
    ]
  },
  {
    "sha": "5fc381e443d6d967e6f7f8bc88a4fd66e18379eb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZmMzODFlNDQzZDZkOTY3ZTZmN2Y4YmM4OGE0ZmQ2NmUxODM3OWVi",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-02-05T00:11:24Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-03-24T04:34:54Z"
      },
      "message": "wallet: Move discard feerate fetching to CreateTransaction\n\nInstead of fetching the discard feerate for each SelectCoinsMinConf\niteration, fetch and cache it once during CreateTransaction so that it\nis shared for each SelectCoinsMinConf through\ncoin_selection_params.m_discard_feerate.\n\nDoes not change behavior.\n\nGithub-Pull: #21083\nRebased-From: bdd0c2934b7f389ffcfae3b602ee3ecee8581acd",
      "tree": {
        "sha": "a2f38db1c14e624c32fa92ce30444da8057e4232",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a2f38db1c14e624c32fa92ce30444da8057e4232"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5fc381e443d6d967e6f7f8bc88a4fd66e18379eb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEFSgSMAeFyWRE0zNNF1ZXMuCOXkEFAmBawXAACgkQF1ZXMuCO\nXkEMcw//c2SEJtzLu59xmOadKhzeZ9o6KP1LZC3AsX2jOQSnduDhlhX1GgIqXq+j\nplXVp6mZaaGfzuaniwhYUPjAvx3WtnocfDfar813iYqaWMy5WUTBBRf9Mo9uxRAa\nM1nrMzVlbOdEbZLPc7rsoVbzkMjUT+nWfWKWk8iuW3ku8PRJkJtnAH2DawE7AnkG\nR5UFga/gIZ6bo/hroXm3S0wz7BG4ZWIOIFOJQf9U2eWsSJn0caVHkSTkNDVK185N\n/IWGw5FGSGpGQL16/cypO/eguWGFgIMrHRH6IMD5K5AiU9Y+HNwAVFv6WPf8Km8Q\nuNna468TyHrdeq1o6qYgGCiUuHiP2Pe0hOKNmvrWz5yy/IwJvKX2fF928eJ/mjW0\nxaacjlzPLFF2lFdcMX+i/xiekY8LJTQGf8D+bEmU4ptlQevLWeHpK6pAgS2hUQ6A\nFq6EQlvKIGaSEiO3hCyDM9utK0ZNJhVw2AP7qjYS9LFyD4/UWUvaQj+tclGgm5cZ\noZSaB0a46rWSY9hZ+M9jaPCFvOiZ2HJDlEQf82K6NDZJekgzaVuymGxGt0C2MSC/\nBYryiLv9XeJFw/UbfLmTB0IKN9j8Pi/tv/DHnYjg8xuItswlcvTI6eGv13xJQ+8c\ncmlu789lf3o25dnuahXkKB0OcJMvT5g8uZ9XDZlU2qua4zPaewk=\n=Tir+\n-----END PGP SIGNATURE-----",
        "payload": "tree a2f38db1c14e624c32fa92ce30444da8057e4232\nparent bcd716670ba8a189a2e9b8b035318abceb9ce631\nauthor Andrew Chow <achow101-github@achow101.com> 1612483884 -0500\ncommitter Andrew Chow <achow101-github@achow101.com> 1616560494 -0400\n\nwallet: Move discard feerate fetching to CreateTransaction\n\nInstead of fetching the discard feerate for each SelectCoinsMinConf\niteration, fetch and cache it once during CreateTransaction so that it\nis shared for each SelectCoinsMinConf through\ncoin_selection_params.m_discard_feerate.\n\nDoes not change behavior.\n\nGithub-Pull: #21083\nRebased-From: bdd0c2934b7f389ffcfae3b602ee3ecee8581acd\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fc381e443d6d967e6f7f8bc88a4fd66e18379eb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5fc381e443d6d967e6f7f8bc88a4fd66e18379eb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fc381e443d6d967e6f7f8bc88a4fd66e18379eb/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bcd716670ba8a189a2e9b8b035318abceb9ce631",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bcd716670ba8a189a2e9b8b035318abceb9ce631",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bcd716670ba8a189a2e9b8b035318abceb9ce631"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 13,
      "deletions": 10
    },
    "files": [
      {
        "sha": "df277dc2f67dc9750f941c50156a1e9f0627a724",
        "filename": "src/bench/coin_selection.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fc381e443d6d967e6f7f8bc88a4fd66e18379eb/src/bench/coin_selection.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fc381e443d6d967e6f7f8bc88a4fd66e18379eb/src/bench/coin_selection.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/coin_selection.cpp?ref=5fc381e443d6d967e6f7f8bc88a4fd66e18379eb",
        "patch": "@@ -52,7 +52,7 @@ static void CoinSelection(benchmark::Bench& bench)\n     const CoinEligibilityFilter filter_standard(1, 6, 0);\n     const CoinSelectionParams coin_selection_params(/* use_bnb= */ true, /* change_output_size= */ 34,\n                                                     /* change_spend_size= */ 148, /* effective_fee= */ CFeeRate(0),\n-                                                    /* long_term_feerate= */ CFeeRate(0),\n+                                                    /* long_term_feerate= */ CFeeRate(0), /* discard_feerate= */ CFeeRate(0),\n                                                     /* tx_no_inputs_size= */ 0);\n     bench.run([&] {\n         std::set<CInputCoin> setCoinsRet;"
      },
      {
        "sha": "4686ecdf898565cb20abacf78b7c4910939f74de",
        "filename": "src/wallet/test/coinselector_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fc381e443d6d967e6f7f8bc88a4fd66e18379eb/src/wallet/test/coinselector_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fc381e443d6d967e6f7f8bc88a4fd66e18379eb/src/wallet/test/coinselector_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/coinselector_tests.cpp?ref=5fc381e443d6d967e6f7f8bc88a4fd66e18379eb",
        "patch": "@@ -37,7 +37,7 @@ CoinEligibilityFilter filter_confirmed(1, 1, 0);\n CoinEligibilityFilter filter_standard_extra(6, 6, 0);\n CoinSelectionParams coin_selection_params(/* use_bnb= */ false, /* change_output_size= */ 0,\n                                           /* change_spend_size= */ 0, /* effective_fee= */ CFeeRate(0),\n-                                          /* long_term_feerate= */ CFeeRate(0),\n+                                          /* long_term_feerate= */ CFeeRate(0), /* discard_feerate= */ CFeeRate(0),\n                                           /* tx_no_inputs_size= */ 0);\n \n static void add_coin(const CAmount& nValue, int nInput, std::vector<CInputCoin>& set)\n@@ -267,7 +267,7 @@ BOOST_AUTO_TEST_CASE(bnb_search_test)\n     // Make sure that effective value is working in SelectCoinsMinConf when BnB is used\n     CoinSelectionParams coin_selection_params_bnb(/* use_bnb= */ true, /* change_output_size= */ 0,\n                                                   /* change_spend_size= */ 0, /* effective_fee= */ CFeeRate(3000),\n-                                                  /* long_term_feerate= */ CFeeRate(1000),\n+                                                  /* long_term_feerate= */ CFeeRate(1000), /* discard_feerate= */ CFeeRate(1000),\n                                                   /* tx_no_inputs_size= */ 0);\n     CoinSet setCoinsRet;\n     CAmount nValueRet;\n@@ -640,11 +640,11 @@ BOOST_AUTO_TEST_CASE(SelectCoins_test)\n         // Perform selection\n         CoinSelectionParams coin_selection_params_knapsack(/* use_bnb= */ false, /* change_output_size= */ 34,\n                                                            /* change_spend_size= */ 148, /* effective_fee= */ CFeeRate(0),\n-                                                           /* long_term_feerate= */ CFeeRate(0),\n+                                                           /* long_term_feerate= */ CFeeRate(0), /* discard_feerate= */ CFeeRate(0),\n                                                            /* tx_no_inputs_size= */ 0);\n         CoinSelectionParams coin_selection_params_bnb(/* use_bnb= */ true, /* change_output_size= */ 34,\n                                                       /* change_spend_size= */ 148, /* effective_fee= */ CFeeRate(0),\n-                                                      /* long_term_feerate= */ CFeeRate(0),\n+                                                      /* long_term_feerate= */ CFeeRate(0), /* discard_feerate= */ CFeeRate(0),\n                                                       /* tx_no_inputs_size= */ 0);\n         CoinSet out_set;\n         CAmount out_value = 0;"
      },
      {
        "sha": "a3216a33aef4b66ef8a6867c02f238ff0c6645e9",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fc381e443d6d967e6f7f8bc88a4fd66e18379eb/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fc381e443d6d967e6f7f8bc88a4fd66e18379eb/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=5fc381e443d6d967e6f7f8bc88a4fd66e18379eb",
        "patch": "@@ -2363,7 +2363,7 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n     std::vector<OutputGroup> utxo_pool;\n     if (coin_selection_params.use_bnb) {\n         // Calculate cost of change\n-        CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+        CAmount cost_of_change = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n \n         // Filter by the min conf specs and add to utxo_pool and calculate effective value\n         for (OutputGroup& group : groups) {\n@@ -2805,7 +2805,8 @@ bool CWallet::CreateTransactionInternal(\n             CTxOut change_prototype_txout(0, scriptChange);\n             coin_selection_params.change_output_size = GetSerializeSize(change_prototype_txout);\n \n-            CFeeRate discard_rate = GetDiscardRate(*this);\n+            // Set discard feerate\n+            coin_selection_params.m_discard_feerate = GetDiscardRate(*this);\n \n             // Get the fee rate to use effective values in coin selection\n             coin_selection_params.effective_fee = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n@@ -2924,7 +2925,7 @@ bool CWallet::CreateTransactionInternal(\n                     // Never create dust outputs; if we would, just\n                     // add the dust to the fee.\n                     // The nChange when BnB is used is always going to go to fees.\n-                    if (IsDust(newTxOut, discard_rate) || bnb_used)\n+                    if (IsDust(newTxOut, coin_selection_params.m_discard_feerate) || bnb_used)\n                     {\n                         nChangePosInOut = -1;\n                         nFeeRet += nChange;\n@@ -2976,7 +2977,7 @@ bool CWallet::CreateTransactionInternal(\n                     if (nChangePosInOut == -1 && nSubtractFeeFromAmount == 0 && pick_new_inputs) {\n                         unsigned int tx_size_with_change = nBytes + coin_selection_params.change_output_size + 2; // Add 2 as a buffer in case increasing # of outputs changes compact size\n                         CAmount fee_needed_with_change = coin_selection_params.effective_fee.GetFee(tx_size_with_change);\n-                        CAmount minimum_value_for_change = GetDustThreshold(change_prototype_txout, discard_rate);\n+                        CAmount minimum_value_for_change = GetDustThreshold(change_prototype_txout, coin_selection_params.m_discard_feerate);\n                         if (nFeeRet >= fee_needed_with_change + minimum_value_for_change) {\n                             pick_new_inputs = false;\n                             nFeeRet = fee_needed_with_change;"
      },
      {
        "sha": "20ee63e4acab9f16835795dfdad815d0e39408e6",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fc381e443d6d967e6f7f8bc88a4fd66e18379eb/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fc381e443d6d967e6f7f8bc88a4fd66e18379eb/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=5fc381e443d6d967e6f7f8bc88a4fd66e18379eb",
        "patch": "@@ -608,17 +608,19 @@ struct CoinSelectionParams\n     size_t change_spend_size = 0;\n     CFeeRate effective_fee = CFeeRate(0);\n     CFeeRate m_long_term_feerate;\n+    CFeeRate m_discard_feerate;\n     size_t tx_noinputs_size = 0;\n     //! Indicate that we are subtracting the fee from outputs\n     bool m_subtract_fee_outputs = false;\n \n     CoinSelectionParams(bool use_bnb, size_t change_output_size, size_t change_spend_size, CFeeRate effective_fee,\n-                        CFeeRate long_term_feerate, size_t tx_noinputs_size) :\n+                        CFeeRate long_term_feerate, CFeeRate discard_feerate, size_t tx_noinputs_size) :\n         use_bnb(use_bnb),\n         change_output_size(change_output_size),\n         change_spend_size(change_spend_size),\n         effective_fee(effective_fee),\n         m_long_term_feerate(long_term_feerate),\n+        m_discard_feerate(discard_feerate),\n         tx_noinputs_size(tx_noinputs_size)\n     {}\n     CoinSelectionParams() {}"
      }
    ]
  },
  {
    "sha": "d61fb07da7c12e4a1f68cf645f32d563a657a506",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNjFmYjA3ZGE3YzEyZTRhMWY2OGNmNjQ1ZjMyZDU2M2E2NTdhNTA2",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-03-16T20:19:03Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-04-01T16:44:00Z"
      },
      "message": "Rename CoinSelectionParams::effective_fee to m_effective_feerate\n\nIt's a feerate, not a fee. Also follow the style guide for member names.\n\nGithub-Pull: #21083\nRebased-From: f9cd2bfbccb7a2b8ff07cec5f6d2adbeca5f07c3",
      "tree": {
        "sha": "01d1490e3f1bb076ea95bc8e903f60b6c39fb6ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/01d1490e3f1bb076ea95bc8e903f60b6c39fb6ae"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d61fb07da7c12e4a1f68cf645f32d563a657a506",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEFSgSMAeFyWRE0zNNF1ZXMuCOXkEFAmBl+FIACgkQF1ZXMuCO\nXkFtpg/+IVdioQcpT6lK1NuwdNiOstdpMc6gldn4u3/wX1FA1SeUK+BzNfdoA3aP\nfXBlszv1xWq92IBkStKWKf+p2EXvQBjchhRAy7GfGo4wl8f3+dQSlIPJ5LouQpbY\nxGmMR9B+u4p+CZQGus5DyeyqmAHnR/FGoOUy4DjvOrnwS72L8kccQJI8afGJUMNK\nkPRCEQcj9oF2RFLXPDu6BakxAqn2BCVHBIMEgExCQ2y3iuGNnCGZ7CCDoEMBUPMq\n/M6i9YHAkjCRJXMP7toR09SL7imr6O5iujt7G627G7bZtMmWbd3qBtgI/0nl0tnS\nsef/23GTSKxSG5e+D7YCTWK5p3YGMz/CY+BNwcFM3ov2jyUo3NsZ0JnMVsXks7+F\n1psWGpwK4Q21+zoHaFjz+3eygF+mXxlMgn0g56AHWdTakh7zN3pdMS5qd/sSKjVY\noQlNldk+1EhlhPtoBBx8zLxsNAbKDy9JJByk5E16Eem6mFcVBjrX8k4CS9Lbwa9G\nxJtDYNUkzK4UOlk8X9C4J0Fn74i1+YbXp4pIpQCoAcBOlXM+c3W4LxQrgHtY4RNM\nDOKduDzOL624IrqFlsKxKEwfWNaRLuEi2pt8K2lEmm7As7RAe0AUmuQAh7MlNrf5\ndl6DoSarPMLMEDcNRrS9/QQ9N8kQsesK+3NbOt9LJUStYaStrX8=\n=tJNM\n-----END PGP SIGNATURE-----",
        "payload": "tree 01d1490e3f1bb076ea95bc8e903f60b6c39fb6ae\nparent 5fc381e443d6d967e6f7f8bc88a4fd66e18379eb\nauthor Andrew Chow <achow101-github@achow101.com> 1615925943 -0400\ncommitter Andrew Chow <achow101-github@achow101.com> 1617295440 -0400\n\nRename CoinSelectionParams::effective_fee to m_effective_feerate\n\nIt's a feerate, not a fee. Also follow the style guide for member names.\n\nGithub-Pull: #21083\nRebased-From: f9cd2bfbccb7a2b8ff07cec5f6d2adbeca5f07c3\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d61fb07da7c12e4a1f68cf645f32d563a657a506",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d61fb07da7c12e4a1f68cf645f32d563a657a506",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d61fb07da7c12e4a1f68cf645f32d563a657a506/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5fc381e443d6d967e6f7f8bc88a4fd66e18379eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fc381e443d6d967e6f7f8bc88a4fd66e18379eb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5fc381e443d6d967e6f7f8bc88a4fd66e18379eb"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 18,
      "deletions": 18
    },
    "files": [
      {
        "sha": "74ba98f8c2c4d7f819399b8d286c26340bc9ac4a",
        "filename": "src/bench/coin_selection.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d61fb07da7c12e4a1f68cf645f32d563a657a506/src/bench/coin_selection.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d61fb07da7c12e4a1f68cf645f32d563a657a506/src/bench/coin_selection.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/coin_selection.cpp?ref=d61fb07da7c12e4a1f68cf645f32d563a657a506",
        "patch": "@@ -51,7 +51,7 @@ static void CoinSelection(benchmark::Bench& bench)\n \n     const CoinEligibilityFilter filter_standard(1, 6, 0);\n     const CoinSelectionParams coin_selection_params(/* use_bnb= */ true, /* change_output_size= */ 34,\n-                                                    /* change_spend_size= */ 148, /* effective_fee= */ CFeeRate(0),\n+                                                    /* change_spend_size= */ 148, /* effective_feerate= */ CFeeRate(0),\n                                                     /* long_term_feerate= */ CFeeRate(0), /* discard_feerate= */ CFeeRate(0),\n                                                     /* tx_no_inputs_size= */ 0);\n     bench.run([&] {"
      },
      {
        "sha": "46c4b5d6975dc5cc9c6a58819cd7ba566984dac9",
        "filename": "src/wallet/test/coinselector_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d61fb07da7c12e4a1f68cf645f32d563a657a506/src/wallet/test/coinselector_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d61fb07da7c12e4a1f68cf645f32d563a657a506/src/wallet/test/coinselector_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/coinselector_tests.cpp?ref=d61fb07da7c12e4a1f68cf645f32d563a657a506",
        "patch": "@@ -36,7 +36,7 @@ CoinEligibilityFilter filter_standard(1, 6, 0);\n CoinEligibilityFilter filter_confirmed(1, 1, 0);\n CoinEligibilityFilter filter_standard_extra(6, 6, 0);\n CoinSelectionParams coin_selection_params(/* use_bnb= */ false, /* change_output_size= */ 0,\n-                                          /* change_spend_size= */ 0, /* effective_fee= */ CFeeRate(0),\n+                                          /* change_spend_size= */ 0, /* effective_feerate= */ CFeeRate(0),\n                                           /* long_term_feerate= */ CFeeRate(0), /* discard_feerate= */ CFeeRate(0),\n                                           /* tx_no_inputs_size= */ 0);\n \n@@ -266,7 +266,7 @@ BOOST_AUTO_TEST_CASE(bnb_search_test)\n \n     // Make sure that effective value is working in SelectCoinsMinConf when BnB is used\n     CoinSelectionParams coin_selection_params_bnb(/* use_bnb= */ true, /* change_output_size= */ 0,\n-                                                  /* change_spend_size= */ 0, /* effective_fee= */ CFeeRate(3000),\n+                                                  /* change_spend_size= */ 0, /* effective_feerate= */ CFeeRate(3000),\n                                                   /* long_term_feerate= */ CFeeRate(1000), /* discard_feerate= */ CFeeRate(1000),\n                                                   /* tx_no_inputs_size= */ 0);\n     CoinSet setCoinsRet;\n@@ -300,7 +300,7 @@ BOOST_AUTO_TEST_CASE(bnb_search_test)\n         CCoinControl coin_control;\n         coin_control.fAllowOtherInputs = true;\n         coin_control.Select(COutPoint(vCoins.at(0).tx->GetHash(), vCoins.at(0).i));\n-        coin_selection_params_bnb.effective_fee = CFeeRate(0);\n+        coin_selection_params_bnb.m_effective_feerate = CFeeRate(0);\n         BOOST_CHECK(wallet->SelectCoins(vCoins, 10 * CENT, setCoinsRet, nValueRet, coin_control, coin_selection_params_bnb, bnb_used));\n         BOOST_CHECK(bnb_used);\n         BOOST_CHECK(coin_selection_params_bnb.use_bnb);\n@@ -639,11 +639,11 @@ BOOST_AUTO_TEST_CASE(SelectCoins_test)\n \n         // Perform selection\n         CoinSelectionParams coin_selection_params_knapsack(/* use_bnb= */ false, /* change_output_size= */ 34,\n-                                                           /* change_spend_size= */ 148, /* effective_fee= */ CFeeRate(0),\n+                                                           /* change_spend_size= */ 148, /* effective_feerate= */ CFeeRate(0),\n                                                            /* long_term_feerate= */ CFeeRate(0), /* discard_feerate= */ CFeeRate(0),\n                                                            /* tx_no_inputs_size= */ 0);\n         CoinSelectionParams coin_selection_params_bnb(/* use_bnb= */ true, /* change_output_size= */ 34,\n-                                                      /* change_spend_size= */ 148, /* effective_fee= */ CFeeRate(0),\n+                                                      /* change_spend_size= */ 148, /* effective_feerate= */ CFeeRate(0),\n                                                       /* long_term_feerate= */ CFeeRate(0), /* discard_feerate= */ CFeeRate(0),\n                                                       /* tx_no_inputs_size= */ 0);\n         CoinSet out_set;"
      },
      {
        "sha": "5c257aa7d832e9d9794f1347f5e65c9f55dbf99b",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d61fb07da7c12e4a1f68cf645f32d563a657a506/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d61fb07da7c12e4a1f68cf645f32d563a657a506/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=d61fb07da7c12e4a1f68cf645f32d563a657a506",
        "patch": "@@ -2363,7 +2363,7 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n     std::vector<OutputGroup> utxo_pool;\n     if (coin_selection_params.use_bnb) {\n         // Calculate cost of change\n-        CAmount cost_of_change = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+        CAmount cost_of_change = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size) + coin_selection_params.m_effective_feerate.GetFee(coin_selection_params.change_output_size);\n \n         // Filter by the min conf specs and add to utxo_pool and calculate effective value\n         for (OutputGroup& group : groups) {\n@@ -2373,14 +2373,14 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n                 // Set the effective feerate to 0 as we don't want to use the effective value since the fees will be deducted from the output\n                 group.SetFees(CFeeRate(0) /* effective_feerate */, coin_selection_params.m_long_term_feerate);\n             } else {\n-                group.SetFees(coin_selection_params.effective_fee, coin_selection_params.m_long_term_feerate);\n+                group.SetFees(coin_selection_params.m_effective_feerate, coin_selection_params.m_long_term_feerate);\n             }\n \n             OutputGroup pos_group = group.GetPositiveOnlyGroup();\n             if (pos_group.effective_value > 0) utxo_pool.push_back(pos_group);\n         }\n         // Calculate the fees for things that aren't inputs\n-        CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n+        CAmount not_input_fees = coin_selection_params.m_effective_feerate.GetFee(coin_selection_params.tx_noinputs_size);\n         bnb_used = true;\n         return SelectCoinsBnB(utxo_pool, nTargetValue, cost_of_change, setCoinsRet, nValueRet, not_input_fees);\n     } else {\n@@ -2437,7 +2437,7 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n             if (coin.m_input_bytes <= 0) {\n                 return false; // Not solvable, can't estimate size for fee\n             }\n-            coin.effective_value = coin.txout.nValue - coin_selection_params.effective_fee.GetFee(coin.m_input_bytes);\n+            coin.effective_value = coin.txout.nValue - coin_selection_params.m_effective_feerate.GetFee(coin.m_input_bytes);\n             if (coin_selection_params.use_bnb) {\n                 value_to_select -= coin.effective_value;\n             } else {\n@@ -2809,11 +2809,11 @@ bool CWallet::CreateTransactionInternal(\n             coin_selection_params.m_discard_feerate = GetDiscardRate(*this);\n \n             // Get the fee rate to use effective values in coin selection\n-            coin_selection_params.effective_fee = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n+            coin_selection_params.m_effective_feerate = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n             // Do not, ever, assume that it's fine to change the fee rate if the user has explicitly\n             // provided one\n-            if (coin_control.m_feerate && coin_selection_params.effective_fee > *coin_control.m_feerate) {\n-                error = strprintf(_(\"Fee rate (%s) is lower than the minimum fee rate setting (%s)\"), coin_control.m_feerate->ToString(FeeEstimateMode::SAT_VB), coin_selection_params.effective_fee.ToString(FeeEstimateMode::SAT_VB));\n+            if (coin_control.m_feerate && coin_selection_params.m_effective_feerate > *coin_control.m_feerate) {\n+                error = strprintf(_(\"Fee rate (%s) is lower than the minimum fee rate setting (%s)\"), coin_control.m_feerate->ToString(FeeEstimateMode::SAT_VB), coin_selection_params.m_effective_feerate.ToString(FeeEstimateMode::SAT_VB));\n                 return false;\n             }\n             if (feeCalc.reason == FeeReason::FALLBACK && !m_allow_fallback_fee) {\n@@ -2962,7 +2962,7 @@ bool CWallet::CreateTransactionInternal(\n                     return false;\n                 }\n \n-                nFeeNeeded = coin_selection_params.effective_fee.GetFee(nBytes);\n+                nFeeNeeded = coin_selection_params.m_effective_feerate.GetFee(nBytes);\n                 if (nFeeRet >= nFeeNeeded) {\n                     // Reduce fee to only the needed amount if possible. This\n                     // prevents potential overpayment in fees if the coins\n@@ -2976,7 +2976,7 @@ bool CWallet::CreateTransactionInternal(\n                     // change output. Only try this once.\n                     if (nChangePosInOut == -1 && nSubtractFeeFromAmount == 0 && pick_new_inputs) {\n                         unsigned int tx_size_with_change = nBytes + coin_selection_params.change_output_size + 2; // Add 2 as a buffer in case increasing # of outputs changes compact size\n-                        CAmount fee_needed_with_change = coin_selection_params.effective_fee.GetFee(tx_size_with_change);\n+                        CAmount fee_needed_with_change = coin_selection_params.m_effective_feerate.GetFee(tx_size_with_change);\n                         CAmount minimum_value_for_change = GetDustThreshold(change_prototype_txout, coin_selection_params.m_discard_feerate);\n                         if (nFeeRet >= fee_needed_with_change + minimum_value_for_change) {\n                             pick_new_inputs = false;"
      },
      {
        "sha": "6fde2fa79d6bb7c6521225ef7b4bf956212a1191",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d61fb07da7c12e4a1f68cf645f32d563a657a506/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d61fb07da7c12e4a1f68cf645f32d563a657a506/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=d61fb07da7c12e4a1f68cf645f32d563a657a506",
        "patch": "@@ -606,19 +606,19 @@ struct CoinSelectionParams\n     bool use_bnb = true;\n     size_t change_output_size = 0;\n     size_t change_spend_size = 0;\n-    CFeeRate effective_fee = CFeeRate(0);\n+    CFeeRate m_effective_feerate;\n     CFeeRate m_long_term_feerate;\n     CFeeRate m_discard_feerate;\n     size_t tx_noinputs_size = 0;\n     //! Indicate that we are subtracting the fee from outputs\n     bool m_subtract_fee_outputs = false;\n \n-    CoinSelectionParams(bool use_bnb, size_t change_output_size, size_t change_spend_size, CFeeRate effective_fee,\n+    CoinSelectionParams(bool use_bnb, size_t change_output_size, size_t change_spend_size, CFeeRate effective_feerate,\n                         CFeeRate long_term_feerate, CFeeRate discard_feerate, size_t tx_noinputs_size) :\n         use_bnb(use_bnb),\n         change_output_size(change_output_size),\n         change_spend_size(change_spend_size),\n-        effective_fee(effective_fee),\n+        m_effective_feerate(effective_feerate),\n         m_long_term_feerate(long_term_feerate),\n         m_discard_feerate(discard_feerate),\n         tx_noinputs_size(tx_noinputs_size)"
      }
    ]
  }
]