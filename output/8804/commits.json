[
  {
    "sha": "6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2Y2FiNDhmOTBiYzFjMWRkMjA0ZjMyMGJlNWQzNjc3Zjc0MmU5ZGQz",
    "commit": {
      "author": {
        "name": "Xinxi Wang",
        "email": "wangxinxi@me.com",
        "date": "2016-09-24T09:08:18Z"
      },
      "committer": {
        "name": "Xinxi Wang",
        "email": "wangxinxi@me.com",
        "date": "2016-09-24T09:16:04Z"
      },
      "message": "bitcoin -> litecoin",
      "tree": {
        "sha": "3009129d0682f648c6fd08f5cee916831726b497",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3009129d0682f648c6fd08f5cee916831726b497"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQIcBAABCgAGBQJX5kRWAAoJEHhn3LJk6zT4F8kQAO5B/84lpEufPYEo1/xFH6yu\nzE4dGwfHHlsvfr/ItB6dUW7DcgYErH6yzK9fZUU7Pfue4LSxLUxAoRFBZ+CBp7OA\npMFmWkxXsHn3GcU6ZUEnBBUfnIDM3fNeXHw6hICjhnmgV5DxWmAz0rAbcVX/iRbz\npoV/CiXHPkmzSG4nvabQCVob3ugxmXT3PS7FtN0TZ2VHqGXHtpVuj1pyVEl1WT2s\n74zSkD5yjre7tpqSk5y70QColeRuJMh55w1ZSNGv+04AgfEhUzxvW9gwHPhswu1w\nm0aEOXpjrdZXacxlxb4/glmpuLt84QQMwuSJwboUK++iK52/VGxkbeYuWJVdcyMJ\nweBUT5UDFCJRP5gkQ7CDnE3aeIhLXQ1ow1DPJgcqcuVejivMGjm8Ib02V0QVl8SC\nRiwnG2LwNMt+CFFW4UgTfuSlntJyyYt3hel5k4mMhTqGwEmvrAmqHsD00yoTZIlX\n9O3kFWSzdNQ2F9d4JC9dWkZAm9X8y8KRz5n6pyrd8esOIgYP6lPfQ6W26sE2YfZp\n0H9qWA7J48UTADPjGT0qOoinsj2sxmsLk+G3i3yU7tMltueDeL2ikEC8UekoZdGH\n1SmCOizwB9NPUTWu5LJy7AEooP+OgoP0im/L4rtf3qqH7u6EiMPT5bzAMDuJ9eqz\n1DriOZQmRJAvK3u9G/c0\n=6AWn\n-----END PGP SIGNATURE-----",
        "payload": "tree 3009129d0682f648c6fd08f5cee916831726b497\nparent 8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311\nauthor Xinxi Wang <wangxinxi@me.com> 1474708098 +0800\ncommitter Xinxi Wang <wangxinxi@me.com> 1474708564 +0800\n\nbitcoin -> litecoin\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/comments",
    "author": {
      "login": "wangxinxi",
      "id": 594199,
      "node_id": "MDQ6VXNlcjU5NDE5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/594199?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wangxinxi",
      "html_url": "https://github.com/wangxinxi",
      "followers_url": "https://api.github.com/users/wangxinxi/followers",
      "following_url": "https://api.github.com/users/wangxinxi/following{/other_user}",
      "gists_url": "https://api.github.com/users/wangxinxi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wangxinxi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wangxinxi/subscriptions",
      "organizations_url": "https://api.github.com/users/wangxinxi/orgs",
      "repos_url": "https://api.github.com/users/wangxinxi/repos",
      "events_url": "https://api.github.com/users/wangxinxi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wangxinxi/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "wangxinxi",
      "id": 594199,
      "node_id": "MDQ6VXNlcjU5NDE5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/594199?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wangxinxi",
      "html_url": "https://github.com/wangxinxi",
      "followers_url": "https://api.github.com/users/wangxinxi/followers",
      "following_url": "https://api.github.com/users/wangxinxi/following{/other_user}",
      "gists_url": "https://api.github.com/users/wangxinxi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wangxinxi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wangxinxi/subscriptions",
      "organizations_url": "https://api.github.com/users/wangxinxi/orgs",
      "repos_url": "https://api.github.com/users/wangxinxi/repos",
      "events_url": "https://api.github.com/users/wangxinxi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wangxinxi/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311"
      }
    ],
    "stats": {
      "total": 14909,
      "additions": 7410,
      "deletions": 7499
    },
    "files": [
      {
        "sha": "a694d052a98e70062c940e8a03bdde3cab9b07cc",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 16,
        "deletions": 16,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,12 +1,12 @@\n *.tar.gz\n \n *.exe\n-src/bitcoin\n-src/bitcoind\n-src/bitcoin-cli\n-src/bitcoin-tx\n-src/test/test_bitcoin\n-src/qt/test/test_bitcoin-qt\n+src/litecoin\n+src/litecoind\n+src/litecoin-cli\n+src/litecoin-tx\n+src/test/test_litecoin\n+src/qt/test/test_litecoin-qt\n \n # autoreconf\n Makefile.in\n@@ -29,8 +29,8 @@ config.log\n config.status\n configure\n libtool\n-src/config/bitcoin-config.h\n-src/config/bitcoin-config.h.in\n+src/config/litecoin-config.h\n+src/config/litecoin-config.h.in\n src/config/stamp-h1\n share/setup.nsi\n share/qt/Info.plist\n@@ -55,7 +55,7 @@ src/qt/test/moc*.cpp\n *.o\n *.o-*\n *.patch\n-.bitcoin\n+.litecoin\n *.a\n *.pb.cc\n *.pb.h\n@@ -74,12 +74,12 @@ src/qt/test/moc*.cpp\n # Compilation and Qt preprocessor part\n *.qm\n Makefile\n-bitcoin-qt\n-Bitcoin-Qt.app\n+litecoin-qt\n+Litecoin-Qt.app\n \n # Unit-tests\n Makefile.test\n-bitcoin-qt_test\n+litecoin-qt_test\n src/test/buildenv.py\n \n # Resources cpp\n@@ -93,25 +93,25 @@ build\n *.gcno\n *.gcda\n /*.info\n-test_bitcoin.coverage/\n+test_litecoin.coverage/\n total.coverage/\n coverage_percent.txt\n \n #build tests\n linux-coverage-build\n linux-build\n win32-build\n-qa/pull-tester/run-bitcoind-for-test.sh\n+qa/pull-tester/run-litecoind-for-test.sh\n qa/pull-tester/tests_config.py\n qa/pull-tester/cache/*\n qa/pull-tester/test.*/*\n qa/tmp\n cache/\n-share/BitcoindComparisonTool.jar\n+share/LitecoindComparisonTool.jar\n \n !src/leveldb*/Makefile\n \n /doc/doxygen/\n \n-libbitcoinconsensus.pc\n+liblitecoinconsensus.pc\n contrib/devtools/split-debug.sh"
      },
      {
        "sha": "66ac9b6bd48f8684be343fbeff30cc013bd1db65",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -3,7 +3,7 @@ dist: trusty\n \n #workaround for https://github.com/travis-ci/travis-ci/issues/5227\n addons:\n-  hostname: bitcoin-tester\n+  hostname: litecoin-tester\n \n os: linux\n language: generic\n@@ -22,24 +22,24 @@ env:\n     - CCACHE_TEMPDIR=/tmp/.ccache-temp\n     - CCACHE_COMPRESS=1\n     - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out\n-    - SDK_URL=https://bitcoincore.org/depends-sources/sdks\n+    - SDK_URL=https://litecoincore.org/depends-sources/sdks\n     - PYTHON_DEBUG=1\n     - WINEDEBUG=fixme-all\n   matrix:\n # ARM\n-    - HOST=arm-linux-gnueabihf PACKAGES=\"g++-arm-linux-gnueabihf\" DEP_OPTS=\"NO_QT=1\" CHECK_DOC=1 GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n+    - HOST=arm-linux-gnueabihf PACKAGES=\"g++-arm-linux-gnueabihf\" DEP_OPTS=\"NO_QT=1\" CHECK_DOC=1 GOAL=\"install\" LITECOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n # Win32\n-    - HOST=i686-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-i686 wine1.6 bc openjdk-7-jre-headless\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n+    - HOST=i686-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-i686 wine1.6 bc openjdk-7-jre-headless\" RUN_TESTS=true GOAL=\"install\" LITECOIN_CONFIG=\"--enable-reduce-exports\"\n # 32-bit + dash\n-    - HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc python3-zmq openjdk-7-jre-headless\" DEP_OPTS=\"NO_QT=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n+    - HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc python3-zmq openjdk-7-jre-headless\" DEP_OPTS=\"NO_QT=1\" RUN_TESTS=true GOAL=\"install\" LITECOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n # Win64\n-    - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine1.6 bc openjdk-7-jre-headless\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n-# bitcoind\n-    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc python3-zmq openjdk-7-jre-headless\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n+    - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine1.6 bc openjdk-7-jre-headless\" RUN_TESTS=true GOAL=\"install\" LITECOIN_CONFIG=\"--enable-reduce-exports\"\n+# litecoind\n+    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc python3-zmq openjdk-7-jre-headless\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" LITECOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n # No wallet\n-    - HOST=x86_64-unknown-linux-gnu PACKAGES=\" openjdk-7-jre-headless python3\" DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n+    - HOST=x86_64-unknown-linux-gnu PACKAGES=\" openjdk-7-jre-headless python3\" DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" LITECOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n # Cross-Mac\n-    - HOST=x86_64-apple-darwin11 PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev\" BITCOIN_CONFIG=\"--enable-reduce-exports\" OSX_SDK=10.11 GOAL=\"deploy\"\n+    - HOST=x86_64-apple-darwin11 PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev\" LITECOIN_CONFIG=\"--enable-reduce-exports\" OSX_SDK=10.11 GOAL=\"deploy\"\n \n before_install:\n     - export PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/python/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\n@@ -59,11 +59,11 @@ script:\n     - export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`\n     - if [ -n \"$USE_SHELL\" ]; then export CONFIG_SHELL=\"$USE_SHELL\"; fi\n     - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n-    - BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n+    - LITECOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n     - depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE\n     - test -n \"$USE_SHELL\" && eval '\"$USE_SHELL\" -c \"./autogen.sh\"' || ./autogen.sh\n     - mkdir build && cd build\n-    - ../configure $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n+    - ../configure $LITECOIN_CONFIG_ALL $LITECOIN_CONFIG || ( cat config.log && false)\n     - make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && make $GOAL V=1 ; false )\n     - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib\n     - if [ \"$RUN_TESTS\" = \"true\" ]; then make $MAKEJOBS check VERBOSE=1; fi"
      },
      {
        "sha": "43ec723e5d2d9e7ba379f2f882731282a40fbb06",
        "filename": ".tx/config",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/.tx/config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/.tx/config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.tx/config?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,7 +1,7 @@\n [main]\n host = https://www.transifex.com\n \n-[bitcoin.qt-translation-013x]\n-file_filter = src/qt/locale/bitcoin_<lang>.ts\n-source_file = src/qt/locale/bitcoin_en.ts\n+[litecoin.qt-translation-013x]\n+file_filter = src/qt/locale/litecoin_<lang>.ts\n+source_file = src/qt/locale/litecoin_en.ts\n source_lang = en"
      },
      {
        "sha": "ce0b4e20ca2c6a2d8ea0dce84ddab80d1bb37d21",
        "filename": "CONTRIBUTING.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,7 +1,7 @@\n-Contributing to Bitcoin Core\n+Contributing to Litecoin Core\n ============================\n \n-The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+The Litecoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n \n Firstly in terms of structure, there is no particular concept of \u201cCore developers\u201d in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repository \u201cmaintainers\u201d who are responsible for merging pull requests as well as a \u201clead maintainer\u201d who is responsible for the release cycle, overall merging, moderation and appointment of maintainers.\n \n@@ -81,9 +81,9 @@ Project maintainers aim for a quick turnaround on refactoring pull requests, so\n \"Decision Making\" Process\n -------------------------\n \n-The following applies to code changes to the Bitcoin Core project (and related projects such as libsecp256k1), and is not to be confused with overall Bitcoin Network Protocol consensus changes.\n+The following applies to code changes to the Litecoin Core project (and related projects such as libsecp256k1), and is not to be confused with overall Litecoin Network Protocol consensus changes.\n \n-Whether a pull request is merged into Bitcoin Core rests with the project merge maintainers and ultimately the project lead.\n+Whether a pull request is merged into Litecoin Core rests with the project merge maintainers and ultimately the project lead.\n \n Maintainers will take into consideration if a patch is in line with the general principles of the project; meets the minimum standards for inclusion; and will judge the general consensus of contributors.\n \n@@ -96,7 +96,7 @@ In general, all pull requests must:\n   - not break the existing test suite;\n   - where bugs are fixed, where possible, there should be unit tests demonstrating the bug and also proving the fix. This helps prevent regression.\n \n-Patches that change Bitcoin consensus rules are considerably more involved than normal because they affect the entire ecosystem and so must be preceded by extensive mailing list discussions and have a numbered BIP. While each case will be different, one should be prepared to expend more time and effort than for other kinds of patches because of increased peer review and consensus building requirements.\n+Patches that change Litecoin consensus rules are considerably more involved than normal because they affect the entire ecosystem and so must be preceded by extensive mailing list discussions and have a numbered BIP. While each case will be different, one should be prepared to expend more time and effort than for other kinds of patches because of increased peer review and consensus building requirements.\n \n \n ###Peer Review\n@@ -115,10 +115,10 @@ Project maintainers reserve the right to weigh the opinions of peer reviewers us\n \n Where a patch set affects consensus critical code, the bar will be set much higher in terms of discussion and peer review requirements, keeping in mind that mistakes could be very costly to the wider community. This includes refactoring of consensus critical code.\n \n-Where a patch set proposes to change the Bitcoin consensus, it must have been discussed extensively on the mailing list and IRC, be accompanied by a widely discussed BIP and have a generally widely perceived technical consensus of being a worthwhile change based on the judgement of the maintainers.\n+Where a patch set proposes to change the Litecoin consensus, it must have been discussed extensively on the mailing list and IRC, be accompanied by a widely discussed BIP and have a generally widely perceived technical consensus of being a worthwhile change based on the judgement of the maintainers.\n \n \n Release Policy\n --------------\n \n-The project leader is the release manager for each Bitcoin Core release.\n+The project leader is the release manager for each Litecoin Core release."
      },
      {
        "sha": "5a717275883cff18816dc4af64390a2acf3c2023",
        "filename": "COPYING",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,6 +1,6 @@\n The MIT License (MIT)\n \n-Copyright (c) 2009-2016 The Bitcoin Core developers\n+Copyright (c) 2009-2016 The Litecoin Core developers\n \n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal"
      },
      {
        "sha": "55bc4aad346160db84d316dcdb54e04473860cd9",
        "filename": "INSTALL",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/INSTALL",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/INSTALL",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/INSTALL?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n-Building Bitcoin\n+Building Litecoin\n \n-See doc/build-*.md for instructions on building bitcoind,\n+See doc/build-*.md for instructions on building litecoind,\n the intended-for-services, no-graphical-interface, reference\n-implementation of Bitcoin.\n\\ No newline at end of file\n+implementation of Litecoin."
      },
      {
        "sha": "6a5264698c3d9e92aed0e5f078555ea969f911a4",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 41,
        "deletions": 41,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -5,20 +5,20 @@ SUBDIRS = src\n GZIP_ENV=\"-9n\"\n export PYTHONPATH\n \n-if BUILD_BITCOIN_LIBS\n+if BUILD_LITECOIN_LIBS\n pkgconfigdir = $(libdir)/pkgconfig\n-pkgconfig_DATA = libbitcoinconsensus.pc\n+pkgconfig_DATA = liblitecoinconsensus.pc\n endif\n \n-BITCOIND_BIN=$(top_builddir)/src/$(BITCOIN_DAEMON_NAME)$(EXEEXT)\n-BITCOIN_QT_BIN=$(top_builddir)/src/qt/$(BITCOIN_GUI_NAME)$(EXEEXT)\n-BITCOIN_CLI_BIN=$(top_builddir)/src/$(BITCOIN_CLI_NAME)$(EXEEXT)\n-BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win$(WINDOWS_BITS)-setup$(EXEEXT)\n+LITECOIND_BIN=$(top_builddir)/src/$(LITECOIN_DAEMON_NAME)$(EXEEXT)\n+LITECOIN_QT_BIN=$(top_builddir)/src/qt/$(LITECOIN_GUI_NAME)$(EXEEXT)\n+LITECOIN_CLI_BIN=$(top_builddir)/src/$(LITECOIN_CLI_NAME)$(EXEEXT)\n+LITECOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win$(WINDOWS_BITS)-setup$(EXEEXT)\n \n empty :=\n space := $(empty) $(empty)\n \n-OSX_APP=Bitcoin-Qt.app\n+OSX_APP=Litecoin-Qt.app\n OSX_VOLNAME = $(subst $(space),-,$(PACKAGE_NAME))\n OSX_DMG = $(OSX_VOLNAME).dmg\n OSX_BACKGROUND_SVG=background.svg\n@@ -27,7 +27,7 @@ OSX_BACKGROUND_IMAGE_DPIS=36 72\n OSX_DSSTORE_GEN=$(top_srcdir)/contrib/macdeploy/custom_dsstore.py\n OSX_DEPLOY_SCRIPT=$(top_srcdir)/contrib/macdeploy/macdeployqtplus\n OSX_FANCY_PLIST=$(top_srcdir)/contrib/macdeploy/fancy.plist\n-OSX_INSTALLER_ICONS=$(top_srcdir)/src/qt/res/icons/bitcoin.icns\n+OSX_INSTALLER_ICONS=$(top_srcdir)/src/qt/res/icons/litecoin.icns\n OSX_PLIST=$(top_builddir)/share/qt/Info.plist #not installed\n OSX_QT_TRANSLATIONS = da,de,es,hu,ru,uk,zh_CN,zh_TW\n \n@@ -36,7 +36,7 @@ DIST_DOCS = $(wildcard doc/*.md) $(wildcard doc/release-notes/*.md)\n BIN_CHECKS=$(top_srcdir)/contrib/devtools/symbol-check.py \\\n            $(top_srcdir)/contrib/devtools/security-check.py\n \n-WINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/bitcoin.ico \\\n+WINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/litecoin.ico \\\n   $(top_srcdir)/share/pixmaps/nsis-header.bmp \\\n   $(top_srcdir)/share/pixmaps/nsis-wizard.bmp \\\n   $(top_srcdir)/doc/README_windows.txt\n@@ -48,18 +48,18 @@ OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) \\\n   $(top_srcdir)/contrib/macdeploy/detached-sig-create.sh\n \n COVERAGE_INFO = baseline_filtered_combined.info baseline.info block_test.info \\\n-  leveldb_baseline.info test_bitcoin_filtered.info total_coverage.info \\\n+  leveldb_baseline.info test_litecoin_filtered.info total_coverage.info \\\n   baseline_filtered.info block_test_filtered.info rpc_test.info rpc_test_filtered.info \\\n-  leveldb_baseline_filtered.info test_bitcoin_coverage.info test_bitcoin.info\n+  leveldb_baseline_filtered.info test_litecoin_coverage.info test_litecoin.info\n \n dist-hook:\n \t-$(GIT) archive --format=tar HEAD -- src/clientversion.cpp | $(AMTAR) -C $(top_distdir) -xf -\n \n-$(BITCOIN_WIN_INSTALLER): all-recursive\n+$(LITECOIN_WIN_INSTALLER): all-recursive\n \t$(MKDIR_P) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIND_BIN) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_QT_BIN) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_CLI_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(LITECOIND_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(LITECOIN_QT_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(LITECOIN_CLI_BIN) $(top_builddir)/release\n \t@test -f $(MAKENSIS) && $(MAKENSIS) -V2 $(top_builddir)/share/setup.nsi || \\\n \t  echo error: could not build $@\n \t@echo built $@\n@@ -79,11 +79,11 @@ $(OSX_APP)/Contents/Info.plist: $(OSX_PLIST)\n \t$(MKDIR_P) $(@D)\n \t$(INSTALL_DATA) $< $@\n \n-$(OSX_APP)/Contents/Resources/bitcoin.icns: $(OSX_INSTALLER_ICONS)\n+$(OSX_APP)/Contents/Resources/litecoin.icns: $(OSX_INSTALLER_ICONS)\n \t$(MKDIR_P) $(@D)\n \t$(INSTALL_DATA) $< $@\n \n-$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(BITCOIN_QT_BIN)\n+$(OSX_APP)/Contents/MacOS/Litecoin-Qt: $(LITECOIN_QT_BIN)\n \t$(MKDIR_P) $(@D)\n \tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM)  $< $@\n \n@@ -92,8 +92,8 @@ $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings:\n \techo '{\tCFBundleDisplayName = \"$(PACKAGE_NAME)\"; CFBundleName = \"$(PACKAGE_NAME)\"; }' > $@\n \n OSX_APP_BUILT=$(OSX_APP)/Contents/PkgInfo $(OSX_APP)/Contents/Resources/empty.lproj \\\n-  $(OSX_APP)/Contents/Resources/bitcoin.icns $(OSX_APP)/Contents/Info.plist \\\n-  $(OSX_APP)/Contents/MacOS/Bitcoin-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings\n+  $(OSX_APP)/Contents/Resources/litecoin.icns $(OSX_APP)/Contents/Info.plist \\\n+  $(OSX_APP)/Contents/MacOS/Litecoin-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings\n \n osx_volname:\n \techo $(OSX_VOLNAME) >$@\n@@ -111,7 +111,7 @@ $(APP_DIST_DIR)/Applications:\n \t@rm -f $@\n \t@cd $(@D); $(LN_S) /Applications $(@F)\n \n-$(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt\n+$(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Litecoin-Qt\n \n $(OSX_DMG): $(APP_DIST_EXTRAS)\n \t$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V \"$(OSX_VOLNAME)\" -no-pad -r -dir-mode 0755 -apple -o $@ dist\n@@ -126,7 +126,7 @@ $(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE_DPIF\n $(APP_DIST_DIR)/.DS_Store: $(OSX_DSSTORE_GEN)\n \t$(PYTHON) $< \"$@\" \"$(OSX_VOLNAME)\"\n \n-$(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)\n+$(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Litecoin-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)\n \tINSTALLNAMETOOL=$(INSTALLNAMETOOL)  OTOOL=$(OTOOL) STRIP=$(STRIP) $(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -translations-dir=$(QT_TRANSLATION_DIR) -add-qt-tr $(OSX_QT_TRANSLATIONS) -verbose 2\n \n deploydir: $(APP_DIST_EXTRAS)\n@@ -137,16 +137,16 @@ appbundle: $(OSX_APP_BUILT)\n deploy: $(OSX_DMG)\n endif\n if TARGET_WINDOWS\n-deploy: $(BITCOIN_WIN_INSTALLER)\n+deploy: $(LITECOIN_WIN_INSTALLER)\n endif\n \n-$(BITCOIN_QT_BIN): FORCE\n+$(LITECOIN_QT_BIN): FORCE\n \t$(MAKE) -C src qt/$(@F)\n \n-$(BITCOIND_BIN): FORCE\n+$(LITECOIND_BIN): FORCE\n \t$(MAKE) -C src $(@F)\n \n-$(BITCOIN_CLI_BIN): FORCE\n+$(LITECOIN_CLI_BIN): FORCE\n \t$(MAKE) -C src $(@F)\n \n if USE_LCOV\n@@ -166,26 +166,26 @@ leveldb_baseline_filtered.info: leveldb_baseline.info\n baseline_filtered_combined.info: leveldb_baseline_filtered.info baseline_filtered.info\n \t$(LCOV) -a leveldb_baseline_filtered.info -a baseline_filtered.info -o $@\n \n-test_bitcoin.info: baseline_filtered_combined.info\n+test_litecoin.info: baseline_filtered_combined.info\n \t$(MAKE) -C src/ check\n-\t$(LCOV) -c -d $(abs_builddir)/src -t test_bitcoin -o $@\n+\t$(LCOV) -c -d $(abs_builddir)/src -t test_litecoin -o $@\n \t$(LCOV) -z -d $(abs_builddir)/src\n \t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n \n-test_bitcoin_filtered.info: test_bitcoin.info\n+test_litecoin_filtered.info: test_litecoin.info\n \t$(LCOV) -r $< \"/usr/include/*\" -o $@\n \n-block_test.info: test_bitcoin_filtered.info\n+block_test.info: test_litecoin_filtered.info\n \t$(MKDIR_P) qa/tmp\n-\t-@TIMEOUT=15 qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS)\n-\t$(LCOV) -c -d $(abs_builddir)/src --t BitcoinJBlockTest -o $@\n+\t-@TIMEOUT=15 qa/pull-tester/run-litecoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS)\n+\t$(LCOV) -c -d $(abs_builddir)/src --t LitecoinJBlockTest -o $@\n \t$(LCOV) -z -d $(abs_builddir)/src\n \t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n \n block_test_filtered.info: block_test.info\n \t$(LCOV) -r $< \"/usr/include/*\" -o $@\n \n-rpc_test.info: test_bitcoin_filtered.info\n+rpc_test.info: test_litecoin_filtered.info\n \t-@TIMEOUT=15 python qa/pull-tester/rpc-tests.py $(EXTENDED_RPC_TESTS)\n \t$(LCOV) -c -d $(abs_builddir)/src --t rpc-tests -o $@\n \t$(LCOV) -z -d $(abs_builddir)/src\n@@ -194,41 +194,41 @@ rpc_test.info: test_bitcoin_filtered.info\n rpc_test_filtered.info: rpc_test.info\n \t$(LCOV) -r $< \"/usr/include/*\" -o $@\n \n-test_bitcoin_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info\n-\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n+test_litecoin_coverage.info: baseline_filtered_combined.info test_litecoin_filtered.info\n+\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_litecoin_filtered.info -o $@\n \n-total_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info block_test_filtered.info rpc_test_filtered.info\n-\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -a block_test_filtered.info -a rpc_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n+total_coverage.info: baseline_filtered_combined.info test_litecoin_filtered.info block_test_filtered.info rpc_test_filtered.info\n+\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_litecoin_filtered.info -a block_test_filtered.info -a rpc_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n \n-test_bitcoin.coverage/.dirstamp:  test_bitcoin_coverage.info\n+test_litecoin.coverage/.dirstamp:  test_litecoin_coverage.info\n \t$(GENHTML) -s $< -o $(@D)\n \t@touch $@\n \n total.coverage/.dirstamp: total_coverage.info\n \t$(GENHTML) -s $< -o $(@D)\n \t@touch $@\n \n-cov: test_bitcoin.coverage/.dirstamp total.coverage/.dirstamp\n+cov: test_litecoin.coverage/.dirstamp total.coverage/.dirstamp\n \n endif\n \n if USE_COMPARISON_TOOL\n check-local:\n \t$(MKDIR_P) qa/tmp\n-\t@qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS) 2>&1\n+\t@qa/pull-tester/run-litecoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS) 2>&1\n endif\n \n dist_noinst_SCRIPTS = autogen.sh\n \n EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.py qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS)\n \n-CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n+CLEANFILES = $(OSX_DMG) $(LITECOIN_WIN_INSTALLER)\n \n # This file is problematic for out-of-tree builds if it exists.\n DISTCLEANFILES = qa/pull-tester/tests_config.pyc\n \n .INTERMEDIATE: $(COVERAGE_INFO)\n \n clean-local:\n-\trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ qa/tmp/ cache/ $(OSX_APP)\n+\trm -rf coverage_percent.txt test_litecoin.coverage/ total.coverage/ qa/tmp/ cache/ $(OSX_APP)\n \trm -rf qa/pull-tester/__pycache__"
      },
      {
        "sha": "938e3cad23757dc70432969e9a558dbeca633541",
        "filename": "README.md",
        "status": "modified",
        "additions": 16,
        "deletions": 16,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,43 +1,43 @@\n-Bitcoin Core integration/staging tree\n+Litecoin Core integration/staging tree\n =====================================\n \n-[![Build Status](https://travis-ci.org/bitcoin/bitcoin.svg?branch=master)](https://travis-ci.org/bitcoin/bitcoin)\n+[![Build Status](https://travis-ci.org/litecoin/litecoin.svg?branch=master)](https://travis-ci.org/litecoin/litecoin)\n \n-https://bitcoincore.org\n+https://litecoincore.org\n \n-What is Bitcoin?\n+What is Litecoin?\n ----------------\n \n-Bitcoin is an experimental digital currency that enables instant payments to\n-anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate\n+Litecoin is an experimental digital currency that enables instant payments to\n+anyone, anywhere in the world. Litecoin uses peer-to-peer technology to operate\n with no central authority: managing transactions and issuing money are carried\n-out collectively by the network. Bitcoin Core is the name of open source\n+out collectively by the network. Litecoin Core is the name of open source\n software which enables the use of this currency.\n \n For more information, as well as an immediately useable, binary version of\n-the Bitcoin Core software, see https://bitcoin.org/en/download, or read the\n-[original whitepaper](https://bitcoincore.org/bitcoin.pdf).\n+the Litecoin Core software, see https://litecoin.org/en/download, or read the\n+[original whitepaper](https://litecoincore.org/litecoin.pdf).\n \n License\n -------\n \n-Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n+Litecoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n information or see https://opensource.org/licenses/MIT.\n \n Development Process\n -------------------\n \n The `master` branch is regularly built and tested, but is not guaranteed to be\n-completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\n-regularly to indicate new official, stable release versions of Bitcoin Core.\n+completely stable. [Tags](https://github.com/wangxinxi/litecoin/tags) are created\n+regularly to indicate new official, stable release versions of Litecoin Core.\n \n The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).\n \n-The developer [mailing list](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev)\n+The developer [mailing list](https://lists.linuxfoundation.org/mailman/listinfo/litecoin-dev)\n should be used to discuss complicated or controversial changes before working\n on a patch set.\n \n-Developer IRC can be found on Freenode at #bitcoin-core-dev.\n+Developer IRC can be found on Freenode at #litecoin-core-dev.\n \n Testing\n -------\n@@ -70,12 +70,12 @@ Translations\n ------------\n \n Changes to translations as well as new translations can be submitted to\n-[Bitcoin Core's Transifex page](https://www.transifex.com/projects/p/bitcoin/).\n+[Litecoin Core's Transifex page](https://www.transifex.com/projects/p/litecoin/).\n \n Translations are periodically pulled from Transifex and merged into the git repository. See the\n [translation process](doc/translation_process.md) for details on how this works.\n \n **Important**: We do not accept translation changes as GitHub pull requests because the next\n pull from Transifex would automatically overwrite them again.\n \n-Translators should also subscribe to the [mailing list](https://groups.google.com/forum/#!forum/bitcoin-translators).\n+Translators should also subscribe to the [mailing list](https://groups.google.com/forum/#!forum/litecoin-translators)."
      },
      {
        "sha": "a8aeb3918c0a5f0ef92d0fde7e814366f220eb4b",
        "filename": "build-aux/m4/litecoin_find_bdb48.m4",
        "status": "renamed",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/build-aux/m4/litecoin_find_bdb48.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/build-aux/m4/litecoin_find_bdb48.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/litecoin_find_bdb48.m4?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,4 +1,4 @@\n-AC_DEFUN([BITCOIN_FIND_BDB48],[\n+AC_DEFUN([LITECOIN_FIND_BDB48],[\n   AC_MSG_CHECKING([for Berkeley DB C++ headers])\n   BDB_CPPFLAGS=\n   BDB_LIBS=\n@@ -40,14 +40,14 @@ AC_DEFUN([BITCOIN_FIND_BDB48],[\n     AC_MSG_RESULT([no])\n     AC_MSG_ERROR([libdb_cxx headers missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n   elif test \"x$bdb48path\" = \"xX\"; then\n-    BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n+    LITECOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n     AC_ARG_WITH([incompatible-bdb],[AS_HELP_STRING([--with-incompatible-bdb], [allow using a bdb version other than 4.8])],[\n       AC_MSG_WARN([Found Berkeley DB other than 4.8; wallets opened by this build will not be portable!])\n     ],[\n       AC_MSG_ERROR([Found Berkeley DB other than 4.8, required for portable wallets (--with-incompatible-bdb to ignore or --disable-wallet to disable wallet functionality)])\n     ])\n   else\n-    BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdb48path}],db_cxx)\n+    LITECOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdb48path}],db_cxx)\n     bdbpath=\"${bdb48path}\"\n   fi\n   AC_SUBST(BDB_CPPFLAGS)",
        "previous_filename": "build-aux/m4/bitcoin_find_bdb48.m4"
      },
      {
        "sha": "5a14540a9de3845bbf6d16576fe592a086ae2c04",
        "filename": "build-aux/m4/litecoin_qt.m4",
        "status": "renamed",
        "additions": 123,
        "deletions": 123,
        "changes": 246,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/build-aux/m4/litecoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/build-aux/m4/litecoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/litecoin_qt.m4?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,19 +1,19 @@\n dnl Helper for cases where a qt dependency is not met.\n-dnl Output: If qt version is auto, set bitcoin_enable_qt to false. Else, exit.\n-AC_DEFUN([BITCOIN_QT_FAIL],[\n-  if test \"x$bitcoin_qt_want_version\" = \"xauto\" && test x$bitcoin_qt_force != xyes; then\n-    if test x$bitcoin_enable_qt != xno; then\n-      AC_MSG_WARN([$1; bitcoin-qt frontend will not be built])\n+dnl Output: If qt version is auto, set litecoin_enable_qt to false. Else, exit.\n+AC_DEFUN([LITECOIN_QT_FAIL],[\n+  if test \"x$litecoin_qt_want_version\" = \"xauto\" && test x$litecoin_qt_force != xyes; then\n+    if test x$litecoin_enable_qt != xno; then\n+      AC_MSG_WARN([$1; litecoin-qt frontend will not be built])\n     fi\n-    bitcoin_enable_qt=no\n-    bitcoin_enable_qt_test=no\n+    litecoin_enable_qt=no\n+    litecoin_enable_qt_test=no\n   else\n     AC_MSG_ERROR([$1])\n   fi\n ])\n \n-AC_DEFUN([BITCOIN_QT_CHECK],[\n-  if test \"x$bitcoin_enable_qt\" != \"xno\" && test x$bitcoin_qt_want_version != xno; then\n+AC_DEFUN([LITECOIN_QT_CHECK],[\n+  if test \"x$litecoin_enable_qt\" != \"xno\" && test x$litecoin_qt_want_version != xno; then\n     true\n     $1\n   else\n@@ -22,43 +22,43 @@ AC_DEFUN([BITCOIN_QT_CHECK],[\n   fi\n ])\n \n-dnl BITCOIN_QT_PATH_PROGS([FOO], [foo foo2], [/path/to/search/first], [continue if missing])\n+dnl LITECOIN_QT_PATH_PROGS([FOO], [foo foo2], [/path/to/search/first], [continue if missing])\n dnl Helper for finding the path of programs needed for Qt.\n dnl Inputs: $1: Variable to be set\n dnl Inputs: $2: List of programs to search for\n dnl Inputs: $3: Look for $2 here before $PATH\n dnl Inputs: $4: If \"yes\", don't fail if $2 is not found.\n dnl Output: $1 is set to the path of $2 if found. $2 are searched in order.\n-AC_DEFUN([BITCOIN_QT_PATH_PROGS],[\n-  BITCOIN_QT_CHECK([\n+AC_DEFUN([LITECOIN_QT_PATH_PROGS],[\n+  LITECOIN_QT_CHECK([\n     if test \"x$3\" != \"x\"; then\n       AC_PATH_PROGS($1,$2,,$3)\n     else\n       AC_PATH_PROGS($1,$2)\n     fi\n     if test \"x$$1\" = \"x\" && test \"x$4\" != \"xyes\"; then\n-      BITCOIN_QT_FAIL([$1 not found])\n+      LITECOIN_QT_FAIL([$1 not found])\n     fi\n   ])\n ])\n \n dnl Initialize qt input.\n-dnl This must be called before any other BITCOIN_QT* macros to ensure that\n+dnl This must be called before any other LITECOIN_QT* macros to ensure that\n dnl input variables are set correctly.\n dnl CAUTION: Do not use this inside of a conditional.\n-AC_DEFUN([BITCOIN_QT_INIT],[\n+AC_DEFUN([LITECOIN_QT_INIT],[\n   dnl enable qt support\n   AC_ARG_WITH([gui],\n     [AS_HELP_STRING([--with-gui@<:@=no|qt4|qt5|auto@:>@],\n-    [build bitcoin-qt GUI (default=auto, qt5 tried first)])],\n+    [build litecoin-qt GUI (default=auto, qt5 tried first)])],\n     [\n-     bitcoin_qt_want_version=$withval\n-     if test x$bitcoin_qt_want_version = xyes; then\n-       bitcoin_qt_force=yes\n-       bitcoin_qt_want_version=auto\n+     litecoin_qt_want_version=$withval\n+     if test x$litecoin_qt_want_version = xyes; then\n+       litecoin_qt_force=yes\n+       litecoin_qt_want_version=auto\n      fi\n     ],\n-    [bitcoin_qt_want_version=auto])\n+    [litecoin_qt_want_version=auto])\n \n   AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [])\n   AC_ARG_WITH([qt-libdir],[AS_HELP_STRING([--with-qt-libdir=LIB_DIR],[specify qt lib path (overridden by pkgconfig)])], [qt_lib_path=$withval], [])\n@@ -79,20 +79,20 @@ dnl Find the appropriate version of Qt libraries and includes.\n dnl Inputs: $1: Whether or not pkg-config should be used. yes|no. Default: yes.\n dnl Inputs: $2: If $1 is \"yes\" and --with-gui=auto, which qt version should be\n dnl         tried first.\n-dnl Outputs: See _BITCOIN_QT_FIND_LIBS_*\n+dnl Outputs: See _LITECOIN_QT_FIND_LIBS_*\n dnl Outputs: Sets variables for all qt-related tools.\n-dnl Outputs: bitcoin_enable_qt, bitcoin_enable_qt_dbus, bitcoin_enable_qt_test\n-AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n+dnl Outputs: litecoin_enable_qt, litecoin_enable_qt_dbus, litecoin_enable_qt_test\n+AC_DEFUN([LITECOIN_QT_CONFIGURE],[\n   use_pkgconfig=$1\n \n   if test x$use_pkgconfig = x; then\n     use_pkgconfig=yes\n   fi\n \n   if test x$use_pkgconfig = xyes; then\n-    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG([$2])])\n+    LITECOIN_QT_CHECK([_LITECOIN_QT_FIND_LIBS_WITH_PKGCONFIG([$2])])\n   else\n-    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG])\n+    LITECOIN_QT_CHECK([_LITECOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG])\n   fi\n \n   dnl This is ugly and complicated. Yuck. Works as follows:\n@@ -102,46 +102,46 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   dnl Qt4 and Qt5. With Qt5, languages moved into core and the WindowsIntegration\n   dnl plugin was added. Since we can't tell if Qt4 is static or not, it is\n   dnl assumed for windows builds.\n-  dnl _BITCOIN_QT_CHECK_STATIC_PLUGINS does a quick link-check and appends the\n+  dnl _LITECOIN_QT_CHECK_STATIC_PLUGINS does a quick link-check and appends the\n   dnl results to QT_LIBS.\n-  BITCOIN_QT_CHECK([\n+  LITECOIN_QT_CHECK([\n   TEMP_CPPFLAGS=$CPPFLAGS\n   TEMP_CXXFLAGS=$CXXFLAGS\n   CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n   CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n-  if test x$bitcoin_qt_got_major_vers = x5; then\n-    _BITCOIN_QT_IS_STATIC\n-    if test x$bitcoin_cv_static_qt = xyes; then\n-      _BITCOIN_QT_FIND_STATIC_PLUGINS\n+  if test x$litecoin_qt_got_major_vers = x5; then\n+    _LITECOIN_QT_IS_STATIC\n+    if test x$litecoin_cv_static_qt = xyes; then\n+      _LITECOIN_QT_FIND_STATIC_PLUGINS\n       AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-      AC_CACHE_CHECK(for Qt < 5.4, bitcoin_cv_need_acc_widget,[AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n+      AC_CACHE_CHECK(for Qt < 5.4, litecoin_cv_need_acc_widget,[AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n           [[#include <QtCore>]],[[\n           #if QT_VERSION >= 0x050400\n           choke;\n           #endif\n           ]])],\n-        [bitcoin_cv_need_acc_widget=yes],\n-        [bitcoin_cv_need_acc_widget=no])\n+        [litecoin_cv_need_acc_widget=yes],\n+        [litecoin_cv_need_acc_widget=no])\n       ])\n-      if test \"x$bitcoin_cv_need_acc_widget\" = \"xyes\"; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n+      if test \"x$litecoin_cv_need_acc_widget\" = \"xyes\"; then\n+        _LITECOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n       fi\n       if test x$TARGET_OS = xwindows; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n+        _LITECOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n         AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n       elif test x$TARGET_OS = xlinux; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])\n+        _LITECOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])\n         AC_DEFINE(QT_QPA_PLATFORM_XCB, 1, [Define this symbol if the qt platform is xcb])\n       elif test x$TARGET_OS = xdarwin; then\n         AX_CHECK_LINK_FLAG([[-framework IOKit]],[QT_LIBS=\"$QT_LIBS -framework IOKit\"],[AC_MSG_ERROR(could not iokit framework)])\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n+        _LITECOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n         AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])\n       fi\n     fi\n   else\n     if test x$TARGET_OS = xwindows; then\n       AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([\n+      _LITECOIN_QT_CHECK_STATIC_PLUGINS([\n          Q_IMPORT_PLUGIN(qcncodecs)\n          Q_IMPORT_PLUGIN(qjpcodecs)\n          Q_IMPORT_PLUGIN(qtwcodecs)\n@@ -155,13 +155,13 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   ])\n \n   if test x$use_pkgconfig$qt_bin_path = xyes; then\n-    if test x$bitcoin_qt_got_major_vers = x5; then\n+    if test x$litecoin_qt_got_major_vers = x5; then\n       qt_bin_path=\"`$PKG_CONFIG --variable=host_bins Qt5Core 2>/dev/null`\"\n     fi\n   fi\n \n   if test x$use_hardening != xno; then\n-    BITCOIN_QT_CHECK([\n+    LITECOIN_QT_CHECK([\n     AC_MSG_CHECKING(whether -fPIE can be used with this Qt config)\n     TEMP_CPPFLAGS=$CPPFLAGS\n     TEMP_CXXFLAGS=$CXXFLAGS\n@@ -180,7 +180,7 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n     CXXFLAGS=$TEMP_CXXFLAGS\n     ])\n   else\n-    BITCOIN_QT_CHECK([\n+    LITECOIN_QT_CHECK([\n     AC_MSG_CHECKING(whether -fPIC is needed with this Qt config)\n     TEMP_CPPFLAGS=$CPPFLAGS\n     CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n@@ -197,39 +197,39 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n     ])\n   fi\n \n-  BITCOIN_QT_PATH_PROGS([MOC], [moc-qt${bitcoin_qt_got_major_vers} moc${bitcoin_qt_got_major_vers} moc], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([UIC], [uic-qt${bitcoin_qt_got_major_vers} uic${bitcoin_qt_got_major_vers} uic], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt${bitcoin_qt_got_major_vers} rcc${bitcoin_qt_got_major_vers} rcc], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt${bitcoin_qt_got_major_vers} lrelease${bitcoin_qt_got_major_vers} lrelease], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt${bitcoin_qt_got_major_vers} lupdate${bitcoin_qt_got_major_vers} lupdate],$qt_bin_path, yes)\n+  LITECOIN_QT_PATH_PROGS([MOC], [moc-qt${litecoin_qt_got_major_vers} moc${litecoin_qt_got_major_vers} moc], $qt_bin_path)\n+  LITECOIN_QT_PATH_PROGS([UIC], [uic-qt${litecoin_qt_got_major_vers} uic${litecoin_qt_got_major_vers} uic], $qt_bin_path)\n+  LITECOIN_QT_PATH_PROGS([RCC], [rcc-qt${litecoin_qt_got_major_vers} rcc${litecoin_qt_got_major_vers} rcc], $qt_bin_path)\n+  LITECOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt${litecoin_qt_got_major_vers} lrelease${litecoin_qt_got_major_vers} lrelease], $qt_bin_path)\n+  LITECOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt${litecoin_qt_got_major_vers} lupdate${litecoin_qt_got_major_vers} lupdate],$qt_bin_path, yes)\n \n   MOC_DEFS='-DHAVE_CONFIG_H -I$(srcdir)'\n   case $host in\n     *darwin*)\n-     BITCOIN_QT_CHECK([\n+     LITECOIN_QT_CHECK([\n        MOC_DEFS=\"${MOC_DEFS} -DQ_OS_MAC\"\n        base_frameworks=\"-framework Foundation -framework ApplicationServices -framework AppKit\"\n        AX_CHECK_LINK_FLAG([[$base_frameworks]],[QT_LIBS=\"$QT_LIBS $base_frameworks\"],[AC_MSG_ERROR(could not find base frameworks)])\n      ])\n     ;;\n     *mingw*)\n-       BITCOIN_QT_CHECK([\n+       LITECOIN_QT_CHECK([\n          AX_CHECK_LINK_FLAG([[-mwindows]],[QT_LDFLAGS=\"$QT_LDFLAGS -mwindows\"],[AC_MSG_WARN(-mwindows linker support not detected)])\n        ])\n   esac\n \n \n   dnl enable qt support\n   AC_MSG_CHECKING(whether to build ]AC_PACKAGE_NAME[ GUI)\n-  BITCOIN_QT_CHECK([\n-    bitcoin_enable_qt=yes\n-    bitcoin_enable_qt_test=yes\n+  LITECOIN_QT_CHECK([\n+    litecoin_enable_qt=yes\n+    litecoin_enable_qt_test=yes\n     if test x$have_qt_test = xno; then\n-      bitcoin_enable_qt_test=no\n+      litecoin_enable_qt_test=no\n     fi\n-    bitcoin_enable_qt_dbus=no\n+    litecoin_enable_qt_dbus=no\n     if test x$use_dbus != xno && test x$have_qt_dbus = xyes; then\n-      bitcoin_enable_qt_dbus=yes\n+      litecoin_enable_qt_dbus=yes\n     fi\n     if test x$use_dbus = xyes && test x$have_qt_dbus = xno; then\n       AC_MSG_ERROR(\"libQtDBus not found. Install libQtDBus or remove --with-qtdbus.\")\n@@ -238,9 +238,9 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n       AC_MSG_WARN(\"lupdate is required to update qt translations\")\n     fi\n   ],[\n-    bitcoin_enable_qt=no\n+    litecoin_enable_qt=no\n   ])\n-  AC_MSG_RESULT([$bitcoin_enable_qt (Qt${bitcoin_qt_got_major_vers})])\n+  AC_MSG_RESULT([$litecoin_enable_qt (Qt${litecoin_qt_got_major_vers})])\n \n   AC_SUBST(QT_PIE_FLAGS)\n   AC_SUBST(QT_INCLUDES)\n@@ -250,7 +250,7 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   AC_SUBST(QT_DBUS_LIBS)\n   AC_SUBST(QT_TEST_INCLUDES)\n   AC_SUBST(QT_TEST_LIBS)\n-  AC_SUBST(QT_SELECT, qt${bitcoin_qt_got_major_vers})\n+  AC_SUBST(QT_SELECT, qt${litecoin_qt_got_major_vers})\n   AC_SUBST(MOC_DEFS)\n ])\n \n@@ -260,9 +260,9 @@ dnl ----\n \n dnl Internal. Check if the included version of Qt is Qt5.\n dnl Requires: INCLUDES must be populated as necessary.\n-dnl Output: bitcoin_cv_qt5=yes|no\n-AC_DEFUN([_BITCOIN_QT_CHECK_QT5],[\n-  AC_CACHE_CHECK(for Qt 5, bitcoin_cv_qt5,[\n+dnl Output: litecoin_cv_qt5=yes|no\n+AC_DEFUN([_LITECOIN_QT_CHECK_QT5],[\n+  AC_CACHE_CHECK(for Qt 5, litecoin_cv_qt5,[\n   AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n     [[#include <QtCore>]],\n     [[\n@@ -272,17 +272,17 @@ AC_DEFUN([_BITCOIN_QT_CHECK_QT5],[\n       return 0;\n       #endif\n     ]])],\n-    [bitcoin_cv_qt5=yes],\n-    [bitcoin_cv_qt5=no])\n+    [litecoin_cv_qt5=yes],\n+    [litecoin_cv_qt5=no])\n ])])\n \n dnl Internal. Check if the linked version of Qt was built as static libs.\n dnl Requires: Qt5. This check cannot determine if Qt4 is static.\n dnl Requires: INCLUDES and LIBS must be populated as necessary.\n-dnl Output: bitcoin_cv_static_qt=yes|no\n+dnl Output: litecoin_cv_static_qt=yes|no\n dnl Output: Defines QT_STATICPLUGIN if plugins are static.\n-AC_DEFUN([_BITCOIN_QT_IS_STATIC],[\n-  AC_CACHE_CHECK(for static Qt, bitcoin_cv_static_qt,[\n+AC_DEFUN([_LITECOIN_QT_IS_STATIC],[\n+  AC_CACHE_CHECK(for static Qt, litecoin_cv_static_qt,[\n   AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n     [[#include <QtCore>]],\n     [[\n@@ -292,10 +292,10 @@ AC_DEFUN([_BITCOIN_QT_IS_STATIC],[\n       choke me\n       #endif\n     ]])],\n-    [bitcoin_cv_static_qt=yes],\n-    [bitcoin_cv_static_qt=no])\n+    [litecoin_cv_static_qt=yes],\n+    [litecoin_cv_static_qt=no])\n   ])\n-  if test xbitcoin_cv_static_qt = xyes; then\n+  if test xlitecoin_cv_static_qt = xyes; then\n     AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol for static Qt plugins])\n   fi\n ])\n@@ -305,7 +305,7 @@ dnl Requires: INCLUDES and LIBS must be populated as necessary.\n dnl Inputs: $1: A series of Q_IMPORT_PLUGIN().\n dnl Inputs: $2: The libraries that resolve $1.\n dnl Output: QT_LIBS is prepended or configure exits.\n-AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGINS],[\n+AC_DEFUN([_LITECOIN_QT_CHECK_STATIC_PLUGINS],[\n   AC_MSG_CHECKING(for static Qt plugins: $2)\n   CHECK_STATIC_PLUGINS_TEMP_LIBS=\"$LIBS\"\n   LIBS=\"$2 $QT_LIBS $LIBS\"\n@@ -315,16 +315,16 @@ AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGINS],[\n     $1]],\n     [[return 0;]])],\n     [AC_MSG_RESULT(yes); QT_LIBS=\"$2 $QT_LIBS\"],\n-    [AC_MSG_RESULT(no); BITCOIN_QT_FAIL(Could not resolve: $2)])\n+    [AC_MSG_RESULT(no); LITECOIN_QT_FAIL(Could not resolve: $2)])\n   LIBS=\"$CHECK_STATIC_PLUGINS_TEMP_LIBS\"\n ])\n \n dnl Internal. Find paths necessary for linking qt static plugins\n-dnl Inputs: bitcoin_qt_got_major_vers. 4 or 5.\n+dnl Inputs: litecoin_qt_got_major_vers. 4 or 5.\n dnl Inputs: qt_plugin_path. optional.\n dnl Outputs: QT_LIBS is appended\n-AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n-  if test x$bitcoin_qt_got_major_vers = x5; then\n+AC_DEFUN([_LITECOIN_QT_FIND_STATIC_PLUGINS],[\n+  if test x$litecoin_qt_got_major_vers = x5; then\n       if test x$qt_plugin_path != x; then\n         QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n         if test -d \"$qt_plugin_path/accessible\"; then\n@@ -346,17 +346,17 @@ AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n      ])\n      else\n        if test x$TARGET_OS = xwindows; then\n-         AC_CACHE_CHECK(for Qt >= 5.6, bitcoin_cv_need_platformsupport,[AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n+         AC_CACHE_CHECK(for Qt >= 5.6, litecoin_cv_need_platformsupport,[AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n              [[#include <QtCore>]],[[\n              #if QT_VERSION < 0x050600\n              choke;\n              #endif\n              ]])],\n-           [bitcoin_cv_need_platformsupport=yes],\n-           [bitcoin_cv_need_platformsupport=no])\n+           [litecoin_cv_need_platformsupport=yes],\n+           [litecoin_cv_need_platformsupport=no])\n          ])\n-         if test x$bitcoin_cv_need_platformsupport = xyes; then\n-           BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}PlatformSupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXPlatformSupport not found)))\n+         if test x$litecoin_cv_need_platformsupport = xyes; then\n+           LITECOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}PlatformSupport],[main],,LITECOIN_QT_FAIL(lib$QT_LIB_PREFIXPlatformSupport not found)))\n          fi\n        fi\n      fi\n@@ -369,49 +369,49 @@ AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n ])\n \n dnl Internal. Find Qt libraries using pkg-config.\n-dnl Inputs: bitcoin_qt_want_version (from --with-gui=). The version to check\n+dnl Inputs: litecoin_qt_want_version (from --with-gui=). The version to check\n dnl         first.\n-dnl Inputs: $1: If bitcoin_qt_want_version is \"auto\", check for this version\n+dnl Inputs: $1: If litecoin_qt_want_version is \"auto\", check for this version\n dnl         first.\n dnl Outputs: All necessary QT_* variables are set.\n-dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n+dnl Outputs: litecoin_qt_got_major_vers is set to \"4\" or \"5\".\n dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n-AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n+AC_DEFUN([_LITECOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n   m4_ifdef([PKG_CHECK_MODULES],[\n   auto_priority_version=$1\n   if test x$auto_priority_version = x; then\n     auto_priority_version=qt5\n   fi\n-    if test x$bitcoin_qt_want_version = xqt5 ||  ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n+    if test x$litecoin_qt_want_version = xqt5 ||  ( test x$litecoin_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n       QT_LIB_PREFIX=Qt5\n-      bitcoin_qt_got_major_vers=5\n+      litecoin_qt_got_major_vers=5\n     else\n       QT_LIB_PREFIX=Qt\n-      bitcoin_qt_got_major_vers=4\n+      litecoin_qt_got_major_vers=4\n     fi\n     qt5_modules=\"Qt5Core Qt5Gui Qt5Network Qt5Widgets\"\n     qt4_modules=\"QtCore QtGui QtNetwork\"\n-    BITCOIN_QT_CHECK([\n-      if test x$bitcoin_qt_want_version = xqt5 || ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n+    LITECOIN_QT_CHECK([\n+      if test x$litecoin_qt_want_version = xqt5 || ( test x$litecoin_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n         PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes],[have_qt=no])\n-      elif test x$bitcoin_qt_want_version = xqt4 || ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt4 ); then\n+      elif test x$litecoin_qt_want_version = xqt4 || ( test x$litecoin_qt_want_version = xauto && test x$auto_priority_version = xqt4 ); then\n         PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes], [have_qt=no])\n       fi\n \n       dnl qt version is set to 'auto' and the preferred version wasn't found. Now try the other.\n-      if test x$have_qt = xno && test x$bitcoin_qt_want_version = xauto; then\n+      if test x$have_qt = xno && test x$litecoin_qt_want_version = xauto; then\n         if test x$auto_priority_version = xqt5; then\n-          PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt; bitcoin_qt_got_major_vers=4], [have_qt=no])\n+          PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt; litecoin_qt_got_major_vers=4], [have_qt=no])\n         else\n-          PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt5; bitcoin_qt_got_major_vers=5], [have_qt=no])\n+          PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt5; litecoin_qt_got_major_vers=5], [have_qt=no])\n         fi\n       fi\n       if test x$have_qt != xyes; then\n         have_qt=no\n-        BITCOIN_QT_FAIL([Qt dependencies not found])\n+        LITECOIN_QT_FAIL([Qt dependencies not found])\n       fi\n     ])\n-    BITCOIN_QT_CHECK([\n+    LITECOIN_QT_CHECK([\n       PKG_CHECK_MODULES([QT_TEST], [${QT_LIB_PREFIX}Test], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n       if test x$use_dbus != xno; then\n         PKG_CHECK_MODULES([QT_DBUS], [${QT_LIB_PREFIX}DBus], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n@@ -423,66 +423,66 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n \n dnl Internal. Find Qt libraries without using pkg-config. Version is deduced\n dnl from the discovered headers.\n-dnl Inputs: bitcoin_qt_want_version (from --with-gui=). The version to use.\n-dnl         If \"auto\", the version will be discovered by _BITCOIN_QT_CHECK_QT5.\n+dnl Inputs: litecoin_qt_want_version (from --with-gui=). The version to use.\n+dnl         If \"auto\", the version will be discovered by _LITECOIN_QT_CHECK_QT5.\n dnl Outputs: All necessary QT_* variables are set.\n-dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n+dnl Outputs: litecoin_qt_got_major_vers is set to \"4\" or \"5\".\n dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n-AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n+AC_DEFUN([_LITECOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n   TEMP_CPPFLAGS=\"$CPPFLAGS\"\n   TEMP_CXXFLAGS=\"$CXXFLAGS\"\n   CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n   TEMP_LIBS=\"$LIBS\"\n-  BITCOIN_QT_CHECK([\n+  LITECOIN_QT_CHECK([\n     if test x$qt_include_path != x; then\n       QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtWidgets -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n       CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n     fi\n   ])\n \n-  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QtPlugin],,BITCOIN_QT_FAIL(QtCore headers missing))])\n-  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QApplication],, BITCOIN_QT_FAIL(QtGui headers missing))])\n-  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QLocalSocket],, BITCOIN_QT_FAIL(QtNetwork headers missing))])\n+  LITECOIN_QT_CHECK([AC_CHECK_HEADER([QtPlugin],,LITECOIN_QT_FAIL(QtCore headers missing))])\n+  LITECOIN_QT_CHECK([AC_CHECK_HEADER([QApplication],, LITECOIN_QT_FAIL(QtGui headers missing))])\n+  LITECOIN_QT_CHECK([AC_CHECK_HEADER([QLocalSocket],, LITECOIN_QT_FAIL(QtNetwork headers missing))])\n \n-  BITCOIN_QT_CHECK([\n-    if test x$bitcoin_qt_want_version = xauto; then\n-      _BITCOIN_QT_CHECK_QT5\n+  LITECOIN_QT_CHECK([\n+    if test x$litecoin_qt_want_version = xauto; then\n+      _LITECOIN_QT_CHECK_QT5\n     fi\n-    if test x$bitcoin_cv_qt5 = xyes || test x$bitcoin_qt_want_version = xqt5; then\n+    if test x$litecoin_cv_qt5 = xyes || test x$litecoin_qt_want_version = xqt5; then\n       QT_LIB_PREFIX=Qt5\n-      bitcoin_qt_got_major_vers=5\n+      litecoin_qt_got_major_vers=5\n     else\n       QT_LIB_PREFIX=Qt\n-      bitcoin_qt_got_major_vers=4\n+      litecoin_qt_got_major_vers=4\n     fi\n   ])\n \n-  BITCOIN_QT_CHECK([\n+  LITECOIN_QT_CHECK([\n     LIBS=\n     if test x$qt_lib_path != x; then\n       LIBS=\"$LIBS -L$qt_lib_path\"\n     fi\n \n     if test x$TARGET_OS = xwindows; then\n-      AC_CHECK_LIB([imm32],      [main],, BITCOIN_QT_FAIL(libimm32 not found))\n+      AC_CHECK_LIB([imm32],      [main],, LITECOIN_QT_FAIL(libimm32 not found))\n     fi\n   ])\n \n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([z] ,[main],,AC_MSG_WARN([zlib not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([png] ,[main],,AC_MSG_WARN([libpng not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([jpeg] ,[main],,AC_MSG_WARN([libjpeg not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([pcre16_exec], [qtpcre pcre16],,AC_MSG_WARN([libpcre16 not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([hb_ot_tags_from_script] ,[qtharfbuzzng harfbuzz],,AC_MSG_WARN([libharfbuzz not found. Assuming qt has it built-in or support is disabled])))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXCore not found)))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXGui not found)))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXNetwork not found)))\n-  if test x$bitcoin_qt_got_major_vers = x5; then\n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Widgets],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXWidgets not found)))\n+  LITECOIN_QT_CHECK(AC_CHECK_LIB([z] ,[main],,AC_MSG_WARN([zlib not found. Assuming qt has it built-in])))\n+  LITECOIN_QT_CHECK(AC_CHECK_LIB([png] ,[main],,AC_MSG_WARN([libpng not found. Assuming qt has it built-in])))\n+  LITECOIN_QT_CHECK(AC_CHECK_LIB([jpeg] ,[main],,AC_MSG_WARN([libjpeg not found. Assuming qt has it built-in])))\n+  LITECOIN_QT_CHECK(AC_SEARCH_LIBS([pcre16_exec], [qtpcre pcre16],,AC_MSG_WARN([libpcre16 not found. Assuming qt has it built-in])))\n+  LITECOIN_QT_CHECK(AC_SEARCH_LIBS([hb_ot_tags_from_script] ,[qtharfbuzzng harfbuzz],,AC_MSG_WARN([libharfbuzz not found. Assuming qt has it built-in or support is disabled])))\n+  LITECOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,LITECOIN_QT_FAIL(lib$QT_LIB_PREFIXCore not found)))\n+  LITECOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,LITECOIN_QT_FAIL(lib$QT_LIB_PREFIXGui not found)))\n+  LITECOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,LITECOIN_QT_FAIL(lib$QT_LIB_PREFIXNetwork not found)))\n+  if test x$litecoin_qt_got_major_vers = x5; then\n+    LITECOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Widgets],[main],,LITECOIN_QT_FAIL(lib$QT_LIB_PREFIXWidgets not found)))\n   fi\n   QT_LIBS=\"$LIBS\"\n   LIBS=\"$TEMP_LIBS\"\n \n-  BITCOIN_QT_CHECK([\n+  LITECOIN_QT_CHECK([\n     LIBS=\n     if test x$qt_lib_path != x; then\n       LIBS=\"-L$qt_lib_path\"",
        "previous_filename": "build-aux/m4/bitcoin_qt.m4"
      },
      {
        "sha": "54c94e15b1f2a32433c1cc7f41b20856dda61f70",
        "filename": "build-aux/m4/litecoin_subdir_to_include.m4",
        "status": "renamed",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/build-aux/m4/litecoin_subdir_to_include.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/build-aux/m4/litecoin_subdir_to_include.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/litecoin_subdir_to_include.m4?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,6 +1,6 @@\n-dnl BITCOIN_SUBDIR_TO_INCLUDE([CPPFLAGS-VARIABLE-NAME],[SUBDIRECTORY-NAME],[HEADER-FILE])\n+dnl LITECOIN_SUBDIR_TO_INCLUDE([CPPFLAGS-VARIABLE-NAME],[SUBDIRECTORY-NAME],[HEADER-FILE])\n dnl SUBDIRECTORY-NAME must end with a path separator\n-AC_DEFUN([BITCOIN_SUBDIR_TO_INCLUDE],[\n+AC_DEFUN([LITECOIN_SUBDIR_TO_INCLUDE],[\n   if test \"x$2\" = \"x\"; then\n     AC_MSG_RESULT([default])\n   else",
        "previous_filename": "build-aux/m4/bitcoin_subdir_to_include.m4"
      },
      {
        "sha": "1c6fe6d077224c952980b62438247b68e690b538",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 56,
        "deletions": 56,
        "changes": 112,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -7,23 +7,23 @@ define(_CLIENT_VERSION_BUILD, 0)\n define(_CLIENT_VERSION_IS_RELEASE, true)\n define(_COPYRIGHT_YEAR, 2016)\n define(_COPYRIGHT_HOLDERS,[The %s developers])\n-define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Bitcoin Core]])\n-AC_INIT([Bitcoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/bitcoin/bitcoin/issues],[bitcoin],[https://bitcoincore.org/])\n+define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Litecoin Core]])\n+AC_INIT([Litecoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/wangxinxi/litecoin/issues],[litecoin],[https://litecoincore.org/])\n AC_CONFIG_SRCDIR([src/main.cpp])\n-AC_CONFIG_HEADERS([src/config/bitcoin-config.h])\n+AC_CONFIG_HEADERS([src/config/litecoin-config.h])\n AC_CONFIG_AUX_DIR([build-aux])\n AC_CONFIG_MACRO_DIR([build-aux/m4])\n \n-BITCOIN_DAEMON_NAME=bitcoind\n-BITCOIN_GUI_NAME=bitcoin-qt\n-BITCOIN_CLI_NAME=bitcoin-cli\n-BITCOIN_TX_NAME=bitcoin-tx\n+LITECOIN_DAEMON_NAME=litecoind\n+LITECOIN_GUI_NAME=litecoin-qt\n+LITECOIN_CLI_NAME=litecoin-cli\n+LITECOIN_TX_NAME=litecoin-tx\n \n AC_CANONICAL_HOST\n \n-AH_TOP([#ifndef BITCOIN_CONFIG_H])\n-AH_TOP([#define BITCOIN_CONFIG_H])\n-AH_BOTTOM([#endif //BITCOIN_CONFIG_H])\n+AH_TOP([#ifndef LITECOIN_CONFIG_H])\n+AH_TOP([#define LITECOIN_CONFIG_H])\n+AH_BOTTOM([#endif //LITECOIN_CONFIG_H])\n \n dnl faketime breaks configure and is only needed for make. Disable it here.\n unset FAKETIME\n@@ -67,7 +67,7 @@ AC_PATH_TOOL(STRIP, strip)\n AC_PATH_TOOL(GCOV, gcov)\n AC_PATH_PROG(LCOV, lcov)\n AC_PATH_PROG(JAVA, java)\n-dnl Python 3.x is supported from 3.4 on (see https://github.com/bitcoin/bitcoin/issues/7893)\n+dnl Python 3.x is supported from 3.4 on (see https://github.com/wangxinxi/litecoin/issues/7893)\n AC_PATH_PROGS([PYTHON], [python3.6 python3.5 python3.4 python3 python2.7 python2 python])\n AC_PATH_PROG(GENHTML, genhtml)\n AC_PATH_PROG([GIT], [git])\n@@ -218,21 +218,21 @@ CPPFLAGS=\"$CPPFLAGS -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n \n AC_ARG_WITH([utils],\n   [AS_HELP_STRING([--with-utils],\n-  [build bitcoin-cli bitcoin-tx (default=yes)])],\n-  [build_bitcoin_utils=$withval],\n-  [build_bitcoin_utils=yes])\n+  [build litecoin-cli litecoin-tx (default=yes)])],\n+  [build_litecoin_utils=$withval],\n+  [build_litecoin_utils=yes])\n \n AC_ARG_WITH([libs],\n   [AS_HELP_STRING([--with-libs],\n   [build libraries (default=yes)])],\n-  [build_bitcoin_libs=$withval],\n-  [build_bitcoin_libs=yes])\n+  [build_litecoin_libs=$withval],\n+  [build_litecoin_libs=yes])\n \n AC_ARG_WITH([daemon],\n   [AS_HELP_STRING([--with-daemon],\n-  [build bitcoind daemon (default=yes)])],\n-  [build_bitcoind=$withval],\n-  [build_bitcoind=yes])\n+  [build litecoind daemon (default=yes)])],\n+  [build_litecoind=$withval],\n+  [build_litecoind=yes])\n \n use_pkgconfig=yes\n case $host in\n@@ -437,7 +437,7 @@ AC_C_BIGENDIAN\n dnl Check for pthread compile/link requirements\n AX_PTHREAD\n \n-# The following macro will add the necessary defines to bitcoin-config.h, but\n+# The following macro will add the necessary defines to litecoin-config.h, but\n # they also need to be passed down to any subprojects. Pull the results out of\n # the cache and add them to CPPFLAGS.\n AC_SYS_LARGEFILE\n@@ -581,7 +581,7 @@ AC_SUBST(LIBMEMENV)\n \n if test x$enable_wallet != xno; then\n     dnl Check for libdb_cxx only if wallet enabled\n-    BITCOIN_FIND_BDB48\n+    LITECOIN_FIND_BDB48\n fi\n \n dnl Check for libminiupnpc (optional)\n@@ -593,12 +593,12 @@ if test x$use_upnp != xno; then\n   )\n fi\n \n-BITCOIN_QT_INIT\n+LITECOIN_QT_INIT\n \n-dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n-BITCOIN_QT_CONFIGURE([$use_pkgconfig], [qt5])\n+dnl sets $litecoin_enable_qt, $litecoin_enable_qt_test, $litecoin_enable_qt_dbus\n+LITECOIN_QT_CONFIGURE([$use_pkgconfig], [qt5])\n \n-if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononono; then\n+if test x$build_litecoin_utils$build_litecoind$litecoin_enable_qt$use_tests$use_bench = xnonononono; then\n     use_boost=no\n else\n     use_boost=yes\n@@ -773,11 +773,11 @@ if test x$use_pkgconfig = xyes; then\n     [\n       PKG_CHECK_MODULES([SSL], [libssl],, [AC_MSG_ERROR(openssl  not found.)])\n       PKG_CHECK_MODULES([CRYPTO], [libcrypto],,[AC_MSG_ERROR(libcrypto  not found.)])\n-      BITCOIN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [BITCOIN_QT_FAIL(libprotobuf not found)])])\n+      LITECOIN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [LITECOIN_QT_FAIL(libprotobuf not found)])])\n       if test x$use_qr != xno; then\n-        BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n+        LITECOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n       fi\n-      if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n+      if test x$build_litecoin_utils$build_litecoind$litecoin_enable_qt$use_tests != xnononono; then\n         PKG_CHECK_MODULES([EVENT], [libevent],, [AC_MSG_ERROR(libevent not found.)])\n         if test x$TARGET_OS != xwindows; then\n           PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads],, [AC_MSG_ERROR(libevent_pthreads not found.)])\n@@ -802,7 +802,7 @@ else\n   AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)\n   AC_CHECK_LIB([ssl],         [main],SSL_LIBS=-lssl, AC_MSG_ERROR(libssl missing))\n \n-  if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n+  if test x$build_litecoin_utils$build_litecoind$litecoin_enable_qt$use_tests != xnononono; then\n     AC_CHECK_HEADER([event2/event.h],, AC_MSG_ERROR(libevent headers missing),)\n     AC_CHECK_LIB([event],[main],EVENT_LIBS=-levent,AC_MSG_ERROR(libevent missing))\n     if test x$TARGET_OS != xwindows; then\n@@ -824,10 +824,10 @@ else\n     AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n   fi\n \n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], BITCOIN_QT_FAIL(libprotobuf not found)))\n+  LITECOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], LITECOIN_QT_FAIL(libprotobuf not found)))\n   if test x$use_qr != xno; then\n-    BITCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])\n-    BITCOIN_QT_CHECK([AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)])\n+    LITECOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])\n+    LITECOIN_QT_CHECK([AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)])\n   fi\n fi\n \n@@ -869,23 +869,23 @@ AM_CONDITIONAL([EMBEDDED_UNIVALUE],[test x$system_univalue = xno])\n AC_SUBST(UNIVALUE_CFLAGS)\n AC_SUBST(UNIVALUE_LIBS)\n \n-BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)\n+LITECOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)\n \n-AC_MSG_CHECKING([whether to build bitcoind])\n-AM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])\n-AC_MSG_RESULT($build_bitcoind)\n+AC_MSG_CHECKING([whether to build litecoind])\n+AM_CONDITIONAL([BUILD_LITECOIND], [test x$build_litecoind = xyes])\n+AC_MSG_RESULT($build_litecoind)\n \n-AC_MSG_CHECKING([whether to build utils (bitcoin-cli bitcoin-tx)])\n-AM_CONDITIONAL([BUILD_BITCOIN_UTILS], [test x$build_bitcoin_utils = xyes])\n-AC_MSG_RESULT($build_bitcoin_utils)\n+AC_MSG_CHECKING([whether to build utils (litecoin-cli litecoin-tx)])\n+AM_CONDITIONAL([BUILD_LITECOIN_UTILS], [test x$build_litecoin_utils = xyes])\n+AC_MSG_RESULT($build_litecoin_utils)\n \n AC_MSG_CHECKING([whether to build libraries])\n-AM_CONDITIONAL([BUILD_BITCOIN_LIBS], [test x$build_bitcoin_libs = xyes])\n-if test x$build_bitcoin_libs = xyes; then\n+AM_CONDITIONAL([BUILD_LITECOIN_LIBS], [test x$build_litecoin_libs = xyes])\n+if test x$build_litecoin_libs = xyes; then\n   AC_DEFINE(HAVE_CONSENSUS_LIB, 1, [Define this symbol if the consensus lib has been built])\n-  AC_CONFIG_FILES([libbitcoinconsensus.pc:libbitcoinconsensus.pc.in])\n+  AC_CONFIG_FILES([liblitecoinconsensus.pc:liblitecoinconsensus.pc.in])\n fi\n-AC_MSG_RESULT($build_bitcoin_libs)\n+AC_MSG_RESULT($build_litecoin_libs)\n \n AC_LANG_POP\n \n@@ -947,13 +947,13 @@ fi\n \n dnl these are only used when qt is enabled\n BUILD_TEST_QT=\"\"\n-if test x$bitcoin_enable_qt != xno; then\n+if test x$litecoin_enable_qt != xno; then\n   dnl enable dbus support\n   AC_MSG_CHECKING([whether to build GUI with support for D-Bus])\n-  if test x$bitcoin_enable_qt_dbus != xno; then\n+  if test x$litecoin_enable_qt_dbus != xno; then\n     AC_DEFINE([USE_DBUS],[1],[Define if dbus support should be compiled in])\n   fi\n-  AC_MSG_RESULT($bitcoin_enable_qt_dbus)\n+  AC_MSG_RESULT($litecoin_enable_qt_dbus)\n \n   dnl enable qr support\n   AC_MSG_CHECKING([whether to build GUI with support for QR codes])\n@@ -976,8 +976,8 @@ if test x$bitcoin_enable_qt != xno; then\n     AC_MSG_WARN(\"xgettext is required to update qt translations\")\n   fi\n \n-  AC_MSG_CHECKING([whether to build test_bitcoin-qt])\n-  if test x$use_gui_tests$bitcoin_enable_qt_test = xyesyes; then\n+  AC_MSG_CHECKING([whether to build test_litecoin-qt])\n+  if test x$use_gui_tests$litecoin_enable_qt_test = xyesyes; then\n     AC_MSG_RESULT([yes])\n     BUILD_TEST_QT=\"yes\"\n   else\n@@ -987,7 +987,7 @@ fi\n \n AM_CONDITIONAL([ENABLE_ZMQ], [test \"x$use_zmq\" = \"xyes\"])\n \n-AC_MSG_CHECKING([whether to build test_bitcoin])\n+AC_MSG_CHECKING([whether to build test_litecoin])\n if test x$use_tests = xyes; then\n   AC_MSG_RESULT([yes])\n   BUILD_TEST=\"yes\"\n@@ -1003,7 +1003,7 @@ else\n   AC_MSG_RESULT([no])\n fi\n \n-if test x$build_bitcoin_utils$build_bitcoin_libs$build_bitcoind$bitcoin_enable_qt$use_tests = xnonononono; then\n+if test x$build_litecoin_utils$build_litecoin_libs$build_litecoind$litecoin_enable_qt$use_tests = xnonononono; then\n   AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-libs --with-daemon --with-gui or --enable-tests])\n fi\n \n@@ -1012,7 +1012,7 @@ AM_CONDITIONAL([BUILD_DARWIN], [test x$BUILD_OS = xdarwin])\n AM_CONDITIONAL([TARGET_WINDOWS], [test x$TARGET_OS = xwindows])\n AM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet = xyes])\n AM_CONDITIONAL([ENABLE_TESTS],[test x$BUILD_TEST = xyes])\n-AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])\n+AM_CONDITIONAL([ENABLE_QT],[test x$litecoin_enable_qt = xyes])\n AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$BUILD_TEST_QT = xyes])\n AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])\n AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n@@ -1041,10 +1041,10 @@ AC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)\n AC_SUBST(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\")\n AC_SUBST(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\")\n AC_SUBST(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\")\n-AC_SUBST(BITCOIN_DAEMON_NAME)\n-AC_SUBST(BITCOIN_GUI_NAME)\n-AC_SUBST(BITCOIN_CLI_NAME)\n-AC_SUBST(BITCOIN_TX_NAME)\n+AC_SUBST(LITECOIN_DAEMON_NAME)\n+AC_SUBST(LITECOIN_GUI_NAME)\n+AC_SUBST(LITECOIN_CLI_NAME)\n+AC_SUBST(LITECOIN_TX_NAME)\n \n AC_SUBST(RELDFLAGS)\n AC_SUBST(HARDENED_CXXFLAGS)\n@@ -1068,7 +1068,7 @@ AC_SUBST(ZMQ_LIBS)\n AC_SUBST(PROTOBUF_LIBS)\n AC_SUBST(QR_LIBS)\n AC_CONFIG_FILES([Makefile src/Makefile share/setup.nsi share/qt/Info.plist src/test/buildenv.py])\n-AC_CONFIG_FILES([qa/pull-tester/run-bitcoind-for-test.sh],[chmod +x qa/pull-tester/run-bitcoind-for-test.sh])\n+AC_CONFIG_FILES([qa/pull-tester/run-litecoind-for-test.sh],[chmod +x qa/pull-tester/run-litecoind-for-test.sh])\n AC_CONFIG_FILES([qa/pull-tester/tests_config.py],[chmod +x qa/pull-tester/tests_config.py])\n AC_CONFIG_FILES([contrib/devtools/split-debug.sh],[chmod +x contrib/devtools/split-debug.sh])\n AC_CONFIG_LINKS([qa/pull-tester/rpc-tests.py:qa/pull-tester/rpc-tests.py])"
      },
      {
        "sha": "635951cc02843fa4ef3e1b333df18a5ed92c21f2",
        "filename": "contrib/README.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/README.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -21,7 +21,7 @@ Construct a linear, no-fork, best version of the blockchain.\n \n ### [Qos](/contrib/qos) ###\n \n-A Linux bash script that will set up traffic control (tc) to limit the outgoing bandwidth for connections to the Bitcoin network. This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it.\n+A Linux bash script that will set up traffic control (tc) to limit the outgoing bandwidth for connections to the Litecoin network. This means one can have an always-on litecoind instance running, and another local litecoind/litecoin-qt instance which connects to this node and receives blocks from it.\n \n ### [Seeds](/contrib/seeds) ###\n Utility to generate the pnSeed[] array that is compiled into the client.\n@@ -30,26 +30,26 @@ Build Tools and Keys\n ---------------------\n \n ### [Debian](/contrib/debian) ###\n-Contains files used to package bitcoind/bitcoin-qt\n-for Debian-based Linux systems. If you compile bitcoind/bitcoin-qt yourself, there are some useful files here.\n+Contains files used to package litecoind/litecoin-qt\n+for Debian-based Linux systems. If you compile litecoind/litecoin-qt yourself, there are some useful files here.\n \n ### [Gitian-descriptors](/contrib/gitian-descriptors) ###\n Notes on getting Gitian builds up and running using KVM.\n \n ### [Gitian-keys](/contrib/gitian-keys)\n-PGP keys used for signing Bitcoin Core [Gitian release](/doc/release-process.md) results.\n+PGP keys used for signing Litecoin Core [Gitian release](/doc/release-process.md) results.\n \n ### [MacDeploy](/contrib/macdeploy) ###\n Scripts and notes for Mac builds. \n \n ### [RPM](/contrib/rpm) ###\n-RPM spec file for building bitcoin-core on RPM based distributions\n+RPM spec file for building litecoin-core on RPM based distributions\n \n Test and Verify Tools \n ---------------------\n \n ### [TestGen](/contrib/testgen) ###\n-Utilities to generate test vectors for the data-driven Bitcoin tests.\n+Utilities to generate test vectors for the data-driven Litecoin tests.\n \n ### [Verify Binaries](/contrib/verifybinaries) ###\n-This script attempts to download and verify the signature file SHA256SUMS.asc from bitcoin.org.\n+This script attempts to download and verify the signature file SHA256SUMS.asc from litecoin.org."
      },
      {
        "sha": "968a77e219053ca81d429e39c890f3ae3b36092f",
        "filename": "contrib/debian/README.md",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/README.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,21 +1,21 @@\n \n Debian\n ====================\n-This directory contains files used to package bitcoind/bitcoin-qt\n-for Debian-based Linux systems. If you compile bitcoind/bitcoin-qt yourself, there are some useful files here.\n+This directory contains files used to package litecoind/litecoin-qt\n+for Debian-based Linux systems. If you compile litecoind/litecoin-qt yourself, there are some useful files here.\n \n-## bitcoin: URI support ##\n+## litecoin: URI support ##\n \n \n-bitcoin-qt.desktop  (Gnome / Open Desktop)\n+litecoin-qt.desktop  (Gnome / Open Desktop)\n To install:\n \n-\tsudo desktop-file-install bitcoin-qt.desktop\n+\tsudo desktop-file-install litecoin-qt.desktop\n \tsudo update-desktop-database\n \n If you build yourself, you will either need to modify the paths in\n-the .desktop file or copy or symlink your bitcoin-qt binary to `/usr/bin`\n-and the `../../share/pixmaps/bitcoin128.png` to `/usr/share/pixmaps`\n+the .desktop file or copy or symlink your litecoin-qt binary to `/usr/bin`\n+and the `../../share/pixmaps/litecoin128.png` to `/usr/share/pixmaps`\n \n-bitcoin-qt.protocol (KDE)\n+litecoin-qt.protocol (KDE)\n "
      },
      {
        "sha": "61e1aca6ad0ce17519af59f6da4afdd9521b79a8",
        "filename": "contrib/debian/bitcoin-qt.desktop",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/debian/bitcoin-qt.desktop",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/debian/bitcoin-qt.desktop",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.desktop?ref=8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311",
        "patch": "@@ -1,12 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Name=Bitcoin\n-Comment=Bitcoin P2P Cryptocurrency\n-Comment[fr]=Bitcoin, monnaie virtuelle cryptographique pair \u00e0 pair\n-Comment[tr]=Bitcoin, e\u015ften e\u015fe kriptografik sanal para birimi\n-Exec=bitcoin-qt %u\n-Terminal=false\n-Type=Application\n-Icon=bitcoin128\n-MimeType=x-scheme-handler/bitcoin;\n-Categories=Office;Finance;"
      },
      {
        "sha": "e0b32373be68d74e075a779f083b3dededc574d7",
        "filename": "contrib/debian/bitcoin-qt.install",
        "status": "removed",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/debian/bitcoin-qt.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/debian/bitcoin-qt.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.install?ref=8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311",
        "patch": "@@ -1,6 +0,0 @@\n-usr/local/bin/bitcoin-qt usr/bin\n-share/pixmaps/bitcoin32.xpm usr/share/pixmaps\n-share/pixmaps/bitcoin16.xpm usr/share/pixmaps\n-share/pixmaps/bitcoin128.png usr/share/pixmaps\n-debian/bitcoin-qt.desktop usr/share/applications\n-debian/bitcoin-qt.protocol usr/share/kde4/services/"
      },
      {
        "sha": "7acb0b0aea668dd16129434813d05c0306617b68",
        "filename": "contrib/debian/bitcoin-tx.bash-completion",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/debian/bitcoin-tx.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/debian/bitcoin-tx.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.bash-completion?ref=8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311",
        "patch": "@@ -1 +0,0 @@\n-contrib/bitcoin-tx.bash-completion\tbitcoin-tx"
      },
      {
        "sha": "2c21052a6876b4a0f94b79858ae1d164cf179b21",
        "filename": "contrib/debian/bitcoin-tx.install",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/debian/bitcoin-tx.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/debian/bitcoin-tx.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.install?ref=8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311",
        "patch": "@@ -1 +0,0 @@\n-usr/local/bin/bitcoin-tx usr/bin"
      },
      {
        "sha": "5c69d78fbb0fc73017167bab3d8a1c6a78e85ed9",
        "filename": "contrib/debian/bitcoind.bash-completion",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/debian/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/debian/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.bash-completion?ref=8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311",
        "patch": "@@ -1,2 +0,0 @@\n-contrib/bitcoind.bash-completion\tbitcoind\n-contrib/bitcoin-cli.bash-completion\tbitcoin-cli"
      },
      {
        "sha": "4ded67d98e784e275c76839e7b06b413d774230e",
        "filename": "contrib/debian/bitcoind.examples",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/debian/bitcoind.examples",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/debian/bitcoind.examples",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.examples?ref=8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311",
        "patch": "@@ -1 +0,0 @@\n-debian/examples/bitcoin.conf"
      },
      {
        "sha": "798ea851f6ef8a01e19984221efd327625fda92d",
        "filename": "contrib/debian/bitcoind.install",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/debian/bitcoind.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/debian/bitcoind.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.install?ref=8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311",
        "patch": "@@ -1,2 +0,0 @@\n-usr/local/bin/bitcoind usr/bin\n-usr/local/bin/bitcoin-cli usr/bin"
      },
      {
        "sha": "6d3e683855018ec721d97853b0d5c9b90edd5c35",
        "filename": "contrib/debian/bitcoind.manpages",
        "status": "removed",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/debian/bitcoind.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/debian/bitcoind.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.manpages?ref=8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311",
        "patch": "@@ -1,3 +0,0 @@\n-debian/manpages/bitcoind.1\n-debian/manpages/bitcoin.conf.5\n-debian/manpages/bitcoin-cli.1"
      },
      {
        "sha": "1416363b0c4e53353edb57c2c27a49eb505b1659",
        "filename": "contrib/debian/changelog",
        "status": "modified",
        "additions": 68,
        "deletions": 68,
        "changes": 136,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/changelog",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/changelog",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/changelog?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,245 +1,245 @@\n-bitcoin (0.11.0-precise1) precise; urgency=medium\n+litecoin (0.11.0-precise1) precise; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 14 Jul 2015 14:39:00 -1000\n \n-bitcoin (0.10.2-precise1) precise; urgency=medium\n+litecoin (0.10.2-precise1) precise; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 29 Jun 2015 17:33:00 -1000\n \n-bitcoin (0.10.1-precise3) precise; urgency=medium\n+litecoin (0.10.1-precise3) precise; urgency=medium\n \n   * Fix build dep (include python).\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 09:28:00 -1000\n \n-bitcoin (0.10.1-precise2) precise; urgency=medium\n+litecoin (0.10.1-precise2) precise; urgency=medium\n \n   * Fix miniupnpc dep.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 00:33:00 -1000\n \n-bitcoin (0.10.1-precise1) precise; urgency=medium\n+litecoin (0.10.1-precise1) precise; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 00:07:00 -1000\n \n-bitcoin (0.10.0-precise1) precise; urgency=medium\n+litecoin (0.10.0-precise1) precise; urgency=medium\n \n   * New upstream releases.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 18 Feb 2015 13:22:00 -1000\n \n-bitcoin (0.9.4-precise1) precise; urgency=high\n+litecoin (0.9.4-precise1) precise; urgency=high\n \n   * New upstream releases.\n \n  -- Matt Corallo (laptop - only while traveling) <matt@mattcorallo.com>  Mon, 12 Jan 2015 23:30:00 -1000\n \n-bitcoin (0.9.3-precise1) precise; urgency=medium\n+litecoin (0.9.3-precise1) precise; urgency=medium\n \n   * New upstream releases.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 26 Sep 2014 12:01:00 -0700\n \n-bitcoin (0.9.1-precise1) precise; urgency=medium\n+litecoin (0.9.1-precise1) precise; urgency=medium\n \n   * New upstream release.\n   * Backport pull #4019\n \n  -- Matt Corallo <matt@bluematt.me>  Sat, 19 Apr 2014 17:29:00 -0400\n \n-bitcoin (0.9.0-precise1) precise; urgency=medium\n+litecoin (0.9.0-precise1) precise; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Thu, 20 Mar 2014 13:10:00 -0400\n \n-bitcoin (0.8.6-precise1) precise; urgency=medium\n+litecoin (0.8.6-precise1) precise; urgency=medium\n \n   * New upstream release.\n   * Make .desktop paths non-fixed (suggested by prusnak@github)\n \n  -- Matt Corallo <matt@bluematt.me>  Fri, 13 Dec 2013 13:31:00 -0400\n \n-bitcoin (0.8.5-precise1) precise; urgency=medium\n+litecoin (0.8.5-precise1) precise; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Sun, 15 Sep 2013 14:02:00 -0400\n \n-bitcoin (0.8.4-precise1) precise; urgency=medium\n+litecoin (0.8.4-precise1) precise; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 4 Sep 2013 10:25:00 -0400\n \n-bitcoin (0.8.3-natty1) natty; urgency=low\n+litecoin (0.8.3-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 26 Jun 2013 00:18:00 +0100\n \n-bitcoin (0.8.2-natty1) natty; urgency=low\n+litecoin (0.8.2-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 29 Mar 2013 23:23:00 +0100\n \n-bitcoin (0.8.1-natty3) natty; urgency=low\n+litecoin (0.8.1-natty3) natty; urgency=low\n \n   * New pixmaps\n \n  -- Jonas Schnelli <jonas.schnelli@include7.ch>  Mon, 13 May 2013 16:14:00 +0100\n \n-bitcoin (0.8.1-natty2) natty; urgency=low\n+litecoin (0.8.1-natty2) natty; urgency=low\n \n   * Remove dumb broken launcher script\n \n  -- Matt Corallo <matt@bluematt.me>  Sun, 24 Mar 2013 20:01:00 -0400\n \n-bitcoin (0.8.1-natty1) natty; urgency=low\n+litecoin (0.8.1-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Tue, 19 Mar 2013 13:03:00 -0400\n \n-bitcoin (0.8.0-natty1) natty; urgency=low\n+litecoin (0.8.0-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Sat, 23 Feb 2013 16:01:00 -0500\n \n-bitcoin (0.7.2-natty1) natty; urgency=low\n+litecoin (0.7.2-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Sat, 15 Dec 2012 10:59:00 -0400\n \n-bitcoin (0.7.1-natty1) natty; urgency=low\n+litecoin (0.7.1-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 24 Oct 2012 15:06:00 -0400\n \n-bitcoin (0.7.0-natty1) natty; urgency=low\n+litecoin (0.7.0-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Mon, 17 Sep 2012 13:45:00 +0200\n \n-bitcoin (0.6.3-natty1) natty; urgency=low\n+litecoin (0.6.3-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Mon, 25 Jun 2012 23:47:00 +0200\n \n-bitcoin (0.6.2-natty1) natty; urgency=low\n+litecoin (0.6.2-natty1) natty; urgency=low\n \n   * Update package description and launch scripts.\n \n  -- Matt Corallo <matt@bluematt.me>  Sat, 2 Jun 2012 16:41:00 +0200\n \n-bitcoin (0.6.2-natty0) natty; urgency=low\n+litecoin (0.6.2-natty0) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Tue, 8 May 2012 16:27:00 -0500\n \n-bitcoin (0.6.1-natty0) natty; urgency=low\n+litecoin (0.6.1-natty0) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Sun, 6 May 2012 20:09:00 -0500\n \n-bitcoin (0.6.0-natty0) natty; urgency=low\n+litecoin (0.6.0-natty0) natty; urgency=low\n \n   * New upstream release.\n-  * Add GNOME/KDE support for bitcoin-qt's bitcoin: URI support.\n+  * Add GNOME/KDE support for litecoin-qt's litecoin: URI support.\n     Thanks to luke-jr for the KDE .protocol file.\n \n  -- Matt Corallo <matt@bluematt.me>  Sat, 31 Mar 2012 15:35:00 -0500\n \n-bitcoin (0.5.3-natty1) natty; urgency=low\n+litecoin (0.5.3-natty1) natty; urgency=low\n \n   * Mark for upload to PPA.\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 14 Mar 2012 23:06:00 -0400\n \n-bitcoin (0.5.3-natty0) natty; urgency=low\n+litecoin (0.5.3-natty0) natty; urgency=low\n \n   * New upstream release.\n \n- -- Luke Dashjr <luke+bitcoin+deb@dashjr.org>  Tue, 10 Jan 2012 15:57:00 -0500\n+ -- Luke Dashjr <luke+litecoin+deb@dashjr.org>  Tue, 10 Jan 2012 15:57:00 -0500\n \n-bitcoin (0.5.2-natty1) natty; urgency=low\n+litecoin (0.5.2-natty1) natty; urgency=low\n \n   * Remove mentions on anonymity in package descriptions and manpage.\n-    These should never have been there, bitcoin isn't anonymous without\n+    These should never have been there, litecoin isn't anonymous without\n     a ton of work that virtually no users will ever be willing and\n     capable of doing\n \n  -- Matt Corallo <matt@bluematt.me>  Sat, 7 Jan 2012 13:37:00 -0500\n \n-bitcoin (0.5.2-natty0) natty; urgency=low\n+litecoin (0.5.2-natty0) natty; urgency=low\n \n   * New upstream release.\n \n- -- Luke Dashjr <luke+bitcoin+deb@dashjr.org>  Fri, 16 Dec 2011 17:57:00 -0500\n+ -- Luke Dashjr <luke+litecoin+deb@dashjr.org>  Fri, 16 Dec 2011 17:57:00 -0500\n \n-bitcoin (0.5.1-natty0) natty; urgency=low\n+litecoin (0.5.1-natty0) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Fri, 16 Dec 2011 13:27:00 -0500\n \n-bitcoin (0.5.0-natty0) natty; urgency=low\n+litecoin (0.5.0-natty0) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Mon, 21 Nov 2011 11:32:00 -0500\n \n-bitcoin (0.5.0~rc7-natty0) natty; urgency=low\n+litecoin (0.5.0~rc7-natty0) natty; urgency=low\n \n   * New upstream release candidate.\n \n  -- Matt Corallo <matt@bluematt.me>  Sun, 20 Nov 2011 17:08:00 -0500\n \n-bitcoin (0.5.0~rc3-natty0) natty; urgency=low\n+litecoin (0.5.0~rc3-natty0) natty; urgency=low\n \n   * New upstream release candidate.\n-  * Don't set rpcpassword for bitcoin-qt.\n+  * Don't set rpcpassword for litecoin-qt.\n \n  -- Matt Corallo <matt@bluematt.me>  Tue, 8 Nov 2011 11:56:00 -0400\n \n-bitcoin (0.5.0~rc1-natty1) natty; urgency=low\n+litecoin (0.5.0~rc1-natty1) natty; urgency=low\n \n-  * Add test_bitcoin to build test\n+  * Add test_litecoin to build test\n   * Fix clean\n   * Remove unnecessary build-dependancies\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 26 Oct 2011 14:37:18 -0400\n \n-bitcoin (0.5.0~rc1-natty0) natty; urgency=low\n+litecoin (0.5.0~rc1-natty0) natty; urgency=low\n \n   * Mark for natty\n   * Fix broken build\n   * Fix copyright listing\n-  * Remove bitcoin: URL handler until bitcoin actually has support for it (Oops)\n+  * Remove litecoin: URL handler until litecoin actually has support for it (Oops)\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 26 Oct 2011 14:37:18 -0400\n \n-bitcoin (0.5.0~rc1-2) experimental; urgency=low\n+litecoin (0.5.0~rc1-2) experimental; urgency=low\n \n-  * Add bitcoin-qt\n+  * Add litecoin-qt\n \n  -- Matt Corallo <matt@bluematt.me>  Tue, 25 Oct 2011 15:24:18 -0400\n \n-bitcoin (0.5.0~rc1-1) experimental; urgency=low\n+litecoin (0.5.0~rc1-1) experimental; urgency=low\n \n   * New upstream prerelease.\n   * Add Github as alternate upstream source in watch file.\n@@ -250,7 +250,7 @@ bitcoin (0.5.0~rc1-1) experimental; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Fri, 14 Oct 2011 00:16:18 +0200\n \n-bitcoin (0.4.0-1) unstable; urgency=low\n+litecoin (0.4.0-1) unstable; urgency=low\n \n   * New upstream release.\n   * Stop repackaging source tarballs: No DFSG-violating stripping left.\n@@ -259,7 +259,7 @@ bitcoin (0.4.0-1) unstable; urgency=low\n   * Drop dpkg-source local-options hint: Declared options are default\n     since dpkg-source 1.16.1.\n     + Add irc URL to Upstream-Contact.\n-    + Add comment on Bitcoin Developers to catch-all Files section.\n+    + Add comment on Litecoin Developers to catch-all Files section.\n     + Add Files sections for newly readded src/cryptopp/* (new custom\n       BSD-like license), and newly added doc/build-osx.txt and\n       src/makefile.osx (Expat).\n@@ -278,13 +278,13 @@ bitcoin (0.4.0-1) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Wed, 05 Oct 2011 01:48:53 +0200\n \n-bitcoin (0.3.24~dfsg-1) unstable; urgency=low\n+litecoin (0.3.24~dfsg-1) unstable; urgency=low\n \n   * New upstream release.\n \n   [ Jonas Smedegaard ]\n   * Improve various usage hints:\n-    + Explicitly mention in long description that bitcoind contains\n+    + Explicitly mention in long description that litecoind contains\n       daemon and command-line interface.\n     + Extend README.Debian with section on lack of GUI, and add primary\n       headline.\n@@ -305,7 +305,7 @@ bitcoin (0.3.24~dfsg-1) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Tue, 19 Jul 2011 15:08:54 +0200\n \n-bitcoin (0.3.21~dfsg-2) unstable; urgency=low\n+litecoin (0.3.21~dfsg-2) unstable; urgency=low\n \n   * Enable UPNP support:\n     + Drop patch 1006.\n@@ -314,7 +314,7 @@ bitcoin (0.3.21~dfsg-2) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Sat, 28 May 2011 15:52:44 +0200\n \n-bitcoin (0.3.21~dfsg-1) unstable; urgency=low\n+litecoin (0.3.21~dfsg-1) unstable; urgency=low\n \n   * New upstream release.\n   * Refresh patches.\n@@ -327,7 +327,7 @@ bitcoin (0.3.21~dfsg-1) unstable; urgency=low\n   * Bump policy compliance to standards-version 3.9.2.\n   * Shorten Vcs-Browser paragraph in control file.\n   * Fix mention daemon (not CLI tools) in short description.\n-  * Stop conflicting with or replace bitcoin-cli: Only transitional, no\n+  * Stop conflicting with or replace litecoin-cli: Only transitional, no\n     longer needed.\n   * Link against unversioned berkeleydb. Update NEWS and README.Debian\n     accordingly (and improve wording while at it).\n@@ -339,7 +339,7 @@ bitcoin (0.3.21~dfsg-1) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Tue, 17 May 2011 15:31:24 +0200\n \n-bitcoin (0.3.20.2~dfsg-2) unstable; urgency=medium\n+litecoin (0.3.20.2~dfsg-2) unstable; urgency=medium\n \n   * Fix have wrapper script execute real binary (not loop executing\n     itself).\n@@ -349,36 +349,36 @@ bitcoin (0.3.20.2~dfsg-2) unstable; urgency=medium\n \n  -- Jonas Smedegaard <dr@jones.dk>  Wed, 16 Mar 2011 09:11:06 +0100\n \n-bitcoin (0.3.20.2~dfsg-1) unstable; urgency=low\n+litecoin (0.3.20.2~dfsg-1) unstable; urgency=low\n \n   * New upstream release.\n-  * Fix provide and replace former package name bitcoin-cli.\n+  * Fix provide and replace former package name litecoin-cli.\n     Closes: bug#618439. Thanks to Shane Wegner.\n \n  -- Jonas Smedegaard <dr@jones.dk>  Tue, 15 Mar 2011 11:41:43 +0100\n \n-bitcoin (0.3.20.01~dfsg-1) unstable; urgency=low\n+litecoin (0.3.20.01~dfsg-1) unstable; urgency=low\n \n   * New upstream release.\n \n   [ Micah Anderson ]\n   * Add myself as uploader.\n \n   [ Jonas Smedegaard ]\n-  * Add wrapper for bitcoind to ease initial startup.\n+  * Add wrapper for litecoind to ease initial startup.\n   * Update patches:\n     + Drop patch 2002: Applied upstream.\n     + Add patch 1005 to add phtread linker option.\n       Closes: bug#615619. Thanks to Shane Wegner.\n     + Refresh patches.\n   * Extend copyright years in rules file header.\n   * Rewrite copyright file using draft svn166 of DEP5 format.\n-  * Rename binary package to bitcoind (from bincoin-cli).\n+  * Rename binary package to litecoind (from bincoin-cli).\n     Closes: bug#614025. Thanks to Luke-Jr.\n \n  -- Jonas Smedegaard <dr@jones.dk>  Tue, 01 Mar 2011 15:55:04 +0100\n \n-bitcoin (0.3.19~dfsg-6) unstable; urgency=low\n+litecoin (0.3.19~dfsg-6) unstable; urgency=low\n \n   * Fix override aggressive optimizations.\n   * Fix tighten build-dependencies to really fit backporting to Lenny:\n@@ -389,7 +389,7 @@ bitcoin (0.3.19~dfsg-6) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 19:48:35 +0100\n \n-bitcoin (0.3.19~dfsg-5) unstable; urgency=low\n+litecoin (0.3.19~dfsg-5) unstable; urgency=low\n \n   * Fix lower Boost fallback-build-dependencies to 1.35, really\n     available in Lenny.\n@@ -404,11 +404,11 @@ bitcoin (0.3.19~dfsg-5) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 16:04:48 +0100\n \n-bitcoin (0.3.19~dfsg-4) unstable; urgency=low\n+litecoin (0.3.19~dfsg-4) unstable; urgency=low\n \n   [ Micah Anderson ]\n-  * Provide example bitcoin.conf.\n-  * Add bitcoind(1) and bitcoin.conf(5) man pages.\n+  * Provide example litecoin.conf.\n+  * Add litecoind(1) and litecoin.conf(5) man pages.\n \n   [ Jonas Smedegaard ]\n   * Ease backporting:\n@@ -420,7 +420,7 @@ bitcoin (0.3.19~dfsg-4) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 14:00:48 +0100\n \n-bitcoin (0.3.19~dfsg-3) unstable; urgency=low\n+litecoin (0.3.19~dfsg-3) unstable; urgency=low\n \n   * Document in copyright file files excluded from repackaged source.\n   * Update copyright file:\n@@ -435,7 +435,7 @@ bitcoin (0.3.19~dfsg-3) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Fri, 07 Jan 2011 22:50:57 +0100\n \n-bitcoin (0.3.19~dfsg-2) unstable; urgency=low\n+litecoin (0.3.19~dfsg-2) unstable; urgency=low\n \n   * Adjust build options to use optimized miner only for amd64. Fixes\n     FTBFS on i386 (and other archs, if compiling anywhere else at all).\n@@ -450,7 +450,7 @@ bitcoin (0.3.19~dfsg-2) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Wed, 29 Dec 2010 00:27:54 +0100\n \n-bitcoin (0.3.19~dfsg-1) unstable; urgency=low\n+litecoin (0.3.19~dfsg-1) unstable; urgency=low\n \n   [ Jonas Smedegaard ]\n   * Initial release."
      },
      {
        "sha": "4a70e7640346d414fef03a8a65d0775c79cc66cd",
        "filename": "contrib/debian/control",
        "status": "modified",
        "additions": 21,
        "deletions": 21,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/control",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/control",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/control?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,4 +1,4 @@\n-Source: bitcoin\n+Source: litecoin\n Section: utils\n Priority: optional\n Maintainer: Jonas Smedegaard <dr@jones.dk>\n@@ -23,45 +23,45 @@ Build-Depends: debhelper,\n  libprotobuf-dev, protobuf-compiler,\n  python\n Standards-Version: 3.9.2\n-Homepage: https://bitcoincore.org/\n-Vcs-Git: git://github.com/bitcoin/bitcoin.git\n-Vcs-Browser: https://github.com/bitcoin/bitcoin\n+Homepage: https://litecoincore.org/\n+Vcs-Git: git://github.com/wangxinxi/litecoin.git\n+Vcs-Browser: https://github.com/wangxinxi/litecoin\n \n-Package: bitcoind\n+Package: litecoind\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer network based digital currency - daemon\n- Bitcoin is an experimental new digital currency that enables instant\n- payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer\n+ Litecoin is an experimental new digital currency that enables instant\n+ payments to anyone, anywhere in the world. Litecoin uses peer-to-peer\n  technology to operate with no central authority: managing transactions\n- and issuing money are carried out collectively by the network. Bitcoin Core\n+ and issuing money are carried out collectively by the network. Litecoin Core\n  is the name of the open source software which enables the use of this currency.\n  .\n- This package provides the daemon, bitcoind, and the CLI tool\n- bitcoin-cli to interact with the daemon.\n+ This package provides the daemon, litecoind, and the CLI tool\n+ litecoin-cli to interact with the daemon.\n \n-Package: bitcoin-qt\n+Package: litecoin-qt\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer network based digital currency - Qt GUI\n- Bitcoin is an experimental new digital currency that enables instant\n- payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer\n+ Litecoin is an experimental new digital currency that enables instant\n+ payments to anyone, anywhere in the world. Litecoin uses peer-to-peer\n  technology to operate with no central authority: managing transactions\n- and issuing money are carried out collectively by the network. Bitcoin Core\n+ and issuing money are carried out collectively by the network. Litecoin Core\n  is the name of the open source software which enables the use of this currency.\n  .\n- This package provides Bitcoin-Qt, a GUI for Bitcoin based on Qt.\n+ This package provides Litecoin-Qt, a GUI for Litecoin based on Qt.\n \n-Package: bitcoin-tx\n+Package: litecoin-tx\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer digital currency - standalone transaction tool\n- Bitcoin is an experimental new digital currency that enables instant\n- payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer\n+ Litecoin is an experimental new digital currency that enables instant\n+ payments to anyone, anywhere in the world. Litecoin uses peer-to-peer\n  technology to operate with no central authority: managing transactions\n- and issuing money are carried out collectively by the network. Bitcoin Core\n+ and issuing money are carried out collectively by the network. Litecoin Core\n  is the name of the open source software which enables the use of this currency.\n  .\n- This package provides bitcoin-tx, a command-line transaction creation\n- tool which can be used without a bitcoin daemon.  Some means of\n+ This package provides litecoin-tx, a command-line transaction creation\n+ tool which can be used without a litecoin daemon.  Some means of\n  exchanging minimal transaction data with peers is still required."
      },
      {
        "sha": "0f0c812a68935ae15ac16d569fcb4a3f0cb21412",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,13 +1,13 @@\n Format: http://www.debian.org/doc/packaging-manuals/copyright-format/1.0/\n-Upstream-Name: Bitcoin\n+Upstream-Name: Litecoin\n Upstream-Contact: Satoshi Nakamoto <satoshin@gmx.com>\n- irc://#bitcoin@freenode.net\n-Source: https://github.com/bitcoin/bitcoin\n+ irc://#litecoin@freenode.net\n+Source: https://github.com/wangxinxi/litecoin\n \n Files: *\n-Copyright: 2009-2016, Bitcoin Core Developers\n+Copyright: 2009-2016, Litecoin Core Developers\n License: Expat\n-Comment: The Bitcoin Core Developers encompasses the current developers listed on bitcoin.org,\n+Comment: The Litecoin Core Developers encompasses the current developers listed on litecoin.org,\n          as well as the numerous contributors to the project.\n \n Files: debian/*\n@@ -75,12 +75,12 @@ License: Expat\n Comment: Modifications of Stephan Hutchings Typicons\n \n Files: src/qt/res/icons/about.png\n-       src/qt/res/icons/bitcoin.*\n-       share/pixmaps/bitcoin*\n-       src/qt/res/src/bitcoin.svg\n+       src/qt/res/icons/litecoin.*\n+       share/pixmaps/litecoin*\n+       src/qt/res/src/litecoin.svg\n Copyright: Bitboy, Jonas Schnelli\n License: public-domain\n-Comment: Site: https://bitcointalk.org/?topic=1756.0\n+Comment: Site: https://litecointalk.org/?topic=1756.0\n \n \n License: Expat"
      },
      {
        "sha": "682b036ecafa3b9254a39c2e3aa1fd6e2ba9eb93",
        "filename": "contrib/debian/examples/litecoin.conf",
        "status": "renamed",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/examples/litecoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/examples/litecoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/litecoin.conf?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,10 +1,10 @@\n ##\n-## bitcoin.conf configuration file. Lines beginning with # are comments.\n+## litecoin.conf configuration file. Lines beginning with # are comments.\n ##\n  \n # Network-related settings:\n \n-# Run on the test network instead of the real bitcoin network.\n+# Run on the test network instead of the real litecoin network.\n #testnet=0\n \n # Run a regression test network\n@@ -57,10 +57,10 @@\n #maxconnections=\n \n #\n-# JSON-RPC options (for controlling a running Bitcoin/bitcoind process)\n+# JSON-RPC options (for controlling a running Litecoin/litecoind process)\n #\n \n-# server=1 tells Bitcoin-Qt and bitcoind to accept JSON-RPC commands\n+# server=1 tells Litecoin-Qt and litecoind to accept JSON-RPC commands\n #server=0\n \n # Bind to given address to listen for JSON-RPC connections. Use [host]:port notation for IPv6.\n@@ -71,7 +71,7 @@\n #rpcuser=Ulysseys\n #rpcpassword=YourSuperGreatPasswordNumber_DO_NOT_USE_THIS_OR_YOU_WILL_GET_ROBBED_385593\n \n-# How many seconds bitcoin will wait for a complete RPC HTTP request.\n+# How many seconds litecoin will wait for a complete RPC HTTP request.\n # after the HTTP connection is established. \n #rpcclienttimeout=30\n \n@@ -82,16 +82,16 @@\n # NOTE: opening up the RPC port to hosts outside your local trusted network is NOT RECOMMENDED,\n # because the rpcpassword is transmitted over the network unencrypted.\n \n-# server=1 tells Bitcoin-Qt to accept JSON-RPC commands.\n-# it is also read by bitcoind to determine if RPC should be enabled \n+# server=1 tells Litecoin-Qt to accept JSON-RPC commands.\n+# it is also read by litecoind to determine if RPC should be enabled \n #rpcallowip=10.1.1.34/255.255.255.0\n #rpcallowip=1.2.3.4/24\n #rpcallowip=2001:db8:85a3:0:0:8a2e:370:7334/96\n \n # Listen for RPC connections on this TCP port:\n #rpcport=8332\n \n-# You can use Bitcoin or bitcoind to send commands to Bitcoin/bitcoind\n+# You can use Litecoin or litecoind to send commands to Litecoin/litecoind\n # running on another host using this option:\n #rpcconnect=127.0.0.1\n \n@@ -110,14 +110,14 @@\n # both prior transactions and several dozen future transactions.\n #keypool=100\n \n-# Pay an optional transaction fee every time you send bitcoins.  Transactions with fees\n+# Pay an optional transaction fee every time you send litecoins.  Transactions with fees\n # are more likely than free transactions to be included in generated blocks, so may\n # be validated sooner.\n #paytxfee=0.00\n \n # User interface options\n \n-# Start Bitcoin minimized\n+# Start Litecoin minimized\n #min=1\n \n # Minimize to the system tray",
        "previous_filename": "contrib/debian/examples/bitcoin.conf"
      },
      {
        "sha": "4d1c7f65705443323814d6945b269a4b30387095",
        "filename": "contrib/debian/litecoin-qt.desktop",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/litecoin-qt.desktop",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/litecoin-qt.desktop",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/litecoin-qt.desktop?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -0,0 +1,12 @@\n+[Desktop Entry]\n+Encoding=UTF-8\n+Name=Litecoin\n+Comment=Litecoin P2P Cryptocurrency\n+Comment[fr]=Litecoin, monnaie virtuelle cryptographique pair \u00e0 pair\n+Comment[tr]=Litecoin, e\u015ften e\u015fe kriptografik sanal para birimi\n+Exec=litecoin-qt %u\n+Terminal=false\n+Type=Application\n+Icon=litecoin128\n+MimeType=x-scheme-handler/litecoin;\n+Categories=Office;Finance;"
      },
      {
        "sha": "28c24b4edec706e587bbf9692444a839732a9298",
        "filename": "contrib/debian/litecoin-qt.install",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/litecoin-qt.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/litecoin-qt.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/litecoin-qt.install?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -0,0 +1,6 @@\n+usr/local/bin/litecoin-qt usr/bin\n+share/pixmaps/litecoin32.xpm usr/share/pixmaps\n+share/pixmaps/litecoin16.xpm usr/share/pixmaps\n+share/pixmaps/litecoin128.png usr/share/pixmaps\n+debian/litecoin-qt.desktop usr/share/applications\n+debian/litecoin-qt.protocol usr/share/kde4/services/"
      },
      {
        "sha": "ddc96aa9fead7822b868e680af4a6135f260795f",
        "filename": "contrib/debian/litecoin-qt.lintian-overrides",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/litecoin-qt.lintian-overrides",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/litecoin-qt.lintian-overrides",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/litecoin-qt.lintian-overrides?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,2 +1,2 @@\n # Linked code is Expat - only Debian packaging is GPL-2+\n-bitcoin-qt: possible-gpl-code-linked-with-openssl\n+litecoin-qt: possible-gpl-code-linked-with-openssl",
        "previous_filename": "contrib/debian/bitcoin-qt.lintian-overrides"
      },
      {
        "sha": "98ecbf9801ef2e591555371472522ba052a70e07",
        "filename": "contrib/debian/litecoin-qt.protocol",
        "status": "renamed",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/litecoin-qt.protocol",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/litecoin-qt.protocol",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/litecoin-qt.protocol?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,6 +1,6 @@\n [Protocol]\n-exec=bitcoin-qt '%u'\n-protocol=bitcoin\n+exec=litecoin-qt '%u'\n+protocol=litecoin\n input=none\n output=none\n helper=true",
        "previous_filename": "contrib/debian/bitcoin-qt.protocol"
      },
      {
        "sha": "7b61d5c972643fdcfe88e15845ee2ec120cc4ca0",
        "filename": "contrib/debian/litecoin-tx.bash-completion",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/litecoin-tx.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/litecoin-tx.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/litecoin-tx.bash-completion?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -0,0 +1 @@\n+contrib/litecoin-tx.bash-completion\tlitecoin-tx"
      },
      {
        "sha": "bea21c02b444d248f83df99b8be4346bd08f6286",
        "filename": "contrib/debian/litecoin-tx.install",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/litecoin-tx.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/litecoin-tx.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/litecoin-tx.install?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -0,0 +1 @@\n+usr/local/bin/litecoin-tx usr/bin"
      },
      {
        "sha": "699d30e7ba4355fe48476c8cb31ac6719893a52d",
        "filename": "contrib/debian/litecoind.bash-completion",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/litecoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/litecoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/litecoind.bash-completion?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -0,0 +1,2 @@\n+contrib/litecoind.bash-completion\tlitecoind\n+contrib/litecoin-cli.bash-completion\tlitecoin-cli"
      },
      {
        "sha": "e5cd0df1ab0c6e851e1b1a228189fcd1ae840f7e",
        "filename": "contrib/debian/litecoind.examples",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/litecoind.examples",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/litecoind.examples",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/litecoind.examples?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -0,0 +1 @@\n+debian/examples/litecoin.conf"
      },
      {
        "sha": "23c1684f71590bfaaf7e1caa63540fff0e69c51a",
        "filename": "contrib/debian/litecoind.install",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/litecoind.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/litecoind.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/litecoind.install?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -0,0 +1,2 @@\n+usr/local/bin/litecoind usr/bin\n+usr/local/bin/litecoin-cli usr/bin"
      },
      {
        "sha": "d27f8134286a1fd18f8a4df2b94556c93c76a654",
        "filename": "contrib/debian/litecoind.lintian-overrides",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/litecoind.lintian-overrides",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/litecoind.lintian-overrides",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/litecoind.lintian-overrides?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,2 +1,2 @@\n # Linked code is Expat - only Debian packaging is GPL-2+\n-bitcoind: possible-gpl-code-linked-with-openssl\n+litecoind: possible-gpl-code-linked-with-openssl",
        "previous_filename": "contrib/debian/bitcoind.lintian-overrides"
      },
      {
        "sha": "2c9409be9013011b01159ede0eb183d3cea0bed6",
        "filename": "contrib/debian/litecoind.manpages",
        "status": "added",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/litecoind.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/litecoind.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/litecoind.manpages?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -0,0 +1,3 @@\n+debian/manpages/litecoind.1\n+debian/manpages/litecoin.conf.5\n+debian/manpages/litecoin-cli.1"
      },
      {
        "sha": "16c338dd3e51115c67439c5c1651e8465a3547d3",
        "filename": "contrib/debian/manpages/bitcoin-cli.1",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/debian/manpages/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/debian/manpages/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin-cli.1?ref=8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311",
        "patch": "@@ -1,21 +0,0 @@\n-.TH BITCOIN-CLI \"1\" \"February 2016\" \"bitcoin-cli 0.12\"\n-.SH NAME\n-bitcoin-cli \\- a remote procedure call client for Bitcoin Core. \n-.SH SYNOPSIS\n-bitcoin-cli [options] <command> [params] \\- Send command to Bitcoin Core. \n-.TP\n-bitcoin-cli [options] help \\- Asks Bitcoin Core for a list of supported commands.\n-.SH DESCRIPTION\n-This manual page documents the bitcoin-cli program. bitcoin-cli is an RPC client used to send commands to Bitcoin Core.\n-\n-.SH OPTIONS\n-.TP\n-\\fB\\-?\\fR\n-Show possible options.\n-\n-.SH \"SEE ALSO\"\n-\\fBbitcoind\\fP, \\fBbitcoin.conf\\fP\n-.SH AUTHOR\n-This manual page was written by Ciemon Dunville <ciemon@gmail.com>. Permission is granted to copy, distribute and/or modify this document under the terms of the MIT License.\n-\n-The complete text of the MIT License can be found on the web at \\fIhttp://opensource.org/licenses/MIT\\fP."
      },
      {
        "sha": "685a282080e2b664006a27c64c8f09f5b2afed49",
        "filename": "contrib/debian/manpages/bitcoin-qt.1",
        "status": "removed",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/debian/manpages/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/debian/manpages/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin-qt.1?ref=8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311",
        "patch": "@@ -1,13 +0,0 @@\n-.TH BITCOIN-QT \"1\" \"February 2016\" \"bitcoin-qt 0.12\"\n-.SH NAME\n-bitcoin-qt \\- peer-to-peer network based digital currency\n-.SH DESCRIPTION\n-.SS \"Usage:\"\n-.IP\n-bitcoin\\-qt [command\\-line options]\n-.SH OPTIONS\n-.TP\n-\\-?\n-List options.\n-.SH \"SEE ALSO\"\n-bitcoind(1)"
      },
      {
        "sha": "cf1ae63fd67775d3cac2b2d2f98942e7d69ac998",
        "filename": "contrib/debian/manpages/litecoin-cli.1",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/manpages/litecoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/manpages/litecoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/litecoin-cli.1?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -0,0 +1,21 @@\n+.TH LITECOIN-CLI \"1\" \"February 2016\" \"litecoin-cli 0.12\"\n+.SH NAME\n+litecoin-cli \\- a remote procedure call client for Litecoin Core. \n+.SH SYNOPSIS\n+litecoin-cli [options] <command> [params] \\- Send command to Litecoin Core. \n+.TP\n+litecoin-cli [options] help \\- Asks Litecoin Core for a list of supported commands.\n+.SH DESCRIPTION\n+This manual page documents the litecoin-cli program. litecoin-cli is an RPC client used to send commands to Litecoin Core.\n+\n+.SH OPTIONS\n+.TP\n+\\fB\\-?\\fR\n+Show possible options.\n+\n+.SH \"SEE ALSO\"\n+\\fBlitecoind\\fP, \\fBlitecoin.conf\\fP\n+.SH AUTHOR\n+This manual page was written by Ciemon Dunville <ciemon@gmail.com>. Permission is granted to copy, distribute and/or modify this document under the terms of the MIT License.\n+\n+The complete text of the MIT License can be found on the web at \\fIhttp://opensource.org/licenses/MIT\\fP."
      },
      {
        "sha": "da2389686cb7ac6f92344879811c95acc0b870fc",
        "filename": "contrib/debian/manpages/litecoin-qt.1",
        "status": "added",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/manpages/litecoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/manpages/litecoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/litecoin-qt.1?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -0,0 +1,13 @@\n+.TH LITECOIN-QT \"1\" \"February 2016\" \"litecoin-qt 0.12\"\n+.SH NAME\n+litecoin-qt \\- peer-to-peer network based digital currency\n+.SH DESCRIPTION\n+.SS \"Usage:\"\n+.IP\n+litecoin\\-qt [command\\-line options]\n+.SH OPTIONS\n+.TP\n+\\-?\n+List options.\n+.SH \"SEE ALSO\"\n+litecoind(1)"
      },
      {
        "sha": "1c5a4da9db53204a4a72a9d218904ac560cb4f38",
        "filename": "contrib/debian/manpages/litecoin.conf.5",
        "status": "renamed",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/manpages/litecoin.conf.5",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/manpages/litecoin.conf.5",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/litecoin.conf.5?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,17 +1,17 @@\n-.TH BITCOIN.CONF \"5\" \"February 2016\" \"bitcoin.conf 0.12\"\n+.TH LITECOIN.CONF \"5\" \"February 2016\" \"litecoin.conf 0.12\"\n .SH NAME\n-bitcoin.conf \\- bitcoin configuration file\n+litecoin.conf \\- litecoin configuration file\n .SH SYNOPSIS\n All command-line options (except for '\\-conf') may be specified in a configuration file, and all configuration file options may also be specified on the command line. Command-line options override values set in the configuration file.\n .TP\n-The configuration file is a list of 'setting=value' pairs, one per line, with optional comments starting with the '#' character. Please refer to bitcoind(1) for a up to date list of valid options.\n+The configuration file is a list of 'setting=value' pairs, one per line, with optional comments starting with the '#' character. Please refer to litecoind(1) for a up to date list of valid options.\n .TP\n-The configuration file is not automatically created; you can create it using your favorite plain-text editor. By default, bitcoind(1) will look for a file named bitcoin.conf(5) in the bitcoin data directory, but both the data directory and the configuration file path may be changed using the '\\-datadir' and '\\-conf' command-line arguments.\n+The configuration file is not automatically created; you can create it using your favorite plain-text editor. By default, litecoind(1) will look for a file named litecoin.conf(5) in the litecoin data directory, but both the data directory and the configuration file path may be changed using the '\\-datadir' and '\\-conf' command-line arguments.\n .SH LOCATION\n-bitcoin.conf should be located in $HOME/.bitcoin\n+litecoin.conf should be located in $HOME/.litecoin\n \n .SH \"SEE ALSO\"\n-bitcoind(1)\n+litecoind(1)\n .SH AUTHOR\n This manual page was written by Micah Anderson <micah@debian.org> for the Debian system (but may be used by others). Permission is granted to copy, distribute and/or modify this document under the terms of the GNU General Public License, Version 3 or any later version published by the Free Software Foundation.\n ",
        "previous_filename": "contrib/debian/manpages/bitcoin.conf.5"
      },
      {
        "sha": "80300e39c8d2ca997f55db0b7be9359d556c5179",
        "filename": "contrib/debian/manpages/litecoind.1",
        "status": "renamed",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/manpages/litecoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/manpages/litecoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/litecoind.1?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,12 +1,12 @@\n-.TH BITCOIND \"1\" \"February 2016\" \"bitcoind 0.12\"\n+.TH LITECOIND \"1\" \"February 2016\" \"litecoind 0.12\"\n .SH NAME\n-bitcoind \\- peer-to-peer network based digital currency\n+litecoind \\- peer-to-peer network based digital currency\n .SH SYNOPSIS\n-bitcoin [options] <command> [params]  \n+litecoin [options] <command> [params]  \n .TP\n-bitcoin [options] help <command> \\- Get help for a command\n+litecoin [options] help <command> \\- Get help for a command\n .SH DESCRIPTION\n-This  manual page documents the bitcoind program. Bitcoin is an experimental new digital currency that enables instant payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate with no central authority: managing transactions and issuing money are carried out collectively by the network. Bitcoin Core is the name of open source software which enables the use of this currency.\n+This  manual page documents the litecoind program. Litecoin is an experimental new digital currency that enables instant payments to anyone, anywhere in the world. Litecoin uses peer-to-peer technology to operate with no central authority: managing transactions and issuing money are carried out collectively by the network. Litecoin Core is the name of open source software which enables the use of this currency.\n \n .SH OPTIONS\n .TP\n@@ -22,7 +22,7 @@ List commands.\n Get help for a command.\n \n .SH \"SEE ALSO\"\n-bitcoin.conf(5)\n+litecoin.conf(5)\n .SH AUTHOR\n This manual page was written by Micah Anderson <micah@debian.org> for the Debian system (but may be used by others). Permission is granted to copy, distribute and/or modify this document under the terms of the GNU General Public License, Version 3 or any later version published by the Free Software Foundation.\n ",
        "previous_filename": "contrib/debian/manpages/bitcoind.1"
      },
      {
        "sha": "237379b0b0df3fe1e5ca4f00ad608a95c585fada",
        "filename": "contrib/debian/rules",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/rules",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/rules",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/rules?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,19 +1,19 @@\n #!/usr/bin/make -f\n # -*- mode: makefile; coding: utf-8 -*-\n \n-#DEB_MAKE_CHECK_TARGET = test_bitcoin\n-#build/bitcoind::\n-#\t$(if $(filter nocheck,$(DEB_BUILD_OPTIONS)),,src/test_bitcoin)\n+#DEB_MAKE_CHECK_TARGET = test_litecoin\n+#build/litecoind::\n+#\t$(if $(filter nocheck,$(DEB_BUILD_OPTIONS)),,src/test_litecoin)\n \n-DEB_INSTALL_EXAMPLES_bitcoind += debian/examples/*\n-DEB_INSTALL_MANPAGES_bitcoind += debian/manpages/*\n+DEB_INSTALL_EXAMPLES_litecoind += debian/examples/*\n+DEB_INSTALL_MANPAGES_litecoind += debian/manpages/*\n \n %:\n \tdh --with bash-completion $@\n \n override_dh_auto_clean:\n \tif [ -f Makefile ]; then $(MAKE) distclean; fi\n-\trm -rf Makefile.in aclocal.m4 configure src/Makefile.in src/bitcoin-config.h.in src/build-aux src/qt/Makefile.in src/qt/test/Makefile.in src/test/Makefile.in\n+\trm -rf Makefile.in aclocal.m4 configure src/Makefile.in src/litecoin-config.h.in src/build-aux src/qt/Makefile.in src/qt/test/Makefile.in src/test/Makefile.in\n \n # Yea, autogen should be run on the source archive, but I like doing git archive\n override_dh_auto_configure:"
      },
      {
        "sha": "f45aa7722085c3bc77ed720577449a1944eba798",
        "filename": "contrib/debian/watch",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/watch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/debian/watch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/watch?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -2,4 +2,4 @@\n version=3\n # use qa.debian.org redirector; see man uscan\n opts=uversionmangle=s/(\\d)(alpha|beta|rc)/$1~$2/,dversionmangle=s/~dfsg\\d*// \\\n- http://githubredir.debian.net/github/bitcoin/bitcoin v(.*).tar.gz\n+ http://githubredir.debian.net/github/litecoin/litecoin v(.*).tar.gz"
      },
      {
        "sha": "089b4f70962821e60be080363d1a66835703efeb",
        "filename": "contrib/devtools/README.md",
        "status": "modified",
        "additions": 13,
        "deletions": 13,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -34,11 +34,11 @@ source files if these have a git commit from the current year.\n \n For example a file changed in 2015 (with 2015 being the current year):\n \n-```// Copyright (c) 2009-2013 The Bitcoin Core developers```\n+```// Copyright (c) 2009-2013 The Litecoin Core developers```\n \n would be changed to:\n \n-```// Copyright (c) 2009-2015 The Bitcoin Core developers```\n+```// Copyright (c) 2009-2015 The Litecoin Core developers```\n \n git-subtree-check.sh\n ====================\n@@ -48,9 +48,9 @@ the commit it claims to have been updated to.\n \n To use, make sure that you have fetched the upstream repository branch in which the subtree is\n maintained:\n-* for `src/secp256k1`: https://github.com/bitcoin-core/secp256k1.git (branch master)\n-* for `src/leveldb`: https://github.com/bitcoin-core/leveldb.git (branch bitcoin-fork)\n-* for `src/univalue`: https://github.com/bitcoin-core/univalue.git (branch master)\n+* for `src/secp256k1`: https://github.com/litecoin-core/secp256k1.git (branch master)\n+* for `src/leveldb`: https://github.com/litecoin-core/leveldb.git (branch litecoin-fork)\n+* for `src/univalue`: https://github.com/litecoin-core/univalue.git (branch master)\n \n Usage: `git-subtree-check.sh DIR COMMIT`\n \n@@ -66,7 +66,7 @@ For example:\n   ./github-merge.py 3077\n \n (in any git repository) will help you merge pull request #3077 for the\n-bitcoin/bitcoin repository.\n+litecoin/litecoin repository.\n \n What it does:\n * Fetch master and the pull request.\n@@ -84,16 +84,16 @@ couldn't mess with the sources.\n \n Setup\n ---------\n-Configuring the github-merge tool for the bitcoin repository is done in the following way:\n+Configuring the github-merge tool for the litecoin repository is done in the following way:\n \n-    git config githubmerge.repository bitcoin/bitcoin\n+    git config githubmerge.repository litecoin/litecoin\n     git config githubmerge.testcmd \"make -j4 check\" (adapt to whatever you want to use for testing)\n     git config --global user.signingkey mykeyid (if you want to GPG sign)\n \n optimize-pngs.py\n ================\n \n-A script to optimize png files in the bitcoin\n+A script to optimize png files in the litecoin\n repository (requires pngcrush).\n \n security-check.py and test-security-check.py\n@@ -116,10 +116,10 @@ If only supported symbols are used the return value will be 0 and the output wil\n \n If there are 'unsupported' symbols, the return value will be 1 a list like this will be printed:\n \n-    .../64/test_bitcoin: symbol memcpy from unsupported version GLIBC_2.14\n-    .../64/test_bitcoin: symbol __fdelt_chk from unsupported version GLIBC_2.15\n-    .../64/test_bitcoin: symbol std::out_of_range::~out_of_range() from unsupported version GLIBCXX_3.4.15\n-    .../64/test_bitcoin: symbol _ZNSt8__detail15_List_nod from unsupported version GLIBCXX_3.4.15\n+    .../64/test_litecoin: symbol memcpy from unsupported version GLIBC_2.14\n+    .../64/test_litecoin: symbol __fdelt_chk from unsupported version GLIBC_2.15\n+    .../64/test_litecoin: symbol std::out_of_range::~out_of_range() from unsupported version GLIBCXX_3.4.15\n+    .../64/test_litecoin: symbol _ZNSt8__detail15_List_nod from unsupported version GLIBCXX_3.4.15\n \n update-translations.py\n ======================"
      },
      {
        "sha": "26c70afa7b1cdcce399f1a0e9819cb9a264c260a",
        "filename": "contrib/devtools/check-doc.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/devtools/check-doc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/devtools/check-doc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/check-doc.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python\n-# Copyright (c) 2015 The Bitcoin Core developers\n+# Copyright (c) 2015 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "d4b2deecac5da778db6f9db940360abbf07c0dc6",
        "filename": "contrib/devtools/clang-format.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/devtools/clang-format.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/devtools/clang-format.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/clang-format.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -3,7 +3,7 @@\n Wrapper script for clang-format\n \n Copyright (c) 2015 MarcoFalke\n-Copyright (c) 2015 The Bitcoin Core developers\n+Copyright (c) 2015 The Litecoin Core developers\n Distributed under the MIT software license, see the accompanying\n file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''"
      },
      {
        "sha": "5150f04d95014ed579b71d37e7ef17284993b005",
        "filename": "contrib/devtools/fix-copyright-headers.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/devtools/fix-copyright-headers.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/devtools/fix-copyright-headers.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/fix-copyright-headers.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -5,20 +5,20 @@\n \n For example:\n \n-// Copyright (c) 2009-2012 The Bitcoin Core developers\n+// Copyright (c) 2009-2012 The Litecoin Core developers\n \n it will change it to\n \n-// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Litecoin Core developers\n '''\n import os\n import time\n import re\n \n year = time.gmtime()[0]\n CMD_GIT_DATE = 'git log --format=@%%at -1 %s | date +\"%%Y\" -u -f -'\n-CMD_REGEX= \"perl -pi -e 's/(20\\d\\d)(?:-20\\d\\d)? The Bitcoin/$1-%s The Bitcoin/' %s\"\n-REGEX_CURRENT= re.compile(\"%s The Bitcoin\" % year)\n+CMD_REGEX= \"perl -pi -e 's/(20\\d\\d)(?:-20\\d\\d)? The Litecoin/$1-%s The Litecoin/' %s\"\n+REGEX_CURRENT= re.compile(\"%s The Litecoin\" % year)\n CMD_LIST_FILES= \"find %s | grep %s\"\n \n FOLDERS = [\"./qa\", \"./src\"]"
      },
      {
        "sha": "9a379c9bd3a3a5a9fde0d25d8050861b5130d3ec",
        "filename": "contrib/devtools/github-merge.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/devtools/github-merge.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/devtools/github-merge.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2016 Bitcoin Core Developers\n+# Copyright (c) 2016 Litecoin Core Developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "5f3977babe5f1694067598f38fafc92263befda7",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -53,7 +53,7 @@\n CPPFILT_CMD = os.getenv('CPPFILT', '/usr/bin/c++filt')\n # Allowed NEEDED libraries\n ALLOWED_LIBRARIES = {\n-# bitcoind and bitcoin-qt\n+# litecoind and litecoin-qt\n b'libgcc_s.so.1', # GCC base support\n b'libc.so.6', # C library\n b'libpthread.so.0', # threading\n@@ -62,7 +62,7 @@\n b'librt.so.1', # real-time (clock)\n b'ld-linux-x86-64.so.2', # 64-bit dynamic linker\n b'ld-linux.so.2', # 32-bit dynamic linker\n-# bitcoin-qt only\n+# litecoin-qt only\n b'libX11-xcb.so.1', # part of X11\n b'libX11.so.6', # part of X11\n b'libxcb.so.1', # part of X11"
      },
      {
        "sha": "a4815451dbf57e54aa250182df44811b8c81d73c",
        "filename": "contrib/devtools/update-translations.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/devtools/update-translations.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/devtools/update-translations.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/update-translations.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -26,7 +26,7 @@\n # Name of transifex tool\n TX = 'tx'\n # Name of source language file\n-SOURCE_LANG = 'bitcoin_en.ts'\n+SOURCE_LANG = 'litecoin_en.ts'\n # Directory with locale files\n LOCALE_DIR = 'src/qt/locale'\n # Minimum number of messages for translation to be considered at all"
      },
      {
        "sha": "453cdb7d4e4521743e57b05c8fc9ab2cdbda812c",
        "filename": "contrib/gitian-descriptors/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/gitian-descriptors/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/gitian-descriptors/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/README.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -19,7 +19,7 @@ Sanity checks:\n \n Once you've got the right hardware and software:\n \n-    git clone git://github.com/bitcoin/bitcoin.git\n+    git clone git://github.com/wangxinxi/litecoin.git\n     git clone git://github.com/devrandom/gitian-builder.git\n     mkdir gitian-builder/inputs\n     cd gitian-builder/inputs\n@@ -61,5 +61,5 @@ Here's a description of Gavin's setup on OSX 10.6:\n 5. Still inside Ubuntu, tell gitian-builder to use LXC, then follow the \"Once you've got the right hardware and software\" instructions above:\n \n \texport USE_LXC=1\n-\tgit clone git://github.com/bitcoin/bitcoin.git\n+\tgit clone git://github.com/wangxinxi/litecoin.git\n \t... etc"
      },
      {
        "sha": "8dd476af6f29763b5dbd0ecfc5d4b6a4cdf4d190",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-linux-0.13\"\n+name: \"litecoin-linux-0.13\"\n enable_cache: true\n suites:\n - \"trusty\"\n@@ -28,8 +28,8 @@ packages:\n - \"ca-certificates\"\n - \"python\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n+- \"url\": \"https://github.com/wangxinxi/litecoin.git\"\n+  \"dir\": \"litecoin\"\n files: []\n script: |\n \n@@ -113,7 +113,7 @@ script: |\n   chmod +x ${WRAP_DIR}/${prog}\n   done\n \n-  cd bitcoin\n+  cd litecoin\n   BASEPREFIX=`pwd`/depends\n   # Build dependencies for each host\n   for i in $HOSTS; do\n@@ -135,13 +135,13 @@ script: |\n   ./autogen.sh\n   CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n   make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n+  SOURCEDIST=`echo litecoin-*.tar.gz`\n   DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n   # Correct tar file order\n   mkdir -p temp\n   pushd temp\n   tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n+  find litecoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n   popd\n \n   ORIGPATH=\"$PATH\""
      },
      {
        "sha": "cec9e5e724c4fbf15a92aa163a56b43d66def413",
        "filename": "contrib/gitian-descriptors/gitian-osx-signer.yml",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-signer.yml?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,16 +1,16 @@\n ---\n-name: \"bitcoin-dmg-signer\"\n+name: \"litecoin-dmg-signer\"\n suites:\n - \"trusty\"\n architectures:\n - \"amd64\"\n packages:\n - \"faketime\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n+- \"url\": \"https://github.com/litecoin-core/litecoin-detached-sigs.git\"\n   \"dir\": \"signature\"\n files:\n-- \"bitcoin-osx-unsigned.tar.gz\"\n+- \"litecoin-osx-unsigned.tar.gz\"\n script: |\n   WRAP_DIR=$HOME/wrapped\n   mkdir -p ${WRAP_DIR}\n@@ -27,8 +27,8 @@ script: |\n     chmod +x ${WRAP_DIR}/${prog}\n   done\n \n-  UNSIGNED=bitcoin-osx-unsigned.tar.gz\n-  SIGNED=bitcoin-osx-signed.dmg\n+  UNSIGNED=litecoin-osx-unsigned.tar.gz\n+  SIGNED=litecoin-osx-signed.dmg\n \n   tar -xf ${UNSIGNED}\n   OSX_VOLNAME=\"$(cat osx_volname)\""
      },
      {
        "sha": "e39259c3fe72aeb07aee57f95934dba891f8fe0f",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-osx-0.13\"\n+name: \"litecoin-osx-0.13\"\n enable_cache: true\n suites:\n - \"trusty\"\n@@ -28,8 +28,8 @@ packages:\n - \"python-setuptools\"\n - \"fonts-tuffy\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n+- \"url\": \"https://github.com/wangxinxi/litecoin.git\"\n+  \"dir\": \"litecoin\"\n files:\n - \"MacOSX10.11.sdk.tar.gz\"\n script: |\n@@ -83,7 +83,7 @@ script: |\n   create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n   export PATH=${WRAP_DIR}:${PATH}\n \n-  cd bitcoin\n+  cd litecoin\n   BASEPREFIX=`pwd`/depends\n \n   mkdir -p ${BASEPREFIX}/SDKs\n@@ -104,14 +104,14 @@ script: |\n   ./autogen.sh\n   CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n   make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n+  SOURCEDIST=`echo litecoin-*.tar.gz`\n   DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n \n   # Correct tar file order\n   mkdir -p temp\n   pushd temp\n   tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n+  find litecoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n   popd\n \n   ORIGPATH=\"$PATH\""
      },
      {
        "sha": "42f9ced2fce32dbe1aa90ee1dba20cc4627e3bca",
        "filename": "contrib/gitian-descriptors/gitian-win-signer.yml",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/gitian-descriptors/gitian-win-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/gitian-descriptors/gitian-win-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win-signer.yml?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-win-signer\"\n+name: \"litecoin-win-signer\"\n suites:\n - \"trusty\"\n architectures:\n@@ -8,12 +8,12 @@ packages:\n - \"libssl-dev\"\n - \"autoconf\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n+- \"url\": \"https://github.com/litecoin-core/litecoin-detached-sigs.git\"\n   \"dir\": \"signature\"\n files:\n - \"osslsigncode-1.7.1.tar.gz\"\n - \"osslsigncode-Backports-to-1.7.1.patch\"\n-- \"bitcoin-win-unsigned.tar.gz\"\n+- \"litecoin-win-unsigned.tar.gz\"\n script: |\n   BUILD_DIR=`pwd`\n   SIGDIR=${BUILD_DIR}/signature/win\n@@ -23,7 +23,7 @@ script: |\n   echo \"a8c4e9cafba922f89de0df1f2152e7be286aba73f78505169bc351a7938dd911  osslsigncode-Backports-to-1.7.1.patch\" | sha256sum -c\n \n   mkdir -p ${UNSIGNED_DIR}\n-  tar -C ${UNSIGNED_DIR} -xf bitcoin-win-unsigned.tar.gz\n+  tar -C ${UNSIGNED_DIR} -xf litecoin-win-unsigned.tar.gz\n \n   tar xf osslsigncode-1.7.1.tar.gz\n   cd osslsigncode-1.7.1"
      },
      {
        "sha": "bc067e979161821f876bf256c1ad9d0562c89246",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-win-0.13\"\n+name: \"litecoin-win-0.13\"\n enable_cache: true\n suites:\n - \"trusty\"\n@@ -22,8 +22,8 @@ packages:\n - \"ca-certificates\"\n - \"python\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n+- \"url\": \"https://github.com/wangxinxi/litecoin.git\"\n+  \"dir\": \"litecoin\"\n files: []\n script: |\n   WRAP_DIR=$HOME/wrapped\n@@ -72,7 +72,7 @@ script: |\n \n   function create_per-host_linker_wrapper {\n   # This is only needed for trusty, as the mingw linker leaks a few bytes of\n-  # heap, causing non-determinism. See discussion in https://github.com/bitcoin/bitcoin/pull/6900\n+  # heap, causing non-determinism. See discussion in https://github.com/wangxinxi/litecoin/pull/6900\n   for i in $HOSTS; do\n     mkdir -p ${WRAP_DIR}/${i}\n     for prog in collect2; do\n@@ -101,7 +101,7 @@ script: |\n   create_per-host_linker_wrapper \"2000-01-01 12:00:00\"\n   export PATH=${WRAP_DIR}:${PATH}\n \n-  cd bitcoin\n+  cd litecoin\n   BASEPREFIX=`pwd`/depends\n   # Build dependencies for each host\n   for i in $HOSTS; do\n@@ -119,14 +119,14 @@ script: |\n   ./autogen.sh\n   CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n   make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n+  SOURCEDIST=`echo litecoin-*.tar.gz`\n   DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n \n   # Correct tar file order\n   mkdir -p temp\n   pushd temp\n   tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n+  find litecoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n   mkdir -p $OUTDIR/src\n   cp ../$SOURCEDIST $OUTDIR/src\n   popd\n@@ -146,7 +146,7 @@ script: |\n     make ${MAKEOPTS} -C src check-security\n     make deploy\n     make install DESTDIR=${INSTALLPATH}\n-    cp -f bitcoin-*setup*.exe $OUTDIR/\n+    cp -f litecoin-*setup*.exe $OUTDIR/\n     cd installed\n     mv ${DISTNAME}/bin/*.dll ${DISTNAME}/lib/\n     find . -name \"lib*.la\" -delete"
      },
      {
        "sha": "f51e0efb219a2a9c5b5006b8fac6b05a38ad565c",
        "filename": "contrib/gitian-keys/jonasschnelli-key.pgp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/gitian-keys/jonasschnelli-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/gitian-keys/jonasschnelli-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/jonasschnelli-key.pgp?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -107,4 +107,4 @@ WJfpU4Kc1KJeKdp+l9gf2JD8eOZAlwxA4r2wxyzoCVg1Bk3XiBfoI7Gl78Wysp+/\n ChQcErPJWEUglBfrESpqmjxH/qSy6yjyNmd4Az2ii7IzWILfuheZR4drjHQj6mCA\r\n S5rowLE=\r\n =ZVPf\r\n------END PGP PUBLIC KEY BLOCK-----\n\\ No newline at end of file\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "c2414766052bc9aedb68677aeb2d536cec968eea",
        "filename": "contrib/init/README.md",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/init/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/init/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/README.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,11 +1,11 @@\n Sample configuration files for:\n \n-SystemD: bitcoind.service\n-Upstart: bitcoind.conf\n-OpenRC:  bitcoind.openrc\n-         bitcoind.openrcconf\n-CentOS:  bitcoind.init\n-OS X:    org.bitcoin.bitcoind.plist\n+SystemD: litecoind.service\n+Upstart: litecoind.conf\n+OpenRC:  litecoind.openrc\n+         litecoind.openrcconf\n+CentOS:  litecoind.init\n+OS X:    org.litecoin.litecoind.plist\n \n have been made available to assist packagers in creating node packages here.\n "
      },
      {
        "sha": "f9554eecde7f2e536d7ac4422b58e870f2275eaa",
        "filename": "contrib/init/bitcoind.conf",
        "status": "removed",
        "additions": 0,
        "deletions": 65,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/init/bitcoind.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/init/bitcoind.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.conf?ref=8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311",
        "patch": "@@ -1,65 +0,0 @@\n-description \"Bitcoin Core Daemon\"\n-\n-start on runlevel [2345]\n-stop on starting rc RUNLEVEL=[016]\n-\n-env BITCOIND_BIN=\"/usr/bin/bitcoind\"\n-env BITCOIND_USER=\"bitcoin\"\n-env BITCOIND_GROUP=\"bitcoin\"\n-env BITCOIND_PIDDIR=\"/var/run/bitcoind\"\n-# upstart can't handle variables constructed with other variables\n-env BITCOIND_PIDFILE=\"/var/run/bitcoind/bitcoind.pid\"\n-env BITCOIND_CONFIGFILE=\"/etc/bitcoin/bitcoin.conf\"\n-env BITCOIND_DATADIR=\"/var/lib/bitcoind\"\n-\n-expect fork\n-\n-respawn\n-respawn limit 5 120\n-kill timeout 60\n-\n-pre-start script\n-    # this will catch non-existent config files\n-    # bitcoind will check and exit with this very warning, but it can do so\n-    # long after forking, leaving upstart to think everything started fine.\n-    # since this is a commonly encountered case on install, just check and\n-    # warn here.\n-    if ! grep -qs '^rpcpassword=' \"$BITCOIND_CONFIGFILE\" ; then\n-        echo \"ERROR: You must set a secure rpcpassword to run bitcoind.\"\n-        echo \"The setting must appear in $BITCOIND_CONFIGFILE\"\n-        echo\n-        echo \"This password is security critical to securing wallets \"\n-        echo \"and must not be the same as the rpcuser setting.\"\n-        echo \"You can generate a suitable random password using the following\"\n-        echo \"command from the shell:\"\n-        echo\n-        echo \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n-        echo\n-        echo \"It is also recommended that you also set alertnotify so you are \"\n-        echo \"notified of problems:\"\n-        echo\n-        echo \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\\n-            \"admin@foo.com\"\n-        echo\n-        exit 1\n-    fi\n-\n-    mkdir -p \"$BITCOIND_PIDDIR\"\n-    chmod 0755 \"$BITCOIND_PIDDIR\"\n-    chown $BITCOIND_USER:$BITCOIND_GROUP \"$BITCOIND_PIDDIR\"\n-    chown $BITCOIND_USER:$BITCOIND_GROUP \"$BITCOIND_CONFIGFILE\"\n-    chmod 0660 \"$BITCOIND_CONFIGFILE\"\n-end script\n-\n-exec start-stop-daemon \\\n-    --start \\\n-    --pidfile \"$BITCOIND_PIDFILE\" \\\n-    --chuid $BITCOIND_USER:$BITCOIND_GROUP \\\n-    --exec \"$BITCOIND_BIN\" \\\n-    -- \\\n-    -pid=\"$BITCOIND_PIDFILE\" \\\n-    -conf=\"$BITCOIND_CONFIGFILE\" \\\n-    -datadir=\"$BITCOIND_DATADIR\" \\\n-    -disablewallet \\\n-    -daemon\n-"
      },
      {
        "sha": "db5061874b3a923278fa11d4f3117fca19da1bcc",
        "filename": "contrib/init/bitcoind.init",
        "status": "removed",
        "additions": 0,
        "deletions": 67,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/init/bitcoind.init",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/init/bitcoind.init",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.init?ref=8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311",
        "patch": "@@ -1,67 +0,0 @@\n-#!/bin/bash\n-#\n-#  bitcoind The bitcoin core server.\n-#\n-#\n-# chkconfig: 345 80 20\n-# description: bitcoind\n-# processname: bitcoind\n-#\n-\n-# Source function library.\n-. /etc/init.d/functions\n-\n-# you can override defaults in /etc/sysconfig/bitcoind, see below\n-if [ -f /etc/sysconfig/bitcoind ]; then\n-        . /etc/sysconfig/bitcoind\n-fi\n-\n-RETVAL=0\n-\n-prog=bitcoind\n-# you can override the lockfile via BITCOIND_LOCKFILE in /etc/sysconfig/bitcoind\n-lockfile=${BITCOIND_LOCKFILE-/var/lock/subsys/bitcoind}\n-\n-# bitcoind defaults to /usr/bin/bitcoind, override with BITCOIND_BIN\n-bitcoind=${BITCOIND_BIN-/usr/bin/bitcoind}\n-\n-# bitcoind opts default to -disablewallet, override with BITCOIND_OPTS\n-bitcoind_opts=${BITCOIND_OPTS--disablewallet}\n-\n-start() {\n-    echo -n $\"Starting $prog: \"\n-    daemon $DAEMONOPTS $bitcoind $bitcoind_opts\n-    RETVAL=$?\n-    echo\n-    [ $RETVAL -eq 0 ] && touch $lockfile\n-    return $RETVAL\n-}\n-\n-stop() {\n-    echo -n $\"Stopping $prog: \"\n-    killproc $prog\n-    RETVAL=$?\n-    echo\n-    [ $RETVAL -eq 0 ] && rm -f $lockfile\n-    return $RETVAL\n-}\n-\n-case \"$1\" in\n-    start)\n-        start\n-        ;;\n-    stop)\n-        stop\n-        ;;\n-    status)\n-        status $prog\n-        ;;\n-    restart)\n-        stop\n-        start\n-        ;;\n-    *)\n-        echo \"Usage: service $prog {start|stop|status|restart}\"\n-        exit 1\n-        ;;\n-esac"
      },
      {
        "sha": "eda1a96fb4fcbaf3a61cafcd80368b5104ec0f56",
        "filename": "contrib/init/bitcoind.openrc",
        "status": "removed",
        "additions": 0,
        "deletions": 92,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/init/bitcoind.openrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/init/bitcoind.openrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrc?ref=8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311",
        "patch": "@@ -1,92 +0,0 @@\n-#!/sbin/runscript\n-\n-# backward compatibility for existing gentoo layout \n-#\n-if [ -d \"/var/lib/bitcoin/.bitcoin\" ]; then\n-\tBITCOIND_DEFAULT_DATADIR=\"/var/lib/bitcoin/.bitcoin\"\n-else\n-\tBITCOIND_DEFAULT_DATADIR=\"/var/lib/bitcoind\"\n-fi\n-\n-BITCOIND_CONFIGFILE=${BITCOIND_CONFIGFILE:-/etc/bitcoin/bitcoin.conf}\n-BITCOIND_PIDDIR=${BITCOIND_PIDDIR:-/var/run/bitcoind}\n-BITCOIND_PIDFILE=${BITCOIND_PIDFILE:-${BITCOIND_PIDDIR}/bitcoind.pid}\n-BITCOIND_DATADIR=${BITCOIND_DATADIR:-${BITCOIND_DEFAULT_DATADIR}}\n-BITCOIND_USER=${BITCOIND_USER:-${BITCOIN_USER:-bitcoin}}\n-BITCOIND_GROUP=${BITCOIND_GROUP:-bitcoin}\n-BITCOIND_BIN=${BITCOIND_BIN:-/usr/bin/bitcoind}\n-BITCOIND_NICE=${BITCOIND_NICE:-${NICELEVEL:-0}}\n-BITCOIND_OPTS=\"${BITCOIND_OPTS:-${BITCOIN_OPTS}}\"\n-\n-name=\"Bitcoin Core Daemon\"\n-description=\"Bitcoin cryptocurrency P2P network daemon\"\n-\n-command=\"/usr/bin/bitcoind\"\n-command_args=\"-pid=\\\"${BITCOIND_PIDFILE}\\\" \\\n-\t\t-conf=\\\"${BITCOIND_CONFIGFILE}\\\" \\\n-\t\t-datadir=\\\"${BITCOIND_DATADIR}\\\" \\\n-\t\t-daemon \\\n-\t\t${BITCOIND_OPTS}\"\n-\n-required_files=\"${BITCOIND_CONFIGFILE}\"\n-start_stop_daemon_args=\"-u ${BITCOIND_USER} \\\n-\t\t\t-N ${BITCOIND_NICE} -w 2000\"\n-pidfile=\"${BITCOIND_PIDFILE}\"\n-\n-# The retry schedule to use when stopping the daemon. Could be either\n-# a timeout in seconds or multiple signal/timeout pairs (like\n-# \"SIGKILL/180 SIGTERM/300\")\n-retry=\"${BITCOIND_SIGTERM_TIMEOUT}\"\n-\n-depend() {\n-\tneed localmount net\n-}\n-\n-# verify\n-# 1) that the datadir exists and is writable (or create it)\n-# 2) that a directory for the pid exists and is writable\n-# 3) ownership and permissions on the config file\n-start_pre() {\n-\tcheckpath \\\n-\t-d \\\n-\t--mode 0750 \\\n-\t--owner \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n-\t\"${BITCOIND_DATADIR}\"\n-\n-\tcheckpath \\\n-\t-d \\\n-\t--mode 0755 \\\n-\t--owner \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n-\t\"${BITCOIND_PIDDIR}\"\n-\n-\tcheckpath -f \\\n-\t-o ${BITCOIND_USER}:${BITCOIND_GROUP} \\\n-\t-m 0660 \\\n-\t${BITCOIND_CONFIGFILE}\n-\n-\tcheckconfig || return 1\n-}\n-\n-checkconfig()\n-{\n-\tif ! grep -qs '^rpcpassword=' \"${BITCOIND_CONFIGFILE}\" ; then\n-\t\teerror \"\"\n-\t\teerror \"ERROR: You must set a secure rpcpassword to run bitcoind.\"\n-\t\teerror \"The setting must appear in ${BITCOIND_CONFIGFILE}\"\n-\t\teerror \"\"\n-\t\teerror \"This password is security critical to securing wallets \"\n-\t\teerror \"and must not be the same as the rpcuser setting.\"\n-\t\teerror \"You can generate a suitable random password using the following\"\n-\t\teerror \"command from the shell:\"\n-\t\teerror \"\"\n-\t\teerror \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n-\t\teerror \"\"\n-\t\teerror \"It is also recommended that you also set alertnotify so you are \"\n-\t\teerror \"notified of problems:\"\n-\t\teerror \"\"\n-\t\teerror \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\\n-\t\t\t\"admin@foo.com\"\n-\t\teerror \"\"\n-\t\treturn 1\n-\tfi\n-}"
      },
      {
        "sha": "0cbff6d30d2d66bbafaaf2205f4dd7609b2113a1",
        "filename": "contrib/init/bitcoind.openrcconf",
        "status": "removed",
        "additions": 0,
        "deletions": 33,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/init/bitcoind.openrcconf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/init/bitcoind.openrcconf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrcconf?ref=8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311",
        "patch": "@@ -1,33 +0,0 @@\n-# /etc/conf.d/bitcoind: config file for /etc/init.d/bitcoind\n-\n-# Config file location\n-#BITCOIND_CONFIGFILE=\"/etc/bitcoin/bitcoin.conf\"\n-\n-# What directory to write pidfile to?  (created and owned by $BITCOIND_USER)\n-#BITCOIND_PIDDIR=\"/var/run/bitcoind\"\n-\n-# What filename to give the pidfile\n-#BITCOIND_PIDFILE=\"${BITCOIND_PIDDIR}/bitcoind.pid\"\n-\n-# Where to write bitcoind data (be mindful that the blockchain is large)\n-#BITCOIND_DATADIR=\"/var/lib/bitcoind\"\n-\n-# User and group to own bitcoind process\n-#BITCOIND_USER=\"bitcoin\"\n-#BITCOIND_GROUP=\"bitcoin\"\n-\n-# Path to bitcoind executable\n-#BITCOIND_BIN=\"/usr/bin/bitcoind\"\n-\n-# Nice value to run bitcoind under\n-#BITCOIND_NICE=0\n-\n-# Additional options (avoid -conf and -datadir, use flags above)\n-BITCOIND_OPTS=\"-disablewallet\"\n-\n-# The timeout in seconds OpenRC will wait for bitcoind to terminate\n-# after a SIGTERM has been raised.\n-# Note that this will be mapped as argument to start-stop-daemon's\n-# '--retry' option, which means you can specify a retry schedule\n-# here. For more information see man 8 start-stop-daemon.\n-BITCOIND_SIGTERM_TIMEOUT=60"
      },
      {
        "sha": "9132957c38b8d3ed6648b79d3948e41ee3861db0",
        "filename": "contrib/init/bitcoind.service",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/init/bitcoind.service",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/init/bitcoind.service",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.service?ref=8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311",
        "patch": "@@ -1,22 +0,0 @@\n-[Unit]\n-Description=Bitcoin's distributed currency daemon\n-After=network.target\n-\n-[Service]\n-User=bitcoin\n-Group=bitcoin\n-\n-Type=forking\n-PIDFile=/var/lib/bitcoind/bitcoind.pid\n-ExecStart=/usr/bin/bitcoind -daemon -pid=/var/lib/bitcoind/bitcoind.pid \\\n--conf=/etc/bitcoin/bitcoin.conf -datadir=/var/lib/bitcoind -disablewallet\n-\n-Restart=always\n-PrivateTmp=true\n-TimeoutStopSec=60s\n-TimeoutStartSec=2s\n-StartLimitInterval=120s\n-StartLimitBurst=5\n-\n-[Install]\n-WantedBy=multi-user.target"
      },
      {
        "sha": "34a469462da30cf522205601a462c286bae62c9e",
        "filename": "contrib/init/litecoind.conf",
        "status": "added",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/init/litecoind.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/init/litecoind.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/litecoind.conf?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -0,0 +1,65 @@\n+description \"Litecoin Core Daemon\"\n+\n+start on runlevel [2345]\n+stop on starting rc RUNLEVEL=[016]\n+\n+env LITECOIND_BIN=\"/usr/bin/litecoind\"\n+env LITECOIND_USER=\"litecoin\"\n+env LITECOIND_GROUP=\"litecoin\"\n+env LITECOIND_PIDDIR=\"/var/run/litecoind\"\n+# upstart can't handle variables constructed with other variables\n+env LITECOIND_PIDFILE=\"/var/run/litecoind/litecoind.pid\"\n+env LITECOIND_CONFIGFILE=\"/etc/litecoin/litecoin.conf\"\n+env LITECOIND_DATADIR=\"/var/lib/litecoind\"\n+\n+expect fork\n+\n+respawn\n+respawn limit 5 120\n+kill timeout 60\n+\n+pre-start script\n+    # this will catch non-existent config files\n+    # litecoind will check and exit with this very warning, but it can do so\n+    # long after forking, leaving upstart to think everything started fine.\n+    # since this is a commonly encountered case on install, just check and\n+    # warn here.\n+    if ! grep -qs '^rpcpassword=' \"$LITECOIND_CONFIGFILE\" ; then\n+        echo \"ERROR: You must set a secure rpcpassword to run litecoind.\"\n+        echo \"The setting must appear in $LITECOIND_CONFIGFILE\"\n+        echo\n+        echo \"This password is security critical to securing wallets \"\n+        echo \"and must not be the same as the rpcuser setting.\"\n+        echo \"You can generate a suitable random password using the following\"\n+        echo \"command from the shell:\"\n+        echo\n+        echo \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n+        echo\n+        echo \"It is also recommended that you also set alertnotify so you are \"\n+        echo \"notified of problems:\"\n+        echo\n+        echo \"ie: alertnotify=echo %%s | mail -s \\\"Litecoin Alert\\\"\" \\\n+            \"admin@foo.com\"\n+        echo\n+        exit 1\n+    fi\n+\n+    mkdir -p \"$LITECOIND_PIDDIR\"\n+    chmod 0755 \"$LITECOIND_PIDDIR\"\n+    chown $LITECOIND_USER:$LITECOIND_GROUP \"$LITECOIND_PIDDIR\"\n+    chown $LITECOIND_USER:$LITECOIND_GROUP \"$LITECOIND_CONFIGFILE\"\n+    chmod 0660 \"$LITECOIND_CONFIGFILE\"\n+end script\n+\n+exec start-stop-daemon \\\n+    --start \\\n+    --pidfile \"$LITECOIND_PIDFILE\" \\\n+    --chuid $LITECOIND_USER:$LITECOIND_GROUP \\\n+    --exec \"$LITECOIND_BIN\" \\\n+    -- \\\n+    -pid=\"$LITECOIND_PIDFILE\" \\\n+    -conf=\"$LITECOIND_CONFIGFILE\" \\\n+    -datadir=\"$LITECOIND_DATADIR\" \\\n+    -disablewallet \\\n+    -daemon\n+"
      },
      {
        "sha": "9458ac458d86fa4494ce5e8e4ccf5e3e872ff50f",
        "filename": "contrib/init/litecoind.init",
        "status": "added",
        "additions": 67,
        "deletions": 0,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/init/litecoind.init",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/init/litecoind.init",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/litecoind.init?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -0,0 +1,67 @@\n+#!/bin/bash\n+#\n+#  litecoind The litecoin core server.\n+#\n+#\n+# chkconfig: 345 80 20\n+# description: litecoind\n+# processname: litecoind\n+#\n+\n+# Source function library.\n+. /etc/init.d/functions\n+\n+# you can override defaults in /etc/sysconfig/litecoind, see below\n+if [ -f /etc/sysconfig/litecoind ]; then\n+        . /etc/sysconfig/litecoind\n+fi\n+\n+RETVAL=0\n+\n+prog=litecoind\n+# you can override the lockfile via LITECOIND_LOCKFILE in /etc/sysconfig/litecoind\n+lockfile=${LITECOIND_LOCKFILE-/var/lock/subsys/litecoind}\n+\n+# litecoind defaults to /usr/bin/litecoind, override with LITECOIND_BIN\n+litecoind=${LITECOIND_BIN-/usr/bin/litecoind}\n+\n+# litecoind opts default to -disablewallet, override with LITECOIND_OPTS\n+litecoind_opts=${LITECOIND_OPTS--disablewallet}\n+\n+start() {\n+    echo -n $\"Starting $prog: \"\n+    daemon $DAEMONOPTS $litecoind $litecoind_opts\n+    RETVAL=$?\n+    echo\n+    [ $RETVAL -eq 0 ] && touch $lockfile\n+    return $RETVAL\n+}\n+\n+stop() {\n+    echo -n $\"Stopping $prog: \"\n+    killproc $prog\n+    RETVAL=$?\n+    echo\n+    [ $RETVAL -eq 0 ] && rm -f $lockfile\n+    return $RETVAL\n+}\n+\n+case \"$1\" in\n+    start)\n+        start\n+        ;;\n+    stop)\n+        stop\n+        ;;\n+    status)\n+        status $prog\n+        ;;\n+    restart)\n+        stop\n+        start\n+        ;;\n+    *)\n+        echo \"Usage: service $prog {start|stop|status|restart}\"\n+        exit 1\n+        ;;\n+esac"
      },
      {
        "sha": "a6634200cea7f41bdd4670c675ffae9998db3553",
        "filename": "contrib/init/litecoind.openrc",
        "status": "added",
        "additions": 92,
        "deletions": 0,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/init/litecoind.openrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/init/litecoind.openrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/litecoind.openrc?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -0,0 +1,92 @@\n+#!/sbin/runscript\n+\n+# backward compatibility for existing gentoo layout \n+#\n+if [ -d \"/var/lib/litecoin/.litecoin\" ]; then\n+\tLITECOIND_DEFAULT_DATADIR=\"/var/lib/litecoin/.litecoin\"\n+else\n+\tLITECOIND_DEFAULT_DATADIR=\"/var/lib/litecoind\"\n+fi\n+\n+LITECOIND_CONFIGFILE=${LITECOIND_CONFIGFILE:-/etc/litecoin/litecoin.conf}\n+LITECOIND_PIDDIR=${LITECOIND_PIDDIR:-/var/run/litecoind}\n+LITECOIND_PIDFILE=${LITECOIND_PIDFILE:-${LITECOIND_PIDDIR}/litecoind.pid}\n+LITECOIND_DATADIR=${LITECOIND_DATADIR:-${LITECOIND_DEFAULT_DATADIR}}\n+LITECOIND_USER=${LITECOIND_USER:-${LITECOIN_USER:-litecoin}}\n+LITECOIND_GROUP=${LITECOIND_GROUP:-litecoin}\n+LITECOIND_BIN=${LITECOIND_BIN:-/usr/bin/litecoind}\n+LITECOIND_NICE=${LITECOIND_NICE:-${NICELEVEL:-0}}\n+LITECOIND_OPTS=\"${LITECOIND_OPTS:-${LITECOIN_OPTS}}\"\n+\n+name=\"Litecoin Core Daemon\"\n+description=\"Litecoin cryptocurrency P2P network daemon\"\n+\n+command=\"/usr/bin/litecoind\"\n+command_args=\"-pid=\\\"${LITECOIND_PIDFILE}\\\" \\\n+\t\t-conf=\\\"${LITECOIND_CONFIGFILE}\\\" \\\n+\t\t-datadir=\\\"${LITECOIND_DATADIR}\\\" \\\n+\t\t-daemon \\\n+\t\t${LITECOIND_OPTS}\"\n+\n+required_files=\"${LITECOIND_CONFIGFILE}\"\n+start_stop_daemon_args=\"-u ${LITECOIND_USER} \\\n+\t\t\t-N ${LITECOIND_NICE} -w 2000\"\n+pidfile=\"${LITECOIND_PIDFILE}\"\n+\n+# The retry schedule to use when stopping the daemon. Could be either\n+# a timeout in seconds or multiple signal/timeout pairs (like\n+# \"SIGKILL/180 SIGTERM/300\")\n+retry=\"${LITECOIND_SIGTERM_TIMEOUT}\"\n+\n+depend() {\n+\tneed localmount net\n+}\n+\n+# verify\n+# 1) that the datadir exists and is writable (or create it)\n+# 2) that a directory for the pid exists and is writable\n+# 3) ownership and permissions on the config file\n+start_pre() {\n+\tcheckpath \\\n+\t-d \\\n+\t--mode 0750 \\\n+\t--owner \"${LITECOIND_USER}:${LITECOIND_GROUP}\" \\\n+\t\"${LITECOIND_DATADIR}\"\n+\n+\tcheckpath \\\n+\t-d \\\n+\t--mode 0755 \\\n+\t--owner \"${LITECOIND_USER}:${LITECOIND_GROUP}\" \\\n+\t\"${LITECOIND_PIDDIR}\"\n+\n+\tcheckpath -f \\\n+\t-o ${LITECOIND_USER}:${LITECOIND_GROUP} \\\n+\t-m 0660 \\\n+\t${LITECOIND_CONFIGFILE}\n+\n+\tcheckconfig || return 1\n+}\n+\n+checkconfig()\n+{\n+\tif ! grep -qs '^rpcpassword=' \"${LITECOIND_CONFIGFILE}\" ; then\n+\t\teerror \"\"\n+\t\teerror \"ERROR: You must set a secure rpcpassword to run litecoind.\"\n+\t\teerror \"The setting must appear in ${LITECOIND_CONFIGFILE}\"\n+\t\teerror \"\"\n+\t\teerror \"This password is security critical to securing wallets \"\n+\t\teerror \"and must not be the same as the rpcuser setting.\"\n+\t\teerror \"You can generate a suitable random password using the following\"\n+\t\teerror \"command from the shell:\"\n+\t\teerror \"\"\n+\t\teerror \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n+\t\teerror \"\"\n+\t\teerror \"It is also recommended that you also set alertnotify so you are \"\n+\t\teerror \"notified of problems:\"\n+\t\teerror \"\"\n+\t\teerror \"ie: alertnotify=echo %%s | mail -s \\\"Litecoin Alert\\\"\" \\\n+\t\t\t\"admin@foo.com\"\n+\t\teerror \"\"\n+\t\treturn 1\n+\tfi\n+}"
      },
      {
        "sha": "3c26dde7385ebe203112dd2a68531addfe24e274",
        "filename": "contrib/init/litecoind.openrcconf",
        "status": "added",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/init/litecoind.openrcconf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/init/litecoind.openrcconf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/litecoind.openrcconf?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -0,0 +1,33 @@\n+# /etc/conf.d/litecoind: config file for /etc/init.d/litecoind\n+\n+# Config file location\n+#LITECOIND_CONFIGFILE=\"/etc/litecoin/litecoin.conf\"\n+\n+# What directory to write pidfile to?  (created and owned by $LITECOIND_USER)\n+#LITECOIND_PIDDIR=\"/var/run/litecoind\"\n+\n+# What filename to give the pidfile\n+#LITECOIND_PIDFILE=\"${LITECOIND_PIDDIR}/litecoind.pid\"\n+\n+# Where to write litecoind data (be mindful that the blockchain is large)\n+#LITECOIND_DATADIR=\"/var/lib/litecoind\"\n+\n+# User and group to own litecoind process\n+#LITECOIND_USER=\"litecoin\"\n+#LITECOIND_GROUP=\"litecoin\"\n+\n+# Path to litecoind executable\n+#LITECOIND_BIN=\"/usr/bin/litecoind\"\n+\n+# Nice value to run litecoind under\n+#LITECOIND_NICE=0\n+\n+# Additional options (avoid -conf and -datadir, use flags above)\n+LITECOIND_OPTS=\"-disablewallet\"\n+\n+# The timeout in seconds OpenRC will wait for litecoind to terminate\n+# after a SIGTERM has been raised.\n+# Note that this will be mapped as argument to start-stop-daemon's\n+# '--retry' option, which means you can specify a retry schedule\n+# here. For more information see man 8 start-stop-daemon.\n+LITECOIND_SIGTERM_TIMEOUT=60"
      },
      {
        "sha": "b8a0f82959fbc587ef558c03b8478bb89fd83082",
        "filename": "contrib/init/litecoind.service",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/init/litecoind.service",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/init/litecoind.service",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/litecoind.service?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -0,0 +1,22 @@\n+[Unit]\n+Description=Litecoin's distributed currency daemon\n+After=network.target\n+\n+[Service]\n+User=litecoin\n+Group=litecoin\n+\n+Type=forking\n+PIDFile=/var/lib/litecoind/litecoind.pid\n+ExecStart=/usr/bin/litecoind -daemon -pid=/var/lib/litecoind/litecoind.pid \\\n+-conf=/etc/litecoin/litecoin.conf -datadir=/var/lib/litecoind -disablewallet\n+\n+Restart=always\n+PrivateTmp=true\n+TimeoutStopSec=60s\n+TimeoutStartSec=2s\n+StartLimitInterval=120s\n+StartLimitBurst=5\n+\n+[Install]\n+WantedBy=multi-user.target"
      },
      {
        "sha": "dbc947adb12eff741682c5182acc169881b17395",
        "filename": "contrib/init/org.litecoin.litecoind.plist",
        "status": "renamed",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/init/org.litecoin.litecoind.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/init/org.litecoin.litecoind.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/org.litecoin.litecoind.plist?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -3,10 +3,10 @@\n <plist version=\"1.0\">\n <dict>\n \t<key>Label</key>\n-\t<string>org.bitcoin.bitcoind</string>\n+\t<string>org.litecoin.litecoind</string>\n \t<key>ProgramArguments</key>\n \t<array>\n-\t\t<string>/usr/local/bin/bitcoind</string>\n+\t\t<string>/usr/local/bin/litecoind</string>\n \t\t<string>-daemon</string>\n \t</array>\n \t<key>RunAtLoad</key>",
        "previous_filename": "contrib/init/org.bitcoin.bitcoind.plist"
      },
      {
        "sha": "40224ae2d50d8a70ed180659f896972a03096391",
        "filename": "contrib/linearize/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -17,7 +17,7 @@ Optional config file setting for linearize-hashes:\n     $ ./linearize-data.py linearize.cfg\n \n Required configuration file settings:\n-* \"input\": bitcoind blocks/ directory containing blkNNNNN.dat\n+* \"input\": litecoind blocks/ directory containing blkNNNNN.dat\n * \"hashlist\": text file containing list of block hashes, linearized-hashes.py\n output.\n * \"output_file\": bootstrap.dat"
      },
      {
        "sha": "5c4a3573032b4bf3a883375943c14d2de08154d2",
        "filename": "contrib/linearize/example-linearize.cfg",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/linearize/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/linearize/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize.cfg?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n \n-# bitcoind RPC settings (linearize-hashes)\n+# litecoind RPC settings (linearize-hashes)\n rpcuser=someuser\n rpcpassword=somepassword\n host=127.0.0.1\n@@ -14,12 +14,12 @@ max_height=313000\n # mainnet\n netmagic=f9beb4d9\n genesis=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n-input=/home/example/.bitcoin/blocks\n+input=/home/example/.litecoin/blocks\n \n # testnet\n #netmagic=0b110907\n #genesis=000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\n-#input=/home/example/.bitcoin/testnet3/blocks\n+#input=/home/example/.litecoin/testnet3/blocks\n \n output_file=/home/example/Downloads/bootstrap.dat\n hashlist=hashlist.txt"
      },
      {
        "sha": "28c7efb90b7accdf9f6c55f26381ca09c0b1c2d7",
        "filename": "contrib/linearize/linearize-data.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/linearize/linearize-data.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/linearize/linearize-data.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-data.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -2,7 +2,7 @@\n #\n # linearize-data.py: Construct a linear, no-fork version of the chain.\n #\n-# Copyright (c) 2013-2014 The Bitcoin Core developers\n+# Copyright (c) 2013-2014 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #"
      },
      {
        "sha": "56a691a9568be806c6445650fea9b03e03a3c2b7",
        "filename": "contrib/linearize/linearize-hashes.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/linearize/linearize-hashes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/linearize/linearize-hashes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-hashes.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -2,7 +2,7 @@\n #\n # linearize-hashes.py:  List blocks in a linear, no-fork version of the chain.\n #\n-# Copyright (c) 2013-2014 The Bitcoin Core developers\n+# Copyright (c) 2013-2014 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n@@ -17,7 +17,7 @@\n \n settings = {}\n \n-class BitcoinRPC:\n+class LitecoinRPC:\n \tdef __init__(self, host, port, username, password):\n \t\tauthpair = \"%s:%s\" % (username, password)\n \t\tself.authhdr = \"Basic %s\" % (base64.b64encode(authpair))\n@@ -53,7 +53,7 @@ def response_is_error(resp_obj):\n \t\treturn 'error' in resp_obj and resp_obj['error'] is not None\n \n def get_block_hashes(settings, max_blocks_per_call=10000):\n-\trpc = BitcoinRPC(settings['host'], settings['port'],\n+\trpc = LitecoinRPC(settings['host'], settings['port'],\n \t\t\t settings['rpcuser'], settings['rpcpassword'])\n \n \theight = settings['min_height']"
      },
      {
        "sha": "ffb239d1397abf88e5511a6fc55db860e37d6946",
        "filename": "contrib/litecoin-cli.bash-completion",
        "status": "renamed",
        "additions": 18,
        "deletions": 18,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/litecoin-cli.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/litecoin-cli.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/litecoin-cli.bash-completion?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,10 +1,10 @@\n-# bash programmable completion for bitcoin-cli(1)\n-# Copyright (c) 2012-2016 The Bitcoin Core developers\n+# bash programmable completion for litecoin-cli(1)\n+# Copyright (c) 2012-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-# call $bitcoin-cli for RPC\n-_bitcoin_rpc() {\n+# call $litecoin-cli for RPC\n+_litecoin_rpc() {\n     # determine already specified args necessary for RPC\n     local rpcargs=()\n     for i in ${COMP_LINE}; do\n@@ -14,23 +14,23 @@ _bitcoin_rpc() {\n                 ;;\n         esac\n     done\n-    $bitcoin_cli \"${rpcargs[@]}\" \"$@\"\n+    $litecoin_cli \"${rpcargs[@]}\" \"$@\"\n }\n \n # Add wallet accounts to COMPREPLY\n-_bitcoin_accounts() {\n+_litecoin_accounts() {\n     local accounts\n-    accounts=$(_bitcoin_rpc listaccounts | awk -F '\"' '{ print $2 }')\n+    accounts=$(_litecoin_rpc listaccounts | awk -F '\"' '{ print $2 }')\n     COMPREPLY=( \"${COMPREPLY[@]}\" $( compgen -W \"$accounts\" -- \"$cur\" ) )\n }\n \n-_bitcoin_cli() {\n+_litecoin_cli() {\n     local cur prev words=() cword\n-    local bitcoin_cli\n+    local litecoin_cli\n \n-    # save and use original argument to invoke bitcoin-cli for -help, help and RPC\n-    # as bitcoin-cli might not be in $PATH\n-    bitcoin_cli=\"$1\"\n+    # save and use original argument to invoke litecoin-cli for -help, help and RPC\n+    # as litecoin-cli might not be in $PATH\n+    litecoin_cli=\"$1\"\n \n     COMPREPLY=()\n     _get_comp_words_by_ref -n = cur prev words cword\n@@ -60,7 +60,7 @@ _bitcoin_cli() {\n     if ((cword > 3)); then\n         case ${words[cword-3]} in\n             addmultisigaddress)\n-                _bitcoin_accounts\n+                _litecoin_accounts\n                 return 0\n                 ;;\n             getbalance|gettxout|importaddress|importpubkey|importprivkey|listreceivedbyaccount|listreceivedbyaddress|listsinceblock)\n@@ -85,7 +85,7 @@ _bitcoin_cli() {\n                 return 0\n                 ;;\n             move|setaccount)\n-                _bitcoin_accounts\n+                _litecoin_accounts\n                 return 0\n                 ;;\n         esac\n@@ -101,7 +101,7 @@ _bitcoin_cli() {\n             return 0\n             ;;\n         getaccountaddress|getaddressesbyaccount|getbalance|getnewaddress|getreceivedbyaccount|listtransactions|move|sendfrom|sendmany)\n-            _bitcoin_accounts\n+            _litecoin_accounts\n             return 0\n             ;;\n     esac\n@@ -125,12 +125,12 @@ _bitcoin_cli() {\n \n             # only parse -help if senseful\n             if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n-                helpopts=$($bitcoin_cli -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n+                helpopts=$($litecoin_cli -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n             fi\n \n             # only parse help if senseful\n             if [[ -z \"$cur\" || \"$cur\" =~ ^[a-z] ]]; then\n-                commands=$(_bitcoin_rpc help 2>/dev/null | awk '$1 ~ /^[a-z]/ { print $1; }')\n+                commands=$(_litecoin_rpc help 2>/dev/null | awk '$1 ~ /^[a-z]/ { print $1; }')\n             fi\n \n             COMPREPLY=( $( compgen -W \"$helpopts $commands\" -- \"$cur\" ) )\n@@ -143,7 +143,7 @@ _bitcoin_cli() {\n             ;;\n     esac\n } &&\n-complete -F _bitcoin_cli bitcoin-cli\n+complete -F _litecoin_cli litecoin-cli\n \n # Local variables:\n # mode: shell-script",
        "previous_filename": "contrib/bitcoin-cli.bash-completion"
      },
      {
        "sha": "dc590f0a85d10ee3d3fb331ed7d40c5a739ff3dc",
        "filename": "contrib/litecoin-qt.pro",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/litecoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/litecoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/litecoin-qt.pro?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -18,4 +18,4 @@ FORMS += \\\n     ../src/qt/forms/transactiondescdialog.ui \\\n \n RESOURCES += \\\n-    ../src/qt/bitcoin.qrc\n+    ../src/qt/litecoin.qrc",
        "previous_filename": "contrib/bitcoin-qt.pro"
      },
      {
        "sha": "c86b3029355adb1714940d772f0ae7b50513ab50",
        "filename": "contrib/litecoin-tx.bash-completion",
        "status": "renamed",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/litecoin-tx.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/litecoin-tx.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/litecoin-tx.bash-completion?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,15 +1,15 @@\n-# bash programmable completion for bitcoin-tx(1)\n-# Copyright (c) 2016 The Bitcoin Core developers\n+# bash programmable completion for litecoin-tx(1)\n+# Copyright (c) 2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-_bitcoin_tx() {\n+_litecoin_tx() {\n     local cur prev words=() cword\n-    local bitcoin_tx\n+    local litecoin_tx\n \n-    # save and use original argument to invoke bitcoin-tx for -help\n+    # save and use original argument to invoke litecoin-tx for -help\n     # it might not be in $PATH\n-    bitcoin_tx=\"$1\"\n+    litecoin_tx=\"$1\"\n \n     COMPREPLY=()\n     _get_comp_words_by_ref -n =: cur prev words cword\n@@ -27,15 +27,15 @@ _bitcoin_tx() {\n \n     if [[ \"$cword\" == 1 || ( \"$prev\" != \"-create\" && \"$prev\" == -* ) ]]; then\n         # only options (or an uncompletable hex-string) allowed\n-        # parse bitcoin-tx -help for options\n+        # parse litecoin-tx -help for options\n         local helpopts\n-        helpopts=$($bitcoin_tx -help | sed -e '/^  -/ p' -e d )\n+        helpopts=$($litecoin_tx -help | sed -e '/^  -/ p' -e d )\n         COMPREPLY=( $( compgen -W \"$helpopts\" -- \"$cur\" ) )\n     else\n         # only commands are allowed\n         # parse -help for commands\n         local helpcmds\n-        helpcmds=$($bitcoin_tx -help | sed -e '1,/Commands:/d' -e 's/=.*/=/' -e '/^  [a-z]/ p' -e d )\n+        helpcmds=$($litecoin_tx -help | sed -e '1,/Commands:/d' -e 's/=.*/=/' -e '/^  [a-z]/ p' -e d )\n         COMPREPLY=( $( compgen -W \"$helpcmds\" -- \"$cur\" ) )\n     fi\n \n@@ -46,7 +46,7 @@ _bitcoin_tx() {\n \n     return 0\n } &&\n-complete -F _bitcoin_tx bitcoin-tx\n+complete -F _litecoin_tx litecoin-tx\n \n # Local variables:\n # mode: shell-script",
        "previous_filename": "contrib/bitcoin-tx.bash-completion"
      },
      {
        "sha": "c2f302fe53af16c9ffadcf5379b538bc432df9a4",
        "filename": "contrib/litecoind.bash-completion",
        "status": "renamed",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/litecoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/litecoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/litecoind.bash-completion?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,15 +1,15 @@\n-# bash programmable completion for bitcoind(1) and bitcoin-qt(1)\n-# Copyright (c) 2012-2016 The Bitcoin Core developers\n+# bash programmable completion for litecoind(1) and litecoin-qt(1)\n+# Copyright (c) 2012-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-_bitcoind() {\n+_litecoind() {\n     local cur prev words=() cword\n-    local bitcoind\n+    local litecoind\n \n-    # save and use original argument to invoke bitcoind for -help\n+    # save and use original argument to invoke litecoind for -help\n     # it might not be in $PATH\n-    bitcoind=\"$1\"\n+    litecoind=\"$1\"\n \n     COMPREPLY=()\n     _get_comp_words_by_ref -n = cur prev words cword\n@@ -33,7 +33,7 @@ _bitcoind() {\n             # only parse -help if senseful\n             if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n                 local helpopts\n-                helpopts=$($bitcoind -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n+                helpopts=$($litecoind -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n                 COMPREPLY=( $( compgen -W \"$helpopts\" -- \"$cur\" ) )\n             fi\n \n@@ -45,7 +45,7 @@ _bitcoind() {\n             ;;\n     esac\n } &&\n-complete -F _bitcoind bitcoind bitcoin-qt\n+complete -F _litecoind litecoind litecoin-qt\n \n # Local variables:\n # mode: shell-script",
        "previous_filename": "contrib/bitcoind.bash-completion"
      },
      {
        "sha": "50cc94d20eeaa27f125da2804c7ec37f03564d89",
        "filename": "contrib/macdeploy/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/macdeploy/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/macdeploy/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/README.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -11,5 +11,5 @@ This script should not be run manually, instead, after building as usual:\n During the process, the disk image window will pop up briefly where the fancy\n settings are applied. This is normal, please do not interfere.\n \n-When finished, it will produce `Bitcoin-Core.dmg`.\n+When finished, it will produce `Litecoin-Core.dmg`.\n "
      },
      {
        "sha": "1f1575495022a4f6221548585ac990ddfb2361b0",
        "filename": "contrib/macdeploy/background.svg",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/macdeploy/background.svg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/macdeploy/background.svg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.svg?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -3,7 +3,7 @@\n  \"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\">\n <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1000pt\" height=\"640pt\" viewBox=\"0 0 1000 640\" preserveAspectRatio=\"xMidYMid meet\">\n \t<!-- kate: space-indent off;\n-\tCopyright (c) 2015 The Bitcoin Core developers\n+\tCopyright (c) 2015 The Litecoin Core developers\n \tDistributed under the MIT software license, see the accompanying\n \tfile COPYING or http://www.opensource.org/licenses/mit-license.php.\n \t-->"
      },
      {
        "sha": "efc8ee5ba3f016e7aea79bd7456f55a5abc4bc24",
        "filename": "contrib/macdeploy/custom_dsstore.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/macdeploy/custom_dsstore.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/macdeploy/custom_dsstore.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/custom_dsstore.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python\n-# Copyright (c) 2013-2015 The Bitcoin Core developers\n+# Copyright (c) 2013-2015 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n from __future__ import division,print_function,unicode_literals\n@@ -28,7 +28,7 @@\n     'gridOffsetX': 0.0,\n     'textSize': 12.0,\n     'viewOptionsVersion': 1,\n-    'backgroundImageAlias': b'\\x00\\x00\\x00\\x00\\x02\\x1e\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xd1\\x94\\\\\\xb0H+\\x00\\x05\\x00\\x00\\x00\\x98\\x0fbackground.tiff\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x99\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\x00\\x00\\r\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0b.background\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x98\\x00\\x0e\\x00 \\x00\\x0f\\x00b\\x00a\\x00c\\x00k\\x00g\\x00r\\x00o\\x00u\\x00n\\x00d\\x00.\\x00t\\x00i\\x00f\\x00f\\x00\\x0f\\x00\\x02\\x00\\x00\\x00\\x12\\x00\\x1c/.background/background.tiff\\x00\\x14\\x01\\x06\\x00\\x00\\x00\\x00\\x01\\x06\\x00\\x02\\x00\\x00\\x0cMacintosh HD\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xce\\x97\\xab\\xc3H+\\x00\\x00\\x01\\x88[\\x88\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02u\\xab\\x8d\\xd1\\x94\\\\\\xb0devrddsk\\xff\\xff\\xff\\xff\\x00\\x00\\t \\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x07bitcoin\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xce\\x97\\xab\\xc3\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x01\\x00\\x14\\x01\\x88[\\x88\\x00\\x16\\xa9\\t\\x00\\x08\\xfaR\\x00\\x08\\xfaQ\\x00\\x02d\\x8e\\x00\\x0e\\x00\\x02\\x00\\x00\\x00\\x0f\\x00\\x1a\\x00\\x0c\\x00M\\x00a\\x00c\\x00i\\x00n\\x00t\\x00o\\x00s\\x00h\\x00 \\x00H\\x00D\\x00\\x13\\x00\\x01/\\x00\\x00\\x15\\x00\\x02\\x00\\x14\\xff\\xff\\x00\\x00\\xff\\xff\\x00\\x00',\n+    'backgroundImageAlias': b'\\x00\\x00\\x00\\x00\\x02\\x1e\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xd1\\x94\\\\\\xb0H+\\x00\\x05\\x00\\x00\\x00\\x98\\x0fbackground.tiff\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x99\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\x00\\x00\\r\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0b.background\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x98\\x00\\x0e\\x00 \\x00\\x0f\\x00b\\x00a\\x00c\\x00k\\x00g\\x00r\\x00o\\x00u\\x00n\\x00d\\x00.\\x00t\\x00i\\x00f\\x00f\\x00\\x0f\\x00\\x02\\x00\\x00\\x00\\x12\\x00\\x1c/.background/background.tiff\\x00\\x14\\x01\\x06\\x00\\x00\\x00\\x00\\x01\\x06\\x00\\x02\\x00\\x00\\x0cMacintosh HD\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xce\\x97\\xab\\xc3H+\\x00\\x00\\x01\\x88[\\x88\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02u\\xab\\x8d\\xd1\\x94\\\\\\xb0devrddsk\\xff\\xff\\xff\\xff\\x00\\x00\\t \\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x07litecoin\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xce\\x97\\xab\\xc3\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x01\\x00\\x14\\x01\\x88[\\x88\\x00\\x16\\xa9\\t\\x00\\x08\\xfaR\\x00\\x08\\xfaQ\\x00\\x02d\\x8e\\x00\\x0e\\x00\\x02\\x00\\x00\\x00\\x0f\\x00\\x1a\\x00\\x0c\\x00M\\x00a\\x00c\\x00i\\x00n\\x00t\\x00o\\x00s\\x00h\\x00 \\x00H\\x00D\\x00\\x13\\x00\\x01/\\x00\\x00\\x15\\x00\\x02\\x00\\x14\\xff\\xff\\x00\\x00\\xff\\xff\\x00\\x00',\n     'backgroundColorBlue': 1.0,\n     'iconSize': 96.0,\n     'backgroundColorGreen': 1.0,\n@@ -45,16 +45,16 @@\n alias.volume.name = package_name_ns\n alias.volume.posix_path = '/Volumes/' + package_name_ns\n alias.volume.disk_image_alias.target.filename = package_name_ns + '.temp.dmg'\n-alias.volume.disk_image_alias.target.carbon_path = 'Macintosh HD:Users:\\x00bitcoinuser:\\x00Documents:\\x00bitcoin:\\x00bitcoin:\\x00' + package_name_ns + '.temp.dmg'\n-alias.volume.disk_image_alias.target.posix_path = 'Users/bitcoinuser/Documents/bitcoin/bitcoin/' + package_name_ns + '.temp.dmg'\n+alias.volume.disk_image_alias.target.carbon_path = 'Macintosh HD:Users:\\x00litecoinuser:\\x00Documents:\\x00litecoin:\\x00litecoin:\\x00' + package_name_ns + '.temp.dmg'\n+alias.volume.disk_image_alias.target.posix_path = 'Users/litecoinuser/Documents/litecoin/litecoin/' + package_name_ns + '.temp.dmg'\n alias.target.carbon_path = package_name_ns + ':.background:\\x00background.tiff'\n icvp['backgroundImageAlias'] = biplist.Data(alias.to_bytes())\n ds['.']['icvp'] = icvp\n \n ds['.']['vSrn'] = ('long', 1)\n \n ds['Applications']['Iloc'] = (370, 156)\n-ds['Bitcoin-Qt.app']['Iloc'] = (128, 156)\n+ds['Litecoin-Qt.app']['Iloc'] = (128, 156)\n \n ds.flush()\n ds.close()"
      },
      {
        "sha": "d8714fa1bcf4678a8e9754805f5aa7f8905ec418",
        "filename": "contrib/macdeploy/detached-sig-create.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/macdeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/macdeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-create.sh?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -2,7 +2,7 @@\n set -e\n \n ROOTDIR=dist\n-BUNDLE=\"${ROOTDIR}/Bitcoin-Qt.app\"\n+BUNDLE=\"${ROOTDIR}/Litecoin-Qt.app\"\n CODESIGN=codesign\n TEMPDIR=sign.temp\n TEMPLIST=${TEMPDIR}/signatures.txt"
      },
      {
        "sha": "1dd36c9d1b03f35e3a09f9dee9a03eabd93baa68",
        "filename": "contrib/macdeploy/fancy.plist",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/macdeploy/fancy.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/macdeploy/fancy.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/fancy.plist?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -22,7 +22,7 @@\n \t\t\t<integer>370</integer>\n \t\t\t<integer>156</integer>\n \t\t</array>\n-\t\t<key>Bitcoin-Qt.app</key>\n+\t\t<key>Litecoin-Qt.app</key>\n \t\t<array>\n \t\t\t<integer>128</integer>\n \t\t\t<integer>156</integer>"
      },
      {
        "sha": "86ae06bfc2d96013e504b8cd68aae1a6cc3e944a",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -155,7 +155,7 @@ class FrameworkInfo(object):\n class ApplicationBundleInfo(object):\n     def __init__(self, path):\n         self.path = path\n-        appName = \"Bitcoin-Qt\"\n+        appName = \"Litecoin-Qt\"\n         self.binaryPath = os.path.join(path, \"Contents\", \"MacOS\", appName)\n         if not os.path.exists(self.binaryPath):\n             raise RuntimeError(\"Could not find bundle binary for \" + path)\n@@ -604,7 +604,7 @@ else:\n \n # ------------------------------------------------\n \n-target = os.path.join(\"dist\", \"Bitcoin-Qt.app\")\n+target = os.path.join(\"dist\", \"Litecoin-Qt.app\")\n \n if verbose >= 2:\n     print(\"+ Copying source bundle +\")"
      },
      {
        "sha": "c0577bd44034a09623056cb0054d1e323c598a5d",
        "filename": "contrib/qos/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/qos/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/qos/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/README.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n ### Qos ###\n \n-This is a Linux bash script that will set up tc to limit the outgoing bandwidth for connections to the Bitcoin network. It limits outbound TCP traffic with a source or destination port of 8333, but not if the destination IP is within a LAN (defined as 192.168.x.x).\n+This is a Linux bash script that will set up tc to limit the outgoing bandwidth for connections to the Litecoin network. It limits outbound TCP traffic with a source or destination port of 8333, but not if the destination IP is within a LAN (defined as 192.168.x.x).\n \n-This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it.\n+This means one can have an always-on litecoind instance running, and another local litecoind/litecoin-qt instance which connects to this node and receives blocks from it."
      },
      {
        "sha": "327e0f0f6fa742a4059ffbb92702b4dc6829484f",
        "filename": "contrib/qos/tc.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/qos/tc.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/qos/tc.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/tc.sh?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -2,7 +2,7 @@\n IF=\"eth0\"\n #limit of the network interface in question\n LINKCEIL=\"1gbit\"\n-#limit outbound Bitcoin protocol traffic to this rate\n+#limit outbound Litecoin protocol traffic to this rate\n LIMIT=\"160kbit\"\n #defines the address space for which you wish to disable rate limiting\n LOCALNET=\"192.168.0.0/16\""
      },
      {
        "sha": "8b253c000ce1288019a196bbba20b3c5acbcc5c3",
        "filename": "contrib/qt_translations.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/qt_translations.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/qt_translations.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qt_translations.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -2,21 +2,21 @@\n \n # Helpful little script that spits out a comma-separated list of\n # language codes for Qt icons that should be included\n-# in binary bitcoin distributions\n+# in binary litecoin distributions\n \n import glob\n import os\n import re\n import sys\n \n if len(sys.argv) != 3:\n-  sys.exit(\"Usage: %s $QTDIR/translations $BITCOINDIR/src/qt/locale\"%sys.argv[0])\n+  sys.exit(\"Usage: %s $QTDIR/translations $LITECOINDIR/src/qt/locale\"%sys.argv[0])\n \n d1 = sys.argv[1]\n d2 = sys.argv[2]\n \n l1 = set([ re.search(r'qt_(.*).qm', f).group(1) for f in glob.glob(os.path.join(d1, 'qt_*.qm')) ])\n-l2 = set([ re.search(r'bitcoin_(.*).qm', f).group(1) for f in glob.glob(os.path.join(d2, 'bitcoin_*.qm')) ])\n+l2 = set([ re.search(r'litecoin_(.*).qm', f).group(1) for f in glob.glob(os.path.join(d2, 'litecoin_*.qm')) ])\n \n print \",\".join(sorted(l1.intersection(l2)))\n "
      },
      {
        "sha": "f5346c433c5e7d340e8bed717b6a56d5552a08a1",
        "filename": "contrib/rpm/README.md",
        "status": "modified",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/rpm/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/rpm/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/README.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,7 +1,7 @@\n RPM Spec File Notes\n -------------------\n \n-The RPM spec file provided here is for Bitcoin-Core 0.12.0 and builds on CentOS\n+The RPM spec file provided here is for Litecoin-Core 0.12.0 and builds on CentOS\n 7 with either the CentOS provided OpenSSL library or with LibreSSL as packaged\n at [LibreLAMP.com](https://librelamp.com/). It should hopefully not be too\n difficult to port the RPM spec file to most RPM based Linux distributions.\n@@ -15,15 +15,15 @@ It is considered good form for all sources to reference a URL where the source\n can be downloaded.\n \n Sources 0-9 should be reserved for source code tarballs. `Source0` should\n-reference the release tarball available from https://bitcoin.org/bin/ and\n+reference the release tarball available from https://litecoin.org/bin/ and\n `Source1` should reference the BerkeleyDB source.\n \n Sources 10-99 are for source files that are maintained in the\n-[Bitcoin git repository](https://github.com/bitcoin/bitcoin) but are not part of\n+[Litecoin git repository](https://github.com/wangxinxi/litecoin) but are not part of\n the release tarball. Most of these will reside in the `contrib` sub-directory.\n \n Sources 10-19 should be reserved for miscellaneous configuration files.\n-Currently only `Source10` is used, for the example `bitcoin.conf` file.\n+Currently only `Source10` is used, for the example `litecoin.conf` file.\n \n Sources 20-29 should be reserved for man pages. Currently only `Source20`\n through `Source23` are used.\n@@ -34,21 +34,21 @@ release, the full URL specified in the RPM spec file will not work. You can get\n them from the git ropository where you retrieved this file.\n \n Sources 100+ are for files that are not source tarballs and are not maintained\n-in the bitcoin git repository. At present only an SVG version of the Bitcoin\n+in the litecoin git repository. At present only an SVG version of the Litecoin\n icon is used.\n \n ## Patches\n \n In general, patches should be avoided. When a packager feels a patch is\n-necessary, the packager should bring the problem to the attention of the bitcoin\n+necessary, the packager should bring the problem to the attention of the litecoin\n developers so that an official fix to the issue can make it into the next\n release.\n \n-### Patch0 bitcoin-0.12.0-libressl.patch\n+### Patch0 litecoin-0.12.0-libressl.patch\n \n This patch is only needed if building against LibreSSL. LibreSSL is not the\n standard TLS library on most Linux distributions. The patch will likely not be\n-needed when 0.12.1 is released, a proper fix is already in the Bitcoin git\n+needed when 0.12.1 is released, a proper fix is already in the Litecoin git\n master branch.\n \n ## BuildRequires\n@@ -62,7 +62,7 @@ most likely to be the case with the Qt packages.\n \n The `build-unix.md` file recommends building against BerkeleyDB 4.8.30. Even if\n that is the version your Linux distribution ships with, it probably is a good\n-idea to build Bitcoin Core against a static version of that library compiled\n+idea to build Litecoin Core against a static version of that library compiled\n according to the instructions in the `build-unix.md` file so that any changes\n the distribution may make in the future will not result in a problem for users.\n \n@@ -91,15 +91,15 @@ assigned to them in the `touch` command that specifies the time stamp.\n \n ## SVG, PNG, and XPM Icons\n \n-The `bitcoin.svg` file is from the source listed as `Source100`. It is used as\n+The `litecoin.svg` file is from the source listed as `Source100`. It is used as\n the source for the PNG and XPM files. The generated PNG and XPM files are given\n the same time stamp as the source SVG file as a means of indicating they are\n derived from it.\n \n ## Systemd\n \n This spec file assumes the target distribution uses systemd. That really only\n-matters for the `bitcoin-server` package. At this point, most RPM based\n+matters for the `litecoin-server` package. At this point, most RPM based\n distributions that still receive vendor updates do in fact use systemd.\n \n The files to control the service are created in the RPM spec file itself using\n@@ -112,7 +112,7 @@ command that specifies the time stamp.\n \n ## SELinux\n \n-The `bitcoin-server` package should have SELinux support. How to properly do\n+The `litecoin-server` package should have SELinux support. How to properly do\n that *may* vary by distribution and version of distribution.\n \n The SELinux stuff in this RPM spec file *should* be correct for CentOS, RHEL,\n@@ -137,7 +137,7 @@ want the OpenSSL development files.\n LibreSSL (and some newer builds of OpenSSL) do not have support for SSLv3. This\n can cause issues with the Boost package if the Boost package has not been\n patched accordingly. On those distributions, you will either need to build\n-Bitcoin-Core against OpenSSL or use a patched version of Boost in the build\n+Litecoin-Core against OpenSSL or use a patched version of Boost in the build\n system.\n \n As SSLv3 is no longer safe, distributions that have not patched Boost to work\n@@ -156,8 +156,8 @@ developed on (CentOS 7).\n ## Legacy Credit\n \n This RPM spec file is largely based upon the work of Michael Hampton at\n-[Ringing Liberty](https://www.ringingliberty.com/bitcoin/). He has been\n-packaging Bitcoin for Fedora at least since 2012.\n+[Ringing Liberty](https://www.ringingliberty.com/litecoin/). He has been\n+packaging Litecoin for Fedora at least since 2012.\n \n Most of the differences between his packaging and this package are stylistic in\n nature. The major differences:\n@@ -174,9 +174,9 @@ academic.\n specifying a build without the Qt GUI, or specifying which version of the Qt\n libraries to use.\n \n-4. I renamed the `bitcoin` package that contains the Qt GUI to `bitcoin-core` as\n+4. I renamed the `litecoin` package that contains the Qt GUI to `litecoin-core` as\n that appears to be how the general population refers to it, in contrast to\n-`bitcoin-xt` or `bitcoin-classic`. I wanted to make sure the general population\n+`litecoin-xt` or `litecoin-classic`. I wanted to make sure the general population\n knows what they are getting when installing the GUI package.\n \n As far as minor differences, I generally prefer to assign the file permissions"
      },
      {
        "sha": "555614a06d49ab820fce1e08f723005b26cdcb01",
        "filename": "contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin-0.12.0-libressl.patch?ref=8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311",
        "patch": "@@ -1,24 +0,0 @@\n-diff -ur bitcoin-0.12.0.orig/src/init.cpp bitcoin-0.12.0/src/init.cpp\n---- bitcoin-0.12.0.orig/src/init.cpp\t2015-12-31 16:00:00.000000000 -0800\n-+++ bitcoin-0.12.0/src/init.cpp\t2016-02-23 06:03:47.133227757 -0800\n-@@ -1075,7 +1075,7 @@\n-     if (fPrintToDebugLog)\n-         OpenDebugLog();\n- \n--#if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n-+#if defined(LIBRESSL_VERSION_NUMBER) || (OPENSSL_VERSION_NUMBER < 0x10100000L)\n-     LogPrintf(\"Using OpenSSL version %s\\n\", SSLeay_version(SSLEAY_VERSION));\n- #else\n-     LogPrintf(\"Using OpenSSL version %s\\n\", OpenSSL_version(OPENSSL_VERSION));\n-diff -ur bitcoin-0.12.0.orig/src/qt/rpcconsole.cpp bitcoin-0.12.0/src/qt/rpcconsole.cpp\n---- bitcoin-0.12.0.orig/src/qt/rpcconsole.cpp\t2015-12-31 16:00:00.000000000 -0800\n-+++ bitcoin-0.12.0/src/qt/rpcconsole.cpp\t2016-02-23 15:09:42.881126841 -0800\n-@@ -264,7 +264,7 @@\n- \n-     // set library version labels\n- \n--#if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n-+#if defined(LIBRESSL_VERSION_NUMBER) || (OPENSSL_VERSION_NUMBER < 0x10100000L)\n-     ui->openSSLVersion->setText(SSLeay_version(SSLEAY_VERSION));\n- #else\n-     ui->openSSLVersion->setText(OpenSSL_version(OPENSSL_VERSION));"
      },
      {
        "sha": "6f5eef6375255381f7c4552715ffdaf329e4a502",
        "filename": "contrib/rpm/bitcoin.fc",
        "status": "removed",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/rpm/bitcoin.fc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/rpm/bitcoin.fc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.fc?ref=8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311",
        "patch": "@@ -1,8 +0,0 @@\n-/usr/bin/bitcoin-cli\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n-/usr/sbin/bitcoind\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n-/usr/lib(64)?/bitcoin/bitcoind\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n-\n-/etc/bitcoin(/.*)?\t\tgen_context(system_u:object_r:bitcoin_conf_t,s0)\n-/var/lib/bitcoin(/.*)?\t\tgen_context(system_u:object_r:bitcoin_var_lib_t,s0)\n-\n-(/var)?/run/bitcoind(/.*)?   gen_context(system_u:object_r:bitcoin_var_run_t,s0)"
      },
      {
        "sha": "d6231c591a24312b3c073f7658533587279aeba7",
        "filename": "contrib/rpm/bitcoin.te",
        "status": "removed",
        "additions": 0,
        "deletions": 81,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/rpm/bitcoin.te",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311/contrib/rpm/bitcoin.te",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.te?ref=8d9e8adc05f42fc5bf99ad499a01d9f9ab6d2311",
        "patch": "@@ -1,81 +0,0 @@\n-policy_module(bitcoin, 1.100.1)\n-\n-########################################\n-#\n-# Declarations\n-#\n-\n-type bitcoin_t;\n-type bitcoin_exec_t;\n-init_daemon_domain(bitcoin_t, bitcoin_exec_t)\n-\n-permissive bitcoin_t;\n-\n-type bitcoin_initrc_exec_t;\n-init_script_file(bitcoin_initrc_exec_t)\n-\n-type bitcoin_conf_t;\n-files_type(bitcoin_conf_t)\n-\n-type bitcoin_var_lib_t;\n-files_type(bitcoin_var_lib_t)\n-\n-type bitcoin_var_run_t;\n-files_type(bitcoin_var_run_t)\n-\n-type bitcoin_port_t;\n-corenet_port(bitcoin_port_t)\n-\n-########################################\n-#\n-# bitcoin local policy\n-#\n-allow bitcoin_t self:process { fork };\n-\n-allow bitcoin_t self:fifo_file rw_fifo_file_perms;\n-allow bitcoin_t self:unix_stream_socket create_stream_socket_perms;\n-\n-manage_dirs_pattern(bitcoin_t, bitcoin_conf_t, bitcoin_conf_t)\n-manage_files_pattern(bitcoin_t, bitcoin_conf_t, bitcoin_conf_t)\n-\n-manage_dirs_pattern(bitcoin_t, bitcoin_var_lib_t, bitcoin_var_lib_t)\n-manage_files_pattern(bitcoin_t, bitcoin_var_lib_t, bitcoin_var_lib_t)\n-files_var_lib_filetrans(bitcoin_t, bitcoin_var_lib_t, { dir file })\n-\n-manage_dirs_pattern(bitcoin_t, bitcoin_var_run_t, bitcoin_var_run_t)\n-manage_files_pattern(bitcoin_t, bitcoin_var_run_t, bitcoin_var_run_t)\n-\n-sysnet_dns_name_resolve(bitcoin_t)\n-corenet_all_recvfrom_unlabeled(bitcoin_t)\n-\n-allow bitcoin_t self:tcp_socket create_stream_socket_perms;\n-corenet_tcp_sendrecv_generic_if(bitcoin_t)\n-corenet_tcp_sendrecv_generic_node(bitcoin_t)\n-corenet_tcp_sendrecv_all_ports(bitcoin_t)\n-corenet_tcp_bind_generic_node(bitcoin_t)\n-\n-gen_require(`\n-    type bitcoin_port_t;\n-')\n-allow bitcoin_t bitcoin_port_t:tcp_socket name_bind;\n-\n-gen_require(`\n-    type bitcoin_port_t;\n-')\n-allow bitcoin_t bitcoin_port_t:tcp_socket name_connect;\n-\n-domain_use_interactive_fds(bitcoin_t)\n-\n-files_read_etc_files(bitcoin_t)\n-\n-miscfiles_read_localization(bitcoin_t)\n-\n-sysnet_dns_name_resolve(bitcoin_t)\n-\n-allow bitcoin_t bitcoin_exec_t:file execute_no_trans;\n-allow bitcoin_t self:process setsched;\n-corecmd_exec_ls(bitcoin_t)\n-corenet_tcp_connect_http_port(bitcoin_t)\n-dev_read_urand(bitcoin_t)\n-fs_getattr_xattr_fs(bitcoin_t)\n-kernel_read_system_state(bitcoin_t)"
      },
      {
        "sha": "9dfc4db65dd68b456e8b04a03ea0b9b576888cc4",
        "filename": "contrib/rpm/litecoin.fc",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/rpm/litecoin.fc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/rpm/litecoin.fc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/litecoin.fc?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -0,0 +1,8 @@\n+/usr/bin/litecoin-cli\t\t--\tgen_context(system_u:object_r:litecoin_exec_t,s0)\n+/usr/sbin/litecoind\t\t--\tgen_context(system_u:object_r:litecoin_exec_t,s0)\n+/usr/lib(64)?/litecoin/litecoind\t\t--\tgen_context(system_u:object_r:litecoin_exec_t,s0)\n+\n+/etc/litecoin(/.*)?\t\tgen_context(system_u:object_r:litecoin_conf_t,s0)\n+/var/lib/litecoin(/.*)?\t\tgen_context(system_u:object_r:litecoin_var_lib_t,s0)\n+\n+(/var)?/run/litecoind(/.*)?   gen_context(system_u:object_r:litecoin_var_run_t,s0)"
      },
      {
        "sha": "89384c65e5bce17f93dad6c6bfe318e8523ee12c",
        "filename": "contrib/rpm/litecoin.if",
        "status": "renamed",
        "additions": 35,
        "deletions": 35,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/rpm/litecoin.if",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/rpm/litecoin.if",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/litecoin.if?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,127 +1,127 @@\n \n-## <summary>policy for bitcoin</summary>\n+## <summary>policy for litecoin</summary>\n \n \n ########################################\n ## <summary>\n-##\tTransition to bitcoin.\n+##\tTransition to litecoin.\n ## </summary>\n ## <param name=\"domain\">\n ## <summary>\n ##\tDomain allowed to transition.\n ## </summary>\n ## </param>\n #\n-interface(`bitcoin_domtrans',`\n+interface(`litecoin_domtrans',`\n \tgen_require(`\n-\t\ttype bitcoin_t, bitcoin_exec_t;\n+\t\ttype litecoin_t, litecoin_exec_t;\n \t')\n \n \tcorecmd_search_bin($1)\n-\tdomtrans_pattern($1, bitcoin_exec_t, bitcoin_t)\n+\tdomtrans_pattern($1, litecoin_exec_t, litecoin_t)\n ')\n \n \n ########################################\n ## <summary>\n-##\tExecute bitcoin server in the bitcoin domain.\n+##\tExecute litecoin server in the litecoin domain.\n ## </summary>\n ## <param name=\"domain\">\n ##\t<summary>\n ##\tDomain allowed access.\n ##\t</summary>\n ## </param>\n #\n-interface(`bitcoin_initrc_domtrans',`\n+interface(`litecoin_initrc_domtrans',`\n \tgen_require(`\n-\t\ttype bitcoin_initrc_exec_t;\n+\t\ttype litecoin_initrc_exec_t;\n \t')\n \n-\tinit_labeled_script_domtrans($1, bitcoin_initrc_exec_t)\n+\tinit_labeled_script_domtrans($1, litecoin_initrc_exec_t)\n ')\n \n \n ########################################\n ## <summary>\n-##\tSearch bitcoin lib directories.\n+##\tSearch litecoin lib directories.\n ## </summary>\n ## <param name=\"domain\">\n ##\t<summary>\n ##\tDomain allowed access.\n ##\t</summary>\n ## </param>\n #\n-interface(`bitcoin_search_lib',`\n+interface(`litecoin_search_lib',`\n \tgen_require(`\n-\t\ttype bitcoin_var_lib_t;\n+\t\ttype litecoin_var_lib_t;\n \t')\n \n-\tallow $1 bitcoin_var_lib_t:dir search_dir_perms;\n+\tallow $1 litecoin_var_lib_t:dir search_dir_perms;\n \tfiles_search_var_lib($1)\n ')\n \n ########################################\n ## <summary>\n-##\tRead bitcoin lib files.\n+##\tRead litecoin lib files.\n ## </summary>\n ## <param name=\"domain\">\n ##\t<summary>\n ##\tDomain allowed access.\n ##\t</summary>\n ## </param>\n #\n-interface(`bitcoin_read_lib_files',`\n+interface(`litecoin_read_lib_files',`\n \tgen_require(`\n-\t\ttype bitcoin_var_lib_t;\n+\t\ttype litecoin_var_lib_t;\n \t')\n \n \tfiles_search_var_lib($1)\n-\tread_files_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n+\tread_files_pattern($1, litecoin_var_lib_t, litecoin_var_lib_t)\n ')\n \n ########################################\n ## <summary>\n-##\tManage bitcoin lib files.\n+##\tManage litecoin lib files.\n ## </summary>\n ## <param name=\"domain\">\n ##\t<summary>\n ##\tDomain allowed access.\n ##\t</summary>\n ## </param>\n #\n-interface(`bitcoin_manage_lib_files',`\n+interface(`litecoin_manage_lib_files',`\n \tgen_require(`\n-\t\ttype bitcoin_var_lib_t;\n+\t\ttype litecoin_var_lib_t;\n \t')\n \n \tfiles_search_var_lib($1)\n-\tmanage_files_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n+\tmanage_files_pattern($1, litecoin_var_lib_t, litecoin_var_lib_t)\n ')\n \n ########################################\n ## <summary>\n-##\tManage bitcoin lib directories.\n+##\tManage litecoin lib directories.\n ## </summary>\n ## <param name=\"domain\">\n ##\t<summary>\n ##\tDomain allowed access.\n ##\t</summary>\n ## </param>\n #\n-interface(`bitcoin_manage_lib_dirs',`\n+interface(`litecoin_manage_lib_dirs',`\n \tgen_require(`\n-\t\ttype bitcoin_var_lib_t;\n+\t\ttype litecoin_var_lib_t;\n \t')\n \n \tfiles_search_var_lib($1)\n-\tmanage_dirs_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n+\tmanage_dirs_pattern($1, litecoin_var_lib_t, litecoin_var_lib_t)\n ')\n \n \n ########################################\n ## <summary>\n ##\tAll of the rules required to administrate\n-##\tan bitcoin environment\n+##\tan litecoin environment\n ## </summary>\n ## <param name=\"domain\">\n ##\t<summary>\n@@ -135,23 +135,23 @@ interface(`bitcoin_manage_lib_dirs',`\n ## </param>\n ## <rolecap/>\n #\n-interface(`bitcoin_admin',`\n+interface(`litecoin_admin',`\n \tgen_require(`\n-\t\ttype bitcoin_t;\n-\t\ttype bitcoin_initrc_exec_t;\n-\t\ttype bitcoin_var_lib_t;\n+\t\ttype litecoin_t;\n+\t\ttype litecoin_initrc_exec_t;\n+\t\ttype litecoin_var_lib_t;\n \t')\n \n-\tallow $1 bitcoin_t:process { ptrace signal_perms };\n-\tps_process_pattern($1, bitcoin_t)\n+\tallow $1 litecoin_t:process { ptrace signal_perms };\n+\tps_process_pattern($1, litecoin_t)\n \n-\tbitcoin_initrc_domtrans($1)\n+\tlitecoin_initrc_domtrans($1)\n \tdomain_system_change_exemption($1)\n-\trole_transition $2 bitcoin_initrc_exec_t system_r;\n+\trole_transition $2 litecoin_initrc_exec_t system_r;\n \tallow $2 system_r;\n \n \tfiles_search_var_lib($1)\n-\tadmin_pattern($1, bitcoin_var_lib_t)\n+\tadmin_pattern($1, litecoin_var_lib_t)\n \n ')\n ",
        "previous_filename": "contrib/rpm/bitcoin.if"
      },
      {
        "sha": "a5e0ddf840ecf39805c4f0fc0e7d0deca9e63fdb",
        "filename": "contrib/rpm/litecoin.spec",
        "status": "renamed",
        "additions": 127,
        "deletions": 127,
        "changes": 254,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/rpm/litecoin.spec",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/rpm/litecoin.spec",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/litecoin.spec?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -13,32 +13,32 @@\n %endif\n %endif\n \n-Name:\t\tbitcoin\n+Name:\t\tlitecoin\n Version:\t0.12.0\n Release:\t2%{?dist}\n Summary:\tPeer to Peer Cryptographic Currency\n \n Group:\t\tApplications/System\n License:\tMIT\n-URL:\t\thttps://bitcoin.org/\n-Source0:\thttps://bitcoin.org/bin/bitcoin-core-%{version}/bitcoin-%{version}.tar.gz\n+URL:\t\thttps://litecoin.org/\n+Source0:\thttps://litecoin.org/bin/litecoin-core-%{version}/litecoin-%{version}.tar.gz\n Source1:\thttp://download.oracle.com/berkeley-db/db-%{bdbv}.NC.tar.gz\n \n-Source10:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/debian/examples/bitcoin.conf\n+Source10:\thttps://raw.githubusercontent.com/litecoin/litecoin/v%{version}/contrib/debian/examples/litecoin.conf\n \n #man pages\n-Source20:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/debian/manpages/bitcoind.1\n-Source21:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/debian/manpages/bitcoin-cli.1\n-Source22:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/debian/manpages/bitcoin-qt.1\n-Source23:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/debian/manpages/bitcoin.conf.5\n+Source20:\thttps://raw.githubusercontent.com/litecoin/litecoin/v%{version}/contrib/debian/manpages/litecoind.1\n+Source21:\thttps://raw.githubusercontent.com/litecoin/litecoin/v%{version}/contrib/debian/manpages/litecoin-cli.1\n+Source22:\thttps://raw.githubusercontent.com/litecoin/litecoin/v%{version}/contrib/debian/manpages/litecoin-qt.1\n+Source23:\thttps://raw.githubusercontent.com/litecoin/litecoin/v%{version}/contrib/debian/manpages/litecoin.conf.5\n \n #selinux\n-Source30:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.te\n-# Source31 - what about bitcoin-tx and bench_bitcoin ???\n-Source31:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.fc\n-Source32:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.if\n+Source30:\thttps://raw.githubusercontent.com/litecoin/litecoin/v%{version}/contrib/rpm/litecoin.te\n+# Source31 - what about litecoin-tx and bench_litecoin ???\n+Source31:\thttps://raw.githubusercontent.com/litecoin/litecoin/v%{version}/contrib/rpm/litecoin.fc\n+Source32:\thttps://raw.githubusercontent.com/litecoin/litecoin/v%{version}/contrib/rpm/litecoin.if\n \n-Source100:\thttps://upload.wikimedia.org/wikipedia/commons/4/46/Bitcoin.svg\n+Source100:\thttps://upload.wikimedia.org/wikipedia/commons/4/46/Litecoin.svg\n \n %if 0%{?_use_libressl:1}\n BuildRequires:\tlibressl-devel\n@@ -51,13 +51,13 @@ BuildRequires:\tautoconf automake libtool\n BuildRequires:\tlibevent-devel\n \n \n-Patch0:\t\tbitcoin-0.12.0-libressl.patch\n+Patch0:\t\tlitecoin-0.12.0-libressl.patch\n \n \n %description\n-Bitcoin is a digital cryptographic currency that uses peer-to-peer technology to\n+Litecoin is a digital cryptographic currency that uses peer-to-peer technology to\n operate with no central authority or banks; managing transactions and the\n-issuing of bitcoins is carried out collectively by the network.\n+issuing of litecoins is carried out collectively by the network.\n \n %if %{_buildqt}\n %package core\n@@ -80,42 +80,42 @@ BuildRequires:\t%{_bindir}/inkscape\n BuildRequires:\t%{_bindir}/convert\n \n %description core\n-Bitcoin is a digital cryptographic currency that uses peer-to-peer technology to\n+Litecoin is a digital cryptographic currency that uses peer-to-peer technology to\n operate with no central authority or banks; managing transactions and the\n-issuing of bitcoins is carried out collectively by the network.\n+issuing of litecoins is carried out collectively by the network.\n \n This package contains the Qt based graphical client and node. If you are looking\n-to run a Bitcoin wallet, this is probably the package you want.\n+to run a Litecoin wallet, this is probably the package you want.\n %endif\n \n \n %package libs\n-Summary:\tBitcoin shared libraries\n+Summary:\tLitecoin shared libraries\n Group:\t\tSystem Environment/Libraries\n \n %description libs\n-This package provides the bitcoinconsensus shared libraries. These libraries\n+This package provides the litecoinconsensus shared libraries. These libraries\n may be used by third party software to provide consensus verification\n functionality.\n \n Unless you know need this package, you probably do not.\n \n %package devel\n-Summary:\tDevelopment files for bitcoin\n+Summary:\tDevelopment files for litecoin\n Group:\t\tDevelopment/Libraries\n Requires:\t%{name}-libs = %{version}-%{release}\n \n %description devel\n This package contains the header files and static library for the\n-bitcoinconsensus shared library. If you are developing or compiling software\n+litecoinconsensus shared library. If you are developing or compiling software\n that wants to link against that library, then you need this package installed.\n \n Most people do not need this package installed.\n \n %package server\n-Summary:\tThe bitcoin daemon\n+Summary:\tThe litecoin daemon\n Group:\t\tSystem Environment/Daemons\n-Requires:\tbitcoin-utils = %{version}-%{release}\n+Requires:\tlitecoin-utils = %{version}-%{release}\n Requires:\tselinux-policy policycoreutils-python\n Requires(pre):\tshadow-utils\n Requires(post):\t%{_sbindir}/semodule %{_sbindir}/restorecon %{_sbindir}/fixfiles %{_sbindir}/sestatus\n@@ -125,34 +125,34 @@ BuildRequires:\tcheckpolicy\n BuildRequires:\t%{_datadir}/selinux/devel/Makefile\n \n %description server\n-This package provides a stand-alone bitcoin-core daemon. For most users, this\n+This package provides a stand-alone litecoin-core daemon. For most users, this\n package is only needed if they need a full-node without the graphical client.\n \n Some third party wallet software will want this package to provide the actual\n-bitcoin-core node they use to connect to the network.\n+litecoin-core node they use to connect to the network.\n \n-If you use the graphical bitcoin-core client then you almost certainly do not\n+If you use the graphical litecoin-core client then you almost certainly do not\n need this package.\n \n %package utils\n-Summary:\tBitcoin utilities\n+Summary:\tLitecoin utilities\n Group:\t\tApplications/System\n \n %description utils\n This package provides several command line utilities for interacting with a\n-bitcoin-core daemon.\n+litecoin-core daemon.\n \n-The bitcoin-cli utility allows you to communicate and control a bitcoin daemon\n-over RPC, the bitcoin-tx utility allows you to create a custom transaction, and\n-the bench_bitcoin utility can be used to perform some benchmarks.\n+The litecoin-cli utility allows you to communicate and control a litecoin daemon\n+over RPC, the litecoin-tx utility allows you to create a custom transaction, and\n+the bench_litecoin utility can be used to perform some benchmarks.\n \n-This package contains utilities needed by the bitcoin-server package.\n+This package contains utilities needed by the litecoin-server package.\n \n \n %prep\n %setup -q\n %patch0 -p1 -b .libressl\n-cp -p %{SOURCE10} ./bitcoin.conf.example\n+cp -p %{SOURCE10} ./litecoin.conf.example\n tar -zxf %{SOURCE1}\n cp -p db-%{bdbv}.NC/LICENSE ./db-%{bdbv}.NC-LICENSE\n mkdir db4 SELinux\n@@ -173,7 +173,7 @@ make %{?_smp_mflags}\n pushd SELinux\n for selinuxvariant in %{selinux_variants}; do\n \tmake NAME=${selinuxvariant} -f %{_datadir}/selinux/devel/Makefile\n-\tmv bitcoin.pp bitcoin.pp.${selinuxvariant}\n+\tmv litecoin.pp litecoin.pp.${selinuxvariant}\n \tmake NAME=${selinuxvariant} -f %{_datadir}/selinux/devel/Makefile clean\n done\n popd\n@@ -183,42 +183,42 @@ popd\n make install DESTDIR=%{buildroot}\n \n mkdir -p -m755 %{buildroot}%{_sbindir}\n-mv %{buildroot}%{_bindir}/bitcoind %{buildroot}%{_sbindir}/bitcoind\n+mv %{buildroot}%{_bindir}/litecoind %{buildroot}%{_sbindir}/litecoind\n \n # systemd stuff\n mkdir -p %{buildroot}%{_tmpfilesdir}\n-cat <<EOF > %{buildroot}%{_tmpfilesdir}/bitcoin.conf\n-d /run/bitcoind 0750 bitcoin bitcoin -\n+cat <<EOF > %{buildroot}%{_tmpfilesdir}/litecoin.conf\n+d /run/litecoind 0750 litecoin litecoin -\n EOF\n-touch -a -m -t 201504280000 %{buildroot}%{_tmpfilesdir}/bitcoin.conf\n+touch -a -m -t 201504280000 %{buildroot}%{_tmpfilesdir}/litecoin.conf\n \n mkdir -p %{buildroot}%{_sysconfdir}/sysconfig\n-cat <<EOF > %{buildroot}%{_sysconfdir}/sysconfig/bitcoin\n-# Provide options to the bitcoin daemon here, for example\n+cat <<EOF > %{buildroot}%{_sysconfdir}/sysconfig/litecoin\n+# Provide options to the litecoin daemon here, for example\n # OPTIONS=\"-testnet -disable-wallet\"\n \n OPTIONS=\"\"\n \n # System service defaults.\n # Don't change these unless you know what you're doing.\n-CONFIG_FILE=\"%{_sysconfdir}/bitcoin/bitcoin.conf\"\n-DATA_DIR=\"%{_localstatedir}/lib/bitcoin\"\n-PID_FILE=\"/run/bitcoind/bitcoind.pid\"\n+CONFIG_FILE=\"%{_sysconfdir}/litecoin/litecoin.conf\"\n+DATA_DIR=\"%{_localstatedir}/lib/litecoin\"\n+PID_FILE=\"/run/litecoind/litecoind.pid\"\n EOF\n-touch -a -m -t 201504280000 %{buildroot}%{_sysconfdir}/sysconfig/bitcoin\n+touch -a -m -t 201504280000 %{buildroot}%{_sysconfdir}/sysconfig/litecoin\n \n mkdir -p %{buildroot}%{_unitdir}\n-cat <<EOF > %{buildroot}%{_unitdir}/bitcoin.service\n+cat <<EOF > %{buildroot}%{_unitdir}/litecoin.service\n [Unit]\n-Description=Bitcoin daemon\n+Description=Litecoin daemon\n After=syslog.target network.target\n \n [Service]\n Type=forking\n-ExecStart=%{_sbindir}/bitcoind -daemon -conf=\\${CONFIG_FILE} -datadir=\\${DATA_DIR} -pid=\\${PID_FILE} \\$OPTIONS\n-EnvironmentFile=%{_sysconfdir}/sysconfig/bitcoin\n-User=bitcoin\n-Group=bitcoin\n+ExecStart=%{_sbindir}/litecoind -daemon -conf=\\${CONFIG_FILE} -datadir=\\${DATA_DIR} -pid=\\${PID_FILE} \\$OPTIONS\n+EnvironmentFile=%{_sysconfdir}/sysconfig/litecoin\n+User=litecoin\n+Group=litecoin\n \n Restart=on-failure\n PrivateTmp=true\n@@ -230,63 +230,63 @@ StartLimitBurst=5\n [Install]\n WantedBy=multi-user.target\n EOF\n-touch -a -m -t 201504280000 %{buildroot}%{_unitdir}/bitcoin.service\n+touch -a -m -t 201504280000 %{buildroot}%{_unitdir}/litecoin.service\n #end systemd stuff\n \n-mkdir %{buildroot}%{_sysconfdir}/bitcoin\n-mkdir -p %{buildroot}%{_localstatedir}/lib/bitcoin\n+mkdir %{buildroot}%{_sysconfdir}/litecoin\n+mkdir -p %{buildroot}%{_localstatedir}/lib/litecoin\n \n #SELinux\n for selinuxvariant in %{selinux_variants}; do\n \tinstall -d %{buildroot}%{_datadir}/selinux/${selinuxvariant}\n-\tinstall -p -m 644 SELinux/bitcoin.pp.${selinuxvariant} %{buildroot}%{_datadir}/selinux/${selinuxvariant}/bitcoin.pp\n+\tinstall -p -m 644 SELinux/litecoin.pp.${selinuxvariant} %{buildroot}%{_datadir}/selinux/${selinuxvariant}/litecoin.pp\n done\n \n %if %{_buildqt}\n # qt icons\n-install -D -p share/pixmaps/bitcoin.ico %{buildroot}%{_datadir}/pixmaps/bitcoin.ico\n+install -D -p share/pixmaps/litecoin.ico %{buildroot}%{_datadir}/pixmaps/litecoin.ico\n install -p share/pixmaps/nsis-header.bmp %{buildroot}%{_datadir}/pixmaps/\n install -p share/pixmaps/nsis-wizard.bmp %{buildroot}%{_datadir}/pixmaps/\n-install -p %{SOURCE100} %{buildroot}%{_datadir}/pixmaps/bitcoin.svg\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin16.png -w16 -h16\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin32.png -w32 -h32\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin64.png -w64 -h64\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin128.png -w128 -h128\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin256.png -w256 -h256\n-%{_bindir}/convert -resize 16x16 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin16.xpm\n-%{_bindir}/convert -resize 32x32 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin32.xpm\n-%{_bindir}/convert -resize 64x64 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin64.xpm\n-%{_bindir}/convert -resize 128x128 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin128.xpm\n-%{_bindir}/convert %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin256.xpm\n+install -p %{SOURCE100} %{buildroot}%{_datadir}/pixmaps/litecoin.svg\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/litecoin16.png -w16 -h16\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/litecoin32.png -w32 -h32\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/litecoin64.png -w64 -h64\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/litecoin128.png -w128 -h128\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/litecoin256.png -w256 -h256\n+%{_bindir}/convert -resize 16x16 %{buildroot}%{_datadir}/pixmaps/litecoin256.png %{buildroot}%{_datadir}/pixmaps/litecoin16.xpm\n+%{_bindir}/convert -resize 32x32 %{buildroot}%{_datadir}/pixmaps/litecoin256.png %{buildroot}%{_datadir}/pixmaps/litecoin32.xpm\n+%{_bindir}/convert -resize 64x64 %{buildroot}%{_datadir}/pixmaps/litecoin256.png %{buildroot}%{_datadir}/pixmaps/litecoin64.xpm\n+%{_bindir}/convert -resize 128x128 %{buildroot}%{_datadir}/pixmaps/litecoin256.png %{buildroot}%{_datadir}/pixmaps/litecoin128.xpm\n+%{_bindir}/convert %{buildroot}%{_datadir}/pixmaps/litecoin256.png %{buildroot}%{_datadir}/pixmaps/litecoin256.xpm\n touch %{buildroot}%{_datadir}/pixmaps/*.png -r %{SOURCE100}\n touch %{buildroot}%{_datadir}/pixmaps/*.xpm -r %{SOURCE100}\n \n # Desktop File - change the touch timestamp if modifying\n mkdir -p %{buildroot}%{_datadir}/applications\n-cat <<EOF > %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n+cat <<EOF > %{buildroot}%{_datadir}/applications/litecoin-core.desktop\n [Desktop Entry]\n Encoding=UTF-8\n-Name=Bitcoin\n-Comment=Bitcoin P2P Cryptocurrency\n-Comment[fr]=Bitcoin, monnaie virtuelle cryptographique pair \u00e0 pair\n-Comment[tr]=Bitcoin, e\u015ften e\u015fe kriptografik sanal para birimi\n-Exec=bitcoin-qt %u\n+Name=Litecoin\n+Comment=Litecoin P2P Cryptocurrency\n+Comment[fr]=Litecoin, monnaie virtuelle cryptographique pair \u00e0 pair\n+Comment[tr]=Litecoin, e\u015ften e\u015fe kriptografik sanal para birimi\n+Exec=litecoin-qt %u\n Terminal=false\n Type=Application\n-Icon=bitcoin128\n-MimeType=x-scheme-handler/bitcoin;\n+Icon=litecoin128\n+MimeType=x-scheme-handler/litecoin;\n Categories=Office;Finance;\n EOF\n # change touch date when modifying desktop\n-touch -a -m -t 201511100546 %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n-%{_bindir}/desktop-file-validate %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n+touch -a -m -t 201511100546 %{buildroot}%{_datadir}/applications/litecoin-core.desktop\n+%{_bindir}/desktop-file-validate %{buildroot}%{_datadir}/applications/litecoin-core.desktop\n \n # KDE protocol - change the touch timestamp if modifying\n mkdir -p %{buildroot}%{_datadir}/kde4/services\n-cat <<EOF > %{buildroot}%{_datadir}/kde4/services/bitcoin-core.protocol\n+cat <<EOF > %{buildroot}%{_datadir}/kde4/services/litecoin-core.protocol\n [Protocol]\n-exec=bitcoin-qt '%u'\n-protocol=bitcoin\n+exec=litecoin-qt '%u'\n+protocol=litecoin\n input=none\n output=none\n helper=true\n@@ -297,24 +297,24 @@ makedir=false\n deleting=false\n EOF\n # change touch date when modifying protocol\n-touch -a -m -t 201511100546 %{buildroot}%{_datadir}/kde4/services/bitcoin-core.protocol\n+touch -a -m -t 201511100546 %{buildroot}%{_datadir}/kde4/services/litecoin-core.protocol\n %endif\n \n # man pages\n-install -D -p %{SOURCE20} %{buildroot}%{_mandir}/man1/bitcoind.1\n-install -p %{SOURCE21} %{buildroot}%{_mandir}/man1/bitcoin-cli.1\n+install -D -p %{SOURCE20} %{buildroot}%{_mandir}/man1/litecoind.1\n+install -p %{SOURCE21} %{buildroot}%{_mandir}/man1/litecoin-cli.1\n %if %{_buildqt}\n-install -p %{SOURCE22} %{buildroot}%{_mandir}/man1/bitcoin-qt.1\n+install -p %{SOURCE22} %{buildroot}%{_mandir}/man1/litecoin-qt.1\n %endif\n-install -D -p %{SOURCE23} %{buildroot}%{_mandir}/man5/bitcoin.conf.5\n+install -D -p %{SOURCE23} %{buildroot}%{_mandir}/man5/litecoin.conf.5\n \n # nuke these, we do extensive testing of binaries in %%check before packaging\n rm -f %{buildroot}%{_bindir}/test_*\n \n %check\n make check\n pushd src\n-srcdir=. test/bitcoin-util-test.py\n+srcdir=. test/litecoin-util-test.py\n popd\n qa/pull-tester/rpc-tests.py -extended\n \n@@ -323,35 +323,35 @@ qa/pull-tester/rpc-tests.py -extended\n %postun libs -p /sbin/ldconfig\n \n %pre server\n-getent group bitcoin >/dev/null || groupadd -r bitcoin\n-getent passwd bitcoin >/dev/null ||\n-\tuseradd -r -g bitcoin -d /var/lib/bitcoin -s /sbin/nologin \\\n-\t-c \"Bitcoin wallet server\" bitcoin\n+getent group litecoin >/dev/null || groupadd -r litecoin\n+getent passwd litecoin >/dev/null ||\n+\tuseradd -r -g litecoin -d /var/lib/litecoin -s /sbin/nologin \\\n+\t-c \"Litecoin wallet server\" litecoin\n exit 0\n \n %post server\n-%systemd_post bitcoin.service\n+%systemd_post litecoin.service\n # SELinux\n if [ `%{_sbindir}/sestatus |grep -c \"disabled\"` -eq 0 ]; then\n for selinuxvariant in %{selinux_variants}; do\n-\t%{_sbindir}/semodule -s ${selinuxvariant} -i %{_datadir}/selinux/${selinuxvariant}/bitcoin.pp &> /dev/null || :\n+\t%{_sbindir}/semodule -s ${selinuxvariant} -i %{_datadir}/selinux/${selinuxvariant}/litecoin.pp &> /dev/null || :\n done\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 8332\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 8333\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18332\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18333\n-%{_sbindir}/fixfiles -R bitcoin-server restore &> /dev/null || :\n-%{_sbindir}/restorecon -R %{_localstatedir}/lib/bitcoin || :\n+%{_sbindir}/semanage port -a -t litecoin_port_t -p tcp 8332\n+%{_sbindir}/semanage port -a -t litecoin_port_t -p tcp 8333\n+%{_sbindir}/semanage port -a -t litecoin_port_t -p tcp 18332\n+%{_sbindir}/semanage port -a -t litecoin_port_t -p tcp 18333\n+%{_sbindir}/fixfiles -R litecoin-server restore &> /dev/null || :\n+%{_sbindir}/restorecon -R %{_localstatedir}/lib/litecoin || :\n fi\n \n %posttrans server\n %{_bindir}/systemd-tmpfiles --create\n \n %preun server\n-%systemd_preun bitcoin.service\n+%systemd_preun litecoin.service\n \n %postun server\n-%systemd_postun bitcoin.service\n+%systemd_postun litecoin.service\n # SELinux\n if [ $1 -eq 0 ]; then\n \tif [ `%{_sbindir}/sestatus |grep -c \"disabled\"` -eq 0 ]; then\n@@ -360,11 +360,11 @@ if [ $1 -eq 0 ]; then\n \t%{_sbindir}/semanage port -d -p tcp 18332\n \t%{_sbindir}/semanage port -d -p tcp 18333\n \tfor selinuxvariant in %{selinux_variants}; do\n-\t\t%{_sbindir}/semodule -s ${selinuxvariant} -r bitcoin &> /dev/null || :\n+\t\t%{_sbindir}/semodule -s ${selinuxvariant} -r litecoin &> /dev/null || :\n \tdone\n-\t%{_sbindir}/fixfiles -R bitcoin-server restore &> /dev/null || :\n-\t[ -d %{_localstatedir}/lib/bitcoin ] && \\\n-\t\t%{_sbindir}/restorecon -R %{_localstatedir}/lib/bitcoin &> /dev/null || :\n+\t%{_sbindir}/fixfiles -R litecoin-server restore &> /dev/null || :\n+\t[ -d %{_localstatedir}/lib/litecoin ] && \\\n+\t\t%{_sbindir}/restorecon -R %{_localstatedir}/lib/litecoin &> /dev/null || :\n \tfi\n fi\n \n@@ -375,16 +375,16 @@ rm -rf %{buildroot}\n %files core\n %defattr(-,root,root,-)\n %license COPYING db-%{bdbv}.NC-LICENSE\n-%doc COPYING bitcoin.conf.example doc/README.md doc/bips.md doc/files.md doc/multiwallet-qt.md doc/reduce-traffic.md doc/release-notes.md doc/tor.md\n-%attr(0755,root,root) %{_bindir}/bitcoin-qt\n-%attr(0644,root,root) %{_datadir}/applications/bitcoin-core.desktop\n-%attr(0644,root,root) %{_datadir}/kde4/services/bitcoin-core.protocol\n+%doc COPYING litecoin.conf.example doc/README.md doc/bips.md doc/files.md doc/multiwallet-qt.md doc/reduce-traffic.md doc/release-notes.md doc/tor.md\n+%attr(0755,root,root) %{_bindir}/litecoin-qt\n+%attr(0644,root,root) %{_datadir}/applications/litecoin-core.desktop\n+%attr(0644,root,root) %{_datadir}/kde4/services/litecoin-core.protocol\n %attr(0644,root,root) %{_datadir}/pixmaps/*.ico\n %attr(0644,root,root) %{_datadir}/pixmaps/*.bmp\n %attr(0644,root,root) %{_datadir}/pixmaps/*.svg\n %attr(0644,root,root) %{_datadir}/pixmaps/*.png\n %attr(0644,root,root) %{_datadir}/pixmaps/*.xpm\n-%attr(0644,root,root) %{_mandir}/man1/bitcoin-qt.1*\n+%attr(0644,root,root) %{_mandir}/man1/litecoin-qt.1*\n %endif\n \n %files libs\n@@ -406,32 +406,32 @@ rm -rf %{buildroot}\n %files server\n %defattr(-,root,root,-)\n %license COPYING db-%{bdbv}.NC-LICENSE\n-%doc COPYING bitcoin.conf.example doc/README.md doc/REST-interface.md doc/bips.md doc/dnsseed-policy.md doc/files.md doc/reduce-traffic.md doc/release-notes.md doc/tor.md\n-%attr(0755,root,root) %{_sbindir}/bitcoind\n-%attr(0644,root,root) %{_tmpfilesdir}/bitcoin.conf\n-%attr(0644,root,root) %{_unitdir}/bitcoin.service\n-%dir %attr(0750,bitcoin,bitcoin) %{_sysconfdir}/bitcoin\n-%dir %attr(0750,bitcoin,bitcoin) %{_localstatedir}/lib/bitcoin\n-%config(noreplace) %attr(0600,root,root) %{_sysconfdir}/sysconfig/bitcoin\n+%doc COPYING litecoin.conf.example doc/README.md doc/REST-interface.md doc/bips.md doc/dnsseed-policy.md doc/files.md doc/reduce-traffic.md doc/release-notes.md doc/tor.md\n+%attr(0755,root,root) %{_sbindir}/litecoind\n+%attr(0644,root,root) %{_tmpfilesdir}/litecoin.conf\n+%attr(0644,root,root) %{_unitdir}/litecoin.service\n+%dir %attr(0750,litecoin,litecoin) %{_sysconfdir}/litecoin\n+%dir %attr(0750,litecoin,litecoin) %{_localstatedir}/lib/litecoin\n+%config(noreplace) %attr(0600,root,root) %{_sysconfdir}/sysconfig/litecoin\n %attr(0644,root,root) %{_datadir}/selinux/*/*.pp\n-%attr(0644,root,root) %{_mandir}/man1/bitcoind.1*\n-%attr(0644,root,root) %{_mandir}/man5/bitcoin.conf.5*\n+%attr(0644,root,root) %{_mandir}/man1/litecoind.1*\n+%attr(0644,root,root) %{_mandir}/man5/litecoin.conf.5*\n \n %files utils\n %defattr(-,root,root,-)\n %license COPYING\n-%doc COPYING bitcoin.conf.example doc/README.md\n-%attr(0755,root,root) %{_bindir}/bitcoin-cli\n-%attr(0755,root,root) %{_bindir}/bitcoin-tx\n-%attr(0755,root,root) %{_bindir}/bench_bitcoin\n-%attr(0644,root,root) %{_mandir}/man1/bitcoin-cli.1*\n-%attr(0644,root,root) %{_mandir}/man5/bitcoin.conf.5*\n+%doc COPYING litecoin.conf.example doc/README.md\n+%attr(0755,root,root) %{_bindir}/litecoin-cli\n+%attr(0755,root,root) %{_bindir}/litecoin-tx\n+%attr(0755,root,root) %{_bindir}/bench_litecoin\n+%attr(0644,root,root) %{_mandir}/man1/litecoin-cli.1*\n+%attr(0644,root,root) %{_mandir}/man5/litecoin.conf.5*\n \n \n \n %changelog\n * Fri Feb 26 2016 Alice Wonder <buildmaster@librelamp.com> - 0.12.0-2\n-- Rename Qt package from bitcoin to bitcoin-core\n+- Rename Qt package from litecoin to litecoin-core\n - Make building of the Qt package optional\n - When building the Qt package, default to Qt5 but allow building\n -  against Qt4\n@@ -441,4 +441,4 @@ rm -rf %{buildroot}\n - Initial spec file for 0.12.0 release\n \n # This spec file is written from scratch but a lot of the packaging decisions are directly\n-# based upon the 0.11.2 package spec file from https://www.ringingliberty.com/bitcoin/\n+# based upon the 0.11.2 package spec file from https://www.ringingliberty.com/litecoin/",
        "previous_filename": "contrib/rpm/bitcoin.spec"
      },
      {
        "sha": "dfc424d096e60973aafdab67903cee65b5f1cf65",
        "filename": "contrib/rpm/litecoin.te",
        "status": "added",
        "additions": 81,
        "deletions": 0,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/rpm/litecoin.te",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/rpm/litecoin.te",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/litecoin.te?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -0,0 +1,81 @@\n+policy_module(litecoin, 1.100.1)\n+\n+########################################\n+#\n+# Declarations\n+#\n+\n+type litecoin_t;\n+type litecoin_exec_t;\n+init_daemon_domain(litecoin_t, litecoin_exec_t)\n+\n+permissive litecoin_t;\n+\n+type litecoin_initrc_exec_t;\n+init_script_file(litecoin_initrc_exec_t)\n+\n+type litecoin_conf_t;\n+files_type(litecoin_conf_t)\n+\n+type litecoin_var_lib_t;\n+files_type(litecoin_var_lib_t)\n+\n+type litecoin_var_run_t;\n+files_type(litecoin_var_run_t)\n+\n+type litecoin_port_t;\n+corenet_port(litecoin_port_t)\n+\n+########################################\n+#\n+# litecoin local policy\n+#\n+allow litecoin_t self:process { fork };\n+\n+allow litecoin_t self:fifo_file rw_fifo_file_perms;\n+allow litecoin_t self:unix_stream_socket create_stream_socket_perms;\n+\n+manage_dirs_pattern(litecoin_t, litecoin_conf_t, litecoin_conf_t)\n+manage_files_pattern(litecoin_t, litecoin_conf_t, litecoin_conf_t)\n+\n+manage_dirs_pattern(litecoin_t, litecoin_var_lib_t, litecoin_var_lib_t)\n+manage_files_pattern(litecoin_t, litecoin_var_lib_t, litecoin_var_lib_t)\n+files_var_lib_filetrans(litecoin_t, litecoin_var_lib_t, { dir file })\n+\n+manage_dirs_pattern(litecoin_t, litecoin_var_run_t, litecoin_var_run_t)\n+manage_files_pattern(litecoin_t, litecoin_var_run_t, litecoin_var_run_t)\n+\n+sysnet_dns_name_resolve(litecoin_t)\n+corenet_all_recvfrom_unlabeled(litecoin_t)\n+\n+allow litecoin_t self:tcp_socket create_stream_socket_perms;\n+corenet_tcp_sendrecv_generic_if(litecoin_t)\n+corenet_tcp_sendrecv_generic_node(litecoin_t)\n+corenet_tcp_sendrecv_all_ports(litecoin_t)\n+corenet_tcp_bind_generic_node(litecoin_t)\n+\n+gen_require(`\n+    type litecoin_port_t;\n+')\n+allow litecoin_t litecoin_port_t:tcp_socket name_bind;\n+\n+gen_require(`\n+    type litecoin_port_t;\n+')\n+allow litecoin_t litecoin_port_t:tcp_socket name_connect;\n+\n+domain_use_interactive_fds(litecoin_t)\n+\n+files_read_etc_files(litecoin_t)\n+\n+miscfiles_read_localization(litecoin_t)\n+\n+sysnet_dns_name_resolve(litecoin_t)\n+\n+allow litecoin_t litecoin_exec_t:file execute_no_trans;\n+allow litecoin_t self:process setsched;\n+corecmd_exec_ls(litecoin_t)\n+corenet_tcp_connect_http_port(litecoin_t)\n+dev_read_urand(litecoin_t)\n+fs_getattr_xattr_fs(litecoin_t)\n+kernel_read_system_state(litecoin_t)"
      },
      {
        "sha": "80dcd1eec8c30ca59bbc16ca40897acf71c144d2",
        "filename": "contrib/seeds/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/seeds/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/seeds/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/README.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -5,7 +5,7 @@ Utility to generate the seeds.txt list that is compiled into the client\n \n The seeds compiled into the release are created from sipa's DNS seed data, like this:\n \n-    curl -s http://bitcoin.sipa.be/seeds.txt > seeds_main.txt\n+    curl -s http://litecoin.sipa.be/seeds.txt > seeds_main.txt\n     python makeseeds.py < seeds_main.txt > nodes_main.txt\n     python generate-seeds.py . > ../../src/chainparamsseeds.h\n "
      },
      {
        "sha": "3e45e66f8cbe3fe8f8300cdd65f5359a0f8f064d",
        "filename": "contrib/seeds/generate-seeds.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/seeds/generate-seeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/seeds/generate-seeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/generate-seeds.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -117,10 +117,10 @@ def main():\n         exit(1)\n     g = sys.stdout\n     indir = sys.argv[1]\n-    g.write('#ifndef BITCOIN_CHAINPARAMSSEEDS_H\\n')\n-    g.write('#define BITCOIN_CHAINPARAMSSEEDS_H\\n')\n+    g.write('#ifndef LITECOIN_CHAINPARAMSSEEDS_H\\n')\n+    g.write('#define LITECOIN_CHAINPARAMSSEEDS_H\\n')\n     g.write('/**\\n')\n-    g.write(' * List of fixed seed nodes for the bitcoin network\\n')\n+    g.write(' * List of fixed seed nodes for the litecoin network\\n')\n     g.write(' * AUTOGENERATED by contrib/seeds/generate-seeds.py\\n')\n     g.write(' *\\n')\n     g.write(' * Each line contains a 16-byte IPv6 address and a port.\\n')\n@@ -131,7 +131,7 @@ def main():\n     g.write('\\n')\n     with open(os.path.join(indir,'nodes_test.txt'),'r') as f:\n         process_nodes(g, f, 'pnSeed6_test', 18333)\n-    g.write('#endif // BITCOIN_CHAINPARAMSSEEDS_H\\n')\n+    g.write('#endif // LITECOIN_CHAINPARAMSSEEDS_H\\n')\n             \n if __name__ == '__main__':\n     main()"
      },
      {
        "sha": "fca32ebbbf8aab7cd800ab4350165269bdc38f16",
        "filename": "contrib/seeds/makeseeds.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/seeds/makeseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/seeds/makeseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/makeseeds.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -152,7 +152,7 @@ def main():\n     ips = [ip for ip in ips if PATTERN_AGENT.match(ip['agent'])]\n     # Sort by availability (and use last success as tie breaker)\n     ips.sort(key=lambda x: (x['uptime'], x['lastsuccess'], x['ip']), reverse=True)\n-    # Filter out hosts with multiple bitcoin ports, these are likely abusive\n+    # Filter out hosts with multiple litecoin ports, these are likely abusive\n     ips = filtermultiport(ips)\n     # Look up ASNs and limit results, both per ASN and globally.\n     ips = filterbyasn(ips, MAX_SEEDS_PER_ASN, NSEEDS)"
      },
      {
        "sha": "70404f27017b0f92784555597036f7de15ddc1c7",
        "filename": "contrib/seeds/nodes_main.txt",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/seeds/nodes_main.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/seeds/nodes_main.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_main.txt?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -918,8 +918,8 @@ a6obdgzn67l7exu3.onion:8333\n ab64h7olpl7qpxci.onion:8333\n am2a4rahltfuxz6l.onion:8333\n azuxls4ihrr2mep7.onion:8333\n-bitcoin7bi4op7wb.onion:8333\n-bitcoinostk4e4re.onion:8333\n+litecoin7bi4op7wb.onion:8333\n+litecoinostk4e4re.onion:8333\n bk7yp6epnmcllq72.onion:8333\n bmutjfrj5btseddb.onion:8333\n ceeji4qpfs3ms3zc.onion:8333"
      },
      {
        "sha": "8a985a12537bf1ed1ae7cee4edb2b817a11dcfb0",
        "filename": "contrib/seeds/nodes_test.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/seeds/nodes_test.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/seeds/nodes_test.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_test.txt?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,7 +1,7 @@\n # List of fixed seed nodes for testnet\n \n # Onion nodes\n-thfsmmn2jbitcoin.onion\n+thfsmmn2jlitecoin.onion\n it2pj4f7657g3rhi.onion\n nkf5e6b7pl4jfd4a.onion\n 4zhkir2ofl7orfom.onion"
      },
      {
        "sha": "e4ac4cc87f86d309ccb291368c92c8e9de5b382d",
        "filename": "contrib/spendfrom/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/spendfrom/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/spendfrom/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/spendfrom/README.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -7,7 +7,7 @@ address (or addresses).\n Depends on [jsonrpc](http://json-rpc.org/).\n \n \tspendfrom.py --from=FROMADDRESS1[,FROMADDRESS2] --to=TOADDRESS --amount=amount \\\n-\t             --fee=fee --datadir=/path/to/.bitcoin --testnet --dry_run\n+\t             --fee=fee --datadir=/path/to/.litecoin --testnet --dry_run\n \n With no arguments, outputs a list of amounts associated with addresses.\n \n@@ -16,7 +16,7 @@ With arguments, sends coins received by the `FROMADDRESS` addresses to the `TOAD\n ### Notes ###\n \n - You may explicitly specify how much fee to pay (a fee more than 1% of the amount\n-will fail,  though, to prevent bitcoin-losing accidents). Spendfrom may fail if\n+will fail,  though, to prevent litecoin-losing accidents). Spendfrom may fail if\n it thinks the transaction would never be confirmed (if the amount being sent is\n too small, or if the transaction is too many bytes for the fee).\n "
      },
      {
        "sha": "05e9fcd6855ac00cb1802829a394dca6f462316b",
        "filename": "contrib/spendfrom/setup.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/spendfrom/setup.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/spendfrom/setup.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/spendfrom/setup.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,9 +1,9 @@\n from distutils.core import setup\n setup(name='btcspendfrom',\n       version='1.0',\n-      description='Command-line utility for bitcoin \"coin control\"',\n+      description='Command-line utility for litecoin \"coin control\"',\n       author='Gavin Andresen',\n-      author_email='gavin@bitcoinfoundation.org',\n+      author_email='gavin@litecoinfoundation.org',\n       requires=['jsonrpc'],\n       scripts=['spendfrom.py'],\n       )"
      },
      {
        "sha": "a64fdda6a6b2e278a121bee45d4f4eb256a00474",
        "filename": "contrib/spendfrom/spendfrom.py",
        "status": "modified",
        "additions": 40,
        "deletions": 40,
        "changes": 80,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/spendfrom/spendfrom.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/spendfrom/spendfrom.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/spendfrom/spendfrom.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,13 +1,13 @@\n #!/usr/bin/env python\n #\n-# Use the raw transactions API to spend bitcoins received on particular addresses,\n+# Use the raw transactions API to spend litecoins received on particular addresses,\n # and send any change back to that same address.\n #\n # Example usage:\n #  spendfrom.py  # Lists available funds\n #  spendfrom.py --from=ADDRESS --to=ADDRESS --amount=11.00\n #\n-# Assumes it will talk to a bitcoind or Bitcoin-Qt running\n+# Assumes it will talk to a litecoind or Litecoin-Qt running\n # on localhost.\n #\n # Depends on jsonrpc\n@@ -33,15 +33,15 @@ def check_json_precision():\n         raise RuntimeError(\"JSON encode/decode loses precision\")\n \n def determine_db_dir():\n-    \"\"\"Return the default location of the bitcoin data directory\"\"\"\n+    \"\"\"Return the default location of the litecoin data directory\"\"\"\n     if platform.system() == \"Darwin\":\n-        return os.path.expanduser(\"~/Library/Application Support/Bitcoin/\")\n+        return os.path.expanduser(\"~/Library/Application Support/Litecoin/\")\n     elif platform.system() == \"Windows\":\n-        return os.path.join(os.environ['APPDATA'], \"Bitcoin\")\n-    return os.path.expanduser(\"~/.bitcoin\")\n+        return os.path.join(os.environ['APPDATA'], \"Litecoin\")\n+    return os.path.expanduser(\"~/.litecoin\")\n \n-def read_bitcoin_config(dbdir):\n-    \"\"\"Read the bitcoin.conf file from dbdir, returns dictionary of settings\"\"\"\n+def read_litecoin_config(dbdir):\n+    \"\"\"Read the litecoin.conf file from dbdir, returns dictionary of settings\"\"\"\n     from ConfigParser import SafeConfigParser\n \n     class FakeSecHead(object):\n@@ -59,11 +59,11 @@ def readline(self):\n                 return s\n \n     config_parser = SafeConfigParser()\n-    config_parser.readfp(FakeSecHead(open(os.path.join(dbdir, \"bitcoin.conf\"))))\n+    config_parser.readfp(FakeSecHead(open(os.path.join(dbdir, \"litecoin.conf\"))))\n     return dict(config_parser.items(\"all\"))\n \n def connect_JSON(config):\n-    \"\"\"Connect to a bitcoin JSON-RPC server\"\"\"\n+    \"\"\"Connect to a litecoin JSON-RPC server\"\"\"\n     testnet = config.get('testnet', '0')\n     testnet = (int(testnet) > 0)  # 0/1 in config file, convert to True/False\n     if not 'rpcport' in config:\n@@ -72,7 +72,7 @@ def connect_JSON(config):\n     try:\n         result = ServiceProxy(connect)\n         # ServiceProxy is lazy-connect, so send an RPC command mostly to catch connection errors,\n-        # but also make sure the bitcoind we're talking to is/isn't testnet:\n+        # but also make sure the litecoind we're talking to is/isn't testnet:\n         if result.getmininginfo()['testnet'] != testnet:\n             sys.stderr.write(\"RPC server at \"+connect+\" testnet setting mismatch\\n\")\n             sys.exit(1)\n@@ -81,36 +81,36 @@ def connect_JSON(config):\n         sys.stderr.write(\"Error connecting to RPC server at \"+connect+\"\\n\")\n         sys.exit(1)\n \n-def unlock_wallet(bitcoind):\n-    info = bitcoind.getinfo()\n+def unlock_wallet(litecoind):\n+    info = litecoind.getinfo()\n     if 'unlocked_until' not in info:\n         return True # wallet is not encrypted\n     t = int(info['unlocked_until'])\n     if t <= time.time():\n         try:\n             passphrase = getpass.getpass(\"Wallet is locked; enter passphrase: \")\n-            bitcoind.walletpassphrase(passphrase, 5)\n+            litecoind.walletpassphrase(passphrase, 5)\n         except:\n             sys.stderr.write(\"Wrong passphrase\\n\")\n \n-    info = bitcoind.getinfo()\n+    info = litecoind.getinfo()\n     return int(info['unlocked_until']) > time.time()\n \n-def list_available(bitcoind):\n+def list_available(litecoind):\n     address_summary = dict()\n \n     address_to_account = dict()\n-    for info in bitcoind.listreceivedbyaddress(0):\n+    for info in litecoind.listreceivedbyaddress(0):\n         address_to_account[info[\"address\"]] = info[\"account\"]\n \n-    unspent = bitcoind.listunspent(0)\n+    unspent = litecoind.listunspent(0)\n     for output in unspent:\n         # listunspent doesn't give addresses, so:\n-        rawtx = bitcoind.getrawtransaction(output['txid'], 1)\n+        rawtx = litecoind.getrawtransaction(output['txid'], 1)\n         vout = rawtx[\"vout\"][output['vout']]\n         pk = vout[\"scriptPubKey\"]\n \n-        # This code only deals with ordinary pay-to-bitcoin-address\n+        # This code only deals with ordinary pay-to-litecoin-address\n         # or pay-to-script-hash outputs right now; anything exotic is ignored.\n         if pk[\"type\"] != \"pubkeyhash\" and pk[\"type\"] != \"scripthash\":\n             continue\n@@ -139,8 +139,8 @@ def select_coins(needed, inputs):\n         n += 1\n     return (outputs, have-needed)\n \n-def create_tx(bitcoind, fromaddresses, toaddress, amount, fee):\n-    all_coins = list_available(bitcoind)\n+def create_tx(litecoind, fromaddresses, toaddress, amount, fee):\n+    all_coins = list_available(litecoind)\n \n     total_available = Decimal(\"0.0\")\n     needed = amount+fee\n@@ -159,7 +159,7 @@ def create_tx(bitcoind, fromaddresses, toaddress, amount, fee):\n     # Note:\n     # Python's json/jsonrpc modules have inconsistent support for Decimal numbers.\n     # Instead of wrestling with getting json.dumps() (used by jsonrpc) to encode\n-    # Decimals, I'm casting amounts to float before sending them to bitcoind.\n+    # Decimals, I'm casting amounts to float before sending them to litecoind.\n     #  \n     outputs = { toaddress : float(amount) }\n     (inputs, change_amount) = select_coins(needed, potential_inputs)\n@@ -170,19 +170,19 @@ def create_tx(bitcoind, fromaddresses, toaddress, amount, fee):\n         else:\n             outputs[change_address] = float(change_amount)\n \n-    rawtx = bitcoind.createrawtransaction(inputs, outputs)\n-    signed_rawtx = bitcoind.signrawtransaction(rawtx)\n+    rawtx = litecoind.createrawtransaction(inputs, outputs)\n+    signed_rawtx = litecoind.signrawtransaction(rawtx)\n     if not signed_rawtx[\"complete\"]:\n         sys.stderr.write(\"signrawtransaction failed\\n\")\n         sys.exit(1)\n     txdata = signed_rawtx[\"hex\"]\n \n     return txdata\n \n-def compute_amount_in(bitcoind, txinfo):\n+def compute_amount_in(litecoind, txinfo):\n     result = Decimal(\"0.0\")\n     for vin in txinfo['vin']:\n-        in_info = bitcoind.getrawtransaction(vin['txid'], 1)\n+        in_info = litecoind.getrawtransaction(vin['txid'], 1)\n         vout = in_info['vout'][vin['vout']]\n         result = result + vout['value']\n     return result\n@@ -193,12 +193,12 @@ def compute_amount_out(txinfo):\n         result = result + vout['value']\n     return result\n \n-def sanity_test_fee(bitcoind, txdata_hex, max_fee):\n+def sanity_test_fee(litecoind, txdata_hex, max_fee):\n     class FeeError(RuntimeError):\n         pass\n     try:\n-        txinfo = bitcoind.decoderawtransaction(txdata_hex)\n-        total_in = compute_amount_in(bitcoind, txinfo)\n+        txinfo = litecoind.decoderawtransaction(txdata_hex)\n+        total_in = compute_amount_in(litecoind, txinfo)\n         total_out = compute_amount_out(txinfo)\n         if total_in-total_out > max_fee:\n             raise FeeError(\"Rejecting transaction, unreasonable fee of \"+str(total_in-total_out))\n@@ -221,15 +221,15 @@ def main():\n \n     parser = optparse.OptionParser(usage=\"%prog [options]\")\n     parser.add_option(\"--from\", dest=\"fromaddresses\", default=None,\n-                      help=\"addresses to get bitcoins from\")\n+                      help=\"addresses to get litecoins from\")\n     parser.add_option(\"--to\", dest=\"to\", default=None,\n-                      help=\"address to get send bitcoins to\")\n+                      help=\"address to get send litecoins to\")\n     parser.add_option(\"--amount\", dest=\"amount\", default=None,\n                       help=\"amount to send\")\n     parser.add_option(\"--fee\", dest=\"fee\", default=\"0.0\",\n                       help=\"fee to include\")\n     parser.add_option(\"--datadir\", dest=\"datadir\", default=determine_db_dir(),\n-                      help=\"location of bitcoin.conf file with RPC username/password (default: %default)\")\n+                      help=\"location of litecoin.conf file with RPC username/password (default: %default)\")\n     parser.add_option(\"--testnet\", dest=\"testnet\", default=False, action=\"store_true\",\n                       help=\"Use the test network\")\n     parser.add_option(\"--dry_run\", dest=\"dry_run\", default=False, action=\"store_true\",\n@@ -238,12 +238,12 @@ def main():\n     (options, args) = parser.parse_args()\n \n     check_json_precision()\n-    config = read_bitcoin_config(options.datadir)\n+    config = read_litecoin_config(options.datadir)\n     if options.testnet: config['testnet'] = True\n-    bitcoind = connect_JSON(config)\n+    litecoind = connect_JSON(config)\n \n     if options.amount is None:\n-        address_summary = list_available(bitcoind)\n+        address_summary = list_available(litecoind)\n         for address,info in address_summary.iteritems():\n             n_transactions = len(info['outputs'])\n             if n_transactions > 1:\n@@ -253,14 +253,14 @@ def main():\n     else:\n         fee = Decimal(options.fee)\n         amount = Decimal(options.amount)\n-        while unlock_wallet(bitcoind) == False:\n+        while unlock_wallet(litecoind) == False:\n             pass # Keep asking for passphrase until they get it right\n-        txdata = create_tx(bitcoind, options.fromaddresses.split(\",\"), options.to, amount, fee)\n-        sanity_test_fee(bitcoind, txdata, amount*Decimal(\"0.01\"))\n+        txdata = create_tx(litecoind, options.fromaddresses.split(\",\"), options.to, amount, fee)\n+        sanity_test_fee(litecoind, txdata, amount*Decimal(\"0.01\"))\n         if options.dry_run:\n             print(txdata)\n         else:\n-            txid = bitcoind.sendrawtransaction(txdata)\n+            txid = litecoind.sendrawtransaction(txdata)\n             print(txid)\n \n if __name__ == '__main__':"
      },
      {
        "sha": "b16b312f3c9738ad2545b0ffd97520d7f78a6a08",
        "filename": "contrib/testgen/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/testgen/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/testgen/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/README.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,8 +1,8 @@\n ### TestGen ###\n \n-Utilities to generate test vectors for the data-driven Bitcoin tests.\n+Utilities to generate test vectors for the data-driven Litecoin tests.\n \n Usage: \n \n     gen_base58_test_vectors.py valid 50 > ../../src/test/data/base58_keys_valid.json\n-    gen_base58_test_vectors.py invalid 50 > ../../src/test/data/base58_keys_invalid.json\n\\ No newline at end of file\n+    gen_base58_test_vectors.py invalid 50 > ../../src/test/data/base58_keys_invalid.json"
      },
      {
        "sha": "9ff0c57bf04dc27a3437cdf91f534720fd0a81ec",
        "filename": "contrib/testgen/base58.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/testgen/base58.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/testgen/base58.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/base58.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,7 +1,7 @@\n '''\n-Bitcoin base58 encoding and decoding.\n+Litecoin base58 encoding and decoding.\n \n-Based on https://bitcointalk.org/index.php?topic=1026.0 (public domain)\n+Based on https://litecointalk.org/index.php?topic=1026.0 (public domain)\n '''\n import hashlib\n \n@@ -34,7 +34,7 @@ def b58encode(v):\n         long_value = div\n     result = __b58chars[long_value] + result\n \n-    # Bitcoin does a little leading-zero-compression:\n+    # Litecoin does a little leading-zero-compression:\n     # leading 0-bytes in the input become leading-1s\n     nPad = 0\n     for c in v:\n@@ -95,7 +95,7 @@ def get_bcaddress_version(strAddress):\n     return ord(version)\n \n if __name__ == '__main__':\n-    # Test case (from http://gitorious.org/bitcoin/python-base58.git)\n+    # Test case (from http://gitorious.org/litecoin/python-base58.git)\n     assert get_bcaddress_version('15VjRaDX9zpbA8LVnbrCAFzrVzN7ixHNsC') is 0\n     _ohai = 'o hai'.encode('ascii')\n     _tmp = b58encode(_ohai)"
      },
      {
        "sha": "9da62587761f304a69b20701f09eaa895ece9da3",
        "filename": "contrib/tidy_datadir.sh",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/tidy_datadir.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/tidy_datadir.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/tidy_datadir.sh?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -4,7 +4,7 @@ if [ -d \"$1\" ]; then\n   cd \"$1\"\n else\n   echo \"Usage: $0 <datadir>\" >&2\n-  echo \"Removes obsolete Bitcoin database files\" >&2\n+  echo \"Removes obsolete Litecoin database files\" >&2\n   exit 1\n fi\n \n@@ -16,22 +16,22 @@ if [ -f wallet.dat -a -f peers.dat -a -f chainstate/CURRENT -a -f blocks/index/C\n \n case $LEVEL in\n   0)\n-    echo \"Error: no Bitcoin datadir detected.\"\n+    echo \"Error: no Litecoin datadir detected.\"\n     exit 1\n     ;;\n   1)\n-    echo \"Detected old Bitcoin datadir (before 0.7).\"\n+    echo \"Detected old Litecoin datadir (before 0.7).\"\n     echo \"Nothing to do.\"\n     exit 0\n     ;;\n   2)\n-    echo \"Detected Bitcoin 0.7 datadir.\"\n+    echo \"Detected Litecoin 0.7 datadir.\"\n     ;;\n   3)\n-    echo \"Detected Bitcoin pre-0.8 datadir.\"\n+    echo \"Detected Litecoin pre-0.8 datadir.\"\n     ;;\n   4)\n-    echo \"Detected Bitcoin 0.8 datadir.\"\n+    echo \"Detected Litecoin 0.8 datadir.\"\n     ;;\n esac\n "
      },
      {
        "sha": "cc2f05dc9a635024c4561112552a9d2257777be8",
        "filename": "contrib/verify-commits/gpg.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/verify-commits/gpg.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/verify-commits/gpg.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/gpg.sh?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -12,7 +12,7 @@ for LINE in $(echo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null); do\n \t\tdone < ./contrib/verify-commits/trusted-keys\n \t\t;;\n \t\"[GNUPG:] REVKEYSIG \"*)\n-\t\t[ \"$BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG\" != 1 ] && exit 1\n+\t\t[ \"$LITECOIN_VERIFY_COMMITS_ALLOW_REVSIG\" != 1 ] && exit 1\n \t\twhile read KEY; do\n \t\t\tcase \"$LINE\" in \"[GNUPG:] REVKEYSIG ${KEY#????????????????????????} \"*)\n \t\t\t\tREVSIG=true"
      },
      {
        "sha": "1c2b0b08a9a16bb6774125195000e72dc19c65d4",
        "filename": "contrib/verify-commits/pre-push-hook.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/verify-commits/pre-push-hook.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/verify-commits/pre-push-hook.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/pre-push-hook.sh?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/bin/bash\n-if ! [[ \"$2\" =~ ^(git@)?(www.)?github.com(:|/)bitcoin/bitcoin(.git)?$ ]]; then\n+if ! [[ \"$2\" =~ ^(git@)?(www.)?github.com(:|/)litecoin/litecoin(.git)?$ ]]; then\n     exit 0\n fi\n "
      },
      {
        "sha": "3ba2b7b52e8bda4497f3022df2a00d1105629d9e",
        "filename": "contrib/verify-commits/verify-commits.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/verify-commits/verify-commits.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/verify-commits/verify-commits.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/verify-commits.sh?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -14,9 +14,9 @@ IS_SIGNED () {\n \t\treturn 0;\n \tfi\n \tif [ \"${REVSIG_ALLOWED#*$1}\" != \"$REVSIG_ALLOWED\" ]; then\n-\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=1\n+\t\texport LITECOIN_VERIFY_COMMITS_ALLOW_REVSIG=1\n \telse\n-\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=0\n+\t\texport LITECOIN_VERIFY_COMMITS_ALLOW_REVSIG=0\n \tfi\n \tif ! git -c \"gpg.program=${DIR}/gpg.sh\" verify-commit $1 > /dev/null 2>&1; then\n \t\treturn 1;"
      },
      {
        "sha": "8c526fe2f3f06ce14485a7906af48c5cea6d1449",
        "filename": "contrib/verifybinaries/README.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/verifybinaries/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/verifybinaries/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/README.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n ### Verify Binaries\n-This script attempts to download the signature file `SHA256SUMS.asc` from https://bitcoin.org.\n+This script attempts to download the signature file `SHA256SUMS.asc` from https://litecoin.org.\n \n It first checks if the signature passes, and then downloads the files specified in the file, and checks if the hashes of these files match those that are specified in the signature file.\n \n@@ -8,6 +8,6 @@ The script returns 0 if everything passes the checks. It returns 1 if either the\n Usage:\n \n ```sh\n-./verify.sh bitcoin-core-0.11.2\n-./verify.sh bitcoin-core-0.12.0\n+./verify.sh litecoin-core-0.11.2\n+./verify.sh litecoin-core-0.12.0\n ```"
      },
      {
        "sha": "71295af0e374dddc980069427eb05f2ba541ff6c",
        "filename": "contrib/verifybinaries/verify.sh",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/verifybinaries/verify.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/contrib/verifybinaries/verify.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/verify.sh?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,6 +1,6 @@\n #!/bin/bash\n \n-###   This script attempts to download the signature file SHA256SUMS.asc from bitcoin.org\n+###   This script attempts to download the signature file SHA256SUMS.asc from litecoin.org\n ###   It first checks if the signature passes, and then downloads the files specified in\n ###   the file, and checks if the hashes of these files match those that are specified\n ###   in the signature file.\n@@ -14,13 +14,13 @@ function clean_up {\n    done\n }\n \n-WORKINGDIR=\"/tmp/bitcoin\"\n+WORKINGDIR=\"/tmp/litecoin\"\n TMPFILE=\"hashes.tmp\"\n \n SIGNATUREFILENAME=\"SHA256SUMS.asc\"\n RCSUBDIR=\"test/\"\n-BASEDIR=\"https://bitcoin.org/bin/\"\n-VERSIONPREFIX=\"bitcoin-core-\"\n+BASEDIR=\"https://litecoin.org/bin/\"\n+VERSIONPREFIX=\"litecoin-core-\"\n RCVERSIONSTRING=\"rc\"\n \n if [ ! -d \"$WORKINGDIR\" ]; then\n@@ -31,7 +31,7 @@ cd \"$WORKINGDIR\"\n \n #test if a version number has been passed as an argument\n if [ -n \"$1\" ]; then\n-   #let's also check if the version number includes the prefix 'bitcoin-',\n+   #let's also check if the version number includes the prefix 'litecoin-',\n    #  and add this prefix if it doesn't\n    if [[ $1 == \"$VERSIONPREFIX\"* ]]; then\n       VERSION=\"$1\"\n@@ -80,7 +80,7 @@ if [ $RET -ne 0 ]; then\n       echo \"Bad signature.\"\n    elif [ $RET -eq 2 ]; then\n       #or if a gpg error has occurred\n-      echo \"gpg error. Do you have the Bitcoin Core binary release signing key installed?\"\n+      echo \"gpg error. Do you have the Litecoin Core binary release signing key installed?\"\n    fi\n \n    echo \"gpg output:\""
      },
      {
        "sha": "96a1fa982d024a48456d288ac68c2bedc69f41dd",
        "filename": "depends/Makefile",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -6,7 +6,7 @@ SDK_PATH ?= $(BASEDIR)/SDKs\n NO_QT ?=\n NO_WALLET ?=\n NO_UPNP ?=\n-FALLBACK_DOWNLOAD_PATH ?= https://bitcoincore.org/depends-sources\n+FALLBACK_DOWNLOAD_PATH ?= https://litecoincore.org/depends-sources\n \n BUILD = $(shell ./config.guess)\n HOST ?= $(BUILD)"
      },
      {
        "sha": "35814cabb02dde2b1ded7f693fb00c74707b8d0a",
        "filename": "depends/README.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -12,9 +12,9 @@ For example:\n \n     make HOST=x86_64-w64-mingw32 -j4\n \n-A prefix will be generated that's suitable for plugging into Bitcoin's\n+A prefix will be generated that's suitable for plugging into Litecoin's\n configure. In the above example, a dir named x86_64-w64-mingw32 will be\n-created. To use it for Bitcoin:\n+created. To use it for Litecoin:\n \n     ./configure --prefix=`pwd`/depends/x86_64-w64-mingw32\n \n@@ -43,7 +43,7 @@ The following can be set when running make: make FOO=bar\n     BUILD_ID_SALT: Optional salt to use when generating build package ids\n \n If some packages are not built, for example `make NO_WALLET=1`, the appropriate\n-options will be passed to bitcoin's configure. In this case, `--disable-wallet`.\n+options will be passed to litecoin's configure. In this case, `--disable-wallet`.\n \n Additional targets:\n "
      },
      {
        "sha": "eac8ca8f065792105889c2a5bea361c2f9d13743",
        "filename": "depends/config.site.in",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -20,7 +20,7 @@ if test -z $with_protoc_bindir; then\n   with_protoc_bindir=$depends_prefix/native/bin\n fi\n if test -z $with_comparison_tool; then\n-  with_comparison_tool=$depends_prefix/native/share/BitcoindComparisonTool_jar/BitcoindComparisonTool.jar\n+  with_comparison_tool=$depends_prefix/native/share/LitecoindComparisonTool_jar/LitecoindComparisonTool.jar\n fi\n \n "
      },
      {
        "sha": "0980f815b5dc870f847688668400262ce46bf513",
        "filename": "depends/description.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/depends/description.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/depends/description.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/description.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,4 +1,4 @@\n-This is a system of building and caching dependencies necessary for building Bitcoin. \n+This is a system of building and caching dependencies necessary for building Litecoin. \n There are several features that make it different from most similar systems:\n \n ### It is designed to be builder and host agnostic"
      },
      {
        "sha": "49d25eb6ae3d5c40d021fbbb1c85f95ad6168aef",
        "filename": "depends/packages/native_comparisontool.mk",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/depends/packages/native_comparisontool.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/depends/packages/native_comparisontool.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_comparisontool.mk?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,10 +1,10 @@\n package=native_comparisontool\n $(package)_version=8c6666f\n-$(package)_download_path=https://github.com/theuni/bitcoind-comparisontool/raw/master\n+$(package)_download_path=https://github.com/theuni/litecoind-comparisontool/raw/master\n $(package)_file_name=pull-tests-$($(package)_version).jar\n $(package)_sha256_hash=a865332b3827abcde684ab79f5f43c083b0b6a4c97ff5508c79f29fee24f11cd\n-$(package)_install_dirname=BitcoindComparisonTool_jar\n-$(package)_install_filename=BitcoindComparisonTool.jar\n+$(package)_install_dirname=LitecoindComparisonTool_jar\n+$(package)_install_filename=LitecoindComparisonTool.jar\n \n define $(package)_extract_cmds\n endef"
      },
      {
        "sha": "777bcf2200773e86a0e6da3c3ef3eb35e2010359",
        "filename": "doc/Doxyfile",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/Doxyfile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/Doxyfile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -28,7 +28,7 @@ DOXYFILE_ENCODING      = UTF-8\n # The PROJECT_NAME tag is a single word (or a sequence of words surrounded \n # by quotes) that should identify the project.\n \n-PROJECT_NAME           = Bitcoin\n+PROJECT_NAME           = Litecoin\n \n # The PROJECT_NUMBER tag can be used to enter a project or revision number. \n # This could be handy for archiving the generated documentation or \n@@ -47,7 +47,7 @@ PROJECT_BRIEF          = \"P2P Digital Currency\"\n # exceed 55 pixels and the maximum width should not exceed 200 pixels. \n # Doxygen will copy the logo to the output directory.\n \n-PROJECT_LOGO           = doc/bitcoin_logo_doxygen.png\n+PROJECT_LOGO           = doc/litecoin_logo_doxygen.png\n \n # The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) \n # base path where the generated documentation will be put. "
      },
      {
        "sha": "f8bb2e0e5024ffac28006f3a7f3070db7ce73d6a",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 16,
        "deletions": 16,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,39 +1,39 @@\n-Bitcoin Core 0.13.0\n+Litecoin Core 0.13.0\n =====================\n \n Setup\n ---------------------\n-[Bitcoin Core](http://bitcoin.org/en/download) is the original Bitcoin client and it builds the backbone of the network. However, it downloads and stores the entire history of Bitcoin transactions (which is currently several GBs); depending on the speed of your computer and network connection, the synchronization process can take anywhere from a few hours to a day or more.\n+[Litecoin Core](http://litecoin.org/en/download) is the original Litecoin client and it builds the backbone of the network. However, it downloads and stores the entire history of Litecoin transactions (which is currently several GBs); depending on the speed of your computer and network connection, the synchronization process can take anywhere from a few hours to a day or more.\n \n Running\n ---------------------\n-The following are some helpful notes on how to run Bitcoin on your native platform.\n+The following are some helpful notes on how to run Litecoin on your native platform.\n \n ### Unix\n \n Unpack the files into a directory and run:\n \n-- `bin/bitcoin-qt` (GUI) or\n-- `bin/bitcoind` (headless)\n+- `bin/litecoin-qt` (GUI) or\n+- `bin/litecoind` (headless)\n \n ### Windows\n \n-Unpack the files into a directory, and then run bitcoin-qt.exe.\n+Unpack the files into a directory, and then run litecoin-qt.exe.\n \n ### OS X\n \n-Drag Bitcoin-Core to your applications folder, and then run Bitcoin-Core.\n+Drag Litecoin-Core to your applications folder, and then run Litecoin-Core.\n \n ### Need Help?\n \n-* See the documentation at the [Bitcoin Wiki](https://en.bitcoin.it/wiki/Main_Page)\n+* See the documentation at the [Litecoin Wiki](https://en.litecoin.it/wiki/Main_Page)\n for help and more information.\n-* Ask for help on [#bitcoin](http://webchat.freenode.net?channels=bitcoin) on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net?channels=bitcoin).\n-* Ask for help on the [BitcoinTalk](https://bitcointalk.org/) forums, in the [Technical Support board](https://bitcointalk.org/index.php?board=4.0).\n+* Ask for help on [#litecoin](http://webchat.freenode.net?channels=litecoin) on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net?channels=litecoin).\n+* Ask for help on the [LitecoinTalk](https://litecointalk.org/) forums, in the [Technical Support board](https://litecointalk.org/index.php?board=4.0).\n \n Building\n ---------------------\n-The following are developer notes on how to build Bitcoin on your native platform. They are not complete guides, but include notes on the necessary libraries, compile flags, etc.\n+The following are developer notes on how to build Litecoin on your native platform. They are not complete guides, but include notes on the necessary libraries, compile flags, etc.\n \n - [OS X Build Notes](build-osx.md)\n - [Unix Build Notes](build-unix.md)\n@@ -43,13 +43,13 @@ The following are developer notes on how to build Bitcoin on your native platfor\n \n Development\n ---------------------\n-The Bitcoin repo's [root README](/README.md) contains relevant information on the development process and automated testing.\n+The Litecoin repo's [root README](/README.md) contains relevant information on the development process and automated testing.\n \n - [Developer Notes](developer-notes.md)\n - [Multiwallet Qt Development](multiwallet-qt.md)\n - [Release Notes](release-notes.md)\n - [Release Process](release-process.md)\n-- [Source Code Documentation (External Link)](https://dev.visucore.com/bitcoin/doxygen/)\n+- [Source Code Documentation (External Link)](https://dev.visucore.com/litecoin/doxygen/)\n - [Translation Process](translation_process.md)\n - [Translation Strings Policy](translation_strings_policy.md)\n - [Unit Tests](unit-tests.md)\n@@ -60,9 +60,9 @@ The Bitcoin repo's [root README](/README.md) contains relevant information on th\n - [Benchmarking](benchmarking.md)\n \n ### Resources\n-* Discuss on the [BitcoinTalk](https://bitcointalk.org/) forums, in the [Development & Technical Discussion board](https://bitcointalk.org/index.php?board=6.0).\n-* Discuss project-specific development on #bitcoin-core-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=bitcoin-core-dev).\n-* Discuss general Bitcoin development on #bitcoin-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=bitcoin-dev).\n+* Discuss on the [LitecoinTalk](https://litecointalk.org/) forums, in the [Development & Technical Discussion board](https://litecointalk.org/index.php?board=6.0).\n+* Discuss project-specific development on #litecoin-core-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=litecoin-core-dev).\n+* Discuss general Litecoin development on #litecoin-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=litecoin-dev).\n \n ### Miscellaneous\n - [Assets Attribution](assets-attribution.md)"
      },
      {
        "sha": "a359f14826b17c4466442223b6013837ba09f2e6",
        "filename": "doc/README_osx.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/README_osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/README_osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_osx.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -77,6 +77,6 @@ build process to remain somewhat deterministic. Here's how it works:\n   that have been previously (deterministically) built in order to create a\n   final dmg.\n - The Apple keyholder uses this unsigned app to create a detached signature,\n-  using the script that is also included there. Detached signatures are available from this [repository](https://github.com/bitcoin-core/bitcoin-detached-sigs).\n+  using the script that is also included there. Detached signatures are available from this [repository](https://github.com/litecoin-core/litecoin-detached-sigs).\n - Builders feed the unsigned app + detached signature back into Gitian. It\n   uses the pre-built tools to recombine the pieces into a deterministic dmg."
      },
      {
        "sha": "74a46d5d7506dcb1ed35db908424eec42c57f2b0",
        "filename": "doc/README_windows.txt",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,23 +1,23 @@\n-Bitcoin Core 0.13.0\r\n+Litecoin Core 0.13.0\r\n =====================\r\n \r\n Intro\r\n -----\r\n-Bitcoin is a free open source peer-to-peer electronic cash system that is\r\n+Litecoin is a free open source peer-to-peer electronic cash system that is\r\n completely decentralized, without the need for a central server or trusted\r\n parties.  Users hold the crypto keys to their own money and transact directly\r\n with each other, with the help of a P2P network to check for double-spending.\r\n \r\n \r\n Setup\r\n -----\r\n-Unpack the files into a directory and run bitcoin-qt.exe.\r\n+Unpack the files into a directory and run litecoin-qt.exe.\r\n \r\n-Bitcoin Core is the original Bitcoin client and it builds the backbone of the network.\r\n-However, it downloads and stores the entire history of Bitcoin transactions;\r\n+Litecoin Core is the original Litecoin client and it builds the backbone of the network.\r\n+However, it downloads and stores the entire history of Litecoin transactions;\r\n depending on the speed of your computer and network connection, the synchronization\r\n process can take anywhere from a few hours to a day or more.\r\n \r\n-See the bitcoin wiki at:\r\n-  https://en.bitcoin.it/wiki/Main_Page\r\n+See the litecoin wiki at:\r\n+  https://en.litecoin.it/wiki/Main_Page\r\n for more help and information.\r"
      },
      {
        "sha": "c3848f0ec09d46fa67a20e9564f3fd8b0d29c509",
        "filename": "doc/REST-interface.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -49,7 +49,7 @@ Only supports JSON as output format.\n \n The getutxo command allows querying of the UTXO set given a set of outpoints.\n See BIP64 for input and output serialisation:\n-https://github.com/bitcoin/bips/blob/master/bip-0064.mediawiki\n+https://github.com/litecoin/bips/blob/master/bip-0064.mediawiki\n \n Example:\n ```\n@@ -93,4 +93,4 @@ Only supports JSON as output format.\n \n Risks\n -------------\n-Running a web browser on the same node with a REST enabled bitcoind can be a risk. Accessing prepared XSS websites could read out tx/block data of your node by placing links like `<script src=\"http://127.0.0.1:8332/rest/tx/1234567890.json\">` which might break the nodes privacy.\n+Running a web browser on the same node with a REST enabled litecoind can be a risk. Accessing prepared XSS websites could read out tx/block data of your node by placing links like `<script src=\"http://127.0.0.1:8332/rest/tx/1234567890.json\">` which might break the nodes privacy."
      },
      {
        "sha": "0b8803ad20005b58215187959f9dd9905d073bd3",
        "filename": "doc/assets-attribution.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/assets-attribution.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/assets-attribution.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1 +1 @@\n-The list of assets used in the bitcoin source and their attribution can now be found in [contrib/debian/copyright](../contrib/debian/copyright).\n+The list of assets used in the litecoin source and their attribution can now be found in [contrib/debian/copyright](../contrib/debian/copyright)."
      },
      {
        "sha": "3e396532852ac22e2dfaa08193a9d83611c8aec4",
        "filename": "doc/benchmarking.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/benchmarking.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/benchmarking.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/benchmarking.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,11 +1,11 @@\n Benchmarking\n ============\n \n-Bitcoin Core has an internal benchmarking framework, with benchmarks\n+Litecoin Core has an internal benchmarking framework, with benchmarks\n for cryptographic algorithms such as SHA1, SHA256, SHA512 and RIPEMD160. As well as the rolling bloom filter.\n \n-After compiling bitcoin-core, the benchmarks can be run with:\n-`src/bench/bench_bitcoin`\n+After compiling litecoin-core, the benchmarks can be run with:\n+`src/bench/bench_litecoin`\n \n The output will look similar to:\n ```"
      },
      {
        "sha": "82cb9df7bb5eacfc5ab6913e39f7104285aee772",
        "filename": "doc/bips.md",
        "status": "modified",
        "additions": 28,
        "deletions": 28,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,29 +1,29 @@\n-BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.13.0**):\n+BIPs that are implemented by Litecoin Core (up-to-date up to **v0.13.0**):\n \n-* [`BIP 9`](https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki): The changes allowing multiple soft-forks to be deployed in parallel have been implemented since **v0.12.1**  ([PR #7575](https://github.com/bitcoin/bitcoin/pull/7575))\n-* [`BIP 11`](https://github.com/bitcoin/bips/blob/master/bip-0011.mediawiki): Multisig outputs are standard since **v0.6.0** ([PR #669](https://github.com/bitcoin/bitcoin/pull/669)).\n-* [`BIP 13`](https://github.com/bitcoin/bips/blob/master/bip-0013.mediawiki): The address format for P2SH addresses has been implemented since **v0.6.0** ([PR #669](https://github.com/bitcoin/bitcoin/pull/669)).\n-* [`BIP 14`](https://github.com/bitcoin/bips/blob/master/bip-0014.mediawiki): The subversion string is being used as User Agent since **v0.6.0** ([PR #669](https://github.com/bitcoin/bitcoin/pull/669)).\n-* [`BIP 16`](https://github.com/bitcoin/bips/blob/master/bip-0016.mediawiki): The pay-to-script-hash evaluation rules have been implemented since **v0.6.0**, and took effect on *April 1st 2012* ([PR #748](https://github.com/bitcoin/bitcoin/pull/748)).\n-* [`BIP 21`](https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki): The URI format for Bitcoin payments has been implemented since **v0.6.0** ([PR #176](https://github.com/bitcoin/bitcoin/pull/176)).\n-* [`BIP 22`](https://github.com/bitcoin/bips/blob/master/bip-0022.mediawiki): The 'getblocktemplate' (GBT) RPC protocol for mining has been implemented since **v0.7.0** ([PR #936](https://github.com/bitcoin/bitcoin/pull/936)).\n-* [`BIP 23`](https://github.com/bitcoin/bips/blob/master/bip-0023.mediawiki): Some extensions to GBT have been implemented since **v0.10.0rc1**, including longpolling and block proposals ([PR #1816](https://github.com/bitcoin/bitcoin/pull/1816)).\n-* [`BIP 30`](https://github.com/bitcoin/bips/blob/master/bip-0030.mediawiki): The evaluation rules to forbid creating new transactions with the same txid as previous not-fully-spent transactions were implemented since **v0.6.0**, and the rule took effect on *March 15th 2012* ([PR #915](https://github.com/bitcoin/bitcoin/pull/915)).\n-* [`BIP 31`](https://github.com/bitcoin/bips/blob/master/bip-0031.mediawiki): The 'pong' protocol message (and the protocol version bump to 60001) has been implemented since **v0.6.1** ([PR #1081](https://github.com/bitcoin/bitcoin/pull/1081)).\n-* [`BIP 32`](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki): Hierarchical Deterministic Wallets has been implemented since **v0.13.0** ([PR #8035](https://github.com/bitcoin/bitcoin/pull/8035)).\n-* [`BIP 34`](https://github.com/bitcoin/bips/blob/master/bip-0034.mediawiki): The rule that requires blocks to contain their height (number) in the coinbase input, and the introduction of version 2 blocks has been implemented since **v0.7.0**. The rule took effect for version 2 blocks as of *block 224413* (March 5th 2013), and version 1 blocks are no longer allowed since *block 227931* (March 25th 2013) ([PR #1526](https://github.com/bitcoin/bitcoin/pull/1526)).\n-* [`BIP 35`](https://github.com/bitcoin/bips/blob/master/bip-0035.mediawiki): The 'mempool' protocol message (and the protocol version bump to 60002) has been implemented since **v0.7.0** ([PR #1641](https://github.com/bitcoin/bitcoin/pull/1641)).\n-* [`BIP 37`](https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki): The bloom filtering for transaction relaying, partial merkle trees for blocks, and the protocol version bump to 70001 (enabling low-bandwidth SPV clients) has been implemented since **v0.8.0** ([PR #1795](https://github.com/bitcoin/bitcoin/pull/1795)).\n-* [`BIP 42`](https://github.com/bitcoin/bips/blob/master/bip-0042.mediawiki): The bug that would have caused the subsidy schedule to resume after block 13440000 was fixed in **v0.9.2** ([PR #3842](https://github.com/bitcoin/bitcoin/pull/3842)).\n-* [`BIP 61`](https://github.com/bitcoin/bips/blob/master/bip-0061.mediawiki): The 'reject' protocol message (and the protocol version bump to 70002) was added in **v0.9.0** ([PR #3185](https://github.com/bitcoin/bitcoin/pull/3185)).\n-* [`BIP 65`](https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki): The CHECKLOCKTIMEVERIFY softfork was merged in **v0.12.0** ([PR #6351](https://github.com/bitcoin/bitcoin/pull/6351)), and backported to **v0.11.2** and **v0.10.4**. Mempool-only CLTV was added in [PR #6124](https://github.com/bitcoin/bitcoin/pull/6124).\n-* [`BIP 66`](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki): The strict DER rules and associated version 3 blocks have been implemented since **v0.10.0** ([PR #5713](https://github.com/bitcoin/bitcoin/pull/5713)).\n-* [`BIP 68`](https://github.com/bitcoin/bips/blob/master/bip-0068.mediawiki): Sequence locks have been implemented as of **v0.12.1**  ([PR #7184](https://github.com/bitcoin/bitcoin/pull/7184)), and have been activated since *block 419328*.\n-* [`BIP 70`](https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki) [`71`](https://github.com/bitcoin/bips/blob/master/bip-0071.mediawiki) [`72`](https://github.com/bitcoin/bips/blob/master/bip-0072.mediawiki): Payment Protocol support has been available in Bitcoin Core GUI since **v0.9.0** ([PR #5216](https://github.com/bitcoin/bitcoin/pull/5216)).\n-* [`BIP 111`](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki): `NODE_BLOOM` service bit added, and enforced for all peer versions as of **v0.13.0** ([PR #6579](https://github.com/bitcoin/bitcoin/pull/6579) and [PR #6641](https://github.com/bitcoin/bitcoin/pull/6641)).\n-* [`BIP 112`](https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki): The CHECKSEQUENCEVERIFY opcode has been implemented since **v0.12.1** ([PR #7524](https://github.com/bitcoin/bitcoin/pull/7524)) and has been activated since *block 419328*.\n-* [`BIP 113`](https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki): Median time past lock-time calculations have been implemented since **v0.12.1** ([PR #6566](https://github.com/bitcoin/bitcoin/pull/6566)) and have been activated since *block 419328*.\n-* [`BIP 125`](https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki): Opt-in full replace-by-fee signaling honoured in mempool and mining as of **v0.12.0** ([PR 6871](https://github.com/bitcoin/bitcoin/pull/6871)).\n-* [`BIP 130`](https://github.com/bitcoin/bips/blob/master/bip-0130.mediawiki): direct headers announcement is negotiated with peer versions `>=70012` as of **v0.12.0** ([PR 6494](https://github.com/bitcoin/bitcoin/pull/6494)).\n-* [`BIP 133`](https://github.com/bitcoin/bips/blob/master/bip-0133.mediawiki): feefilter messages are respected and sent for peer versions `>=70013` as of **v0.13.0** ([PR 7542](https://github.com/bitcoin/bitcoin/pull/7542)).\n-* [`BIP 152`](https://github.com/bitcoin/bips/blob/master/bip-0152.mediawiki): Compact block transfer and related optimizations are used as of **v0.13.0** ([PR 8068](https://github.com/bitcoin/bitcoin/pull/8068)).\n+* [`BIP 9`](https://github.com/litecoin/bips/blob/master/bip-0009.mediawiki): The changes allowing multiple soft-forks to be deployed in parallel have been implemented since **v0.12.1**  ([PR #7575](https://github.com/wangxinxi/litecoin/pull/7575))\n+* [`BIP 11`](https://github.com/litecoin/bips/blob/master/bip-0011.mediawiki): Multisig outputs are standard since **v0.6.0** ([PR #669](https://github.com/wangxinxi/litecoin/pull/669)).\n+* [`BIP 13`](https://github.com/litecoin/bips/blob/master/bip-0013.mediawiki): The address format for P2SH addresses has been implemented since **v0.6.0** ([PR #669](https://github.com/wangxinxi/litecoin/pull/669)).\n+* [`BIP 14`](https://github.com/litecoin/bips/blob/master/bip-0014.mediawiki): The subversion string is being used as User Agent since **v0.6.0** ([PR #669](https://github.com/wangxinxi/litecoin/pull/669)).\n+* [`BIP 16`](https://github.com/litecoin/bips/blob/master/bip-0016.mediawiki): The pay-to-script-hash evaluation rules have been implemented since **v0.6.0**, and took effect on *April 1st 2012* ([PR #748](https://github.com/wangxinxi/litecoin/pull/748)).\n+* [`BIP 21`](https://github.com/litecoin/bips/blob/master/bip-0021.mediawiki): The URI format for Litecoin payments has been implemented since **v0.6.0** ([PR #176](https://github.com/wangxinxi/litecoin/pull/176)).\n+* [`BIP 22`](https://github.com/litecoin/bips/blob/master/bip-0022.mediawiki): The 'getblocktemplate' (GBT) RPC protocol for mining has been implemented since **v0.7.0** ([PR #936](https://github.com/wangxinxi/litecoin/pull/936)).\n+* [`BIP 23`](https://github.com/litecoin/bips/blob/master/bip-0023.mediawiki): Some extensions to GBT have been implemented since **v0.10.0rc1**, including longpolling and block proposals ([PR #1816](https://github.com/wangxinxi/litecoin/pull/1816)).\n+* [`BIP 30`](https://github.com/litecoin/bips/blob/master/bip-0030.mediawiki): The evaluation rules to forbid creating new transactions with the same txid as previous not-fully-spent transactions were implemented since **v0.6.0**, and the rule took effect on *March 15th 2012* ([PR #915](https://github.com/wangxinxi/litecoin/pull/915)).\n+* [`BIP 31`](https://github.com/litecoin/bips/blob/master/bip-0031.mediawiki): The 'pong' protocol message (and the protocol version bump to 60001) has been implemented since **v0.6.1** ([PR #1081](https://github.com/wangxinxi/litecoin/pull/1081)).\n+* [`BIP 32`](https://github.com/litecoin/bips/blob/master/bip-0032.mediawiki): Hierarchical Deterministic Wallets has been implemented since **v0.13.0** ([PR #8035](https://github.com/wangxinxi/litecoin/pull/8035)).\n+* [`BIP 34`](https://github.com/litecoin/bips/blob/master/bip-0034.mediawiki): The rule that requires blocks to contain their height (number) in the coinbase input, and the introduction of version 2 blocks has been implemented since **v0.7.0**. The rule took effect for version 2 blocks as of *block 224413* (March 5th 2013), and version 1 blocks are no longer allowed since *block 227931* (March 25th 2013) ([PR #1526](https://github.com/wangxinxi/litecoin/pull/1526)).\n+* [`BIP 35`](https://github.com/litecoin/bips/blob/master/bip-0035.mediawiki): The 'mempool' protocol message (and the protocol version bump to 60002) has been implemented since **v0.7.0** ([PR #1641](https://github.com/wangxinxi/litecoin/pull/1641)).\n+* [`BIP 37`](https://github.com/litecoin/bips/blob/master/bip-0037.mediawiki): The bloom filtering for transaction relaying, partial merkle trees for blocks, and the protocol version bump to 70001 (enabling low-bandwidth SPV clients) has been implemented since **v0.8.0** ([PR #1795](https://github.com/wangxinxi/litecoin/pull/1795)).\n+* [`BIP 42`](https://github.com/litecoin/bips/blob/master/bip-0042.mediawiki): The bug that would have caused the subsidy schedule to resume after block 13440000 was fixed in **v0.9.2** ([PR #3842](https://github.com/wangxinxi/litecoin/pull/3842)).\n+* [`BIP 61`](https://github.com/litecoin/bips/blob/master/bip-0061.mediawiki): The 'reject' protocol message (and the protocol version bump to 70002) was added in **v0.9.0** ([PR #3185](https://github.com/wangxinxi/litecoin/pull/3185)).\n+* [`BIP 65`](https://github.com/litecoin/bips/blob/master/bip-0065.mediawiki): The CHECKLOCKTIMEVERIFY softfork was merged in **v0.12.0** ([PR #6351](https://github.com/wangxinxi/litecoin/pull/6351)), and backported to **v0.11.2** and **v0.10.4**. Mempool-only CLTV was added in [PR #6124](https://github.com/wangxinxi/litecoin/pull/6124).\n+* [`BIP 66`](https://github.com/litecoin/bips/blob/master/bip-0066.mediawiki): The strict DER rules and associated version 3 blocks have been implemented since **v0.10.0** ([PR #5713](https://github.com/wangxinxi/litecoin/pull/5713)).\n+* [`BIP 68`](https://github.com/litecoin/bips/blob/master/bip-0068.mediawiki): Sequence locks have been implemented as of **v0.12.1**  ([PR #7184](https://github.com/wangxinxi/litecoin/pull/7184)), and have been activated since *block 419328*.\n+* [`BIP 70`](https://github.com/litecoin/bips/blob/master/bip-0070.mediawiki) [`71`](https://github.com/litecoin/bips/blob/master/bip-0071.mediawiki) [`72`](https://github.com/litecoin/bips/blob/master/bip-0072.mediawiki): Payment Protocol support has been available in Litecoin Core GUI since **v0.9.0** ([PR #5216](https://github.com/wangxinxi/litecoin/pull/5216)).\n+* [`BIP 111`](https://github.com/litecoin/bips/blob/master/bip-0111.mediawiki): `NODE_BLOOM` service bit added, and enforced for all peer versions as of **v0.13.0** ([PR #6579](https://github.com/wangxinxi/litecoin/pull/6579) and [PR #6641](https://github.com/wangxinxi/litecoin/pull/6641)).\n+* [`BIP 112`](https://github.com/litecoin/bips/blob/master/bip-0112.mediawiki): The CHECKSEQUENCEVERIFY opcode has been implemented since **v0.12.1** ([PR #7524](https://github.com/wangxinxi/litecoin/pull/7524)) and has been activated since *block 419328*.\n+* [`BIP 113`](https://github.com/litecoin/bips/blob/master/bip-0113.mediawiki): Median time past lock-time calculations have been implemented since **v0.12.1** ([PR #6566](https://github.com/wangxinxi/litecoin/pull/6566)) and have been activated since *block 419328*.\n+* [`BIP 125`](https://github.com/litecoin/bips/blob/master/bip-0125.mediawiki): Opt-in full replace-by-fee signaling honoured in mempool and mining as of **v0.12.0** ([PR 6871](https://github.com/wangxinxi/litecoin/pull/6871)).\n+* [`BIP 130`](https://github.com/litecoin/bips/blob/master/bip-0130.mediawiki): direct headers announcement is negotiated with peer versions `>=70012` as of **v0.12.0** ([PR 6494](https://github.com/wangxinxi/litecoin/pull/6494)).\n+* [`BIP 133`](https://github.com/litecoin/bips/blob/master/bip-0133.mediawiki): feefilter messages are respected and sent for peer versions `>=70013` as of **v0.13.0** ([PR 7542](https://github.com/wangxinxi/litecoin/pull/7542)).\n+* [`BIP 152`](https://github.com/litecoin/bips/blob/master/bip-0152.mediawiki): Compact block transfer and related optimizations are used as of **v0.13.0** ([PR 8068](https://github.com/wangxinxi/litecoin/pull/8068))."
      },
      {
        "sha": "e1ba2932eb987edaf98a4bbb5ef72e694c8b267b",
        "filename": "doc/build-openbsd.md",
        "status": "modified",
        "additions": 16,
        "deletions": 16,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -2,7 +2,7 @@ OpenBSD build guide\n ======================\n (updated for OpenBSD 5.9)\n \n-This guide describes how to build bitcoind and command-line utilities on OpenBSD.\n+This guide describes how to build litecoind and command-line utilities on OpenBSD.\n \n As OpenBSD is most common as a server OS, we will not bother with the GUI.\n \n@@ -18,7 +18,7 @@ pkg_add automake # (select highest version, e.g. 1.15)\n pkg_add python # (select highest version, e.g. 3.5)\n ```\n \n-The default C++ compiler that comes with OpenBSD 5.9 is g++ 4.2. This version is old (from 2007), and is not able to compile the current version of Bitcoin Core, primarily as it has no C++11 support, but even before there were issues. So here we will be installing a newer compiler.\n+The default C++ compiler that comes with OpenBSD 5.9 is g++ 4.2. This version is old (from 2007), and is not able to compile the current version of Litecoin Core, primarily as it has no C++11 support, but even before there were issues. So here we will be installing a newer compiler.\n \n GCC\n -------\n@@ -35,16 +35,16 @@ This compiler will not overwrite the system compiler, it will be installed as `e\n \n Do not use `pkg_add boost`! The boost version installed thus is compiled using the `g++` compiler not `eg++`, which will result in a conflict between `/usr/local/lib/libestdc++.so.XX.0` and `/usr/lib/libstdc++.so.XX.0`, resulting in a test crash:\n \n-    test_bitcoin:/usr/lib/libstdc++.so.57.0: /usr/local/lib/libestdc++.so.17.0 : WARNING: symbol(_ZN11__gnu_debug17_S_debug_me ssagesE) size mismatch, relink your program\n+    test_litecoin:/usr/lib/libstdc++.so.57.0: /usr/local/lib/libestdc++.so.17.0 : WARNING: symbol(_ZN11__gnu_debug17_S_debug_me ssagesE) size mismatch, relink your program\n     ...\n     Segmentation fault (core dumped)\n \n-This makes it necessary to build boost, or at least the parts used by Bitcoin Core, manually:\n+This makes it necessary to build boost, or at least the parts used by Litecoin Core, manually:\n \n ```\n-# Pick some path to install boost to, here we create a directory within the bitcoin directory\n-BITCOIN_ROOT=$(pwd)\n-BOOST_PREFIX=\"${BITCOIN_ROOT}/boost\"\n+# Pick some path to install boost to, here we create a directory within the litecoin directory\n+LITECOIN_ROOT=$(pwd)\n+BOOST_PREFIX=\"${LITECOIN_ROOT}/boost\"\n mkdir -p $BOOST_PREFIX\n \n # Fetch the source and verify that it is not tampered with\n@@ -58,7 +58,7 @@ cd boost_1_61_0\n # Also here: https://gist.githubusercontent.com/laanwj/bf359281dc319b8ff2e1/raw/92250de8404b97bb99d72ab898f4a8cb35ae1ea3/patch-boost_test_impl_execution_monitor_ipp.patch\n patch -p0 < /usr/ports/devel/boost/patches/patch-boost_test_impl_execution_monitor_ipp\n \n-# Build w/ minimum configuration necessary for bitcoin\n+# Build w/ minimum configuration necessary for litecoin\n echo 'using gcc : : eg++ : <cxxflags>\"-fvisibility=hidden -fPIC\" <linkflags>\"\" <archiver>\"ar\" <striper>\"strip\"  <ranlib>\"ranlib\" <rc>\"\" : ;' > user-config.jam\n config_opts=\"runtime-link=shared threadapi=pthread threading=multi link=static variant=release --layout=tagged --build-type=complete --user-config=user-config.jam -sNO_BZIP2=1\"\n ./bootstrap.sh --without-icu --with-libraries=chrono,filesystem,program_options,system,thread,test\n@@ -74,9 +74,9 @@ See \"Berkeley DB\" in [build_unix.md](build_unix.md) for instructions on how to b\n You cannot use the BerkeleyDB library from ports, for the same reason as boost above (g++/libstd++ incompatibility).\n \n ```bash\n-# Pick some path to install BDB to, here we create a directory within the bitcoin directory\n-BITCOIN_ROOT=$(pwd)\n-BDB_PREFIX=\"${BITCOIN_ROOT}/db4\"\n+# Pick some path to install BDB to, here we create a directory within the litecoin directory\n+LITECOIN_ROOT=$(pwd)\n+BDB_PREFIX=\"${LITECOIN_ROOT}/db4\"\n mkdir -p $BDB_PREFIX\n \n # Fetch the source and verify that it is not tampered with\n@@ -99,7 +99,7 @@ The standard ulimit restrictions in OpenBSD are very strict:\n     data(kbytes)         1572864\n \n This is, unfortunately, no longer enough to compile some `.cpp` files in the project,\n-at least with gcc 4.9.3 (see issue https://github.com/bitcoin/bitcoin/issues/6658).\n+at least with gcc 4.9.3 (see issue https://github.com/wangxinxi/litecoin/issues/6658).\n If your user is in the `staff` group the limit can be raised with:\n \n     ulimit -d 3000000\n@@ -108,7 +108,7 @@ The change will only affect the current shell and processes spawned by it. To\n make the change system-wide, change `datasize-cur` and `datasize-max` in\n `/etc/login.conf`, and reboot.\n \n-### Building Bitcoin Core\n+### Building Litecoin Core\n \n **Important**: use `gmake`, not `make`. The non-GNU `make` will exit with a horrible error.\n \n@@ -161,9 +161,9 @@ gmake\n However, this does not appear to work. Compilation succeeds, but link fails\n with many 'local symbol discarded' errors:\n \n-    local symbol 150: discarded in section `.text._ZN10tinyformat6detail14FormatIterator6finishEv' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n-    local symbol 151: discarded in section `.text._ZN10tinyformat6detail14FormatIterator21streamStateFromFormatERSoRjPKcii' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n-    local symbol 152: discarded in section `.text._ZN10tinyformat6detail12convertToIntIA13_cLb0EE6invokeERA13_Kc' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n+    local symbol 150: discarded in section `.text._ZN10tinyformat6detail14FormatIterator6finishEv' from liblitecoin_util.a(liblitecoin_util_a-random.o)\n+    local symbol 151: discarded in section `.text._ZN10tinyformat6detail14FormatIterator21streamStateFromFormatERSoRjPKcii' from liblitecoin_util.a(liblitecoin_util_a-random.o)\n+    local symbol 152: discarded in section `.text._ZN10tinyformat6detail12convertToIntIA13_cLb0EE6invokeERA13_Kc' from liblitecoin_util.a(liblitecoin_util_a-random.o)\n \n According to similar reported errors this is a binutils (ld) issue in 2.15, the\n version installed by OpenBSD 5.7:"
      },
      {
        "sha": "e6cdc82371505352e5178067a1e2057e2ab02c3b",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -20,17 +20,17 @@ Dependencies\n \n NOTE: Building with Qt4 is still supported, however, could result in a broken UI. Building with Qt5 is recommended.\n \n-Build Bitcoin Core\n+Build Litecoin Core\n ------------------------\n \n-1. Clone the bitcoin source code and cd into `bitcoin`\n+1. Clone the litecoin source code and cd into `litecoin`\n \n-        git clone https://github.com/bitcoin/bitcoin\n-        cd bitcoin\n+        git clone https://github.com/wangxinxi/litecoin\n+        cd litecoin\n \n-2.  Build bitcoin-core:\n+2.  Build litecoin-core:\n \n-    Configure and build the headless bitcoin binaries as well as the GUI (if Qt is found).\n+    Configure and build the headless litecoin binaries as well as the GUI (if Qt is found).\n \n     You can disable the GUI build by passing `--without-gui` to configure.\n \n@@ -49,37 +49,37 @@ Build Bitcoin Core\n Running\n -------\n \n-Bitcoin Core is now available at `./src/bitcoind`\n+Litecoin Core is now available at `./src/litecoind`\n \n Before running, it's recommended you create an RPC configuration file.\n \n-    echo -e \"rpcuser=bitcoinrpc\\nrpcpassword=$(xxd -l 16 -p /dev/urandom)\" > \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n+    echo -e \"rpcuser=litecoinrpc\\nrpcpassword=$(xxd -l 16 -p /dev/urandom)\" > \"/Users/${USER}/Library/Application Support/Litecoin/litecoin.conf\"\n \n-    chmod 600 \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n+    chmod 600 \"/Users/${USER}/Library/Application Support/Litecoin/litecoin.conf\"\n \n-The first time you run bitcoind, it will start downloading the blockchain. This process could take several hours.\n+The first time you run litecoind, it will start downloading the blockchain. This process could take several hours.\n \n You can monitor the download process by looking at the debug.log file:\n \n-    tail -f $HOME/Library/Application\\ Support/Bitcoin/debug.log\n+    tail -f $HOME/Library/Application\\ Support/Litecoin/debug.log\n \n Other commands:\n -------\n \n-    ./src/bitcoind -daemon # Starts the bitcoin daemon.\n-    ./src/bitcoin-cli --help # Outputs a list of command-line options.\n-    ./src/bitcoin-cli help # Outputs a list of RPC commands when the daemon is running.\n+    ./src/litecoind -daemon # Starts the litecoin daemon.\n+    ./src/litecoin-cli --help # Outputs a list of command-line options.\n+    ./src/litecoin-cli help # Outputs a list of RPC commands when the daemon is running.\n \n Using Qt Creator as IDE\n ------------------------\n-You can use Qt Creator as an IDE, for bitcoin development.\n+You can use Qt Creator as an IDE, for litecoin development.\n Download and install the community edition of [Qt Creator](https://www.qt.io/download/).\n Uncheck everything except Qt Creator during the installation process.\n \n 1. Make sure you installed everything through Homebrew mentioned above\n 2. Do a proper ./configure --enable-debug\n 3. In Qt Creator do \"New Project\" -> Import Project -> Import Existing Project\n-4. Enter \"bitcoin-qt\" as project name, enter src/qt as location\n+4. Enter \"litecoin-qt\" as project name, enter src/qt as location\n 5. Leave the file selection as it is\n 6. Confirm the \"summary page\"\n 7. In the \"Projects\" tab select \"Manage Kits...\"\n@@ -92,4 +92,4 @@ Notes\n \n * Tested on OS X 10.7 through 10.11 on 64-bit Intel processors only.\n \n-* Building with downloaded Qt binaries is not officially supported. See the notes in [#7714](https://github.com/bitcoin/bitcoin/issues/7714)\n+* Building with downloaded Qt binaries is not officially supported. See the notes in [#7714](https://github.com/wangxinxi/litecoin/issues/7714)"
      },
      {
        "sha": "85bed2bc989b7f6d697b56e70746ec2c2ae0d1b3",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 24,
        "deletions": 24,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,12 +1,12 @@\n UNIX BUILD NOTES\n ====================\n-Some notes on how to build Bitcoin Core in Unix.\n+Some notes on how to build Litecoin Core in Unix.\n \n (for OpenBSD specific instructions, see [build-openbsd.md](build-openbsd.md))\n \n Note\n ---------------------\n-Always use absolute paths to configure and compile bitcoin and the dependencies,\n+Always use absolute paths to configure and compile litecoin and the dependencies,\n for example, when specifying the path of the dependency:\n \n \t../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX\n@@ -24,7 +24,7 @@ make\n make install # optional\n ```\n \n-This will build bitcoin-qt as well if the dependencies are met.\n+This will build litecoin-qt as well if the dependencies are met.\n \n Dependencies\n ---------------------\n@@ -55,7 +55,7 @@ Memory Requirements\n --------------------\n \n C++ compilers are memory-hungry. It is recommended to have at least 1.5 GB of\n-memory available when compiling Bitcoin Core. On systems with less, gcc can be\n+memory available when compiling Litecoin Core. On systems with less, gcc can be\n tuned to conserve memory with additional CXXFLAGS:\n \n \n@@ -79,10 +79,10 @@ install necessary parts of boost:\n \n         sudo apt-get install libboost-all-dev\n \n-BerkeleyDB is required for the wallet. db4.8 packages are available [here](https://launchpad.net/~bitcoin/+archive/bitcoin).\n+BerkeleyDB is required for the wallet. db4.8 packages are available [here](https://launchpad.net/~litecoin/+archive/litecoin).\n You can add the repository and install using the following commands:\n \n-    sudo add-apt-repository ppa:bitcoin/bitcoin\n+    sudo add-apt-repository ppa:litecoin/litecoin\n     sudo apt-get update\n     sudo apt-get install libdb4.8-dev libdb4.8++-dev\n \n@@ -91,7 +91,7 @@ BerkeleyDB 5.1 or later, which break binary wallet compatibility with the distri\n are based on BerkeleyDB 4.8. If you do not care about wallet compatibility,\n pass `--with-incompatible-bdb` to configure.\n \n-See the section \"Disable-wallet mode\" to build Bitcoin Core without wallet.\n+See the section \"Disable-wallet mode\" to build Litecoin Core without wallet.\n \n Optional:\n \n@@ -104,7 +104,7 @@ ZMQ dependencies:\n Dependencies for the GUI: Ubuntu & Debian\n -----------------------------------------\n \n-If you want to build Bitcoin-Qt, make sure that the required packages for Qt development\n+If you want to build Litecoin-Qt, make sure that the required packages for Qt development\n are installed. Either Qt 5 or Qt 4 are necessary to build the GUI.\n If both Qt 4 and Qt 5 are installed, Qt 5 will be used. Pass `--with-gui=qt4` to configure to choose Qt4.\n To build without GUI pass `--without-gui`.\n@@ -121,7 +121,7 @@ libqrencode (optional) can be installed with:\n \n     sudo apt-get install libqrencode-dev\n \n-Once these are installed, they will be found by configure and a bitcoin-qt executable will be\n+Once these are installed, they will be found by configure and a litecoin-qt executable will be\n built by default.\n \n Dependency Build Instructions: Fedora\n@@ -144,7 +144,7 @@ libqrencode (optional) can be installed with:\n \n Notes\n -----\n-The release is built with GCC and then \"strip bitcoind\" to strip the debug\n+The release is built with GCC and then \"strip litecoind\" to strip the debug\n symbols, which reduces the executable size by about 90%.\n \n \n@@ -165,10 +165,10 @@ Berkeley DB\n It is recommended to use Berkeley DB 4.8. If you have to build it yourself:\n \n ```bash\n-BITCOIN_ROOT=$(pwd)\n+LITECOIN_ROOT=$(pwd)\n \n-# Pick some path to install BDB to, here we create a directory within the bitcoin directory\n-BDB_PREFIX=\"${BITCOIN_ROOT}/db4\"\n+# Pick some path to install BDB to, here we create a directory within the litecoin directory\n+BDB_PREFIX=\"${LITECOIN_ROOT}/db4\"\n mkdir -p $BDB_PREFIX\n \n # Fetch the source and verify that it is not tampered with\n@@ -183,8 +183,8 @@ cd db-4.8.30.NC/build_unix/\n ../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX\n make install\n \n-# Configure Bitcoin Core to use our own-built instance of BDB\n-cd $BITCOIN_ROOT\n+# Configure Litecoin Core to use our own-built instance of BDB\n+cd $LITECOIN_ROOT\n ./autogen.sh\n ./configure LDFLAGS=\"-L${BDB_PREFIX}/lib/\" CPPFLAGS=\"-I${BDB_PREFIX}/include/\" # (other args...)\n ```\n@@ -202,7 +202,7 @@ If you need to build Boost yourself:\n \n Security\n --------\n-To help make your bitcoin installation more secure by making certain attacks impossible to\n+To help make your litecoin installation more secure by making certain attacks impossible to\n exploit even if a vulnerability is found, binaries are hardened by default.\n This can be disabled with:\n \n@@ -226,7 +226,7 @@ Hardening enables the following features:\n \n     To test that you have built PIE executable, install scanelf, part of paxutils, and use:\n \n-    \tscanelf -e ./bitcoin\n+    \tscanelf -e ./litecoin\n \n     The output should contain:\n \n@@ -235,13 +235,13 @@ Hardening enables the following features:\n \n * Non-executable Stack\n     If the stack is executable then trivial stack based buffer overflow exploits are possible if\n-    vulnerable buffers are found. By default, bitcoin should be built with a non-executable stack\n+    vulnerable buffers are found. By default, litecoin should be built with a non-executable stack\n     but if one of the libraries it uses asks for an executable stack or someone makes a mistake\n     and uses a compiler extension which requires an executable stack, it will silently build an\n     executable without the non-executable stack protection.\n \n     To verify that the stack is non-executable after compiling use:\n-    `scanelf -e ./bitcoin`\n+    `scanelf -e ./litecoin`\n \n     the output should contain:\n \tSTK/REL/PTL\n@@ -251,7 +251,7 @@ Hardening enables the following features:\n \n Disable-wallet mode\n --------------------\n-When the intention is to run only a P2P node without a wallet, bitcoin may be compiled in\n+When the intention is to run only a P2P node without a wallet, litecoin may be compiled in\n disable-wallet mode with:\n \n     ./configure --disable-wallet\n@@ -273,17 +273,17 @@ Setup and Build Example: Arch Linux\n This example lists the steps necessary to setup and build a command line only, non-wallet distribution of the latest changes on Arch Linux:\n \n     pacman -S git base-devel boost libevent python\n-    git clone https://github.com/bitcoin/bitcoin.git\n-    cd bitcoin/\n+    git clone https://github.com/wangxinxi/litecoin.git\n+    cd litecoin/\n     ./autogen.sh\n     ./configure --disable-wallet --without-gui --without-miniupnpc\n     make check\n \n Note:\n Enabling wallet support requires either compiling against a Berkeley DB newer than 4.8 (package `db`) using `--with-incompatible-bdb`,\n or building and depending on a local version of Berkeley DB 4.8. The readily available Arch Linux packages are currently built using\n-`--with-incompatible-bdb` according to the [PKGBUILD](https://projects.archlinux.org/svntogit/community.git/tree/bitcoin/trunk/PKGBUILD).\n-As mentioned above, when maintaining portability of the wallet between the standard Bitcoin Core distributions and independently built\n+`--with-incompatible-bdb` according to the [PKGBUILD](https://projects.archlinux.org/svntogit/community.git/tree/litecoin/trunk/PKGBUILD).\n+As mentioned above, when maintaining portability of the wallet between the standard Litecoin Core distributions and independently built\n node software is desired, Berkeley DB 4.8 must be used.\n \n "
      },
      {
        "sha": "b524170ff558bd87867ba55c7a470f330befa524",
        "filename": "doc/build-windows.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/build-windows.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/build-windows.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-windows.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,7 +1,7 @@\n WINDOWS BUILD NOTES\n ====================\n \n-Some notes on how to build Bitcoin Core for Windows.\n+Some notes on how to build Litecoin Core for Windows.\n \n Most developers use cross-compilation from Ubuntu to build executables for\n Windows. This is also used to build the release binaries."
      },
      {
        "sha": "2269d2c66cb67a7ce80b0e2ba1531f34526dccd5",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -118,7 +118,7 @@ to see it.\n \n **testnet and regtest modes**\n \n-Run with the -testnet option to run with \"play bitcoins\" on the test network, if you\n+Run with the -testnet option to run with \"play litecoins\" on the test network, if you\n are testing multi-machine code that needs to operate across the internet.\n \n If you are testing something that can run on one machine, run with the -regtest option.\n@@ -127,7 +127,7 @@ that run in -regtest mode.\n \n **DEBUG_LOCKORDER**\n \n-Bitcoin Core is a multithreaded application, and deadlocks or other multithreading bugs\n+Litecoin Core is a multithreaded application, and deadlocks or other multithreading bugs\n can be very difficult to track down. Compiling with -DDEBUG_LOCKORDER (configure\n CXXFLAGS=\"-DDEBUG_LOCKORDER -g\") inserts run-time checks to keep track of which locks\n are held, and adds warnings to the debug.log file if inconsistencies are detected.\n@@ -176,7 +176,7 @@ Threads\n \n - ThreadRPCServer : Remote procedure call handler, listens on port 8332 for connections and services them.\n \n-- BitcoinMiner : Generates bitcoins (if wallet is enabled).\n+- LitecoinMiner : Generates litecoins (if wallet is enabled).\n \n - Shutdown : Does an orderly shutdown of everything.\n \n@@ -186,7 +186,7 @@ Ignoring IDE/editor files\n In closed-source environments in which everyone uses the same IDE it is common\n to add temporary files it produces to the project-wide `.gitignore` file.\n \n-However, in open source software such as Bitcoin Core, where everyone uses\n+However, in open source software such as Litecoin Core, where everyone uses\n their own editors/IDE/tools, it is less common. Only you know what files your\n editor produces and this may change from version to version. The canonical way\n to do this is thus to create your local gitignore. Add this to `~/.gitconfig`:\n@@ -216,9 +216,9 @@ Development guidelines\n ============================\n \n A few non-style-related recommendations for developers, as well as points to\n-pay attention to for reviewers of Bitcoin Core code.\n+pay attention to for reviewers of Litecoin Core code.\n \n-General Bitcoin Core\n+General Litecoin Core\n ----------------------\n \n - New features should be exposed on RPC first, then can be made available in the GUI\n@@ -328,7 +328,7 @@ Strings and formatting\n \n - For `strprintf`, `LogPrint`, `LogPrintf` formatting characters don't need size specifiers\n \n-  - *Rationale*: Bitcoin Core uses tinyformat, which is type safe. Leave them out to avoid confusion\n+  - *Rationale*: Litecoin Core uses tinyformat, which is type safe. Leave them out to avoid confusion\n \n Threads and synchronization\n ----------------------------\n@@ -423,7 +423,7 @@ Git and github tips\n \n         [remote \"upstream-pull\"]\n                 fetch = +refs/pull/*:refs/remotes/upstream-pull/*\n-                url = git@github.com:bitcoin/bitcoin.git\n+                url = git@github.com:litecoin/litecoin.git\n \n   This will add an `upstream-pull` remote to your git repository, which can be fetched using `git fetch --all`\n   or `git fetch upstream-pull`. Afterwards, you can use `upstream-pull/NUMBER/head` in arguments to `git show`,"
      },
      {
        "sha": "dc0124066b51b1248fba1c967d4a30f4530b7925",
        "filename": "doc/dnsseed-policy.md",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/dnsseed-policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/dnsseed-policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dnsseed-policy.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,12 +1,12 @@\n Expectations for DNS Seed operators\n ====================================\n \n-Bitcoin Core attempts to minimize the level of trust in DNS seeds,\n+Litecoin Core attempts to minimize the level of trust in DNS seeds,\n but DNS seeds still pose a small amount of risk for the network.\n As such, DNS seeds must be run by entities which have some minimum\n-level of trust within the Bitcoin community.\n+level of trust within the Litecoin community.\n \n-Other implementations of Bitcoin software may also use the same\n+Other implementations of Litecoin software may also use the same\n seeds and may be more exposed. In light of this exposure, this\n document establishes some basic expectations for operating dnsseeds.\n \n@@ -16,7 +16,7 @@ and not sell or transfer control of the DNS seed. Any hosting services\n contracted by the operator are equally expected to uphold these expectations.\n \n 1. The DNS seed results must consist exclusively of fairly selected and\n-functioning Bitcoin nodes from the public network to the best of the\n+functioning Litecoin nodes from the public network to the best of the\n operator's understanding and capability.\n \n 2. For the avoidance of doubt, the results may be randomized but must not\n@@ -26,7 +26,7 @@ urgent technical necessity and disclosed.\n 3. The results may not be served with a DNS TTL of less than one minute.\n \n 4. Any logging of DNS queries should be only that which is necessary\n-for the operation of the service or urgent health of the Bitcoin\n+for the operation of the service or urgent health of the Litecoin\n network and must not be retained longer than necessary nor disclosed\n to any third party.\n \n@@ -42,13 +42,13 @@ details of their operating practices.\n related to the DNS seed operation.\n \n If these expectations cannot be satisfied the operator should\n-discontinue providing services and contact the active Bitcoin\n+discontinue providing services and contact the active Litecoin\n Core development team as well as posting on\n-[bitcoin-dev](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev).\n+[litecoin-dev](https://lists.linuxfoundation.org/mailman/listinfo/litecoin-dev).\n \n Behavior outside of these expectations may be reasonable in some\n situations but should be discussed in public in advance.\n \n See also\n ----------\n-- [bitcoin-seeder](https://github.com/sipa/bitcoin-seeder) is a reference implementation of a DNS seed.\n+- [litecoin-seeder](https://github.com/sipa/litecoin-seeder) is a reference implementation of a DNS seed."
      },
      {
        "sha": "b0083e0cf33e27f4d3e4e2b849486e5de940a48b",
        "filename": "doc/files.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,14 +1,14 @@\n \n * banlist.dat: stores the IPs/Subnets of banned nodes\n-* bitcoin.conf: contains configuration settings for bitcoind or bitcoin-qt\n-* bitcoind.pid: stores the process id of bitcoind while running\n+* litecoin.conf: contains configuration settings for litecoind or litecoin-qt\n+* litecoind.pid: stores the process id of litecoind while running\n * blocks/blk000??.dat: block data (custom, 128 MiB per file); since 0.8.0\n * blocks/rev000??.dat; block undo data (custom); since 0.8.0 (format changed since pre-0.8)\n * blocks/index/*; block index (LevelDB); since 0.8.0\n * chainstate/*; block chain state database (LevelDB); since 0.8.0\n * database/*: BDB database environment; only used for wallet since 0.8.0\n * db.log: wallet database log file\n-* debug.log: contains debug information and general logging generated by bitcoind or bitcoin-qt\n+* debug.log: contains debug information and general logging generated by litecoind or litecoin-qt\n * fee_estimates.dat: stores statistics used to estimate minimum transaction fees and priorities required for confirmation; since 0.10.0\n * peers.dat: peer IP address database (custom format); since 0.7.0\n * wallet.dat: personal wallet (BDB) with keys and transactions"
      },
      {
        "sha": "895b1211ca918f45e79e3ddfa380667b4d9eff15",
        "filename": "doc/gitian-building.md",
        "status": "modified",
        "additions": 28,
        "deletions": 28,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,17 +1,17 @@\n Gitian building\n ================\n \n-*Setup instructions for a Gitian build of Bitcoin Core using a Debian VM or physical system.*\n+*Setup instructions for a Gitian build of Litecoin Core using a Debian VM or physical system.*\n \n-Gitian is the deterministic build process that is used to build the Bitcoin\n+Gitian is the deterministic build process that is used to build the Litecoin\n Core executables. It provides a way to be reasonably sure that the\n executables are really built from the source on GitHub. It also makes sure that\n the same, tested dependencies are used and statically built into the executable.\n \n Multiple developers build the source code by following a specific descriptor\n (\"recipe\"), cryptographically sign the result, and upload the resulting signature.\n These results are compared and only if they match, the build is accepted and uploaded\n-to bitcoin.org.\n+to litecoin.org.\n \n More independent Gitian builders are needed, which is why this guide exists.\n It is preferred you follow these steps yourself instead of using someone else's\n@@ -26,7 +26,7 @@ Table of Contents\n - [Installing Gitian](#installing-gitian)\n - [Setting up the Gitian image](#setting-up-the-gitian-image)\n - [Getting and building the inputs](#getting-and-building-the-inputs)\n-- [Building Bitcoin Core](#building-bitcoin-core)\n+- [Building Litecoin Core](#building-litecoin-core)\n - [Building an alternative repository](#building-an-alternative-repository)\n - [Signing externally](#signing-externally)\n - [Uploading signatures](#uploading-signatures)\n@@ -41,7 +41,7 @@ Debian Linux was chosen as the host distribution because it has a lightweight in\n Any kind of virtualization can be used, for example:\n - [VirtualBox](https://www.virtualbox.org/) (covered by this guide)\n - [KVM](http://www.linux-kvm.org/page/Main_Page)\n-- [LXC](https://linuxcontainers.org/), see also [Gitian host docker container](https://github.com/gdm85/tenku/tree/master/docker/gitian-bitcoin-host/README.md).\n+- [LXC](https://linuxcontainers.org/), see also [Gitian host docker container](https://github.com/gdm85/tenku/tree/master/docker/gitian-litecoin-host/README.md).\n \n You can also install Gitian on actual hardware instead of using virtualization.\n \n@@ -305,12 +305,12 @@ cd ..\n \n **Note**: When sudo asks for a password, enter the password for the user *debian* not for *root*.\n \n-Clone the git repositories for bitcoin and Gitian.\n+Clone the git repositories for litecoin and Gitian.\n \n ```bash\n git clone https://github.com/devrandom/gitian-builder.git\n-git clone https://github.com/bitcoin/bitcoin\n-git clone https://github.com/bitcoin-core/gitian.sigs.git\n+git clone https://github.com/wangxinxi/litecoin\n+git clone https://github.com/litecoin-core/gitian.sigs.git\n ```\n \n Setting up the Gitian image\n@@ -337,16 +337,16 @@ Getting and building the inputs\n --------------------------------\n \n Follow the instructions in [doc/release-process.md](release-process.md#fetch-and-build-inputs-first-time-or-when-dependency-versions-change)\n-in the bitcoin repository under 'Fetch and build inputs' to install sources which require\n+in the litecoin repository under 'Fetch and build inputs' to install sources which require\n manual intervention. Also optionally follow the next step: 'Seed the Gitian sources cache\n and offline git repositories' which will fetch the remaining files required for building\n offline.\n \n-Building Bitcoin Core\n+Building Litecoin Core\n ----------------\n \n-To build Bitcoin Core (for Linux, OS X and Windows) just follow the steps under 'perform\n-Gitian builds' in [doc/release-process.md](release-process.md#perform-gitian-builds) in the bitcoin repository.\n+To build Litecoin Core (for Linux, OS X and Windows) just follow the steps under 'perform\n+Gitian builds' in [doc/release-process.md](release-process.md#perform-gitian-builds) in the litecoin repository.\n \n This may take some time as it will build all the dependencies needed for each descriptor.\n These dependencies will be cached after a successful build to avoid rebuilding them when possible.\n@@ -360,12 +360,12 @@ tail -f var/build.log\n \n Output from `gbuild` will look something like\n \n-    Initialized empty Git repository in /home/debian/gitian-builder/inputs/bitcoin/.git/\n+    Initialized empty Git repository in /home/debian/gitian-builder/inputs/litecoin/.git/\n     remote: Counting objects: 57959, done.\n     remote: Total 57959 (delta 0), reused 0 (delta 0), pack-reused 57958\n     Receiving objects: 100% (57959/57959), 53.76 MiB | 484.00 KiB/s, done.\n     Resolving deltas: 100% (41590/41590), done.\n-    From https://github.com/bitcoin/bitcoin\n+    From https://github.com/wangxinxi/litecoin\n     ... (new tags, new branch etc)\n     --- Building for trusty amd64 ---\n     Stopping target if it is up\n@@ -391,18 +391,18 @@ and inputs.\n \n For example:\n ```bash\n-URL=https://github.com/laanwj/bitcoin.git\n+URL=https://github.com/laanwj/litecoin.git\n COMMIT=2014_03_windows_unicode_path\n-./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n+./bin/gbuild --commit litecoin=${COMMIT} --url litecoin=${URL} ../litecoin/contrib/gitian-descriptors/gitian-linux.yml\n+./bin/gbuild --commit litecoin=${COMMIT} --url litecoin=${URL} ../litecoin/contrib/gitian-descriptors/gitian-win.yml\n+./bin/gbuild --commit litecoin=${COMMIT} --url litecoin=${URL} ../litecoin/contrib/gitian-descriptors/gitian-osx.yml\n ```\n \n Building fully offline\n -----------------------\n \n For building fully offline including attaching signatures to unsigned builds, the detached-sigs repository\n-and the bitcoin git repository with the desired tag must both be available locally, and then gbuild must be\n+and the litecoin git repository with the desired tag must both be available locally, and then gbuild must be\n told where to find them. It also requires an apt-cacher-ng which is fully-populated but set to offline mode, or\n manually disabling gitian-builder's use of apt-get to update the VM build environment.\n \n@@ -421,7 +421,7 @@ cd /path/to/gitian-builder\n LXC_ARCH=amd64 LXC_SUITE=trusty on-target -u root apt-get update\n LXC_ARCH=amd64 LXC_SUITE=trusty on-target -u root \\\n   -e DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \\\n-  $( sed -ne '/^packages:/,/[^-] .*/ {/^- .*/{s/\"//g;s/- //;p}}' ../bitcoin/contrib/gitian-descriptors/*|sort|uniq )\n+  $( sed -ne '/^packages:/,/[^-] .*/ {/^- .*/{s/\"//g;s/- //;p}}' ../litecoin/contrib/gitian-descriptors/*|sort|uniq )\n LXC_ARCH=amd64 LXC_SUITE=trusty on-target -u root apt-get -q -y purge grub\n LXC_ARCH=amd64 LXC_SUITE=trusty on-target -u root -e DEBIAN_FRONTEND=noninteractive apt-get -y dist-upgrade\n ```\n@@ -441,12 +441,12 @@ Then when building, override the remote URLs that gbuild would otherwise pull fr\n ```bash\n \n cd /some/root/path/\n-git clone https://github.com/bitcoin-core/bitcoin-detached-sigs.git\n+git clone https://github.com/litecoin-core/litecoin-detached-sigs.git\n \n-BTCPATH=/some/root/path/bitcoin\n-SIGPATH=/some/root/path/bitcoin-detached-sigs\n+BTCPATH=/some/root/path/litecoin\n+SIGPATH=/some/root/path/litecoin-detached-sigs\n \n-./bin/gbuild --url bitcoin=${BTCPATH},signature=${SIGPATH} ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n+./bin/gbuild --url litecoin=${BTCPATH},signature=${SIGPATH} ../litecoin/contrib/gitian-descriptors/gitian-win-signer.yml\n ```\n \n Signing externally\n@@ -461,9 +461,9 @@ When you execute `gsign` you will get an error from GPG, which can be ignored. C\n in `gitian.sigs` to your signing machine and do\n \n ```bash\n-    gpg --detach-sign ${VERSION}-linux/${SIGNER}/bitcoin-linux-build.assert\n-    gpg --detach-sign ${VERSION}-win/${SIGNER}/bitcoin-win-build.assert\n-    gpg --detach-sign ${VERSION}-osx-unsigned/${SIGNER}/bitcoin-osx-build.assert\n+    gpg --detach-sign ${VERSION}-linux/${SIGNER}/litecoin-linux-build.assert\n+    gpg --detach-sign ${VERSION}-win/${SIGNER}/litecoin-win-build.assert\n+    gpg --detach-sign ${VERSION}-osx-unsigned/${SIGNER}/litecoin-osx-build.assert\n ```\n \n This will create the `.sig` files that can be committed together with the `.assert` files to assert your\n@@ -473,5 +473,5 @@ Uploading signatures\n ---------------------\n \n After building and signing you can push your signatures (both the `.assert` and `.assert.sig` files) to the\n-[bitcoin-core/gitian.sigs](https://github.com/bitcoin-core/gitian.sigs/) repository, or if that's not possible create a pull\n+[litecoin-core/gitian.sigs](https://github.com/litecoin-core/gitian.sigs/) repository, or if that's not possible create a pull\n request. You can also mail the files to Wladimir (laanwj@gmail.com) and he will commit them."
      },
      {
        "sha": "aac441d49f87c1cef51b31144ee23a0657dc46c0",
        "filename": "doc/init.md",
        "status": "modified",
        "additions": 41,
        "deletions": 41,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/init.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/init.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/init.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,50 +1,50 @@\n-Sample init scripts and service configuration for bitcoind\n+Sample init scripts and service configuration for litecoind\n ==========================================================\n \n Sample scripts and configuration files for systemd, Upstart and OpenRC\n can be found in the contrib/init folder.\n \n-    contrib/init/bitcoind.service:    systemd service unit configuration\n-    contrib/init/bitcoind.openrc:     OpenRC compatible SysV style init script\n-    contrib/init/bitcoind.openrcconf: OpenRC conf.d file\n-    contrib/init/bitcoind.conf:       Upstart service configuration file\n-    contrib/init/bitcoind.init:       CentOS compatible SysV style init script\n+    contrib/init/litecoind.service:    systemd service unit configuration\n+    contrib/init/litecoind.openrc:     OpenRC compatible SysV style init script\n+    contrib/init/litecoind.openrcconf: OpenRC conf.d file\n+    contrib/init/litecoind.conf:       Upstart service configuration file\n+    contrib/init/litecoind.init:       CentOS compatible SysV style init script\n \n 1. Service User\n ---------------------------------\n \n-All three Linux startup configurations assume the existence of a \"bitcoin\" user\n+All three Linux startup configurations assume the existence of a \"litecoin\" user\n and group.  They must be created before attempting to use these scripts.\n-The OS X configuration assumes bitcoind will be set up for the current user.\n+The OS X configuration assumes litecoind will be set up for the current user.\n \n 2. Configuration\n ---------------------------------\n \n-At a bare minimum, bitcoind requires that the rpcpassword setting be set\n+At a bare minimum, litecoind requires that the rpcpassword setting be set\n when running as a daemon.  If the configuration file does not exist or this\n-setting is not set, bitcoind will shutdown promptly after startup.\n+setting is not set, litecoind will shutdown promptly after startup.\n \n This password does not have to be remembered or typed as it is mostly used\n-as a fixed token that bitcoind and client programs read from the configuration\n+as a fixed token that litecoind and client programs read from the configuration\n file, however it is recommended that a strong and secure password be used\n as this password is security critical to securing the wallet should the\n wallet be enabled.\n \n-If bitcoind is run with the \"-server\" flag (set by default), and no rpcpassword is set,\n+If litecoind is run with the \"-server\" flag (set by default), and no rpcpassword is set,\n it will use a special cookie file for authentication. The cookie is generated with random\n content when the daemon starts, and deleted when it exits. Read access to this file\n controls who can access it through RPC.\n \n By default the cookie is stored in the data directory, but it's location can be overridden\n with the option '-rpccookiefile'.\n \n-This allows for running bitcoind without having to do any manual configuration.\n+This allows for running litecoind without having to do any manual configuration.\n \n `conf`, `pid`, and `wallet` accept relative paths which are interpreted as\n relative to the data directory. `wallet` *only* supports relative paths.\n \n For an example configuration file that describes the configuration settings,\n-see `contrib/debian/examples/bitcoin.conf`.\n+see `contrib/debian/examples/litecoin.conf`.\n \n 3. Paths\n ---------------------------------\n@@ -53,24 +53,24 @@ see `contrib/debian/examples/bitcoin.conf`.\n \n All three configurations assume several paths that might need to be adjusted.\n \n-Binary:              `/usr/bin/bitcoind`  \n-Configuration file:  `/etc/bitcoin/bitcoin.conf`  \n-Data directory:      `/var/lib/bitcoind`  \n-PID file:            `/var/run/bitcoind/bitcoind.pid` (OpenRC and Upstart) or `/var/lib/bitcoind/bitcoind.pid` (systemd)  \n-Lock file:           `/var/lock/subsys/bitcoind` (CentOS)  \n+Binary:              `/usr/bin/litecoind`  \n+Configuration file:  `/etc/litecoin/litecoin.conf`  \n+Data directory:      `/var/lib/litecoind`  \n+PID file:            `/var/run/litecoind/litecoind.pid` (OpenRC and Upstart) or `/var/lib/litecoind/litecoind.pid` (systemd)  \n+Lock file:           `/var/lock/subsys/litecoind` (CentOS)  \n \n The configuration file, PID directory (if applicable) and data directory\n-should all be owned by the bitcoin user and group.  It is advised for security\n+should all be owned by the litecoin user and group.  It is advised for security\n reasons to make the configuration file and data directory only readable by the\n-bitcoin user and group.  Access to bitcoin-cli and other bitcoind rpc clients\n+litecoin user and group.  Access to litecoin-cli and other litecoind rpc clients\n can then be controlled by group membership.\n \n 3b) Mac OS X\n \n-Binary:              `/usr/local/bin/bitcoind`  \n-Configuration file:  `~/Library/Application Support/Bitcoin/bitcoin.conf`  \n-Data directory:      `~/Library/Application Support/Bitcoin`\n-Lock file:           `~/Library/Application Support/Bitcoin/.lock`\n+Binary:              `/usr/local/bin/litecoind`  \n+Configuration file:  `~/Library/Application Support/Litecoin/litecoin.conf`  \n+Data directory:      `~/Library/Application Support/Litecoin`\n+Lock file:           `~/Library/Application Support/Litecoin/.lock`\n \n 4. Installing Service Configuration\n -----------------------------------\n@@ -81,42 +81,42 @@ Installing this .service file consists of just copying it to\n /usr/lib/systemd/system directory, followed by the command\n `systemctl daemon-reload` in order to update running systemd configuration.\n \n-To test, run `systemctl start bitcoind` and to enable for system startup run\n-`systemctl enable bitcoind`\n+To test, run `systemctl start litecoind` and to enable for system startup run\n+`systemctl enable litecoind`\n \n 4b) OpenRC\n \n-Rename bitcoind.openrc to bitcoind and drop it in /etc/init.d.  Double\n+Rename litecoind.openrc to litecoind and drop it in /etc/init.d.  Double\n check ownership and permissions and make it executable.  Test it with\n-`/etc/init.d/bitcoind start` and configure it to run on startup with\n-`rc-update add bitcoind`\n+`/etc/init.d/litecoind start` and configure it to run on startup with\n+`rc-update add litecoind`\n \n 4c) Upstart (for Debian/Ubuntu based distributions)\n \n-Drop bitcoind.conf in /etc/init.  Test by running `service bitcoind start`\n+Drop litecoind.conf in /etc/init.  Test by running `service litecoind start`\n it will automatically start on reboot.\n \n NOTE: This script is incompatible with CentOS 5 and Amazon Linux 2014 as they\n use old versions of Upstart and do not supply the start-stop-daemon utility.\n \n 4d) CentOS\n \n-Copy bitcoind.init to /etc/init.d/bitcoind. Test by running `service bitcoind start`.\n+Copy litecoind.init to /etc/init.d/litecoind. Test by running `service litecoind start`.\n \n-Using this script, you can adjust the path and flags to the bitcoind program by\n-setting the BITCOIND and FLAGS environment variables in the file\n-/etc/sysconfig/bitcoind. You can also use the DAEMONOPTS environment variable here.\n+Using this script, you can adjust the path and flags to the litecoind program by\n+setting the LITECOIND and FLAGS environment variables in the file\n+/etc/sysconfig/litecoind. You can also use the DAEMONOPTS environment variable here.\n \n 4e) Mac OS X\n \n-Copy org.bitcoin.bitcoind.plist into ~/Library/LaunchAgents. Load the launch agent by\n-running `launchctl load ~/Library/LaunchAgents/org.bitcoin.bitcoind.plist`.\n+Copy org.litecoin.litecoind.plist into ~/Library/LaunchAgents. Load the launch agent by\n+running `launchctl load ~/Library/LaunchAgents/org.litecoin.litecoind.plist`.\n \n-This Launch Agent will cause bitcoind to start whenever the user logs in.\n+This Launch Agent will cause litecoind to start whenever the user logs in.\n \n-NOTE: This approach is intended for those wanting to run bitcoind as the current user.\n-You will need to modify org.bitcoin.bitcoind.plist if you intend to use it as a\n-Launch Daemon with a dedicated bitcoin user.\n+NOTE: This approach is intended for those wanting to run litecoind as the current user.\n+You will need to modify org.litecoin.litecoind.plist if you intend to use it as a\n+Launch Daemon with a dedicated litecoin user.\n \n 5. Auto-respawn\n -----------------------------------"
      },
      {
        "sha": "258be86edee2372033763742c513309761248f1b",
        "filename": "doc/litecoin_logo_doxygen.png",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/litecoin_logo_doxygen.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/litecoin_logo_doxygen.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/litecoin_logo_doxygen.png?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "previous_filename": "doc/bitcoin_logo_doxygen.png"
      },
      {
        "sha": "a3e8054dc55f2a3037c9a140800ace8cc49b32f2",
        "filename": "doc/multiwallet-qt.md",
        "status": "modified",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/multiwallet-qt.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/multiwallet-qt.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/multiwallet-qt.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,40 +1,40 @@\n Multiwallet Qt Development and Integration Strategy\n ===================================================\n \n-In order to support loading of multiple wallets in bitcoin-qt, a few changes in the UI architecture will be needed.\n+In order to support loading of multiple wallets in litecoin-qt, a few changes in the UI architecture will be needed.\n Fortunately, only four of the files in the existing project are affected by this change.\n \n Two new classes have been implemented in two new .h/.cpp file pairs, with much of the functionality that was previously\n-implemented in the BitcoinGUI class moved over to these new classes.\n+implemented in the LitecoinGUI class moved over to these new classes.\n \n-The two existing files most affected, by far, are bitcoingui.h and bitcoingui.cpp, as the BitcoinGUI class will require\n+The two existing files most affected, by far, are litecoingui.h and litecoingui.cpp, as the LitecoinGUI class will require\n some major retrofitting.\n \n-Only requiring some minor changes is bitcoin.cpp.\n+Only requiring some minor changes is litecoin.cpp.\n \n-Finally, two new headers and source files will have to be added to bitcoin-qt.pro.\n+Finally, two new headers and source files will have to be added to litecoin-qt.pro.\n \n-Changes to class BitcoinGUI\n+Changes to class LitecoinGUI\n ---------------------------\n-The principal change to the BitcoinGUI class concerns the QStackedWidget instance called centralWidget.\n+The principal change to the LitecoinGUI class concerns the QStackedWidget instance called centralWidget.\n This widget owns five page views: overviewPage, transactionsPage, addressBookPage, receiveCoinsPage, and sendCoinsPage.\n \n A new class called *WalletView* inheriting from QStackedWidget has been written to handle all renderings and updates of\n these page views. In addition to owning these five page views, a WalletView also has a pointer to a WalletModel instance.\n This allows the construction of multiple WalletView objects, each rendering a distinct wallet.\n \n A second class called *WalletFrame* inheriting from QFrame has been written as a container for embedding all wallet-related\n-controls into BitcoinGUI. At present it contains the WalletView instances for the wallets and does little more than passing on messages\n-from BitcoinGUI to the currently selected WalletView. It is a WalletFrame instance\n-that takes the place of what used to be centralWidget in BitcoinGUI. The purpose of this class is to allow future\n-refinements of the wallet controls with minimal need for further modifications to BitcoinGUI, thus greatly simplifying\n+controls into LitecoinGUI. At present it contains the WalletView instances for the wallets and does little more than passing on messages\n+from LitecoinGUI to the currently selected WalletView. It is a WalletFrame instance\n+that takes the place of what used to be centralWidget in LitecoinGUI. The purpose of this class is to allow future\n+refinements of the wallet controls with minimal need for further modifications to LitecoinGUI, thus greatly simplifying\n merges while reducing the risk of breaking top-level stuff.\n \n-Changes to bitcoin.cpp\n+Changes to litecoin.cpp\n ----------------------\n-bitcoin.cpp is the entry point into bitcoin-qt, and as such, will require some minor modifications to provide hooks for\n+litecoin.cpp is the entry point into litecoin-qt, and as such, will require some minor modifications to provide hooks for\n multiple wallet support. Most importantly will be the way it instantiates WalletModels and passes them to the\n-singleton BitcoinGUI instance called window. Formerly, BitcoinGUI kept a pointer to a single instance of a WalletModel.\n+singleton LitecoinGUI instance called window. Formerly, LitecoinGUI kept a pointer to a single instance of a WalletModel.\n The initial change required is very simple: rather than calling `window.setWalletModel(&walletModel);` we perform the\n following two steps:\n "
      },
      {
        "sha": "ba49ed50c7878778a096c4d8407775c8cf4f32d7",
        "filename": "doc/reduce-traffic.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/reduce-traffic.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/reduce-traffic.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reduce-traffic.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -3,7 +3,7 @@ Reduce Traffic\n \n Some node operators need to deal with bandwidth caps imposed by their ISPs.\n \n-By default, bitcoin-core allows up to 125 connections to different peers, 8 of\n+By default, litecoin-core allows up to 125 connections to different peers, 8 of\n which are outbound. You can therefore, have at most 117 inbound connections.\n \n The default settings can result in relatively significant traffic consumption.\n@@ -34,5 +34,5 @@ blocks and transactions to fewer nodes.\n ## 3. Reduce maximum connections (`-maxconnections=<num>`)\n \n Reducing the maximum connected nodes to a minimum could be desirable if traffic\n-limits are tiny. Keep in mind that bitcoin's trustless model works best if you are\n+limits are tiny. Keep in mind that litecoin's trustless model works best if you are\n connected to a handful of nodes."
      },
      {
        "sha": "b49f650ed0cd42ffa333c77f88485103e4906d6d",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,28 +1,28 @@\n-Bitcoin Core version 0.13.x is now available from:\n+Litecoin Core version 0.13.x is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.13.x/>\n+  <https://litecoin.org/bin/litecoin-core-0.13.x/>\n \n This is a new major version release, including new features, various bugfixes\n and performance improvements, as well as updated translations.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/wangxinxi/litecoin/issues>\n \n To receive security and update notifications, please subscribe to:\n \n-  <https://bitcoincore.org/en/list/announcements/join/>\n+  <https://litecoincore.org/en/list/announcements/join/>\n \n Compatibility\n ==============\n \n Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support),\n an OS initially released in 2001. This means that not even critical security\n-updates will be released anymore. Without security updates, using a bitcoin\n+updates will be released anymore. Without security updates, using a litecoin\n wallet on a XP machine is irresponsible at least.\n \n-In addition to that, with 0.12.x there have been varied reports of Bitcoin Core\n-randomly crashing on Windows XP. It is [not clear](https://github.com/bitcoin/bitcoin/issues/7681#issuecomment-217439891)\n+In addition to that, with 0.12.x there have been varied reports of Litecoin Core\n+randomly crashing on Windows XP. It is [not clear](https://github.com/wangxinxi/litecoin/issues/7681#issuecomment-217439891)\n what the source of these crashes is, but it is likely that upstream\n libraries such as Qt are no longer being tested on XP.\n \n@@ -66,4 +66,4 @@ Thanks to everyone who directly contributed to this release:\n \n     ... fill in here\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/litecoin/)."
      },
      {
        "sha": "9c7c164953281370c034bb832a49e9cf0a28ddbc",
        "filename": "doc/release-notes/release-notes-0.10.0.md",
        "status": "modified",
        "additions": 46,
        "deletions": 46,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.10.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.10.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.0.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,13 +1,13 @@\n-Bitcoin Core version 0.10.0 is now available from:\n+Litecoin Core version 0.10.0 is now available from:\n \n-  https://bitcoin.org/bin/0.10.0/\n+  https://litecoin.org/bin/0.10.0/\n \n This is a new major version release, bringing both new features and\n bug fixes.\n \n Please report bugs using the issue tracker at github:\n \n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/wangxinxi/litecoin/issues\n \n Upgrading and downgrading\n =========================\n@@ -17,15 +17,15 @@ How to Upgrade\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Litecoin-Qt (on Mac) or\n+litecoind/litecoin-qt (on Linux).\n \n Downgrading warning\n ---------------------\n \n Because release 0.10.0 makes use of headers-first synchronization and parallel\n block download (see further), the block files and databases are not\n-backwards-compatible with older versions of Bitcoin Core or other software:\n+backwards-compatible with older versions of Litecoin Core or other software:\n \n * Blocks will be stored on disk out of order (in the order they are\n received, really), which makes it incompatible with some tools or\n@@ -50,7 +50,7 @@ Notable changes\n Faster synchronization\n ----------------------\n \n-Bitcoin Core now uses 'headers-first synchronization'. This means that we first\n+Litecoin Core now uses 'headers-first synchronization'. This means that we first\n ask peers for block headers (a total of 27 megabytes, as of December 2014) and\n validate those. In a second stage, when the headers have been discovered, we\n download the blocks. However, as we already know about the whole chain in\n@@ -172,7 +172,7 @@ improved by making the signatures constant time and deterministic.\n \n This change is a result of switching signing to use libsecp256k1\n instead of OpenSSL. Libsecp256k1 is a cryptographic library\n-optimized for the curve Bitcoin uses which was created by Bitcoin\n+optimized for the curve Litecoin uses which was created by Litecoin\n Core developer Pieter Wuille.\n \n There exist attacks[1] against most ECC implementations where an\n@@ -187,7 +187,7 @@ long time, but this functionality has still not made its\n way into a released version of OpenSSL. Libsecp256k1 achieves\n significantly stronger protection: As far as we're aware this is\n the only deployed implementation of constant time signing for\n-the curve Bitcoin uses and we have reason to believe that\n+the curve Litecoin uses and we have reason to believe that\n libsecp256k1 is better tested and more thoroughly reviewed\n than the implementation in OpenSSL.\n \n@@ -222,21 +222,21 @@ addresses need to added to the wallet before the payment, though.\n Consensus library\n -----------------\n \n-Starting from 0.10.0, the Bitcoin Core distribution includes a consensus library.\n+Starting from 0.10.0, the Litecoin Core distribution includes a consensus library.\n \n The purpose of this library is to make the verification functionality that is\n-critical to Bitcoin's consensus available to other applications, e.g. to language\n-bindings such as [python-bitcoinlib](https://pypi.python.org/pypi/python-bitcoinlib) or\n+critical to Litecoin's consensus available to other applications, e.g. to language\n+bindings such as [python-litecoinlib](https://pypi.python.org/pypi/python-litecoinlib) or\n alternative node implementations.\n \n-This library is called `libbitcoinconsensus.so` (or, `.dll` for Windows).\n-Its interface is defined in the C header [bitcoinconsensus.h](https://github.com/bitcoin/bitcoin/blob/0.10/src/script/bitcoinconsensus.h).\n+This library is called `liblitecoinconsensus.so` (or, `.dll` for Windows).\n+Its interface is defined in the C header [litecoinconsensus.h](https://github.com/wangxinxi/litecoin/blob/0.10/src/script/litecoinconsensus.h).\n \n In its initial version the API includes two functions:\n \n-- `bitcoinconsensus_verify_script` verifies a script. It returns whether the indicated input of the provided serialized transaction \n+- `litecoinconsensus_verify_script` verifies a script. It returns whether the indicated input of the provided serialized transaction \n correctly spends the passed scriptPubKey under additional constraints indicated by flags\n-- `bitcoinconsensus_version` returns the API version, currently at an experimental `0`\n+- `litecoinconsensus_version` returns the API version, currently at an experimental `0`\n \n The functionality is planned to be extended to e.g. UTXO management in upcoming releases, but the interface\n for existing methods should remain stable.\n@@ -247,42 +247,42 @@ Standard script rules relaxed for P2SH addresses\n The IsStandard() rules have been almost completely removed for P2SH\n redemption scripts, allowing applications to make use of any valid\n script type, such as \"n-of-m OR y\", hash-locked oracle addresses, etc.\n-While the Bitcoin protocol has always supported these types of script,\n+While the Litecoin protocol has always supported these types of script,\n actually using them on mainnet has been previously inconvenient as\n-standard Bitcoin Core nodes wouldn't relay them to miners, nor would\n+standard Litecoin Core nodes wouldn't relay them to miners, nor would\n most miners include them in blocks they mined.\n \n-bitcoin-tx\n+litecoin-tx\n ----------\n \n-It has been observed that many of the RPC functions offered by bitcoind are\n-\"pure functions\", and operate independently of the bitcoind wallet. This\n+It has been observed that many of the RPC functions offered by litecoind are\n+\"pure functions\", and operate independently of the litecoind wallet. This\n included many of the RPC \"raw transaction\" API functions, such as\n createrawtransaction.\n \n-bitcoin-tx is a newly introduced command line utility designed to enable easy\n-manipulation of bitcoin transactions. A summary of its operation may be\n-obtained via \"bitcoin-tx --help\" Transactions may be created or signed in a\n+litecoin-tx is a newly introduced command line utility designed to enable easy\n+manipulation of litecoin transactions. A summary of its operation may be\n+obtained via \"litecoin-tx --help\" Transactions may be created or signed in a\n manner similar to the RPC raw tx API. Transactions may be updated, deleting\n inputs or outputs, or appending new inputs and outputs. Custom scripts may be\n-easily composed using a simple text notation, borrowed from the bitcoin test\n+easily composed using a simple text notation, borrowed from the litecoin test\n suite.\n \n This tool may be used for experimenting with new transaction types, signing\n multi-party transactions, and many other uses. Long term, the goal is to\n deprecate and remove \"pure function\" RPC API calls, as those do not require a\n server round-trip to execute.\n \n-Other utilities \"bitcoin-key\" and \"bitcoin-script\" have been proposed, making\n+Other utilities \"litecoin-key\" and \"litecoin-script\" have been proposed, making\n key and script operations easily accessible via command line.\n \n Mining and relay policy enhancements\n ------------------------------------\n \n-Bitcoin Core's block templates are now for version 3 blocks only, and any mining\n+Litecoin Core's block templates are now for version 3 blocks only, and any mining\n software relying on its `getblocktemplate` must be updated in parallel to use\n libblkmaker either version 0.4.2 or any version from 0.5.1 onward.\n-If you are solo mining, this will affect you the moment you upgrade Bitcoin\n+If you are solo mining, this will affect you the moment you upgrade Litecoin\n Core, which must be done prior to BIP66 achieving its 951/1001 status.\n If you are mining with the stratum mining protocol: this does not affect you.\n If you are mining with the getblocktemplate protocol to a pool: this will affect\n@@ -292,10 +292,10 @@ achieving its 951/1001 status.\n The `prioritisetransaction` RPC method has been added to enable miners to\n manipulate the priority of transactions on an individual basis.\n \n-Bitcoin Core now supports BIP 22 long polling, so mining software can be\n+Litecoin Core now supports BIP 22 long polling, so mining software can be\n notified immediately of new templates rather than having to poll periodically.\n \n-Support for BIP 23 block proposals is now available in Bitcoin Core's\n+Support for BIP 23 block proposals is now available in Litecoin Core's\n `getblocktemplate` method. This enables miners to check the basic validity of\n their next block before expending work on it, reducing risks of accidental\n hardforks or mining invalid blocks.\n@@ -313,9 +313,9 @@ AllowFreeThreshold(), in which case they are relayed subject to the rate limiter\n BIP 66: strict DER encoding for signatures\n ------------------------------------------\n \n-Bitcoin Core 0.10 implements BIP 66, which introduces block version 3, and a new\n+Litecoin Core 0.10 implements BIP 66, which introduces block version 3, and a new\n consensus rule, which prohibits non-DER signatures. Such transactions have been\n-non-standard since Bitcoin v0.8.0 (released in February 2013), but were\n+non-standard since Litecoin v0.8.0 (released in February 2013), but were\n technically still permitted inside blocks.\n \n This change breaks the dependency on OpenSSL's signature parsing, and is\n@@ -337,10 +337,10 @@ Detailed release notes follow. This overview includes changes that affect extern\n behavior, not code moves, refactors or string updates.\n \n RPC:\n-- `f923c07` Support IPv6 lookup in bitcoin-cli even when IPv6 only bound on localhost\n+- `f923c07` Support IPv6 lookup in litecoin-cli even when IPv6 only bound on localhost\n - `b641c9c` Fix addnode \"onetry\": Connect with OpenNetworkConnection\n - `171ca77` estimatefee / estimatepriority RPC methods\n-- `b750cf1` Remove cli functionality from bitcoind\n+- `b750cf1` Remove cli functionality from litecoind\n - `f6984e8` Add \"chain\" to getmininginfo, improve help in getblockchaininfo\n - `99ddc6c` Add nLocalServices info to RPC getinfo\n - `cf0c47b` Remove getwork() RPC call\n@@ -391,7 +391,7 @@ Command-line options:\n - `4278b1d` Clarify error message when invalid -rpcallowip\n - `6b407e4` -datadir is now allowed in config files\n - `bdd5b58` Add option `-sysperms` to disable 077 umask (create new files with system default umask)\n-- `cbe39a3` Add \"bitcoin-tx\" command line utility and supporting modules\n+- `cbe39a3` Add \"litecoin-tx\" command line utility and supporting modules\n - `dbca89b` Trigger -alertnotify if network is upgrading without you\n - `ad96e7c` Make -reindex cope with out-of-order blocks\n - `16d5194` Skip reindexed blocks individually\n@@ -465,7 +465,7 @@ P2P protocol and network code:\n - `35e408f` Regard connection failures as attempt for addrman\n - `a3a7317` Introduce 10 minute block download timeout\n - `3022e7d` Require sufficent priority for relay of free transactions\n-- `58fda4d` Update seed IPs, based on bitcoin.sipa.be crawler data\n+- `58fda4d` Update seed IPs, based on litecoin.sipa.be crawler data\n - `18021d0` Remove bitnodes.io from dnsseeds.\n \n Validation:\n@@ -492,13 +492,13 @@ Build system:\n - `9ce0774` build: Fix windows configure when using --with-qt-libdir\n - `ea96475` build: Add mention of --disable-wallet to bdb48 error messages\n - `1dec09b` depends: add shared dependency builder\n-- `c101c76` build: Add --with-utils (bitcoin-cli and bitcoin-tx, default=yes). Help string consistency tweaks. Target sanity check fix\n+- `c101c76` build: Add --with-utils (litecoin-cli and litecoin-tx, default=yes). Help string consistency tweaks. Target sanity check fix\n - `e432a5f` build: add option for reducing exports (v2)\n - `6134b43` Fixing condition 'sabotaging' MSVC build\n - `af0bd5e` osx: fix signing to make Gatekeeper happy (again)\n - `a7d1f03` build: fix dynamic boost check when --with-boost= is used\n - `d5fd094` build: fix qt test build when libprotobuf is in a non-standard path\n-- `2cf5f16` Add libbitcoinconsensus library\n+- `2cf5f16` Add liblitecoinconsensus library\n - `914868a` build: add a deterministic dmg signer \n - `2d375fe` depends: bump openssl to 1.0.1k\n - `b7a4ecc` Build: Only check for boost when building code that requires it\n@@ -522,7 +522,7 @@ Wallet:\n GUI:\n - `c21c74b` osx: Fix missing dock menu with qt5\n - `b90711c` Fix Transaction details shows wrong To:\n-- `516053c` Make links in 'About Bitcoin Core' clickable\n+- `516053c` Make links in 'About Litecoin Core' clickable\n - `bdc83e8` Ensure payment request network matches client network\n - `65f78a1` Add GUI view of peer information\n - `06a91d9` VerifyDB progress reporting\n@@ -539,7 +539,7 @@ GUI:\n - `7007402` Implement SI-style (thin space) thoudands separator\n - `91cce17` Use fixed-point arithmetic in amount spinbox\n - `bdba2dd` Remove an obscure option no-one cares about\n-- `bd0aa10` Replace the temporary file hack currently used to change Bitcoin-Qt's dock icon (OS X) with a buffer-based solution\n+- `bd0aa10` Replace the temporary file hack currently used to change Litecoin-Qt's dock icon (OS X) with a buffer-based solution\n - `94e1b9e` Re-work overviewpage UI\n - `8bfdc9a` Better looking trayicon\n - `b197bf3` disable tray interactions when client model set to 0\n@@ -585,8 +585,8 @@ Tests:\n - `4cac5db` script tests: value with trailing 0x00 is true\n - `89101c6` script test: test case for 5-byte bools\n - `d2d9dc0` script tests: add tests for CHECKMULTISIG limits\n-- `d789386` Add \"it works\" test for bitcoin-tx\n-- `df4d61e` Add bitcoin-tx tests\n+- `d789386` Add \"it works\" test for litecoin-tx\n+- `df4d61e` Add litecoin-tx tests\n - `aa41ac2` Test IsPushOnly() with invalid push\n - `6022b5d` Make `script_{valid,invalid}.json` validation flags configurable\n - `8138cbe` Add automatic script test generation, and actual checksig tests\n@@ -598,7 +598,7 @@ Tests:\n - `2b62e17` Clearly separate PUSHDATA and numeric argument MINIMALDATA tests\n - `16d78bd` Add valid invert of invalid every numeric opcode tests\n - `f635269` tests: enable alertnotify test for Windows\n-- `7a41614` tests: allow rpc-tests to get filenames for bitcoind and bitcoin-cli from the environment\n+- `7a41614` tests: allow rpc-tests to get filenames for litecoind and litecoin-cli from the environment\n - `5122ea7` tests: fix forknotify.py on windows\n - `fa7f8cd` tests: remove old pull-tester scripts\n - `7667850` tests: replace the old (unused since Travis) tests with new rpc test scripts\n@@ -624,7 +624,7 @@ Tests:\n Miscellaneous:\n - `122549f` Fix incorrect checkpoint data for testnet3\n - `5bd02cf` Log used config file to debug.log on startup\n-- `68ba85f` Updated Debian example bitcoin.conf with config from wiki + removed some cruft and updated comments\n+- `68ba85f` Updated Debian example litecoin.conf with config from wiki + removed some cruft and updated comments\n - `e5ee8f0` Remove -beta suffix\n - `38405ac` Add comment regarding experimental-use service bits\n - `be873f6` Issue warning if collecting RandSeed data failed\n@@ -635,7 +635,7 @@ Miscellaneous:\n - `cd01a5e` Enable paranoid corruption checks in LevelDB >= 1.16\n - `9365937` Add comment about never updating nTimeOffset past 199 samples\n - `403c1bf` contrib: remove getwork-based pyminer (as getwork API call has been removed)\n-- `0c3e101` contrib: Added systemd .service file in order to help distributions integrate bitcoind\n+- `0c3e101` contrib: Added systemd .service file in order to help distributions integrate litecoind\n - `0a0878d` doc: Add new DNSseed policy\n - `2887bff` Update coding style and add .clang-format\n - `5cbda4f` Changed LevelDB cursors to use scoped pointers to ensure destruction when going out of scope\n@@ -758,5 +758,5 @@ Thanks to everyone who contributed to this release:\n - Yoichi Hirai\n - Zak Wilcox\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/litecoin/).\n "
      },
      {
        "sha": "60da753f6f7e4081dc0301f1bef00b0fe128ad49",
        "filename": "doc/release-notes/release-notes-0.10.1.md",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.10.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.10.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.1.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,13 +1,13 @@\n-Bitcoin Core version 0.10.1 is now available from:\n+Litecoin Core version 0.10.1 is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.10.1/>\n+  <https://litecoin.org/bin/litecoin-core-0.10.1/>\n \n This is a new minor version release, bringing bug fixes and translation \n updates. It is recommended to upgrade to this version.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/wangxinxi/litecoin/issues>\n \n Upgrading and downgrading\n =========================\n@@ -17,15 +17,15 @@ How to Upgrade\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Litecoin-Qt (on Mac) or\n+litecoind/litecoin-qt (on Linux).\n \n Downgrade warning\n ------------------\n \n Because release 0.10.0 and later makes use of headers-first synchronization and\n parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+backwards-compatible with pre-0.10 versions of Litecoin Core or other software:\n \n * Blocks will be stored on disk out of order (in the order they are\n received, really), which makes it incompatible with some tools or\n@@ -48,7 +48,7 @@ Notable changes\n \n This is a minor release and hence there are no notable changes.\n For the notable changes in 0.10, refer to the release notes for the\n-0.10.0 release at https://github.com/bitcoin/bitcoin/blob/v0.10.0/doc/release-notes.md\n+0.10.0 release at https://github.com/wangxinxi/litecoin/blob/v0.10.0/doc/release-notes.md\n \n 0.10.1 Change log\n =================\n@@ -140,4 +140,4 @@ And all those who contributed additional code review and/or security research:\n - Sergio Demian Lerner\n - Sharon Goldberg\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/litecoin/)."
      },
      {
        "sha": "890b7fc711d7a521e142a625f2ed7bf1aae9b09a",
        "filename": "doc/release-notes/release-notes-0.10.2.md",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.10.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.10.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.2.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,13 +1,13 @@\n-Bitcoin Core version 0.10.2 is now available from:\n+Litecoin Core version 0.10.2 is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.10.2/>\n+  <https://litecoin.org/bin/litecoin-core-0.10.2/>\n \n This is a new minor version release, bringing minor bug fixes and translation \n updates. It is recommended to upgrade to this version.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/wangxinxi/litecoin/issues>\n \n Upgrading and downgrading\n =========================\n@@ -17,15 +17,15 @@ How to Upgrade\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Litecoin-Qt (on Mac) or\n+litecoind/litecoin-qt (on Linux).\n \n Downgrade warning\n ------------------\n \n Because release 0.10.0 and later makes use of headers-first synchronization and\n parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+backwards-compatible with pre-0.10 versions of Litecoin Core or other software:\n \n * Blocks will be stored on disk out of order (in the order they are\n received, really), which makes it incompatible with some tools or\n@@ -47,12 +47,12 @@ Notable changes\n ===============\n \n This fixes a serious problem on Windows with data directories that have non-ASCII\n-characters (https://github.com/bitcoin/bitcoin/issues/6078).\n+characters (https://github.com/wangxinxi/litecoin/issues/6078).\n \n For other platforms there are no notable changes.\n \n For the notable changes in 0.10, refer to the release notes\n-at https://github.com/bitcoin/bitcoin/blob/v0.10.0/doc/release-notes.md\n+at https://github.com/wangxinxi/litecoin/blob/v0.10.0/doc/release-notes.md\n \n 0.10.2 Change log\n =================\n@@ -83,4 +83,4 @@ And all those who contributed additional code review and/or security research:\n - Pieter Wuille\n - vayvanne\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/litecoin/)."
      },
      {
        "sha": "a5ae982833f4e080b87682c46a25fbe9304c555f",
        "filename": "doc/release-notes/release-notes-0.10.3.md",
        "status": "modified",
        "additions": 15,
        "deletions": 15,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.10.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.10.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.3.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,13 +1,13 @@\n-Bitcoin Core version 0.10.3 is now available from:\n+Litecoin Core version 0.10.3 is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.10.3/>\n+  <https://litecoin.org/bin/litecoin-core-0.10.3/>\n \n This is a new minor version release, bringing security fixes and translation \n updates. It is recommended to upgrade to this version as soon as possible.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/wangxinxi/litecoin/issues>\n \n Upgrading and downgrading\n =========================\n@@ -17,15 +17,15 @@ How to Upgrade\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Litecoin-Qt (on Mac) or\n+litecoind/litecoin-qt (on Linux).\n \n Downgrade warning\n ------------------\n \n Because release 0.10.0 and later makes use of headers-first synchronization and\n parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+backwards-compatible with pre-0.10 versions of Litecoin Core or other software:\n \n * Blocks will be stored on disk out of order (in the order they are\n received, really), which makes it incompatible with some tools or\n@@ -60,7 +60,7 @@ using distribution provided packages.\n Additionally, upnp has been disabled by default. This may result in a lower\n number of reachable nodes on IPv4, however this prevents future libupnpc\n vulnerabilities from being a structural risk to the network\n-(see https://github.com/bitcoin/bitcoin/pull/6795).\n+(see https://github.com/wangxinxi/litecoin/pull/6795).\n \n Test for LowS signatures before relaying\n -----------------------------------------\n@@ -75,26 +75,26 @@ for nuisance malleability on SIGHASH_ALL P2PKH transactions. On the down-side\n it will block most transactions made by sufficiently out of date software.\n \n Unlike the other avenues to change txids on transactions this\n-one was randomly violated by all deployed bitcoin software prior to\n+one was randomly violated by all deployed litecoin software prior to\n its discovery. So, while other malleability vectors where made\n non-standard as soon as they were discovered, this one has remained\n permitted. Even BIP62 did not propose applying this rule to\n old version transactions, but conforming implementations have become\n much more common since BIP62 was initially written.\n \n-Bitcoin Core has produced compatible signatures since a28fb70e in\n+Litecoin Core has produced compatible signatures since a28fb70e in\n September 2013, but this didn't make it into a release until 0.9\n-in March 2014; Bitcoinj has done so for a similar span of time.\n-Bitcoinjs and electrum have been more recently updated.\n+in March 2014; Litecoinj has done so for a similar span of time.\n+Litecoinjs and electrum have been more recently updated.\n \n This does not replace the need for BIP62 or similar, as miners can\n still cooperate to break transactions.  Nor does it replace the\n need for wallet software to handle malleability sanely[1]. This\n only eliminates the cheap and irritating DOS attack.\n \n-[1] On the Malleability of Bitcoin Transactions\n+[1] On the Malleability of Litecoin Transactions\n Marcin Andrychowicz, Stefan Dziembowski, Daniel Malinowski, \u0141ukasz Mazurek\n-http://fc15.ifca.ai/preproceedings/bitcoin/paper_9.pdf\n+http://fc15.ifca.ai/preproceedings/litecoin/paper_9.pdf\n \n Minimum relay fee default increase\n -----------------------------------\n@@ -107,7 +107,7 @@ outrageous memory usage on nodes due to the mempool ballooning. This is a\n temporary measure, bridging the time until a dynamic method for determining\n this fee is merged (which will be in 0.12).\n \n-(see https://github.com/bitcoin/bitcoin/pull/6793, as well as the 0.11.0\n+(see https://github.com/wangxinxi/litecoin/pull/6793, as well as the 0.11.0\n release notes, in which this value was suggested)\n \n 0.10.3 Change log\n@@ -162,4 +162,4 @@ And all those who contributed additional code review and/or security research:\n - timothy on IRC for reporting the issue\n - Vulnerability in miniupnp discovered by Aleksandar Nikolic of Cisco Talos\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/litecoin/)."
      },
      {
        "sha": "b1294b6153cb4b0207a12c8381e13846df92fc5d",
        "filename": "doc/release-notes/release-notes-0.10.4.md",
        "status": "modified",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.10.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.10.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.4.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,14 +1,14 @@\n-Bitcoin Core version 0.10.4 is now available from:\n+Litecoin Core version 0.10.4 is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.10.4/>\n+  <https://litecoin.org/bin/litecoin-core-0.10.4/>\n \n This is a new minor version release, bringing bug fixes, the BIP65\n (CLTV) consensus change, and relay policy preparation for BIP113. It is\n recommended to upgrade to this version as soon as possible.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/wangxinxi/litecoin/issues>\n \n Upgrading and downgrading\n =========================\n@@ -18,15 +18,15 @@ How to Upgrade\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Litecoin-Qt (on Mac) or\n+litecoind/litecoin-qt (on Linux).\n \n Downgrade warning\n ------------------\n \n Because release 0.10.0 and later makes use of headers-first synchronization and\n parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+backwards-compatible with pre-0.10 versions of Litecoin Core or other software:\n \n * Blocks will be stored on disk out of order (in the order they are\n received, really), which makes it incompatible with some tools or\n@@ -68,24 +68,24 @@ specified point in the future.\n    blocks if they comply with the BIP65 rules for CLTV.\n \n For more information about the soft-forking change, please see\n-<https://github.com/bitcoin/bitcoin/pull/6351>\n+<https://github.com/wangxinxi/litecoin/pull/6351>\n \n Graphs showing the progress towards block version 4 adoption may be\n found at the URLs below:\n \n - Block versions over the last 50,000 blocks as progress towards BIP65\n-  consensus enforcement: <http://bitcoin.sipa.be/ver-50k.png>\n+  consensus enforcement: <http://litecoin.sipa.be/ver-50k.png>\n \n - Block versions over the last 2,000 blocks showing the days to the\n-  earliest possible BIP65 consensus-enforced block: <http://bitcoin.sipa.be/ver-2k.png>\n+  earliest possible BIP65 consensus-enforced block: <http://litecoin.sipa.be/ver-2k.png>\n \n-**Notice to miners:** Bitcoin Core\u2019s block templates are now for\n+**Notice to miners:** Litecoin Core\u2019s block templates are now for\n version 4 blocks only, and any mining software relying on its\n getblocktemplate must be updated in parallel to use libblkmaker either\n version FIXME or any version from FIXME onward.\n \n - If you are solo mining, this will affect you the moment you upgrade\n-  Bitcoin Core, which must be done prior to BIP65 achieving its 951/1001\n+  Litecoin Core, which must be done prior to BIP65 achieving its 951/1001\n   status.\n \n - If you are mining with the stratum mining protocol: this does not\n@@ -95,19 +95,19 @@ version FIXME or any version from FIXME onward.\n   will affect you at the pool operator\u2019s discretion, which must be no\n   later than BIP65 achieving its 951/1001 status.\n \n-[BIP65]: https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki\n+[BIP65]: https://github.com/litecoin/bips/blob/master/bip-0065.mediawiki\n \n Windows bug fix for corrupted UTXO database on unclean shutdowns\n ----------------------------------------------------------------\n \n Several Windows users reported that they often need to reindex the\n-entire blockchain after an unclean shutdown of Bitcoin Core on Windows\n+entire blockchain after an unclean shutdown of Litecoin Core on Windows\n (or an unclean shutdown of Windows itself). Although unclean shutdowns\n remain unsafe, this release no longer relies on memory-mapped files for\n the UTXO database, which significantly reduced the frequency of unclean\n shutdowns leading to required reindexes during testing.\n \n-For more information, see: <https://github.com/bitcoin/bitcoin/pull/6917>\n+For more information, see: <https://github.com/wangxinxi/litecoin/pull/6917>\n \n Other fixes for database corruption on Windows are expected in the\n next major release.\n@@ -129,8 +129,8 @@ git merge commit are mentioned.\n - #6953 `a2f2fb6` build: disable -Wself-assign\n - #6953 `cf67d8b` Bugfix: Allow mining on top of old tip blocks for testnet (fixes testnet-in-a-box use case)\n - #6953 `b3964e3` Drop \"with minimal dependencies\" from description\n-- #6953 `43c2789` Split bitcoin-tx into its own package\n-- #6953 `dfe0d4d` Include bitcoin-tx binary on Debian/Ubuntu\n+- #6953 `43c2789` Split litecoin-tx into its own package\n+- #6953 `dfe0d4d` Include litecoin-tx binary on Debian/Ubuntu\n - #6953 `612efe8` [Qt] Raise debug window when requested\n - #6953 `3ad96bd` Fix locking in GetTransaction\n - #6953 `9c81005` Fix spelling of Qt\n@@ -169,4 +169,4 @@ Thanks to everyone who directly contributed to this release:\n \n And those who contributed additional code review and/or security research.\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/litecoin/)."
      },
      {
        "sha": "3428c50bd3192a2fc8625a53fc64ee5569ec0177",
        "filename": "doc/release-notes/release-notes-0.11.0.md",
        "status": "modified",
        "additions": 21,
        "deletions": 21,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.11.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.11.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.0.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,13 +1,13 @@\n-Bitcoin Core version 0.11.0 is now available from:\n+Litecoin Core version 0.11.0 is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.11.0/>\n+  <https://litecoin.org/bin/litecoin-core-0.11.0/>\n \n This is a new major version release, bringing both new features and\n bug fixes.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/wangxinxi/litecoin/issues>\n \n Upgrading and downgrading\n =========================\n@@ -17,15 +17,15 @@ How to Upgrade\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Litecoin-Qt (on Mac) or\n+litecoind/litecoin-qt (on Linux).\n \n Downgrade warning\n ------------------\n \n Because release 0.10.0 and later makes use of headers-first synchronization and\n parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+backwards-compatible with pre-0.10 versions of Litecoin Core or other software:\n \n * Blocks will be stored on disk out of order (in the order they are\n received, really), which makes it incompatible with some tools or\n@@ -67,7 +67,7 @@ free transactions (with enough priority) will be accepted. It defaults to 15.\n Reducing this number reduces the speed at which the mempool can grow due\n to free transactions.\n \n-For example, add the following to `bitcoin.conf`:\n+For example, add the following to `litecoin.conf`:\n \n     minrelaytxfee=0.00005 \n     limitfreerelay=5\n@@ -82,11 +82,11 @@ Block file pruning\n \n This release supports running a fully validating node without maintaining a copy \n of the raw block and undo data on disk. To recap, there are four types of data \n-related to the blockchain in the bitcoin system: the raw blocks as received over \n+related to the blockchain in the litecoin system: the raw blocks as received over \n the network (blk???.dat), the undo data (rev???.dat), the block index and the \n UTXO set (both LevelDB databases). The databases are built from the raw data.\n \n-Block pruning allows Bitcoin Core to delete the raw block and undo data once \n+Block pruning allows Litecoin Core to delete the raw block and undo data once \n it's been validated and used to build the databases. At that point, the raw data \n is used only to relay blocks to other nodes, to handle reorganizations, to look \n up old transactions (if -txindex is enabled or via the RPC/REST interfaces), or \n@@ -95,7 +95,7 @@ all blocks in the blockchain.\n \n The user specifies how much space to allot for block & undo files. The minimum \n allowed is 550MB. Note that this is in addition to whatever is required for the \n-block index and UTXO databases. The minimum was chosen so that Bitcoin Core will \n+block index and UTXO databases. The minimum was chosen so that Litecoin Core will \n be able to maintain at least 288 blocks on disk (two days worth of blocks at 10 \n minutes per block). In rare instances it is possible that the amount of space \n used will exceed the pruning target in order to keep the required last 288 \n@@ -192,7 +192,7 @@ transaction (re)broadcast:\n One such application is selective Tor usage, where the node runs on the normal\n internet but transactions are broadcasted over Tor.\n \n-For an example script see [bitcoin-submittx](https://github.com/laanwj/bitcoin-submittx).\n+For an example script see [litecoin-submittx](https://github.com/laanwj/litecoin-submittx).\n \n Privacy: Stream isolation for Tor\n ----------------------------------\n@@ -297,7 +297,7 @@ git merge commit are mentioned.\n \n ### Build system\n - #5501 `c76c9d2` Add mips, mipsel and aarch64 to depends platforms\n-- #5334 `cf87536` libbitcoinconsensus: Add pkg-config support\n+- #5334 `cf87536` liblitecoinconsensus: Add pkg-config support\n - #5514 `ed11d53` Fix 'make distcheck'\n - #5505 `a99ef7d` Build winshutdownmonitor.cpp on Windows only\n - #5582 `e8a6639` Osx toolchain update\n@@ -309,7 +309,7 @@ git merge commit are mentioned.\n - #5149 `c7abfa5` Add script to verify all merge commits are signed\n - #6082 `7abbb7e` qt: disable qt tests when one of the checks for the gui fails\n - #6244 `0401aa2` configure: Detect (and reject) LibreSSL\n-- #6269 `95aca44` gitian: Use the new bitcoin-detached-sigs git repo for OSX signatures\n+- #6269 `95aca44` gitian: Use the new litecoin-detached-sigs git repo for OSX signatures\n - #6285 `ef1d506` Fix scheduler build with some boost versions.\n - #6280 `25c2216` depends: fix Boost 1.55 build on GCC 5\n - #6303 `b711599` gitian: add a gitian-win-signer descriptor\n@@ -346,8 +346,8 @@ git merge commit are mentioned.\n - #5626 `ab0d798` Fix icon sizes and column width\n - #5683 `c7b22aa` add new osx dmg background picture\n - #5620 `7823598` Payment request expiration bug fix\n-- #5729 `9c4a5a5` Allow unit changes for read-only BitcoinAmountField\n-- #5753 `0f44672` Add bitcoin logo to about screen\n+- #5729 `9c4a5a5` Allow unit changes for read-only LitecoinAmountField\n+- #5753 `0f44672` Add litecoin logo to about screen\n - #5629 `a956586` Prevent amount overflow problem with payment requests\n - #5830 `215475a` Don't save geometry for options and about/help window\n - #5793 `d26f0b2` Honor current network when creating autostart link\n@@ -392,21 +392,21 @@ git merge commit are mentioned.\n - #5366 `47a79bb` No longer check osx compatibility in RenameThread\n - #5689 `07f4386` openssl: abstract out OPENSSL_cleanse\n - #5708 `8b298ca` Add list of implemented BIPs\n-- #5809 `46bfbe7` Add bitcoin-cli man page\n+- #5809 `46bfbe7` Add litecoin-cli man page\n - #5839 `86eb461` keys: remove libsecp256k1 verification until it's actually supported\n - #5749 `d734d87` Help messages correctly formatted (79 chars)\n - #5884 `7077fe6` BUGFIX: Stack around the variable 'rv' was corrupted\n-- #5849 `41259ca` contrib/init/bitcoind.openrc: Compatibility with previous OpenRC init script variables\n+- #5849 `41259ca` contrib/init/litecoind.openrc: Compatibility with previous OpenRC init script variables\n - #5950 `41113e3` Fix locale fallback and guard tests against invalid locale settings\n - #5965 `7c6bfb1` Add git-subtree-check.sh script\n - #6033 `1623f6e` FreeBSD, OpenBSD thread renaming\n - #6064 `b46e7c2` Several changes to mruset\n - #6104 `3e2559c` Show an init message while activating best chain\n - #6125 `351f73e` Clean up parsing of bool command line args\n - #5964 `b4c219b` Lightweight task scheduler\n-- #6116 `30dc3c1` [OSX] rename Bitcoin-Qt.app to Bitcoin-Core.app\n+- #6116 `30dc3c1` [OSX] rename Litecoin-Qt.app to Litecoin-Core.app\n - #6168 `b3024f0` contrib/linearize: Support linearization of testnet blocks\n-- #6098 `7708fcd` Update Windows resource files (and add one for bitcoin-tx)\n+- #6098 `7708fcd` Update Windows resource files (and add one for litecoin-tx)\n - #6159 `e1412d3` Catch errors on datadir lock and pidfile delete\n - #6186 `182686c` Fix two problems in CSubnet parsing\n - #6174 `df992b9` doc: add translation strings policy\n@@ -427,7 +427,7 @@ Thanks to everyone who directly contributed to this release:\n - azeteki\n - Ben Holden-Crowther\n - bikinibabe\n-- BitcoinPRReadingGroup\n+- LitecoinPRReadingGroup\n - Blake Jakopovic\n - BtcDrak\n - charlescharles\n@@ -501,5 +501,5 @@ And all those who contributed additional code review and/or security research:\n \n - Sergio Demian Lerner\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/litecoin/).\n "
      },
      {
        "sha": "c9187b8342de4a0499b21699ffeeb0958c5c54b3",
        "filename": "doc/release-notes/release-notes-0.11.1.md",
        "status": "modified",
        "additions": 16,
        "deletions": 16,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.11.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.11.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.1.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,13 +1,13 @@\n-Bitcoin Core version 0.11.1 is now available from:\n+Litecoin Core version 0.11.1 is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.11.1/>\n+  <https://litecoin.org/bin/litecoin-core-0.11.1/>\n \n This is a new minor version release, bringing security fixes. It is recommended\n to upgrade to this version as soon as possible.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/wangxinxi/litecoin/issues>\n \n Upgrading and downgrading\n =========================\n@@ -17,15 +17,15 @@ How to Upgrade\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Litecoin-Qt (on Mac) or\n+litecoind/litecoin-qt (on Linux).\n \n Downgrade warning\n ------------------\n \n Because release 0.10.0 and later makes use of headers-first synchronization and\n parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+backwards-compatible with pre-0.10 versions of Litecoin Core or other software:\n \n * Blocks will be stored on disk out of order (in the order they are\n received, really), which makes it incompatible with some tools or\n@@ -61,7 +61,7 @@ using distribution provided packages.\n Additionally, upnp has been disabled by default. This may result in a lower\n number of reachable nodes on IPv4, however this prevents future libupnpc\n vulnerabilities from being a structural risk to the network\n-(see https://github.com/bitcoin/bitcoin/pull/6795).\n+(see https://github.com/wangxinxi/litecoin/pull/6795).\n \n Test for LowS signatures before relaying\n -----------------------------------------\n@@ -76,26 +76,26 @@ for nuisance malleability on SIGHASH_ALL P2PKH transactions. On the down-side\n it will block most transactions made by sufficiently out of date software.\n \n Unlike the other avenues to change txids on transactions this\n-one was randomly violated by all deployed bitcoin software prior to\n+one was randomly violated by all deployed litecoin software prior to\n its discovery. So, while other malleability vectors where made\n non-standard as soon as they were discovered, this one has remained\n permitted. Even BIP62 did not propose applying this rule to\n old version transactions, but conforming implementations have become\n much more common since BIP62 was initially written.\n \n-Bitcoin Core has produced compatible signatures since a28fb70e in\n+Litecoin Core has produced compatible signatures since a28fb70e in\n September 2013, but this didn't make it into a release until 0.9\n-in March 2014; Bitcoinj has done so for a similar span of time.\n-Bitcoinjs and electrum have been more recently updated.\n+in March 2014; Litecoinj has done so for a similar span of time.\n+Litecoinjs and electrum have been more recently updated.\n \n This does not replace the need for BIP62 or similar, as miners can\n still cooperate to break transactions.  Nor does it replace the\n need for wallet software to handle malleability sanely[1]. This\n only eliminates the cheap and irritating DOS attack.\n \n-[1] On the Malleability of Bitcoin Transactions\n+[1] On the Malleability of Litecoin Transactions\n Marcin Andrychowicz, Stefan Dziembowski, Daniel Malinowski, \u0141ukasz Mazurek\n-http://fc15.ifca.ai/preproceedings/bitcoin/paper_9.pdf\n+http://fc15.ifca.ai/preproceedings/litecoin/paper_9.pdf\n \n Minimum relay fee default increase\n -----------------------------------\n@@ -108,7 +108,7 @@ outrageous memory usage on nodes due to the mempool ballooning. This is a\n temporary measure, bridging the time until a dynamic method for determining\n this fee is merged (which will be in 0.12).\n \n-(see https://github.com/bitcoin/bitcoin/pull/6793, as well as the 0.11\n+(see https://github.com/wangxinxi/litecoin/pull/6793, as well as the 0.11\n release notes, in which this value was suggested)\n \n 0.11.1 Change log\n@@ -124,7 +124,7 @@ git merge commit are mentioned.\n - #6384 `8e5a969` qt: Force TLS1.0+ for SSL connections\n - #6471 `92401c2` Depends: bump to qt 5.5\n - #6224 `93b606a` Be even stricter in processing unrequested blocks\n-- #6571 `100ac4e` libbitcoinconsensus: avoid a crash in multi-threaded environments\n+- #6571 `100ac4e` liblitecoinconsensus: avoid a crash in multi-threaded environments\n - #6545 `649f5d9` Do not store more than 200 timedata samples.\n - #6694 `834e299` [QT] fix thin space word wrap line break issue\n - #6703 `1cd7952` Backport bugfixes to 0.11\n@@ -168,5 +168,5 @@ And those who contributed additional code review and/or security research:\n - timothy on IRC for reporting the issue\n - Vulnerability in miniupnp discovered by Aleksandar Nikolic of Cisco Talos\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/litecoin/).\n "
      },
      {
        "sha": "7565442dbb8b1f5cfe918d15f92dfd5772cc057c",
        "filename": "doc/release-notes/release-notes-0.11.2.md",
        "status": "modified",
        "additions": 19,
        "deletions": 19,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.11.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.11.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.2.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,14 +1,14 @@\n-Bitcoin Core version 0.11.2 is now available from:\n+Litecoin Core version 0.11.2 is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.11.2/>\n+  <https://litecoin.org/bin/litecoin-core-0.11.2/>\n \n This is a new minor version release, bringing bug fixes, the BIP65\n (CLTV) consensus change, and relay policy preparation for BIP113. It is\n recommended to upgrade to this version as soon as possible.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/wangxinxi/litecoin/issues>\n \n Upgrading and downgrading\n =========================\n@@ -18,15 +18,15 @@ How to Upgrade\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Litecoin-Qt (on Mac) or\n+litecoind/litecoin-qt (on Linux).\n \n Downgrade warning\n ------------------\n \n Because release 0.10.0 and later makes use of headers-first synchronization and\n parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+backwards-compatible with pre-0.10 versions of Litecoin Core or other software:\n \n * Blocks will be stored on disk out of order (in the order they are\n received, really), which makes it incompatible with some tools or\n@@ -68,24 +68,24 @@ specified point in the future.\n    blocks if they comply with the BIP65 rules for CLTV.\n \n For more information about the soft-forking change, please see\n-<https://github.com/bitcoin/bitcoin/pull/6351>\n+<https://github.com/wangxinxi/litecoin/pull/6351>\n \n Graphs showing the progress towards block version 4 adoption may be\n found at the URLs below:\n \n - Block versions over the last 50,000 blocks as progress towards BIP65\n-  consensus enforcement: <http://bitcoin.sipa.be/ver-50k.png>\n+  consensus enforcement: <http://litecoin.sipa.be/ver-50k.png>\n \n - Block versions over the last 2,000 blocks showing the days to the\n-  earliest possible BIP65 consensus-enforced block: <http://bitcoin.sipa.be/ver-2k.png>\n+  earliest possible BIP65 consensus-enforced block: <http://litecoin.sipa.be/ver-2k.png>\n \n-**Notice to miners:** Bitcoin Core\u2019s block templates are now for\n+**Notice to miners:** Litecoin Core\u2019s block templates are now for\n version 4 blocks only, and any mining software relying on its\n getblocktemplate must be updated in parallel to use libblkmaker either\n version 0.4.3 or any version from 0.5.2 onward.\n \n - If you are solo mining, this will affect you the moment you upgrade\n-  Bitcoin Core, which must be done prior to BIP65 achieving its 951/1001\n+  Litecoin Core, which must be done prior to BIP65 achieving its 951/1001\n   status.\n \n - If you are mining with the stratum mining protocol: this does not\n@@ -95,12 +95,12 @@ version 0.4.3 or any version from 0.5.2 onward.\n   will affect you at the pool operator\u2019s discretion, which must be no\n   later than BIP65 achieving its 951/1001 status.\n \n-[BIP65]: https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki\n+[BIP65]: https://github.com/litecoin/bips/blob/master/bip-0065.mediawiki\n \n BIP113 mempool-only locktime enforcement using GetMedianTimePast()\n ----------------------------------------------------------------\n \n-Bitcoin transactions currently may specify a locktime indicating when\n+Litecoin transactions currently may specify a locktime indicating when\n they may be added to a valid block.  Current consensus rules require\n that blocks have a block header time greater than the locktime specified\n in any transaction in that block.\n@@ -143,19 +143,19 @@ forward. To compensate, subtract one hour (3,600 seconds) from your\n locktimes to allow those transactions to be included in mempools at\n approximately the expected time.\n \n-[BIP113]: https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki\n+[BIP113]: https://github.com/litecoin/bips/blob/master/bip-0113.mediawiki\n \n Windows bug fix for corrupted UTXO database on unclean shutdowns\n ----------------------------------------------------------------\n \n Several Windows users reported that they often need to reindex the\n-entire blockchain after an unclean shutdown of Bitcoin Core on Windows\n+entire blockchain after an unclean shutdown of Litecoin Core on Windows\n (or an unclean shutdown of Windows itself). Although unclean shutdowns\n remain unsafe, this release no longer relies on memory-mapped files for\n the UTXO database, which significantly reduced the frequency of unclean\n shutdowns leading to required reindexes during testing.\n \n-For more information, see: <https://github.com/bitcoin/bitcoin/pull/6917>\n+For more information, see: <https://github.com/wangxinxi/litecoin/pull/6917>\n \n Other fixes for database corruption on Windows are expected in the\n next major release.\n@@ -176,8 +176,8 @@ git merge commit are mentioned.\n - #6351 `6af25b0` Add BIP65 to getblockchaininfo softforks list\n - #6688 `01878c9` Fix locking in GetTransaction\n - #6653 `b3eaa30` [Qt] Raise debug window when requested\n-- #6600 `1e672ae` Debian/Ubuntu: Include bitcoin-tx binary\n-- #6600 `2394f4d` Debian/Ubuntu: Split bitcoin-tx into its own package\n+- #6600 `1e672ae` Debian/Ubuntu: Include litecoin-tx binary\n+- #6600 `2394f4d` Debian/Ubuntu: Split litecoin-tx into its own package\n - #5987 `33d6825` Bugfix: Allow mining on top of old tip blocks for testnet\n - #6852 `21e58b8` build: make sure OpenSSL heeds noexecstack\n - #6846 `af6edac` alias `-h` for `--help`\n@@ -214,4 +214,4 @@ Thanks to everyone who directly contributed to this release:\n \n And those who contributed additional code review and/or security research.\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/litecoin/)."
      },
      {
        "sha": "c66655dea6b18ebf9339679fa7138bee360b4a84",
        "filename": "doc/release-notes/release-notes-0.12.0.md",
        "status": "modified",
        "additions": 51,
        "deletions": 51,
        "changes": 102,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.12.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.12.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.12.0.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,12 +1,12 @@\n-Bitcoin Core version 0.12.0 is now available from:\n+Litecoin Core version 0.12.0 is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.12.0/>\n+  <https://litecoin.org/bin/litecoin-core-0.12.0/>\n \n This is a new major version release, bringing new features and other improvements.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/wangxinxi/litecoin/issues>\n \n Upgrading and downgrading\n =========================\n@@ -16,8 +16,8 @@ How to Upgrade\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Litecoin-Qt (on Mac) or\n+litecoind/litecoin-qt (on Linux).\n \n Downgrade warning\n -----------------\n@@ -26,7 +26,7 @@ Downgrade warning\n \n Because release 0.10.0 and later makes use of headers-first synchronization and\n parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+backwards-compatible with pre-0.10 versions of Litecoin Core or other software:\n \n * Blocks will be stored on disk out of order (in the order they are\n received, really), which makes it incompatible with some tools or\n@@ -48,10 +48,10 @@ This does not affect wallet forward or backward compatibility.\n \n Because release 0.12.0 and later will obfuscate the chainstate on every\n fresh sync or reindex, the chainstate is not backwards-compatible with\n-pre-0.12 versions of Bitcoin Core or other software.\n+pre-0.12 versions of Litecoin Core or other software.\n \n If you want to downgrade after you have done a reindex with 0.12.0 or later,\n-you will need to reindex when you first start Bitcoin Core version 0.11 or\n+you will need to reindex when you first start Litecoin Core version 0.11 or\n earlier.\n \n Notable changes\n@@ -60,8 +60,8 @@ Notable changes\n Signature validation using libsecp256k1\n ---------------------------------------\n \n-ECDSA signatures inside Bitcoin transactions now use validation using\n-[libsecp256k1](https://github.com/bitcoin-core/secp256k1) instead of OpenSSL.\n+ECDSA signatures inside Litecoin transactions now use validation using\n+[libsecp256k1](https://github.com/litecoin-core/secp256k1) instead of OpenSSL.\n \n Depending on the platform, this means a significant speedup for raw signature\n validation speed. The advantage is largest on x86_64, where validation is over\n@@ -98,7 +98,7 @@ Direct headers announcement (BIP 130)\n -------------------------------------\n \n Between compatible peers, [BIP 130]\n-(https://github.com/bitcoin/bips/blob/master/bip-0130.mediawiki)\n+(https://github.com/litecoin/bips/blob/master/bip-0130.mediawiki)\n direct headers announcement is used. This means that blocks are advertised by\n announcing their headers directly, instead of just announcing the hash. In a\n reorganization, all new headers are sent, instead of just the new tip. This\n@@ -107,15 +107,15 @@ can often prevent an extra roundtrip before the actual block is downloaded.\n Memory pool limiting\n --------------------\n \n-Previous versions of Bitcoin Core had their mempool limited by checking\n+Previous versions of Litecoin Core had their mempool limited by checking\n a transaction's fees against the node's minimum relay fee. There was no\n upper bound on the size of the mempool and attackers could send a large\n number of transactions paying just slighly more than the default minimum\n relay fee to crash nodes with relatively low RAM. A temporary workaround\n-for previous versions of Bitcoin Core was to raise the default minimum\n+for previous versions of Litecoin Core was to raise the default minimum\n relay fee.\n \n-Bitcoin Core 0.12 will have a strict maximum size on the mempool. The\n+Litecoin Core 0.12 will have a strict maximum size on the mempool. The\n default value is 300 MB and can be configured with the `-maxmempool`\n parameter. Whenever a transaction would cause the mempool to exceed\n its maximum size, the transaction that (along with in-mempool descendants) has\n@@ -124,7 +124,7 @@ minimum relay feerate will be increased to match this feerate plus the initial\n minimum relay feerate. The initial minimum relay feerate is set to\n 1000 satoshis per kB.\n \n-Bitcoin Core 0.12 also introduces new default policy limits on the length and\n+Litecoin Core 0.12 also introduces new default policy limits on the length and\n size of unconfirmed transaction chains that are allowed in the mempool\n (generally limiting the length of unconfirmed chains to 25 transactions, with a\n total size of 101 KB).  These limits can be overriden using command line\n@@ -134,11 +134,11 @@ Opt-in Replace-by-fee transactions\n ----------------------------------\n \n It is now possible to replace transactions in the transaction memory pool of\n-Bitcoin Core 0.12 nodes. Bitcoin Core will only allow replacement of\n+Litecoin Core 0.12 nodes. Litecoin Core will only allow replacement of\n transactions which have any of their inputs' `nSequence` number set to less\n than `0xffffffff - 1`.  Moreover, a replacement transaction may only be\n accepted when it pays sufficient fee, as described in [BIP 125]\n-(https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki).\n+(https://github.com/litecoin/bips/blob/master/bip-0125.mediawiki).\n \n Transaction replacement can be disabled with a new command line option,\n `-mempoolreplacement=0`.  Transactions signaling replacement under BIP125 will\n@@ -156,7 +156,7 @@ updated RPC calls `gettransaction` and `listtransactions`, which now have an\n additional field in the output indicating if a transaction is replaceable under\n BIP125 (\"bip125-replaceable\").\n \n-Note that the wallet in Bitcoin Core 0.12 does not yet have support for\n+Note that the wallet in Litecoin Core 0.12 does not yet have support for\n creating transactions that would be replaceable under BIP 125.\n \n \n@@ -173,7 +173,7 @@ overridden with the option `-rpccookiefile`.\n This is similar to Tor's CookieAuthentication: see\n https://www.torproject.org/docs/tor-manual.html.en\n \n-This allows running bitcoind without having to do any manual configuration.\n+This allows running litecoind without having to do any manual configuration.\n \n Relay: Any sequence of pushdatas in OP_RETURN outputs now allowed\n -----------------------------------------------------------------\n@@ -196,14 +196,14 @@ returned (previously all relevant hashes were returned).\n Relay and Mining: Priority transactions\n ---------------------------------------\n \n-Bitcoin Core has a heuristic 'priority' based on coin value and age. This\n+Litecoin Core has a heuristic 'priority' based on coin value and age. This\n calculation is used for relaying of transactions which do not pay the\n minimum relay fee, and can be used as an alternative way of sorting\n-transactions for mined blocks. Bitcoin Core will relay transactions with\n+transactions for mined blocks. Litecoin Core will relay transactions with\n insufficient fees depending on the setting of `-limitfreerelay=<r>` (default:\n `r=15` kB per minute) and `-blockprioritysize=<s>`.\n \n-In Bitcoin Core 0.12, when mempool limit has been reached a higher minimum\n+In Litecoin Core 0.12, when mempool limit has been reached a higher minimum\n relay fee takes effect to limit memory usage. Transactions which do not meet\n this higher effective minimum relay fee will not be relayed or mined even if\n they rank highly according to the priority heuristic.\n@@ -224,7 +224,7 @@ Note, however, that if mining priority transactions is left disabled, the\n priority delta will be ignored and only the fee metric will be effective.\n \n This internal automatic prioritization handling is being considered for removal\n-entirely in Bitcoin Core 0.13, and it is at this time undecided whether the\n+entirely in Litecoin Core 0.13, and it is at this time undecided whether the\n more accurate priority calculation for chained unconfirmed transactions will be\n restored. Community direction on this topic is particularly requested to help\n set project priorities.\n@@ -234,23 +234,23 @@ Automatically use Tor hidden services\n \n Starting with Tor version 0.2.7.1 it is possible, through Tor's control socket\n API, to create and destroy 'ephemeral' hidden services programmatically.\n-Bitcoin Core has been updated to make use of this.\n+Litecoin Core has been updated to make use of this.\n \n This means that if Tor is running (and proper authorization is available),\n-Bitcoin Core automatically creates a hidden service to listen on, without\n-manual configuration. Bitcoin Core will also use Tor automatically to connect\n+Litecoin Core automatically creates a hidden service to listen on, without\n+manual configuration. Litecoin Core will also use Tor automatically to connect\n to other .onion nodes if the control socket can be successfully opened. This\n will positively affect the number of available .onion nodes and their usage.\n \n-This new feature is enabled by default if Bitcoin Core is listening, and\n+This new feature is enabled by default if Litecoin Core is listening, and\n a connection to Tor can be made. It can be configured with the `-listenonion`,\n `-torcontrol` and `-torpassword` settings. To show verbose debugging\n information, pass `-debug=tor`.\n \n Notifications through ZMQ\n -------------------------\n \n-Bitcoind can now (optionally) asynchronously notify clients through a\n+Litecoind can now (optionally) asynchronously notify clients through a\n ZMQ-based PUB socket of the arrival of new transactions and blocks.\n This feature requires installation of the ZMQ C API library 4.x and\n configuring its use through the command line or configuration file.\n@@ -263,8 +263,8 @@ Various improvements have been made to how the wallet calculates\n transaction fees.\n \n Users can decide to pay a predefined fee rate by setting `-paytxfee=<n>`\n-(or `settxfee <n>` rpc during runtime). A value of `n=0` signals Bitcoin\n-Core to use floating fees. By default, Bitcoin Core will use floating\n+(or `settxfee <n>` rpc during runtime). A value of `n=0` signals Litecoin\n+Core to use floating fees. By default, Litecoin Core will use floating\n fees.\n \n Based on past transaction data, floating fees approximate the fees\n@@ -275,9 +275,9 @@ Sometimes, it is not possible to give good estimates, or an estimate\n at all. Therefore, a fallback value can be set with `-fallbackfee=<f>`\n (default: `0.0002` BTC/kB).\n \n-At all times, Bitcoin Core will cap fees at `-maxtxfee=<x>` (default:\n+At all times, Litecoin Core will cap fees at `-maxtxfee=<x>` (default:\n 0.10) BTC.\n-Furthermore, Bitcoin Core will never create transactions paying less than\n+Furthermore, Litecoin Core will never create transactions paying less than\n the current minimum relay fee.\n Finally, a user can set the minimum fee rate for all transactions with\n `-mintxfee=<i>`, which defaults to 1000 satoshis per kB.\n@@ -320,7 +320,7 @@ However, rescans as well as the RPCs `importwallet`, `importaddress`,\n `importprivkey` are disabled.\n \n To enable block pruning set `prune=<N>` on the command line or in\n-`bitcoin.conf`, where `N` is the number of MiB to allot for\n+`litecoin.conf`, where `N` is the number of MiB to allot for\n raw block & undo data.\n \n A value of 0 disables pruning. The minimal value above 0 is 550. Your\n@@ -331,13 +331,13 @@ practice. In future releases, a higher value may also help the network\n as a whole: stored blocks could be served to other nodes.\n \n For further information about pruning, you may also consult the [release\n-notes of v0.11.0](https://github.com/bitcoin/bitcoin/blob/v0.11.0/doc/release-notes.md#block-file-pruning).\n+notes of v0.11.0](https://github.com/wangxinxi/litecoin/blob/v0.11.0/doc/release-notes.md#block-file-pruning).\n \n `NODE_BLOOM` service bit\n ------------------------\n \n Support for the `NODE_BLOOM` service bit, as described in [BIP\n-111](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki), has been\n+111](https://github.com/litecoin/bips/blob/master/bip-0111.mediawiki), has been\n added to the P2P protocol code.\n \n BIP 111 defines a service bit to allow peers to advertise that they support\n@@ -369,7 +369,7 @@ RPC: Low-level API changes\n * The `asm` property of each scriptSig now contains the decoded signature hash\n   type for each signature that provides a valid defined hash type.\n \n-* OP_NOP2 has been renamed to OP_CHECKLOCKTIMEVERIFY by [BIP 65](https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki)\n+* OP_NOP2 has been renamed to OP_CHECKLOCKTIMEVERIFY by [BIP 65](https://github.com/litecoin/bips/blob/master/bip-0065.mediawiki)\n \n The following items contain assembly representations of scriptSig signatures\n and are affected by this change:\n@@ -379,7 +379,7 @@ and are affected by this change:\n - RPC `decodescript`\n - REST `/rest/tx/` (JSON format)\n - REST `/rest/block/` (JSON format when including extended tx details)\n-- `bitcoin-tx -json`\n+- `litecoin-tx -json`\n \n For example, the `scriptSig.asm` property of a transaction input that\n previously showed an assembly representation of:\n@@ -429,16 +429,16 @@ caching. A sample config for apache2 could look like:\n     SSLCertificateFile /etc/apache2/ssl/server.crt\n     SSLCertificateKeyFile /etc/apache2/ssl/server.key\n \n-    <Location /bitcoinrpc>\n+    <Location /litecoinrpc>\n         ProxyPass http://127.0.0.1:8332/\n         ProxyPassReverse http://127.0.0.1:8332/\n         # optional enable digest auth\n         # AuthType Digest\n         # ...\n \n-        # optional bypass bitcoind rpc basic auth\n+        # optional bypass litecoind rpc basic auth\n         # RequestHeader set Authorization \"Basic <hash>\"\n-        # get the <hash> from the shell with: base64 <<< bitcoinrpc:<password>\n+        # get the <hash> from the shell with: base64 <<< litecoinrpc:<password>\n     </Location>\n \n     # Or, balance the load:\n@@ -459,7 +459,7 @@ Other P2P Changes\n -----------------\n \n The list of banned peers is now stored on disk rather than in memory.\n-Restarting bitcoind will no longer clear out the list of banned peers; instead\n+Restarting litecoind will no longer clear out the list of banned peers; instead\n a new RPC call (`clearbanned`) can be used to manually clear the list.  The new\n `setban` RPC call can also be used to manually ban or unban a peer.\n \n@@ -637,14 +637,14 @@ git merge commit are mentioned.\n ### Build system\n \n - #6210 `0e4f2a0` build: disable optional use of gmp in internal secp256k1 build (Wladimir J. van der Laan)\n-- #6214 `87406aa` [OSX] revert renaming of Bitcoin-Qt.app and use CFBundleDisplayName (partial revert of #6116) (Jonas Schnelli)\n+- #6214 `87406aa` [OSX] revert renaming of Litecoin-Qt.app and use CFBundleDisplayName (partial revert of #6116) (Jonas Schnelli)\n - #6218 `9d67b10` build/gitian misc updates (Cory Fields)\n-- #6269 `d4565b6` gitian: Use the new bitcoin-detached-sigs git repo for OSX signatures (Cory Fields)\n+- #6269 `d4565b6` gitian: Use the new litecoin-detached-sigs git repo for OSX signatures (Cory Fields)\n - #6418 `d4a910c` Add autogen.sh to source tarball. (randy-waterhouse)\n - #6373 `1ae3196` depends: non-qt bumps for 0.12 (Cory Fields)\n - #6434 `059b352` Preserve user-passed CXXFLAGS with --enable-debug (Gavin Andresen)\n - #6501 `fee6554` Misc build fixes (Cory Fields)\n-- #6600 `ef4945f` Include bitcoin-tx binary on Debian/Ubuntu (Zak Wilcox)\n+- #6600 `ef4945f` Include litecoin-tx binary on Debian/Ubuntu (Zak Wilcox)\n - #6619 `4862708` depends: bump miniupnpc and ccache (Michael Ford)\n - #6801 `ae69a75` [depends] Latest config.guess and config.sub (Michael Ford)\n - #6938 `193f7b5` build: If both Qt4 and Qt5 are installed, use Qt5 (Wladimir J. van der Laan)\n@@ -719,7 +719,7 @@ git merge commit are mentioned.\n - #6337 `0564c5b` Testing infrastructure: mocktime fixes (Gavin Andresen)\n - #6350 `60abba1` add unit tests for the decodescript rpc (mruddy)\n - #5881 `3203a08` Fix and improve txn_doublespend.py test (Tom Harding)\n-- #6390 `6a73d66` tests: Fix bitcoin-tx signing test case (Wladimir J. van der Laan)\n+- #6390 `6a73d66` tests: Fix litecoin-tx signing test case (Wladimir J. van der Laan)\n - #6368 `7fc25c2` CLTV: Add more tests to improve coverage (Esteban Ordano)\n - #6414 `5121c68` Fix intermittent test failure, reduce test time (Tom Harding)\n - #6417 `44fa82d` [QA] fix possible reorg issue in (fund)rawtransaction(s).py RPC test (Jonas Schnelli)\n@@ -732,7 +732,7 @@ git merge commit are mentioned.\n - #6509 `bb4faee` Fix race condition on test node shutdown (Casey Rodarmor)\n - #6523 `561f8af` Add p2p-fullblocktest.py (Casey Rodarmor)\n - #6590 `981fd92` Fix stale socket rebinding and re-enable python tests for Windows (Cory Fields)\n-- #6730 `cb4d6d0` build: Remove dependency of bitcoin-cli on secp256k1 (Wladimir J. van der Laan)\n+- #6730 `cb4d6d0` build: Remove dependency of litecoin-cli on secp256k1 (Wladimir J. van der Laan)\n - #6616 `5ab5dca` Regression Tests: Migrated rpc-tests.sh to all Python rpc-tests.py (Peter Tschipper)\n - #6720 `d479311` Creates unittests for addrman, makes addrman more testable. (Ethan Heilman)\n - #6853 `c834f56` Added fPowNoRetargeting field to Consensus::Params (Eric Lombrozo)\n@@ -750,7 +750,7 @@ git merge commit are mentioned.\n - #7063 `6abf6eb` [Tests] Add prioritisetransaction RPC test (Suhas Daftuar)\n - #7137 `16f4a6e` Tests: Explicitly set chain limits in replace-by-fee test (Suhas Daftuar)\n - #7216 `9572e49` Removed offline testnet DNSSeed 'alexykot.me'. (tnull)\n-- #7209 `f3ad812` test: don't override BITCOIND and BITCOINCLI if they're set (Wladimir J. van der Laan)\n+- #7209 `f3ad812` test: don't override LITECOIND and LITECOINCLI if they're set (Wladimir J. van der Laan)\n - #7226 `301f16a` Tests: Add more tests to p2p-fullblocktest (Suhas Daftuar)\n - #7153 `9ef7c54` [Tests] Add mempool_limit.py test (Jonas Schnelli)\n - #7170 `453c567` tests: Disable Tor interaction (Wladimir J. van der Laan)\n@@ -764,9 +764,9 @@ git merge commit are mentioned.\n - #5975 `1fea667` Consensus: Decouple ContextualCheckBlockHeader from checkpoints (Jorge Tim\u00f3n)\n - #6061 `eba2f06` Separate Consensus::CheckTxInputs and GetSpendHeight in CheckInputs (Jorge Tim\u00f3n)\n - #5994 `786ed11` detach wallet from miner (Jonas Schnelli)\n-- #6387 `11576a5` [bitcoin-cli] improve error output (Jonas Schnelli)\n-- #6401 `6db53b4` Add BITCOIND_SIGTERM_TIMEOUT to OpenRC init scripts (Florian Schmaus)\n-- #6430 `b01981e` doc: add documentation for shared library libbitcoinconsensus (Braydon Fuller)\n+- #6387 `11576a5` [litecoin-cli] improve error output (Jonas Schnelli)\n+- #6401 `6db53b4` Add LITECOIND_SIGTERM_TIMEOUT to OpenRC init scripts (Florian Schmaus)\n+- #6430 `b01981e` doc: add documentation for shared library liblitecoinconsensus (Braydon Fuller)\n - #6372 `dcc495e` Update Linearize tool to support Windows paths; fix variable scope; update README and example configuration (Paul Georgiou)\n - #6453 `8fe5cce` Separate core memory usage computation in core_memusage.h (Pieter Wuille)\n - #6149 `633fe10` Buffer log messages and explicitly open logs (Adam Weiss)\n@@ -891,4 +891,4 @@ Thanks to everyone who directly contributed to this release:\n - Zak Wilcox\n - zathras-crypto\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/litecoin/)."
      },
      {
        "sha": "f530215521434f9a357dda820accb36cd6b6b16a",
        "filename": "doc/release-notes/release-notes-0.3.12.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.3.12.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.3.12.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.12.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -7,7 +7,7 @@ Features:\n * Recovers and continues if an exception is caused by a message you received.  Other nodes shouldn't be able to cause an exception, and it hasn't happened before, but if a way is found to cause an exception, this would keep it from being used to stop network nodes.\n \n If you have json-rpc code that checks the contents of the error string, you need to change it to expect error objects of the form {\"code\":<number>,\"message\":<string>}, which is the standard.  See this thread:\n-http://www.bitcoin.org/smf/index.php?topic=969.0\n+http://www.litecoin.org/smf/index.php?topic=969.0\n \n Download:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.12/\n+http://sourceforge.net/projects/litecoin/files/Litecoin/litecoin-0.3.12/"
      },
      {
        "sha": "2cd585b06cf016c17bf5961df952824071dc6154",
        "filename": "doc/release-notes/release-notes-0.3.13.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.3.13.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.3.13.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.13.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -12,15 +12,15 @@ Gavin Andresen:\n * Clean shutdown on SIGTERM on Linux.\n \n Download:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.13/\n+http://sourceforge.net/projects/litecoin/files/Litecoin/litecoin-0.3.13/\n \n (Thanks Laszlo for the Mac OSX build!)\n \n Note:\n The SSE2 auto-detect in the Linux 64-bit version doesn't work with AMD in 64-bit mode.  Please try this instead and let me know if it gets it right:\n-http://www.bitcoin.org/download/bitcoin-0.3.13.1-specialbuild-linux64.tar.gz\n+http://www.litecoin.org/download/litecoin-0.3.13.1-specialbuild-linux64.tar.gz\n \n You can still control the SSE2 use manually with -4way and -4way=0.\n \n Version 0.3.13.2 (SVN rev 161) has improvements for the case where you already had 0/unconfirmed transactions that you might have already spent.  Here's a Windows build of it:\n-http://www.bitcoin.org/download/bitcoin-0.3.13.2-win32-setup.exe\n+http://www.litecoin.org/download/litecoin-0.3.13.2-win32-setup.exe"
      },
      {
        "sha": "2e748a87987db890c3df1f1b32044e3866ab057e",
        "filename": "doc/release-notes/release-notes-0.3.14.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.3.14.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.3.14.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.14.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n Version 0.3.14 is now available\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.14/\n+http://sourceforge.net/projects/litecoin/files/Litecoin/litecoin-0.3.14/\n \n Changes:\n * Key pool feature for safer wallet backup"
      },
      {
        "sha": "be635eef0eef53827328a54c2903a6f3e1b6ebfb",
        "filename": "doc/release-notes/release-notes-0.3.15.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.3.15.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.3.15.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.15.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,6 +1,6 @@\n * paytxfee switch is now per KB, so it adds the correct fee for large transactions\n * sending avoids using coins with less than 6 confirmations if it can\n-* BitcoinMiner processes transactions in priority order based on age of dependencies\n+* LitecoinMiner processes transactions in priority order based on age of dependencies\n * make sure generation doesn't start before block 74000 downloaded\n * bugfixes by Dean Gores\n * testnet, keypoololdest and paytxfee added to getinfo"
      },
      {
        "sha": "db6e30bf825ad4b79b792b13f069abc3daa8bcbe",
        "filename": "doc/release-notes/release-notes-0.3.18.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.3.18.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.3.18.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.18.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -3,7 +3,7 @@ Changes:\n * IsStandard() check to only include known transaction types in blocks\n * Jgarzik's optimisation to speed up the initial block download a little\n \n-The main addition in this release is the Accounts-Based JSON-RPC commands that Gavin's been working on (more details at http://www.bitcoin.org/smf/index.php?topic=1886.0).  \n+The main addition in this release is the Accounts-Based JSON-RPC commands that Gavin's been working on (more details at http://www.litecoin.org/smf/index.php?topic=1886.0).  \n * getaccountaddress\n * sendfrom\n * move"
      },
      {
        "sha": "ff996c0b6f23d97100614933667db59d527e2ed9",
        "filename": "doc/release-notes/release-notes-0.3.20.2.md",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.3.20.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.3.20.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.20.2.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -3,13 +3,13 @@ worse as people upgraded, so I cherry-picked the bug fix and created a minor rel\n \n The Amazon Machine Images I used to do the builds are available:\n \n-  ami-38a05251   Bitcoin-v0.3.20.2 Mingw    (Windows; Administrator password 'bitcoin development')\n-  ami-30a05259   Bitcoin_0.3.20.2 Linux32\n-  ami-8abc4ee3   Bitcoin_0.3.20.2 Linux64\n+  ami-38a05251   Litecoin-v0.3.20.2 Mingw    (Windows; Administrator password 'litecoin development')\n+  ami-30a05259   Litecoin_0.3.20.2 Linux32\n+  ami-8abc4ee3   Litecoin_0.3.20.2 Linux64\n \n (mac build will be done soon)\n \n-If you have already downloaded version 0.3.20.1, please either add this to your bitcoin.conf file:\n+If you have already downloaded version 0.3.20.1, please either add this to your litecoin.conf file:\n \n   maxsendbuffer=10000\n   maxreceivebuffer=10000"
      },
      {
        "sha": "5e97649204417f891a3c4f89499b5c6e57113e89",
        "filename": "doc/release-notes/release-notes-0.3.20.md",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.3.20.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.3.20.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.20.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,22 +1,22 @@\n Please checkout the git integration branch from:\n \n-https://github.com/bitcoin/bitcoin\n+https://github.com/wangxinxi/litecoin\n \n ... and help test.  The new features that need testing are:\n \n-* -nolisten : https://github.com/bitcoin/bitcoin/pull/11\n+* -nolisten : https://github.com/wangxinxi/litecoin/pull/11\n * -rescan : scan block chain for missing wallet transactions\n-* -printtoconsole : https://github.com/bitcoin/bitcoin/pull/37\n-* RPC gettransaction details : https://github.com/bitcoin/bitcoin/pull/24\n-* listtransactions new features : https://github.com/bitcoin/bitcoin/pull/10\n+* -printtoconsole : https://github.com/wangxinxi/litecoin/pull/37\n+* RPC gettransaction details : https://github.com/wangxinxi/litecoin/pull/24\n+* listtransactions new features : https://github.com/wangxinxi/litecoin/pull/10\n \n Bug fixes that also need testing:\n \n-* -maxconnections= : https://github.com/bitcoin/bitcoin/pull/42\n-* RPC listaccounts minconf : https://github.com/bitcoin/bitcoin/pull/27\n-* RPC move, add time to output : https://github.com/bitcoin/bitcoin/pull/21\n+* -maxconnections= : https://github.com/wangxinxi/litecoin/pull/42\n+* RPC listaccounts minconf : https://github.com/wangxinxi/litecoin/pull/27\n+* RPC move, add time to output : https://github.com/wangxinxi/litecoin/pull/21\n * ...and several improvements to --help output.\n \n This needs more testing on Windows!  Please drop me a quick private message, email, or IRC message if you are able to do some testing.  If you find bugs, please open an issue at:\n \n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/wangxinxi/litecoin/issues"
      },
      {
        "sha": "da47673da0b554ff0d07bdfde7dd7db29ac4ccb1",
        "filename": "doc/release-notes/release-notes-0.3.21.md",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.3.21.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.3.21.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.21.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,19 +1,19 @@\n-Binaries for Bitcoin version 0.3.21 are available at:\n-  https://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.21/\n+Binaries for Litecoin version 0.3.21 are available at:\n+  https://sourceforge.net/projects/litecoin/files/Litecoin/litecoin-0.3.21/\n \n Changes and new features from the 0.3.20 release include:\n \n-* Universal Plug and Play support.  Enable automatic opening of a port for incoming connections by running bitcoin or bitcoind with the - -upnp=1 command line switch or using the Options dialog box.\n+* Universal Plug and Play support.  Enable automatic opening of a port for incoming connections by running litecoin or litecoind with the - -upnp=1 command line switch or using the Options dialog box.\n \n-* Support for full-precision bitcoin amounts.  You can now send, and bitcoin will display, bitcoin amounts smaller than 0.01.  However, sending fewer than 0.01 bitcoins still requires a 0.01 bitcoin fee (so you can send 1.0001 bitcoins without a fee, but you will be asked to pay a fee if you try to send 0.0001).\n+* Support for full-precision litecoin amounts.  You can now send, and litecoin will display, litecoin amounts smaller than 0.01.  However, sending fewer than 0.01 litecoins still requires a 0.01 litecoin fee (so you can send 1.0001 litecoins without a fee, but you will be asked to pay a fee if you try to send 0.0001).\n \n-* A new method of finding bitcoin nodes to connect with, via DNS A records. Use the -dnsseed option to enable.\n+* A new method of finding litecoin nodes to connect with, via DNS A records. Use the -dnsseed option to enable.\n \n-For developers, changes to bitcoin's remote-procedure-call API:\n+For developers, changes to litecoin's remote-procedure-call API:\n \n-* New rpc command \"sendmany\" to send bitcoins to more than one address in a single transaction.\n+* New rpc command \"sendmany\" to send litecoins to more than one address in a single transaction.\n \n-* Several bug fixes, including a serious intermittent bug that would sometimes cause bitcoind to stop accepting rpc requests. \n+* Several bug fixes, including a serious intermittent bug that would sometimes cause litecoind to stop accepting rpc requests. \n \n * -logtimestamps option, to add a timestamp to each line in debug.log.\n "
      },
      {
        "sha": "98c4c21d38e9416b417925660c2e2d9435eeaf58",
        "filename": "doc/release-notes/release-notes-0.3.22.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.3.22.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.3.22.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.22.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,4 +1,4 @@\n-Download URL: https://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.22/\n+Download URL: https://sourceforge.net/projects/litecoin/files/Litecoin/litecoin-0.3.22/\n \n This is largely a bugfix and TX fee schedule release.  We also hope to make 0.3.23 a quick release, to fix problems that the network has seen due to explosive growth in the past week.\n \n@@ -7,7 +7,7 @@ Notable changes:\n * Non-standard transactions accepted on testnet\n * Source code tree reorganized (prep for autotools build)\n * Remove \"Generate Coins\" option from GUI, and remove 4way SSE miner.  Internal reference CPU miner remains available, but users are directed to external miners for best hash production.\n-* IRC is overflowing.  Client now bootstraps to channels #bitcoin00 - #bitcoin99\n+* IRC is overflowing.  Client now bootstraps to channels #litecoin00 - #litecoin99\n * DNS names now may be used with -addnode, -connect (requires -dns to enable)\n \n RPC changes:"
      },
      {
        "sha": "addea2368154fb3dafdf1b2ed922701dde11ab96",
        "filename": "doc/release-notes/release-notes-0.3.23.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.3.23.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.3.23.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.23.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,7 +1,7 @@\n-Win32, Linux, MacOSX and source releases for bitcoin v0.3.23 have been uploaded to\n-https://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.23/\n+Win32, Linux, MacOSX and source releases for litecoin v0.3.23 have been uploaded to\n+https://sourceforge.net/projects/litecoin/files/Litecoin/litecoin-0.3.23/\n \n-This is another quick bugfix release, trying to deal with the influx of new bitcoin users.\n+This is another quick bugfix release, trying to deal with the influx of new litecoin users.\n \n Main items of note:\n "
      },
      {
        "sha": "a0fd774b4e29cca1ae5f32446550cdb1ec373afa",
        "filename": "doc/release-notes/release-notes-0.3.24.md",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.3.24.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.3.24.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.24.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,7 +1,7 @@\n-Bitcoin v0.3.24 is now available for download at\n-https://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.24/\n+Litecoin v0.3.24 is now available for download at\n+https://sourceforge.net/projects/litecoin/files/Litecoin/litecoin-0.3.24/\n \n-This is another bug fix release.  We had hoped to have wallet encryption ready for release, but more urgent fixes for existing clients were needed -- most notably block download problems were getting severe.  Wallet encryption is ready for testing at https://github.com/bitcoin/bitcoin/pull/352 for the git-savvy, and hopefully will follow shortly in the next release, v0.4.\n+This is another bug fix release.  We had hoped to have wallet encryption ready for release, but more urgent fixes for existing clients were needed -- most notably block download problems were getting severe.  Wallet encryption is ready for testing at https://github.com/wangxinxi/litecoin/pull/352 for the git-savvy, and hopefully will follow shortly in the next release, v0.4.\n \n Notable fixes in v0.3.24, and the main reasons for this release:\n \n@@ -13,8 +13,8 @@ Notable changes in v0.3.24:\n \n C1) DNS seeding enabled by default.\n \n-C2) UPNP enabled by default in the GUI client.  The percentage of bitcoin clients that accept incoming connections is quite small, and that is a problem.  This should help.  bitcoind, and unofficial builds, are unchanged (though we encourage use of \"-upnp\" to help the network!)\n+C2) UPNP enabled by default in the GUI client.  The percentage of litecoin clients that accept incoming connections is quite small, and that is a problem.  This should help.  litecoind, and unofficial builds, are unchanged (though we encourage use of \"-upnp\" to help the network!)\n \n-C3) Initial unit testing framework.  Bitcoin sorely needs automated tests, and this is a beginning.  Contributions welcome.\n+C3) Initial unit testing framework.  Litecoin sorely needs automated tests, and this is a beginning.  Contributions welcome.\n \n C4) Internal wallet code cleanup.  While invisible to an end user, this change provides the basis for v0.4's wallet encryption."
      },
      {
        "sha": "582f6accd6d4939f71400967dc9cfec13996eb73",
        "filename": "doc/release-notes/release-notes-0.4.0.md",
        "status": "modified",
        "additions": 24,
        "deletions": 24,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.4.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.4.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.0.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,24 +1,24 @@\n-Bitcoin version 0.4.0 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.4.0/\n+Litecoin version 0.4.0 is now available for download at:\n+http://sourceforge.net/projects/litecoin/files/Litecoin/litecoin-0.4.0/\n \n The main feature in this release is wallet private key encryption;\n you can set a passphrase that must be entered before sending coins.\n See below for more information; if you decide to encrypt your wallet,\n WRITE DOWN YOUR PASSPHRASE AND PUT IT IN A SECURE LOCATION. If you\n-forget or lose your wallet passphrase, you lose your bitcoins.\n-Previous versions of bitcoin are unable to read encrypted wallets,\n+forget or lose your wallet passphrase, you lose your litecoins.\n+Previous versions of litecoin are unable to read encrypted wallets,\n and will crash on startup if the wallet is encrypted.\n \n-Also note: bitcoin version 0.4 uses a newer version of Berkeley DB\n+Also note: litecoin version 0.4 uses a newer version of Berkeley DB\n (bdb version 4.8) than previous versions (bdb 4.7). If you upgrade\n-to version 0.4 and then revert back to an earlier version of bitcoin\n+to version 0.4 and then revert back to an earlier version of litecoin\n the it may be unable to start because bdb 4.7 cannot read bdb 4.8\n \"log\" files.\n \n \n Notable bug fixes from version 0.3.24:\n \n-Fix several bitcoin-becomes-unresponsive bugs due to multithreading\n+Fix several litecoin-becomes-unresponsive bugs due to multithreading\n deadlocks.\n \n Optimize database writes for large (lots of inputs) transactions\n@@ -27,44 +27,44 @@ Optimize database writes for large (lots of inputs) transactions\n \n Wallet Encryption\n \n-Bitcoin supports native wallet encryption so that people who steal your\n-wallet file don't automatically get access to all of your Bitcoins.\n+Litecoin supports native wallet encryption so that people who steal your\n+wallet file don't automatically get access to all of your Litecoins.\n In order to enable this feature, choose \"Encrypt Wallet\" from the\n Options menu.  You will be prompted to enter a passphrase, which\n will be used as the key to encrypt your wallet and will be needed\n-every time you wish to send Bitcoins.  If you lose this passphrase,\n-you will lose access to spend all of the bitcoins in your wallet,\n-no one, not even the Bitcoin developers can recover your Bitcoins.\n+every time you wish to send Litecoins.  If you lose this passphrase,\n+you will lose access to spend all of the litecoins in your wallet,\n+no one, not even the Litecoin developers can recover your Litecoins.\n This means you are responsible for your own security, store your\n passphrase in a secure location and do not forget it.\n \n-Remember that the encryption built into bitcoin only encrypts the\n-actual keys which are required to send your bitcoins, not the full\n+Remember that the encryption built into litecoin only encrypts the\n+actual keys which are required to send your litecoins, not the full\n wallet.  This means that someone who steals your wallet file will\n be able to see all the addresses which belong to you, as well as the\n relevant transactions, you are only protected from someone spending\n your coins.\n \n It is recommended that you backup your wallet file before you\n-encrypt your wallet.  To do this, close the Bitcoin client and\n-copy the wallet.dat file from ~/.bitcoin/ on Linux, /Users/(user\n-name)/Application Support/Bitcoin/ on Mac OSX, and %APPDATA%/Bitcoin/\n-on Windows (that is /Users/(user name)/AppData/Roaming/Bitcoin on\n+encrypt your wallet.  To do this, close the Litecoin client and\n+copy the wallet.dat file from ~/.litecoin/ on Linux, /Users/(user\n+name)/Application Support/Litecoin/ on Mac OSX, and %APPDATA%/Litecoin/\n+on Windows (that is /Users/(user name)/AppData/Roaming/Litecoin on\n Windows Vista and 7 and /Documents and Settings/(user name)/Application\n-Data/Bitcoin on Windows XP).  Once you have copied that file to a\n-safe location, reopen the Bitcoin client and Encrypt your wallet.\n+Data/Litecoin on Windows XP).  Once you have copied that file to a\n+safe location, reopen the Litecoin client and Encrypt your wallet.\n If everything goes fine, delete the backup and enjoy your encrypted\n wallet.  Note that once you encrypt your wallet, you will never be\n-able to go back to a version of the Bitcoin client older than 0.4.\n+able to go back to a version of the Litecoin client older than 0.4.\n \n Keep in mind that you are always responsible for your own security.\n All it takes is a slightly more advanced wallet-stealing trojan which\n installs a keylogger to steal your wallet passphrase as you enter it\n-in addition to your wallet file and you have lost all your Bitcoins.\n+in addition to your wallet file and you have lost all your Litecoins.\n Wallet encryption cannot keep you safe if you do not practice\n good security, such as running up-to-date antivirus software, only\n-entering your wallet passphrase in the Bitcoin client and using the\n+entering your wallet passphrase in the Litecoin client and using the\n same passphrase only as your wallet passphrase.\n \n-See the doc/README file in the bitcoin source for technical details\n+See the doc/README file in the litecoin source for technical details\n of wallet encryption."
      },
      {
        "sha": "5ac7c2d30b4e16475a161937474f6aeb03a80afa",
        "filename": "doc/release-notes/release-notes-0.4.1.md",
        "status": "modified",
        "additions": 15,
        "deletions": 15,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.4.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.4.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.1.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,38 +1,38 @@\n-Bitcoin version 0.4.1 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.4.1/\n+Litecoin version 0.4.1 is now available for download at:\n+http://sourceforge.net/projects/litecoin/files/Litecoin/litecoin-0.4.1/\n \n This is a bugfix only release based on 0.4.0.\n \n Please report bugs by replying to this forum thread.\n \n MAJOR BUG FIX  (CVE-2011-4447)\n \n-The wallet encryption feature introduced in Bitcoin version 0.4.0 did not sufficiently secure the private keys. An attacker who\n+The wallet encryption feature introduced in Litecoin version 0.4.0 did not sufficiently secure the private keys. An attacker who\n managed to get a copy of your encrypted wallet.dat file might be able to recover some or all of the unencrypted keys and steal the\n associated coins.\n \n-If you have a previously encrypted wallet.dat, the first time you run wxbitcoin or bitcoind the wallet will be rewritten, Bitcoin will\n+If you have a previously encrypted wallet.dat, the first time you run wxlitecoin or litecoind the wallet will be rewritten, Litecoin will\n shut down, and you will be prompted to restart it to run with the new, properly encrypted file.\n \n If you had a previously encrypted wallet.dat that might have been copied or stolen (for example, you backed it up to a public\n-location) you should send all of your bitcoins to yourself using a new bitcoin address and stop using any previously generated addresses.\n+location) you should send all of your litecoins to yourself using a new litecoin address and stop using any previously generated addresses.\n \n-Wallets encrypted with this version of Bitcoin are written properly.\n+Wallets encrypted with this version of Litecoin are written properly.\n \n-Technical note: the encrypted wallet's 'keypool' will be regenerated the first time you request a new bitcoin address; to be certain that the\n+Technical note: the encrypted wallet's 'keypool' will be regenerated the first time you request a new litecoin address; to be certain that the\n new private keys are properly backed up you should:\n \n-1. Run Bitcoin and let it rewrite the wallet.dat file\n+1. Run Litecoin and let it rewrite the wallet.dat file\n \n-2. Run it again, then ask it for a new bitcoin address.\n-wxBitcoin: new address visible on main window\n-bitcoind: run the 'walletpassphrase' RPC command to unlock the wallet,  then run the 'getnewaddress' RPC command.\n+2. Run it again, then ask it for a new litecoin address.\n+wxLitecoin: new address visible on main window\n+litecoind: run the 'walletpassphrase' RPC command to unlock the wallet,  then run the 'getnewaddress' RPC command.\n \n-3. If your encrypted wallet.dat may have been copied or stolen, send all of your bitcoins to the new bitcoin address.\n+3. If your encrypted wallet.dat may have been copied or stolen, send all of your litecoins to the new litecoin address.\n \n-4. Shut down Bitcoin, then backup the wallet.dat file.\n-IMPORTANT: be sure to request a new bitcoin address before backing up, so that the 'keypool' is regenerated and backed up.\n+4. Shut down Litecoin, then backup the wallet.dat file.\n+IMPORTANT: be sure to request a new litecoin address before backing up, so that the 'keypool' is regenerated and backed up.\n \n-\"Security in depth\" is always a good idea, so choosing a secure location for the backup and/or encrypting the backup before uploading it is recommended. And as in previous releases, if your machine is infected by malware there are several ways an attacker might steal your bitcoins.\n+\"Security in depth\" is always a good idea, so choosing a secure location for the backup and/or encrypting the backup before uploading it is recommended. And as in previous releases, if your machine is infected by malware there are several ways an attacker might steal your litecoins.\n \n Thanks to Alan Reiner (etotheipi) for finding and reporting this bug."
      },
      {
        "sha": "5e5b7db7b01885c06a2b4fbe51fd9b2c6aecfe41",
        "filename": "doc/release-notes/release-notes-0.4.3.md",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.4.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.4.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.3.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,21 +1,21 @@\n-bitcoind version 0.4.3 is now available for download at:\n-http://luke.dashjr.org/programs/bitcoin/files/bitcoind-0.4.3/ (until Gavin uploads to SourceForge)\n+litecoind version 0.4.3 is now available for download at:\n+http://luke.dashjr.org/programs/litecoin/files/litecoind-0.4.3/ (until Gavin uploads to SourceForge)\n \n This is a bugfix-only release based on 0.4.0.\n \n-Please note that the wxBitcoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n+Please note that the wxLitecoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n \n Please report bugs for the daemon only using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/wangxinxi/litecoin/issues\n \n Stable source code is hosted at Gitorious:\n-http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.4.3#.tar.gz\n+http://gitorious.org/litecoin/litecoind-stable/archive-tarball/v0.4.3#.tar.gz\n \n BUG FIXES\n \n Cease locking memory used by non-sensitive information (this caused a huge performance hit on some platforms, especially noticable during initial blockchain download).\n Fixed some address-handling deadlocks (client freezes).\n-No longer accept inbound connections over the internet when Bitcoin is being used with Tor (identity leak).\n+No longer accept inbound connections over the internet when Litecoin is being used with Tor (identity leak).\n Use the correct base transaction fee of 0.0005 BTC for accepting transactions into mined blocks (since 0.4.0, it was incorrectly accepting 0.0001 BTC which was only meant to be relayed).\n Add new DNS seeds (maintained by Pieter Wuille and Luke Dashjr).\n "
      },
      {
        "sha": "5786c4f02ea3ab9a60af1ce10343e5cb5572367f",
        "filename": "doc/release-notes/release-notes-0.4.4.md",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.4.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.4.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.4.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,15 +1,15 @@\n-Bitcoin version 0.4.4 is now available for download at:\n-http://luke.dashjr.org/programs/bitcoin/files/bitcoind-0.4.4/\n+Litecoin version 0.4.4 is now available for download at:\n+http://luke.dashjr.org/programs/litecoin/files/litecoind-0.4.4/\n \n This is a bugfix-only release based on 0.4.0.\n \n-Please note that the wxBitcoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n+Please note that the wxLitecoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n \n Please report bugs for the daemon only using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/wangxinxi/litecoin/issues\n \n Stable source code is hosted at Gitorious:\n-http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.4.4#.tar.gz\n+http://gitorious.org/litecoin/litecoind-stable/archive-tarball/v0.4.4#.tar.gz\n \n BUG FIXES\n \n@@ -24,7 +24,7 @@ Several shutdown issues have been fixed.\n Check that keys stored in the wallet are valid at startup, and if not,\n report corruption.\n Various build fixes.\n-If no password is specified to bitcoind, recommend a secure password.\n+If no password is specified to litecoind, recommend a secure password.\n Update hard-coded fallback seed nodes, choosing recent ones with long uptime and versions at least 0.4.0.\n Add checkpoint at block 168,000.\n "
      },
      {
        "sha": "55890855a8c3acc7557ef6a2ab4aa19a4ff16b2a",
        "filename": "doc/release-notes/release-notes-0.4.6.md",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.4.6.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.4.6.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.6.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,37 +1,37 @@\n-bitcoind version 0.4.6 is now available for download at:\n+litecoind version 0.4.6 is now available for download at:\n Windows: installer | zip (sig)\n Source: tar.gz\n-bitcoind and Bitcoin-Qt version 0.6.0.7 are also tagged in git, but it is recommended to upgrade to 0.6.1.\n+litecoind and Litecoin-Qt version 0.6.0.7 are also tagged in git, but it is recommended to upgrade to 0.6.1.\n \n These are bugfix-only releases.\n \n-Please report bugs by replying to this forum thread. Note that the 0.4.x wxBitcoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n+Please report bugs by replying to this forum thread. Note that the 0.4.x wxLitecoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n \n BUG FIXES\n \n Version 0.6.0 allowed importing invalid \"private keys\", which would be unspendable; 0.6.0.7 will now verify the private key is valid, and refuse to import an invalid one\n Verify status of encrypt/decrypt calls to detect failed padding\n Check blocks for duplicate transactions earlier. Fixes #1167\n Upgrade Windows builds to OpenSSL 1.0.1b\n-Set label when selecting an address that already has a label. Fixes #1080 (Bitcoin-Qt)\n+Set label when selecting an address that already has a label. Fixes #1080 (Litecoin-Qt)\n JSON-RPC listtransactions's from/count handling is now fixed\n Optimize and fix multithreaded access, when checking whether we already know about transactions\n Fix potential networking deadlock\n Proper support for Growl 1.3 notifications\n Display an error, rather than crashing, if encoding a QR Code failed (0.6.0.7)\n-Don't erroneously set \"Display addresses\" for users who haven't explicitly enabled it (Bitcoin-Qt)\n+Don't erroneously set \"Display addresses\" for users who haven't explicitly enabled it (Litecoin-Qt)\n Some non-ASCII input in JSON-RPC expecting hexadecimal may have been misinterpreted rather than rejected\n Missing error condition checking added\n-Do not show green tick unless all known blocks are downloaded. Fixes #921 (Bitcoin-Qt)\n+Do not show green tick unless all known blocks are downloaded. Fixes #921 (Litecoin-Qt)\n Increase time ago of last block for \"up to date\" status from 30 to 90 minutes\n-Show a message box when runaway exception happens (Bitcoin-Qt)\n+Show a message box when runaway exception happens (Litecoin-Qt)\n Use a messagebox to display the error when -server is provided without providing a rpc password\n-Show error message instead of exception crash when unable to bind RPC port (Bitcoin-Qt)\n-Correct sign message bitcoin address tooltip. Fixes #1050 (Bitcoin-Qt)\n+Show error message instead of exception crash when unable to bind RPC port (Litecoin-Qt)\n+Correct sign message litecoin address tooltip. Fixes #1050 (Litecoin-Qt)\n Removed \"(no label)\" from QR Code dialog titlebar if we have no label (0.6.0.7)\n Removed an ugly line break in tooltip for mature transactions (0.6.0.7)\n-Add missing tooltip and key shortcut in settings dialog (part of #1088) (Bitcoin-Qt)\n+Add missing tooltip and key shortcut in settings dialog (part of #1088) (Litecoin-Qt)\n Work around issue in boost::program_options that prevents from compiling in clang\n Fixed bugs occurring only on platforms with unsigned characters (such as ARM).\n-Rename make_windows_icon.py to .sh as it is a shell script. Fixes #1099 (Bitcoin-Qt)\n+Rename make_windows_icon.py to .sh as it is a shell script. Fixes #1099 (Litecoin-Qt)\n Various trivial internal corrections to types used for counting/size loops and warnings"
      },
      {
        "sha": "0178ff5c3c7f50eabfacf9a5215fdc9f99d113e0",
        "filename": "doc/release-notes/release-notes-0.5.0.md",
        "status": "modified",
        "additions": 20,
        "deletions": 20,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.5.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.5.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.0.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,45 +1,45 @@\n-Bitcoin version 0.5.0 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.0/\n+Litecoin version 0.5.0 is now available for download at:\n+http://sourceforge.net/projects/litecoin/files/Litecoin/litecoin-0.5.0/\n \n The major change for this release is a completely new graphical interface that uses the Qt user interface toolkit.\n \n This release include German, Spanish, Spanish-Castilian, Norwegian and Dutch translations. More translations are welcome; join the project at Transifex if you can help:\n-https://www.transifex.net/projects/p/bitcoin/\n+https://www.transifex.net/projects/p/litecoin/\n \n Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/wangxinxi/litecoin/issues\n \n-For Ubuntu users, there is a new ppa maintained by Matt Corallo which you can add to your system so that it will automatically keep bitcoin up-to-date.  Just type \"sudo apt-add-repository ppa:bitcoin/bitcoin\" in your terminal, then install the bitcoin-qt package.\n+For Ubuntu users, there is a new ppa maintained by Matt Corallo which you can add to your system so that it will automatically keep litecoin up-to-date.  Just type \"sudo apt-add-repository ppa:litecoin/litecoin\" in your terminal, then install the litecoin-qt package.\n \n MAJOR BUG FIX  (CVE-2011-4447)\n \n-The wallet encryption feature introduced in Bitcoin version 0.4.0 did not sufficiently secure the private keys. An attacker who\n+The wallet encryption feature introduced in Litecoin version 0.4.0 did not sufficiently secure the private keys. An attacker who\n managed to get a copy of your encrypted wallet.dat file might be able to recover some or all of the unencrypted keys and steal the\n associated coins.\n \n-If you have a previously encrypted wallet.dat, the first time you run bitcoin-qt or bitcoind the wallet will be rewritten, Bitcoin will\n+If you have a previously encrypted wallet.dat, the first time you run litecoin-qt or litecoind the wallet will be rewritten, Litecoin will\n shut down, and you will be prompted to restart it to run with the new, properly encrypted file.\n \n If you had a previously encrypted wallet.dat that might have been copied or stolen (for example, you backed it up to a public\n-location) you should send all of your bitcoins to yourself using a new bitcoin address and stop using any previously generated addresses.\n+location) you should send all of your litecoins to yourself using a new litecoin address and stop using any previously generated addresses.\n \n-Wallets encrypted with this version of Bitcoin are written properly.\n+Wallets encrypted with this version of Litecoin are written properly.\n \n-Technical note: the encrypted wallet's 'keypool' will be regenerated the first time you request a new bitcoin address; to be certain that the\n+Technical note: the encrypted wallet's 'keypool' will be regenerated the first time you request a new litecoin address; to be certain that the\n new private keys are properly backed up you should:\n \n-1. Run Bitcoin and let it rewrite the wallet.dat file\n+1. Run Litecoin and let it rewrite the wallet.dat file\n \n-2. Run it again, then ask it for a new bitcoin address.\n-Bitcoin-Qt: Address Book, then New Address...\n-bitcoind: run the 'walletpassphrase' RPC command to unlock the wallet,  then run the 'getnewaddress' RPC command.\n+2. Run it again, then ask it for a new litecoin address.\n+Litecoin-Qt: Address Book, then New Address...\n+litecoind: run the 'walletpassphrase' RPC command to unlock the wallet,  then run the 'getnewaddress' RPC command.\n \n-3. If your encrypted wallet.dat may have been copied or stolen, send  all of your bitcoins to the new bitcoin address.\n+3. If your encrypted wallet.dat may have been copied or stolen, send  all of your litecoins to the new litecoin address.\n \n-4. Shut down Bitcoin, then backup the wallet.dat file.\n-IMPORTANT: be sure to request a new bitcoin address before backing up, so that the 'keypool' is regenerated and backed up.\n+4. Shut down Litecoin, then backup the wallet.dat file.\n+IMPORTANT: be sure to request a new litecoin address before backing up, so that the 'keypool' is regenerated and backed up.\n \n-\"Security in depth\" is always a good idea, so choosing a secure location for the backup and/or encrypting the backup before uploading it is recommended. And as in previous releases, if your machine is infected by malware there are several ways an attacker might steal your bitcoins.\n+\"Security in depth\" is always a good idea, so choosing a secure location for the backup and/or encrypting the backup before uploading it is recommended. And as in previous releases, if your machine is infected by malware there are several ways an attacker might steal your litecoins.\n \n Thanks to Alan Reiner (etotheipi) for finding and reporting this bug.\n \n@@ -51,7 +51,7 @@ MAJOR GUI CHANGES\n \n Icons at the bottom of the window that show how well connected you are to the network, with tooltips to display details.\n \n-Drag and drop support for bitcoin: URIs on web pages.\n+Drag and drop support for litecoin: URIs on web pages.\n \n Export transactions as a .csv file.\n \n@@ -63,7 +63,7 @@ getmemorypool : new RPC command, provides everything needed to construct a block\n \n listsinceblock : new RPC command, list transactions since given block\n \n-signmessage/verifymessage : new RPC commands to sign a message with one of your private keys or verify that a message signed by the private key associated with a bitcoin address.\n+signmessage/verifymessage : new RPC commands to sign a message with one of your private keys or verify that a message signed by the private key associated with a litecoin address.\n \n GENERAL CHANGES\n "
      },
      {
        "sha": "a6542f3d1428c079e899b0d172b21668f35c329e",
        "filename": "doc/release-notes/release-notes-0.5.1.md",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.5.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.5.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.1.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,43 +1,43 @@\n-Bitcoin version 0.5.1 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.1/\n+Litecoin version 0.5.1 is now available for download at:\n+http://sourceforge.net/projects/litecoin/files/Litecoin/litecoin-0.5.1/\n \n This is a bugfix-only release.\n \n This release includes 13 translations, including 5 new translations:\n Italian, Hungarian, Ukranian, Portuguese (Brazilian) and Simplified Chinese.\n More translations are welcome; join the project at Transifex if you can help:\n-https://www.transifex.net/projects/p/bitcoin/\n+https://www.transifex.net/projects/p/litecoin/\n \n Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/wangxinxi/litecoin/issues\n \n Project source code is hosted at github; we are no longer\n distributing .tar.gz files here, you can get them\n directly from github:\n-https://github.com/bitcoin/bitcoin/tarball/v0.5.1  # .tar.gz\n-https://github.com/bitcoin/bitcoin/zipball/v0.5.1  # .zip\n+https://github.com/wangxinxi/litecoin/tarball/v0.5.1  # .tar.gz\n+https://github.com/wangxinxi/litecoin/zipball/v0.5.1  # .zip\n \n For Ubuntu users, there is a new ppa maintained by Matt Corallo which\n you can add to your system so that it will automatically keep\n-bitcoin up-to-date.  Just type\n-sudo apt-add-repository ppa:bitcoin/bitcoin\n-in your terminal, then install the bitcoin-qt package.\n+litecoin up-to-date.  Just type\n+sudo apt-add-repository ppa:litecoin/litecoin\n+in your terminal, then install the litecoin-qt package.\n \n \n BUG FIXES\n \n Re-enable SSL support for the JSON-RPC interface (it was unintentionally\n disabled for the 0.5.0 release binaries).\n \n-The code that finds peers via \"dns seeds\" no longer stops bitcoin startup\n+The code that finds peers via \"dns seeds\" no longer stops litecoin startup\n if one of the dns seed machines is down.\n \n Tooltips on the transaction list view were rendering incorrectly (as black boxes\n or with a transparent background).\n \n-Prevent a denial-of-service attack involving flooding a bitcoin node with\n+Prevent a denial-of-service attack involving flooding a litecoin node with\n orphan blocks.\n \n The wallet passphrase dialog now warns you if the caps lock key was pressed.\n \n-Improved searching in addresses and labels in bitcoin-qt.\n+Improved searching in addresses and labels in litecoin-qt."
      },
      {
        "sha": "459211b10603c4e9e734cadc580e564411588a72",
        "filename": "doc/release-notes/release-notes-0.5.2.md",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.5.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.5.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.2.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,21 +1,21 @@\n-Bitcoin version 0.5.2 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.2/\n+Litecoin version 0.5.2 is now available for download at:\n+http://sourceforge.net/projects/litecoin/files/Litecoin/litecoin-0.5.2/\n \n This is a bugfix-only release based on 0.5.1.\n \n Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/wangxinxi/litecoin/issues\n \n Stable source code is hosted at Gitorious:\n-http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.5.2#.tar.gz\n+http://gitorious.org/litecoin/litecoind-stable/archive-tarball/v0.5.2#.tar.gz\n \n BUG FIXES\n \n Check all transactions in blocks after the last checkpoint (0.5.0 and 0.5.1 skipped checking ECDSA signatures during initial blockchain download).\n Cease locking memory used by non-sensitive information (this caused a huge performance hit on some platforms, especially noticable during initial blockchain download; this was\n not a security vulnerability).\n Fixed some address-handling deadlocks (client freezes).\n-No longer accept inbound connections over the internet when Bitcoin is being used with Tor (identity leak).\n+No longer accept inbound connections over the internet when Litecoin is being used with Tor (identity leak).\n Re-enable SSL support for the JSON-RPC interface (it was unintentionally disabled for the 0.5.0 and 0.5.1 release Linux binaries).\n Use the correct base transaction fee of 0.0005 BTC for accepting transactions into mined blocks (since 0.4.0, it was incorrectly accepting 0.0001 BTC which was only meant to be relayed).\n Don't show \"IP\" for transactions which are not necessarily IP transactions."
      },
      {
        "sha": "48e9ecb1a33e1787d8bcabb17c56d6f1384384d2",
        "filename": "doc/release-notes/release-notes-0.5.3.md",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.5.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.5.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.3.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,19 +1,19 @@\n-Bitcoin version 0.5.3 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.3/\n+Litecoin version 0.5.3 is now available for download at:\n+http://sourceforge.net/projects/litecoin/files/Litecoin/litecoin-0.5.3/\n \n This is a bugfix-only release based on 0.5.1.\n It also includes a few protocol updates.\n \n Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/wangxinxi/litecoin/issues\n \n Stable source code is hosted at Gitorious:\n-http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.5.3#.tar.gz\n+http://gitorious.org/litecoin/litecoind-stable/archive-tarball/v0.5.3#.tar.gz\n \n PROTOCOL UPDATES\n \n BIP 30: Introduce a new network rule: \"a block is not valid if it contains a transaction whose hash already exists in the block chain, unless all that transaction's outputs were already spent before said block\" beginning on March 15, 2012, 00:00 UTC.\n-On testnet, allow mining of min-difficulty blocks if 20 minutes have gone by without mining a regular-difficulty block. This is to make testing Bitcoin easier, and will not affect normal mode.\n+On testnet, allow mining of min-difficulty blocks if 20 minutes have gone by without mining a regular-difficulty block. This is to make testing Litecoin easier, and will not affect normal mode.\n \n BUG FIXES\n \n@@ -24,19 +24,19 @@ Resolved multiple bugs preventing long-term unlocking of encrypted wallets\n Only send local IP in \"version\" messages if it is globally routable (ie, not private), and try to get such an IP from UPnP if applicable.\n Reannounce UPnP port forwards every 20 minutes, to workaround routers expiring old entries, and allow the -upnp option to override any stored setting.\n Skip splash screen when -min is used, and fix Minimize to Tray function.\n-Do not blank \"label\" in Bitcoin-Qt \"Send\" tab, if the user has already entered something.\n+Do not blank \"label\" in Litecoin-Qt \"Send\" tab, if the user has already entered something.\n Correct various labels and messages.\n Various memory leaks and potential null pointer deferences have been fixed.\n-Handle invalid Bitcoin URIs using \"bitcoin://\" instead of \"bitcoin:\".\n+Handle invalid Litecoin URIs using \"litecoin://\" instead of \"litecoin:\".\n Several shutdown issues have been fixed.\n Revert to \"global progress indication\", as starting from zero every time was considered too confusing for many users.\n Check that keys stored in the wallet are valid at startup, and if not, report corruption.\n Enable accessible widgets on Windows, so that people with screen readers such as NVDA can make sense of it.\n Various build fixes.\n-If no password is specified to bitcoind, recommend a secure password.\n-Automatically focus and scroll to new \"Send coins\" entries in Bitcoin-Qt.\n-Show a message box for --help on Windows, for Bitcoin-Qt.\n+If no password is specified to litecoind, recommend a secure password.\n+Automatically focus and scroll to new \"Send coins\" entries in Litecoin-Qt.\n+Show a message box for --help on Windows, for Litecoin-Qt.\n Add missing \"About Qt\" menu option to show built-in Qt About dialog.\n-Don't show \"-daemon\" as an option for Bitcoin-Qt, since it isn't available.\n+Don't show \"-daemon\" as an option for Litecoin-Qt, since it isn't available.\n Update hard-coded fallback seed nodes, choosing recent ones with long uptime and versions at least 0.4.0.\n Add checkpoint at block 168,000."
      },
      {
        "sha": "a79f5efcf69950697edf86df64ceb32ad2b4f756",
        "filename": "doc/release-notes/release-notes-0.5.4.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.5.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.5.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.4.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,14 +1,14 @@\n-Bitcoin version 0.5.4 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.4/\n+Litecoin version 0.5.4 is now available for download at:\n+http://sourceforge.net/projects/litecoin/files/Litecoin/litecoin-0.5.4/\n NOTE: 0.5.4rc3 is being renamed to 0.5.4 final with no changes.\n \n This is a bugfix-only release in the 0.5.x series, plus a few protocol updates.\n \n Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/wangxinxi/litecoin/issues\n \n Stable source code is hosted at Gitorious:\n-http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.5.4#.tar.gz\n+http://gitorious.org/litecoin/litecoind-stable/archive-tarball/v0.5.4#.tar.gz\n \n PROTOCOL UPDATES\n \n@@ -22,16 +22,16 @@ Fix broken testnet mining.\n Stop excess inventory relay during initial block download.\n When disconnecting a node, clear the received buffer so that we do not process any already received messages.\n Yet another attempt at implementing \"minimize to tray\" that works on all operating systems.\n-Fix Bitcoin-Qt notifications under Growl 1.3.\n-Increase required age of Bitcoin-Qt's \"not up to date\" status from 30 to 90 minutes.\n+Fix Litecoin-Qt notifications under Growl 1.3.\n+Increase required age of Litecoin-Qt's \"not up to date\" status from 30 to 90 minutes.\n Implemented missing verifications that led to crash on entering some wrong passphrases for encrypted wallets.\n Fix default filename suffixes in GNOME save dialog.\n Make the \"Send coins\" tab use the configured unit type, even on the first attempt.\n Print detailed wallet loading errors to debug.log when it is corrupt.\n Allocate exactly the amount of space needed for signing transactions, instead of a fixed 10k buffer.\n Workaround for improbable memory access violation.\n Check wallet's minimum version before trying to load it.\n-Remove wxBitcoin properly when installing Bitcoin-Qt over it. (Windows)\n+Remove wxLitecoin properly when installing Litecoin-Qt over it. (Windows)\n Detail reorganization information better in debug log.\n Use a messagebox to display the error when -server is provided without configuring a RPC password.\n Testing suite build now honours provided CXXFLAGS."
      },
      {
        "sha": "ef9735f85e3dd94162b8f92527cc2f1b526b4706",
        "filename": "doc/release-notes/release-notes-0.5.5.md",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.5.5.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.5.5.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.5.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,37 +1,37 @@\n-bitcoind and Bitcoin-Qt version 0.5.5 are now available for download at:\n+litecoind and Litecoin-Qt version 0.5.5 are now available for download at:\n Windows: installer | zip (sig)\n Source: tar.gz\n-bitcoind and Bitcoin-Qt version 0.6.0.7 are also tagged in git, but it is recommended to upgrade to 0.6.1.\n+litecoind and Litecoin-Qt version 0.6.0.7 are also tagged in git, but it is recommended to upgrade to 0.6.1.\n \n These are bugfix-only releases.\n \n-Please report bugs by replying to this forum thread. Note that the 0.4.x wxBitcoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n+Please report bugs by replying to this forum thread. Note that the 0.4.x wxLitecoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n \n BUG FIXES\n \n Version 0.6.0 allowed importing invalid \"private keys\", which would be unspendable; 0.6.0.7 will now verify the private key is valid, and refuse to import an invalid one\n Verify status of encrypt/decrypt calls to detect failed padding\n Check blocks for duplicate transactions earlier. Fixes #1167\n Upgrade Windows builds to OpenSSL 1.0.1b\n-Set label when selecting an address that already has a label. Fixes #1080 (Bitcoin-Qt)\n+Set label when selecting an address that already has a label. Fixes #1080 (Litecoin-Qt)\n JSON-RPC listtransactions's from/count handling is now fixed\n Optimize and fix multithreaded access, when checking whether we already know about transactions\n Fix potential networking deadlock\n Proper support for Growl 1.3 notifications\n Display an error, rather than crashing, if encoding a QR Code failed (0.6.0.7)\n-Don't erroneously set \"Display addresses\" for users who haven't explicitly enabled it (Bitcoin-Qt)\n+Don't erroneously set \"Display addresses\" for users who haven't explicitly enabled it (Litecoin-Qt)\n Some non-ASCII input in JSON-RPC expecting hexadecimal may have been misinterpreted rather than rejected\n Missing error condition checking added\n-Do not show green tick unless all known blocks are downloaded. Fixes #921 (Bitcoin-Qt)\n+Do not show green tick unless all known blocks are downloaded. Fixes #921 (Litecoin-Qt)\n Increase time ago of last block for \"up to date\" status from 30 to 90 minutes\n-Show a message box when runaway exception happens (Bitcoin-Qt)\n+Show a message box when runaway exception happens (Litecoin-Qt)\n Use a messagebox to display the error when -server is provided without providing a rpc password\n-Show error message instead of exception crash when unable to bind RPC port (Bitcoin-Qt)\n-Correct sign message bitcoin address tooltip. Fixes #1050 (Bitcoin-Qt)\n+Show error message instead of exception crash when unable to bind RPC port (Litecoin-Qt)\n+Correct sign message litecoin address tooltip. Fixes #1050 (Litecoin-Qt)\n Removed \"(no label)\" from QR Code dialog titlebar if we have no label (0.6.0.7)\n Removed an ugly line break in tooltip for mature transactions (0.6.0.7)\n-Add missing tooltip and key shortcut in settings dialog (part of #1088) (Bitcoin-Qt)\n+Add missing tooltip and key shortcut in settings dialog (part of #1088) (Litecoin-Qt)\n Work around issue in boost::program_options that prevents from compiling in clang\n Fixed bugs occurring only on platforms with unsigned characters (such as ARM).\n-Rename make_windows_icon.py to .sh as it is a shell script. Fixes #1099 (Bitcoin-Qt)\n+Rename make_windows_icon.py to .sh as it is a shell script. Fixes #1099 (Litecoin-Qt)\n Various trivial internal corrections to types used for counting/size loops and warnings"
      },
      {
        "sha": "82ff7b919132aadc6c65d0befc7de5ea5700f937",
        "filename": "doc/release-notes/release-notes-0.6.0.md",
        "status": "modified",
        "additions": 22,
        "deletions": 22,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.6.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.6.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.0.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,25 +1,25 @@\n-Bitcoin version 0.6.0 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.6.0/test/\n+Litecoin version 0.6.0 is now available for download at:\n+http://sourceforge.net/projects/litecoin/files/Litecoin/litecoin-0.6.0/test/\n \n This release includes more than 20 language localizations.\n More translations are welcome; join the\n project at Transifex to help:\n-https://www.transifex.net/projects/p/bitcoin/\n+https://www.transifex.net/projects/p/litecoin/\n \n Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/wangxinxi/litecoin/issues\n \n Project source code is hosted at github; we are no longer\n distributing .tar.gz files here, you can get them\n directly from github:\n-https://github.com/bitcoin/bitcoin/tarball/v0.6.0  # .tar.gz\n-https://github.com/bitcoin/bitcoin/zipball/v0.6.0  # .zip\n+https://github.com/wangxinxi/litecoin/tarball/v0.6.0  # .tar.gz\n+https://github.com/wangxinxi/litecoin/zipball/v0.6.0  # .zip\n \n For Ubuntu users, there is a ppa maintained by Matt Corallo which\n you can add to your system so that it will automatically keep\n-bitcoin up-to-date.  Just type\n-sudo apt-add-repository ppa:bitcoin/bitcoin\n-in your terminal, then install the bitcoin-qt package.\n+litecoin up-to-date.  Just type\n+sudo apt-add-repository ppa:litecoin/litecoin\n+in your terminal, then install the litecoin-qt package.\n \n \n KNOWN ISSUES\n@@ -30,38 +30,38 @@ because database writes are queued to speed up download\n time.\n \n \n-NEW FEATURES SINCE BITCOIN VERSION 0.5\n+NEW FEATURES SINCE LITECOIN VERSION 0.5\n \n Initial network synchronization should be much faster\n (one or two hours on a typical machine instead of ten or more\n hours).\n \n Backup Wallet menu option.\n \n-Bitcoin-Qt can display and save QR codes for sending\n+Litecoin-Qt can display and save QR codes for sending\n and receiving addresses.\n \n New context menu on addresses to copy/edit/delete them.\n \n New Sign Message dialog that allows you to prove that you\n-own a bitcoin address by creating a digital\n+own a litecoin address by creating a digital\n signature.\n \n New wallets created with this version will\n use 33-byte 'compressed' public keys instead of\n 65-byte public keys, resulting in smaller\n-transactions and less traffic on the bitcoin\n+transactions and less traffic on the litecoin\n network. The shorter keys are already supported\n by the network but wallet.dat files containing\n short keys are not compatible with earlier\n-versions of Bitcoin-Qt/bitcoind.\n+versions of Litecoin-Qt/litecoind.\n \n New command-line argument -blocknotify=<command>\n that will spawn a shell process to run <command> \n when a new block is accepted.\n \n New command-line argument -splash=0 to disable\n-Bitcoin-Qt's initial splash screen\n+Litecoin-Qt's initial splash screen\n \n validateaddress JSON-RPC api command output includes\n two new fields for addresses in the wallet:\n@@ -104,11 +104,11 @@ attacks were fixed.\n \n NOT YET IMPLEMENTED FEATURES\n \n-Support for clicking on bitcoin: URIs and\n-opening/launching Bitcoin-Qt is available only on Linux,\n+Support for clicking on litecoin: URIs and\n+opening/launching Litecoin-Qt is available only on Linux,\n and only if you configure your desktop to launch\n-Bitcoin-Qt. All platforms support dragging and dropping\n-bitcoin: URIs onto the Bitcoin-Qt window to start\n+Litecoin-Qt. All platforms support dragging and dropping\n+litecoin: URIs onto the Litecoin-Qt window to start\n payment.\n \n \n@@ -117,21 +117,21 @@ PRELIMINARY SUPPORT FOR MULTISIGNATURE TRANSACTIONS\n This release has preliminary support for multisignature\n transactions-- transactions that require authorization\n from more than one person or device before they\n-will be accepted by the bitcoin network.\n+will be accepted by the litecoin network.\n \n Prior to this release, multisignature transactions\n were considered 'non-standard' and were ignored;\n with this release multisignature transactions are\n considered standard and will start to be relayed\n and accepted into blocks.\n \n-It is expected that future releases of Bitcoin-Qt\n+It is expected that future releases of Litecoin-Qt\n will support the creation of multisignature transactions,\n once enough of the network has upgraded so relaying\n and validating them is robust.\n \n For this release, creation and testing of multisignature\n-transactions is limited to the bitcoin test network using\n+transactions is limited to the litecoin test network using\n the \"addmultisigaddress\" JSON-RPC api call.\n \n Short multisignature address support is included in this"
      },
      {
        "sha": "74eab63084ceca17235cbd5e3a6e5c0ead02dc67",
        "filename": "doc/release-notes/release-notes-0.6.2.md",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.6.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.6.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.2.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,10 +1,10 @@\n-Bitcoin version 0.6.2 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.6.2/\n+Litecoin version 0.6.2 is now available for download at:\n+http://sourceforge.net/projects/litecoin/files/Litecoin/litecoin-0.6.2/\n \n This is a bug-fix and code-cleanup release, with no major new features.\n \n Please report bugs using the github issue tracker at:\n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/wangxinxi/litecoin/issues\n \n \n NOTABLE CHANGES\n@@ -14,7 +14,7 @@ portable to different data directories by default. If you need a\n portable blkindex.dat file then run with the new -detachdb=1 option\n or the \"Detach databases at shutdown\" GUI preference.\n \n-Fixed https://github.com/bitcoin/bitcoin/issues/1065, a bug that\n+Fixed https://github.com/wangxinxi/litecoin/issues/1065, a bug that\n could cause long-running nodes to crash.\n \n Mac and Windows binaries are compiled against OpenSSL 1.0.1b (Linux"
      },
      {
        "sha": "d52be44cd5324280f119682a3672e70d5649d95b",
        "filename": "doc/release-notes/release-notes-0.6.3.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.6.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.6.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.3.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,29 +1,29 @@\n-Bitcoin version 0.6.3 is now available for download at:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.6.3/\n+Litecoin version 0.6.3 is now available for download at:\n+  http://sourceforge.net/projects/litecoin/files/Litecoin/litecoin-0.6.3/\n \n This is a bug-fix release, with no new features.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/wangxinxi/litecoin/issues\n \n CHANGE SUMMARY\n \n Fixed a serious denial-of-service attack that could cause the\n-bitcoin process to become unresponsive. Thanks to Sergio Lerner\n+litecoin process to become unresponsive. Thanks to Sergio Lerner\n for finding and responsibly reporting the problem. (CVE-2012-3789)\n \n Optimized the process of checking transaction signatures, to\n speed up processing of new block messages and make propagating\n blocks across the network faster.\n \n-Fixed an obscure bug that could cause the bitcoin process to get\n+Fixed an obscure bug that could cause the litecoin process to get\n stuck on an invalid block-chain, if the invalid chain was\n hundreds of blocks long.\n \n-Bitcoin-Qt no longer automatically selects the first address\n+Litecoin-Qt no longer automatically selects the first address\n in the address book (Issue #1384).\n \n-Fixed minimize-to-dock behavior of Bitcoin-Qt on the Mac.\n+Fixed minimize-to-dock behavior of Litecoin-Qt on the Mac.\n \n Added a block checkpoint at block 185,333 to speed up initial\n blockchain download."
      },
      {
        "sha": "6dce9213957bf177364f7c202e9e3d1b54bac2c3",
        "filename": "doc/release-notes/release-notes-0.7.0.md",
        "status": "modified",
        "additions": 18,
        "deletions": 18,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.7.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.7.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.7.0.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,24 +1,24 @@\n-Bitcoin version 0.7.0 is now available for download at:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.0/\n+Litecoin version 0.7.0 is now available for download at:\n+  http://sourceforge.net/projects/litecoin/files/Litecoin/litecoin-0.7.0/\n \n-We recommend that everybody running prior versions of bitcoind/Bitcoin-Qt\n+We recommend that everybody running prior versions of litecoind/Litecoin-Qt\n upgrade to this release, except for users running Mac OSX 10.5.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/wangxinxi/litecoin/issues\n \n Project source code is hosted at github; you can get\n source-only tarballs/zipballs directly from there:\n-  https://github.com/bitcoin/bitcoin/tarball/v0.7.0  # .tar.gz\n-  https://github.com/bitcoin/bitcoin/zipball/v0.7.0  # .zip\n+  https://github.com/wangxinxi/litecoin/tarball/v0.7.0  # .tar.gz\n+  https://github.com/wangxinxi/litecoin/zipball/v0.7.0  # .zip\n \n Ubuntu Linux users can use the \"Personal Package Archive\" (PPA)\n maintained by Matt Corallo to automatically keep \n-bitcoin up-to-date.  Just type\n-  sudo apt-add-repository ppa:bitcoin/bitcoin\n+litecoin up-to-date.  Just type\n+  sudo apt-add-repository ppa:litecoin/litecoin\n   sudo apt-get update\n-in your terminal, then install the bitcoin-qt package:\n-  sudo apt-get install bitcoin-qt\n+in your terminal, then install the litecoin-qt package:\n+  sudo apt-get install litecoin-qt\n \n \n How to Upgrade\n@@ -27,10 +27,10 @@ If you are running an older version, shut it down. Wait\n until it has completely shut down (which might take a few minutes for older\n versions), then run the installer (on Windows) or just copy over\n Code:\n-/Applications/Bitcoin-Qt\n+/Applications/Litecoin-Qt\n (on Mac) or\n Code:\n-bitcoind/bitcoin-qt\n+litecoind/litecoin-qt\n (on Linux).\n \n If you were running on Linux with a version that might have been compiled\n@@ -45,14 +45,14 @@ Incompatible Changes\n   and 'getrawmempool' commands.\n * Remove deprecated RPC 'getblocknumber'\n \n-Bitcoin Improvement Proposals implemented\n+Litecoin Improvement Proposals implemented\n \n BIP 22 - 'getblocktemplate', 'submitblock' RPCs\n BIP 34 - block version 2, height in coinbase\n BIP 35 - 'mempool' message, extended 'getdata' message behavior\n \n \n-Core bitcoin handling and blockchain database\n+Core litecoin handling and blockchain database\n \n * Reduced CPU usage, by eliminating some redundant hash calculations\n * Cache signature verifications, to eliminate redundant signature checks\n@@ -109,7 +109,7 @@ Qt GUI\n * Add 2 labels to the overviewpage that display Wallet and Transaction status (obsolete or current)\n * Extend the optionsdialog (e.g. language selection) and re-work it to a tabbed UI\n * Merge sign/verify message into a single window with tabbed UI\n-* Ensure a changed bitcoin unit immediately updates all GUI elements that use units\n+* Ensure a changed litecoin unit immediately updates all GUI elements that use units\n * Update QR Code dialog\n * Improve error reporting at startup\n * Fine-grained UI updates for a much smoother UI during block downloads\n@@ -119,8 +119,8 @@ Qt GUI\n * Much better translations\n * Override progress bar design on platforms with segmented progress bars to assist with readability\n * Added 'immature balance' display on the overview page\n-* (Windows only): enable ASLR and DEP for bitcoin-qt.exe\n-* (Windows only): add meta-data to bitcoin-qt.exe (e.g. description)\n+* (Windows only): enable ASLR and DEP for litecoin-qt.exe\n+* (Windows only): add meta-data to litecoin-qt.exe (e.g. description)\n \n Internal codebase\n \n@@ -131,7 +131,7 @@ Internal codebase\n Miscellaneous\n \n * Reopen debug.log upon SIGHUP\n-* Bash programmable completion for bitcoind(1)\n+* Bash programmable completion for litecoind(1)\n * On supported OS's, each thread is given a useful name\n \n "
      },
      {
        "sha": "6844b0053889e225930f66dad3d463399ed6b9ad",
        "filename": "doc/release-notes/release-notes-0.7.1.md",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.7.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.7.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.7.1.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,23 +1,23 @@\n-Bitcoin version 0.7.1 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.1/\n+Litecoin version 0.7.1 is now available from:\n+  http://sourceforge.net/projects/litecoin/files/Litecoin/litecoin-0.7.1/\n \n This is a bug-fix minor release.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/wangxinxi/litecoin/issues\n \n Project source code is hosted at github; you can get\n source-only tarballs/zipballs directly from there:\n-  https://github.com/bitcoin/bitcoin/tarball/v0.7.1  # .tar.gz\n-  https://github.com/bitcoin/bitcoin/zipball/v0.7.1  # .zip\n+  https://github.com/wangxinxi/litecoin/tarball/v0.7.1  # .tar.gz\n+  https://github.com/wangxinxi/litecoin/zipball/v0.7.1  # .zip\n \n Ubuntu Linux users can use the \"Personal Package Archive\" (PPA)\n maintained by Matt Corallo to automatically keep \n up-to-date.  Just type:\n-  sudo apt-add-repository ppa:bitcoin/bitcoin\n+  sudo apt-add-repository ppa:litecoin/litecoin\n   sudo apt-get update\n-in your terminal, then install the bitcoin-qt package:\n-  sudo apt-get install bitcoin-qt\n+in your terminal, then install the litecoin-qt package:\n+  sudo apt-get install litecoin-qt\n \n KNOWN ISSUES\n ------------\n@@ -30,7 +30,7 @@ How to Upgrade\n If you are running an older version, shut it down. Wait\n until it has completely shut down (which might take a few minutes for older\n versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+/Applications/Litecoin-Qt (on Mac) or litecoind/litecoin-qt (on Linux).\n \n If you were running on Linux with a version that might have been compiled\n with a different version of Berkeley DB (for example, if you were using an\n@@ -75,7 +75,7 @@ Dependency changes\n Bug fixes\n ---------\n \n-* Clicking on a bitcoin: URI on Windows should now launch Bitcoin-Qt properly.\n+* Clicking on a litecoin: URI on Windows should now launch Litecoin-Qt properly.\n \n * When running -testnet, use RPC port 18332 by default.\n "
      },
      {
        "sha": "fc2e98ceacf3cd459410a6eb6aae72d3aca9f1fd",
        "filename": "doc/release-notes/release-notes-0.7.2.md",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.7.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.7.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.7.2.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,18 +1,18 @@\n-Bitcoin version 0.7.2 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.2\n+Litecoin version 0.7.2 is now available from:\n+  http://sourceforge.net/projects/litecoin/files/Litecoin/litecoin-0.7.2\n \n This is a bug-fix minor release.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/wangxinxi/litecoin/issues\n \n How to Upgrade\n --------------\n \n If you are running an older version, shut it down. Wait\n until it has completely shut down (which might take a few minutes for older\n versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+/Applications/Litecoin-Qt (on Mac) or litecoind/litecoin-qt (on Linux).\n \n If you were running on Linux with a version that might have been compiled\n with a different version of Berkeley DB (for example, if you were using an\n@@ -40,7 +40,7 @@ Bug fixes\n   database twice.\n \n * Fix use-after-free problems in initialization and shutdown, the latter of\n-  which caused Bitcoin-Qt to crash on Windows when exiting.\n+  which caused Litecoin-Qt to crash on Windows when exiting.\n \n * Correct library linking so building on Windows natively works.\n "
      },
      {
        "sha": "408f4408531a7290926f271b774bd59ba68f7521",
        "filename": "doc/release-notes/release-notes-0.8.0.md",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.8.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.8.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.0.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,19 +1,19 @@\n-Bitcoin-Qt version 0.8.0 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.0/\n+Litecoin-Qt version 0.8.0 is now available from:\n+  http://sourceforge.net/projects/litecoin/files/Litecoin/litecoin-0.8.0/\n \n This is a major release designed to improve performance and handle the\n increasing volume of transactions on the network.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/wangxinxi/litecoin/issues\n \n How to Upgrade\n --------------\n \n If you are running an older version, shut it down. Wait\n until it has completely shut down (which might take a few minutes for older\n versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+/Applications/Litecoin-Qt (on Mac) or litecoind/litecoin-qt (on Linux).\n \n The first time you run after the upgrade a re-indexing process will be\n started that will take anywhere from 30 minutes to several hours,\n@@ -31,7 +31,7 @@ details).\n Improvements\n ------------\n \n-Mac and Windows binaries are signed with certificates owned by the Bitcoin\n+Mac and Windows binaries are signed with certificates owned by the Litecoin\n Foundation, to be compatible with the new security features in OSX 10.8 and\n Windows 8.\n \n@@ -61,7 +61,7 @@ contrib/spendfrom is a python-language command-line utility that demonstrates\n how to use the \"raw transactions\" JSON-RPC api to send coins received from particular\n addresses (also known as \"coin control\").\n \n-New/changed settings (command-line or bitcoin.conf file)\n+New/changed settings (command-line or litecoin.conf file)\n --------------------------------------------------------\n \n dbcache : controls LevelDB memory usage."
      },
      {
        "sha": "c79c1113a08f162aa5efdd492c42f093e8480a7e",
        "filename": "doc/release-notes/release-notes-0.8.1.md",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.8.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.8.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.1.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,11 +1,11 @@\n-Bitcoin-Qt/bitcoind version 0.8.1 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.1/\n+Litecoin-Qt/litecoind version 0.8.1 is now available from:\n+  http://sourceforge.net/projects/litecoin/files/Litecoin/litecoin-0.8.1/\n \n This is a maintenance release that adds a new network rule to avoid\n a chain-forking incompatibility with versions 0.7.2 and earlier.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/wangxinxi/litecoin/issues\n \n \n How to Upgrade\n@@ -14,7 +14,7 @@ How to Upgrade\n If you are running an older version, shut it down. Wait\n until it has completely shut down (which might take a few minutes for older\n versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+/Applications/Litecoin-Qt (on Mac) or litecoind/litecoin-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you\n run 0.8.1 your blockchain files will be re-indexed, which will take"
      },
      {
        "sha": "e946e6e84d3011542f0eef8beba695fd6c2c4e91",
        "filename": "doc/release-notes/release-notes-0.8.2.md",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.8.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.8.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.2.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,19 +1,19 @@\n-Bitcoin-Qt version 0.8.2 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.2/\n+Litecoin-Qt version 0.8.2 is now available from:\n+  http://sourceforge.net/projects/litecoin/files/Litecoin/litecoin-0.8.2/\n \n This is a maintenance release that fixes many bugs and includes\n a few small new features.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/wangxinxi/litecoin/issues\n \n \n How to Upgrade\n \n If you are running an older version, shut it down. Wait\n until it has completely shut down (which might take a few minutes for older\n versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+/Applications/Litecoin-Qt (on Mac) or litecoind/litecoin-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you\n run 0.8.2 your blockchain files will be re-indexed, which will take\n@@ -43,7 +43,7 @@ with code that automatically calculates and suggests appropriate fees in the\n 0.9 release and note that if you set a fee policy significantly different from\n the rest of the network your transactions may never confirm.\n \n-Bitcoin-Qt changes\n+Litecoin-Qt changes\n \n * New icon and splash screen\n * Improve reporting of synchronization process\n@@ -58,7 +58,7 @@ Bitcoin-Qt changes\n   to current translations\n \n MacOSX:\n-* OSX support for click-to-pay (bitcoin:) links\n+* OSX support for click-to-pay (litecoin:) links\n * Fix GUI disappearing problem on MacOSX (issue #1522)\n \n Linux/Unix:\n@@ -97,8 +97,8 @@ Wallet compatibility/rescuing\n \n Known Bugs\n \n-* Entering the 'getblocktemplate' or 'getwork' RPC commands into the Bitcoin-Qt debug\n-console will cause Bitcoin-Qt to crash. Run Bitcoin-Qt with the -server command-line\n+* Entering the 'getblocktemplate' or 'getwork' RPC commands into the Litecoin-Qt debug\n+console will cause Litecoin-Qt to crash. Run Litecoin-Qt with the -server command-line\n option to workaround.\n \n Thanks to everybody who contributed to the 0.8.2 release!"
      },
      {
        "sha": "dfe98377d11e3c9923efaac990ef5ffd20bbddd6",
        "filename": "doc/release-notes/release-notes-0.8.3.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.8.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.8.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.3.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,11 +1,11 @@\n-Bitcoin-Qt version 0.8.3 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.3/\n+Litecoin-Qt version 0.8.3 is now available from:\n+  http://sourceforge.net/projects/litecoin/files/Litecoin/litecoin-0.8.3/\n \n This is a maintenance release to fix a denial-of-service attack that\n can cause nodes to crash.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/wangxinxi/litecoin/issues\n \n 0.8.3 Release notes\n "
      },
      {
        "sha": "0e3dbf128172bf14f2e88f9528b617913a7512ef",
        "filename": "doc/release-notes/release-notes-0.8.4.md",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.8.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.8.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.4.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,11 +1,11 @@\n-Bitcoin-Qt version 0.8.4 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.4/\n+Litecoin-Qt version 0.8.4 is now available from:\n+  http://sourceforge.net/projects/litecoin/files/Litecoin/litecoin-0.8.4/\n \n This is a maintenance release to fix a critical bug and three\n security issues; we urge all users to upgrade.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/wangxinxi/litecoin/issues\n \n \n How to Upgrade\n@@ -14,7 +14,7 @@ How to Upgrade\n If you are running an older version, shut it down. Wait\n until it has completely shut down (which might take a few minutes for older\n versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+/Applications/Litecoin-Qt (on Mac) or litecoind/litecoin-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you\n run 0.8.4 your blockchain files will be re-indexed, which will take\n@@ -29,12 +29,12 @@ Security issues\n \n An attacker could send a series of messages that resulted in\n an integer division-by-zero error in the Bloom Filter handling\n-code, causing the Bitcoin-Qt or bitcoind process to crash.\n+code, causing the Litecoin-Qt or litecoind process to crash.\n Bloom filters were introduced with version 0.8, so versions 0.8.0\n through 0.8.3 are vulnerable to this critical denial-of-service attack.\n \n A constant-time algorithm is now used to check RPC password\n-guess attempts; fixes https://github.com/bitcoin/bitcoin/issues/2838\n+guess attempts; fixes https://github.com/wangxinxi/litecoin/issues/2838\n (CVE-2013-4165)\n \n Implement a better fix for the fill-memory-with-orphan-transactions\n@@ -55,11 +55,11 @@ OSX: use 'FD_FULLSYNC' with LevelDB, which will (hopefully!)\n prevent the database corruption issues many people have\n experienced on OSX.\n \n-Linux: clicking on bitcoin: links was broken if you were using\n+Linux: clicking on litecoin: links was broken if you were using\n a Gnome-based desktop.\n \n Fix a hang-at-shutdown bug that only affects users that compile\n-their own version of Bitcoin against Boost versions 1.50-1.52.\n+their own version of Litecoin against Boost versions 1.50-1.52.\n \n Other changes\n -------------"
      },
      {
        "sha": "99a872e43b4e45b836ef52de17ac271faa60f607",
        "filename": "doc/release-notes/release-notes-0.8.5.md",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.8.5.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.8.5.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.5.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,11 +1,11 @@\n-Bitcoin-Qt version 0.8.5 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.5/\n+Litecoin-Qt version 0.8.5 is now available from:\n+  http://sourceforge.net/projects/litecoin/files/Litecoin/litecoin-0.8.5/\n \n This is a maintenance release to fix a critical bug;\n we urge all users to upgrade.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/wangxinxi/litecoin/issues\n \n \n How to Upgrade\n@@ -14,7 +14,7 @@ How to Upgrade\n If you are running an older version, shut it down. Wait\n until it has completely shut down (which might take a few minutes for older\n versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+/Applications/Litecoin-Qt (on Mac) or litecoind/litecoin-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you\n run 0.8.5 your blockchain files will be re-indexed, which will take"
      },
      {
        "sha": "94ef17f26728d93359a85a3409d26ab23d0dde96",
        "filename": "doc/release-notes/release-notes-0.8.6.md",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.8.6.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.8.6.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.6.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,12 +1,12 @@\n-Bitcoin-Qt version 0.8.6 final is now available from:\n+Litecoin-Qt version 0.8.6 final is now available from:\n \n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.6/\n+  http://sourceforge.net/projects/litecoin/files/Litecoin/litecoin-0.8.6/\n \n This is a maintenance release to fix a critical bug; we urge all users to upgrade.\n \n Please report bugs using the issue tracker at github:\n \n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/wangxinxi/litecoin/issues\n \n How to Upgrade\n --------------\n@@ -16,7 +16,7 @@ If you already downloaded 0.8.6rc1 you do not need to re-download. This release\n If you are running an older version, shut it down. Wait\n until it has completely shut down (which might take a few minutes for older\n versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+/Applications/Litecoin-Qt (on Mac) or litecoind/litecoin-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you\n run 0.8.6 your blockchain files will be re-indexed, which will take\n@@ -47,7 +47,7 @@ your machine.\n \n - Additional debug.log logging for diagnosis of network problems, log timestamps by default\n \n-- Fix Bitcoin-Qt startup crash when clicking dock icon on OSX \n+- Fix Litecoin-Qt startup crash when clicking dock icon on OSX \n \n - Fix memory leaks in CKey::SetCompactSignature() and Key::SignCompact()\n \n@@ -63,4 +63,4 @@ Warning\n   Hence it is recommended to use a 64-bit executable if possible.\n   A 64-bit executable for Windows is planned for 0.9.\n \n-Note: Gavin Andresen's GPG signing key for SHA256SUMS.asc has been changed from  key id 1FC730C1 to sub key 7BF6E212 (see https://github.com/bitcoin/bitcoin.org/pull/279).\n+Note: Gavin Andresen's GPG signing key for SHA256SUMS.asc has been changed from  key id 1FC730C1 to sub key 7BF6E212 (see https://github.com/wangxinxi/litecoin.org/pull/279)."
      },
      {
        "sha": "27bc930dd9e94926c55a48f3919d0fc88df37b7d",
        "filename": "doc/release-notes/release-notes-0.9.0.md",
        "status": "modified",
        "additions": 25,
        "deletions": 25,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.9.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.9.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.0.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,27 +1,27 @@\n-Bitcoin Core version 0.9.0 is now available from:\n+Litecoin Core version 0.9.0 is now available from:\n \n-  https://bitcoin.org/bin/0.9.0/\n+  https://litecoin.org/bin/0.9.0/\n \n This is a new major version release, bringing both new features and\n bug fixes.\n \n Please report bugs using the issue tracker at github:\n \n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/wangxinxi/litecoin/issues\n \n How to Upgrade\n --------------\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), uninstall all\n-earlier versions of Bitcoin, then run the installer (on Windows) or just copy\n-over /Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+earlier versions of Litecoin, then run the installer (on Windows) or just copy\n+over /Applications/Litecoin-Qt (on Mac) or litecoind/litecoin-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you run\n 0.9.0 your blockchain files will be re-indexed, which will take anywhere from \n 30 minutes to several hours, depending on the speed of your machine.\n \n-On Windows, do not forget to uninstall all earlier versions of the Bitcoin\n+On Windows, do not forget to uninstall all earlier versions of the Litecoin\n client first, especially if you are switching to the 64-bit version.\n \n Windows 64-bit installer\n@@ -59,11 +59,11 @@ Also, the first time you run a 0.8.x release on a 0.9 wallet it will rescan\n the blockchain for missing spent coins, which will take a long time (tens\n of minutes on a typical machine).\n \n-Rebranding to Bitcoin Core\n+Rebranding to Litecoin Core\n ---------------------------\n \n-To reduce confusion between Bitcoin-the-network and Bitcoin-the-software we\n-have renamed the reference client to Bitcoin Core.\n+To reduce confusion between Litecoin-the-network and Litecoin-the-software we\n+have renamed the reference client to Litecoin Core.\n \n \n OP_RETURN and data in the block chain\n@@ -74,7 +74,7 @@ blockchain.  This change is not an endorsement of storing data in the\n blockchain.  The OP_RETURN change creates a provably-prunable output,\n to avoid data storage schemes -- some of which were already deployed --\n that were storing arbitrary data such as images as forever-unspendable\n-TX outputs, bloating bitcoin's UTXO database.\n+TX outputs, bloating litecoin's UTXO database.\n \n Storing arbitrary data in the blockchain is still a bad idea; it is less\n costly and far more efficient to store non-currency data elsewhere.\n@@ -85,20 +85,20 @@ Autotools build system\n For 0.9.0 we switched to an autotools-based build system instead of individual\n (q)makefiles.\n \n-Using the standard \"./autogen.sh; ./configure; make\" to build Bitcoin-Qt and\n-bitcoind makes it easier for experienced open source developers to contribute \n+Using the standard \"./autogen.sh; ./configure; make\" to build Litecoin-Qt and\n+litecoind makes it easier for experienced open source developers to contribute \n to the project.\n \n Be sure to check doc/build-*.md for your platform before building from source.\n \n-Bitcoin-cli\n+Litecoin-cli\n -------------\n \n-Another change in the 0.9 release is moving away from the bitcoind executable\n+Another change in the 0.9 release is moving away from the litecoind executable\n functioning both as a server and as a RPC client. The RPC client functionality\n-(\"tell the running bitcoin daemon to do THIS\") was split into a separate\n-executable, 'bitcoin-cli'. The RPC client code will eventually be removed from\n-bitcoind, but will be kept for backwards compatibility for a release or two.\n+(\"tell the running litecoin daemon to do THIS\") was split into a separate\n+executable, 'litecoin-cli'. The RPC client code will eventually be removed from\n+litecoind, but will be kept for backwards compatibility for a release or two.\n \n `walletpassphrase` RPC\n -----------------------\n@@ -197,13 +197,13 @@ Command-line options:\n - New option: -nospendzeroconfchange to never spend unconfirmed change outputs\n - New option: -zapwallettxes to rebuild the wallet's transaction information\n - Rename option '-tor' to '-onion' to better reflect what it does\n-- Add '-disablewallet' mode to let bitcoind run entirely without wallet (when\n+- Add '-disablewallet' mode to let litecoind run entirely without wallet (when\n   built with wallet)\n - Update default '-rpcsslciphers' to include TLSv1.2\n - make '-logtimestamps' default on and rework help-message\n - RPC client option: '-rpcwait', to wait for server start\n - Remove '-logtodebugger'\n-- Allow `-noserver` with bitcoind\n+- Allow `-noserver` with litecoind\n \n Block-chain handling and storage:\n \n@@ -254,7 +254,7 @@ Protocol and network:\n - Improve logging of failed connections\n - Bump protocol version to 70002\n - Add some additional logging to give extra network insight\n-- Added new DNS seed from bitcoinstats.com\n+- Added new DNS seed from litecoinstats.com\n \n Validation:\n \n@@ -295,26 +295,26 @@ GUI:\n - Add Coin Control Features\n - Improve receive coins workflow: make the 'Receive' tab into a form to request\n   payments, and move historical address list functionality to File menu.\n-- Rebrand to `Bitcoin Core`\n+- Rebrand to `Litecoin Core`\n - Move initialization/shutdown to a thread. This prevents \"Not responding\"\n   messages during startup. Also show a window during shutdown.\n - Don't regenerate autostart link on every client startup\n-- Show and store message of normal bitcoin:URI\n+- Show and store message of normal litecoin:URI\n - Fix richtext detection hang issue on very old Qt versions\n - OS X: Make use of the 10.8+ user notification center to display Growl-like \n   notifications\n - OS X: Added NSHighResolutionCapable flag to Info.plist for better font\n   rendering on Retina displays.\n-- OS X: Fix bitcoin-qt startup crash when clicking dock icon\n-- Linux: Fix Gnome bitcoin: URI handler\n+- OS X: Fix litecoin-qt startup crash when clicking dock icon\n+- Linux: Fix Gnome litecoin: URI handler\n \n Miscellaneous:\n \n - Add Linux script (contrib/qos/tc.sh) to limit outgoing bandwidth\n - Add '-regtest' mode, similar to testnet but private with instant block\n   generation with 'setgenerate' RPC.\n - Add 'linearize.py' script to contrib, for creating bootstrap.dat\n-- Add separate bitcoin-cli client\n+- Add separate litecoin-cli client\n \n Credits\n --------"
      },
      {
        "sha": "b16a5202fcfcaf08725cede8afb6377d5a02cfd6",
        "filename": "doc/release-notes/release-notes-0.9.1.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.9.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.9.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.1.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,27 +1,27 @@\n-Bitcoin Core version 0.9.1 is now available from:\n+Litecoin Core version 0.9.1 is now available from:\n \n-  https://bitcoin.org/bin/0.9.1/\n+  https://litecoin.org/bin/0.9.1/\n \n This is a security update. It is recommended to upgrade to this release\n as soon as possible.\n \n It is especially important to upgrade if you currently have version\n 0.9.0 installed and are using the graphical interface OR you are using\n-bitcoind from any pre-0.9.1 version, and have enabled SSL for RPC and\n+litecoind from any pre-0.9.1 version, and have enabled SSL for RPC and\n have configured allowip to allow rpc connections from potentially\n hostile hosts.\n \n Please report bugs using the issue tracker at github:\n \n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/wangxinxi/litecoin/issues\n \n How to Upgrade\n --------------\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Litecoin-Qt (on Mac) or\n+litecoind/litecoin-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you run\n 0.9.1 your blockchain files will be re-indexed, which will take anywhere from \n@@ -33,7 +33,7 @@ If you are upgrading from version 0.7.2 or earlier, the first time you run\n No code changes were made between 0.9.0 and 0.9.1. Only the dependencies were changed.\n \n - Upgrade OpenSSL to 1.0.1g. This release fixes the following vulnerabilities which can\n-  affect the Bitcoin Core software:\n+  affect the Litecoin Core software:\n \n   - CVE-2014-0160 (\"heartbleed\")\n     A missing bounds check in the handling of the TLS heartbeat extension can"
      },
      {
        "sha": "776f1f314383cdad11f57e57e9a578d49fcf4087",
        "filename": "doc/release-notes/release-notes-0.9.2.1.md",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.9.2.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.9.2.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.2.1.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,22 +1,22 @@\n-Bitcoin Core version 0.9.2.1 is now available from:\n+Litecoin Core version 0.9.2.1 is now available from:\n \n-  https://bitcoin.org/bin/0.9.2.1/\n+  https://litecoin.org/bin/0.9.2.1/\n \n This is a new minor version release, bringing mostly bug fixes and some minor\n improvements. OpenSSL has been updated because of a security issue (CVE-2014-0224).\n Upgrading to this release is recommended.\n \n Please report bugs using the issue tracker at github:\n \n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/wangxinxi/litecoin/issues\n \n How to Upgrade\n --------------\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Litecoin-Qt (on Mac) or\n+litecoind/litecoin-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you run\n 0.9.2.1 your blockchain files will be re-indexed, which will take anywhere from \n@@ -130,7 +130,7 @@ GUI:\n - Catch Windows shutdown events while client is running\n - Optionally add third party links to transaction context menu\n - Check for !pixmap() before trying to export QR code (avoids crashes when no QR code could be generated)\n-- Fix \"Start bitcoin on system login\"\n+- Fix \"Start litecoin on system login\"\n \n Miscellaneous:\n "
      },
      {
        "sha": "d347700d0c36e37ab91617c11ea7b0a44b629499",
        "filename": "doc/release-notes/release-notes-0.9.2.md",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.9.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.9.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.2.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,22 +1,22 @@\n-Bitcoin Core version 0.9.2 is now available from:\n+Litecoin Core version 0.9.2 is now available from:\n \n-  https://bitcoin.org/bin/0.9.2/\n+  https://litecoin.org/bin/0.9.2/\n \n This is a new minor version release, bringing mostly bug fixes and some minor\n improvements. OpenSSL has been updated because of a security issue (CVE-2014-0224).\n Upgrading to this release is recommended.\n \n Please report bugs using the issue tracker at github:\n \n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/wangxinxi/litecoin/issues\n \n How to Upgrade\n --------------\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Litecoin-Qt (on Mac) or\n+litecoind/litecoin-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you run\n 0.9.2 your blockchain files will be re-indexed, which will take anywhere from \n@@ -130,7 +130,7 @@ GUI:\n - Catch Windows shutdown events while client is running\n - Optionally add third party links to transaction context menu\n - Check for !pixmap() before trying to export QR code (avoids crashes when no QR code could be generated)\n-- Fix \"Start bitcoin on system login\"\n+- Fix \"Start litecoin on system login\"\n \n Miscellaneous:\n "
      },
      {
        "sha": "1b73c1eb8075fe7d24d4f827f8c9138469ae2904",
        "filename": "doc/release-notes/release-notes-0.9.3.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.9.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.9.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.3.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,13 +1,13 @@\n-Bitcoin Core version 0.9.3 is now available from:\n+Litecoin Core version 0.9.3 is now available from:\n \n-  https://bitcoin.org/bin/0.9.3/\n+  https://litecoin.org/bin/0.9.3/\n \n This is a new minor version release, bringing only bug fixes and updated\n translations. Upgrading to this release is recommended.\n \n Please report bugs using the issue tracker at github:\n \n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/wangxinxi/litecoin/issues\n \n Upgrading and downgrading\n ==========================\n@@ -17,8 +17,8 @@ How to Upgrade\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Litecoin-Qt (on Mac) or\n+litecoind/litecoin-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you run\n 0.9.3 your blockchain files will be re-indexed, which will take anywhere from \n@@ -70,7 +70,7 @@ GUI:\n Miscellaneous:\n - key.cpp: fail with a friendlier message on missing ssl EC support\n - Remove bignum dependency for scripts\n-- Upgrade OpenSSL to 1.0.1i (see https://www.openssl.org/news/secadv_20140806.txt - just to be sure, no critical issues for Bitcoin Core)\n+- Upgrade OpenSSL to 1.0.1i (see https://www.openssl.org/news/secadv_20140806.txt - just to be sure, no critical issues for Litecoin Core)\n - Upgrade miniupnpc to 1.9.20140701\n - Fix boost detection in build system on some platforms\n \n@@ -98,4 +98,4 @@ Thanks to everyone who contributed to this release:\n - Wladimir J. van der Laan\n - Zak Wilcox\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/litecoin/)."
      },
      {
        "sha": "640199fdaae0959bdd94653f5fc90a5c2269cf57",
        "filename": "doc/release-notes/release-notes-0.9.4.md",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.9.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.9.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.4.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,39 +1,39 @@\n-Bitcoin Core version 0.9.4 is now available from:\n+Litecoin Core version 0.9.4 is now available from:\n \n-  https://bitcoin.org/bin/0.9.4/\n+  https://litecoin.org/bin/0.9.4/\n \n This is a new minor version release, bringing only bug fixes and updated\n translations. Upgrading to this release is recommended.\n \n Please report bugs using the issue tracker at github:\n \n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/wangxinxi/litecoin/issues\n \n How to Upgrade\n ===============\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Litecoin-Qt (on Mac) or\n+litecoind/litecoin-qt (on Linux).\n \n OpenSSL Warning\n ================\n \n OpenSSL 1.0.0p / 1.0.1k was recently released and is being pushed out by\n various operating system maintainers. Review by Gregory Maxwell determined that\n-this update is incompatible with the Bitcoin system and could lead to consensus\n+this update is incompatible with the Litecoin system and could lead to consensus\n forks.\n \n-Bitcoin Core released binaries from https://bitcoin.org are unaffected,\n+Litecoin Core released binaries from https://litecoin.org are unaffected,\n as are any built with the gitian deterministic build system.\n \n However, if you are running either\n \n-- The Ubuntu PPA from https://launchpad.net/~bitcoin/+archive/ubuntu/bitcoin\n-- A third-party or self-compiled Bitcoin Core\n+- The Ubuntu PPA from https://launchpad.net/~litecoin/+archive/ubuntu/litecoin\n+- A third-party or self-compiled Litecoin Core\n \n-upgrade to Bitcoin Core 0.9.4, which includes a workaround, **before** updating\n+upgrade to Litecoin Core 0.9.4, which includes a workaround, **before** updating\n OpenSSL.\n \n The incompatibility is due to the OpenSSL update changing the\n@@ -92,4 +92,4 @@ Thanks to who contributed to this release, at least:\n - Sergio Demian Lerner\n - Wladimir J. van der Laan\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/litecoin/)."
      },
      {
        "sha": "d657f450dadf7b4a1405693fcef72eef4e6cf34d",
        "filename": "doc/release-notes/release-notes-0.9.5.md",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.9.5.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-notes/release-notes-0.9.5.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.5.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,33 +1,33 @@\n-Bitcoin Core version 0.9.5 is now available from:\n+Litecoin Core version 0.9.5 is now available from:\n \n-  https://bitcoin.org/bin/0.9.5/\n+  https://litecoin.org/bin/0.9.5/\n \n This is a new minor version release, with the goal of backporting BIP66. There\n are also a few bug fixes and updated translations. Upgrading to this release is\n recommended.\n \n Please report bugs using the issue tracker at github:\n \n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/wangxinxi/litecoin/issues\n \n How to Upgrade\n ===============\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Litecoin-Qt (on Mac) or\n+litecoind/litecoin-qt (on Linux).\n \n Notable changes\n ================\n \n Mining and relay policy enhancements\n ------------------------------------\n \n-Bitcoin Core's block templates are now for version 3 blocks only, and any mining\n+Litecoin Core's block templates are now for version 3 blocks only, and any mining\n software relying on its `getblocktemplate` must be updated in parallel to use\n libblkmaker either version 0.4.2 or any version from 0.5.1 onward.\n-If you are solo mining, this will affect you the moment you upgrade Bitcoin\n+If you are solo mining, this will affect you the moment you upgrade Litecoin\n Core, which must be done prior to BIP66 achieving its 951/1001 status.\n If you are mining with the stratum mining protocol: this does not affect you.\n If you are mining with the getblocktemplate protocol to a pool: this will affect\n@@ -57,4 +57,4 @@ Thanks to who contributed to this release, at least:\n - Pieter Wuille\n - Wladimir J. van der Laan\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/litecoin/)."
      },
      {
        "sha": "ef3b475ce0496f65cafc4685e1c4d68d7b0f46d4",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 69,
        "deletions": 69,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -3,7 +3,7 @@ Release Process\n \n Before every release candidate:\n \n-* Update translations (ping wumpus on IRC) see [translation_process.md](https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md#synchronising-translations).\n+* Update translations (ping wumpus on IRC) see [translation_process.md](https://github.com/wangxinxi/litecoin/blob/master/doc/translation_process.md#synchronising-translations).\n \n Before every minor and major release:\n \n@@ -13,19 +13,19 @@ Before every minor and major release:\n \n Before every major release:\n \n-* Update hardcoded [seeds](/contrib/seeds/README.md), see [this pull request](https://github.com/bitcoin/bitcoin/pull/7415) for an example.\n+* Update hardcoded [seeds](/contrib/seeds/README.md), see [this pull request](https://github.com/wangxinxi/litecoin/pull/7415) for an example.\n \n ### First time / New builders\n \n Check out the source code in the following directory hierarchy.\n \n     cd /path/to/your/toplevel/build\n-    git clone https://github.com/bitcoin-core/gitian.sigs.git\n-    git clone https://github.com/bitcoin-core/bitcoin-detached-sigs.git\n+    git clone https://github.com/litecoin-core/gitian.sigs.git\n+    git clone https://github.com/litecoin-core/litecoin-detached-sigs.git\n     git clone https://github.com/devrandom/gitian-builder.git\n-    git clone https://github.com/bitcoin/bitcoin.git\n+    git clone https://github.com/wangxinxi/litecoin.git\n \n-### Bitcoin maintainers/release engineers, update version in sources\n+### Litecoin maintainers/release engineers, update version in sources\n \n Update the following:\n \n@@ -62,7 +62,7 @@ Tag version (or release candidate) in git\n \n Setup Gitian descriptors:\n \n-    pushd ./bitcoin\n+    pushd ./litecoin\n     export SIGNER=(your Gitian key, ie bluematt, sipa, etc)\n     export VERSION=(new version, e.g. 0.8.0)\n     git fetch\n@@ -85,7 +85,7 @@ Ensure gitian-builder is up-to-date:\n \n     pushd ./gitian-builder\n     mkdir -p inputs\n-    wget -P inputs https://bitcoincore.org/cfields/osslsigncode-Backports-to-1.7.1.patch\n+    wget -P inputs https://litecoincore.org/cfields/osslsigncode-Backports-to-1.7.1.patch\n     wget -P inputs http://downloads.sourceforge.net/project/osslsigncode/osslsigncode/osslsigncode-1.7.1.tar.gz\n     popd\n \n@@ -96,57 +96,57 @@ Create the OS X SDK tarball, see the [OS X readme](README_osx.md) for details, a\n By default, Gitian will fetch source files as needed. To cache them ahead of time:\n \n     pushd ./gitian-builder\n-    make -C ../bitcoin/depends download SOURCES_PATH=`pwd`/cache/common\n+    make -C ../litecoin/depends download SOURCES_PATH=`pwd`/cache/common\n     popd\n \n Only missing files will be fetched, so this is safe to re-run for each build.\n \n NOTE: Offline builds must use the --url flag to ensure Gitian fetches only from local URLs. For example:\n \n     pushd ./gitian-builder\n-    ./bin/gbuild --url bitcoin=/path/to/bitcoin,signature=/path/to/sigs {rest of arguments}\n+    ./bin/gbuild --url litecoin=/path/to/litecoin,signature=/path/to/sigs {rest of arguments}\n     popd\n \n The gbuild invocations below <b>DO NOT DO THIS</b> by default.\n \n-### Build and sign Bitcoin Core for Linux, Windows, and OS X:\n+### Build and sign Litecoin Core for Linux, Windows, and OS X:\n \n     pushd ./gitian-builder\n-    ./bin/gbuild --memory 3000 --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-    ./bin/gsign --signer $SIGNER --release ${VERSION}-linux --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-    mv build/out/bitcoin-*.tar.gz build/out/src/bitcoin-*.tar.gz ../\n-\n-    ./bin/gbuild --memory 3000 --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-    ./bin/gsign --signer $SIGNER --release ${VERSION}-win-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-    mv build/out/bitcoin-*-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz\n-    mv build/out/bitcoin-*.zip build/out/bitcoin-*.exe ../\n-\n-    ./bin/gbuild --memory 3000 --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-    ./bin/gsign --signer $SIGNER --release ${VERSION}-osx-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-    mv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz\n-    mv build/out/bitcoin-*.tar.gz build/out/bitcoin-*.dmg ../\n+    ./bin/gbuild --memory 3000 --commit litecoin=v${VERSION} ../litecoin/contrib/gitian-descriptors/gitian-linux.yml\n+    ./bin/gsign --signer $SIGNER --release ${VERSION}-linux --destination ../gitian.sigs/ ../litecoin/contrib/gitian-descriptors/gitian-linux.yml\n+    mv build/out/litecoin-*.tar.gz build/out/src/litecoin-*.tar.gz ../\n+\n+    ./bin/gbuild --memory 3000 --commit litecoin=v${VERSION} ../litecoin/contrib/gitian-descriptors/gitian-win.yml\n+    ./bin/gsign --signer $SIGNER --release ${VERSION}-win-unsigned --destination ../gitian.sigs/ ../litecoin/contrib/gitian-descriptors/gitian-win.yml\n+    mv build/out/litecoin-*-win-unsigned.tar.gz inputs/litecoin-win-unsigned.tar.gz\n+    mv build/out/litecoin-*.zip build/out/litecoin-*.exe ../\n+\n+    ./bin/gbuild --memory 3000 --commit litecoin=v${VERSION} ../litecoin/contrib/gitian-descriptors/gitian-osx.yml\n+    ./bin/gsign --signer $SIGNER --release ${VERSION}-osx-unsigned --destination ../gitian.sigs/ ../litecoin/contrib/gitian-descriptors/gitian-osx.yml\n+    mv build/out/litecoin-*-osx-unsigned.tar.gz inputs/litecoin-osx-unsigned.tar.gz\n+    mv build/out/litecoin-*.tar.gz build/out/litecoin-*.dmg ../\n     popd\n \n Build output expected:\n \n-  1. source tarball (`bitcoin-${VERSION}.tar.gz`)\n-  2. linux 32-bit and 64-bit dist tarballs (`bitcoin-${VERSION}-linux[32|64].tar.gz`)\n-  3. windows 32-bit and 64-bit unsigned installers and dist zips (`bitcoin-${VERSION}-win[32|64]-setup-unsigned.exe`, `bitcoin-${VERSION}-win[32|64].zip`)\n-  4. OS X unsigned installer and dist tarball (`bitcoin-${VERSION}-osx-unsigned.dmg`, `bitcoin-${VERSION}-osx64.tar.gz`)\n+  1. source tarball (`litecoin-${VERSION}.tar.gz`)\n+  2. linux 32-bit and 64-bit dist tarballs (`litecoin-${VERSION}-linux[32|64].tar.gz`)\n+  3. windows 32-bit and 64-bit unsigned installers and dist zips (`litecoin-${VERSION}-win[32|64]-setup-unsigned.exe`, `litecoin-${VERSION}-win[32|64].zip`)\n+  4. OS X unsigned installer and dist tarball (`litecoin-${VERSION}-osx-unsigned.dmg`, `litecoin-${VERSION}-osx64.tar.gz`)\n   5. Gitian signatures (in `gitian.sigs/${VERSION}-<linux|{win,osx}-unsigned>/(your Gitian key)/`)\n \n ### Verify other gitian builders signatures to your own. (Optional)\n \n Add other gitian builders keys to your gpg keyring\n \n-    gpg --import bitcoin/contrib/gitian-keys/*.pgp\n+    gpg --import litecoin/contrib/gitian-keys/*.pgp\n \n Verify the signatures\n \n     pushd ./gitian-builder\n-    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n+    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../litecoin/contrib/gitian-descriptors/gitian-linux.yml\n+    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../litecoin/contrib/gitian-descriptors/gitian-win.yml\n+    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../litecoin/contrib/gitian-descriptors/gitian-osx.yml\n     popd\n \n ### Next steps:\n@@ -164,25 +164,25 @@ Commit your signature to gitian.sigs:\n Wait for Windows/OS X detached signatures:\n \n - Once the Windows/OS X builds each have 3 matching signatures, they will be signed with their respective release keys.\n-- Detached signatures will then be committed to the [bitcoin-detached-sigs](https://github.com/bitcoin-core/bitcoin-detached-sigs) repository, which can be combined with the unsigned apps to create signed binaries.\n+- Detached signatures will then be committed to the [litecoin-detached-sigs](https://github.com/litecoin-core/litecoin-detached-sigs) repository, which can be combined with the unsigned apps to create signed binaries.\n \n Create (and optionally verify) the signed OS X binary:\n \n     pushd ./gitian-builder\n-    ./bin/gbuild -i --commit signature=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-    ./bin/gsign --signer $SIGNER --release ${VERSION}-osx-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-    mv build/out/bitcoin-osx-signed.dmg ../bitcoin-${VERSION}-osx.dmg\n+    ./bin/gbuild -i --commit signature=v${VERSION} ../litecoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n+    ./bin/gsign --signer $SIGNER --release ${VERSION}-osx-signed --destination ../gitian.sigs/ ../litecoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n+    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../litecoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n+    mv build/out/litecoin-osx-signed.dmg ../litecoin-${VERSION}-osx.dmg\n     popd\n \n Create (and optionally verify) the signed Windows binaries:\n \n     pushd ./gitian-builder\n-    ./bin/gbuild -i --commit signature=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-    ./bin/gsign --signer $SIGNER --release ${VERSION}-win-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-signed ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-    mv build/out/bitcoin-*win64-setup.exe ../bitcoin-${VERSION}-win64-setup.exe\n-    mv build/out/bitcoin-*win32-setup.exe ../bitcoin-${VERSION}-win32-setup.exe\n+    ./bin/gbuild -i --commit signature=v${VERSION} ../litecoin/contrib/gitian-descriptors/gitian-win-signer.yml\n+    ./bin/gsign --signer $SIGNER --release ${VERSION}-win-signed --destination ../gitian.sigs/ ../litecoin/contrib/gitian-descriptors/gitian-win-signer.yml\n+    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-signed ../litecoin/contrib/gitian-descriptors/gitian-win-signer.yml\n+    mv build/out/litecoin-*win64-setup.exe ../litecoin-${VERSION}-win64-setup.exe\n+    mv build/out/litecoin-*win32-setup.exe ../litecoin-${VERSION}-win32-setup.exe\n     popd\n \n Commit your signature for the signed OS X/Windows binaries:\n@@ -204,23 +204,23 @@ sha256sum * > SHA256SUMS\n \n The list of files should be:\n ```\n-bitcoin-${VERSION}-aarch64-linux-gnu.tar.gz\n-bitcoin-${VERSION}-arm-linux-gnueabihf.tar.gz\n-bitcoin-${VERSION}-i686-pc-linux-gnu.tar.gz\n-bitcoin-${VERSION}-x86_64-linux-gnu.tar.gz\n-bitcoin-${VERSION}-osx64.tar.gz\n-bitcoin-${VERSION}-osx.dmg\n-bitcoin-${VERSION}.tar.gz\n-bitcoin-${VERSION}-win32-setup.exe\n-bitcoin-${VERSION}-win32.zip\n-bitcoin-${VERSION}-win64-setup.exe\n-bitcoin-${VERSION}-win64.zip\n+litecoin-${VERSION}-aarch64-linux-gnu.tar.gz\n+litecoin-${VERSION}-arm-linux-gnueabihf.tar.gz\n+litecoin-${VERSION}-i686-pc-linux-gnu.tar.gz\n+litecoin-${VERSION}-x86_64-linux-gnu.tar.gz\n+litecoin-${VERSION}-osx64.tar.gz\n+litecoin-${VERSION}-osx.dmg\n+litecoin-${VERSION}.tar.gz\n+litecoin-${VERSION}-win32-setup.exe\n+litecoin-${VERSION}-win32.zip\n+litecoin-${VERSION}-win64-setup.exe\n+litecoin-${VERSION}-win64.zip\n ```\n The `*-debug*` files generated by the gitian build contain debug symbols\n for troubleshooting by developers. It is assumed that anyone that is interested\n in debugging can run gitian to generate the files for themselves. To avoid\n end-user confusion about which file to pick, as well as save storage\n-space *do not upload these to the bitcoin.org server, nor put them in the torrent*.\n+space *do not upload these to the litecoin.org server, nor put them in the torrent*.\n \n - GPG-sign it, delete the unsigned file:\n ```\n@@ -230,46 +230,46 @@ rm SHA256SUMS\n (the digest algorithm is forced to sha256 to avoid confusion of the `Hash:` header that GPG adds with the SHA256 used for the files)\n Note: check that SHA256SUMS itself doesn't end up in SHA256SUMS, which is a spurious/nonsensical entry.\n \n-- Upload zips and installers, as well as `SHA256SUMS.asc` from last step, to the bitcoin.org server\n-  into `/var/www/bin/bitcoin-core-${VERSION}`\n+- Upload zips and installers, as well as `SHA256SUMS.asc` from last step, to the litecoin.org server\n+  into `/var/www/bin/litecoin-core-${VERSION}`\n \n - A `.torrent` will appear in the directory after a few minutes. Optionally help seed this torrent. To get the `magnet:` URI use:\n ```bash\n transmission-show -m <torrent file>\n ```\n Insert the magnet URI into the announcement sent to mailing lists. This permits\n-people without access to `bitcoin.org` to download the binary distribution.\n+people without access to `litecoin.org` to download the binary distribution.\n Also put it into the `optional_magnetlink:` slot in the YAML file for\n-bitcoin.org (see below for bitcoin.org update instructions).\n+litecoin.org (see below for litecoin.org update instructions).\n \n-- Update bitcoin.org version\n+- Update litecoin.org version\n \n-  - First, check to see if the Bitcoin.org maintainers have prepared a\n-    release: https://github.com/bitcoin-dot-org/bitcoin.org/labels/Releases\n+  - First, check to see if the Litecoin.org maintainers have prepared a\n+    release: https://github.com/litecoin-dot-org/litecoin.org/labels/Releases\n \n       - If they have, it will have previously failed their Travis CI\n         checks because the final release files weren't uploaded.\n         Trigger a Travis CI rebuild---if it passes, merge.\n \n-  - If they have not prepared a release, follow the Bitcoin.org release\n-    instructions: https://github.com/bitcoin-dot-org/bitcoin.org#release-notes\n+  - If they have not prepared a release, follow the Litecoin.org release\n+    instructions: https://github.com/litecoin-dot-org/litecoin.org#release-notes\n \n   - After the pull request is merged, the website will automatically show the newest version within 15 minutes, as well\n     as update the OS download links. Ping @saivann/@harding (saivann/harding on Freenode) in case anything goes wrong\n \n - Announce the release:\n \n-  - bitcoin-dev and bitcoin-core-dev mailing list\n+  - litecoin-dev and litecoin-core-dev mailing list\n \n-  - Bitcoin Core announcements list https://bitcoincore.org/en/list/announcements/join/\n+  - Litecoin Core announcements list https://litecoincore.org/en/list/announcements/join/\n \n-  - bitcoincore.org blog post\n+  - litecoincore.org blog post\n \n-  - Update title of #bitcoin on Freenode IRC\n+  - Update title of #litecoin on Freenode IRC\n \n-  - Optionally twitter, reddit /r/Bitcoin, ... but this will usually sort out itself\n+  - Optionally twitter, reddit /r/Litecoin, ... but this will usually sort out itself\n \n-  - Notify BlueMatt so that he can start building [the PPAs](https://launchpad.net/~bitcoin/+archive/ubuntu/bitcoin)\n+  - Notify BlueMatt so that he can start building [the PPAs](https://launchpad.net/~litecoin/+archive/ubuntu/litecoin)\n \n   - Add release notes for the new version to the directory `doc/release-notes` in git master\n "
      },
      {
        "sha": "b2aa622b85b9552cf5f2782a88c0d9be91c0b692",
        "filename": "doc/shared-libraries.md",
        "status": "modified",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/shared-libraries.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/shared-libraries.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/shared-libraries.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,21 +1,21 @@\n Shared Libraries\n ================\n \n-## bitcoinconsensus\n+## litecoinconsensus\n \n-The purpose of this library is to make the verification functionality that is critical to Bitcoin's consensus available to other applications, e.g. to language bindings.\n+The purpose of this library is to make the verification functionality that is critical to Litecoin's consensus available to other applications, e.g. to language bindings.\n \n ### API\n \n-The interface is defined in the C header `bitcoinconsensus.h` located in  `src/script/bitcoinconsensus.h`.\n+The interface is defined in the C header `litecoinconsensus.h` located in  `src/script/litecoinconsensus.h`.\n \n #### Version\n \n-`bitcoinconsensus_version` returns an `unsigned int` with the API version *(currently at an experimental `0`)*.\n+`litecoinconsensus_version` returns an `unsigned int` with the API version *(currently at an experimental `0`)*.\n \n #### Script Validation\n \n-`bitcoinconsensus_verify_script` returns an `int` with the status of the verification. It will be `1` if the input script correctly spends the previous output `scriptPubKey`.\n+`litecoinconsensus_verify_script` returns an `int` with the status of the verification. It will be `1` if the input script correctly spends the previous output `scriptPubKey`.\n \n ##### Parameters\n - `const unsigned char *scriptPubKey` - The previous output script that encumbers spending.\n@@ -24,21 +24,21 @@ The interface is defined in the C header `bitcoinconsensus.h` located in  `src/s\n - `unsigned int txToLen` - The number of bytes for the `txTo`.\n - `unsigned int nIn` - The index of the input in `txTo` that spends the `scriptPubKey`.\n - `unsigned int flags` - The script validation flags *(see below)*.\n-- `bitcoinconsensus_error* err` - Will have the error/success code for the operation *(see below)*.\n+- `litecoinconsensus_error* err` - Will have the error/success code for the operation *(see below)*.\n \n ##### Script Flags\n-- `bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NONE`\n-- `bitcoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH` - Evaluate P2SH ([BIP16](https://github.com/bitcoin/bips/blob/master/bip-0016.mediawiki)) subscripts\n-- `bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DERSIG` - Enforce strict DER ([BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)) compliance\n+- `litecoinconsensus_SCRIPT_FLAGS_VERIFY_NONE`\n+- `litecoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH` - Evaluate P2SH ([BIP16](https://github.com/litecoin/bips/blob/master/bip-0016.mediawiki)) subscripts\n+- `litecoinconsensus_SCRIPT_FLAGS_VERIFY_DERSIG` - Enforce strict DER ([BIP66](https://github.com/litecoin/bips/blob/master/bip-0066.mediawiki)) compliance\n \n ##### Errors\n-- `bitcoinconsensus_ERR_OK` - No errors with input parameters *(see the return value of `bitcoinconsensus_verify_script` for the verification status)*\n-- `bitcoinconsensus_ERR_TX_INDEX` - An invalid index for `txTo`\n-- `bitcoinconsensus_ERR_TX_SIZE_MISMATCH` - `txToLen` did not match with the size of `txTo`\n-- `bitcoinconsensus_ERR_DESERIALIZE` - An error deserializing `txTo`\n+- `litecoinconsensus_ERR_OK` - No errors with input parameters *(see the return value of `litecoinconsensus_verify_script` for the verification status)*\n+- `litecoinconsensus_ERR_TX_INDEX` - An invalid index for `txTo`\n+- `litecoinconsensus_ERR_TX_SIZE_MISMATCH` - `txToLen` did not match with the size of `txTo`\n+- `litecoinconsensus_ERR_DESERIALIZE` - An error deserializing `txTo`\n \n ### Example Implementations\n-- [NBitcoin](https://github.com/NicolasDorier/NBitcoin/blob/master/NBitcoin/Script.cs#L814) (.NET Bindings)\n-- [node-libbitcoinconsensus](https://github.com/bitpay/node-libbitcoinconsensus) (Node.js Bindings)\n-- [java-libbitcoinconsensus](https://github.com/dexX7/java-libbitcoinconsensus) (Java Bindings)\n-- [bitcoinconsensus-php](https://github.com/Bit-Wasp/bitcoinconsensus-php) (PHP Bindings)\n+- [NLitecoin](https://github.com/NicolasDorier/NLitecoin/blob/master/NLitecoin/Script.cs#L814) (.NET Bindings)\n+- [node-liblitecoinconsensus](https://github.com/bitpay/node-liblitecoinconsensus) (Node.js Bindings)\n+- [java-liblitecoinconsensus](https://github.com/dexX7/java-liblitecoinconsensus) (Java Bindings)\n+- [litecoinconsensus-php](https://github.com/Bit-Wasp/litecoinconsensus-php) (PHP Bindings)"
      },
      {
        "sha": "778c12d99cb9b8854ab999c783b4f5e61308cc8f",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 21,
        "deletions": 21,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,16 +1,16 @@\n-TOR SUPPORT IN BITCOIN\n+TOR SUPPORT IN LITECOIN\n ======================\n \n-It is possible to run Bitcoin as a Tor hidden service, and connect to such services.\n+It is possible to run Litecoin as a Tor hidden service, and connect to such services.\n \n The following directions assume you have a Tor proxy running on port 9050. Many distributions default to having a SOCKS proxy listening on port 9050, but others may not. In particular, the Tor Browser Bundle defaults to listening on port 9150. See [Tor Project FAQ:TBBSocksPort](https://www.torproject.org/docs/faq.html.en#TBBSocksPort) for how to properly\n configure Tor.\n \n \n-1. Run bitcoin behind a Tor proxy\n+1. Run litecoin behind a Tor proxy\n ---------------------------------\n \n-The first step is running Bitcoin behind a Tor proxy. This will already make all\n+The first step is running Litecoin behind a Tor proxy. This will already make all\n outgoing connections be anonymized, but more is possible.\n \n \t-proxy=ip:port  Set the proxy server. If SOCKS5 is selected (default), this proxy\n@@ -31,27 +31,27 @@ outgoing connections be anonymized, but more is possible.\n \n In a typical situation, this suffices to run behind a Tor proxy:\n \n-\t./bitcoin -proxy=127.0.0.1:9050\n+\t./litecoin -proxy=127.0.0.1:9050\n \n \n-2. Run a bitcoin hidden server\n+2. Run a litecoin hidden server\n ------------------------------\n \n If you configure your Tor system accordingly, it is possible to make your node also\n reachable from the Tor network. Add these lines to your /etc/tor/torrc (or equivalent\n config file):\n \n-\tHiddenServiceDir /var/lib/tor/bitcoin-service/\n+\tHiddenServiceDir /var/lib/tor/litecoin-service/\n \tHiddenServicePort 8333 127.0.0.1:8333\n \tHiddenServicePort 18333 127.0.0.1:18333\n \n The directory can be different of course, but (both) port numbers should be equal to\n-your bitcoind's P2P listen port (8333 by default).\n+your litecoind's P2P listen port (8333 by default).\n \n-\t-externalip=X   You can tell bitcoin about its publicly reachable address using\n+\t-externalip=X   You can tell litecoin about its publicly reachable address using\n \t                this option, and this can be a .onion address. Given the above\n \t                configuration, you can find your onion address in\n-\t                /var/lib/tor/bitcoin-service/hostname. Onion addresses are given\n+\t                /var/lib/tor/litecoin-service/hostname. Onion addresses are given\n \t                preference for your node to advertise itself with, for connections\n \t                coming from unroutable addresses (such as 127.0.0.1, where the\n \t                Tor proxy typically runs).\n@@ -68,49 +68,49 @@ your bitcoind's P2P listen port (8333 by default).\n \n In a typical situation, where you're only reachable via Tor, this should suffice:\n \n-\t./bitcoind -proxy=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -listen\n+\t./litecoind -proxy=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -listen\n \n (obviously, replace the Onion address with your own). It should be noted that you still\n listen on all devices and another node could establish a clearnet connection, when knowing\n your address. To mitigate this, additionally bind the address of your Tor proxy:\n \n-\t./bitcoind ... -bind=127.0.0.1\n+\t./litecoind ... -bind=127.0.0.1\n \n If you don't care too much about hiding your node, and want to be reachable on IPv4\n as well, use `discover` instead:\n \n-\t./bitcoind ... -discover\n+\t./litecoind ... -discover\n \n and open port 8333 on your firewall (or use -upnp).\n \n If you only want to use Tor to reach onion addresses, but not use it as a proxy\n for normal IPv4/IPv6 communication, use:\n \n-\t./bitcoin -onion=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -discover\n+\t./litecoin -onion=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -discover\n \n 3. Automatically listen on Tor\n --------------------------------\n \n Starting with Tor version 0.2.7.1 it is possible, through Tor's control socket\n API, to create and destroy 'ephemeral' hidden services programmatically.\n-Bitcoin Core has been updated to make use of this.\n+Litecoin Core has been updated to make use of this.\n \n This means that if Tor is running (and proper authentication has been configured),\n-Bitcoin Core automatically creates a hidden service to listen on. This will positively \n+Litecoin Core automatically creates a hidden service to listen on. This will positively \n affect the number of available .onion nodes.\n \n-This new feature is enabled by default if Bitcoin Core is listening, and\n+This new feature is enabled by default if Litecoin Core is listening, and\n a connection to Tor can be made. It can be configured with the `-listenonion`,\n `-torcontrol` and `-torpassword` settings. To show verbose debugging\n information, pass `-debug=tor`.\n \n Connecting to Tor's control socket API requires one of two authentication methods to be \n-configured. For cookie authentication the user running bitcoind must have write access \n+configured. For cookie authentication the user running litecoind must have write access \n to the `CookieAuthFile` specified in Tor configuration. In some cases this is \n preconfigured and the creation of a hidden service is automatic. If permission problems \n are seen with `-debug=tor` they can be resolved by adding both the user running tor and \n-the user running bitcoind to the same group and setting permissions appropriately. On \n-Debian-based systems the user running bitcoind can be added to the debian-tor group, \n+the user running litecoind to the same group and setting permissions appropriately. On \n+Debian-based systems the user running litecoind can be added to the debian-tor group, \n which has the appropriate permissions. An alternative authentication method is the use \n of the `-torpassword` flag and a `hash-password` which can be enabled and specified in \n-Tor configuration.\n\\ No newline at end of file\n+Tor configuration."
      },
      {
        "sha": "f3c69b3553b8832aa35ed5510f4ca3b899fb34d3",
        "filename": "doc/translation_process.md",
        "status": "modified",
        "additions": 18,
        "deletions": 18,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/translation_process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/translation_process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_process.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,28 +1,28 @@\n Translations\n ============\n \n-The Bitcoin-Core project has been designed to support multiple localisations. This makes adding new phrases, and completely new languages easily achievable. For managing all application translations, Bitcoin-Core makes use of the Transifex online translation management tool.\n+The Litecoin-Core project has been designed to support multiple localisations. This makes adding new phrases, and completely new languages easily achievable. For managing all application translations, Litecoin-Core makes use of the Transifex online translation management tool.\n \n ### Helping to translate (using Transifex)\n Transifex is setup to monitor the Github repo for updates, and when code containing new translations is found, Transifex will process any changes. It may take several hours after a pull-request has been merged, to appear in the Transifex web interface.\n \n-Multiple language support is critical in assisting Bitcoin\u2019s global adoption, and growth. One of Bitcoin\u2019s greatest strengths is cross-boarder money transfers, any help making that easier is greatly appreciated.\n+Multiple language support is critical in assisting Litecoin\u2019s global adoption, and growth. One of Litecoin\u2019s greatest strengths is cross-boarder money transfers, any help making that easier is greatly appreciated.\n \n-See the [Transifex Bitcoin project](https://www.transifex.com/projects/p/bitcoin/) to assist in translations. You should also join the translation mailing list for announcements - see details below.\n+See the [Transifex Litecoin project](https://www.transifex.com/projects/p/litecoin/) to assist in translations. You should also join the translation mailing list for announcements - see details below.\n \n ### Writing code with translations\n We use automated scripts to help extract translations in both Qt, and non-Qt source files. It is rarely necessary to manually edit the files in `src/qt/locale/`. The translation source files must adhere to the following format:\n-`bitcoin_xx_YY.ts or bitcoin_xx.ts`\n+`litecoin_xx_YY.ts or litecoin_xx.ts`\n \n-`src/qt/locale/bitcoin_en.ts` is treated in a special way. It is used as the source for all other translations. Whenever a string in the source code is changed, this file must be updated to reflect those changes. A custom script is used to extract strings from the non-Qt parts. This script makes use of `gettext`, so make sure that utility is installed (ie, `apt-get install gettext` on Ubuntu/Debian). Once this has been updated, `lupdate` (included in the Qt SDK) is used to update `bitcoin_en.ts`.\n+`src/qt/locale/litecoin_en.ts` is treated in a special way. It is used as the source for all other translations. Whenever a string in the source code is changed, this file must be updated to reflect those changes. A custom script is used to extract strings from the non-Qt parts. This script makes use of `gettext`, so make sure that utility is installed (ie, `apt-get install gettext` on Ubuntu/Debian). Once this has been updated, `lupdate` (included in the Qt SDK) is used to update `litecoin_en.ts`.\n \n-To automatically regenerate the `bitcoin_en.ts` file, run the following commands:\n+To automatically regenerate the `litecoin_en.ts` file, run the following commands:\n ```sh\n cd src/\n make translate\n ```\n \n-`contrib/bitcoin-qt.pro` takes care of generating `.qm` (binary compiled) files from `.ts` (source files) files. It\u2019s mostly automated, and you shouldn\u2019t need to worry about it.\n+`contrib/litecoin-qt.pro` takes care of generating `.qm` (binary compiled) files from `.ts` (source files) files. It\u2019s mostly automated, and you shouldn\u2019t need to worry about it.\n \n **Example Qt translation**\n ```cpp\n@@ -36,14 +36,14 @@ When an updated source file is merged into the Github repo, Transifex will autom\n \n To create the pull-request, use the following commands:\n ```\n-git add src/qt/bitcoinstrings.cpp src/qt/locale/bitcoin_en.ts\n+git add src/qt/litecoinstrings.cpp src/qt/locale/litecoin_en.ts\n git commit\n ```\n \n ### Creating a Transifex account\n Visit the [Transifex Signup](https://www.transifex.com/signup/) page to create an account. Take note of your username and password, as they will be required to configure the command-line tool.\n \n-You can find the Bitcoin translation project at [https://www.transifex.com/projects/p/bitcoin/](https://www.transifex.com/projects/p/bitcoin/).\n+You can find the Litecoin translation project at [https://www.transifex.com/projects/p/litecoin/](https://www.transifex.com/projects/p/litecoin/).\n \n ### Installing the Transifex client command-line tool\n The client it used to fetch updated translations. If you are having problems, or need more details, see [http://docs.transifex.com/developer/client/setup](http://docs.transifex.com/developer/client/setup)\n@@ -68,24 +68,24 @@ username = USERNAME\n \n Please see [http://docs.transifex.com/developer/client/setup#windows](http://docs.transifex.com/developer/client/setup#windows) for details on installation.\n \n-The Transifex Bitcoin project config file is included as part of the repo. It can be found at `.tx/config`, however you shouldn\u2019t need change anything.\n+The Transifex Litecoin project config file is included as part of the repo. It can be found at `.tx/config`, however you shouldn\u2019t need change anything.\n \n ### Synchronising translations\n To assist in updating translations, we have created a script to help.\n \n 1. `python contrib/devtools/update-translations.py`\n-2. Update `src/qt/bitcoin_locale.qrc` manually or via\n-   `ls src/qt/locale/*ts|xargs -n1 basename|sed 's/\\(bitcoin_\\(.*\\)\\).ts/<file alias=\"\\2\">locale\\/\\1.qm<\\/file>/'`\n+2. Update `src/qt/litecoin_locale.qrc` manually or via\n+   `ls src/qt/locale/*ts|xargs -n1 basename|sed 's/\\(litecoin_\\(.*\\)\\).ts/<file alias=\"\\2\">locale\\/\\1.qm<\\/file>/'`\n 3. Update `src/Makefile.qt.include` manually or via\n-   `ls src/qt/locale/*ts|xargs -n1 basename|sed 's/\\(bitcoin_\\(.*\\)\\).ts/  qt\\/locale\\/\\1.ts \\\\/'`\n+   `ls src/qt/locale/*ts|xargs -n1 basename|sed 's/\\(litecoin_\\(.*\\)\\).ts/  qt\\/locale\\/\\1.ts \\\\/'`\n 4. `git add` new translations from `src/qt/locale/`\n \n **Do not directly download translations** one by one from the Transifex website, as we do a few post-processing steps before committing the translations.\n \n ### Handling Plurals (in source files)\n When new plurals are added to the source file, it's important to do the following steps:\n \n-1. Open `bitcoin_en.ts` in Qt Linguist (included in the Qt SDK)\n+1. Open `litecoin_en.ts` in Qt Linguist (included in the Qt SDK)\n 2. Search for `%n`, which will take you to the parts in the translation that use plurals\n 3. Look for empty `English Translation (Singular)` and `English Translation (Plural)` fields\n 4. Add the appropriate strings for the singular and plural form of the base string\n@@ -94,18 +94,18 @@ When new plurals are added to the source file, it's important to do the followin\n 7. Save the source file\n \n ### Translating a new language\n-To create a new language template, you will need to edit the languages manifest file `src/qt/bitcoin.qrc` and add a new entry. Below is an example of the english language entry.\n+To create a new language template, you will need to edit the languages manifest file `src/qt/litecoin.qrc` and add a new entry. Below is an example of the english language entry.\n \n ```xml\n <qresource prefix=\"/translations\">\n-    <file alias=\"en\">locale/bitcoin_en.qm</file>\n+    <file alias=\"en\">locale/litecoin_en.qm</file>\n     ...\n </qresource>\n ```\n \n **Note:** that the language translation file **must end in `.qm`** (the compiled extension), and not `.ts`.\n \n ### Questions and general assistance\n-The Bitcoin-Core translation maintainers include *tcatm, seone, Diapolo, wumpus and luke-jr*. You can find them, and others, in the Freenode IRC chatroom - `irc.freenode.net #bitcoin-core-dev`.\n+The Litecoin-Core translation maintainers include *tcatm, seone, Diapolo, wumpus and luke-jr*. You can find them, and others, in the Freenode IRC chatroom - `irc.freenode.net #litecoin-core-dev`.\n \n-If you are a translator, you should also subscribe to the mailing list, https://groups.google.com/forum/#!forum/bitcoin-translators. Announcements will be posted during application pre-releases to notify translators to check for updates.\n+If you are a translator, you should also subscribe to the mailing list, https://groups.google.com/forum/#!forum/litecoin-translators. Announcements will be posted during application pre-releases to notify translators to check for updates."
      },
      {
        "sha": "956149705b74a96f1701a9f41b905c4c3ce02992",
        "filename": "doc/translation_strings_policy.md",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/translation_strings_policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/translation_strings_policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_strings_policy.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,7 +1,7 @@\n Translation Strings Policy\n ===========================\n \n-This document provides guidelines for internationalization of the Bitcoin Core software.\n+This document provides guidelines for internationalization of the Litecoin Core software.\n \n How to translate?\n ------------------\n@@ -85,10 +85,10 @@ In Qt code use tr's third argument for optional plurality. For example:\n This adds `<numerusform>`s to the respective `.ts` file, which can be translated separately depending on the language. In English, this is simply:\n \n     <message numerus=\"yes\">\n-        <source>%n active connection(s) to Bitcoin network</source>\n+        <source>%n active connection(s) to Litecoin network</source>\n         <translation>\n-            <numerusform>%n active connection to Bitcoin network</numerusform>\n-            <numerusform>%n active connections to Bitcoin network</numerusform>\n+            <numerusform>%n active connection to Litecoin network</numerusform>\n+            <numerusform>%n active connections to Litecoin network</numerusform>\n         </translation>\n     </message>\n \n@@ -106,4 +106,4 @@ The second example reduces the number of pluralized words that translators have\n \n During a string freeze (often before a major release), no translation strings are to be added, modified or removed.\n \n-This can be checked by executing `make translate` in the `src` directory, then verifying that `bitcoin_en.ts` remains unchanged.\n+This can be checked by executing `make translate` in the `src` directory, then verifying that `litecoin_en.ts` remains unchanged."
      },
      {
        "sha": "f7c0ad20085f56371e7c9bf4a21a49213ae2ca92",
        "filename": "doc/travis-ci.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/travis-ci.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/travis-ci.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/travis-ci.txt?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -29,7 +29,7 @@ trigger cache-invalidation and rebuilds as necessary.\n \n These caches can be manually removed if necessary. This is one of the very few\n manual operations that is possible with Travis, and it can be done by the\n-Bitcoin Core committer via the Travis web interface.\n+Litecoin Core committer via the Travis web interface.\n \n In some cases, secure strings may be needed for hiding sensitive info such as\n private keys or URLs. The travis client may be used to create these strings:"
      },
      {
        "sha": "8eca877bbb552c333d3d947f647af8524e9b68e3",
        "filename": "doc/unit-tests.md",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/unit-tests.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/unit-tests.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/unit-tests.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -6,13 +6,13 @@ and tests weren't explicitly disabled.\n \n After configuring, they can be run with `make check`.\n \n-To run the bitcoind tests manually, launch `src/test/test_bitcoin`.\n+To run the litecoind tests manually, launch `src/test/test_litecoin`.\n \n-To add more bitcoind tests, add `BOOST_AUTO_TEST_CASE` functions to the existing\n+To add more litecoind tests, add `BOOST_AUTO_TEST_CASE` functions to the existing\n .cpp files in the `test/` directory or add new .cpp files that\n implement new BOOST_AUTO_TEST_SUITE sections.\n \n-To run the bitcoin-qt tests manually, launch `src/qt/test/test_bitcoin-qt`\n+To run the litecoin-qt tests manually, launch `src/qt/test/test_litecoin-qt`\n \n-To add more bitcoin-qt tests, add them to the `src/qt/test/` directory and\n+To add more litecoin-qt tests, add them to the `src/qt/test/` directory and\n the `src/qt/test/test_main.cpp` file."
      },
      {
        "sha": "2cd05066269fdac43ec46f6041ae278651dec760",
        "filename": "doc/zmq.md",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -5,8 +5,8 @@ connections, inter-process communication, and shared-memory,\n providing various message-oriented semantics such as publish/subscribe,\n request/reply, and push/pull.\n \n-The Bitcoin Core daemon can be configured to act as a trusted \"border\n-router\", implementing the bitcoin wire protocol and relay, making\n+The Litecoin Core daemon can be configured to act as a trusted \"border\n+router\", implementing the litecoin wire protocol and relay, making\n consensus decisions, maintaining the local blockchain database,\n broadcasting locally generated transactions into the network, and\n providing a queryable RPC interface to interact on a polled basis for\n@@ -33,7 +33,7 @@ buffering or reassembly.\n \n ## Prerequisites\n \n-The ZeroMQ feature in Bitcoin Core requires ZeroMQ API version 4.x or\n+The ZeroMQ feature in Litecoin Core requires ZeroMQ API version 4.x or\n newer. Typically, it is packaged by distributions as something like\n *libzmq3-dev*. The C++ wrapper for ZeroMQ is *not* needed.\n \n@@ -45,7 +45,7 @@ operation.\n \n By default, the ZeroMQ feature is automatically compiled in if the\n necessary prerequisites are found.  To disable, use --disable-zmq\n-during the *configure* step of building bitcoind:\n+during the *configure* step of building litecoind:\n \n     $ ./configure --disable-zmq (other options)\n \n@@ -66,16 +66,16 @@ address. The same address can be used in more than one notification.\n \n For instance:\n \n-    $ bitcoind -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n-               -zmqpubrawtx=ipc:///tmp/bitcoind.tx.raw\n+    $ litecoind -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n+               -zmqpubrawtx=ipc:///tmp/litecoind.tx.raw\n \n Each PUB notification has a topic and body, where the header\n corresponds to the notification type. For instance, for the\n notification `-zmqpubhashtx` the topic is `hashtx` (no null\n terminator) and the body is the hexadecimal transaction hash (32\n bytes).\n \n-These options can also be provided in bitcoin.conf.\n+These options can also be provided in litecoin.conf.\n \n ZeroMQ endpoint specifiers for TCP (and others) are documented in the\n [ZeroMQ API](http://api.zeromq.org/4-0:_start).\n@@ -87,9 +87,9 @@ arriving. Please see `contrib/zmq/zmq_sub.py` for a working example.\n \n ## Remarks\n \n-From the perspective of bitcoind, the ZeroMQ socket is write-only; PUB\n+From the perspective of litecoind, the ZeroMQ socket is write-only; PUB\n sockets don't even have a read function. Thus, there is no state\n-introduced into bitcoind directly. Furthermore, no information is\n+introduced into litecoind directly. Furthermore, no information is\n broadcast that wasn't already received from the public P2P network.\n \n No authentication or authorization is done on connecting clients; it\n@@ -102,5 +102,5 @@ retrieve the chain from the last known block to the new tip.\n \n There are several possibilities that ZMQ notification can get lost\n during transmission depending on the communication type your are\n-using. Bitcoind appends an up-counting sequence number to each\n+using. Litecoind appends an up-counting sequence number to each\n notification which allows listeners to detect lost notifications."
      },
      {
        "sha": "f5f35b8e6e7c67d20717e64b46f98770341842db",
        "filename": "liblitecoinconsensus.pc.in",
        "status": "renamed",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/liblitecoinconsensus.pc.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/liblitecoinconsensus.pc.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/liblitecoinconsensus.pc.in?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -4,8 +4,8 @@ libdir=@libdir@\n includedir=@includedir@\n \n Name: @PACKAGE_NAME@ consensus library\n-Description: Library for the Bitcoin consensus protocol.\n+Description: Library for the Litecoin consensus protocol.\n Version: @PACKAGE_VERSION@\n-Libs: -L${libdir} -lbitcoinconsensus\n+Libs: -L${libdir} -llitecoinconsensus\n Cflags: -I${includedir}\n Requires.private: libcrypto",
        "previous_filename": "libbitcoinconsensus.pc.in"
      },
      {
        "sha": "d0559f1d9f7c03ffa5f7e60cd1aa4b8811617815",
        "filename": "qa/README.md",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/README.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,7 +1,7 @@\n The [pull-tester](/qa/pull-tester/) folder contains a script to call\n multiple tests from the [rpc-tests](/qa/rpc-tests/) folder.\n \n-Every pull request to the bitcoin repository is built and run through\n+Every pull request to the litecoin repository is built and run through\n the regression test suite. You can also run all or only individual\n tests locally.\n \n@@ -50,9 +50,9 @@ Possible options, which apply to each individual test run:\n \n ```\n   -h, --help            show this help message and exit\n-  --nocleanup           Leave bitcoinds and test.* datadir on exit or error\n-  --noshutdown          Don't stop bitcoinds after the test execution\n-  --srcdir=SRCDIR       Source directory containing bitcoind/bitcoin-cli\n+  --nocleanup           Leave litecoinds and test.* datadir on exit or error\n+  --noshutdown          Don't stop litecoinds after the test execution\n+  --srcdir=SRCDIR       Source directory containing litecoind/litecoin-cli\n                         (default: ../../src)\n   --tmpdir=TMPDIR       Root directory for datadirs\n   --tracerpc            Print out all RPC calls as they are made\n@@ -77,7 +77,7 @@ to recover with:\n \n ```bash\n rm -rf cache\n-killall bitcoind\n+killall litecoind\n ```\n \n Writing tests"
      },
      {
        "sha": "c8a337ad24a8337887db8b4d7a3069726804d37b",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 13,
        "deletions": 13,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -17,7 +17,7 @@\n       interface.\n \n For a description of arguments recognized by test scripts, see\n-`qa/pull-tester/test_framework/test_framework.py:BitcoinTestFramework.main`.\n+`qa/pull-tester/test_framework/test_framework.py:LitecoinTestFramework.main`.\n \n \"\"\"\n \n@@ -43,8 +43,8 @@\n #If imported values are not defined then set to zero (or disabled)\n if 'ENABLE_WALLET' not in vars():\n     ENABLE_WALLET=0\n-if 'ENABLE_BITCOIND' not in vars():\n-    ENABLE_BITCOIND=0\n+if 'ENABLE_LITECOIND' not in vars():\n+    ENABLE_LITECOIND=0\n if 'ENABLE_UTILS' not in vars():\n     ENABLE_UTILS=0\n if 'ENABLE_ZMQ' not in vars():\n@@ -75,19 +75,19 @@\n         opts.add(arg)\n \n #Set env vars\n-if \"BITCOIND\" not in os.environ:\n-    os.environ[\"BITCOIND\"] = BUILDDIR + '/src/bitcoind' + EXEEXT\n-if \"BITCOINCLI\" not in os.environ:\n-    os.environ[\"BITCOINCLI\"] = BUILDDIR + '/src/bitcoin-cli' + EXEEXT\n+if \"LITECOIND\" not in os.environ:\n+    os.environ[\"LITECOIND\"] = BUILDDIR + '/src/litecoind' + EXEEXT\n+if \"LITECOINCLI\" not in os.environ:\n+    os.environ[\"LITECOINCLI\"] = BUILDDIR + '/src/litecoin-cli' + EXEEXT\n \n if EXEEXT == \".exe\" and \"-win\" not in opts:\n-    # https://github.com/bitcoin/bitcoin/commit/d52802551752140cf41f0d9a225a43e84404d3e9\n-    # https://github.com/bitcoin/bitcoin/pull/5677#issuecomment-136646964\n+    # https://github.com/wangxinxi/litecoin/commit/d52802551752140cf41f0d9a225a43e84404d3e9\n+    # https://github.com/wangxinxi/litecoin/pull/5677#issuecomment-136646964\n     print(\"Win tests currently disabled by default.  Use -win option to enable\")\n     sys.exit(0)\n \n-if not (ENABLE_WALLET == 1 and ENABLE_UTILS == 1 and ENABLE_BITCOIND == 1):\n-    print(\"No rpc tests to run. Wallet, utils, and bitcoind must all be enabled\")\n+if not (ENABLE_WALLET == 1 and ENABLE_UTILS == 1 and ENABLE_LITECOIND == 1):\n+    print(\"No rpc tests to run. Wallet, utils, and litecoind must all be enabled\")\n     sys.exit(0)\n \n # python3-zmq may not be installed. Handle this gracefully and with some helpful info\n@@ -283,7 +283,7 @@ class RPCCoverage(object):\n     Coverage calculation works by having each test script subprocess write\n     coverage files into a particular directory. These files contain the RPC\n     commands invoked during testing, as well as a complete listing of RPC\n-    commands per `bitcoin-cli help` (`rpc_interface.txt`).\n+    commands per `litecoin-cli help` (`rpc_interface.txt`).\n \n     After all tests complete, the commands run are combined and diff'd against\n     the complete list to calculate uncovered RPC commands."
      },
      {
        "sha": "875d270d20e919b98e11e122b871b46a639c4100",
        "filename": "qa/pull-tester/run-litecoind-for-test.sh.in",
        "status": "renamed",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/pull-tester/run-litecoind-for-test.sh.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/pull-tester/run-litecoind-for-test.sh.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/run-litecoind-for-test.sh.in?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,20 +1,20 @@\n #!/bin/bash\n-# Copyright (c) 2013-2014 The Bitcoin Core developers\n+# Copyright (c) 2013-2014 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n-DATADIR=\"@abs_top_builddir@/.bitcoin\"\n+DATADIR=\"@abs_top_builddir@/.litecoin\"\n rm -rf \"$DATADIR\"\n mkdir -p \"$DATADIR\"/regtest\n touch \"$DATADIR/regtest/debug.log\"\n tail -q -n 1 -F \"$DATADIR/regtest/debug.log\" | grep -m 1 -q \"Done loading\" &\n WAITER=$!\n PORT=`expr 10000 + $$ % 55536`\n-\"@abs_top_builddir@/src/bitcoind@EXEEXT@\" -connect=0.0.0.0 -datadir=\"$DATADIR\" -rpcuser=user -rpcpassword=pass -listen -keypool=3 -debug -debug=net -logtimestamps -checkmempool=0 -relaypriority=0 -port=$PORT -whitelist=127.0.0.1 -regtest -rpcport=`expr $PORT + 1` &\n-BITCOIND=$!\n+\"@abs_top_builddir@/src/litecoind@EXEEXT@\" -connect=0.0.0.0 -datadir=\"$DATADIR\" -rpcuser=user -rpcpassword=pass -listen -keypool=3 -debug -debug=net -logtimestamps -checkmempool=0 -relaypriority=0 -port=$PORT -whitelist=127.0.0.1 -regtest -rpcport=`expr $PORT + 1` &\n+LITECOIND=$!\n \n #Install a watchdog.\n-(sleep 10 && kill -0 $WAITER 2>/dev/null && kill -9 $BITCOIND $$)&\n+(sleep 10 && kill -0 $WAITER 2>/dev/null && kill -9 $LITECOIND $$)&\n wait $WAITER\n \n if [ -n \"$TIMEOUT\" ]; then\n@@ -25,8 +25,8 @@ else\n   RETURN=$?\n fi\n \n-(sleep 15 && kill -0 $BITCOIND 2>/dev/null && kill -9 $BITCOIND $$)&\n-kill $BITCOIND && wait $BITCOIND\n+(sleep 15 && kill -0 $LITECOIND 2>/dev/null && kill -9 $LITECOIND $$)&\n+kill $LITECOIND && wait $LITECOIND\n \n # timeout returns 124 on timeout, otherwise the return value of the child\n ",
        "previous_filename": "qa/pull-tester/run-bitcoind-for-test.sh.in"
      },
      {
        "sha": "035876af90b2ca27df929330ae12b19cfecb7ab7",
        "filename": "qa/pull-tester/tests_config.py.in",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/pull-tester/tests_config.py.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/pull-tester/tests_config.py.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/tests_config.py.in?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2013-2016 The Bitcoin Core developers\n+# Copyright (c) 2013-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -9,6 +9,6 @@ EXEEXT=\"@EXEEXT@\"\n \n # These will turn into comments if they were disabled when configuring.\n @ENABLE_WALLET_TRUE@ENABLE_WALLET=1\n-@BUILD_BITCOIN_UTILS_TRUE@ENABLE_UTILS=1\n-@BUILD_BITCOIND_TRUE@ENABLE_BITCOIND=1\n+@BUILD_LITECOIN_UTILS_TRUE@ENABLE_UTILS=1\n+@BUILD_LITECOIND_TRUE@ENABLE_LITECOIND=1\n @ENABLE_ZMQ_TRUE@ENABLE_ZMQ=1"
      },
      {
        "sha": "30cd6daf31b94ed7d30b6dd0f38e6b56d339dea9",
        "filename": "qa/rpc-tests/README.md",
        "status": "modified",
        "additions": 13,
        "deletions": 13,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/README.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -2,7 +2,7 @@ Regression tests\n ================\n \n ### [test_framework/authproxy.py](test_framework/authproxy.py)\n-Taken from the [python-bitcoinrpc repository](https://github.com/jgarzik/python-bitcoinrpc).\n+Taken from the [python-litecoinrpc repository](https://github.com/jgarzik/python-litecoinrpc).\n \n ### [test_framework/test_framework.py](test_framework/test_framework.py)\n Base class for new regression tests.\n@@ -11,19 +11,19 @@ Base class for new regression tests.\n Generally useful functions.\n \n ### [test_framework/mininode.py](test_framework/mininode.py)\n-Basic code to support p2p connectivity to a bitcoind.\n+Basic code to support p2p connectivity to a litecoind.\n \n ### [test_framework/comptool.py](test_framework/comptool.py)\n Framework for comparison-tool style, p2p tests.\n \n ### [test_framework/script.py](test_framework/script.py)\n-Utilities for manipulating transaction scripts (originally from python-bitcoinlib)\n+Utilities for manipulating transaction scripts (originally from python-litecoinlib)\n \n ### [test_framework/blockstore.py](test_framework/blockstore.py)\n Implements disk-backed block and tx storage.\n \n ### [test_framework/key.py](test_framework/key.py)\n-Wrapper around OpenSSL EC_Key (originally from python-bitcoinlib)\n+Wrapper around OpenSSL EC_Key (originally from python-litecoinlib)\n \n ### [test_framework/bignum.py](test_framework/bignum.py)\n Helpers for script.py\n@@ -41,10 +41,10 @@ over the network (```CBlock```, ```CTransaction```, etc, along with the network-\n wrappers for them, ```msg_block```, ```msg_tx```, etc).\n \n * P2P tests have two threads.  One thread handles all network communication\n-with the bitcoind(s) being tested (using python's asyncore package); the other\n+with the litecoind(s) being tested (using python's asyncore package); the other\n implements the test logic.\n \n-* ```NodeConn``` is the class used to connect to a bitcoind.  If you implement\n+* ```NodeConn``` is the class used to connect to a litecoind.  If you implement\n a callback class that derives from ```NodeConnCB``` and pass that to the\n ```NodeConn``` object, your code will receive the appropriate callbacks when\n events of interest arrive.\n@@ -64,13 +64,13 @@ is tested.  Examples: ```p2p-accept-block.py```, ```maxblocksinflight.py```.\n ## Comptool\n \n * Testing framework for writing tests that compare the block/tx acceptance\n-behavior of a bitcoind against 1 or more other bitcoind instances, or against\n+behavior of a litecoind against 1 or more other litecoind instances, or against\n known outcomes, or both.\n \n * Set the ```num_nodes``` variable (defined in ```ComparisonTestFramework```) to start up\n 1 or more nodes.  If using 1 node, then ```--testbinary``` can be used as a command line\n-option to change the bitcoind binary used by the test.  If using 2 or more nodes,\n-then ```--refbinary``` can be optionally used to change the bitcoind that will be used\n+option to change the litecoind binary used by the test.  If using 2 or more nodes,\n+then ```--refbinary``` can be optionally used to change the litecoind that will be used\n on nodes 2 and up.\n \n * Implement a (generator) function called ```get_tests()``` which yields ```TestInstance```s.\n@@ -79,13 +79,13 @@ Each ```TestInstance``` consists of:\n     * ```object``` is a ```CBlock```, ```CTransaction```, or\n     ```CBlockHeader```.  ```CBlock```'s and ```CTransaction```'s are tested for\n     acceptance.  ```CBlockHeader```s can be used so that the test runner can deliver\n-    complete headers-chains when requested from the bitcoind, to allow writing\n+    complete headers-chains when requested from the litecoind, to allow writing\n     tests where blocks can be delivered out of order but still processed by\n-    headers-first bitcoind's.\n+    headers-first litecoind's.\n     * ```outcome``` is ```True```, ```False```, or ```None```.  If ```True```\n     or ```False```, the tip is compared with the expected tip -- either the\n     block passed in, or the hash specified as the optional 3rd entry.  If\n-    ```None``` is specified, then the test will compare all the bitcoind's\n+    ```None``` is specified, then the test will compare all the litecoind's\n     being tested to see if they all agree on what the best tip is.\n     * ```hash``` is the block hash of the tip to compare against. Optional to\n     specify; if left out then the hash of the block passed in will be used as\n@@ -99,7 +99,7 @@ Each ```TestInstance``` consists of:\n     sequence and synced (this is slower when processing many blocks).\n   - ```sync_every_transaction```: ```True/False```.  Analogous to\n     ```sync_every_block```, except if the outcome on the last tx is \"None\",\n-    then the contents of the entire mempool are compared across all bitcoind\n+    then the contents of the entire mempool are compared across all litecoind\n     connections.  If ```True``` or ```False```, then only the last tx's\n     acceptance is tested against the given outcome.\n "
      },
      {
        "sha": "686ccfb1d9bec65a644aedf1ba6cbde8c6774c95",
        "filename": "qa/rpc-tests/abandonconflict.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/abandonconflict.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/abandonconflict.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/abandonconflict.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,14 +1,14 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n import urllib.parse\n \n-class AbandonConflictTest(BitcoinTestFramework):\n+class AbandonConflictTest(LitecoinTestFramework):\n     def __init__(self):\n         super().__init__()\n         self.num_nodes = 2"
      },
      {
        "sha": "025854a11f313a2d6d170716ffd4890f023332d6",
        "filename": "qa/rpc-tests/bip65-cltv-p2p.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/bip65-cltv-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/bip65-cltv-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip65-cltv-p2p.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2015-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "9f7b04bd9d8f8cf08fe2bc5a726cf5a5b5fe2d9e",
        "filename": "qa/rpc-tests/bip65-cltv.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/bip65-cltv.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/bip65-cltv.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip65-cltv.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,16 +1,16 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2015-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test the CHECKLOCKTIMEVERIFY (BIP65) soft-fork logic\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n \n-class BIP65Test(BitcoinTestFramework):\n+class BIP65Test(LitecoinTestFramework):\n     def __init__(self):\n         super().__init__()\n         self.num_nodes = 3"
      },
      {
        "sha": "ed1e092a1f6d2fa22d402b5201f29c7f44fd72e4",
        "filename": "qa/rpc-tests/bip68-112-113-p2p.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/bip68-112-113-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/bip68-112-113-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip68-112-113-p2p.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015 The Bitcoin Core developers\n+# Copyright (c) 2015 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "e98ffa84775402e19376dfc042bf0bc1b2c36e82",
        "filename": "qa/rpc-tests/bip68-sequence.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/bip68-sequence.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/bip68-sequence.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip68-sequence.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,13 +1,13 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test BIP68 implementation\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n from test_framework.script import *\n from test_framework.mininode import *\n@@ -21,7 +21,7 @@\n # RPC error for non-BIP68 final transactions\n NOT_FINAL_ERROR = \"64: non-BIP68-final\"\n \n-class BIP68Test(BitcoinTestFramework):\n+class BIP68Test(LitecoinTestFramework):\n     def __init__(self):\n         super().__init__()\n         self.num_nodes = 2"
      },
      {
        "sha": "8d88d16e72fee971b681afdad68826fc55eaa410",
        "filename": "qa/rpc-tests/bip9-softforks.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/bip9-softforks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/bip9-softforks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip9-softforks.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015 The Bitcoin Core developers\n+# Copyright (c) 2015 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -195,7 +195,7 @@ def test_BIP(self, bipName, activated_version, invalidate, invalidatePostSignatu\n         # Restart all\n         self.test.block_store.close()\n         stop_nodes(self.nodes)\n-        wait_bitcoinds()\n+        wait_litecoinds()\n         shutil.rmtree(self.options.tmpdir)\n         self.setup_chain()\n         self.setup_network()"
      },
      {
        "sha": "cf65e965ebfd608492f4961bc2c956b77895cfc3",
        "filename": "qa/rpc-tests/bipdersig-p2p.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/bipdersig-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/bipdersig-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bipdersig-p2p.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2015-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "a2533df1a564bd02062797cebc9bead8a4bfbd38",
        "filename": "qa/rpc-tests/bipdersig.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/bipdersig.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/bipdersig.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bipdersig.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,16 +1,16 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test the BIP66 changeover logic\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n \n-class BIP66Test(BitcoinTestFramework):\n+class BIP66Test(LitecoinTestFramework):\n     def __init__(self):\n         super().__init__()\n         self.num_nodes = 3"
      },
      {
        "sha": "4e1eb4ad831651581d5a1d80569b6fec84716abb",
        "filename": "qa/rpc-tests/blockchain.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/blockchain.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/blockchain.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/blockchain.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -10,7 +10,7 @@\n \n from decimal import Decimal\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.authproxy import JSONRPCException\n from test_framework.util import (\n     assert_equal,\n@@ -22,7 +22,7 @@\n )\n \n \n-class BlockchainTest(BitcoinTestFramework):\n+class BlockchainTest(LitecoinTestFramework):\n     \"\"\"\n     Test blockchain-related RPC calls:\n "
      },
      {
        "sha": "842f5c1de264d06d4451b4c4adb95b67e74e821a",
        "filename": "qa/rpc-tests/create_cache.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/create_cache.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/create_cache.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/create_cache.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,16 +1,16 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2016 The Bitcoin Core developers\n+# Copyright (c) 2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Helper script to create the cache\n-# (see BitcoinTestFramework.setup_chain)\n+# (see LitecoinTestFramework.setup_chain)\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n \n-class CreateCache(BitcoinTestFramework):\n+class CreateCache(LitecoinTestFramework):\n \n     def __init__(self):\n         super().__init__()"
      },
      {
        "sha": "0fffac70d8c7e845d65690de445443bff13693a7",
        "filename": "qa/rpc-tests/decodescript.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/decodescript.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/decodescript.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/decodescript.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,14 +1,14 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2015-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n from test_framework.mininode import *\n from io import BytesIO\n \n-class DecodeScriptTest(BitcoinTestFramework):\n+class DecodeScriptTest(LitecoinTestFramework):\n     \"\"\"Tests decoding scripts via RPC command \"decodescript\".\"\"\"\n \n     def __init__(self):"
      },
      {
        "sha": "ebe2953563b50f6393c1d7bb3885b2cc09824097",
        "filename": "qa/rpc-tests/disablewallet.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/disablewallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/disablewallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/disablewallet.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,17 +1,17 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2015-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Exercise API with -disablewallet.\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n \n \n-class DisableWalletTest (BitcoinTestFramework):\n+class DisableWalletTest (LitecoinTestFramework):\n \n     def __init__(self):\n         super().__init__()\n@@ -24,7 +24,7 @@ def setup_network(self, split=False):\n         self.sync_all()\n \n     def run_test (self):\n-        # Check regression: https://github.com/bitcoin/bitcoin/issues/6963#issuecomment-154548880\n+        # Check regression: https://github.com/wangxinxi/litecoin/issues/6963#issuecomment-154548880\n         x = self.nodes[0].validateaddress('3J98t1WpEZ73CNmQviecrnyiWrnqRhWNLy')\n         assert(x['isvalid'] == False)\n         x = self.nodes[0].validateaddress('mneYUmWYsuk7kySiURxCi3AGxrAqZxLgPZ')"
      },
      {
        "sha": "a01bce0f5017df3246f1143e6bd098fcc8266217",
        "filename": "qa/rpc-tests/forknotify.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/forknotify.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/forknotify.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/forknotify.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,16 +1,16 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test -alertnotify \n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n \n-class ForkNotifyTest(BitcoinTestFramework):\n+class ForkNotifyTest(LitecoinTestFramework):\n \n     def __init__(self):\n         super().__init__()"
      },
      {
        "sha": "1474e3b6293b27b466324e12e84b9ab8ee7aaa5a",
        "filename": "qa/rpc-tests/fundrawtransaction.py",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/fundrawtransaction.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,9 +1,9 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n \n \n@@ -14,7 +14,7 @@ def get_unspent(listunspent, amount):\n     raise AssertionError('Could not find unspent with amount={}'.format(amount))\n \n \n-class RawTransactionsTest(BitcoinTestFramework):\n+class RawTransactionsTest(LitecoinTestFramework):\n \n     def __init__(self):\n         super().__init__()\n@@ -201,9 +201,9 @@ def run_test(self):\n \n         try:\n             self.nodes[2].fundrawtransaction(rawtx, {'changeAddress': 'foobar'})\n-            raise AssertionError(\"Accepted invalid bitcoin address\")\n+            raise AssertionError(\"Accepted invalid litecoin address\")\n         except JSONRPCException as e:\n-            assert(\"changeAddress must be a valid bitcoin address\" in e.error['message'])\n+            assert(\"changeAddress must be a valid litecoin address\" in e.error['message'])\n \n \n         ############################################################\n@@ -470,7 +470,7 @@ def run_test(self):\n         self.nodes[1].encryptwallet(\"test\")\n         self.nodes.pop(1)\n         stop_nodes(self.nodes)\n-        wait_bitcoinds()\n+        wait_litecoinds()\n \n         self.nodes = start_nodes(self.num_nodes, self.options.tmpdir)\n         # This test is not meant to test fee estimation and we'd like"
      },
      {
        "sha": "88c6e82ab2d4fc26cf047539b5b76564887e356d",
        "filename": "qa/rpc-tests/getblocktemplate_longpoll.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/getblocktemplate_longpoll.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/getblocktemplate_longpoll.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getblocktemplate_longpoll.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,9 +1,9 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n \n import threading\n@@ -21,7 +21,7 @@ def __init__(self, node):\n     def run(self):\n         self.node.getblocktemplate({'longpollid':self.longpollid})\n \n-class GetBlockTemplateLPTest(BitcoinTestFramework):\n+class GetBlockTemplateLPTest(LitecoinTestFramework):\n     '''\n     Test longpolling with getblocktemplate.\n     '''"
      },
      {
        "sha": "c48b8c32e3717629598f51d3d5eed0fefa0893d2",
        "filename": "qa/rpc-tests/getblocktemplate_proposals.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/getblocktemplate_proposals.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/getblocktemplate_proposals.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getblocktemplate_proposals.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,9 +1,9 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n \n from binascii import a2b_hex, b2a_hex\n@@ -65,7 +65,7 @@ def assert_template(node, tmpl, txlist, expect):\n     if rsp != expect:\n         raise AssertionError('unexpected: %s' % (rsp,))\n \n-class GetBlockTemplateProposalTest(BitcoinTestFramework):\n+class GetBlockTemplateProposalTest(LitecoinTestFramework):\n     '''\n     Test block proposals with getblocktemplate.\n     '''"
      },
      {
        "sha": "88e61cf2dea085c4cb0db9d3e7f8ad04d6a12fd0",
        "filename": "qa/rpc-tests/getchaintips.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/getchaintips.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/getchaintips.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getchaintips.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,16 +1,16 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n # Exercise the getchaintips API.  We introduce a network split, work\n # on chains of different lengths, and join the network together again.\n # This gives us two tips, verify that it works.\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import assert_equal\n \n-class GetChainTipsTest (BitcoinTestFramework):\n+class GetChainTipsTest (LitecoinTestFramework):\n     def __init__(self):\n         super().__init__()\n         self.num_nodes = 4"
      },
      {
        "sha": "a1f49529146c412241577eeda098cf09bd2432ff",
        "filename": "qa/rpc-tests/httpbasics.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/httpbasics.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/httpbasics.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/httpbasics.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,19 +1,19 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test rpc http basics\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n \n import http.client\n import urllib.parse\n \n-class HTTPBasicsTest (BitcoinTestFramework):\n+class HTTPBasicsTest (LitecoinTestFramework):\n     def __init__(self):\n         super().__init__()\n         self.num_nodes = 3\n@@ -93,7 +93,7 @@ def run_test(self):\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read()\n         assert(b'\"error\":null' in out1)\n-        assert(conn.sock!=None) #connection must be closed because bitcoind should use keep-alive by default\n+        assert(conn.sock!=None) #connection must be closed because litecoind should use keep-alive by default\n \n         # Check excessive request size\n         conn = http.client.HTTPConnection(urlNode2.hostname, urlNode2.port)"
      },
      {
        "sha": "9530c46aaf9e287805f375a48930661ae658e2d4",
        "filename": "qa/rpc-tests/importprunedfunds.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/importprunedfunds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/importprunedfunds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/importprunedfunds.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,13 +1,13 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n import decimal\n \n-class ImportPrunedFundsTest(BitcoinTestFramework):\n+class ImportPrunedFundsTest(LitecoinTestFramework):\n \n     def __init__(self):\n         super().__init__()"
      },
      {
        "sha": "1be058ef2399634333ebc518412dd80cbe9fe317",
        "filename": "qa/rpc-tests/invalidateblock.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/invalidateblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/invalidateblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidateblock.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,16 +1,16 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test InvalidateBlock code\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n \n-class InvalidateTest(BitcoinTestFramework):\n+class InvalidateTest(LitecoinTestFramework):\n     \n         \n     def __init__(self):"
      },
      {
        "sha": "d2dddc13b631e7c702f917d70b3957a5a0a0657e",
        "filename": "qa/rpc-tests/invalidblockrequest.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/invalidblockrequest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/invalidblockrequest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidblockrequest.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2015-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "a24e7cc3875e7827d0e3e3e75bd480f94042a651",
        "filename": "qa/rpc-tests/invalidtxrequest.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/invalidtxrequest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/invalidtxrequest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidtxrequest.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2015-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "d9db5a69f4bc3c42bd9a8a862d482d1995ef4be1",
        "filename": "qa/rpc-tests/keypool.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/keypool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/keypool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/keypool.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,14 +1,14 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n # Exercise the wallet keypool, and interaction with wallet encryption/locking\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n \n-class KeyPoolTest(BitcoinTestFramework):\n+class KeyPoolTest(LitecoinTestFramework):\n \n     def run_test(self):\n         nodes = self.nodes\n@@ -19,7 +19,7 @@ def run_test(self):\n         \n         # Encrypt wallet and wait to terminate\n         nodes[0].encryptwallet('test')\n-        bitcoind_processes[0].wait()\n+        litecoind_processes[0].wait()\n         # Restart node 0\n         nodes[0] = start_node(0, self.options.tmpdir)\n         # Keep creating keys"
      },
      {
        "sha": "b7d161f92f0cac7eaa0eb136d07191d5f0e6d39c",
        "filename": "qa/rpc-tests/listtransactions.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/listtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/listtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/listtransactions.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,11 +1,11 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n # Exercise the listtransactions API\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n from test_framework.mininode import CTransaction, COIN\n from io import BytesIO\n@@ -16,7 +16,7 @@ def txFromHex(hexstring):\n     tx.deserialize(f)\n     return tx\n \n-class ListTransactionsTest(BitcoinTestFramework):\n+class ListTransactionsTest(LitecoinTestFramework):\n     def __init__(self):\n         super().__init__()\n         self.num_nodes = 4"
      },
      {
        "sha": "ad0b8cd8b5e282f49f060b297d5f204828119003",
        "filename": "qa/rpc-tests/maxblocksinflight.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/maxblocksinflight.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/maxblocksinflight.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/maxblocksinflight.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,10 +1,10 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2015-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n from test_framework.mininode import *\n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n import logging\n \n@@ -70,10 +70,10 @@ def run(self):\n         self.connection.disconnect_node()\n \n \n-class MaxBlocksInFlightTest(BitcoinTestFramework):\n+class MaxBlocksInFlightTest(LitecoinTestFramework):\n     def add_options(self, parser):\n         parser.add_option(\"--testbinary\", dest=\"testbinary\",\n-                          default=os.getenv(\"BITCOIND\", \"bitcoind\"),\n+                          default=os.getenv(\"LITECOIND\", \"litecoind\"),\n                           help=\"Binary to test max block requests behavior\")\n \n     def __init__(self):"
      },
      {
        "sha": "a97c6a771bfd7daf89f8b99706111f3bcbc68fb2",
        "filename": "qa/rpc-tests/maxuploadtarget.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/maxuploadtarget.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/maxuploadtarget.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/maxuploadtarget.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,10 +1,10 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2015-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n from test_framework.mininode import *\n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n import time\n \n@@ -79,12 +79,12 @@ def received_pong():\n         self.ping_counter += 1\n         return success\n \n-class MaxUploadTest(BitcoinTestFramework):\n+class MaxUploadTest(LitecoinTestFramework):\n  \n     def add_options(self, parser):\n         parser.add_option(\"--testbinary\", dest=\"testbinary\",\n-                          default=os.getenv(\"BITCOIND\", \"bitcoind\"),\n-                          help=\"bitcoind binary to test\")\n+                          default=os.getenv(\"LITECOIND\", \"litecoind\"),\n+                          help=\"litecoind binary to test\")\n \n     def __init__(self):\n         super().__init__()"
      },
      {
        "sha": "6640b5bb125442b314245328f4e01a8b06368d7b",
        "filename": "qa/rpc-tests/mempool_limit.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/mempool_limit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/mempool_limit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_limit.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,14 +1,14 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n # Test mempool limiting together/eviction with the wallet\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n \n-class MempoolLimitTest(BitcoinTestFramework):\n+class MempoolLimitTest(LitecoinTestFramework):\n \n     def setup_network(self):\n         self.nodes = []"
      },
      {
        "sha": "c45de9e7c4b8f8fb011555947fb3113e78da1818",
        "filename": "qa/rpc-tests/mempool_packages.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_packages.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,18 +1,18 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n # Test descendant package tracking code\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n from test_framework.mininode import COIN\n \n MAX_ANCESTORS = 25\n MAX_DESCENDANTS = 25\n \n-class MempoolPackagesTest(BitcoinTestFramework):\n+class MempoolPackagesTest(LitecoinTestFramework):\n     def __init__(self):\n         super().__init__()\n         self.num_nodes = 2"
      },
      {
        "sha": "fa9b7e1b00ff2da9a6590b2298a2b96107e61333",
        "filename": "qa/rpc-tests/mempool_reorg.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/mempool_reorg.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/mempool_reorg.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_reorg.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -8,11 +8,11 @@\n # that spend (directly or indirectly) coinbase transactions.\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n \n # Create one-input, one-output, no-fee transaction:\n-class MempoolCoinbaseTest(BitcoinTestFramework):\n+class MempoolCoinbaseTest(LitecoinTestFramework):\n     def __init__(self):\n         super().__init__()\n         self.num_nodes = 2"
      },
      {
        "sha": "e548cb08379040ec89ebe27064aecbd033b51eef",
        "filename": "qa/rpc-tests/mempool_resurrect_test.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/mempool_resurrect_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/mempool_resurrect_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_resurrect_test.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -8,11 +8,11 @@\n # the blockchain is re-organized.\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n \n # Create one-input, one-output, no-fee transaction:\n-class MempoolCoinbaseTest(BitcoinTestFramework):\n+class MempoolCoinbaseTest(LitecoinTestFramework):\n \n     def __init__(self):\n         super().__init__()"
      },
      {
        "sha": "f9e53091c3bf76b43ae8bcec98250376e8ca2f16",
        "filename": "qa/rpc-tests/mempool_spendcoinbase.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/mempool_spendcoinbase.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/mempool_spendcoinbase.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_spendcoinbase.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -13,11 +13,11 @@\n # but less mature coinbase spends are NOT.\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n \n # Create one-input, one-output, no-fee transaction:\n-class MempoolSpendCoinbaseTest(BitcoinTestFramework):\n+class MempoolSpendCoinbaseTest(LitecoinTestFramework):\n \n     def __init__(self):\n         super().__init__()"
      },
      {
        "sha": "14a56d23d3a322ddac30a4330d9686ffed6d1825",
        "filename": "qa/rpc-tests/merkle_blocks.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/merkle_blocks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/merkle_blocks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/merkle_blocks.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,16 +1,16 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test merkleblock fetch/validation\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n \n-class MerkleBlockTest(BitcoinTestFramework):\n+class MerkleBlockTest(LitecoinTestFramework):\n \n     def __init__(self):\n         super().__init__()"
      },
      {
        "sha": "c4d4d3673f271bf3a6a790ad48ecf73ae1c21eb0",
        "filename": "qa/rpc-tests/multi_rpc.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/multi_rpc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/multi_rpc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/multi_rpc.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,20 +1,20 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2015-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test mulitple rpc user config option rpcauth\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import str_to_b64str, assert_equal\n \n import os\n import http.client\n import urllib.parse\n \n-class HTTPBasicsTest (BitcoinTestFramework):\n+class HTTPBasicsTest (LitecoinTestFramework):\n \n     def __init__(self):\n         super().__init__()\n@@ -23,10 +23,10 @@ def __init__(self):\n \n     def setup_chain(self):\n         super().setup_chain()\n-        #Append rpcauth to bitcoin.conf before initialization\n+        #Append rpcauth to litecoin.conf before initialization\n         rpcauth = \"rpcauth=rt:93648e835a54c573682c2eb19f882535$7681e9c5b74bdd85e78166031d2058e1069b3ed7ed967c93fc63abba06f31144\"\n         rpcauth2 = \"rpcauth=rt2:f8607b1a88861fac29dfccf9b52ff9f$ff36a0c23c8c62b4846112e50fa888416e94c17bfd4c42f88fd8f55ec6a3137e\"\n-        with open(os.path.join(self.options.tmpdir+\"/node0\", \"bitcoin.conf\"), 'a') as f:\n+        with open(os.path.join(self.options.tmpdir+\"/node0\", \"litecoin.conf\"), 'a') as f:\n             f.write(rpcauth+\"\\n\")\n             f.write(rpcauth2+\"\\n\")\n "
      },
      {
        "sha": "3470b0d0c349c34d1cfda2a0d2c39de629e8a6de",
        "filename": "qa/rpc-tests/nodehandling.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/nodehandling.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/nodehandling.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/nodehandling.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,19 +1,19 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test node handling\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n \n import http.client\n import urllib.parse\n \n-class NodeHandlingTest (BitcoinTestFramework):\n+class NodeHandlingTest (LitecoinTestFramework):\n \n     def __init__(self):\n         super().__init__()"
      },
      {
        "sha": "9a0ee6941d3f60d0e6e388032fbf563b4293088a",
        "filename": "qa/rpc-tests/p2p-acceptblock.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/p2p-acceptblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/p2p-acceptblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-acceptblock.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,10 +1,10 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2015-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n from test_framework.mininode import *\n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n import time\n from test_framework.blocktools import create_block, create_coinbase\n@@ -105,11 +105,11 @@ def sync_with_ping(self, timeout=30):\n         return received_pong\n \n \n-class AcceptBlockTest(BitcoinTestFramework):\n+class AcceptBlockTest(LitecoinTestFramework):\n     def add_options(self, parser):\n         parser.add_option(\"--testbinary\", dest=\"testbinary\",\n-                          default=os.getenv(\"BITCOIND\", \"bitcoind\"),\n-                          help=\"bitcoind binary to test\")\n+                          default=os.getenv(\"LITECOIND\", \"litecoind\"),\n+                          help=\"litecoind binary to test\")\n \n     def __init__(self):\n         super().__init__()"
      },
      {
        "sha": "49dc0a4f818ca5184437f4b67b7d4ac173adb302",
        "filename": "qa/rpc-tests/p2p-feefilter.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/p2p-feefilter.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/p2p-feefilter.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-feefilter.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,11 +1,11 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2016 The Bitcoin Core developers\n+# Copyright (c) 2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n \n from test_framework.mininode import *\n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n import time\n \n@@ -45,7 +45,7 @@ def send_filter(self, feerate):\n         self.send_message(msg_feefilter(feerate))\n         self.sync_with_ping()\n \n-class FeeFilterTest(BitcoinTestFramework):\n+class FeeFilterTest(LitecoinTestFramework):\n \n     def __init__(self):\n         super().__init__()"
      },
      {
        "sha": "5c6ac86830b074a6f92095e7ae65180584e718ce",
        "filename": "qa/rpc-tests/p2p-fullblocktest.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/p2p-fullblocktest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/p2p-fullblocktest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-fullblocktest.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2015-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -18,7 +18,7 @@ def __init__(self, tx = CTransaction(), n = -1):\n         self.n = n  # the output we're spending\n \n '''\n-This reimplements tests from the bitcoinj/FullBlockTestGenerator used\n+This reimplements tests from the litecoinj/FullBlockTestGenerator used\n by the pull-tester.\n \n We use the testing framework in which we expect a particular answer from\n@@ -399,7 +399,7 @@ def update_block(block_number, new_transactions):\n         b26 = update_block(26, [])\n         yield rejected(RejectResult(16, b'bad-cb-length'))\n \n-        # Extend the b26 chain to make sure bitcoind isn't accepting b26\n+        # Extend the b26 chain to make sure litecoind isn't accepting b26\n         b27 = block(27, spend=out[7])\n         yield rejected(RejectResult(16, b'bad-prevblk'))\n \n@@ -411,7 +411,7 @@ def update_block(block_number, new_transactions):\n         b28 = update_block(28, [])\n         yield rejected(RejectResult(16, b'bad-cb-length'))\n \n-        # Extend the b28 chain to make sure bitcoind isn't accepting b28\n+        # Extend the b28 chain to make sure litecoind isn't accepting b28\n         b29 = block(29, spend=out[7])\n         yield rejected(RejectResult(16, b'bad-prevblk'))\n \n@@ -1125,7 +1125,7 @@ def update_block(block_number, new_transactions):\n         #\n         #    The tx'es must be unsigned and pass the node's mempool policy.  It is unsigned for the\n         #    rather obscure reason that the Python signature code does not distinguish between\n-        #    Low-S and High-S values (whereas the bitcoin code has custom code which does so);\n+        #    Low-S and High-S values (whereas the litecoin code has custom code which does so);\n         #    as a result of which, the odds are 50% that the python code will use the right\n         #    value and the transaction will be accepted into the mempool. Until we modify the\n         #    test framework to support low-S signing, we are out of luck."
      },
      {
        "sha": "9027042b305d155d90acf32795c7f26b98856473",
        "filename": "qa/rpc-tests/p2p-mempool.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/p2p-mempool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/p2p-mempool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-mempool.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,10 +1,10 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2015-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n from test_framework.mininode import *\n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n import time\n \n@@ -71,7 +71,7 @@ def send_mempool(self):\n         self.lastInv = []\n         self.send_message(msg_mempool())\n \n-class P2PMempoolTests(BitcoinTestFramework):\n+class P2PMempoolTests(LitecoinTestFramework):\n     def setup_chain(self):\n         initialize_chain_clean(self.options.tmpdir, 2)\n "
      },
      {
        "sha": "1811205896bd5467be983748eb0a42414a47b493",
        "filename": "qa/rpc-tests/p2p-segwit.py",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/p2p-segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/p2p-segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-segwit.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,10 +1,10 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2016 The Bitcoin Core developers\n+# Copyright (c) 2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n from test_framework.mininode import *\n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n from test_framework.script import *\n from test_framework.blocktools import create_block, create_coinbase, add_witness_commitment, WITNESS_COMMITMENT_HEADER\n@@ -167,14 +167,14 @@ def __init__(self, sha256, n, nValue):\n         self.nValue = nValue\n \n \n-class SegWitTest(BitcoinTestFramework):\n+class SegWitTest(LitecoinTestFramework):\n     def setup_chain(self):\n         initialize_chain_clean(self.options.tmpdir, 3)\n \n     def add_options(self, parser):\n         parser.add_option(\"--oldbinary\", dest=\"oldbinary\",\n                           default=None,\n-                          help=\"pre-segwit bitcoind binary for upgrade testing\")\n+                          help=\"pre-segwit litecoind binary for upgrade testing\")\n \n     def setup_network(self):\n         self.nodes = []\n@@ -183,7 +183,7 @@ def setup_network(self):\n         self.nodes.append(start_node(1, self.options.tmpdir, [\"-debug\", \"-logtimemicros=1\", \"-whitelist=127.0.0.1\", \"-acceptnonstdtxn=0\"]))\n         connect_nodes(self.nodes[0], 1)\n \n-        # If an old bitcoind is given, do the upgrade-after-activation test.\n+        # If an old litecoind is given, do the upgrade-after-activation test.\n         self.test_upgrade = False\n         if (self.options.oldbinary != None):\n             self.nodes.append(start_node(2, self.options.tmpdir, [\"-debug\", \"-whitelist=127.0.0.1\"], binary=self.options.oldbinary))\n@@ -272,7 +272,7 @@ def test_unnecessary_witness_before_segwit_activation(self):\n         # rule).\n         self.test_node.test_witness_block(block, accepted=False)\n         # TODO: fix synchronization so we can test reject reason\n-        # Right now, bitcoind delays sending reject messages for blocks\n+        # Right now, litecoind delays sending reject messages for blocks\n         # until the future, making synchronization here difficult.\n         #assert_equal(self.test_node.last_reject.reason, \"unexpected-witness\")\n \n@@ -591,7 +591,7 @@ def test_submit_block(self):\n         self.nodes[0].submitblock(bytes_to_hex_str(block.serialize(True)))\n         assert(self.nodes[0].getbestblockhash() != block.hash)\n \n-        # Now redo commitment with the standard nonce, but let bitcoind fill it in.\n+        # Now redo commitment with the standard nonce, but let litecoind fill it in.\n         add_witness_commitment(block, nonce=0)\n         block.vtx[0].wit = CTxWitness()\n         block.solve()\n@@ -1504,7 +1504,7 @@ def test_p2sh_witness(self, segwit_activated):\n         # This transaction should not be accepted into the mempool pre- or\n         # post-segwit.  Mempool acceptance will use SCRIPT_VERIFY_WITNESS which\n         # will require a witness to spend a witness program regardless of\n-        # segwit activation.  Note that older bitcoind's that are not\n+        # segwit activation.  Note that older litecoind's that are not\n         # segwit-aware would also reject this for failing CLEANSTACK.\n         self.test_node.test_transaction_acceptance(spend_tx, with_witness=False, accepted=False)\n \n@@ -1540,12 +1540,12 @@ def test_p2sh_witness(self, segwit_activated):\n     # Test the behavior of starting up a segwit-aware node after the softfork\n     # has activated.  As segwit requires different block data than pre-segwit\n     # nodes would have stored, this requires special handling.\n-    # To enable this test, pass --oldbinary=<path-to-pre-segwit-bitcoind> to\n+    # To enable this test, pass --oldbinary=<path-to-pre-segwit-litecoind> to\n     # the test.\n     def test_upgrade_after_activation(self, node, node_id):\n         print(\"\\tTesting software upgrade after softfork activation\")\n \n-        assert(node_id != 0) # node0 is assumed to be a segwit-active bitcoind\n+        assert(node_id != 0) # node0 is assumed to be a segwit-active litecoind\n \n         # Make sure the nodes are all up\n         sync_blocks(self.nodes)"
      },
      {
        "sha": "f54cd53919142960d76fcf51b3a82b29c74efb71",
        "filename": "qa/rpc-tests/p2p-versionbits-warning.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/p2p-versionbits-warning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/p2p-versionbits-warning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-versionbits-warning.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,10 +1,10 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2016 The Bitcoin Core developers\n+# Copyright (c) 2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n from test_framework.mininode import *\n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n import time\n from test_framework.blocktools import create_block, create_coinbase\n@@ -58,7 +58,7 @@ def sync_with_ping(self, timeout=30):\n         return received_pong\n \n \n-class VersionBitsWarningTest(BitcoinTestFramework):\n+class VersionBitsWarningTest(LitecoinTestFramework):\n     def __init__(self):\n         super().__init__()\n         self.setup_clean_chain = True\n@@ -140,7 +140,7 @@ def run_test(self):\n         # to ACTIVE.\n         self.nodes[0].generate(VB_PERIOD)\n         stop_node(self.nodes[0], 0)\n-        wait_bitcoinds()\n+        wait_litecoinds()\n         # Empty out the alert file\n         with open(self.alert_filename, 'w') as f:\n             pass\n@@ -150,7 +150,7 @@ def run_test(self):\n         self.nodes[0].generate(1)\n         assert(len(self.nodes[0].getinfo()[\"errors\"]) != 0)\n         stop_node(self.nodes[0], 0)\n-        wait_bitcoinds()\n+        wait_litecoinds()\n         self.test_versionbits_in_alert_file()\n \n         # Test framework expects the node to still be running..."
      },
      {
        "sha": "fbed842eea77dd9424e7ad824f00232f865175fc",
        "filename": "qa/rpc-tests/prioritise_transaction.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/prioritise_transaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/prioritise_transaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/prioritise_transaction.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,17 +1,17 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2015-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test PrioritiseTransaction code\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n from test_framework.mininode import COIN, MAX_BLOCK_SIZE\n \n-class PrioritiseTransactionTest(BitcoinTestFramework):\n+class PrioritiseTransactionTest(LitecoinTestFramework):\n \n     def __init__(self):\n         super().__init__()"
      },
      {
        "sha": "b8a278394c9eed5a1b1203f3a768219cdd304a5e",
        "filename": "qa/rpc-tests/proxy_test.py",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/proxy_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/proxy_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/proxy_test.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,20 +1,20 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2015-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n import socket\n \n from test_framework.socks5 import Socks5Configuration, Socks5Command, Socks5Server, AddressType\n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n from test_framework.netutil import test_ipv6_local\n '''\n Test plan:\n-- Start bitcoind's with different proxy configurations\n+- Start litecoind's with different proxy configurations\n - Use addnode to initiate connections\n - Verify that proxies are connected to, and the right connection command is given\n-- Proxy configurations to test on bitcoind side:\n+- Proxy configurations to test on litecoind side:\n     - `-proxy` (proxy everything)\n     - `-onion` (proxy just onions)\n     - `-proxyrandomize` Circuit randomization\n@@ -24,8 +24,8 @@\n     - proxy on IPv6\n \n - Create various proxies (as threads)\n-- Create bitcoinds that connect to them\n-- Manipulate the bitcoinds using addnode (onetry) an observe effects\n+- Create litecoinds that connect to them\n+- Manipulate the litecoinds using addnode (onetry) an observe effects\n \n addnode connect to IPv4\n addnode connect to IPv6\n@@ -34,7 +34,7 @@\n '''\n \n \n-class ProxyTest(BitcoinTestFramework):\n+class ProxyTest(LitecoinTestFramework):\n     def __init__(self):\n         super().__init__()\n         self.num_nodes = 4\n@@ -89,7 +89,7 @@ def node_test(self, node, proxies, auth, test_onion=True):\n         node.addnode(\"15.61.23.23:1234\", \"onetry\")\n         cmd = proxies[0].queue.get()\n         assert(isinstance(cmd, Socks5Command))\n-        # Note: bitcoind's SOCKS5 implementation only sends atyp DOMAINNAME, even if connecting directly to IPv4/IPv6\n+        # Note: litecoind's SOCKS5 implementation only sends atyp DOMAINNAME, even if connecting directly to IPv4/IPv6\n         assert_equal(cmd.atyp, AddressType.DOMAINNAME)\n         assert_equal(cmd.addr, b\"15.61.23.23\")\n         assert_equal(cmd.port, 1234)\n@@ -103,7 +103,7 @@ def node_test(self, node, proxies, auth, test_onion=True):\n             node.addnode(\"[1233:3432:2434:2343:3234:2345:6546:4534]:5443\", \"onetry\")\n             cmd = proxies[1].queue.get()\n             assert(isinstance(cmd, Socks5Command))\n-            # Note: bitcoind's SOCKS5 implementation only sends atyp DOMAINNAME, even if connecting directly to IPv4/IPv6\n+            # Note: litecoind's SOCKS5 implementation only sends atyp DOMAINNAME, even if connecting directly to IPv4/IPv6\n             assert_equal(cmd.atyp, AddressType.DOMAINNAME)\n             assert_equal(cmd.addr, b\"1233:3432:2434:2343:3234:2345:6546:4534\")\n             assert_equal(cmd.port, 5443)\n@@ -114,11 +114,11 @@ def node_test(self, node, proxies, auth, test_onion=True):\n \n         if test_onion:\n             # Test: outgoing onion connection through node\n-            node.addnode(\"bitcoinostk4e4re.onion:8333\", \"onetry\")\n+            node.addnode(\"litecoinostk4e4re.onion:8333\", \"onetry\")\n             cmd = proxies[2].queue.get()\n             assert(isinstance(cmd, Socks5Command))\n             assert_equal(cmd.atyp, AddressType.DOMAINNAME)\n-            assert_equal(cmd.addr, b\"bitcoinostk4e4re.onion\")\n+            assert_equal(cmd.addr, b\"litecoinostk4e4re.onion\")\n             assert_equal(cmd.port, 8333)\n             if not auth:\n                 assert_equal(cmd.username, None)"
      },
      {
        "sha": "4258c9ba1784ea0d2ffb8ab6c75b8dd626bd0997",
        "filename": "qa/rpc-tests/pruning.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/pruning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/pruning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/pruning.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -11,13 +11,13 @@\n # This test takes 30 mins or more (up to 2 hours)\n # ********\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n \n def calc_usage(blockdir):\n     return sum(os.path.getsize(blockdir+f) for f in os.listdir(blockdir) if os.path.isfile(blockdir+f)) / (1024. * 1024.)\n \n-class PruneTest(BitcoinTestFramework):\n+class PruneTest(LitecoinTestFramework):\n \n     def __init__(self):\n         super().__init__()"
      },
      {
        "sha": "de89f540d53022dd3c997992433c4bdb96b21fd2",
        "filename": "qa/rpc-tests/rawtransactions.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/rawtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/rawtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rawtransactions.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -8,11 +8,11 @@\n # that spend (directly or indirectly) coinbase transactions.\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n \n # Create one-input, one-output, no-fee transaction:\n-class RawTransactionsTest(BitcoinTestFramework):\n+class RawTransactionsTest(LitecoinTestFramework):\n \n     def __init__(self):\n         super().__init__()\n@@ -23,7 +23,7 @@ def setup_network(self, split=False):\n         self.nodes = start_nodes(self.num_nodes, self.options.tmpdir)\n \n         #connect to a local machine for debugging\n-        #url = \"http://bitcoinrpc:DP6DvqZtqXarpeNWyN3LZTFchCCyCUuHwNF7E8pX99x1@%s:%d\" % ('127.0.0.1', 18332)\n+        #url = \"http://litecoinrpc:DP6DvqZtqXarpeNWyN3LZTFchCCyCUuHwNF7E8pX99x1@%s:%d\" % ('127.0.0.1', 18332)\n         #proxy = AuthServiceProxy(url)\n         #proxy.url = url # store URL on proxy for info\n         #self.nodes.append(proxy)"
      },
      {
        "sha": "6e0cf16ef6491a66436fe74e4d3ba3df821a2aac",
        "filename": "qa/rpc-tests/receivedby.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/receivedby.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/receivedby.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/receivedby.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,11 +1,11 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n # Exercise the listreceivedbyaddress API\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n \n \n@@ -25,7 +25,7 @@ def get_sub_array_from_array(object_array, to_match):\n         return item\n     return []\n \n-class ReceivedByTest(BitcoinTestFramework):\n+class ReceivedByTest(LitecoinTestFramework):\n \n     def __init__(self):\n         super().__init__()"
      },
      {
        "sha": "ec28993e63eeb67732368567c72099f925264829",
        "filename": "qa/rpc-tests/reindex.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/reindex.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/reindex.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/reindex.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,16 +1,16 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test -reindex and -reindex-chainstate with CheckBlockIndex\n #\n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n import time\n \n-class ReindexTest(BitcoinTestFramework):\n+class ReindexTest(LitecoinTestFramework):\n \n     def __init__(self):\n         super().__init__()\n@@ -26,7 +26,7 @@ def reindex(self, justchainstate=False):\n         self.nodes[0].generate(3)\n         blockcount = self.nodes[0].getblockcount()\n         stop_node(self.nodes[0], 0)\n-        wait_bitcoinds()\n+        wait_litecoinds()\n         self.nodes[0]=start_node(0, self.options.tmpdir, [\"-debug\", \"-reindex-chainstate\" if justchainstate else \"-reindex\", \"-checkblockindex=1\"])\n         while self.nodes[0].getblockcount() < blockcount:\n             time.sleep(0.1)"
      },
      {
        "sha": "0f0fa3ba967d228e1bc3a1ea66d173b36d4aa4ec",
        "filename": "qa/rpc-tests/replace-by-fee.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/replace-by-fee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/replace-by-fee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/replace-by-fee.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,13 +1,13 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test replace by fee code\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n from test_framework.script import *\n from test_framework.mininode import *\n@@ -66,7 +66,7 @@ def make_utxo(node, amount, confirmed=True, scriptPubKey=CScript([1])):\n \n     return COutPoint(int(txid, 16), 0)\n \n-class ReplaceByFeeTest(BitcoinTestFramework):\n+class ReplaceByFeeTest(LitecoinTestFramework):\n \n     def __init__(self):\n         super().__init__()"
      },
      {
        "sha": "450bb650add1bf7f854c943b7c8a8e89bc58ee3e",
        "filename": "qa/rpc-tests/rest.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/rest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/rest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rest.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -8,7 +8,7 @@\n #\n \n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n from struct import *\n from io import BytesIO\n@@ -44,7 +44,7 @@ def http_post_call(host, port, path, requestdata = '', response_object = 0):\n \n     return conn.getresponse().read()\n \n-class RESTTest (BitcoinTestFramework):\n+class RESTTest (LitecoinTestFramework):\n     FORMAT_SEPARATOR = \".\"\n \n     def __init__(self):"
      },
      {
        "sha": "a2dd4460e6f7eebfaecb337aa27d3ed7d4f48c6c",
        "filename": "qa/rpc-tests/rpcbind_test.py",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/rpcbind_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/rpcbind_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rpcbind_test.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -26,11 +26,11 @@ def run_bind_test(tmpdir, allow_ips, connect_to, addresses, expected):\n     binds = ['-rpcbind='+addr for addr in addresses]\n     nodes = start_nodes(self.num_nodes, tmpdir, [base_args + binds], connect_to)\n     try:\n-        pid = bitcoind_processes[0].pid\n+        pid = litecoind_processes[0].pid\n         assert_equal(set(get_bind_addrs(pid)), set(expected))\n     finally:\n         stop_nodes(nodes)\n-        wait_bitcoinds()\n+        wait_litecoinds()\n \n def run_allowip_test(tmpdir, allow_ips, rpchost, rpcport):\n     '''\n@@ -47,7 +47,7 @@ def run_allowip_test(tmpdir, allow_ips, rpchost, rpcport):\n     finally:\n         node = None # make sure connection will be garbage collected and closed\n         stop_nodes(nodes)\n-        wait_bitcoinds()\n+        wait_litecoinds()\n \n \n def run_test(tmpdir):\n@@ -102,9 +102,9 @@ def main():\n \n     parser = optparse.OptionParser(usage=\"%prog [options]\")\n     parser.add_option(\"--nocleanup\", dest=\"nocleanup\", default=False, action=\"store_true\",\n-                      help=\"Leave bitcoinds and test.* datadir on exit or error\")\n+                      help=\"Leave litecoinds and test.* datadir on exit or error\")\n     parser.add_option(\"--srcdir\", dest=\"srcdir\", default=\"../../src\",\n-                      help=\"Source directory containing bitcoind/bitcoin-cli (default: %default%)\")\n+                      help=\"Source directory containing litecoind/litecoin-cli (default: %default%)\")\n     parser.add_option(\"--tmpdir\", dest=\"tmpdir\", default=tempfile.mkdtemp(prefix=\"test\"),\n                       help=\"Root directory for datadirs\")\n     (options, args) = parser.parse_args()\n@@ -133,7 +133,7 @@ def main():\n \n     if not options.nocleanup:\n         print(\"Cleaning up\")\n-        wait_bitcoinds()\n+        wait_litecoinds()\n         shutil.rmtree(options.tmpdir)\n \n     if success:"
      },
      {
        "sha": "1189981735f07de395ef59c1800ccb88ef7055e8",
        "filename": "qa/rpc-tests/segwit.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/segwit.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,13 +1,13 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2016 The Bitcoin Core developers\n+# Copyright (c) 2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test the SegWit changeover logic\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n from test_framework.mininode import sha256, ripemd160\n import os\n@@ -74,7 +74,7 @@ def find_unspent(node, min_value):\n         if utxo['amount'] >= min_value:\n             return utxo\n \n-class SegWitTest(BitcoinTestFramework):\n+class SegWitTest(LitecoinTestFramework):\n \n     def setup_chain(self):\n         print(\"Initializing test directory \"+self.options.tmpdir)"
      },
      {
        "sha": "97cde64c2c9813097c5a18691248b0b5b7a53a1f",
        "filename": "qa/rpc-tests/sendheaders.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/sendheaders.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/sendheaders.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/sendheaders.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,10 +1,10 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n from test_framework.mininode import *\n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n from test_framework.blocktools import create_block, create_coinbase\n \n@@ -240,7 +240,7 @@ class TestNode(BaseNode):\n     def __init__(self):\n         BaseNode.__init__(self)\n \n-class SendHeadersTest(BitcoinTestFramework):\n+class SendHeadersTest(LitecoinTestFramework):\n     def __init__(self):\n         super().__init__()\n         self.setup_clean_chain = True"
      },
      {
        "sha": "be2ca0274f341e8b753990188f9029b0edd84edb",
        "filename": "qa/rpc-tests/signmessages.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/signmessages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/signmessages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/signmessages.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,13 +1,13 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2016 The Bitcoin Core developers\n+# Copyright (c) 2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n \n \n-class SignMessagesTest(BitcoinTestFramework):\n+class SignMessagesTest(LitecoinTestFramework):\n     \"\"\"Tests RPC commands for signing and verifying messages.\"\"\"\n \n     def __init__(self):"
      },
      {
        "sha": "5c06e67ee611816f0e7e58a27d501b19e70d01fa",
        "filename": "qa/rpc-tests/signrawtransactions.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/signrawtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/signrawtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/signrawtransactions.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,13 +1,13 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2015-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n \n \n-class SignRawTransactionsTest(BitcoinTestFramework):\n+class SignRawTransactionsTest(LitecoinTestFramework):\n     \"\"\"Tests transaction signing via RPC command \"signrawtransaction\".\"\"\"\n \n     def __init__(self):"
      },
      {
        "sha": "b36503daf9c5ed4b49ee1f7f4d8ded367058f9a8",
        "filename": "qa/rpc-tests/smartfees.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/smartfees.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/smartfees.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/smartfees.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -8,7 +8,7 @@\n #\n \n from collections import OrderedDict\n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n \n # Construct 2 trivial P2SH's and the ScriptSigs that spend them\n@@ -143,7 +143,7 @@ def check_estimates(node, fees_seen, max_invalid, print_estimates = True):\n     return all_estimates\n \n \n-class EstimateFeeTest(BitcoinTestFramework):\n+class EstimateFeeTest(LitecoinTestFramework):\n \n     def __init__(self):\n         super().__init__()"
      },
      {
        "sha": "8c7bf2c0990550088881fc69647fd04c24439c53",
        "filename": "qa/rpc-tests/test_framework/authproxy.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/test_framework/authproxy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/test_framework/authproxy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/authproxy.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -51,7 +51,7 @@\n \n HTTP_TIMEOUT = 30\n \n-log = logging.getLogger(\"BitcoinRPC\")\n+log = logging.getLogger(\"LitecoinRPC\")\n \n class JSONRPCException(Exception):\n     def __init__(self, rpc_error):"
      },
      {
        "sha": "0e22796246da2336927fac882cec5db46ec6f300",
        "filename": "qa/rpc-tests/test_framework/bignum.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/test_framework/bignum.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/test_framework/bignum.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/bignum.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -2,7 +2,7 @@\n #\n # bignum.py\n #\n-# This file is copied from python-bitcoinlib.\n+# This file is copied from python-litecoinlib.\n #\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n@@ -82,7 +82,7 @@ def mpi2bn(s):\n         return -v\n     return v\n \n-# bitcoin-specific little endian format, with implicit size\n+# litecoin-specific little endian format, with implicit size\n def mpi2vch(s):\n     r = s[4:]           # strip size\n     r = r[::-1]         # reverse string, converting BE->LE"
      },
      {
        "sha": "0451bf7b77ccab433804361f59df6e7a5af9fc60",
        "filename": "qa/rpc-tests/test_framework/blocktools.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/test_framework/blocktools.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/test_framework/blocktools.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/blocktools.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/env python3\n # blocktools.py - utilities for manipulating blocks and transactions\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2015-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "1048e6d72d7d73eef3a49904ef9b6185eee9df68",
        "filename": "qa/rpc-tests/test_framework/comptool.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/test_framework/comptool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/test_framework/comptool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/comptool.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2015-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -8,7 +8,7 @@\n from .util import p2p_port\n \n '''\n-This is a tool for comparing two or more bitcoinds to each other\n+This is a tool for comparing two or more litecoinds to each other\n using a script provided.\n \n To use, create a class that implements get_tests(), and pass it in"
      },
      {
        "sha": "c128edad0b1c68cd5f47e6a9e270887a920bc50d",
        "filename": "qa/rpc-tests/test_framework/coverage.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/test_framework/coverage.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/test_framework/coverage.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/coverage.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2015-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -73,7 +73,7 @@ def get_filename(dirname, n_node):\n \n def write_all_rpc_commands(dirname, node):\n     \"\"\"\n-    Write out a list of all RPC functions available in `bitcoin-cli` for\n+    Write out a list of all RPC functions available in `litecoin-cli` for\n     coverage comparison. This will only happen once per coverage\n     directory.\n "
      },
      {
        "sha": "98595afc27fb8b915618a2a9d7d82c2d2c5f0103",
        "filename": "qa/rpc-tests/test_framework/key.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/test_framework/key.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/test_framework/key.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/key.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -2,7 +2,7 @@\n #\n # key.py - OpenSSL wrapper\n #\n-# This file is modified from python-bitcoinlib.\n+# This file is modified from python-litecoinlib.\n #\n \n \"\"\"ECC secp256k1 crypto routines"
      },
      {
        "sha": "6ce1552b104685b264fff73299262cc44f6a60cc",
        "filename": "qa/rpc-tests/test_framework/mininode.py",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/test_framework/mininode.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/test_framework/mininode.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/mininode.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,22 +1,22 @@\n #!/usr/bin/env python3\n # Copyright (c) 2010 ArtForz -- public domain half-a-node\n # Copyright (c) 2012 Jeff Garzik\n-# Copyright (c) 2010-2016 The Bitcoin Core developers\n+# Copyright (c) 2010-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n-# mininode.py - Bitcoin P2P network half-a-node\n+# mininode.py - Litecoin P2P network half-a-node\n #\n # This python code was modified from ArtForz' public domain  half-a-node, as\n # found in the mini-node branch of http://github.com/jgarzik/pynode.\n #\n-# NodeConn: an object which manages p2p connectivity to a bitcoin node\n+# NodeConn: an object which manages p2p connectivity to a litecoin node\n # NodeConnCB: a base class that describes the interface for receiving\n #             callbacks with network messages from a NodeConn\n # CBlock, CTransaction, CBlockHeader, CTxIn, CTxOut, etc....:\n #     data structures that should map to corresponding structures in\n-#     bitcoin/primitives\n+#     litecoin/primitives\n # msg_block, msg_tx, msg_headers, etc.:\n #     data structures that represent network messages\n # ser_*, deser_*: functions that handle serialization/deserialization\n@@ -259,7 +259,7 @@ def FromHex(obj, hex_string):\n def ToHex(obj):\n     return bytes_to_hex_str(obj.serialize())\n \n-# Objects that map to bitcoind objects, which can be serialized/deserialized\n+# Objects that map to litecoind objects, which can be serialized/deserialized\n \n class CAddress(object):\n     def __init__(self):\n@@ -490,7 +490,7 @@ def deserialize(self, f):\n         if len(self.vin) == 0:\n             flags = struct.unpack(\"<B\", f.read(1))[0]\n             # Not sure why flags can't be zero, but this\n-            # matches the implementation in bitcoind\n+            # matches the implementation in litecoind\n             if (flags != 0):\n                 self.vin = deser_vector(f, CTxIn)\n                 self.vout = deser_vector(f, CTxOut)\n@@ -1139,7 +1139,7 @@ def __init__(self):\n         self.headers = []\n \n     def deserialize(self, f):\n-        # comment in bitcoind indicates these should be deserialized as blocks\n+        # comment in litecoind indicates these should be deserialized as blocks\n         blocks = deser_vector(f, CBlock)\n         for x in blocks:\n             self.headers.append(CBlockHeader(x))\n@@ -1377,7 +1377,7 @@ def __init__(self, dstaddr, dstport, rpc, callback, net=\"regtest\", services=NODE\n         vt.addrFrom.ip = \"0.0.0.0\"\n         vt.addrFrom.port = 0\n         self.send_message(vt, True)\n-        print('MiniNode: Connecting to Bitcoin Node IP # ' + dstaddr + ':' \\\n+        print('MiniNode: Connecting to Litecoin Node IP # ' + dstaddr + ':' \\\n             + str(dstport))\n \n         try:"
      },
      {
        "sha": "d17aae15e086f107a6b3b477379044236b882cbe",
        "filename": "qa/rpc-tests/test_framework/netutil.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/test_framework/netutil.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/test_framework/netutil.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/netutil.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "bcd2af1d63a2f36541e3c33053efc87f1488285b",
        "filename": "qa/rpc-tests/test_framework/script.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/test_framework/script.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/test_framework/script.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/script.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,12 +1,12 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2015-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # script.py\n #\n-# This file is modified from python-bitcoinlib.\n+# This file is modified from python-litecoinlib.\n #\n \n \"\"\"Scripts"
      },
      {
        "sha": "1ef1561a03073ed542873e45d2c540f94bb7cffa",
        "filename": "qa/rpc-tests/test_framework/socks5.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/test_framework/socks5.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/test_framework/socks5.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/socks5.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2015-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''"
      },
      {
        "sha": "1935fa114227830c5d3a4081ffba10553fbf74f3",
        "filename": "qa/rpc-tests/test_framework/test_framework.py",
        "status": "modified",
        "additions": 16,
        "deletions": 16,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/test_framework.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -21,7 +21,7 @@\n     sync_mempools,\n     stop_nodes,\n     stop_node,\n-    wait_bitcoinds,\n+    wait_litecoinds,\n     enable_coverage,\n     check_json_precision,\n     initialize_chain_clean,\n@@ -30,7 +30,7 @@\n from .authproxy import JSONRPCException\n \n \n-class BitcoinTestFramework(object):\n+class LitecoinTestFramework(object):\n \n     def __init__(self):\n         self.num_nodes = 4\n@@ -81,7 +81,7 @@ def split_network(self):\n         \"\"\"\n         assert not self.is_network_split\n         stop_nodes(self.nodes)\n-        wait_bitcoinds()\n+        wait_litecoinds()\n         self.setup_network(True)\n \n     def sync_all(self):\n@@ -100,18 +100,18 @@ def join_network(self):\n         \"\"\"\n         assert self.is_network_split\n         stop_nodes(self.nodes)\n-        wait_bitcoinds()\n+        wait_litecoinds()\n         self.setup_network(False)\n \n     def main(self):\n \n         parser = optparse.OptionParser(usage=\"%prog [options]\")\n         parser.add_option(\"--nocleanup\", dest=\"nocleanup\", default=False, action=\"store_true\",\n-                          help=\"Leave bitcoinds and test.* datadir on exit or error\")\n+                          help=\"Leave litecoinds and test.* datadir on exit or error\")\n         parser.add_option(\"--noshutdown\", dest=\"noshutdown\", default=False, action=\"store_true\",\n-                          help=\"Don't stop bitcoinds after the test execution\")\n+                          help=\"Don't stop litecoinds after the test execution\")\n         parser.add_option(\"--srcdir\", dest=\"srcdir\", default=os.path.normpath(os.path.dirname(os.path.realpath(__file__))+\"/../../../src\"),\n-                          help=\"Source directory containing bitcoind/bitcoin-cli (default: %default)\")\n+                          help=\"Source directory containing litecoind/litecoin-cli (default: %default)\")\n         parser.add_option(\"--tmpdir\", dest=\"tmpdir\", default=tempfile.mkdtemp(prefix=\"test\"),\n                           help=\"Root directory for datadirs\")\n         parser.add_option(\"--tracerpc\", dest=\"trace_rpc\", default=False, action=\"store_true\",\n@@ -168,9 +168,9 @@ def main(self):\n         if not self.options.noshutdown:\n             print(\"Stopping nodes\")\n             stop_nodes(self.nodes)\n-            wait_bitcoinds()\n+            wait_litecoinds()\n         else:\n-            print(\"Note: bitcoinds were not stopped and may still be running\")\n+            print(\"Note: litecoinds were not stopped and may still be running\")\n \n         if not self.options.nocleanup and not self.options.noshutdown and success:\n             print(\"Cleaning up\")\n@@ -188,13 +188,13 @@ def main(self):\n             sys.exit(1)\n \n \n-# Test framework for doing p2p comparison testing, which sets up some bitcoind\n+# Test framework for doing p2p comparison testing, which sets up some litecoind\n # binaries:\n # 1 binary: test binary\n # 2 binaries: 1 test binary, 1 ref binary\n # n>2 binaries: 1 test binary, n-1 ref binaries\n \n-class ComparisonTestFramework(BitcoinTestFramework):\n+class ComparisonTestFramework(LitecoinTestFramework):\n \n     def __init__(self):\n         super().__init__()\n@@ -203,11 +203,11 @@ def __init__(self):\n \n     def add_options(self, parser):\n         parser.add_option(\"--testbinary\", dest=\"testbinary\",\n-                          default=os.getenv(\"BITCOIND\", \"bitcoind\"),\n-                          help=\"bitcoind binary to test\")\n+                          default=os.getenv(\"LITECOIND\", \"litecoind\"),\n+                          help=\"litecoind binary to test\")\n         parser.add_option(\"--refbinary\", dest=\"refbinary\",\n-                          default=os.getenv(\"BITCOIND\", \"bitcoind\"),\n-                          help=\"bitcoind binary to use for reference nodes (if any)\")\n+                          default=os.getenv(\"LITECOIND\", \"litecoind\"),\n+                          help=\"litecoind binary to use for reference nodes (if any)\")\n \n     def setup_network(self):\n         self.nodes = start_nodes("
      },
      {
        "sha": "e5bc61db5bc48118689a256df97e2f5e3dba005c",
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "modified",
        "additions": 28,
        "deletions": 28,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -35,7 +35,7 @@\n # The number of ports to \"reserve\" for p2p and rpc, each\n PORT_RANGE = 5000\n \n-BITCOIND_PROC_WAIT_TIMEOUT = 60\n+LITECOIND_PROC_WAIT_TIMEOUT = 60\n \n \n class PortSeed:\n@@ -150,14 +150,14 @@ def sync_mempools(rpc_connections, wait=1, timeout=60):\n         timeout -= wait\n     raise AssertionError(\"Mempool sync failed\")\n \n-bitcoind_processes = {}\n+litecoind_processes = {}\n \n def initialize_datadir(dirname, n):\n     datadir = os.path.join(dirname, \"node\"+str(n))\n     if not os.path.isdir(datadir):\n         os.makedirs(datadir)\n     rpc_u, rpc_p = rpc_auth_pair(n)\n-    with open(os.path.join(datadir, \"bitcoin.conf\"), 'w') as f:\n+    with open(os.path.join(datadir, \"litecoin.conf\"), 'w') as f:\n         f.write(\"regtest=1\\n\")\n         f.write(\"rpcuser=\" + rpc_u + \"\\n\")\n         f.write(\"rpcpassword=\" + rpc_p + \"\\n\")\n@@ -173,14 +173,14 @@ def rpc_url(i, rpchost=None):\n     rpc_u, rpc_p = rpc_auth_pair(i)\n     return \"http://%s:%s@%s:%d\" % (rpc_u, rpc_p, rpchost or '127.0.0.1', rpc_port(i))\n \n-def wait_for_bitcoind_start(process, url, i):\n+def wait_for_litecoind_start(process, url, i):\n     '''\n-    Wait for bitcoind to start. This means that RPC is accessible and fully initialized.\n-    Raise an exception if bitcoind exits during initialization.\n+    Wait for litecoind to start. This means that RPC is accessible and fully initialized.\n+    Raise an exception if litecoind exits during initialization.\n     '''\n     while True:\n         if process.poll() is not None:\n-            raise Exception('bitcoind exited with status %i during initialization' % process.returncode)\n+            raise Exception('litecoind exited with status %i during initialization' % process.returncode)\n         try:\n             rpc = get_rpc_proxy(url, i)\n             blocks = rpc.getblockcount()\n@@ -213,16 +213,16 @@ def initialize_chain(test_dir, num_nodes):\n             if os.path.isdir(os.path.join(\"cache\",\"node\"+str(i))):\n                 shutil.rmtree(os.path.join(\"cache\",\"node\"+str(i)))\n \n-        # Create cache directories, run bitcoinds:\n+        # Create cache directories, run litecoinds:\n         for i in range(MAX_NODES):\n             datadir=initialize_datadir(\"cache\", i)\n-            args = [ os.getenv(\"BITCOIND\", \"bitcoind\"), \"-server\", \"-keypool=1\", \"-datadir=\"+datadir, \"-discover=0\" ]\n+            args = [ os.getenv(\"LITECOIND\", \"litecoind\"), \"-server\", \"-keypool=1\", \"-datadir=\"+datadir, \"-discover=0\" ]\n             if i > 0:\n                 args.append(\"-connect=127.0.0.1:\"+str(p2p_port(0)))\n-            bitcoind_processes[i] = subprocess.Popen(args)\n+            litecoind_processes[i] = subprocess.Popen(args)\n             if os.getenv(\"PYTHON_DEBUG\", \"\"):\n-                print(\"initialize_chain: bitcoind started, waiting for RPC to come up\")\n-            wait_for_bitcoind_start(bitcoind_processes[i], rpc_url(i), i)\n+                print(\"initialize_chain: litecoind started, waiting for RPC to come up\")\n+            wait_for_litecoind_start(litecoind_processes[i], rpc_url(i), i)\n             if os.getenv(\"PYTHON_DEBUG\", \"\"):\n                 print(\"initialize_chain: RPC succesfully started\")\n \n@@ -254,7 +254,7 @@ def initialize_chain(test_dir, num_nodes):\n \n         # Shut them down, and clean up cache directories:\n         stop_nodes(rpcs)\n-        wait_bitcoinds()\n+        wait_litecoinds()\n         disable_mocktime()\n         for i in range(MAX_NODES):\n             os.remove(log_filename(\"cache\", i, \"debug.log\"))\n@@ -266,7 +266,7 @@ def initialize_chain(test_dir, num_nodes):\n         from_dir = os.path.join(\"cache\", \"node\"+str(i))\n         to_dir = os.path.join(test_dir,  \"node\"+str(i))\n         shutil.copytree(from_dir, to_dir)\n-        initialize_datadir(test_dir, i) # Overwrite port/rpcport in bitcoin.conf\n+        initialize_datadir(test_dir, i) # Overwrite port/rpcport in litecoin.conf\n \n def initialize_chain_clean(test_dir, num_nodes):\n     \"\"\"\n@@ -299,18 +299,18 @@ def _rpchost_to_args(rpchost):\n \n def start_node(i, dirname, extra_args=None, rpchost=None, timewait=None, binary=None):\n     \"\"\"\n-    Start a bitcoind and return RPC connection to it\n+    Start a litecoind and return RPC connection to it\n     \"\"\"\n     datadir = os.path.join(dirname, \"node\"+str(i))\n     if binary is None:\n-        binary = os.getenv(\"BITCOIND\", \"bitcoind\")\n+        binary = os.getenv(\"LITECOIND\", \"litecoind\")\n     args = [ binary, \"-datadir=\"+datadir, \"-server\", \"-keypool=1\", \"-discover=0\", \"-rest\", \"-mocktime=\"+str(get_mocktime()) ]\n     if extra_args is not None: args.extend(extra_args)\n-    bitcoind_processes[i] = subprocess.Popen(args)\n+    litecoind_processes[i] = subprocess.Popen(args)\n     if os.getenv(\"PYTHON_DEBUG\", \"\"):\n-        print(\"start_node: bitcoind started, waiting for RPC to come up\")\n+        print(\"start_node: litecoind started, waiting for RPC to come up\")\n     url = rpc_url(i, rpchost)\n-    wait_for_bitcoind_start(bitcoind_processes[i], url, i)\n+    wait_for_litecoind_start(litecoind_processes[i], url, i)\n     if os.getenv(\"PYTHON_DEBUG\", \"\"):\n         print(\"start_node: RPC succesfully started\")\n     proxy = get_rpc_proxy(url, i, timeout=timewait)\n@@ -322,7 +322,7 @@ def start_node(i, dirname, extra_args=None, rpchost=None, timewait=None, binary=\n \n def start_nodes(num_nodes, dirname, extra_args=None, rpchost=None, binary=None):\n     \"\"\"\n-    Start multiple bitcoinds, return RPC connections to them\n+    Start multiple litecoinds, return RPC connections to them\n     \"\"\"\n     if extra_args is None: extra_args = [ None for _ in range(num_nodes) ]\n     if binary is None: binary = [ None for _ in range(num_nodes) ]\n@@ -343,8 +343,8 @@ def stop_node(node, i):\n         node.stop()\n     except http.client.CannotSendRequest as e:\n         print(\"WARN: Unable to stop node: \" + repr(e))\n-    bitcoind_processes[i].wait(timeout=BITCOIND_PROC_WAIT_TIMEOUT)\n-    del bitcoind_processes[i]\n+    litecoind_processes[i].wait(timeout=LITECOIND_PROC_WAIT_TIMEOUT)\n+    del litecoind_processes[i]\n \n def stop_nodes(nodes):\n     for node in nodes:\n@@ -358,11 +358,11 @@ def set_node_times(nodes, t):\n     for node in nodes:\n         node.setmocktime(t)\n \n-def wait_bitcoinds():\n-    # Wait for all bitcoinds to cleanly exit\n-    for bitcoind in bitcoind_processes.values():\n-        bitcoind.wait(timeout=BITCOIND_PROC_WAIT_TIMEOUT)\n-    bitcoind_processes.clear()\n+def wait_litecoinds():\n+    # Wait for all litecoinds to cleanly exit\n+    for litecoind in litecoind_processes.values():\n+        litecoind.wait(timeout=LITECOIND_PROC_WAIT_TIMEOUT)\n+    litecoind_processes.clear()\n \n def connect_nodes(from_connection, node_num):\n     ip_port = \"127.0.0.1:\"+str(p2p_port(node_num))"
      },
      {
        "sha": "0076bc22d4e2fa7e66b4e348cce80c5d7837761f",
        "filename": "qa/rpc-tests/txn_clone.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/txn_clone.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/txn_clone.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/txn_clone.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,16 +1,16 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test proper accounting with an equivalent malleability clone\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n \n-class TxnMallTest(BitcoinTestFramework):\n+class TxnMallTest(LitecoinTestFramework):\n \n     def __init__(self):\n         super().__init__()"
      },
      {
        "sha": "b7780b75b91507e7dfeed18dc7dfc5302114cd1e",
        "filename": "qa/rpc-tests/txn_doublespend.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/txn_doublespend.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/txn_doublespend.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/txn_doublespend.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,16 +1,16 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test proper accounting with a double-spend conflict\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n \n-class TxnMallTest(BitcoinTestFramework):\n+class TxnMallTest(LitecoinTestFramework):\n \n     def __init__(self):\n         super().__init__()"
      },
      {
        "sha": "7bc766164ded4fb1de3cf86e92a2eaf56ca91aba",
        "filename": "qa/rpc-tests/wallet-hd.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/wallet-hd.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/wallet-hd.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet-hd.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,9 +1,9 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2016 The Bitcoin Core developers\n+# Copyright (c) 2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import (\n     start_nodes,\n     start_node,\n@@ -14,7 +14,7 @@\n import shutil\n \n \n-class WalletHDTest(BitcoinTestFramework):\n+class WalletHDTest(LitecoinTestFramework):\n \n     def __init__(self):\n         super().__init__()"
      },
      {
        "sha": "5d4ad7fe6d37f3b882971f5ff0db22e9072a2234",
        "filename": "qa/rpc-tests/wallet.py",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,12 +1,12 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n \n-class WalletTest (BitcoinTestFramework):\n+class WalletTest (LitecoinTestFramework):\n \n     def check_fee_amount(self, curr_balance, balance_with_fee, fee_per_byte, tx_size):\n         \"\"\"Return curr_balance after asserting the fee was in range\"\"\"\n@@ -198,7 +198,7 @@ def run_test (self):\n \n         #do some -walletbroadcast tests\n         stop_nodes(self.nodes)\n-        wait_bitcoinds()\n+        wait_litecoinds()\n         self.nodes = start_nodes(3, self.options.tmpdir, [[\"-walletbroadcast=0\"],[\"-walletbroadcast=0\"],[\"-walletbroadcast=0\"]])\n         connect_nodes_bi(self.nodes,0,1)\n         connect_nodes_bi(self.nodes,1,2)\n@@ -224,7 +224,7 @@ def run_test (self):\n \n         #restart the nodes with -walletbroadcast=1\n         stop_nodes(self.nodes)\n-        wait_bitcoinds()\n+        wait_litecoinds()\n         self.nodes = start_nodes(3, self.options.tmpdir)\n         connect_nodes_bi(self.nodes,0,1)\n         connect_nodes_bi(self.nodes,1,2)\n@@ -328,13 +328,13 @@ def run_test (self):\n             '-reindex',\n             '-zapwallettxes=1',\n             '-zapwallettxes=2',\n-            # disabled until issue is fixed: https://github.com/bitcoin/bitcoin/issues/7463\n+            # disabled until issue is fixed: https://github.com/wangxinxi/litecoin/issues/7463\n             # '-salvagewallet',\n         ]\n         for m in maintenance:\n             print(\"check \" + m)\n             stop_nodes(self.nodes)\n-            wait_bitcoinds()\n+            wait_litecoinds()\n             self.nodes = start_nodes(3, self.options.tmpdir, [[m]] * 3)\n             while m == '-reindex' and [block_count] * 3 != [self.nodes[i].getblockcount() for i in range(3)]:\n                 # reindex will leave rpc warm up \"early\"; Wait for it to finish"
      },
      {
        "sha": "4ec2f43ae22b9a52e574a1f870d66ead16c83253",
        "filename": "qa/rpc-tests/walletbackup.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/walletbackup.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/walletbackup.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/walletbackup.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -33,13 +33,13 @@\n and confirm again balances are correct.\n \"\"\"\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n from random import randint\n import logging\n logging.basicConfig(format='%(levelname)s: %(message)s', level=logging.INFO, stream=sys.stdout)\n \n-class WalletBackupTest(BitcoinTestFramework):\n+class WalletBackupTest(LitecoinTestFramework):\n \n     def __init__(self):\n         super().__init__()"
      },
      {
        "sha": "d5e9251a5aa4f1267642530893dce90d792b2e95",
        "filename": "qa/rpc-tests/zapwallettxes.py",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/zapwallettxes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/zapwallettxes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/zapwallettxes.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,13 +1,13 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n \n \n-class ZapWalletTXesTest (BitcoinTestFramework):\n+class ZapWalletTXesTest (LitecoinTestFramework):\n \n     def __init__(self):\n         super().__init__()\n@@ -52,18 +52,18 @@ def run_test (self):\n         tx3 = self.nodes[0].gettransaction(txid3)\n         assert_equal(tx3['txid'], txid3) #tx3 must be available (unconfirmed)\n         \n-        #restart bitcoind\n+        #restart litecoind\n         self.nodes[0].stop()\n-        bitcoind_processes[0].wait()\n+        litecoind_processes[0].wait()\n         self.nodes[0] = start_node(0,self.options.tmpdir)\n         \n         tx3 = self.nodes[0].gettransaction(txid3)\n         assert_equal(tx3['txid'], txid3) #tx must be available (unconfirmed)\n         \n         self.nodes[0].stop()\n-        bitcoind_processes[0].wait()\n+        litecoind_processes[0].wait()\n         \n-        #restart bitcoind with zapwallettxes\n+        #restart litecoind with zapwallettxes\n         self.nodes[0] = start_node(0,self.options.tmpdir, [\"-zapwallettxes=1\"])\n         \n         assert_raises(JSONRPCException, self.nodes[0].gettransaction, [txid3])"
      },
      {
        "sha": "90eab90cce908658c03efa7bf47166d394c54129",
        "filename": "qa/rpc-tests/zmq_test.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/zmq_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/qa/rpc-tests/zmq_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/zmq_test.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,21 +1,21 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2015-2016 The Litecoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n # Test ZMQ interface\n #\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import LitecoinTestFramework\n from test_framework.util import *\n import zmq\n import struct\n \n import http.client\n import urllib.parse\n \n-class ZMQTest (BitcoinTestFramework):\n+class ZMQTest (LitecoinTestFramework):\n \n     def __init__(self):\n         super().__init__()"
      },
      {
        "sha": "1b3c9c75b96848873b420dd475c30cf4184b1313",
        "filename": "share/certs/BitcoinFoundation_Apple_Cert.pem",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/certs/BitcoinFoundation_Apple_Cert.pem",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/certs/BitcoinFoundation_Apple_Cert.pem",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/certs/BitcoinFoundation_Apple_Cert.pem?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,7 +1,7 @@\n Bag Attributes\n-    friendlyName: Developer ID Application: BITCOIN FOUNDATION, INC., THE\n+    friendlyName: Developer ID Application: LITECOIN FOUNDATION, INC., THE\n     localKeyID: 6B 9C 6C A8 A5 73 70 70 E2 57 A3 49 D8 62 FB 97 C7 A5 5D 5E \n-subject=/UID=PBV4GLS9J4/CN=Developer ID Application: BITCOIN FOUNDATION, INC., THE/OU=PBV4GLS9J4/O=BITCOIN FOUNDATION, INC., THE/C=US\n+subject=/UID=PBV4GLS9J4/CN=Developer ID Application: LITECOIN FOUNDATION, INC., THE/OU=PBV4GLS9J4/O=LITECOIN FOUNDATION, INC., THE/C=US\n issuer=/CN=Developer ID Certification Authority/OU=Apple Certification Authority/O=Apple Inc./C=US\n -----BEGIN CERTIFICATE-----\n MIIFhzCCBG+gAwIBAgIIJ0r1rumyfZAwDQYJKoZIhvcNAQELBQAweTEtMCsGA1UE"
      },
      {
        "sha": "1d77fa76034c6d2f219826cc623688b35901e62a",
        "filename": "share/certs/BitcoinFoundation_Comodo_Cert.pem",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/certs/BitcoinFoundation_Comodo_Cert.pem",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/certs/BitcoinFoundation_Comodo_Cert.pem",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/certs/BitcoinFoundation_Comodo_Cert.pem?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,7 +1,7 @@\n Bag Attributes\n-    friendlyName: The Bitcoin Foundation, Inc.'s COMODO CA Limited ID\n+    friendlyName: The Litecoin Foundation, Inc.'s COMODO CA Limited ID\n     localKeyID: 8C 94 64 E3 B5 B0 41 89 5B 89 B0 57 CC 74 B9 44 E5 B2 92 66 \n-subject=/C=US/postalCode=98104-1444/ST=WA/L=Seattle/street=Suite 300/street=71 Columbia St/O=The Bitcoin Foundation, Inc./CN=The Bitcoin Foundation, Inc.\n+subject=/C=US/postalCode=98104-1444/ST=WA/L=Seattle/street=Suite 300/street=71 Columbia St/O=The Litecoin Foundation, Inc./CN=The Litecoin Foundation, Inc.\n issuer=/C=GB/ST=Greater Manchester/L=Salford/O=COMODO CA Limited/CN=COMODO Code Signing CA 2\n -----BEGIN CERTIFICATE-----\n MIIFeDCCBGCgAwIBAgIRAJVYMd+waOER7lUqtiz3M2IwDQYJKoZIhvcNAQEFBQAw"
      },
      {
        "sha": "5ce8e064281481fa3fe58425bb7a451c6d3e8256",
        "filename": "share/certs/PrivateKeyNotes.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/certs/PrivateKeyNotes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/certs/PrivateKeyNotes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/certs/PrivateKeyNotes.md?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -7,7 +7,7 @@ signing requests.\n \n For OSX, the private key was generated by Keychain.app on Gavin's main work machine.\n The key and certificate is in a separate, passphrase-protected keychain file that is\n-unlocked to sign the Bitcoin-Qt.app bundle.\n+unlocked to sign the Litecoin-Qt.app bundle.\n \n For Windows, the private key was generated by Firefox running on Gavin's main work machine.\n The key and certificate were exported into a separate, passphrase-protected PKCS#12 file, and\n@@ -17,7 +17,7 @@ Threat analysis\n --\n \n Gavin is a single point of failure. He could be coerced to divulge the secret signing keys,\n-allowing somebody to distribute a Bitcoin-Qt.app or bitcoin-qt-setup.exe with a valid\n+allowing somebody to distribute a Litecoin-Qt.app or litecoin-qt-setup.exe with a valid\n signature but containing a malicious binary.\n \n Or the machine Gavin uses to sign the binaries could be compromised, either remotely or\n@@ -34,7 +34,7 @@ or divulge the private keys).\n \n Windows binaries are reproducibly 'gitian-built', and the setup.exe file created\n by the NSIS installer system is a 7zip archive, so you could check to make sure\n-that the bitcoin-qt.exe file inside the installer had not been tampered with.\n+that the litecoin-qt.exe file inside the installer had not been tampered with.\n However, an attacker could modify the installer's code, so when the setup.exe\n was run it compromised users' systems. A volunteer to write an auditing tool\n that checks the setup.exe for tampering, and checks the files in it against"
      },
      {
        "sha": "f5480f41616a81cc3b65d0625f4f5e6f01a2f861",
        "filename": "share/pixmaps/litecoin.ico",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/pixmaps/litecoin.ico",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/pixmaps/litecoin.ico",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/litecoin.ico?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "previous_filename": "share/pixmaps/bitcoin.ico"
      },
      {
        "sha": "55039b1c920d2c73de7384ece75f0a7b3d147676",
        "filename": "share/pixmaps/litecoin128.png",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/pixmaps/litecoin128.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/pixmaps/litecoin128.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/litecoin128.png?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "previous_filename": "share/pixmaps/bitcoin128.png"
      },
      {
        "sha": "04c17ba38360d8f5066baf2f90d83cc961ef9517",
        "filename": "share/pixmaps/litecoin128.xpm",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/pixmaps/litecoin128.xpm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/pixmaps/litecoin128.xpm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/litecoin128.xpm?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n /* XPM */\n-static char *bitcoin___[] = {\n+static char *litecoin___[] = {\n /* columns rows colors chars-per-pixel */\n \"128 128 250 2\",\n \"   c #845415\",",
        "previous_filename": "share/pixmaps/bitcoin128.xpm"
      },
      {
        "sha": "5537479095c62d1fd4ab69ea7cf90b6596dacd39",
        "filename": "share/pixmaps/litecoin16.png",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/pixmaps/litecoin16.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/pixmaps/litecoin16.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/litecoin16.png?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "previous_filename": "share/pixmaps/bitcoin16.png"
      },
      {
        "sha": "d3c3d26e6dd769301f074a77c40c971dcaf7bc0f",
        "filename": "share/pixmaps/litecoin16.xpm",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/pixmaps/litecoin16.xpm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/pixmaps/litecoin16.xpm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/litecoin16.xpm?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n /* XPM */\n-static char *bitcoin__[] = {\n+static char *litecoin__[] = {\n /* columns rows colors chars-per-pixel */\n \"16 16 159 2\",\n \"   c #CA7C1E\",",
        "previous_filename": "share/pixmaps/bitcoin16.xpm"
      },
      {
        "sha": "1d42116ef1199d86749d17f1740121a659262f4a",
        "filename": "share/pixmaps/litecoin256.png",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/pixmaps/litecoin256.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/pixmaps/litecoin256.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/litecoin256.png?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "previous_filename": "share/pixmaps/bitcoin256.png"
      },
      {
        "sha": "70141b631665d64e64d3a577a702ccb4cac8d89c",
        "filename": "share/pixmaps/litecoin256.xpm",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/pixmaps/litecoin256.xpm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/pixmaps/litecoin256.xpm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/litecoin256.xpm?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n /* XPM */\n-static char *bitcoin___[] = {\n+static char *litecoin___[] = {\n /* columns rows colors chars-per-pixel */\n \"256 256 203 2\",\n \"   c #BE741B\",",
        "previous_filename": "share/pixmaps/bitcoin256.xpm"
      },
      {
        "sha": "367abfcc8e0f48779b51a99d03f3389f216c6c8c",
        "filename": "share/pixmaps/litecoin32.png",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/pixmaps/litecoin32.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/pixmaps/litecoin32.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/litecoin32.png?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "previous_filename": "share/pixmaps/bitcoin32.png"
      },
      {
        "sha": "ff90c0e48315f3fc9150de5407a749c22fdff0c2",
        "filename": "share/pixmaps/litecoin32.xpm",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/pixmaps/litecoin32.xpm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/pixmaps/litecoin32.xpm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/litecoin32.xpm?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n /* XPM */\n-static char *bitcoin__[] = {\n+static char *litecoin__[] = {\n /* columns rows colors chars-per-pixel */\n \"32 32 102 2\",\n \"   c #CC7D1D\",",
        "previous_filename": "share/pixmaps/bitcoin32.xpm"
      },
      {
        "sha": "08c676ae4afe56ca8baf2a517ef3b598e82a79f3",
        "filename": "share/pixmaps/litecoin64.png",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/pixmaps/litecoin64.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/pixmaps/litecoin64.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/litecoin64.png?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "previous_filename": "share/pixmaps/bitcoin64.png"
      },
      {
        "sha": "6a6eddf3889117eb071e6228481cb35624dfc4c0",
        "filename": "share/pixmaps/litecoin64.xpm",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/pixmaps/litecoin64.xpm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/pixmaps/litecoin64.xpm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/litecoin64.xpm?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n /* XPM */\n-static char *bitcoin__[] = {\n+static char *litecoin__[] = {\n /* columns rows colors chars-per-pixel */\n \"64 64 172 2\",\n \"   c #8F6319\",",
        "previous_filename": "share/pixmaps/bitcoin64.xpm"
      },
      {
        "sha": "cabbe2eea7669e0c19933eb923278f6f119322f4",
        "filename": "share/qt/Info.plist.in",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/qt/Info.plist.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/qt/Info.plist.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/Info.plist.in?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -11,7 +11,7 @@\n   </array>\n \n   <key>CFBundleIconFile</key>\n-  <string>bitcoin.icns</string>\n+  <string>litecoin.icns</string>\n \n   <key>CFBundlePackageType</key>\n   <string>APPL</string>\n@@ -29,27 +29,27 @@\n   <string>????</string>\n \n   <key>CFBundleExecutable</key>\n-  <string>Bitcoin-Qt</string>\n+  <string>Litecoin-Qt</string>\n   \n   <key>CFBundleName</key>\n-  <string>Bitcoin-Qt</string>\n+  <string>Litecoin-Qt</string>\n \n   <key>LSHasLocalizedDisplayName</key>\n   <true/>\n \n   <key>CFBundleIdentifier</key>\n-  <string>org.bitcoinfoundation.Bitcoin-Qt</string>\n+  <string>org.litecoinfoundation.Litecoin-Qt</string>\n \n   <key>CFBundleURLTypes</key>\n   <array>\n     <dict>\n       <key>CFBundleTypeRole</key>\n       <string>Editor</string>\n       <key>CFBundleURLName</key>\n-      <string>org.bitcoin.BitcoinPayment</string>\n+      <string>org.litecoin.LitecoinPayment</string>\n       <key>CFBundleURLSchemes</key>\n       <array>\n-        <string>bitcoin</string>\n+        <string>litecoin</string>\n       </array>\n     </dict>\n   </array>\n@@ -58,20 +58,20 @@\n   <array>\n     <dict>\n       <key>UTTypeIdentifier</key>\n-      <string>org.bitcoin.paymentrequest</string>\n+      <string>org.litecoin.paymentrequest</string>\n       <key>UTTypeDescription</key>\n-      <string>Bitcoin payment request</string>\n+      <string>Litecoin payment request</string>\n       <key>UTTypeConformsTo</key>\n       <array>\n         <string>public.data</string>\n       </array>\n       <key>UTTypeTagSpecification</key>\n       <dict>\n         <key>public.mime-type</key>\n-        <string>application/x-bitcoin-payment-request</string>\n+        <string>application/x-litecoin-payment-request</string>\n         <key>public.filename-extension</key>\n         <array>\n-          <string>bitcoinpaymentrequest</string>\n+          <string>litecoinpaymentrequest</string>\n         </array>\n       </dict>\n     </dict>\n@@ -84,7 +84,7 @@\n       <string>Editor</string>\n       <key>LSItemContentTypes</key>\n       <array>\n-        <string>org.bitcoin.paymentrequest</string>\n+        <string>org.litecoin.paymentrequest</string>\n       </array>\n       <key>LSHandlerRank</key>\n       <string>Owner</string>"
      },
      {
        "sha": "7079c12cdb455ae666341514d90a64a03636ceca",
        "filename": "share/qt/extract_strings_qt.py",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/qt/extract_strings_qt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/qt/extract_strings_qt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/extract_strings_qt.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -10,7 +10,7 @@\n import os\n import sys\n \n-OUT_CPP=\"qt/bitcoinstrings.cpp\"\n+OUT_CPP=\"qt/litecoinstrings.cpp\"\n EMPTY=['\"\"']\n \n def parse_po(text):\n@@ -74,14 +74,14 @@ def parse_po(text):\n #define UNUSED\n #endif\n \"\"\")\n-f.write('static const char UNUSED *bitcoin_strings[] = {\\n')\n-f.write('QT_TRANSLATE_NOOP(\"bitcoin-core\", \"%s\"),\\n' % (os.getenv('PACKAGE_NAME'),))\n-f.write('QT_TRANSLATE_NOOP(\"bitcoin-core\", \"%s\"),\\n' % (os.getenv('COPYRIGHT_HOLDERS'),))\n+f.write('static const char UNUSED *litecoin_strings[] = {\\n')\n+f.write('QT_TRANSLATE_NOOP(\"litecoin-core\", \"%s\"),\\n' % (os.getenv('PACKAGE_NAME'),))\n+f.write('QT_TRANSLATE_NOOP(\"litecoin-core\", \"%s\"),\\n' % (os.getenv('COPYRIGHT_HOLDERS'),))\n if os.getenv('COPYRIGHT_HOLDERS_SUBSTITUTION') != os.getenv('PACKAGE_NAME'):\n-    f.write('QT_TRANSLATE_NOOP(\"bitcoin-core\", \"%s\"),\\n' % (os.getenv('COPYRIGHT_HOLDERS_SUBSTITUTION'),))\n+    f.write('QT_TRANSLATE_NOOP(\"litecoin-core\", \"%s\"),\\n' % (os.getenv('COPYRIGHT_HOLDERS_SUBSTITUTION'),))\n messages.sort(key=operator.itemgetter(0))\n for (msgid, msgstr) in messages:\n     if msgid != EMPTY:\n-        f.write('QT_TRANSLATE_NOOP(\"bitcoin-core\", %s),\\n' % ('\\n'.join(msgid)))\n+        f.write('QT_TRANSLATE_NOOP(\"litecoin-core\", %s),\\n' % ('\\n'.join(msgid)))\n f.write('};\\n')\n f.close()"
      },
      {
        "sha": "e4b24c6240ebcd59b885e6a80f33794c5f7d6893",
        "filename": "share/rpcuser/rpcuser.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/rpcuser/rpcuser.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/rpcuser/rpcuser.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/rpcuser/rpcuser.py?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2 \n-# Copyright (c) 2015 The Bitcoin Core developers \n+# Copyright (c) 2015 The Litecoin Core developers \n # Distributed under the MIT software license, see the accompanying \n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -36,6 +36,6 @@\n m = hmac.new(bytearray(salt, 'utf-8'), bytearray(password, 'utf-8'), digestmod)\n result = m.hexdigest()\n \n-print(\"String to be appended to bitcoin.conf:\")\n+print(\"String to be appended to litecoin.conf:\")\n print(\"rpcauth=\"+username+\":\"+salt+\"$\"+result)\n print(\"Your password:\\n\"+password)"
      },
      {
        "sha": "a72267f4a72c14dc7bda18dc5d6a2d445ff78873",
        "filename": "share/setup.nsi.in",
        "status": "modified",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/setup.nsi.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/share/setup.nsi.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/setup.nsi.in?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -10,7 +10,7 @@ SetCompressor /SOLID lzma\n !define URL @PACKAGE_URL@\n \n # MUI Symbol Definitions\n-!define MUI_ICON \"@abs_top_srcdir@/share/pixmaps/bitcoin.ico\"\n+!define MUI_ICON \"@abs_top_srcdir@/share/pixmaps/litecoin.ico\"\n !define MUI_WELCOMEFINISHPAGE_BITMAP \"@abs_top_srcdir@/share/pixmaps/nsis-wizard.bmp\"\n !define MUI_HEADERIMAGE\n !define MUI_HEADERIMAGE_RIGHT\n@@ -20,7 +20,7 @@ SetCompressor /SOLID lzma\n !define MUI_STARTMENUPAGE_REGISTRY_KEY ${REGKEY}\n !define MUI_STARTMENUPAGE_REGISTRY_VALUENAME StartMenuGroup\n !define MUI_STARTMENUPAGE_DEFAULTFOLDER \"@PACKAGE_NAME@\"\n-!define MUI_FINISHPAGE_RUN $INSTDIR\\@BITCOIN_GUI_NAME@@EXEEXT@\n+!define MUI_FINISHPAGE_RUN $INSTDIR\\@LITECOIN_GUI_NAME@@EXEEXT@\n !define MUI_UNICON \"${NSISDIR}\\Contrib\\Graphics\\Icons\\modern-uninstall.ico\"\n !define MUI_UNWELCOMEFINISHPAGE_BITMAP \"@abs_top_srcdir@/share/pixmaps/nsis-wizard.bmp\"\n !define MUI_UNFINISHPAGE_NOAUTOCLOSE\n@@ -50,9 +50,9 @@ Var StartMenuGroup\n # Installer attributes\n OutFile @abs_top_srcdir@/@PACKAGE_TARNAME@-${VERSION}-win@WINDOWS_BITS@-setup.exe\n !if \"@WINDOWS_BITS@\" == \"64\"\n-InstallDir $PROGRAMFILES64\\Bitcoin\n+InstallDir $PROGRAMFILES64\\Litecoin\n !else\n-InstallDir $PROGRAMFILES\\Bitcoin\n+InstallDir $PROGRAMFILES\\Litecoin\n !endif\n CRCCheck on\n XPStyle on\n@@ -73,12 +73,12 @@ ShowUninstDetails show\n Section -Main SEC0000\n     SetOutPath $INSTDIR\n     SetOverwrite on\n-    File @abs_top_srcdir@/release/@BITCOIN_GUI_NAME@@EXEEXT@\n+    File @abs_top_srcdir@/release/@LITECOIN_GUI_NAME@@EXEEXT@\n     File /oname=COPYING.txt @abs_top_srcdir@/COPYING\n     File /oname=readme.txt @abs_top_srcdir@/doc/README_windows.txt\n     SetOutPath $INSTDIR\\daemon\n-    File @abs_top_srcdir@/release/@BITCOIN_DAEMON_NAME@@EXEEXT@\n-    File @abs_top_srcdir@/release/@BITCOIN_CLI_NAME@@EXEEXT@\n+    File @abs_top_srcdir@/release/@LITECOIN_DAEMON_NAME@@EXEEXT@\n+    File @abs_top_srcdir@/release/@LITECOIN_CLI_NAME@@EXEEXT@\n     SetOutPath $INSTDIR\\doc\n     File /r @abs_top_srcdir@/doc\\*.*\n     SetOutPath $INSTDIR\n@@ -91,8 +91,8 @@ Section -post SEC0001\n     WriteUninstaller $INSTDIR\\uninstall.exe\n     !insertmacro MUI_STARTMENU_WRITE_BEGIN Application\n     CreateDirectory $SMPROGRAMS\\$StartMenuGroup\n-    CreateShortcut \"$SMPROGRAMS\\$StartMenuGroup\\$(^Name).lnk\" $INSTDIR\\@BITCOIN_GUI_NAME@@EXEEXT@\n-    CreateShortcut \"$SMPROGRAMS\\$StartMenuGroup\\@PACKAGE_NAME@ (testnet, @WINDOWS_BITS@-bit).lnk\" \"$INSTDIR\\@BITCOIN_GUI_NAME@@EXEEXT@\" \"-testnet\" \"$INSTDIR\\@BITCOIN_GUI_NAME@@EXEEXT@\" 1\n+    CreateShortcut \"$SMPROGRAMS\\$StartMenuGroup\\$(^Name).lnk\" $INSTDIR\\@LITECOIN_GUI_NAME@@EXEEXT@\n+    CreateShortcut \"$SMPROGRAMS\\$StartMenuGroup\\@PACKAGE_NAME@ (testnet, @WINDOWS_BITS@-bit).lnk\" \"$INSTDIR\\@LITECOIN_GUI_NAME@@EXEEXT@\" \"-testnet\" \"$INSTDIR\\@LITECOIN_GUI_NAME@@EXEEXT@\" 1\n     CreateShortcut \"$SMPROGRAMS\\$StartMenuGroup\\Uninstall $(^Name).lnk\" $INSTDIR\\uninstall.exe\n     !insertmacro MUI_STARTMENU_WRITE_END\n     WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" DisplayName \"$(^Name)\"\n@@ -104,9 +104,9 @@ Section -post SEC0001\n     WriteRegDWORD HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" NoModify 1\n     WriteRegDWORD HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" NoRepair 1\n     WriteRegStr HKCR \"@PACKAGE_TARNAME@\" \"URL Protocol\" \"\"\n-    WriteRegStr HKCR \"@PACKAGE_TARNAME@\" \"\" \"URL:Bitcoin\"\n-    WriteRegStr HKCR \"@PACKAGE_TARNAME@\\DefaultIcon\" \"\" $INSTDIR\\@BITCOIN_GUI_NAME@@EXEEXT@\n-    WriteRegStr HKCR \"@PACKAGE_TARNAME@\\shell\\open\\command\" \"\" '\"$INSTDIR\\@BITCOIN_GUI_NAME@@EXEEXT@\" \"%1\"'\n+    WriteRegStr HKCR \"@PACKAGE_TARNAME@\" \"\" \"URL:Litecoin\"\n+    WriteRegStr HKCR \"@PACKAGE_TARNAME@\\DefaultIcon\" \"\" $INSTDIR\\@LITECOIN_GUI_NAME@@EXEEXT@\n+    WriteRegStr HKCR \"@PACKAGE_TARNAME@\\shell\\open\\command\" \"\" '\"$INSTDIR\\@LITECOIN_GUI_NAME@@EXEEXT@\" \"%1\"'\n SectionEnd\n \n # Macro for selecting uninstaller sections\n@@ -124,7 +124,7 @@ done${UNSECTION_ID}:\n \n # Uninstaller sections\n Section /o -un.Main UNSEC0000\n-    Delete /REBOOTOK $INSTDIR\\@BITCOIN_GUI_NAME@@EXEEXT@\n+    Delete /REBOOTOK $INSTDIR\\@LITECOIN_GUI_NAME@@EXEEXT@\n     Delete /REBOOTOK $INSTDIR\\COPYING.txt\n     Delete /REBOOTOK $INSTDIR\\readme.txt\n     RMDir /r /REBOOTOK $INSTDIR\\daemon\n@@ -137,7 +137,7 @@ Section -un.post UNSEC0001\n     Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\Uninstall $(^Name).lnk\"\n     Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\$(^Name).lnk\"\n     Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\@PACKAGE_NAME@ (testnet, @WINDOWS_BITS@-bit).lnk\"\n-    Delete /REBOOTOK \"$SMSTARTUP\\Bitcoin.lnk\"\n+    Delete /REBOOTOK \"$SMSTARTUP\\Litecoin.lnk\"\n     Delete /REBOOTOK $INSTDIR\\uninstall.exe\n     Delete /REBOOTOK $INSTDIR\\debug.log\n     Delete /REBOOTOK $INSTDIR\\db.log"
      },
      {
        "sha": "a261a6b8ba5b83bc072abff0ad65dd1e6c50e522",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 116,
        "deletions": 116,
        "changes": 232,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -14,29 +14,29 @@ else\n LIBUNIVALUE = $(UNIVALUE_LIBS)\n endif\n \n-BITCOIN_CONFIG_INCLUDES=-I$(builddir)/config\n-BITCOIN_INCLUDES=-I$(builddir) -I$(builddir)/obj $(BDB_CPPFLAGS) $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS) $(CRYPTO_CFLAGS) $(SSL_CFLAGS)\n-\n-BITCOIN_INCLUDES += -I$(srcdir)/secp256k1/include\n-BITCOIN_INCLUDES += $(UNIVALUE_CFLAGS)\n-\n-LIBBITCOIN_SERVER=libbitcoin_server.a\n-LIBBITCOIN_COMMON=libbitcoin_common.a\n-LIBBITCOIN_CONSENSUS=libbitcoin_consensus.a\n-LIBBITCOIN_CLI=libbitcoin_cli.a\n-LIBBITCOIN_UTIL=libbitcoin_util.a\n-LIBBITCOIN_CRYPTO=crypto/libbitcoin_crypto.a\n-LIBBITCOINQT=qt/libbitcoinqt.a\n+LITECOIN_CONFIG_INCLUDES=-I$(builddir)/config\n+LITECOIN_INCLUDES=-I$(builddir) -I$(builddir)/obj $(BDB_CPPFLAGS) $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS) $(CRYPTO_CFLAGS) $(SSL_CFLAGS)\n+\n+LITECOIN_INCLUDES += -I$(srcdir)/secp256k1/include\n+LITECOIN_INCLUDES += $(UNIVALUE_CFLAGS)\n+\n+LIBLITECOIN_SERVER=liblitecoin_server.a\n+LIBLITECOIN_COMMON=liblitecoin_common.a\n+LIBLITECOIN_CONSENSUS=liblitecoin_consensus.a\n+LIBLITECOIN_CLI=liblitecoin_cli.a\n+LIBLITECOIN_UTIL=liblitecoin_util.a\n+LIBLITECOIN_CRYPTO=crypto/liblitecoin_crypto.a\n+LIBLITECOINQT=qt/liblitecoinqt.a\n LIBSECP256K1=secp256k1/libsecp256k1.la\n \n if ENABLE_ZMQ\n-LIBBITCOIN_ZMQ=libbitcoin_zmq.a\n+LIBLITECOIN_ZMQ=liblitecoin_zmq.a\n endif\n-if BUILD_BITCOIN_LIBS\n-LIBBITCOINCONSENSUS=libbitcoinconsensus.la\n+if BUILD_LITECOIN_LIBS\n+LIBLITECOINCONSENSUS=liblitecoinconsensus.la\n endif\n if ENABLE_WALLET\n-LIBBITCOIN_WALLET=libbitcoin_wallet.a\n+LIBLITECOIN_WALLET=liblitecoin_wallet.a\n endif\n \n $(LIBSECP256K1): $(wildcard secp256k1/src/*) $(wildcard secp256k1/include/*)\n@@ -45,32 +45,32 @@ $(LIBSECP256K1): $(wildcard secp256k1/src/*) $(wildcard secp256k1/include/*)\n # Make is not made aware of per-object dependencies to avoid limiting building parallelization\n # But to build the less dependent modules first, we manually select their order here:\n EXTRA_LIBRARIES += \\\n-  $(LIBBITCOIN_CRYPTO) \\\n-  $(LIBBITCOIN_UTIL) \\\n-  $(LIBBITCOIN_COMMON) \\\n-  $(LIBBITCOIN_CONSENSUS) \\\n-  $(LIBBITCOIN_SERVER) \\\n-  $(LIBBITCOIN_CLI) \\\n-  $(LIBBITCOIN_WALLET) \\\n-  $(LIBBITCOIN_ZMQ)\n+  $(LIBLITECOIN_CRYPTO) \\\n+  $(LIBLITECOIN_UTIL) \\\n+  $(LIBLITECOIN_COMMON) \\\n+  $(LIBLITECOIN_CONSENSUS) \\\n+  $(LIBLITECOIN_SERVER) \\\n+  $(LIBLITECOIN_CLI) \\\n+  $(LIBLITECOIN_WALLET) \\\n+  $(LIBLITECOIN_ZMQ)\n \n-lib_LTLIBRARIES = $(LIBBITCOINCONSENSUS)\n+lib_LTLIBRARIES = $(LIBLITECOINCONSENSUS)\n \n bin_PROGRAMS =\n TESTS =\n BENCHMARKS =\n \n-if BUILD_BITCOIND\n-  bin_PROGRAMS += bitcoind\n+if BUILD_LITECOIND\n+  bin_PROGRAMS += litecoind\n endif\n \n-if BUILD_BITCOIN_UTILS\n-  bin_PROGRAMS += bitcoin-cli bitcoin-tx\n+if BUILD_LITECOIN_UTILS\n+  bin_PROGRAMS += litecoin-cli litecoin-tx\n endif\n \n .PHONY: FORCE check-symbols check-security\n-# bitcoin core #\n-BITCOIN_CORE_H = \\\n+# litecoin core #\n+LITECOIN_CORE_H = \\\n   addrman.h \\\n   base58.h \\\n   bloom.h \\\n@@ -156,12 +156,12 @@ obj/build.h: FORCE\n \t@$(MKDIR_P) $(builddir)/obj\n \t@$(top_srcdir)/share/genbuild.sh $(abs_top_builddir)/src/obj/build.h \\\n \t  $(abs_top_srcdir)\n-libbitcoin_util_a-clientversion.$(OBJEXT): obj/build.h\n+liblitecoin_util_a-clientversion.$(OBJEXT): obj/build.h\n \n-# server: shared between bitcoind and bitcoin-qt\n-libbitcoin_server_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)\n-libbitcoin_server_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-libbitcoin_server_a_SOURCES = \\\n+# server: shared between litecoind and litecoin-qt\n+liblitecoin_server_a_CPPFLAGS = $(AM_CPPFLAGS) $(LITECOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)\n+liblitecoin_server_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+liblitecoin_server_a_SOURCES = \\\n   addrman.cpp \\\n   bloom.cpp \\\n   blockencodings.cpp \\\n@@ -195,36 +195,36 @@ libbitcoin_server_a_SOURCES = \\\n   ui_interface.cpp \\\n   validationinterface.cpp \\\n   versionbits.cpp \\\n-  $(BITCOIN_CORE_H)\n+  $(LITECOIN_CORE_H)\n \n if ENABLE_ZMQ\n-libbitcoin_zmq_a_CPPFLAGS = $(BITCOIN_INCLUDES) $(ZMQ_CFLAGS)\n-libbitcoin_zmq_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-libbitcoin_zmq_a_SOURCES = \\\n+liblitecoin_zmq_a_CPPFLAGS = $(LITECOIN_INCLUDES) $(ZMQ_CFLAGS)\n+liblitecoin_zmq_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+liblitecoin_zmq_a_SOURCES = \\\n   zmq/zmqabstractnotifier.cpp \\\n   zmq/zmqnotificationinterface.cpp \\\n   zmq/zmqpublishnotifier.cpp\n endif\n \n \n-# wallet: shared between bitcoind and bitcoin-qt, but only linked\n+# wallet: shared between litecoind and litecoin-qt, but only linked\n # when wallet enabled\n-libbitcoin_wallet_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-libbitcoin_wallet_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-libbitcoin_wallet_a_SOURCES = \\\n+liblitecoin_wallet_a_CPPFLAGS = $(AM_CPPFLAGS) $(LITECOIN_INCLUDES)\n+liblitecoin_wallet_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+liblitecoin_wallet_a_SOURCES = \\\n   wallet/crypter.cpp \\\n   wallet/db.cpp \\\n   wallet/rpcdump.cpp \\\n   wallet/rpcwallet.cpp \\\n   wallet/wallet.cpp \\\n   wallet/walletdb.cpp \\\n   policy/rbf.cpp \\\n-  $(BITCOIN_CORE_H)\n+  $(LITECOIN_CORE_H)\n \n # crypto primitives library\n-crypto_libbitcoin_crypto_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_CONFIG_INCLUDES)\n-crypto_libbitcoin_crypto_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-crypto_libbitcoin_crypto_a_SOURCES = \\\n+crypto_liblitecoin_crypto_a_CPPFLAGS = $(AM_CPPFLAGS) $(LITECOIN_CONFIG_INCLUDES)\n+crypto_liblitecoin_crypto_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+crypto_liblitecoin_crypto_a_SOURCES = \\\n   crypto/aes.cpp \\\n   crypto/aes.h \\\n   crypto/common.h \\\n@@ -242,9 +242,9 @@ crypto_libbitcoin_crypto_a_SOURCES = \\\n   crypto/sha512.h\n \n # consensus: shared between all executables that validate any consensus rules.\n-libbitcoin_consensus_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-libbitcoin_consensus_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-libbitcoin_consensus_a_SOURCES = \\\n+liblitecoin_consensus_a_CPPFLAGS = $(AM_CPPFLAGS) $(LITECOIN_INCLUDES)\n+liblitecoin_consensus_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+liblitecoin_consensus_a_SOURCES = \\\n   amount.h \\\n   arith_uint256.cpp \\\n   arith_uint256.h \\\n@@ -261,7 +261,7 @@ libbitcoin_consensus_a_SOURCES = \\\n   primitives/transaction.h \\\n   pubkey.cpp \\\n   pubkey.h \\\n-  script/bitcoinconsensus.cpp \\\n+  script/litecoinconsensus.cpp \\\n   script/interpreter.cpp \\\n   script/interpreter.h \\\n   script/script.cpp \\\n@@ -276,10 +276,10 @@ libbitcoin_consensus_a_SOURCES = \\\n   utilstrencodings.h \\\n   version.h\n \n-# common: shared between bitcoind, and bitcoin-qt and non-server tools\n-libbitcoin_common_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-libbitcoin_common_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-libbitcoin_common_a_SOURCES = \\\n+# common: shared between litecoind, and litecoin-qt and non-server tools\n+liblitecoin_common_a_CPPFLAGS = $(AM_CPPFLAGS) $(LITECOIN_INCLUDES)\n+liblitecoin_common_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+liblitecoin_common_a_SOURCES = \\\n   amount.cpp \\\n   base58.cpp \\\n   chainparams.cpp \\\n@@ -294,14 +294,14 @@ libbitcoin_common_a_SOURCES = \\\n   scheduler.cpp \\\n   script/sign.cpp \\\n   script/standard.cpp \\\n-  $(BITCOIN_CORE_H)\n+  $(LITECOIN_CORE_H)\n \n # util: shared between all executables.\n # This library *must* be included to make sure that the glibc\n # backward-compatibility objects and their sanity checks are linked.\n-libbitcoin_util_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-libbitcoin_util_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-libbitcoin_util_a_SOURCES = \\\n+liblitecoin_util_a_CPPFLAGS = $(AM_CPPFLAGS) $(LITECOIN_INCLUDES)\n+liblitecoin_util_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+liblitecoin_util_a_SOURCES = \\\n   support/pagelocker.cpp \\\n   chainparamsbase.cpp \\\n   clientversion.cpp \\\n@@ -316,100 +316,100 @@ libbitcoin_util_a_SOURCES = \\\n   utilmoneystr.cpp \\\n   utilstrencodings.cpp \\\n   utiltime.cpp \\\n-  $(BITCOIN_CORE_H)\n+  $(LITECOIN_CORE_H)\n \n if GLIBC_BACK_COMPAT\n-libbitcoin_util_a_SOURCES += compat/glibc_compat.cpp\n+liblitecoin_util_a_SOURCES += compat/glibc_compat.cpp\n endif\n \n-# cli: shared between bitcoin-cli and bitcoin-qt\n-libbitcoin_cli_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-libbitcoin_cli_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-libbitcoin_cli_a_SOURCES = \\\n+# cli: shared between litecoin-cli and litecoin-qt\n+liblitecoin_cli_a_CPPFLAGS = $(AM_CPPFLAGS) $(LITECOIN_INCLUDES)\n+liblitecoin_cli_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+liblitecoin_cli_a_SOURCES = \\\n   rpc/client.cpp \\\n-  $(BITCOIN_CORE_H)\n+  $(LITECOIN_CORE_H)\n \n-nodist_libbitcoin_util_a_SOURCES = $(srcdir)/obj/build.h\n+nodist_liblitecoin_util_a_SOURCES = $(srcdir)/obj/build.h\n #\n \n-# bitcoind binary #\n-bitcoind_SOURCES = bitcoind.cpp\n-bitcoind_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-bitcoind_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-bitcoind_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+# litecoind binary #\n+litecoind_SOURCES = litecoind.cpp\n+litecoind_CPPFLAGS = $(AM_CPPFLAGS) $(LITECOIN_INCLUDES)\n+litecoind_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+litecoind_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n if TARGET_WINDOWS\n-bitcoind_SOURCES += bitcoind-res.rc\n+litecoind_SOURCES += litecoind-res.rc\n endif\n \n-bitcoind_LDADD = \\\n-  $(LIBBITCOIN_SERVER) \\\n-  $(LIBBITCOIN_COMMON) \\\n+litecoind_LDADD = \\\n+  $(LIBLITECOIN_SERVER) \\\n+  $(LIBLITECOIN_COMMON) \\\n   $(LIBUNIVALUE) \\\n-  $(LIBBITCOIN_UTIL) \\\n-  $(LIBBITCOIN_WALLET) \\\n-  $(LIBBITCOIN_ZMQ) \\\n-  $(LIBBITCOIN_CONSENSUS) \\\n-  $(LIBBITCOIN_CRYPTO) \\\n+  $(LIBLITECOIN_UTIL) \\\n+  $(LIBLITECOIN_WALLET) \\\n+  $(LIBLITECOIN_ZMQ) \\\n+  $(LIBLITECOIN_CONSENSUS) \\\n+  $(LIBLITECOIN_CRYPTO) \\\n   $(LIBLEVELDB) \\\n   $(LIBMEMENV) \\\n   $(LIBSECP256K1)\n \n-bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS)\n+litecoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS)\n \n-# bitcoin-cli binary #\n-bitcoin_cli_SOURCES = bitcoin-cli.cpp\n-bitcoin_cli_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CFLAGS)\n-bitcoin_cli_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-bitcoin_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+# litecoin-cli binary #\n+litecoin_cli_SOURCES = litecoin-cli.cpp\n+litecoin_cli_CPPFLAGS = $(AM_CPPFLAGS) $(LITECOIN_INCLUDES) $(EVENT_CFLAGS)\n+litecoin_cli_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+litecoin_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n if TARGET_WINDOWS\n-bitcoin_cli_SOURCES += bitcoin-cli-res.rc\n+litecoin_cli_SOURCES += litecoin-cli-res.rc\n endif\n \n-bitcoin_cli_LDADD = \\\n-  $(LIBBITCOIN_CLI) \\\n+litecoin_cli_LDADD = \\\n+  $(LIBLITECOIN_CLI) \\\n   $(LIBUNIVALUE) \\\n-  $(LIBBITCOIN_UTIL) \\\n-  $(LIBBITCOIN_CRYPTO)\n+  $(LIBLITECOIN_UTIL) \\\n+  $(LIBLITECOIN_CRYPTO)\n \n-bitcoin_cli_LDADD += $(BOOST_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)\n+litecoin_cli_LDADD += $(BOOST_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)\n #\n \n-# bitcoin-tx binary #\n-bitcoin_tx_SOURCES = bitcoin-tx.cpp\n-bitcoin_tx_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-bitcoin_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-bitcoin_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+# litecoin-tx binary #\n+litecoin_tx_SOURCES = litecoin-tx.cpp\n+litecoin_tx_CPPFLAGS = $(AM_CPPFLAGS) $(LITECOIN_INCLUDES)\n+litecoin_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+litecoin_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n if TARGET_WINDOWS\n-bitcoin_tx_SOURCES += bitcoin-tx-res.rc\n+litecoin_tx_SOURCES += litecoin-tx-res.rc\n endif\n \n-bitcoin_tx_LDADD = \\\n+litecoin_tx_LDADD = \\\n   $(LIBUNIVALUE) \\\n-  $(LIBBITCOIN_COMMON) \\\n-  $(LIBBITCOIN_UTIL) \\\n-  $(LIBBITCOIN_CONSENSUS) \\\n-  $(LIBBITCOIN_CRYPTO) \\\n+  $(LIBLITECOIN_COMMON) \\\n+  $(LIBLITECOIN_UTIL) \\\n+  $(LIBLITECOIN_CONSENSUS) \\\n+  $(LIBLITECOIN_CRYPTO) \\\n   $(LIBSECP256K1)\n \n-bitcoin_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n+litecoin_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n #\n \n-# bitcoinconsensus library #\n-if BUILD_BITCOIN_LIBS\n-include_HEADERS = script/bitcoinconsensus.h\n-libbitcoinconsensus_la_SOURCES = $(crypto_libbitcoin_crypto_a_SOURCES) $(libbitcoin_consensus_a_SOURCES)\n+# litecoinconsensus library #\n+if BUILD_LITECOIN_LIBS\n+include_HEADERS = script/litecoinconsensus.h\n+liblitecoinconsensus_la_SOURCES = $(crypto_liblitecoin_crypto_a_SOURCES) $(liblitecoin_consensus_a_SOURCES)\n \n if GLIBC_BACK_COMPAT\n-  libbitcoinconsensus_la_SOURCES += compat/glibc_compat.cpp\n+  liblitecoinconsensus_la_SOURCES += compat/glibc_compat.cpp\n endif\n \n-libbitcoinconsensus_la_LDFLAGS = $(AM_LDFLAGS) -no-undefined $(RELDFLAGS)\n-libbitcoinconsensus_la_LIBADD = $(LIBSECP256K1)\n-libbitcoinconsensus_la_CPPFLAGS = $(AM_CPPFLAGS) -I$(builddir)/obj -I$(srcdir)/secp256k1/include -DBUILD_BITCOIN_INTERNAL\n-libbitcoinconsensus_la_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+liblitecoinconsensus_la_LDFLAGS = $(AM_LDFLAGS) -no-undefined $(RELDFLAGS)\n+liblitecoinconsensus_la_LIBADD = $(LIBSECP256K1)\n+liblitecoinconsensus_la_CPPFLAGS = $(AM_CPPFLAGS) -I$(builddir)/obj -I$(srcdir)/secp256k1/include -DBUILD_LITECOIN_INTERNAL\n+liblitecoinconsensus_la_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n \n endif\n #"
      },
      {
        "sha": "9e4af662d4875788858bea2f12b9e1e40daad769",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 21,
        "deletions": 21,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,49 +1,49 @@\n-bin_PROGRAMS += bench/bench_bitcoin\n+bin_PROGRAMS += bench/bench_litecoin\n BENCH_SRCDIR = bench\n-BENCH_BINARY = bench/bench_bitcoin$(EXEEXT)\n+BENCH_BINARY = bench/bench_litecoin$(EXEEXT)\n \n \n-bench_bench_bitcoin_SOURCES = \\\n-  bench/bench_bitcoin.cpp \\\n+bench_bench_litecoin_SOURCES = \\\n+  bench/bench_litecoin.cpp \\\n   bench/bench.cpp \\\n   bench/bench.h \\\n   bench/Examples.cpp \\\n   bench/rollingbloom.cpp \\\n   bench/crypto_hash.cpp \\\n   bench/base58.cpp\n \n-bench_bench_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/\n-bench_bench_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-bench_bench_bitcoin_LDADD = \\\n-  $(LIBBITCOIN_SERVER) \\\n-  $(LIBBITCOIN_COMMON) \\\n-  $(LIBBITCOIN_UTIL) \\\n-  $(LIBBITCOIN_CONSENSUS) \\\n-  $(LIBBITCOIN_CRYPTO) \\\n+bench_bench_litecoin_CPPFLAGS = $(AM_CPPFLAGS) $(LITECOIN_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/\n+bench_bench_litecoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+bench_bench_litecoin_LDADD = \\\n+  $(LIBLITECOIN_SERVER) \\\n+  $(LIBLITECOIN_COMMON) \\\n+  $(LIBLITECOIN_UTIL) \\\n+  $(LIBLITECOIN_CONSENSUS) \\\n+  $(LIBLITECOIN_CRYPTO) \\\n   $(LIBLEVELDB) \\\n   $(LIBMEMENV) \\\n   $(LIBSECP256K1) \\\n   $(LIBUNIVALUE)\n \n if ENABLE_ZMQ\n-bench_bench_bitcoin_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n+bench_bench_litecoin_LDADD += $(LIBLITECOIN_ZMQ) $(ZMQ_LIBS)\n endif\n \n if ENABLE_WALLET\n-bench_bench_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n+bench_bench_litecoin_LDADD += $(LIBLITECOIN_WALLET)\n endif\n \n-bench_bench_bitcoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n-bench_bench_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+bench_bench_litecoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n+bench_bench_litecoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n-CLEAN_BITCOIN_BENCH = bench/*.gcda bench/*.gcno\n+CLEAN_LITECOIN_BENCH = bench/*.gcda bench/*.gcno\n \n-CLEANFILES += $(CLEAN_BITCOIN_BENCH)\n+CLEANFILES += $(CLEAN_LITECOIN_BENCH)\n \n-bitcoin_bench: $(BENCH_BINARY)\n+litecoin_bench: $(BENCH_BINARY)\n \n bench: $(BENCH_BINARY) FORCE\n \t$(BENCH_BINARY)\n \n-bitcoin_bench_clean : FORCE\n-\trm -f $(CLEAN_BITCOIN_BENCH) $(bench_bench_bitcoin_OBJECTS) $(BENCH_BINARY)\n+litecoin_bench_clean : FORCE\n+\trm -f $(CLEAN_LITECOIN_BENCH) $(bench_bench_litecoin_OBJECTS) $(BENCH_BINARY)"
      },
      {
        "sha": "72b011c92958ff40b3d45c630fbf25da42c7d91a",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 142,
        "deletions": 142,
        "changes": 284,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,93 +1,93 @@\n-bin_PROGRAMS += qt/bitcoin-qt\n-EXTRA_LIBRARIES += qt/libbitcoinqt.a\n+bin_PROGRAMS += qt/litecoin-qt\n+EXTRA_LIBRARIES += qt/liblitecoinqt.a\n \n-# bitcoin qt core #\n+# litecoin qt core #\n QT_TS = \\\n-  qt/locale/bitcoin_af.ts \\\n-  qt/locale/bitcoin_af_ZA.ts \\\n-  qt/locale/bitcoin_ar.ts \\\n-  qt/locale/bitcoin_be_BY.ts \\\n-  qt/locale/bitcoin_bg.ts \\\n-  qt/locale/bitcoin_bg_BG.ts \\\n-  qt/locale/bitcoin_ca_ES.ts \\\n-  qt/locale/bitcoin_ca.ts \\\n-  qt/locale/bitcoin_ca@valencia.ts \\\n-  qt/locale/bitcoin_cs_CZ.ts \\\n-  qt/locale/bitcoin_cs.ts \\\n-  qt/locale/bitcoin_cy.ts \\\n-  qt/locale/bitcoin_da.ts \\\n-  qt/locale/bitcoin_de.ts \\\n-  qt/locale/bitcoin_el_GR.ts \\\n-  qt/locale/bitcoin_el.ts \\\n-  qt/locale/bitcoin_en_GB.ts \\\n-  qt/locale/bitcoin_en.ts \\\n-  qt/locale/bitcoin_eo.ts \\\n-  qt/locale/bitcoin_es_AR.ts \\\n-  qt/locale/bitcoin_es_CL.ts \\\n-  qt/locale/bitcoin_es_CO.ts \\\n-  qt/locale/bitcoin_es_DO.ts \\\n-  qt/locale/bitcoin_es_ES.ts \\\n-  qt/locale/bitcoin_es_MX.ts \\\n-  qt/locale/bitcoin_es.ts \\\n-  qt/locale/bitcoin_es_UY.ts \\\n-  qt/locale/bitcoin_es_VE.ts \\\n-  qt/locale/bitcoin_et.ts \\\n-  qt/locale/bitcoin_eu_ES.ts \\\n-  qt/locale/bitcoin_fa_IR.ts \\\n-  qt/locale/bitcoin_fa.ts \\\n-  qt/locale/bitcoin_fi.ts \\\n-  qt/locale/bitcoin_fr_CA.ts \\\n-  qt/locale/bitcoin_fr_FR.ts \\\n-  qt/locale/bitcoin_fr.ts \\\n-  qt/locale/bitcoin_gl.ts \\\n-  qt/locale/bitcoin_he.ts \\\n-  qt/locale/bitcoin_hi_IN.ts \\\n-  qt/locale/bitcoin_hr.ts \\\n-  qt/locale/bitcoin_hu.ts \\\n-  qt/locale/bitcoin_id_ID.ts \\\n-  qt/locale/bitcoin_it_IT.ts \\\n-  qt/locale/bitcoin_it.ts \\\n-  qt/locale/bitcoin_ja.ts \\\n-  qt/locale/bitcoin_ka.ts \\\n-  qt/locale/bitcoin_kk_KZ.ts \\\n-  qt/locale/bitcoin_ko_KR.ts \\\n-  qt/locale/bitcoin_ku_IQ.ts \\\n-  qt/locale/bitcoin_ky.ts \\\n-  qt/locale/bitcoin_la.ts \\\n-  qt/locale/bitcoin_lt.ts \\\n-  qt/locale/bitcoin_lv_LV.ts \\\n-  qt/locale/bitcoin_mk_MK.ts \\\n-  qt/locale/bitcoin_mn.ts \\\n-  qt/locale/bitcoin_ms_MY.ts \\\n-  qt/locale/bitcoin_nb.ts \\\n-  qt/locale/bitcoin_nl.ts \\\n-  qt/locale/bitcoin_pam.ts \\\n-  qt/locale/bitcoin_pl.ts \\\n-  qt/locale/bitcoin_pt_BR.ts \\\n-  qt/locale/bitcoin_pt_PT.ts \\\n-  qt/locale/bitcoin_ro_RO.ts \\\n-  qt/locale/bitcoin_ro.ts \\\n-  qt/locale/bitcoin_ru_RU.ts \\\n-  qt/locale/bitcoin_ru.ts \\\n-  qt/locale/bitcoin_sk.ts \\\n-  qt/locale/bitcoin_sl_SI.ts \\\n-  qt/locale/bitcoin_sq.ts \\\n-  qt/locale/bitcoin_sr@latin.ts \\\n-  qt/locale/bitcoin_sr.ts \\\n-  qt/locale/bitcoin_sv.ts \\\n-  qt/locale/bitcoin_ta.ts \\\n-  qt/locale/bitcoin_th_TH.ts \\\n-  qt/locale/bitcoin_tr_TR.ts \\\n-  qt/locale/bitcoin_tr.ts \\\n-  qt/locale/bitcoin_uk.ts \\\n-  qt/locale/bitcoin_ur_PK.ts \\\n-  qt/locale/bitcoin_uz@Cyrl.ts \\\n-  qt/locale/bitcoin_vi.ts \\\n-  qt/locale/bitcoin_vi_VN.ts \\\n-  qt/locale/bitcoin_zh_CN.ts \\\n-  qt/locale/bitcoin_zh_HK.ts \\\n-  qt/locale/bitcoin_zh.ts \\\n-  qt/locale/bitcoin_zh_TW.ts\n+  qt/locale/litecoin_af.ts \\\n+  qt/locale/litecoin_af_ZA.ts \\\n+  qt/locale/litecoin_ar.ts \\\n+  qt/locale/litecoin_be_BY.ts \\\n+  qt/locale/litecoin_bg.ts \\\n+  qt/locale/litecoin_bg_BG.ts \\\n+  qt/locale/litecoin_ca_ES.ts \\\n+  qt/locale/litecoin_ca.ts \\\n+  qt/locale/litecoin_ca@valencia.ts \\\n+  qt/locale/litecoin_cs_CZ.ts \\\n+  qt/locale/litecoin_cs.ts \\\n+  qt/locale/litecoin_cy.ts \\\n+  qt/locale/litecoin_da.ts \\\n+  qt/locale/litecoin_de.ts \\\n+  qt/locale/litecoin_el_GR.ts \\\n+  qt/locale/litecoin_el.ts \\\n+  qt/locale/litecoin_en_GB.ts \\\n+  qt/locale/litecoin_en.ts \\\n+  qt/locale/litecoin_eo.ts \\\n+  qt/locale/litecoin_es_AR.ts \\\n+  qt/locale/litecoin_es_CL.ts \\\n+  qt/locale/litecoin_es_CO.ts \\\n+  qt/locale/litecoin_es_DO.ts \\\n+  qt/locale/litecoin_es_ES.ts \\\n+  qt/locale/litecoin_es_MX.ts \\\n+  qt/locale/litecoin_es.ts \\\n+  qt/locale/litecoin_es_UY.ts \\\n+  qt/locale/litecoin_es_VE.ts \\\n+  qt/locale/litecoin_et.ts \\\n+  qt/locale/litecoin_eu_ES.ts \\\n+  qt/locale/litecoin_fa_IR.ts \\\n+  qt/locale/litecoin_fa.ts \\\n+  qt/locale/litecoin_fi.ts \\\n+  qt/locale/litecoin_fr_CA.ts \\\n+  qt/locale/litecoin_fr_FR.ts \\\n+  qt/locale/litecoin_fr.ts \\\n+  qt/locale/litecoin_gl.ts \\\n+  qt/locale/litecoin_he.ts \\\n+  qt/locale/litecoin_hi_IN.ts \\\n+  qt/locale/litecoin_hr.ts \\\n+  qt/locale/litecoin_hu.ts \\\n+  qt/locale/litecoin_id_ID.ts \\\n+  qt/locale/litecoin_it_IT.ts \\\n+  qt/locale/litecoin_it.ts \\\n+  qt/locale/litecoin_ja.ts \\\n+  qt/locale/litecoin_ka.ts \\\n+  qt/locale/litecoin_kk_KZ.ts \\\n+  qt/locale/litecoin_ko_KR.ts \\\n+  qt/locale/litecoin_ku_IQ.ts \\\n+  qt/locale/litecoin_ky.ts \\\n+  qt/locale/litecoin_la.ts \\\n+  qt/locale/litecoin_lt.ts \\\n+  qt/locale/litecoin_lv_LV.ts \\\n+  qt/locale/litecoin_mk_MK.ts \\\n+  qt/locale/litecoin_mn.ts \\\n+  qt/locale/litecoin_ms_MY.ts \\\n+  qt/locale/litecoin_nb.ts \\\n+  qt/locale/litecoin_nl.ts \\\n+  qt/locale/litecoin_pam.ts \\\n+  qt/locale/litecoin_pl.ts \\\n+  qt/locale/litecoin_pt_BR.ts \\\n+  qt/locale/litecoin_pt_PT.ts \\\n+  qt/locale/litecoin_ro_RO.ts \\\n+  qt/locale/litecoin_ro.ts \\\n+  qt/locale/litecoin_ru_RU.ts \\\n+  qt/locale/litecoin_ru.ts \\\n+  qt/locale/litecoin_sk.ts \\\n+  qt/locale/litecoin_sl_SI.ts \\\n+  qt/locale/litecoin_sq.ts \\\n+  qt/locale/litecoin_sr@latin.ts \\\n+  qt/locale/litecoin_sr.ts \\\n+  qt/locale/litecoin_sv.ts \\\n+  qt/locale/litecoin_ta.ts \\\n+  qt/locale/litecoin_th_TH.ts \\\n+  qt/locale/litecoin_tr_TR.ts \\\n+  qt/locale/litecoin_tr.ts \\\n+  qt/locale/litecoin_uk.ts \\\n+  qt/locale/litecoin_ur_PK.ts \\\n+  qt/locale/litecoin_uz@Cyrl.ts \\\n+  qt/locale/litecoin_vi.ts \\\n+  qt/locale/litecoin_vi_VN.ts \\\n+  qt/locale/litecoin_zh_CN.ts \\\n+  qt/locale/litecoin_zh_HK.ts \\\n+  qt/locale/litecoin_zh.ts \\\n+  qt/locale/litecoin_zh_TW.ts\n \n QT_FORMS_UI = \\\n   qt/forms/addressbookpage.ui \\\n@@ -112,10 +112,10 @@ QT_MOC_CPP = \\\n   qt/moc_addresstablemodel.cpp \\\n   qt/moc_askpassphrasedialog.cpp \\\n   qt/moc_bantablemodel.cpp \\\n-  qt/moc_bitcoinaddressvalidator.cpp \\\n-  qt/moc_bitcoinamountfield.cpp \\\n-  qt/moc_bitcoingui.cpp \\\n-  qt/moc_bitcoinunits.cpp \\\n+  qt/moc_litecoinaddressvalidator.cpp \\\n+  qt/moc_litecoinamountfield.cpp \\\n+  qt/moc_litecoingui.cpp \\\n+  qt/moc_litecoinunits.cpp \\\n   qt/moc_clientmodel.cpp \\\n   qt/moc_coincontroldialog.cpp \\\n   qt/moc_coincontroltreewidget.cpp \\\n@@ -153,35 +153,35 @@ QT_MOC_CPP = \\\n   qt/moc_walletmodel.cpp \\\n   qt/moc_walletview.cpp\n \n-BITCOIN_MM = \\\n+LITECOIN_MM = \\\n   qt/macdockiconhandler.mm \\\n   qt/macnotificationhandler.mm\n \n QT_MOC = \\\n-  qt/bitcoin.moc \\\n-  qt/bitcoinamountfield.moc \\\n+  qt/litecoin.moc \\\n+  qt/litecoinamountfield.moc \\\n   qt/intro.moc \\\n   qt/overviewpage.moc \\\n   qt/rpcconsole.moc\n \n-QT_QRC_CPP = qt/qrc_bitcoin.cpp\n-QT_QRC = qt/bitcoin.qrc\n-QT_QRC_LOCALE_CPP = qt/qrc_bitcoin_locale.cpp\n-QT_QRC_LOCALE = qt/bitcoin_locale.qrc\n+QT_QRC_CPP = qt/qrc_litecoin.cpp\n+QT_QRC = qt/litecoin.qrc\n+QT_QRC_LOCALE_CPP = qt/qrc_litecoin_locale.cpp\n+QT_QRC_LOCALE = qt/litecoin_locale.qrc\n \n PROTOBUF_CC = qt/paymentrequest.pb.cc\n PROTOBUF_H = qt/paymentrequest.pb.h\n PROTOBUF_PROTO = qt/paymentrequest.proto\n \n-BITCOIN_QT_H = \\\n+LITECOIN_QT_H = \\\n   qt/addressbookpage.h \\\n   qt/addresstablemodel.h \\\n   qt/askpassphrasedialog.h \\\n   qt/bantablemodel.h \\\n-  qt/bitcoinaddressvalidator.h \\\n-  qt/bitcoinamountfield.h \\\n-  qt/bitcoingui.h \\\n-  qt/bitcoinunits.h \\\n+  qt/litecoinaddressvalidator.h \\\n+  qt/litecoinamountfield.h \\\n+  qt/litecoingui.h \\\n+  qt/litecoinunits.h \\\n   qt/clientmodel.h \\\n   qt/coincontroldialog.h \\\n   qt/coincontroltreewidget.h \\\n@@ -231,9 +231,9 @@ RES_ICONS = \\\n   qt/res/icons/address-book.png \\\n   qt/res/icons/about.png \\\n   qt/res/icons/about_qt.png \\\n-  qt/res/icons/bitcoin.ico \\\n-  qt/res/icons/bitcoin_testnet.ico \\\n-  qt/res/icons/bitcoin.png \\\n+  qt/res/icons/litecoin.ico \\\n+  qt/res/icons/litecoin_testnet.ico \\\n+  qt/res/icons/litecoin.png \\\n   qt/res/icons/chevron.png \\\n   qt/res/icons/clock1.png \\\n   qt/res/icons/clock2.png \\\n@@ -280,12 +280,12 @@ RES_ICONS = \\\n   qt/res/icons/verify.png \\\n   qt/res/icons/transaction_abandoned.png\n \n-BITCOIN_QT_CPP = \\\n+LITECOIN_QT_CPP = \\\n   qt/bantablemodel.cpp \\\n-  qt/bitcoinaddressvalidator.cpp \\\n-  qt/bitcoinamountfield.cpp \\\n-  qt/bitcoingui.cpp \\\n-  qt/bitcoinunits.cpp \\\n+  qt/litecoinaddressvalidator.cpp \\\n+  qt/litecoinamountfield.cpp \\\n+  qt/litecoingui.cpp \\\n+  qt/litecoinunits.cpp \\\n   qt/clientmodel.cpp \\\n   qt/csvmodelwriter.cpp \\\n   qt/guiutil.cpp \\\n@@ -304,11 +304,11 @@ BITCOIN_QT_CPP = \\\n   qt/utilitydialog.cpp\n \n if TARGET_WINDOWS\n-BITCOIN_QT_CPP += qt/winshutdownmonitor.cpp\n+LITECOIN_QT_CPP += qt/winshutdownmonitor.cpp\n endif\n \n if ENABLE_WALLET\n-BITCOIN_QT_CPP += \\\n+LITECOIN_QT_CPP += \\\n   qt/addressbookpage.cpp \\\n   qt/addresstablemodel.cpp \\\n   qt/askpassphrasedialog.cpp \\\n@@ -341,19 +341,19 @@ RES_IMAGES =\n \n RES_MOVIES = $(wildcard qt/res/movies/spinner-*.png)\n \n-BITCOIN_RC = qt/res/bitcoin-qt-res.rc\n+LITECOIN_RC = qt/res/litecoin-qt-res.rc\n \n-BITCOIN_QT_INCLUDES = -I$(builddir)/qt -I$(srcdir)/qt -I$(srcdir)/qt/forms \\\n+LITECOIN_QT_INCLUDES = -I$(builddir)/qt -I$(srcdir)/qt -I$(srcdir)/qt/forms \\\n   -I$(builddir)/qt/forms -DQT_NO_KEYWORDS\n \n-qt_libbitcoinqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n+qt_liblitecoinqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(LITECOIN_INCLUDES) $(LITECOIN_QT_INCLUDES) \\\n   $(QT_INCLUDES) $(QT_DBUS_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)\n-qt_libbitcoinqt_a_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n+qt_liblitecoinqt_a_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n \n-qt_libbitcoinqt_a_SOURCES = $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(QT_FORMS_UI) \\\n+qt_liblitecoinqt_a_SOURCES = $(LITECOIN_QT_CPP) $(LITECOIN_QT_H) $(QT_FORMS_UI) \\\n   $(QT_QRC) $(QT_QRC_LOCALE) $(QT_TS) $(PROTOBUF_PROTO) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES)\n \n-nodist_qt_libbitcoinqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC) $(PROTOBUF_CC) \\\n+nodist_qt_liblitecoinqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC) $(PROTOBUF_CC) \\\n   $(PROTOBUF_H) $(QT_QRC_CPP) $(QT_QRC_LOCALE_CPP)\n \n # forms/foo.h -> forms/ui_foo.h\n@@ -362,71 +362,71 @@ QT_FORMS_H=$(join $(dir $(QT_FORMS_UI)),$(addprefix ui_, $(notdir $(QT_FORMS_UI:\n # Most files will depend on the forms and moc files as includes. Generate them\n # before anything else.\n $(QT_MOC): $(QT_FORMS_H)\n-$(qt_libbitcoinqt_a_OBJECTS) $(qt_bitcoin_qt_OBJECTS) : | $(QT_MOC)\n+$(qt_liblitecoinqt_a_OBJECTS) $(qt_litecoin_qt_OBJECTS) : | $(QT_MOC)\n \n #Generating these with a half-written protobuf header leads to wacky results.\n #This makes sure it's done.\n $(QT_MOC): $(PROTOBUF_H)\n $(QT_MOC_CPP): $(PROTOBUF_H)\n \n-# bitcoin-qt binary #\n-qt_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n+# litecoin-qt binary #\n+qt_litecoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(LITECOIN_INCLUDES) $(LITECOIN_QT_INCLUDES) \\\n   $(QT_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)\n-qt_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n+qt_litecoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n \n-qt_bitcoin_qt_SOURCES = qt/bitcoin.cpp\n+qt_litecoin_qt_SOURCES = qt/litecoin.cpp\n if TARGET_DARWIN\n-  qt_bitcoin_qt_SOURCES += $(BITCOIN_MM)\n+  qt_litecoin_qt_SOURCES += $(LITECOIN_MM)\n endif\n if TARGET_WINDOWS\n-  qt_bitcoin_qt_SOURCES += $(BITCOIN_RC)\n+  qt_litecoin_qt_SOURCES += $(LITECOIN_RC)\n endif\n-qt_bitcoin_qt_LDADD = qt/libbitcoinqt.a $(LIBBITCOIN_SERVER)\n+qt_litecoin_qt_LDADD = qt/liblitecoinqt.a $(LIBLITECOIN_SERVER)\n if ENABLE_WALLET\n-qt_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n+qt_litecoin_qt_LDADD += $(LIBLITECOIN_WALLET)\n endif\n if ENABLE_ZMQ\n-qt_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n+qt_litecoin_qt_LDADD += $(LIBLITECOIN_ZMQ) $(ZMQ_LIBS)\n endif\n-qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n+qt_litecoin_qt_LDADD += $(LIBLITECOIN_CLI) $(LIBLITECOIN_COMMON) $(LIBLITECOIN_UTIL) $(LIBLITECOIN_CONSENSUS) $(LIBLITECOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n-qt_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n-qt_bitcoin_qt_LIBTOOLFLAGS = --tag CXX\n+qt_litecoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+qt_litecoin_qt_LIBTOOLFLAGS = --tag CXX\n \n #locale/foo.ts -> locale/foo.qm\n QT_QM=$(QT_TS:.ts=.qm)\n \n SECONDARY: $(QT_QM)\n \n-$(srcdir)/qt/bitcoinstrings.cpp: $(libbitcoin_server_a_SOURCES) $(libbitcoin_wallet_a_SOURCES)\n+$(srcdir)/qt/litecoinstrings.cpp: $(liblitecoin_server_a_SOURCES) $(liblitecoin_wallet_a_SOURCES)\n \t@test -n $(XGETTEXT) || echo \"xgettext is required for updating translations\"\n \t$(AM_V_GEN) cd $(srcdir); XGETTEXT=$(XGETTEXT) PACKAGE_NAME=\"$(PACKAGE_NAME)\" COPYRIGHT_HOLDERS=\"$(COPYRIGHT_HOLDERS)\" COPYRIGHT_HOLDERS_SUBSTITUTION=\"$(COPYRIGHT_HOLDERS_SUBSTITUTION)\" $(PYTHON) ../share/qt/extract_strings_qt.py $^\n \n-translate: $(srcdir)/qt/bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(BITCOIN_MM)\n+translate: $(srcdir)/qt/litecoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(LITECOIN_QT_CPP) $(LITECOIN_QT_H) $(LITECOIN_MM)\n \t@test -n $(LUPDATE) || echo \"lupdate is required for updating translations\"\n-\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LUPDATE) $^ -locations relative -no-obsolete -ts $(srcdir)/qt/locale/bitcoin_en.ts\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LUPDATE) $^ -locations relative -no-obsolete -ts $(srcdir)/qt/locale/litecoin_en.ts\n \n $(QT_QRC_LOCALE_CPP): $(QT_QRC_LOCALE) $(QT_QM)\n \t@test -f $(RCC)\n \t@cp -f $< $(@D)/temp_$(<F)\n-\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin_locale $(@D)/temp_$(<F) | \\\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name litecoin_locale $(@D)/temp_$(<F) | \\\n \t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@\n \t@rm $(@D)/temp_$(<F)\n \n $(QT_QRC_CPP): $(QT_QRC) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES) $(PROTOBUF_H)\n \t@test -f $(RCC)\n-\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin $< | \\\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name litecoin $< | \\\n \t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@\n \n-CLEAN_QT = $(nodist_qt_libbitcoinqt_a_SOURCES) $(QT_QM) $(QT_FORMS_H) qt/*.gcda qt/*.gcno\n+CLEAN_QT = $(nodist_qt_liblitecoinqt_a_SOURCES) $(QT_QM) $(QT_FORMS_H) qt/*.gcda qt/*.gcno\n \n CLEANFILES += $(CLEAN_QT)\n \n-bitcoin_qt_clean: FORCE\n-\trm -f $(CLEAN_QT) $(qt_libbitcoinqt_a_OBJECTS) $(qt_bitcoin_qt_OBJECTS) qt/bitcoin-qt$(EXEEXT) $(LIBBITCOINQT)\n+litecoin_qt_clean: FORCE\n+\trm -f $(CLEAN_QT) $(qt_liblitecoinqt_a_OBJECTS) $(qt_litecoin_qt_OBJECTS) qt/litecoin-qt$(EXEEXT) $(LIBLITECOINQT)\n \n-bitcoin_qt : qt/bitcoin-qt$(EXEEXT)\n+litecoin_qt : qt/litecoin-qt$(EXEEXT)\n \n ui_%.h: %.ui\n \t@test -f $(UIC)"
      },
      {
        "sha": "d65d56997631b6ed529f3d9f857a5d06d5e27870",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 18,
        "deletions": 18,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n-bin_PROGRAMS += qt/test/test_bitcoin-qt\n-TESTS += qt/test/test_bitcoin-qt\n+bin_PROGRAMS += qt/test/test_litecoin-qt\n+TESTS += qt/test/test_litecoin-qt\n \n TEST_QT_MOC_CPP = qt/test/moc_uritests.cpp\n \n@@ -12,42 +12,42 @@ TEST_QT_H = \\\n   qt/test/paymentrequestdata.h \\\n   qt/test/paymentservertests.h\n \n-qt_test_test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n+qt_test_test_litecoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(LITECOIN_INCLUDES) $(LITECOIN_QT_INCLUDES) \\\n   $(QT_INCLUDES) $(QT_TEST_INCLUDES) $(PROTOBUF_CFLAGS)\n \n-qt_test_test_bitcoin_qt_SOURCES = \\\n+qt_test_test_litecoin_qt_SOURCES = \\\n   qt/test/test_main.cpp \\\n   qt/test/uritests.cpp \\\n   $(TEST_QT_H)\n if ENABLE_WALLET\n-qt_test_test_bitcoin_qt_SOURCES += \\\n+qt_test_test_litecoin_qt_SOURCES += \\\n   qt/test/paymentservertests.cpp\n endif\n \n-nodist_qt_test_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n+nodist_qt_test_test_litecoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n \n-qt_test_test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER)\n+qt_test_test_litecoin_qt_LDADD = $(LIBLITECOINQT) $(LIBLITECOIN_SERVER)\n if ENABLE_WALLET\n-qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n+qt_test_test_litecoin_qt_LDADD += $(LIBLITECOIN_WALLET)\n endif\n if ENABLE_ZMQ\n-qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n+qt_test_test_litecoin_qt_LDADD += $(LIBLITECOIN_ZMQ) $(ZMQ_LIBS)\n endif\n-qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) \\\n+qt_test_test_litecoin_qt_LDADD += $(LIBLITECOIN_CLI) $(LIBLITECOIN_COMMON) $(LIBLITECOIN_UTIL) $(LIBLITECOIN_CONSENSUS) $(LIBLITECOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) \\\n   $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n-qt_test_test_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n-qt_test_test_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n+qt_test_test_litecoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+qt_test_test_litecoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n \n-CLEAN_BITCOIN_QT_TEST = $(TEST_QT_MOC_CPP) qt/test/*.gcda qt/test/*.gcno\n+CLEAN_LITECOIN_QT_TEST = $(TEST_QT_MOC_CPP) qt/test/*.gcda qt/test/*.gcno\n \n-CLEANFILES += $(CLEAN_BITCOIN_QT_TEST)\n+CLEANFILES += $(CLEAN_LITECOIN_QT_TEST)\n \n-test_bitcoin_qt : qt/test/test_bitcoin-qt$(EXEEXT)\n+test_litecoin_qt : qt/test/test_litecoin-qt$(EXEEXT)\n \n-test_bitcoin_qt_check : qt/test/test_bitcoin-qt$(EXEEXT) FORCE\n+test_litecoin_qt_check : qt/test/test_litecoin-qt$(EXEEXT) FORCE\n \t$(MAKE) check-TESTS TESTS=$^\n \n-test_bitcoin_qt_clean: FORCE\n-\trm -f $(CLEAN_BITCOIN_QT_TEST) $(qt_test_test_bitcoin_qt_OBJECTS)\n+test_litecoin_qt_clean: FORCE\n+\trm -f $(CLEAN_LITECOIN_QT_TEST) $(qt_test_test_litecoin_qt_OBJECTS)"
      },
      {
        "sha": "2a61668b01e08532415a6b4ce8f4ca7c76c5d542",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 27,
        "deletions": 27,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,13 +1,13 @@\n-TESTS += test/test_bitcoin\n-bin_PROGRAMS += test/test_bitcoin\n+TESTS += test/test_litecoin\n+bin_PROGRAMS += test/test_litecoin\n TEST_SRCDIR = test\n-TEST_BINARY=test/test_bitcoin$(EXEEXT)\n+TEST_BINARY=test/test_litecoin$(EXEEXT)\n \n \n EXTRA_DIST += \\\n \ttest/bctest.py \\\n-\ttest/bitcoin-util-test.py \\\n-\ttest/data/bitcoin-util-test.json \\\n+\ttest/litecoin-util-test.py \\\n+\ttest/data/litecoin-util-test.json \\\n \ttest/data/blanktx.hex \\\n \ttest/data/tt-delin1-out.hex \\\n \ttest/data/tt-delout1-out.hex \\\n@@ -34,7 +34,7 @@ RAW_TEST_FILES =\n \n GENERATED_TEST_FILES = $(JSON_TEST_FILES:.json=.json.h) $(RAW_TEST_FILES:.raw=.raw.h)\n \n-BITCOIN_TESTS =\\\n+LITECOIN_TESTS =\\\n   test/arith_uint256_tests.cpp \\\n   test/scriptnum10.h \\\n   test/addrman_tests.cpp \\\n@@ -79,8 +79,8 @@ BITCOIN_TESTS =\\\n   test/sigopcount_tests.cpp \\\n   test/skiplist_tests.cpp \\\n   test/streams_tests.cpp \\\n-  test/test_bitcoin.cpp \\\n-  test/test_bitcoin.h \\\n+  test/test_litecoin.cpp \\\n+  test/test_litecoin.h \\\n   test/testutil.cpp \\\n   test/testutil.h \\\n   test/timedata_tests.cpp \\\n@@ -92,7 +92,7 @@ BITCOIN_TESTS =\\\n   test/util_tests.cpp\n \n if ENABLE_WALLET\n-BITCOIN_TESTS += \\\n+LITECOIN_TESTS += \\\n   wallet/test/wallet_test_fixture.cpp \\\n   wallet/test/wallet_test_fixture.h \\\n   wallet/test/accounting_tests.cpp \\\n@@ -101,44 +101,44 @@ BITCOIN_TESTS += \\\n   wallet/test/rpc_wallet_tests.cpp\n endif\n \n-test_test_bitcoin_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n-test_test_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS)\n-test_test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n+test_test_litecoin_SOURCES = $(LITECOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n+test_test_litecoin_CPPFLAGS = $(AM_CPPFLAGS) $(LITECOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS)\n+test_test_litecoin_LDADD = $(LIBLITECOIN_SERVER) $(LIBLITECOIN_CLI) $(LIBLITECOIN_COMMON) $(LIBLITECOIN_UTIL) $(LIBLITECOIN_CONSENSUS) $(LIBLITECOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1)\n-test_test_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_test_litecoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n if ENABLE_WALLET\n-test_test_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n+test_test_litecoin_LDADD += $(LIBLITECOIN_WALLET)\n endif\n \n-test_test_bitcoin_LDADD += $(LIBBITCOIN_CONSENSUS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)\n-test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static\n+test_test_litecoin_LDADD += $(LIBLITECOIN_CONSENSUS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)\n+test_test_litecoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static\n \n if ENABLE_ZMQ\n-test_test_bitcoin_LDADD += $(ZMQ_LIBS)\n+test_test_litecoin_LDADD += $(ZMQ_LIBS)\n endif\n \n-nodist_test_test_bitcoin_SOURCES = $(GENERATED_TEST_FILES)\n+nodist_test_test_litecoin_SOURCES = $(GENERATED_TEST_FILES)\n \n-$(BITCOIN_TESTS): $(GENERATED_TEST_FILES)\n+$(LITECOIN_TESTS): $(GENERATED_TEST_FILES)\n \n-CLEAN_BITCOIN_TEST = test/*.gcda test/*.gcno $(GENERATED_TEST_FILES)\n+CLEAN_LITECOIN_TEST = test/*.gcda test/*.gcno $(GENERATED_TEST_FILES)\n \n-CLEANFILES += $(CLEAN_BITCOIN_TEST)\n+CLEANFILES += $(CLEAN_LITECOIN_TEST)\n \n # This file is problematic for out-of-tree builds if it exists.\n DISTCLEANFILES += test/buildenv.pyc\n \n-bitcoin_test: $(TEST_BINARY)\n+litecoin_test: $(TEST_BINARY)\n \n-bitcoin_test_check: $(TEST_BINARY) FORCE\n+litecoin_test_check: $(TEST_BINARY) FORCE\n \t$(MAKE) check-TESTS TESTS=$^\n \n-bitcoin_test_clean : FORCE\n-\trm -f $(CLEAN_BITCOIN_TEST) $(test_test_bitcoin_OBJECTS) $(TEST_BINARY)\n+litecoin_test_clean : FORCE\n+\trm -f $(CLEAN_LITECOIN_TEST) $(test_test_litecoin_OBJECTS) $(TEST_BINARY)\n \n check-local:\n-\t@echo \"Running test/bitcoin-util-test.py...\"\n-\t$(AM_V_at)srcdir=$(srcdir) PYTHONPATH=$(builddir)/test $(PYTHON) $(srcdir)/test/bitcoin-util-test.py\n+\t@echo \"Running test/litecoin-util-test.py...\"\n+\t$(AM_V_at)srcdir=$(srcdir) PYTHONPATH=$(builddir)/test $(PYTHON) $(srcdir)/test/litecoin-util-test.py\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C secp256k1 check\n if EMBEDDED_UNIVALUE\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C univalue check"
      },
      {
        "sha": "9a76411f479700381184cf083cb4111f148e4986",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cab48f90bc1c1dd204f320be5d3677f742e9dd3/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=6cab48f90bc1c1dd204f320be5d3677f742e9dd3",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2012 Pieter Wuille\n-// Copyright (c) 2012-2015 The Bitcoin Core developers\n+// Copyright (c) 2012-2015 The Litecoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      }
    ]
  }
]