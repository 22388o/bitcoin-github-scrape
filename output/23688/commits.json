[
  {
    "sha": "0ba98eda28053749f06928187e8dafbfd34faaf0",
    "node_id": "C_kwDOABII59oAKDBiYTk4ZWRhMjgwNTM3NDlmMDY5MjgxODdlOGRhZmJmZDM0ZmFhZjA",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-12-06T22:36:31Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-12-06T22:36:31Z"
      },
      "message": "test: remove unneeded sync_all() calls in wallet_listtransactions.py",
      "tree": {
        "sha": "08a6bb0276ce1e8971cba9756902e9920b2412ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/08a6bb0276ce1e8971cba9756902e9920b2412ca"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0ba98eda28053749f06928187e8dafbfd34faaf0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ba98eda28053749f06928187e8dafbfd34faaf0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0ba98eda28053749f06928187e8dafbfd34faaf0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ba98eda28053749f06928187e8dafbfd34faaf0/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "786ffb3ae488061e13c02ad3fb34a5d2fc785b3d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/786ffb3ae488061e13c02ad3fb34a5d2fc785b3d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/786ffb3ae488061e13c02ad3fb34a5d2fc785b3d"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 4,
      "deletions": 7
    },
    "files": [
      {
        "sha": "1b29d163c285ca14892f0d80db1ee6bcfc2b18fd",
        "filename": "test/functional/wallet_listtransactions.py",
        "status": "modified",
        "additions": 4,
        "deletions": 7,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ba98eda28053749f06928187e8dafbfd34faaf0/test/functional/wallet_listtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ba98eda28053749f06928187e8dafbfd34faaf0/test/functional/wallet_listtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_listtransactions.py?ref=0ba98eda28053749f06928187e8dafbfd34faaf0",
        "patch": "@@ -4,10 +4,9 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the listtransactions API.\"\"\"\n \n-import shutil\n-import os\n-\n from decimal import Decimal\n+import os\n+import shutil\n \n from test_framework.messages import (\n     COIN,\n@@ -19,6 +18,7 @@\n     assert_equal,\n )\n \n+\n class ListTransactionsTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 3\n@@ -245,17 +245,14 @@ def run_externally_generated_address_test(self):\n         # send to an address beyond the next to be generated to test the keypool gap\n         self.nodes[1].sendtoaddress(addr3, \"0.001\")\n         self.generate(self.nodes[1], 1)\n-        self.sync_all()\n \n         # send to an address that is already marked as used due to the keypool gap mechanics\n         self.nodes[1].sendtoaddress(addr2, \"0.001\")\n         self.generate(self.nodes[1], 1)\n-        self.sync_all()\n \n         # send to self transaction\n         self.nodes[0].sendtoaddress(addr1, \"0.001\")\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n \n         self.log.info(\"Verify listtransactions is the same regardless of where the address was generated\")\n         transactions0 = self.nodes[0].listtransactions()\n@@ -273,7 +270,7 @@ def normalize_list(txs):\n         normalize_list(transactions2)\n         assert_equal(transactions0, transactions2)\n \n-        self.log.info(\"Verify labels are persistent on the node generated the addresses\")\n+        self.log.info(\"Verify labels are persistent on the node that generated the addresses\")\n         assert_equal(['pizza1'], self.nodes[0].getaddressinfo(addr1)['labels'])\n         assert_equal(['pizza2'], self.nodes[0].getaddressinfo(addr2)['labels'])\n         assert_equal(['pizza3'], self.nodes[0].getaddressinfo(addr3)['labels'])"
      }
    ]
  }
]