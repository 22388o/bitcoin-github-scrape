[
  {
    "sha": "e432a5f08d75480753cf3cf81d656f0e1dd4da79",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNDMyYTVmMDhkNzU0ODA3NTNjZjNjZjgxZDY1NmYwZTFkZDRkYTc5",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-08-18T19:55:54Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-08-18T20:10:15Z"
      },
      "message": "build: add option for reducing exports (v2)\n\nThis was committed previously as 4975ae172 and reverted, because the flags were\napplied even if the checks didn't pass. This is the same commit, fixed up to\nactually disable the functionality when necessary.\n\nEnabled automatically if boost >= 1.49.\nSee: https://svn.boost.org/trac/boost/ticket/2309\n\nAlso, check for a default visibility attribute, so that we can mark future\napi functions correctly.",
      "tree": {
        "sha": "7da3e4d1fb0d1beed9f975aa6e66cb988ccd22b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7da3e4d1fb0d1beed9f975aa6e66cb988ccd22b2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e432a5f08d75480753cf3cf81d656f0e1dd4da79",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e432a5f08d75480753cf3cf81d656f0e1dd4da79",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e432a5f08d75480753cf3cf81d656f0e1dd4da79",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e432a5f08d75480753cf3cf81d656f0e1dd4da79/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a4f151f714d67da7850d94d44b824944d3f0d74d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4f151f714d67da7850d94d44b824944d3f0d74d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a4f151f714d67da7850d94d44b824944d3f0d74d"
      }
    ],
    "stats": {
      "total": 86,
      "additions": 84,
      "deletions": 2
    },
    "files": [
      {
        "sha": "601ccf0a7973773c5ced1566cfffe4fdf6c55953",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 78,
        "deletions": 0,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e432a5f08d75480753cf3cf81d656f0e1dd4da79/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e432a5f08d75480753cf3cf81d656f0e1dd4da79/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=e432a5f08d75480753cf3cf81d656f0e1dd4da79",
        "patch": "@@ -90,6 +90,12 @@ AC_ARG_ENABLE([hardening],\n   [use_hardening=$enableval],\n   [use_hardening=yes])\n \n+AC_ARG_ENABLE([reduce-exports],\n+  [AS_HELP_STRING([--enable-reduce-exports],\n+  [attempt to reduce exported symbols in the resulting executables (default is yes)])],\n+  [use_reduce_exports=$enableval],\n+  [use_reduce_exports=auto])\n+\n AC_ARG_ENABLE([ccache],\n   [AS_HELP_STRING([--enable-ccache],\n   [use ccache for building (default is yes if ccache is found)])],\n@@ -396,6 +402,36 @@ AC_TRY_COMPILE([#include <sys/socket.h>],\n \n AC_SEARCH_LIBS([clock_gettime],[rt])\n \n+AC_MSG_CHECKING([for visibility attribute])\n+AC_LINK_IFELSE([AC_LANG_SOURCE([\n+  int foo_def( void ) __attribute__((visibility(\"default\")));\n+  int main(){}\n+  ])],\n+  [\n+    AC_DEFINE(HAVE_VISIBILITY_ATTRIBUTE,1,[Define if the visibility attribute is supported.])\n+    AC_MSG_RESULT(yes)\n+  ],\n+  [\n+    AC_MSG_RESULT(no)\n+    if test x$use_reduce_exports = xyes; then\n+      AC_MSG_ERROR([Cannot find a working visibility attribute. Use --disable-reduced-exports.])\n+    fi\n+      AC_MSG_WARN([Cannot find a working visibility attribute. Disabling reduced exports.])\n+      use_reduce_exports=no\n+  ]\n+)\n+\n+if test x$use_reduce_exports != xno; then\n+  AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[RE_CXXFLAGS=\"-fvisibility=hidden\"],\n+  [\n+    if test x$use_reduce_exports = xyes; then\n+      AC_MSG_ERROR([Cannot set default symbol visibility. Use --disable-reduced-exports.])\n+    fi\n+    AC_MSG_WARN([Cannot set default symbol visibility. Disabling reduced exports.])\n+    use_reduce_exports=no\n+  ])\n+fi\n+\n LEVELDB_CPPFLAGS=\n LIBLEVELDB=\n LIBMEMENV=\n@@ -426,6 +462,40 @@ AX_BOOST_PROGRAM_OPTIONS\n AX_BOOST_THREAD\n AX_BOOST_CHRONO\n \n+\n+if test x$use_reduce_exports != xno; then\n+  AC_MSG_CHECKING([for working boost reduced exports])\n+  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+  CPPFLAGS=\"$BOOST_CPPFLAGS $CPPFLAGS\"\n+  AC_PREPROC_IFELSE([AC_LANG_PROGRAM([[\n+      @%:@include <boost/version.hpp>\n+    ]], [[\n+      #if BOOST_VERSION >= 104900\n+      // Everything is okay\n+      #else\n+      #  error Boost version is too old\n+      #endif\n+    ]])],[\n+      AC_MSG_RESULT(yes)\n+    ],[:\n+    if test x$use_reduce_exports = xauto; then\n+      use_reduce_exports=no\n+    else\n+      if test x$use_reduce_exports = xyes; then\n+        AC_MSG_ERROR([boost versions < 1.49 are known to be broken with reduced exports. Use --disable-reduced-exports.])\n+      fi\n+    fi\n+    AC_MSG_RESULT(no)\n+    AC_MSG_WARN([boost versions < 1.49 are known to have symbol visibility issues. Disabling reduced exports.])\n+  ])\n+  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+fi\n+\n+if test x$use_reduce_exports != xno; then\n+    CXXFLAGS=\"$CXXFLAGS $RE_CXXFLAGS\"\n+    AX_CHECK_LINK_FLAG([[-Wl,--exclude-libs,ALL]], [RELDFLAGS=\"-Wl,--exclude-libs,ALL\"])\n+fi\n+\n if test x$use_tests = xyes; then\n \n   if test x$HEXDUMP = x; then\n@@ -672,6 +742,13 @@ else\n   AC_MSG_RESULT([no])\n fi\n \n+AC_MSG_CHECKING([whether to reduce exports])\n+if test x$use_reduce_exports != xno; then\n+  AC_MSG_RESULT([yes])\n+else\n+  AC_MSG_RESULT([no])\n+fi\n+\n if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests = xnononono; then\n   AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-daemon --with-gui or --enable-tests])\n fi\n@@ -704,6 +781,7 @@ AC_SUBST(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE)\n AC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)\n \n \n+AC_SUBST(RELDFLAGS)\n AC_SUBST(LIBTOOL_LDFLAGS)\n AC_SUBST(USE_UPNP)\n AC_SUBST(USE_QRCODE)"
      },
      {
        "sha": "1bb59bce7b5c224bfdcfd4c06da97181d42dae95",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e432a5f08d75480753cf3cf81d656f0e1dd4da79/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e432a5f08d75480753cf3cf81d656f0e1dd4da79/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=e432a5f08d75480753cf3cf81d656f0e1dd4da79",
        "patch": "@@ -261,6 +261,7 @@ endif\n \n bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS)\n bitcoind_CPPFLAGS = $(BITCOIN_INCLUDES)\n+bitcoind_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS)\n \n # bitcoin-cli binary #\n bitcoin_cli_LDADD = \\\n@@ -298,10 +299,12 @@ endif\n bitcoin_tx_SOURCES = bitcoin-tx.cpp\n bitcoin_tx_CPPFLAGS = $(BITCOIN_INCLUDES)\n #\n+bitcoin_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS)\n \n if TARGET_WINDOWS\n bitcoin_cli_SOURCES += bitcoin-cli-res.rc\n endif\n+bitcoin_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS)\n \n CLEANFILES = leveldb/libleveldb.a leveldb/libmemenv.a *.gcda *.gcno\n "
      },
      {
        "sha": "28d7053fc4b1e2690e8b7daca140c64c85807a2c",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e432a5f08d75480753cf3cf81d656f0e1dd4da79/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e432a5f08d75480753cf3cf81d656f0e1dd4da79/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=e432a5f08d75480753cf3cf81d656f0e1dd4da79",
        "patch": "@@ -362,7 +362,7 @@ qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL)\n if USE_LIBSECP256K1\n   qt_bitcoin_qt_LDADD += secp256k1/libsecp256k1.la\n endif\n-qt_bitcoin_qt_LDFLAGS = $(AM_LDFLAGS) $(QT_LDFLAGS)\n+qt_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS)\n \n #locale/foo.ts -> locale/foo.qm\n QT_QM=$(QT_TS:.ts=.qm)"
      },
      {
        "sha": "2cba5b7e1ef78abaa42fddf8f331fbe1ab0f9677",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e432a5f08d75480753cf3cf81d656f0e1dd4da79/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e432a5f08d75480753cf3cf81d656f0e1dd4da79/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=e432a5f08d75480753cf3cf81d656f0e1dd4da79",
        "patch": "@@ -36,7 +36,7 @@ qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBIT\n if USE_LIBSECP256K1\n   qt_test_test_bitcoin_qt_LDADD += secp256k1/libsecp256k1.la\n endif\n-qt_test_test_bitcoin_qt_LDFLAGS = $(AM_LDFLAGS) $(QT_LDFLAGS)\n+qt_test_test_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS)\n \n CLEAN_BITCOIN_QT_TEST = $(TEST_QT_MOC_CPP) qt/test/*.gcda qt/test/*.gcno\n "
      },
      {
        "sha": "b54c9be66422808892d4ccebf93156bee43e4f8b",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e432a5f08d75480753cf3cf81d656f0e1dd4da79/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e432a5f08d75480753cf3cf81d656f0e1dd4da79/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=e432a5f08d75480753cf3cf81d656f0e1dd4da79",
        "patch": "@@ -75,6 +75,7 @@ if USE_LIBSECP256K1\n endif\n \n test_test_bitcoin_LDADD += $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS)\n+test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS)\n \n nodist_test_test_bitcoin_SOURCES = $(GENERATED_TEST_FILES)\n "
      }
    ]
  }
]