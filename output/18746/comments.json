[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/618308518",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18746#issuecomment-618308518",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18746",
    "id": 618308518,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxODMwODUxOA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-23T10:02:47Z",
    "updated_at": "2021-03-10T23:56:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #17487 (coins: allow write to disk without cache drop by jamesob)\n* #9384 (CCoinsViewCache code cleanup & deduplication by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/618308518/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619564591",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18746#issuecomment-619564591",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18746",
    "id": 619564591,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTU2NDU5MQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-26T14:51:40Z",
    "updated_at": "2020-04-26T14:51:40Z",
    "author_association": "MEMBER",
    "body": "Concept ACK, and code change looks good. No strong background in coins management to ACK though.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619564591/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622332573",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18746#issuecomment-622332573",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18746",
    "id": 622332573,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjMzMjU3Mw==",
    "user": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?u=17d35db6d21a792a73c54469705cff5da63abe5f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-01T10:22:10Z",
    "updated_at": "2020-05-01T10:22:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "New logic makes sense. \r\nConcept ACK (as I have no deep knowledge on coin management).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622332573/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631016452",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18746#issuecomment-631016452",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18746",
    "id": 631016452,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTAxNjQ1Mg==",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-19T18:57:18Z",
    "updated_at": "2020-05-19T18:57:18Z",
    "author_association": "MEMBER",
    "body": "What's the rationale for changing this? Even if it's stylistically cleaner, I don't think it's worth changing semantics here unless there's a demonstrable performance benefit.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631016452/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631037370",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18746#issuecomment-631037370",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18746",
    "id": 631037370,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTAzNzM3MA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-19T19:35:30Z",
    "updated_at": "2020-05-19T19:35:30Z",
    "author_association": "MEMBER",
    "body": "> What's the rationale for changing this?\r\n\r\nThere's an inconsistency between how we treat spending a fresh coin in the cache (erase it ie don't allow the coin to be spent and FRESH), and what we do when we encounter a spent coin in the parent cache (add it to the cache as spent and FRESH). This change removes that inconsistency and adds the invariant that no coin can be spent and FRESH in any cache.\r\n\r\nThere's unlikely to be any noticeable performance change here. After all, it's very rare that we'll fetch a spent coin from a parent cache (which I'd argue is all the more reason to remove the special case code for that).\r\n\r\nI think this is an improvement to clarity, but you may be right that it's not worth changing.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631037370/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/635207376",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18746#issuecomment-635207376",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18746",
    "id": 635207376,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTIwNzM3Ng==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-28T08:46:20Z",
    "updated_at": "2020-05-28T08:46:20Z",
    "author_association": "MEMBER",
    "body": "> I think this is an improvement to clarity, but you may be right that it's not worth changing.\r\n\r\nI think it is, because we're changing this code for UTXO snapshots. The increased clarity should make those reviews (slightly) easier, something I bumped into myself: https://github.com/bitcoin/bitcoin/pull/17487#discussion_r427512576",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/635207376/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/635376865",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18746#issuecomment-635376865",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18746",
    "id": 635376865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTM3Njg2NQ==",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-28T14:15:07Z",
    "updated_at": "2020-05-28T14:16:18Z",
    "author_association": "MEMBER",
    "body": "Touching the heart of consensus-critical code and modifying behavior therein, even if just for an unlikely corner case, should IMHO come with very substantial motivation. \r\n\r\nThis is right on the knife's edge. I agree that it's unlikely this change in behavior would change consensus, but it sets a precedent that I'm not totally comfortable with.\r\n\r\nTo be honest I'd rather abandon the UTXO snapshot-related optimization changes (https://github.com/bitcoin/bitcoin/pull/17487) than invite behavioral changes to coins cache solely on the basis of readability or clarity.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/635376865/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/635411441",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18746#issuecomment-635411441",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18746",
    "id": 635411441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTQxMTQ0MQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-28T15:11:28Z",
    "updated_at": "2020-05-28T16:16:12Z",
    "author_association": "MEMBER",
    "body": "There aren't any dependencies between this and #17487, so I'm not sure that discussion of that PR is relevant here. I do however think it'd be a shame to abandon that PR. It's received substantial review from >10 contributors and the general reception was positive. In general, the decision to proceed with or abandon a PR should be based on the merit of that PR alone.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/635411441/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/710705262",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18746#issuecomment-710705262",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18746",
    "id": 710705262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMDcwNTI2Mg==",
    "user": {
      "login": "robot-dreams",
      "id": 4276679,
      "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4276679?u=b4a8cdc0904dca5d0765b64a5ba4ae1759539a98&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/robot-dreams",
      "html_url": "https://github.com/robot-dreams",
      "followers_url": "https://api.github.com/users/robot-dreams/followers",
      "following_url": "https://api.github.com/users/robot-dreams/following{/other_user}",
      "gists_url": "https://api.github.com/users/robot-dreams/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/robot-dreams/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
      "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
      "repos_url": "https://api.github.com/users/robot-dreams/repos",
      "events_url": "https://api.github.com/users/robot-dreams/events{/privacy}",
      "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-17T00:13:38Z",
    "updated_at": "2020-10-17T00:13:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is the FetchCoin change covered by any testing here? I think it might not be, given that:\r\n\r\n* CCoinsViewCache::GetCoin already returns false if the coin was spent: https://github.com/bitcoin/bitcoin/blob/2f71a1ea35667b3873197201531e7ae198ec5bf4/src/coins.cpp#L61-L64\r\n\r\n* SingleEntryCacheTest in coins_test.cpp uses a (subclass of) CCoinsViewCache for both the parent and the child: https://github.com/bitcoin/bitcoin/blob/2f71a1ea35667b3873197201531e7ae198ec5bf4/src/test/coins_tests.cpp#L627-L628\r\n\r\n* This test case existed and passed even before your change:\r\n\r\n                        Base    Cache   Result  Cache        Result\r\n                        Value   Value   Value   Flags        Flags\r\n        CheckAccessCoin(SPENT , ABSENT, ABSENT, NO_ENTRY   , NO_ENTRY   );",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/710705262/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/842393167",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18746#issuecomment-842393167",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18746",
    "id": 842393167,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MjM5MzE2Nw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-17T14:56:20Z",
    "updated_at": "2021-05-17T14:56:20Z",
    "author_association": "MEMBER",
    "body": "Thanks @robot-dreams. Excellent observation!\r\n\r\nI've updated `CCoinsViewCache::FetchCoin()` to assert that the coin returned from `GetCoin()` is not spent.\r\n\r\nI've also had to add a commit that changes the coins_tests unit test, since `CCoinsViewTest::GetCoin()` would sometimes return true even if the coin returned was empty (`IsSpent() == true`).\r\n\r\nI'm fairly confident that this is a good change, and I very much like adding invariants that remove the possibility of the program being in an inconsistent state. However, I'm going to close this PR for now since it hasn't received much attention over the year it's been open. We can always re-open it later if there's demand to clean up the coins interface. I also think if we were redesigning these interfaces now, we'd probably return a `std::optional<>` type to avoid having to return a bool _and_ have an in/out param, and also to avoid having a special `coinEmpty` marker.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/842393167/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/842480511",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18746#issuecomment-842480511",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18746",
    "id": 842480511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MjQ4MDUxMQ==",
    "user": {
      "login": "michaelfolkson",
      "id": 16323900,
      "node_id": "MDQ6VXNlcjE2MzIzOTAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/16323900?u=e2201a78ad660e42fd175003d02ad749b855e0a9&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelfolkson",
      "html_url": "https://github.com/michaelfolkson",
      "followers_url": "https://api.github.com/users/michaelfolkson/followers",
      "following_url": "https://api.github.com/users/michaelfolkson/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
      "repos_url": "https://api.github.com/users/michaelfolkson/repos",
      "events_url": "https://api.github.com/users/michaelfolkson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-17T16:53:51Z",
    "updated_at": "2021-05-17T16:53:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "For the benefit of anyone who does revisit this closed PR at a later date (including perhaps myself), this PR was spun out of https://github.com/bitcoin/bitcoin/pull/18113 (the comments part was merged in https://github.com/bitcoin/bitcoin/pull/18410 and the consensus code changes were in this PR).\r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/18113 was covered in [this](https://bitcoincore.reviews/18113) Bitcoin Core PR review club and includes a handy explanation of the validity of possible states (combinations of spent/unspent, fresh/not fresh, dirty/not dirty).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/842480511/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422263074",
    "pull_request_review_id": 408387834,
    "id": 422263074,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI2MzA3NA==",
    "diff_hunk": "@@ -44,14 +44,12 @@ CCoinsMap::iterator CCoinsViewCache::FetchCoin(const COutPoint &outpoint) const\n     if (it != cacheCoins.end())\n         return it;\n     Coin tmp;\n-    if (!base->GetCoin(outpoint, tmp))\n+    if (!base->GetCoin(outpoint, tmp) || tmp.IsSpent()) {\n+        // If we find a spent coin in the parent cache, no\n+        // need to fetch it into this cache.",
    "path": "src/coins.cpp",
    "position": null,
    "original_position": 7,
    "commit_id": "b5f17602b335a18ab05753da0c14b3f5acf83213",
    "original_commit_id": "c9849da1485458824851e56995b5470288d0372a",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "\"no need to put it into this cache\" (we already fetched it)",
    "created_at": "2020-05-08T17:13:02Z",
    "updated_at": "2020-05-08T17:57:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18746#discussion_r422263074",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18746",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422263074"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18746#discussion_r422263074"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18746"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422263074/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 49,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422273680",
    "pull_request_review_id": 408387834,
    "id": 422273680,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3MzY4MA==",
    "diff_hunk": "@@ -166,20 +164,22 @@ bool CCoinsViewCache::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlockIn\n         CCoinsMap::iterator itUs = cacheCoins.find(it->first);\n         if (itUs == cacheCoins.end()) {\n             // The parent cache does not have an entry, while the child cache does.\n-            // We can ignore it if it's both spent and FRESH in the child\n-            if (!(it->second.flags & CCoinsCacheEntry::FRESH && it->second.coin.IsSpent())) {\n-                // Create the coin in the parent cache, move the data up\n-                // and mark it as dirty.\n-                CCoinsCacheEntry& entry = cacheCoins[it->first];\n-                entry.coin = std::move(it->second.coin);\n-                cachedCoinsUsage += entry.coin.DynamicMemoryUsage();\n-                entry.flags = CCoinsCacheEntry::DIRTY;\n-                // We can mark it FRESH in the parent if it was FRESH in the child\n-                // Otherwise it might have just been flushed from the parent's cache\n-                // and already exist in the grandparent\n-                if (it->second.flags & CCoinsCacheEntry::FRESH) {\n-                    entry.flags |= CCoinsCacheEntry::FRESH;\n-                }\n+            if (it->second.flags & CCoinsCacheEntry::FRESH && it->second.coin.IsSpent()) {\n+                // A coin shouldn't be marked FRESH and spent (when a FRESH coin is spent,\n+                // it should be removed from the cache).",
    "path": "src/coins.cpp",
    "position": 40,
    "original_position": 39,
    "commit_id": "b5f17602b335a18ab05753da0c14b3f5acf83213",
    "original_commit_id": "c9849da1485458824851e56995b5470288d0372a",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe add: \"A spent coin should never be added to the cache.\"",
    "created_at": "2020-05-08T17:34:20Z",
    "updated_at": "2020-05-08T17:57:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18746#discussion_r422273680",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18746",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422273680"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18746#discussion_r422273680"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18746"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422273680/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 176,
    "original_line": 176,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430064663",
    "pull_request_review_id": 417864580,
    "id": 430064663,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA2NDY2Mw==",
    "diff_hunk": "@@ -44,14 +44,12 @@ CCoinsMap::iterator CCoinsViewCache::FetchCoin(const COutPoint &outpoint) const\n     if (it != cacheCoins.end())\n         return it;\n     Coin tmp;\n-    if (!base->GetCoin(outpoint, tmp))\n+    if (!base->GetCoin(outpoint, tmp) || tmp.IsSpent()) {\n+        // If we find a spent coin in the parent cache, no\n+        // need to fetch it into this cache.",
    "path": "src/coins.cpp",
    "position": null,
    "original_position": 7,
    "commit_id": "b5f17602b335a18ab05753da0c14b3f5acf83213",
    "original_commit_id": "c9849da1485458824851e56995b5470288d0372a",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The whole function we are in here is called `FetchCoin` so I would understand \"fetching\" as everything that is going on in his function and not the fetch into a temp variable, so for me this is ok.",
    "created_at": "2020-05-25T20:16:22Z",
    "updated_at": "2020-05-25T20:30:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18746#discussion_r430064663",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18746",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430064663"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18746#discussion_r430064663"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18746"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430064663/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 49,
    "side": "RIGHT",
    "in_reply_to_id": 422263074
  }
]