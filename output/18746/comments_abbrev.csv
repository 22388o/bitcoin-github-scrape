DrahtBot,2020-04-23 10:02:47,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #17487 (coins: allow write to disk without cache drop by jamesob)\n* #9384 (CCoinsViewCache code cleanup & deduplication b",https://github.com/bitcoin/bitcoin/pull/18746#issuecomment-618308518,618308518,
promag,2020-04-26 14:51:40,"Concept ACK, and code change looks good. No strong background in coins management to ACK though.",https://github.com/bitcoin/bitcoin/pull/18746#issuecomment-619564591,619564591,
brakmic,2020-05-01 10:22:10,"New logic makes sense. \nConcept ACK (as I have no deep knowledge on coin management).",https://github.com/bitcoin/bitcoin/pull/18746#issuecomment-622332573,622332573,
jamesob,2020-05-19 18:57:18,"What's the rationale for changing this? Even if it's stylistically cleaner, I don't think it's worth changing semantics here unless there's a demonstrable performance benefit.",https://github.com/bitcoin/bitcoin/pull/18746#issuecomment-631016452,631016452,
jnewbery,2020-05-19 19:35:30,"> What's the rationale for changing this?\n\nThere's an inconsistency between how we treat spending a fresh coin in the cache (erase it ie don't allow the coin to be spent and FRESH), and what we do when we encounter a spent coin in the parent cache (add it to the cache as spent and FRESH). This change removes that inconsistency and adds the invariant that no coin can be spent and FRESH in any c",https://github.com/bitcoin/bitcoin/pull/18746#issuecomment-631037370,631037370,
Sjors,2020-05-28 08:46:20,"> I think this is an improvement to clarity, but you may be right that it's not worth changing.\n\nI think it is, because we're changing this code for UTXO snapshots. The increased clarity should make those reviews (slightly) easier, something I bumped into myself: https://github.com/bitcoin/bitcoin/pull/17487#discussion_r427512576",https://github.com/bitcoin/bitcoin/pull/18746#issuecomment-635207376,635207376,
jamesob,2020-05-28 14:15:07,"Touching the heart of consensus-critical code and modifying behavior therein, even if just for an unlikely corner case, should IMHO come with very substantial motivation. \n\nThis is right on the knife's edge. I agree that it's unlikely this change in behavior would change consensus, but it sets a precedent that I'm not totally comfortable with.\n\nTo be honest I'd rather abandon the UTXO snap",https://github.com/bitcoin/bitcoin/pull/18746#issuecomment-635376865,635376865,
jnewbery,2020-05-28 15:11:28,"There aren't any dependencies between this and #17487, so I'm not sure that discussion of that PR is relevant here. I do however think it'd be a shame to abandon that PR. It's received substantial review from >10 contributors and the general reception was positive. In general, the decision to proceed with or abandon a PR should be based on the merit of that PR alone.",https://github.com/bitcoin/bitcoin/pull/18746#issuecomment-635411441,635411441,
robot-dreams,2020-10-17 00:13:38,"Is the FetchCoin change covered by any testing here? I think it might not be, given that:\n\n* CCoinsViewCache::GetCoin already returns false if the coin was spent: https://github.com/bitcoin/bitcoin/blob/2f71a1ea35667b3873197201531e7ae198ec5bf4/src/coins.cpp#L61-L64\n\n* SingleEntryCacheTest in coins_test.cpp uses a (subclass of) CCoinsViewCache for both the parent and the child: https://gith",https://github.com/bitcoin/bitcoin/pull/18746#issuecomment-710705262,710705262,
jnewbery,2021-05-17 14:56:20,"Thanks @robot-dreams. Excellent observation!\n\nI've updated `CCoinsViewCache::FetchCoin()` to assert that the coin returned from `GetCoin()` is not spent.\n\nI've also had to add a commit that changes the coins_tests unit test, since `CCoinsViewTest::GetCoin()` would sometimes return true even if the coin returned was empty (`IsSpent() == true`).\n\nI'm fairly confident that this is a good ",https://github.com/bitcoin/bitcoin/pull/18746#issuecomment-842393167,842393167,
michaelfolkson,2021-05-17 16:53:51,"For the benefit of anyone who does revisit this closed PR at a later date (including perhaps myself), this PR was spun out of https://github.com/bitcoin/bitcoin/pull/18113 (the comments part was merged in https://github.com/bitcoin/bitcoin/pull/18410 and the consensus code changes were in this PR).\n\nhttps://github.com/bitcoin/bitcoin/pull/18113 was covered in [this](https://bitcoincore.reviews",https://github.com/bitcoin/bitcoin/pull/18746#issuecomment-842480511,842480511,
Sjors,2020-05-08 17:13:02,"""no need to put it into this cache"" (we already fetched it)",https://github.com/bitcoin/bitcoin/pull/18746#discussion_r422263074,422263074,src/coins.cpp
Sjors,2020-05-08 17:34:20,"Maybe add: ""A spent coin should never be added to the cache.""",https://github.com/bitcoin/bitcoin/pull/18746#discussion_r422273680,422273680,src/coins.cpp
fjahr,2020-05-25 20:16:22,"The whole function we are in here is called `FetchCoin` so I would understand ""fetching"" as everything that is going on in his function and not the fetch into a temp variable, so for me this is ok.",https://github.com/bitcoin/bitcoin/pull/18746#discussion_r430064663,430064663,src/coins.cpp
