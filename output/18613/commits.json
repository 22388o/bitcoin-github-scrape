[
  {
    "sha": "5922d17b3ec0f5446a2a3633f12e9521a94ecaf1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OTIyZDE3YjNlYzBmNTQ0NmEyYTM2MzNmMTJlOTUyMWE5NGVjYWYx",
    "commit": {
      "author": {
        "name": "Jeremy Rubin",
        "email": "j@rubin.io",
        "date": "2020-04-12T22:47:15Z"
      },
      "committer": {
        "name": "Jeremy Rubin",
        "email": "j@rubin.io",
        "date": "2020-04-12T22:47:15Z"
      },
      "message": "Make CScript addition concatenative, rather than pushing the script as bytes",
      "tree": {
        "sha": "c130a094bbd81c403119067861e98f3c58c4a35e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c130a094bbd81c403119067861e98f3c58c4a35e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5922d17b3ec0f5446a2a3633f12e9521a94ecaf1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5922d17b3ec0f5446a2a3633f12e9521a94ecaf1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5922d17b3ec0f5446a2a3633f12e9521a94ecaf1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5922d17b3ec0f5446a2a3633f12e9521a94ecaf1/comments",
    "author": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "76143bf714abade4a6d4068981c882e5cf0a2386",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76143bf714abade4a6d4068981c882e5cf0a2386",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/76143bf714abade4a6d4068981c882e5cf0a2386"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 5,
      "deletions": 3
    },
    "files": [
      {
        "sha": "89990c90e7cac2a675b81834cfc926ca4bb3a345",
        "filename": "test/functional/test_framework/script.py",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5922d17b3ec0f5446a2a3633f12e9521a94ecaf1/test/functional/test_framework/script.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5922d17b3ec0f5446a2a3633f12e9521a94ecaf1/test/functional/test_framework/script.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/script.py?ref=5922d17b3ec0f5446a2a3633f12e9521a94ecaf1",
        "patch": "@@ -428,7 +428,7 @@ class CScript(bytes):\n     __slots__ = ()\n \n     @classmethod\n-    def __coerce_instance(cls, other):\n+    def __coerce_instance(cls, other, nested):\n         # Coerce other into bytes\n         if isinstance(other, CScriptOp):\n             other = bytes([other])\n@@ -444,14 +444,16 @@ def __coerce_instance(cls, other):\n                 other = bytes([OP_1NEGATE])\n             else:\n                 other = CScriptOp.encode_op_pushdata(bn2vch(other))\n+        elif isinstance(other, CScript) and not nested:\n+            pass\n         elif isinstance(other, (bytes, bytearray)):\n             other = CScriptOp.encode_op_pushdata(other)\n         return other\n \n     def __add__(self, other):\n         # Do the coercion outside of the try block so that errors in it are\n         # noticed.\n-        other = self.__coerce_instance(other)\n+        other = self.__coerce_instance(other, False)\n \n         try:\n             # bytes.__add__ always returns bytes instances unfortunately\n@@ -469,7 +471,7 @@ def __new__(cls, value=b''):\n         else:\n             def coerce_iterable(iterable):\n                 for instance in iterable:\n-                    yield cls.__coerce_instance(instance)\n+                    yield cls.__coerce_instance(instance, True)\n             # Annoyingly on both python2 and python3 bytes.join() always\n             # returns a bytes instance even when subclassed.\n             return super(CScript, cls).__new__(cls, b''.join(coerce_iterable(value)))"
      }
    ]
  }
]