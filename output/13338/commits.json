[
  {
    "sha": "247d308afc25e38f87e856f8b4b9cb746f8e08ec",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNDdkMzA4YWZjMjVlMzhmODdlODU2ZjhiNGI5Y2I3NDZmOGUwOGVj",
    "commit": {
      "author": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-04-27T08:56:59Z"
      },
      "committer": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-04-27T08:56:59Z"
      },
      "message": "init new source, change to PoS-based",
      "tree": {
        "sha": "12baef7b7a30ed6ebe07e40ae25c766f674854be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/12baef7b7a30ed6ebe07e40ae25c766f674854be"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/247d308afc25e38f87e856f8b4b9cb746f8e08ec",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/247d308afc25e38f87e856f8b4b9cb746f8e08ec",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/247d308afc25e38f87e856f8b4b9cb746f8e08ec",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/247d308afc25e38f87e856f8b4b9cb746f8e08ec/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      }
    ],
    "stats": {
      "total": 557154,
      "additions": 211425,
      "deletions": 345729
    },
    "files": [
      {
        "sha": "0d2bf3234f04abc691228200bb67df9866e09964",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -116,3 +116,7 @@ test/cache/*\n \n libbitcoinconsensus.pc\n contrib/devtools/split-debug.sh\n+.idea\n+Aithercoin-qt.pro.user\n+src/aithercoind\n+src/main.h.autosave"
      },
      {
        "sha": "7f8bc638ffc11dc170e9fc66867de5d9c09c382f",
        "filename": ".travis.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 86,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,86 +0,0 @@\n-sudo: required\n-dist: trusty\n-os: linux\n-language: minimal\n-cache:\n-  ccache: true\n-  directories:\n-  - depends/built\n-  - depends/sdk-sources\n-  - $HOME/.ccache\n-env:\n-  global:\n-    - MAKEJOBS=-j3\n-    - RUN_TESTS=false\n-    - CHECK_DOC=0\n-    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID\n-    - CCACHE_SIZE=100M\n-    - CCACHE_TEMPDIR=/tmp/.ccache-temp\n-    - CCACHE_COMPRESS=1\n-    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out\n-    - SDK_URL=https://bitcoincore.org/depends-sources/sdks\n-    - WINEDEBUG=fixme-all\n-  matrix:\n-# ARM\n-    - HOST=arm-linux-gnueabihf PACKAGES=\"g++-arm-linux-gnueabihf python3-pip shellcheck\" DEP_OPTS=\"NO_QT=1\" CHECK_DOC=1 GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n-# Win32\n-    - HOST=i686-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-i686 wine1.6\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n-# Win64\n-    - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine1.6\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n-# 32-bit + dash\n-    - HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib python3-zmq\" DEP_OPTS=\"NO_QT=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n-# x86_64 Linux (uses qt5 dev package instead of depends Qt to speed up build and avoid timeout)\n-    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n-# Qt4 & system libs\n-    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3-zmq qt4-dev-tools libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev libdb5.1++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev xvfb\" NO_DEPENDS=1 NEED_XVFB=1 RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --enable-glibc-back-compat --enable-reduce-exports --with-gui=qt4 CPPFLAGS=-DDEBUG_LOCKORDER\"\n-# x86_64 Linux, No wallet\n-    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3\" DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n-# Cross-Mac\n-    - HOST=x86_64-apple-darwin11 PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror\" OSX_SDK=10.11 GOAL=\"deploy\"\n-\n-before_install:\n-    - export PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/python/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\n-install:\n-    - if [ -n \"$DPKG_ADD_ARCH\" ]; then sudo dpkg --add-architecture \"$DPKG_ADD_ARCH\" ; fi\n-    - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get update; fi\n-    - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi\n-    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then travis_retry pip3 install flake8 --user; fi\n-before_script:\n-    - if [ \"$CHECK_DOC\" = 1 ]; then git fetch --unshallow; fi\n-    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then contrib/devtools/commit-script-check.sh $TRAVIS_COMMIT_RANGE; fi\n-    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/git-subtree-check.sh src/crypto/ctaes; fi\n-    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/git-subtree-check.sh src/secp256k1; fi\n-    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/git-subtree-check.sh src/univalue; fi\n-    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/git-subtree-check.sh src/leveldb; fi\n-    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/check-doc.py; fi\n-    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/check-rpc-mappings.py .; fi\n-    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then contrib/devtools/lint-all.sh; fi\n-    - unset CC; unset CXX\n-    - mkdir -p depends/SDKs depends/sdk-sources\n-    - if [ -n \"$OSX_SDK\" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n-    - if [ -n \"$OSX_SDK\" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n-    - if [ -z \"$NO_DEPENDS\" ]; then make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS; fi\n-    # Start xvfb if needed, as documented at https://docs.travis-ci.com/user/gui-and-headless-browsers/#Using-xvfb-to-Run-Tests-That-Require-a-GUI\n-    - if [ \"$NEED_XVFB\" = 1 ]; then export DISPLAY=:99.0; /sbin/start-stop-daemon --start --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac; fi\n-script:\n-    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then while read LINE; do travis_retry gpg --keyserver hkp://subset.pool.sks-keyservers.net --recv-keys $LINE; done < contrib/verify-commits/trusted-keys; fi\n-    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_EVENT_TYPE\" = \"cron\" ]; then travis_wait 30 contrib/verify-commits/verify-commits.sh; fi\n-    - export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`\n-    - if [ -n \"$USE_SHELL\" ]; then export CONFIG_SHELL=\"$USE_SHELL\"; fi\n-    - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n-    - BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n-    - if [ -z \"$NO_DEPENDS\" ]; then ccache --max-size=$CCACHE_SIZE; fi\n-    - test -n \"$USE_SHELL\" && eval '\"$USE_SHELL\" -c \"./autogen.sh\"' || ./autogen.sh\n-    - mkdir build && cd build\n-    - ../configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n-    - make distdir VERSION=$HOST\n-    - cd bitcoin-$HOST\n-    - ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n-    - make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && make $GOAL V=1 ; false )\n-    - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib\n-    - if [ \"$RUN_TESTS\" = \"true\" ]; then travis_wait 50 make $MAKEJOBS check VERBOSE=1; fi\n-    - if [ \"$TRAVIS_EVENT_TYPE\" = \"cron\" ]; then extended=\"--extended --exclude feature_pruning,feature_dbcrash\"; fi\n-    - if [ \"$RUN_TESTS\" = \"true\" ]; then test/functional/test_runner.py --combinedlogslen=4000 --coverage --quiet ${extended}; fi\n-after_script:\n-    - echo $TRAVIS_COMMIT_RANGE\n-    - echo $TRAVIS_COMMIT_LOG"
      },
      {
        "sha": "3a7c825a76b513f8bc876599c1e8ddf3ad5c33a9",
        "filename": ".tx/config",
        "status": "removed",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/.tx/config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/.tx/config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.tx/config?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,7 +0,0 @@\n-[main]\n-host = https://www.transifex.com\n-\n-[bitcoin.qt-translation-016x]\n-file_filter = src/qt/locale/bitcoin_<lang>.ts\n-source_file = src/qt/locale/bitcoin_en.ts\n-source_lang = en"
      },
      {
        "sha": "a608c61354c1c531625a26fc0d71a49244a63a31",
        "filename": "Aithercoin-qt.pro",
        "status": "added",
        "additions": 435,
        "deletions": 0,
        "changes": 435,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/Aithercoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/Aithercoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Aithercoin-qt.pro?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,435 @@\n+TEMPLATE = app\n+TARGET = aithercoin-qt\n+VERSION = 1.0.7\n+INCLUDEPATH += src src/json src/qt\n+DEFINES += QT_GUI BOOST_THREAD_USE_LIB BOOST_SPIRIT_THREADSAFE\n+CONFIG += no_include_pwd\n+CONFIG += thread\n+\n+greaterThan(QT_MAJOR_VERSION, 4) {\n+    QT += widgets\n+    DEFINES += QT_DISABLE_DEPRECATED_BEFORE=0\n+}\n+\n+# for boost 1.37, add -mt to the boost libraries\n+# use: qmake BOOST_LIB_SUFFIX=-mt\n+# for boost thread win32 with _win32 sufix\n+# use: BOOST_THREAD_LIB_SUFFIX=_win32-...\n+# or when linking against a specific BerkelyDB version: BDB_LIB_SUFFIX=-4.8\n+\n+# Dependency library locations can be customized with:\n+#    BOOST_INCLUDE_PATH, BOOST_LIB_PATH, BDB_INCLUDE_PATH,\n+#    BDB_LIB_PATH, OPENSSL_INCLUDE_PATH and OPENSSL_LIB_PATH respectively\n+\n+OBJECTS_DIR = build\n+MOC_DIR = build\n+UI_DIR = build\n+\n+# use: qmake \"RELEASE=1\"\n+contains(RELEASE, 1) {\n+    # Mac: compile for maximum compatibility (10.5, 32-bit)\n+    macx:QMAKE_CXXFLAGS += -mmacosx-version-min=10.5 -arch x86_64 -isysroot /Developer/SDKs/MacOSX10.5.sdk\n+\n+    !windows:!macx {\n+        # Linux: static link\n+        LIBS += -Wl,-Bstatic\n+    }\n+}\n+\n+!win32 {\n+# for extra security against potential buffer overflows: enable GCCs Stack Smashing Protection\n+QMAKE_CXXFLAGS *= -fstack-protector-all --param ssp-buffer-size=1\n+QMAKE_LFLAGS *= -fstack-protector-all --param ssp-buffer-size=1\n+# We need to exclude this for Windows cross compile with MinGW 4.2.x, as it will result in a non-working executable!\n+# This can be enabled for Windows, when we switch to MinGW >= 4.4.x.\n+}\n+# for extra security on Windows: enable ASLR and DEP via GCC linker flags\n+win32:QMAKE_LFLAGS *= -Wl,--dynamicbase -Wl,--nxcompat\n+win32:QMAKE_LFLAGS += -static-libgcc -static-libstdc++\n+\n+# use: qmake \"USE_QRCODE=1\"\n+# libqrencode (http://fukuchi.org/works/qrencode/index.en.html) must be installed for support\n+contains(USE_QRCODE, 1) {\n+    message(Building with QRCode support)\n+    DEFINES += USE_QRCODE\n+    LIBS += -lqrencode\n+}\n+\n+# use: qmake \"USE_UPNP=1\" ( enabled by default; default)\n+#  or: qmake \"USE_UPNP=0\" (disabled by default)\n+#  or: qmake \"USE_UPNP=-\" (not supported)\n+# miniupnpc (http://miniupnp.free.fr/files/) must be installed for support\n+contains(USE_UPNP, -) {\n+    message(Building without UPNP support)\n+} else {\n+    message(Building with UPNP support)\n+    count(USE_UPNP, 0) {\n+        USE_UPNP=1\n+    }\n+    DEFINES += USE_UPNP=$$USE_UPNP STATICLIB\n+    INCLUDEPATH += $$MINIUPNPC_INCLUDE_PATH\n+    LIBS += $$join(MINIUPNPC_LIB_PATH,,-L,) -lminiupnpc\n+    win32:LIBS += -liphlpapi\n+}\n+\n+# use: qmake \"USE_DBUS=1\" or qmake \"USE_DBUS=0\"\n+linux:count(USE_DBUS, 0) {\n+    USE_DBUS=1\n+}\n+contains(USE_DBUS, 1) {\n+    message(Building with DBUS (Freedesktop notifications) support)\n+    DEFINES += USE_DBUS\n+    QT += dbus\n+}\n+\n+contains(BITCOIN_NEED_QT_PLUGINS, 1) {\n+    DEFINES += BITCOIN_NEED_QT_PLUGINS\n+    QTPLUGIN += qcncodecs qjpcodecs qtwcodecs qkrcodecs qtaccessiblewidgets\n+}\n+\n+INCLUDEPATH += src/leveldb/include src/leveldb/helpers\n+LIBS += $$PWD/src/leveldb/libleveldb.a $$PWD/src/leveldb/libmemenv.a\n+SOURCES += src/txdb-leveldb.cpp\n+!win32 {\n+    # we use QMAKE_CXXFLAGS_RELEASE even without RELEASE=1 because we use RELEASE to indicate linking preferences not -O preferences\n+    genleveldb.commands = cd $$PWD/src/leveldb && CC=$$QMAKE_CC CXX=$$QMAKE_CXX $(MAKE) OPT=\\\"$$QMAKE_CXXFLAGS $$QMAKE_CXXFLAGS_RELEASE\\\" libleveldb.a libmemenv.a\n+} else {\n+    # make an educated guess about what the ranlib command is called\n+    isEmpty(QMAKE_RANLIB) {\n+        QMAKE_RANLIB = $$replace(QMAKE_STRIP, strip, ranlib)\n+    }\n+    LIBS += -lshlwapi\n+    genleveldb.commands = cd $$PWD/src/leveldb && CC=$$QMAKE_CC CXX=$$QMAKE_CXX TARGET_OS=OS_WINDOWS_CROSSCOMPILE $(MAKE) OPT=\\\"$$QMAKE_CXXFLAGS $$QMAKE_CXXFLAGS_RELEASE\\\" libleveldb.a libmemenv.a && $$QMAKE_RANLIB $$PWD/src/leveldb/libleveldb.a && $$QMAKE_RANLIB $$PWD/src/leveldb/libmemenv.a\n+}\n+genleveldb.target = $$PWD/src/leveldb/libleveldb.a\n+genleveldb.depends = FORCE\n+PRE_TARGETDEPS += $$PWD/src/leveldb/libleveldb.a\n+QMAKE_EXTRA_TARGETS += genleveldb\n+# Gross ugly hack that depends on qmake internals, unfortunately there is no other way to do it.\n+QMAKE_CLEAN += $$PWD/src/leveldb/libleveldb.a; cd $$PWD/src/leveldb ; $(MAKE) clean\n+\n+# regenerate src/build.h\n+!windows|contains(USE_BUILD_INFO, 1) {\n+    genbuild.depends = FORCE\n+    genbuild.commands = cd $$PWD; /bin/sh share/genbuild.sh $$OUT_PWD/build/build.h\n+    genbuild.target = $$OUT_PWD/build/build.h\n+    PRE_TARGETDEPS += $$OUT_PWD/build/build.h\n+    QMAKE_EXTRA_TARGETS += genbuild\n+    DEFINES += HAVE_BUILD_INFO\n+}\n+\n+contains(USE_O3, 1) {\n+    message(Building O3 optimization flag)\n+    QMAKE_CXXFLAGS_RELEASE -= -O2\n+    QMAKE_CFLAGS_RELEASE -= -O2\n+    QMAKE_CXXFLAGS += -O3\n+    QMAKE_CFLAGS += -O3\n+}\n+\n+*-g++-32 {\n+    message(\"32 platform, adding -msse2 flag\")\n+\n+    QMAKE_CXXFLAGS += -msse2\n+    QMAKE_CFLAGS += -msse2\n+}\n+\n+QMAKE_CXXFLAGS_WARN_ON = -fdiagnostics-show-option -Wall -Wextra -Wno-ignored-qualifiers -Wformat -Wformat-security -Wno-unused-parameter -Wstack-protector\n+\n+# Input\n+DEPENDPATH += src src/json src/qt\n+HEADERS += src/qt/bitcoingui.h \\\n+    src/qt/transactiontablemodel.h \\\n+    src/qt/addresstablemodel.h \\\n+    src/qt/optionsdialog.h \\\n+    src/qt/coincontroldialog.h \\\n+    src/qt/coincontroltreewidget.h \\\n+    src/qt/sendcoinsdialog.h \\\n+    src/qt/addressbookpage.h \\\n+    src/qt/signverifymessagedialog.h \\\n+    src/qt/aboutdialog.h \\\n+    src/qt/editaddressdialog.h \\\n+    src/qt/bitcoinaddressvalidator.h \\\n+    src/alert.h \\\n+    src/addrman.h \\\n+    src/base58.h \\\n+    src/bignum.h \\\n+    src/checkpoints.h \\\n+    src/compat.h \\\n+    src/coincontrol.h \\\n+    src/sync.h \\\n+    src/util.h \\\n+    src/uint256.h \\\n+    src/kernel.h \\\n+    src/scrypt.h \\\n+    src/pbkdf2.h \\\n+    src/zerocoin/Accumulator.h \\\n+    src/zerocoin/AccumulatorProofOfKnowledge.h \\\n+    src/zerocoin/Coin.h \\\n+    src/zerocoin/CoinSpend.h \\\n+    src/zerocoin/Commitment.h \\\n+    src/zerocoin/ParamGeneration.h \\\n+    src/zerocoin/Params.h \\\n+    src/zerocoin/SerialNumberSignatureOfKnowledge.h \\\n+    src/zerocoin/SpendMetaData.h \\\n+    src/zerocoin/ZeroTest.h \\\n+    src/zerocoin/Zerocoin.h \\\n+    src/serialize.h \\\n+    src/strlcpy.h \\\n+    src/main.h \\\n+    src/miner.h \\\n+    src/net.h \\\n+    src/key.h \\\n+    src/db.h \\\n+    src/txdb.h \\\n+    src/walletdb.h \\\n+    src/script.h \\\n+    src/init.h \\\n+    src/irc.h \\\n+    src/mruset.h \\\n+    src/json/json_spirit_writer_template.h \\\n+    src/json/json_spirit_writer.h \\\n+    src/json/json_spirit_value.h \\\n+    src/json/json_spirit_utils.h \\\n+    src/json/json_spirit_stream_reader.h \\\n+    src/json/json_spirit_reader_template.h \\\n+    src/json/json_spirit_reader.h \\\n+    src/json/json_spirit_error_position.h \\\n+    src/json/json_spirit.h \\\n+    src/qt/clientmodel.h \\\n+    src/qt/guiutil.h \\\n+    src/qt/transactionrecord.h \\\n+    src/qt/guiconstants.h \\\n+    src/qt/optionsmodel.h \\\n+    src/qt/monitoreddatamapper.h \\\n+    src/qt/transactiondesc.h \\\n+    src/qt/transactiondescdialog.h \\\n+    src/qt/bitcoinamountfield.h \\\n+    src/wallet.h \\\n+    src/keystore.h \\\n+    src/qt/transactionfilterproxy.h \\\n+    src/qt/transactionview.h \\\n+    src/qt/walletmodel.h \\\n+    src/bitcoinrpc.h \\\n+    src/qt/overviewpage.h \\\n+    src/qt/csvmodelwriter.h \\\n+    src/crypter.h \\\n+    src/qt/sendcoinsentry.h \\\n+    src/qt/qvalidatedlineedit.h \\\n+    src/qt/bitcoinunits.h \\\n+    src/qt/qvaluecombobox.h \\\n+    src/qt/askpassphrasedialog.h \\\n+    src/protocol.h \\\n+    src/qt/notificator.h \\\n+    src/qt/qtipcserver.h \\\n+    src/allocators.h \\\n+    src/ui_interface.h \\\n+    src/qt/rpcconsole.h \\\n+    src/version.h \\\n+    src/netbase.h \\\n+    src/clientversion.h \\\n+    src/threadsafety.h \\\n+    src/qt/macnotificationhandler.h\n+\n+SOURCES += src/qt/bitcoin.cpp src/qt/bitcoingui.cpp \\\n+    src/qt/transactiontablemodel.cpp \\\n+    src/qt/addresstablemodel.cpp \\\n+    src/qt/optionsdialog.cpp \\\n+    src/qt/sendcoinsdialog.cpp \\\n+    src/qt/coincontroldialog.cpp \\\n+    src/qt/coincontroltreewidget.cpp \\\n+    src/qt/addressbookpage.cpp \\\n+    src/qt/signverifymessagedialog.cpp \\\n+    src/qt/aboutdialog.cpp \\\n+    src/qt/editaddressdialog.cpp \\\n+    src/qt/bitcoinaddressvalidator.cpp \\\n+    src/alert.cpp \\\n+    src/version.cpp \\\n+    src/sync.cpp \\\n+    src/util.cpp \\\n+    src/netbase.cpp \\\n+    src/key.cpp \\\n+    src/script.cpp \\\n+    src/main.cpp \\\n+    src/miner.cpp \\\n+    src/init.cpp \\\n+    src/net.cpp \\\n+    src/irc.cpp \\\n+    src/checkpoints.cpp \\\n+    src/addrman.cpp \\\n+    src/db.cpp \\\n+    src/walletdb.cpp \\\n+    src/qt/clientmodel.cpp \\\n+    src/qt/guiutil.cpp \\\n+    src/qt/transactionrecord.cpp \\\n+    src/qt/optionsmodel.cpp \\\n+    src/qt/monitoreddatamapper.cpp \\\n+    src/qt/transactiondesc.cpp \\\n+    src/qt/transactiondescdialog.cpp \\\n+    src/qt/bitcoinstrings.cpp \\\n+    src/qt/bitcoinamountfield.cpp \\\n+    src/wallet.cpp \\\n+    src/keystore.cpp \\\n+    src/qt/transactionfilterproxy.cpp \\\n+    src/qt/transactionview.cpp \\\n+    src/qt/walletmodel.cpp \\\n+    src/bitcoinrpc.cpp \\\n+    src/rpcdump.cpp \\\n+    src/rpcnet.cpp \\\n+    src/rpcmining.cpp \\\n+    src/rpcwallet.cpp \\\n+    src/rpcblockchain.cpp \\\n+    src/rpcrawtransaction.cpp \\\n+    src/qt/overviewpage.cpp \\\n+    src/qt/csvmodelwriter.cpp \\\n+    src/crypter.cpp \\\n+    src/qt/sendcoinsentry.cpp \\\n+    src/qt/qvalidatedlineedit.cpp \\\n+    src/qt/bitcoinunits.cpp \\\n+    src/qt/qvaluecombobox.cpp \\\n+    src/qt/askpassphrasedialog.cpp \\\n+    src/protocol.cpp \\\n+    src/qt/notificator.cpp \\\n+    src/qt/qtipcserver.cpp \\\n+    src/qt/rpcconsole.cpp \\\n+    src/noui.cpp \\\n+    src/kernel.cpp \\\n+    src/scrypt-arm.S \\\n+    src/scrypt-x86.S \\\n+    src/scrypt-x86_64.S \\\n+    src/scrypt.cpp \\\n+    src/pbkdf2.cpp \\\n+    src/zerocoin/Accumulator.cpp \\\n+    src/zerocoin/AccumulatorProofOfKnowledge.cpp \\\n+    src/zerocoin/Coin.cpp \\\n+    src/zerocoin/CoinSpend.cpp \\\n+    src/zerocoin/Commitment.cpp \\\n+    src/zerocoin/ParamGeneration.cpp \\\n+    src/zerocoin/Params.cpp \\\n+    src/zerocoin/SerialNumberSignatureOfKnowledge.cpp \\\n+    src/zerocoin/SpendMetaData.cpp \\\n+    src/zerocoin/ZeroTest.cpp\n+\n+RESOURCES += \\\n+    src/qt/bitcoin.qrc\n+\n+FORMS += \\\n+    src/qt/forms/coincontroldialog.ui \\\n+    src/qt/forms/sendcoinsdialog.ui \\\n+    src/qt/forms/addressbookpage.ui \\\n+    src/qt/forms/signverifymessagedialog.ui \\\n+    src/qt/forms/aboutdialog.ui \\\n+    src/qt/forms/editaddressdialog.ui \\\n+    src/qt/forms/transactiondescdialog.ui \\\n+    src/qt/forms/overviewpage.ui \\\n+    src/qt/forms/sendcoinsentry.ui \\\n+    src/qt/forms/askpassphrasedialog.ui \\\n+    src/qt/forms/rpcconsole.ui \\\n+    src/qt/forms/optionsdialog.ui\n+\n+contains(USE_QRCODE, 1) {\n+HEADERS += src/qt/qrcodedialog.h\n+SOURCES += src/qt/qrcodedialog.cpp\n+FORMS += src/qt/forms/qrcodedialog.ui\n+}\n+\n+CODECFORTR = UTF-8\n+\n+# for lrelease/lupdate\n+# also add new translations to src/qt/bitcoin.qrc under translations/\n+TRANSLATIONS = $$files(src/qt/locale/bitcoin_*.ts)\n+\n+isEmpty(QMAKE_LRELEASE) {\n+    win32:QMAKE_LRELEASE = $$[QT_INSTALL_BINS]\\\\lrelease.exe\n+    else:QMAKE_LRELEASE = $$[QT_INSTALL_BINS]/lrelease\n+}\n+isEmpty(QM_DIR):QM_DIR = $$PWD/src/qt/locale\n+# automatically build translations, so they can be included in resource file\n+TSQM.name = lrelease ${QMAKE_FILE_IN}\n+TSQM.input = TRANSLATIONS\n+TSQM.output = $$QM_DIR/${QMAKE_FILE_BASE}.qm\n+TSQM.commands = $$QMAKE_LRELEASE ${QMAKE_FILE_IN} -qm ${QMAKE_FILE_OUT}\n+TSQM.CONFIG = no_link\n+QMAKE_EXTRA_COMPILERS += TSQM\n+\n+# \"Other files\" to show in Qt Creator\n+OTHER_FILES += \\\n+    doc/*.rst doc/*.txt doc/README README.md res/bitcoin-qt.rc\n+\n+# platform specific defaults, if not overridden on command line\n+isEmpty(BOOST_LIB_SUFFIX) {\n+    macx:BOOST_LIB_SUFFIX = -mt\n+    windows:BOOST_LIB_SUFFIX = -mt\n+}\n+\n+isEmpty(BOOST_THREAD_LIB_SUFFIX) {\n+    win32:BOOST_THREAD_LIB_SUFFIX = _win32$$BOOST_LIB_SUFFIX\n+    else:BOOST_THREAD_LIB_SUFFIX = $$BOOST_LIB_SUFFIX\n+}\n+\n+isEmpty(BDB_LIB_PATH) {\n+    macx:BDB_LIB_PATH = /opt/local/lib/db48\n+}\n+\n+isEmpty(BDB_LIB_SUFFIX) {\n+    macx:BDB_LIB_SUFFIX = -4.8\n+}\n+\n+isEmpty(BDB_INCLUDE_PATH) {\n+    macx:BDB_INCLUDE_PATH = /opt/local/include/db48\n+}\n+\n+isEmpty(BOOST_LIB_PATH) {\n+    macx:BOOST_LIB_PATH = /opt/local/lib\n+}\n+\n+isEmpty(BOOST_INCLUDE_PATH) {\n+    macx:BOOST_INCLUDE_PATH = /opt/local/include\n+}\n+\n+windows:DEFINES += WIN32\n+windows:RC_FILE = src/qt/res/bitcoin-qt.rc\n+\n+windows:!contains(MINGW_THREAD_BUGFIX, 0) {\n+    # At least qmake's win32-g++-cross profile is missing the -lmingwthrd\n+    # thread-safety flag. GCC has -mthreads to enable this, but it doesn't\n+    # work with static linking. -lmingwthrd must come BEFORE -lmingw, so\n+    # it is prepended to QMAKE_LIBS_QT_ENTRY.\n+    # It can be turned off with MINGW_THREAD_BUGFIX=0, just in case it causes\n+    # any problems on some untested qmake profile now or in the future.\n+    DEFINES += _MT BOOST_THREAD_PROVIDES_GENERIC_SHARED_MUTEX_ON_WIN\n+    QMAKE_LIBS_QT_ENTRY = -lmingwthrd $$QMAKE_LIBS_QT_ENTRY\n+}\n+\n+macx:HEADERS += src/qt/macdockiconhandler.h\n+macx:OBJECTIVE_SOURCES += src/qt/macdockiconhandler.mm\n+macx:OBJECTIVE_SOURCES += src/qt/macnotificationhandler.mm\n+macx:LIBS += -framework Foundation -framework ApplicationServices -framework AppKit\n+macx:DEFINES += MAC_OSX MSG_NOSIGNAL=0\n+macx:ICON = src/qt/res/icons/bitcoin.icns\n+macx:TARGET = \"Aithercoin-Qt\"\n+macx:QMAKE_CFLAGS_THREAD += -pthread\n+macx:QMAKE_LFLAGS_THREAD += -pthread\n+macx:QMAKE_CXXFLAGS_THREAD += -pthread\n+\n+# Set libraries and includes at end, to use platform-defined defaults if not overridden\n+INCLUDEPATH += $$BOOST_INCLUDE_PATH $$BDB_INCLUDE_PATH $$OPENSSL_INCLUDE_PATH $$QRENCODE_INCLUDE_PATH\n+LIBS += $$join(BOOST_LIB_PATH,,-L,) $$join(BDB_LIB_PATH,,-L,) $$join(OPENSSL_LIB_PATH,,-L,) $$join(QRENCODE_LIB_PATH,,-L,)\n+LIBS += -lssl -lcrypto -ldb_cxx$$BDB_LIB_SUFFIX\n+# -lgdi32 has to happen after -lcrypto (see  #681)\n+windows:LIBS += -lws2_32 -lshlwapi -lmswsock -lole32 -loleaut32 -luuid -lgdi32\n+LIBS += -lboost_system$$BOOST_LIB_SUFFIX -lboost_filesystem$$BOOST_LIB_SUFFIX -lboost_program_options$$BOOST_LIB_SUFFIX -lboost_thread$$BOOST_THREAD_LIB_SUFFIX\n+windows:LIBS += -lboost_chrono$$BOOST_LIB_SUFFIX\n+\n+contains(RELEASE, 1) {\n+    !windows:!macx {\n+        # Linux: turn dynamic linking back on for c/c++ runtime libraries\n+        LIBS += -Wl,-Bdynamic\n+    }\n+}\n+\n+!windows:!macx {\n+    DEFINES += LINUX\n+    LIBS += -lrt -ldl\n+}\n+\n+system($$QMAKE_LRELEASE -silent $$_PRO_FILE_)"
      },
      {
        "sha": "ea475f8cfb76635a18bb62a986d2fef69c79e673",
        "filename": "CONTRIBUTING.md",
        "status": "removed",
        "additions": 0,
        "deletions": 301,
        "changes": 301,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,301 +0,0 @@\n-Contributing to Bitcoin Core\n-============================\n-\n-The Bitcoin Core project operates an open contributor model where anyone is\n-welcome to contribute towards development in the form of peer review, testing\n-and patches. This document explains the practical process and guidelines for\n-contributing.\n-\n-Firstly in terms of structure, there is no particular concept of \"Core\n-developers\" in the sense of privileged people. Open source often naturally\n-revolves around meritocracy where longer term contributors gain more trust from\n-the developer community. However, some hierarchy is necessary for practical\n-purposes. As such there are repository \"maintainers\" who are responsible for\n-merging pull requests as well as a \"lead maintainer\" who is responsible for the\n-release cycle, overall merging, moderation and appointment of maintainers.\n-\n-\n-Communication Channels\n-----------------------\n-\n-Most communication about Bitcoin Core development happens on IRC, in the\n-#bitcoin-core-dev channel on Freenode. The easiest way to participate on IRC is\n-with the web client, [webchat.freenode.net](https://webchat.freenode.net/). Chat\n-history logs can be found\n-on [botbot.me](https://botbot.me/freenode/bitcoin-core-dev/).\n-\n-Discussion about code base improvements happens in GitHub issues and on pull\n-requests.\n-\n-The developer\n-[mailing list](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev)\n-should be used to discuss complicated or controversial changes before working on\n-a patch set.\n-\n-\n-Contributor Workflow\n---------------------\n-\n-The codebase is maintained using the \"contributor workflow\" where everyone\n-without exception contributes patch proposals using \"pull requests\". This\n-facilitates social contribution, easy testing and peer review.\n-\n-To contribute a patch, the workflow is as follows:\n-\n-  1. Fork repository\n-  1. Create topic branch\n-  1. Commit patches\n-\n-The project coding conventions in the [developer notes](doc/developer-notes.md)\n-must be adhered to.\n-\n-In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention)\n-and diffs should be easy to read. For this reason do not mix any formatting\n-fixes or code moves with actual code changes.\n-\n-Commit messages should be verbose by default consisting of a short subject line\n-(50 chars max), a blank line and detailed explanatory text as separate\n-paragraph(s), unless the title alone is self-explanatory (like \"Corrected typo\n-in init.cpp\") in which case a single title line is sufficient. Commit messages should be\n-helpful to people reading your code in the future, so explain the reasoning for\n-your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n-\n-If a particular commit references another issue, please add the reference. For\n-example: `refs #1234` or `fixes #4321`. Using the `fixes` or `closes` keywords\n-will cause the corresponding issue to be closed when the pull request is merged.\n-\n-Please refer to the [Git manual](https://git-scm.com/doc) for more information\n-about Git.\n-\n-  - Push changes to your fork\n-  - Create pull request\n-\n-The title of the pull request should be prefixed by the component or area that\n-the pull request affects. Valid areas as:\n-\n-  - *Consensus* for changes to consensus critical code\n-  - *Docs* for changes to the documentation\n-  - *Qt* for changes to bitcoin-qt\n-  - *Mining* for changes to the mining code\n-  - *Net* or *P2P* for changes to the peer-to-peer network code\n-  - *RPC/REST/ZMQ* for changes to the RPC, REST or ZMQ APIs\n-  - *Scripts and tools* for changes to the scripts and tools\n-  - *Tests* for changes to the bitcoin unit tests or QA tests\n-  - *Trivial* should **only** be used for PRs that do not change generated\n-    executable code. Notably, refactors (change of function arguments and code\n-    reorganization) and changes in behavior should **not** be marked as trivial.\n-    Examples of trivial PRs are changes to:\n-    - comments\n-    - whitespace\n-    - variable names\n-    - logging and messages\n-  - *Utils and libraries* for changes to the utils and libraries\n-  - *Wallet* for changes to the wallet code\n-\n-Examples:\n-\n-    Consensus: Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n-    Net: Automatically create hidden service, listen on Tor\n-    Qt: Add feed bump button\n-    Trivial: Fix typo in init.cpp\n-\n-Note that translations should not be submitted as pull requests, please see\n-[Translation Process](https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md) \n-for more information on helping with translations.\n-\n-If a pull request is not to be considered for merging (yet), please\n-prefix the title with [WIP] or use [Tasks Lists](https://help.github.com/articles/basic-writing-and-formatting-syntax/#task-lists)\n-in the body of the pull request to indicate tasks are pending.\n-\n-The body of the pull request should contain enough description about what the\n-patch does together with any justification/reasoning. You should include\n-references to any discussions (for example other tickets or mailing list\n-discussions).\n-\n-At this stage one should expect comments and review from other contributors. You\n-can add more commits to your pull request by committing them locally and pushing\n-to your fork until you have satisfied all feedback.\n-\n-Squashing Commits\n----------------------------\n-If your pull request is accepted for merging, you may be asked by a maintainer\n-to squash and or [rebase](https://git-scm.com/docs/git-rebase) your commits\n-before it will be merged. The basic squashing workflow is shown below.\n-\n-    git checkout your_branch_name\n-    git rebase -i HEAD~n\n-    # n is normally the number of commits in the pull\n-    # set commits from 'pick' to 'squash', save and quit\n-    # on the next screen, edit/refine commit messages\n-    # save and quit\n-    git push -f # (force push to GitHub)\n-\n-If you have problems with squashing (or other workflows with `git`), you can\n-alternatively enable \"Allow edits from maintainers\" in the right GitHub\n-sidebar and ask for help in the pull request.\n-\n-Please refrain from creating several pull requests for the same change.\n-Use the pull request that is already open (or was created earlier) to amend\n-changes. This preserves the discussion and review that happened earlier for\n-the respective change set.\n-\n-The length of time required for peer review is unpredictable and will vary from\n-pull request to pull request.\n-\n-\n-Pull Request Philosophy\n------------------------\n-\n-Patchsets should always be focused. For example, a pull request could add a\n-feature, fix a bug, or refactor code; but not a mixture. Please also avoid super\n-pull requests which attempt to do too much, are overly large, or overly complex\n-as this makes review difficult.\n-\n-\n-### Features\n-\n-When adding a new feature, thought must be given to the long term technical debt\n-and maintenance that feature may require after inclusion. Before proposing a new\n-feature that will require maintenance, please consider if you are willing to\n-maintain it (including bug fixing). If features get orphaned with no maintainer\n-in the future, they may be removed by the Repository Maintainer.\n-\n-\n-### Refactoring\n-\n-Refactoring is a necessary part of any software project's evolution. The\n-following guidelines cover refactoring pull requests for the project.\n-\n-There are three categories of refactoring, code only moves, code style fixes,\n-code refactoring. In general refactoring pull requests should not mix these\n-three kinds of activity in order to make refactoring pull requests easy to\n-review and uncontroversial. In all cases, refactoring PRs must not change the\n-behaviour of code within the pull request (bugs must be preserved as is).\n-\n-Project maintainers aim for a quick turnaround on refactoring pull requests, so\n-where possible keep them short, uncomplex and easy to verify.\n-\n-Pull requests that refactor the code should not be made by new contributors. It\n-requires a certain level of experience to know where the code belongs to and to\n-understand the full ramification (including rebase effort of open pull requests).\n-\n-Trivial pull requests or pull requests that refactor the code with no clear\n-benefits may be immediately closed by the maintainers to reduce unnecessary\n-workload on reviewing.\n-\n-\n-\"Decision Making\" Process\n--------------------------\n-\n-The following applies to code changes to the Bitcoin Core project (and related\n-projects such as libsecp256k1), and is not to be confused with overall Bitcoin\n-Network Protocol consensus changes.\n-\n-Whether a pull request is merged into Bitcoin Core rests with the project merge\n-maintainers and ultimately the project lead.\n-\n-Maintainers will take into consideration if a patch is in line with the general\n-principles of the project; meets the minimum standards for inclusion; and will\n-judge the general consensus of contributors.\n-\n-In general, all pull requests must:\n-\n-  - Have a clear use case, fix a demonstrable bug or serve the greater good of\n-    the project (for example refactoring for modularisation);\n-  - Be well peer reviewed;\n-  - Have unit tests and functional tests where appropriate;\n-  - Follow code style guidelines ([C++](doc/developer-notes.md), [functional tests](test/functional/README.md));\n-  - Not break the existing test suite;\n-  - Where bugs are fixed, where possible, there should be unit tests\n-    demonstrating the bug and also proving the fix. This helps prevent regression.\n-\n-Patches that change Bitcoin consensus rules are considerably more involved than\n-normal because they affect the entire ecosystem and so must be preceded by\n-extensive mailing list discussions and have a numbered BIP. While each case will\n-be different, one should be prepared to expend more time and effort than for\n-other kinds of patches because of increased peer review and consensus building\n-requirements.\n-\n-\n-### Peer Review\n-\n-Anyone may participate in peer review which is expressed by comments in the pull\n-request. Typically reviewers will review the code for obvious errors, as well as\n-test out the patch set and opine on the technical merits of the patch. Project\n-maintainers take into account the peer review when determining if there is\n-consensus to merge a pull request (remember that discussions may have been\n-spread out over GitHub, mailing list and IRC discussions). The following\n-language is used within pull-request comments:\n-\n-  - ACK means \"I have tested the code and I agree it should be merged\";\n-  - NACK means \"I disagree this should be merged\", and must be accompanied by\n-    sound technical justification (or in certain cases of copyright/patent/licensing\n-    issues, legal justification). NACKs without accompanying reasoning may be\n-    disregarded;\n-  - utACK means \"I have not tested the code, but I have reviewed it and it looks\n-    OK, I agree it can be merged\";\n-  - Concept ACK means \"I agree in the general principle of this pull request\";\n-  - Nit refers to trivial, often non-blocking issues.\n-\n-Reviewers should include the commit hash which they reviewed in their comments.\n-\n-Project maintainers reserve the right to weigh the opinions of peer reviewers\n-using common sense judgement and also may weight based on meritocracy: Those\n-that have demonstrated a deeper commitment and understanding towards the project\n-(over time) or have clear domain expertise may naturally have more weight, as\n-one would expect in all walks of life.\n-\n-Where a patch set affects consensus critical code, the bar will be set much\n-higher in terms of discussion and peer review requirements, keeping in mind that\n-mistakes could be very costly to the wider community. This includes refactoring\n-of consensus critical code.\n-\n-Where a patch set proposes to change the Bitcoin consensus, it must have been\n-discussed extensively on the mailing list and IRC, be accompanied by a widely\n-discussed BIP and have a generally widely perceived technical consensus of being\n-a worthwhile change based on the judgement of the maintainers.\n-\n-### Finding Reviewers\n-\n-As most reviewers are themselves developers with their own projects, the review\n-process can be quite lengthy, and some amount of patience is required. If you find\n-that you've been waiting for a pull request to be given attention for several\n-months, there may be a number of reasons for this, some of which you can do something\n-about:\n-\n-  - It may be because of a feature freeze due to an upcoming release. During this time,\n-    only bug fixes are taken into consideration. If your pull request is a new feature,\n-    it will not be prioritized until the release is over. Wait for release.\n-  - It may be because the changes you are suggesting do not appeal to people. Rather than\n-    nits and critique, which require effort and means they care enough to spend time on your\n-    contribution, thundering silence is a good sign of widespread (mild) dislike of a given change\n-    (because people don't assume *others* won't actually like the proposal). Don't take\n-    that personally, though! Instead, take another critical look at what you are suggesting\n-    and see if it: changes too much, is too broad, doesn't adhere to the\n-    [developer notes](doc/developer-notes.md), is dangerous or insecure, is messily written, etc.\n-    Identify and address any of the issues you find. Then ask e.g. on IRC if someone could give\n-    their opinion on the concept itself.\n-  - It may be because your code is too complex for all but a few people. And those people\n-    may not have realized your pull request even exists. A great way to find people who\n-    are qualified and care about the code you are touching is the\n-    [Git Blame feature](https://help.github.com/articles/tracing-changes-in-a-file/). Simply\n-    find the person touching the code you are touching before you and see if you can find\n-    them and give them a nudge. Don't be incessant about the nudging though.\n-  - Finally, if all else fails, ask on IRC or elsewhere for someone to give your pull request\n-    a look. If you think you've been waiting an unreasonably long amount of time (month+) for\n-    no particular reason (few lines changed, etc), this is totally fine. Try to return the favor\n-    when someone else is asking for feedback on their code, and universe balances out.\n-\n-\n-Release Policy\n---------------\n-\n-The project leader is the release manager for each Bitcoin Core release.\n-\n-Copyright\n----------\n-\n-By contributing to this repository, you agree to license your work under the \n-MIT license unless specified otherwise in `contrib/debian/copyright` or at \n-the top of the file itself. Any work contributed where you are not the original \n-author must contain its license header with the original author(s) and source."
      },
      {
        "sha": "eb6dfa2669cc352e1e7e17e53412e4243c6a39c3",
        "filename": "COPYING",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -1,6 +1,6 @@\n-The MIT License (MIT)\n-\n-Copyright (c) 2009-2018 The Bitcoin Core developers\n+Copyright (c) 2018 Aithercoin Developers\n+Copyright (c) 2013-2018 NovaCoin Developers\n+Copyright (c) 2011-2018 PPCoin Developers\n Copyright (c) 2009-2018 Bitcoin Developers\n \n Permission is hereby granted, free of charge, to any person obtaining a copy"
      },
      {
        "sha": "d5d3c751aa77acc96f66c299ac96f3f7943fe947",
        "filename": "INSTALL",
        "status": "added",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/INSTALL",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/INSTALL",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/INSTALL?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,9 @@\n+Building Aithercoin\n+\n+See doc/readme-qt.rst for instructions on building Aithercoin QT,\n+the intended-for-end-users, nice-graphical-interface, reference\n+implementation of Aithercoin.\n+\n+See doc/build-*.txt for instructions on building aithercoind,\n+the intended-for-services, no-graphical-interface, reference\n+implementation of Aithercoin."
      },
      {
        "sha": "520a47d96078dfa80cec83d03146c9349d6369c1",
        "filename": "INSTALL.md",
        "status": "removed",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/INSTALL.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/INSTALL.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/INSTALL.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,5 +0,0 @@\n-Building Bitcoin\n-================\n-\n-See doc/build-*.md for instructions on building the various\n-elements of the Bitcoin Core reference implementation of Bitcoin."
      },
      {
        "sha": "8a8debb079d499485ff950726ce53b7f2843b3e0",
        "filename": "Makefile.am",
        "status": "removed",
        "additions": 0,
        "deletions": 298,
        "changes": 298,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,298 +0,0 @@\n-# Copyright (c) 2013-2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-ACLOCAL_AMFLAGS = -I build-aux/m4\n-SUBDIRS = src\n-if ENABLE_MAN\n-SUBDIRS += doc/man\n-endif\n-.PHONY: deploy FORCE\n-\n-export PYTHONPATH\n-\n-if BUILD_BITCOIN_LIBS\n-pkgconfigdir = $(libdir)/pkgconfig\n-pkgconfig_DATA = libbitcoinconsensus.pc\n-endif\n-\n-BITCOIND_BIN=$(top_builddir)/src/$(BITCOIN_DAEMON_NAME)$(EXEEXT)\n-BITCOIN_QT_BIN=$(top_builddir)/src/qt/$(BITCOIN_GUI_NAME)$(EXEEXT)\n-BITCOIN_CLI_BIN=$(top_builddir)/src/$(BITCOIN_CLI_NAME)$(EXEEXT)\n-BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win$(WINDOWS_BITS)-setup$(EXEEXT)\n-\n-empty :=\n-space := $(empty) $(empty)\n-\n-OSX_APP=Bitcoin-Qt.app\n-OSX_VOLNAME = $(subst $(space),-,$(PACKAGE_NAME))\n-OSX_DMG = $(OSX_VOLNAME).dmg\n-OSX_BACKGROUND_SVG=background.svg\n-OSX_BACKGROUND_IMAGE=background.tiff\n-OSX_BACKGROUND_IMAGE_DPIS=36 72\n-OSX_DSSTORE_GEN=$(top_srcdir)/contrib/macdeploy/custom_dsstore.py\n-OSX_DEPLOY_SCRIPT=$(top_srcdir)/contrib/macdeploy/macdeployqtplus\n-OSX_FANCY_PLIST=$(top_srcdir)/contrib/macdeploy/fancy.plist\n-OSX_INSTALLER_ICONS=$(top_srcdir)/src/qt/res/icons/bitcoin.icns\n-OSX_PLIST=$(top_builddir)/share/qt/Info.plist #not installed\n-OSX_QT_TRANSLATIONS = da,de,es,hu,ru,uk,zh_CN,zh_TW\n-\n-DIST_DOCS = $(wildcard doc/*.md) $(wildcard doc/release-notes/*.md)\n-DIST_CONTRIB = $(top_srcdir)/contrib/bitcoin-cli.bash-completion \\\n-\t       $(top_srcdir)/contrib/bitcoin-tx.bash-completion \\\n-\t       $(top_srcdir)/contrib/bitcoind.bash-completion \\\n-\t       $(top_srcdir)/contrib/init \\\n-\t       $(top_srcdir)/contrib/install_db4.sh \\\n-\t       $(top_srcdir)/contrib/rpm\n-DIST_SHARE = \\\n-  $(top_srcdir)/share/genbuild.sh \\\n-  $(top_srcdir)/share/rpcauth\n-\n-BIN_CHECKS=$(top_srcdir)/contrib/devtools/symbol-check.py \\\n-           $(top_srcdir)/contrib/devtools/security-check.py\n-\n-WINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/bitcoin.ico \\\n-  $(top_srcdir)/share/pixmaps/nsis-header.bmp \\\n-  $(top_srcdir)/share/pixmaps/nsis-wizard.bmp \\\n-  $(top_srcdir)/doc/README_windows.txt\n-\n-OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) \\\n-  $(top_srcdir)/contrib/macdeploy/$(OSX_BACKGROUND_SVG) \\\n-  $(OSX_DSSTORE_GEN) \\\n-  $(top_srcdir)/contrib/macdeploy/detached-sig-apply.sh \\\n-  $(top_srcdir)/contrib/macdeploy/detached-sig-create.sh\n-\n-COVERAGE_INFO = baseline.info \\\n-  test_bitcoin_filtered.info total_coverage.info \\\n-  baseline_filtered.info functional_test.info functional_test_filtered.info \\\n-  test_bitcoin_coverage.info test_bitcoin.info\n-\n-dist-hook:\n-\t-$(GIT) archive --format=tar HEAD -- src/clientversion.cpp | $(AMTAR) -C $(top_distdir) -xf -\n-\n-$(BITCOIN_WIN_INSTALLER): all-recursive\n-\t$(MKDIR_P) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIND_BIN) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_QT_BIN) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_CLI_BIN) $(top_builddir)/release\n-\t@test -f $(MAKENSIS) && $(MAKENSIS) -V2 $(top_builddir)/share/setup.nsi || \\\n-\t  echo error: could not build $@\n-\t@echo built $@\n-\n-$(OSX_APP)/Contents/PkgInfo:\n-\t$(MKDIR_P) $(@D)\n-\t@echo \"APPL????\" > $@\n-\n-$(OSX_APP)/Contents/Resources/empty.lproj:\n-\t$(MKDIR_P) $(@D)\n-\t@touch $@ \n-\n-$(OSX_APP)/Contents/Info.plist: $(OSX_PLIST)\n-\t$(MKDIR_P) $(@D)\n-\t$(INSTALL_DATA) $< $@\n-\n-$(OSX_APP)/Contents/Resources/bitcoin.icns: $(OSX_INSTALLER_ICONS)\n-\t$(MKDIR_P) $(@D)\n-\t$(INSTALL_DATA) $< $@\n-\n-$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(BITCOIN_QT_BIN)\n-\t$(MKDIR_P) $(@D)\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM)  $< $@\n-\n-$(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings:\n-\t$(MKDIR_P) $(@D)\n-\techo '{\tCFBundleDisplayName = \"$(PACKAGE_NAME)\"; CFBundleName = \"$(PACKAGE_NAME)\"; }' > $@\n-\n-OSX_APP_BUILT=$(OSX_APP)/Contents/PkgInfo $(OSX_APP)/Contents/Resources/empty.lproj \\\n-  $(OSX_APP)/Contents/Resources/bitcoin.icns $(OSX_APP)/Contents/Info.plist \\\n-  $(OSX_APP)/Contents/MacOS/Bitcoin-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings\n-\n-osx_volname:\n-\techo $(OSX_VOLNAME) >$@\n-\n-if BUILD_DARWIN\n-$(OSX_DMG): $(OSX_APP_BUILT) $(OSX_PACKAGING) $(OSX_BACKGROUND_IMAGE)\n-\t$(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -add-qt-tr $(OSX_QT_TRANSLATIONS) -translations-dir=$(QT_TRANSLATION_DIR) -dmg -fancy $(OSX_FANCY_PLIST) -verbose 2 -volname $(OSX_VOLNAME)\n-\n-$(OSX_BACKGROUND_IMAGE).png: contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n-\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d 36 -p 36 -o $@\n-$(OSX_BACKGROUND_IMAGE)@2x.png: contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n-\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d 72 -p 72 -o $@\n-$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE).png $(OSX_BACKGROUND_IMAGE)@2x.png\n-\ttiffutil -cathidpicheck $^ -out $@\n-\n-deploydir: $(OSX_DMG)\n-else\n-APP_DIST_DIR=$(top_builddir)/dist\n-APP_DIST_EXTRAS=$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE) $(APP_DIST_DIR)/.DS_Store $(APP_DIST_DIR)/Applications\n-\n-$(APP_DIST_DIR)/Applications:\n-\t@rm -f $@\n-\t@cd $(@D); $(LN_S) /Applications $(@F)\n-\n-$(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt\n-\n-$(OSX_DMG): $(APP_DIST_EXTRAS)\n-\t$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V \"$(OSX_VOLNAME)\" -no-pad -r -dir-mode 0755 -apple -o $@ dist\n-\n-dpi%.$(OSX_BACKGROUND_IMAGE): contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n-\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d $* -p $* | $(IMAGEMAGICK_CONVERT) - $@\n-OSX_BACKGROUND_IMAGE_DPIFILES := $(foreach dpi,$(OSX_BACKGROUND_IMAGE_DPIS),dpi$(dpi).$(OSX_BACKGROUND_IMAGE))\n-$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE_DPIFILES)\n-\t$(MKDIR_P) $(@D)\n-\t$(TIFFCP) -c none $(OSX_BACKGROUND_IMAGE_DPIFILES) $@\n-\n-$(APP_DIST_DIR)/.DS_Store: $(OSX_DSSTORE_GEN)\n-\t$(PYTHON) $< \"$@\" \"$(OSX_VOLNAME)\"\n-\n-$(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)\n-\tINSTALLNAMETOOL=$(INSTALLNAMETOOL)  OTOOL=$(OTOOL) STRIP=$(STRIP) $(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -translations-dir=$(QT_TRANSLATION_DIR) -add-qt-tr $(OSX_QT_TRANSLATIONS) -verbose 2\n-\n-deploydir: $(APP_DIST_EXTRAS)\n-endif\n-\n-if TARGET_DARWIN\n-appbundle: $(OSX_APP_BUILT)\n-deploy: $(OSX_DMG)\n-endif\n-if TARGET_WINDOWS\n-deploy: $(BITCOIN_WIN_INSTALLER)\n-endif\n-\n-$(BITCOIN_QT_BIN): FORCE\n-\t$(MAKE) -C src qt/$(@F)\n-\n-$(BITCOIND_BIN): FORCE\n-\t$(MAKE) -C src $(@F)\n-\n-$(BITCOIN_CLI_BIN): FORCE\n-\t$(MAKE) -C src $(@F)\n-\n-if USE_LCOV\n-LCOV_FILTER_PATTERN=-p \"/usr/include/\" -p \"src/leveldb/\" -p \"src/bench/\" -p \"src/univalue\" -p \"src/crypto/ctaes\" -p \"src/secp256k1\"\n-\n-baseline.info:\n-\t$(LCOV) -c -i -d $(abs_builddir)/src -o $@\n-\n-baseline_filtered.info: baseline.info\n-\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n-\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n-\n-test_bitcoin.info: baseline_filtered.info\n-\t$(MAKE) -C src/ check\n-\t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src -t test_bitcoin -o $@\n-\t$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src\n-\n-test_bitcoin_filtered.info: test_bitcoin.info\n-\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n-\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n-\n-functional_test.info: test_bitcoin_filtered.info\n-\t-@TIMEOUT=15 test/functional/test_runner.py $(EXTENDED_FUNCTIONAL_TESTS)\n-\t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src --t functional-tests -o $@\n-\t$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src\n-\n-functional_test_filtered.info: functional_test.info\n-\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n-\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n-\n-test_bitcoin_coverage.info: baseline_filtered.info test_bitcoin_filtered.info\n-\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n-\n-total_coverage.info: test_bitcoin_filtered.info functional_test_filtered.info\n-\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a test_bitcoin_filtered.info -a functional_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n-\n-test_bitcoin.coverage/.dirstamp:  test_bitcoin_coverage.info\n-\t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n-\t@touch $@\n-\n-total.coverage/.dirstamp: total_coverage.info\n-\t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n-\t@touch $@\n-\n-cov: test_bitcoin.coverage/.dirstamp total.coverage/.dirstamp\n-\n-endif\n-\n-dist_noinst_SCRIPTS = autogen.sh\n-\n-EXTRA_DIST = $(DIST_SHARE) test/functional/test_runner.py test/functional $(DIST_CONTRIB) $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS)\n-\n-EXTRA_DIST += \\\n-    test/util/bitcoin-util-test.py \\\n-    test/util/data/bitcoin-util-test.json \\\n-    test/util/data/blanktxv1.hex \\\n-    test/util/data/blanktxv1.json \\\n-    test/util/data/blanktxv2.hex \\\n-    test/util/data/blanktxv2.json \\\n-    test/util/data/tt-delin1-out.hex \\\n-    test/util/data/tt-delin1-out.json \\\n-    test/util/data/tt-delout1-out.hex \\\n-    test/util/data/tt-delout1-out.json \\\n-    test/util/data/tt-locktime317000-out.hex \\\n-    test/util/data/tt-locktime317000-out.json \\\n-    test/util/data/tx394b54bb.hex \\\n-    test/util/data/txcreate1.hex \\\n-    test/util/data/txcreate1.json \\\n-    test/util/data/txcreate2.hex \\\n-    test/util/data/txcreate2.json \\\n-    test/util/data/txcreatedata1.hex \\\n-    test/util/data/txcreatedata1.json \\\n-    test/util/data/txcreatedata2.hex \\\n-    test/util/data/txcreatedata2.json \\\n-    test/util/data/txcreatedata_seq0.hex \\\n-    test/util/data/txcreatedata_seq0.json \\\n-    test/util/data/txcreatedata_seq1.hex \\\n-    test/util/data/txcreatedata_seq1.json \\\n-    test/util/data/txcreatemultisig1.hex \\\n-    test/util/data/txcreatemultisig1.json \\\n-    test/util/data/txcreatemultisig2.hex \\\n-    test/util/data/txcreatemultisig2.json \\\n-    test/util/data/txcreatemultisig3.hex \\\n-    test/util/data/txcreatemultisig3.json \\\n-    test/util/data/txcreatemultisig4.hex \\\n-    test/util/data/txcreatemultisig4.json \\\n-    test/util/data/txcreatemultisig5.json \\\n-    test/util/data/txcreateoutpubkey1.hex \\\n-    test/util/data/txcreateoutpubkey1.json \\\n-    test/util/data/txcreateoutpubkey2.hex \\\n-    test/util/data/txcreateoutpubkey2.json \\\n-    test/util/data/txcreateoutpubkey3.hex \\\n-    test/util/data/txcreateoutpubkey3.json \\\n-    test/util/data/txcreatescript1.hex \\\n-    test/util/data/txcreatescript1.json \\\n-    test/util/data/txcreatescript2.hex \\\n-    test/util/data/txcreatescript2.json \\\n-    test/util/data/txcreatescript3.hex \\\n-    test/util/data/txcreatescript3.json \\\n-    test/util/data/txcreatescript4.hex \\\n-    test/util/data/txcreatescript4.json \\\n-    test/util/data/txcreatesignv1.hex \\\n-    test/util/data/txcreatesignv1.json \\\n-    test/util/data/txcreatesignv2.hex \\\n-    test/util/rpcauth-test.py\n-\n-CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n-\n-.INTERMEDIATE: $(COVERAGE_INFO)\n-\n-DISTCHECK_CONFIGURE_FLAGS = --enable-man\n-\n-doc/doxygen/.stamp: doc/Doxyfile FORCE\n-\t$(MKDIR_P) $(@D)\n-\t$(DOXYGEN) $^\n-\t$(AM_V_at) touch $@\n-\n-if HAVE_DOXYGEN\n-docs: doc/doxygen/.stamp\n-else\n-docs:\n-\t@echo \"error: doxygen not found\"\n-endif\n-\n-clean-docs:\n-\trm -rf doc/doxygen\n-\n-clean-local: clean-docs\n-\trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ test/tmp/ cache/ $(OSX_APP) src/qt/moc_*\n-\trm -rf test/functional/__pycache__ test/functional/test_framework/__pycache__ test/cache"
      },
      {
        "sha": "42061c01a1c70097d1e4579f29a5adf40abdec95",
        "filename": "README",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1 @@\n+README.md\n\\ No newline at end of file"
      },
      {
        "sha": "40da7e729ba150ffa03ee2bdec9a8b480f640cb7",
        "filename": "README.md",
        "status": "modified",
        "additions": 23,
        "deletions": 67,
        "changes": 90,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -1,76 +1,32 @@\n-Bitcoin Core integration/staging tree\n-=====================================\n \n-[![Build Status](https://travis-ci.org/bitcoin/bitcoin.svg?branch=master)](https://travis-ci.org/bitcoin/bitcoin)\n+Aithercoin development tree\n \n-https://bitcoincore.org\n+Aithercoin is a PoS-based cryptocurrency.\n \n-What is Bitcoin?\n-----------------\n+Development process\n+===========================\n \n-Bitcoin is an experimental digital currency that enables instant payments to\n-anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate\n-with no central authority: managing transactions and issuing money are carried\n-out collectively by the network. Bitcoin Core is the name of open source\n-software which enables the use of this currency.\n+Developers work in their own trees, then submit pull requests when\n+they think their feature or bug fix is ready.\n \n-For more information, as well as an immediately useable, binary version of\n-the Bitcoin Core software, see https://bitcoin.org/en/download, or read the\n-[original whitepaper](https://bitcoincore.org/bitcoin.pdf).\n+The patch will be accepted if there is broad consensus that it is a\n+good thing.  Developers should expect to rework and resubmit patches\n+if they don't match the project's coding conventions (see coding.txt)\n+or are controversial.\n \n-License\n--------\n+The master branch is regularly built and tested, but is not guaranteed\n+to be completely stable. Tags are regularly created to indicate new\n+stable release versions of Aithercoin.\n \n-Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n-information or see https://opensource.org/licenses/MIT.\n+Feature branches are created when there are major new features being\n+worked on by several people.\n \n-Development Process\n--------------------\n+From time to time a pull request will become outdated. If this occurs, and\n+the pull is no longer automatically mergeable; a comment on the pull will\n+be used to issue a warning of closure. The pull will be closed 15 days\n+after the warning if action is not taken by the author. Pull requests closed\n+in this manner will have their corresponding issue labeled 'stagnant'.\n \n-The `master` branch is regularly built and tested, but is not guaranteed to be\n-completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\n-regularly to indicate new official, stable release versions of Bitcoin Core.\n-\n-The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).\n-\n-Testing\n--------\n-\n-Testing and code review is the bottleneck for development; we get more pull\n-requests than we can review and test on short notice. Please be patient and help out by testing\n-other people's pull requests, and remember this is a security-critical project where any mistake might cost people\n-lots of money.\n-\n-### Automated Testing\n-\n-Developers are strongly encouraged to write [unit tests](src/test/README.md) for new code, and to\n-submit new unit tests for old code. Unit tests can be compiled and run\n-(assuming they weren't disabled in configure) with: `make check`. Further details on running\n-and extending unit tests can be found in [/src/test/README.md](/src/test/README.md).\n-\n-There are also [regression and integration tests](/test), written\n-in Python, that are run automatically on the build server.\n-These tests can be run (if the [test dependencies](/test) are installed) with: `test/functional/test_runner.py`\n-\n-The Travis CI system makes sure that every pull request is built for Windows, Linux, and OS X, and that unit/sanity tests are run automatically.\n-\n-### Manual Quality Assurance (QA) Testing\n-\n-Changes should be tested by somebody other than the developer who wrote the\n-code. This is especially important for large or high-risk changes. It is useful\n-to add a test plan to the pull request description if testing the changes is\n-not straightforward.\n-\n-Translations\n-------------\n-\n-Changes to translations as well as new translations can be submitted to\n-[Bitcoin Core's Transifex page](https://www.transifex.com/projects/p/bitcoin/).\n-\n-Translations are periodically pulled from Transifex and merged into the git repository. See the\n-[translation process](doc/translation_process.md) for details on how this works.\n-\n-**Important**: We do not accept translation changes as GitHub pull requests because the next\n-pull from Transifex would automatically overwrite them again.\n-\n-Translators should also subscribe to the [mailing list](https://groups.google.com/forum/#!forum/bitcoin-translators).\n+Issues with no commits will be given a similar warning, and closed after\n+15 days from their last activity. Issues closed in this manner will be \n+labeled 'stale'."
      },
      {
        "sha": "27417daf7691513da832eae5541b6c5bee091551",
        "filename": "autogen.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/autogen.sh?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,15 +0,0 @@\n-#!/bin/sh\n-# Copyright (c) 2013-2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-set -e\n-srcdir=\"$(dirname $0)\"\n-cd \"$srcdir\"\n-if [ -z ${LIBTOOLIZE} ] && GLIBTOOLIZE=\"`which glibtoolize 2>/dev/null`\"; then\n-  LIBTOOLIZE=\"${GLIBTOOLIZE}\"\n-  export LIBTOOLIZE\n-fi\n-which autoreconf >/dev/null || \\\n-  (echo \"configuration failed, please install autoconf first\" && exit 1)\n-autoreconf --install --force --warnings=all"
      },
      {
        "sha": "650c94fa64752a362a34eb6d489c194255ecfc51",
        "filename": "build-aux/m4/ax_boost_base.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 291,
        "changes": 291,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/ax_boost_base.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/ax_boost_base.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_base.m4?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,291 +0,0 @@\n-# ===========================================================================\n-#       http://www.gnu.org/software/autoconf-archive/ax_boost_base.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_BASE([MINIMUM-VERSION], [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n-#\n-# DESCRIPTION\n-#\n-#   Test for the Boost C++ libraries of a particular version (or newer)\n-#\n-#   If no path to the installed boost library is given the macro searchs\n-#   under /usr, /usr/local, /opt and /opt/local and evaluates the\n-#   $BOOST_ROOT environment variable. Further documentation is available at\n-#   <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_CPPFLAGS) / AC_SUBST(BOOST_LDFLAGS)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2009 Peter Adolphs\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 27\n-\n-AC_DEFUN([AX_BOOST_BASE],\n-[\n-AC_ARG_WITH([boost],\n-  [AS_HELP_STRING([--with-boost@<:@=ARG@:>@],\n-    [use Boost library from a standard location (ARG=yes),\n-     from the specified location (ARG=<path>),\n-     or disable it (ARG=no)\n-     @<:@ARG=yes@:>@ ])],\n-    [\n-    if test \"$withval\" = \"no\"; then\n-        want_boost=\"no\"\n-    elif test \"$withval\" = \"yes\"; then\n-        want_boost=\"yes\"\n-        ac_boost_path=\"\"\n-    else\n-        want_boost=\"yes\"\n-        ac_boost_path=\"$withval\"\n-    fi\n-    ],\n-    [want_boost=\"yes\"])\n-\n-\n-AC_ARG_WITH([boost-libdir],\n-        AS_HELP_STRING([--with-boost-libdir=LIB_DIR],\n-        [Force given directory for boost libraries. Note that this will override library path detection, so use this parameter only if default library detection fails and you know exactly where your boost libraries are located.]),\n-        [\n-        if test -d \"$withval\"\n-        then\n-                ac_boost_lib_path=\"$withval\"\n-        else\n-                AC_MSG_ERROR(--with-boost-libdir expected directory name)\n-        fi\n-        ],\n-        [ac_boost_lib_path=\"\"]\n-)\n-\n-if test \"x$want_boost\" = \"xyes\"; then\n-    boost_lib_version_req=ifelse([$1], ,1.20.0,$1)\n-    boost_lib_version_req_shorten=`expr $boost_lib_version_req : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n-    boost_lib_version_req_major=`expr $boost_lib_version_req : '\\([[0-9]]*\\)'`\n-    boost_lib_version_req_minor=`expr $boost_lib_version_req : '[[0-9]]*\\.\\([[0-9]]*\\)'`\n-    boost_lib_version_req_sub_minor=`expr $boost_lib_version_req : '[[0-9]]*\\.[[0-9]]*\\.\\([[0-9]]*\\)'`\n-    if test \"x$boost_lib_version_req_sub_minor\" = \"x\" ; then\n-        boost_lib_version_req_sub_minor=\"0\"\n-        fi\n-    WANT_BOOST_VERSION=`expr $boost_lib_version_req_major \\* 100000 \\+  $boost_lib_version_req_minor \\* 100 \\+ $boost_lib_version_req_sub_minor`\n-    AC_MSG_CHECKING(for boostlib >= $boost_lib_version_req)\n-    succeeded=no\n-\n-    dnl On 64-bit systems check for system libraries in both lib64 and lib.\n-    dnl The former is specified by FHS, but e.g. Debian does not adhere to\n-    dnl this (as it rises problems for generic multi-arch support).\n-    dnl The last entry in the list is chosen by default when no libraries\n-    dnl are found, e.g. when only header-only libraries are installed!\n-    libsubdirs=\"lib\"\n-    ax_arch=`uname -m`\n-    case $ax_arch in\n-      x86_64)\n-        libsubdirs=\"lib64 libx32 lib lib64\"\n-        ;;\n-      ppc64|s390x|sparc64|aarch64|ppc64le)\n-        libsubdirs=\"lib64 lib lib64\"\n-        ;;\n-    esac\n-\n-    dnl allow for real multi-arch paths e.g. /usr/lib/x86_64-linux-gnu. Give\n-    dnl them priority over the other paths since, if libs are found there, they\n-    dnl are almost assuredly the ones desired.\n-    AC_REQUIRE([AC_CANONICAL_HOST])\n-    libsubdirs=\"lib/${host_cpu}-${host_os} $libsubdirs\"\n-\n-    case ${host_cpu} in\n-      i?86)\n-        libsubdirs=\"lib/i386-${host_os} $libsubdirs\"\n-        ;;\n-    esac\n-\n-    dnl some arches may advertise a cpu type that doesn't line up with their\n-    dnl prefix's cpu type. For example, uname may report armv7l while libs are\n-    dnl installed to /usr/lib/arm-linux-gnueabihf. Try getting the compiler's\n-    dnl value for an extra chance of finding the correct path.\n-    libsubdirs=\"lib/`$CXX -dumpmachine 2>/dev/null` $libsubdirs\"\n-\n-    dnl first we check the system location for boost libraries\n-    dnl this location ist chosen if boost libraries are installed with the --layout=system option\n-    dnl or if you install boost with RPM\n-    if test \"$ac_boost_path\" != \"\"; then\n-        BOOST_CPPFLAGS=\"-I$ac_boost_path/include\"\n-        for ac_boost_path_tmp in $libsubdirs; do\n-                if test -d \"$ac_boost_path\"/\"$ac_boost_path_tmp\" ; then\n-                        BOOST_LDFLAGS=\"-L$ac_boost_path/$ac_boost_path_tmp\"\n-                        break\n-                fi\n-        done\n-    elif test \"$cross_compiling\" != yes; then\n-        for ac_boost_path_tmp in /usr /usr/local /opt /opt/local ; do\n-            if test -d \"$ac_boost_path_tmp/include/boost\" && test -r \"$ac_boost_path_tmp/include/boost\"; then\n-                for libsubdir in $libsubdirs ; do\n-                    if ls \"$ac_boost_path_tmp/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n-                done\n-                BOOST_LDFLAGS=\"-L$ac_boost_path_tmp/$libsubdir\"\n-                BOOST_CPPFLAGS=\"-I$ac_boost_path_tmp/include\"\n-                break;\n-            fi\n-        done\n-    fi\n-\n-    dnl overwrite ld flags if we have required special directory with\n-    dnl --with-boost-libdir parameter\n-    if test \"$ac_boost_lib_path\" != \"\"; then\n-       BOOST_LDFLAGS=\"-L$ac_boost_lib_path\"\n-    fi\n-\n-    CPPFLAGS_SAVED=\"$CPPFLAGS\"\n-    CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-    export CPPFLAGS\n-\n-    LDFLAGS_SAVED=\"$LDFLAGS\"\n-    LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-    export LDFLAGS\n-\n-    AC_REQUIRE([AC_PROG_CXX])\n-    AC_LANG_PUSH(C++)\n-        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-    @%:@include <boost/version.hpp>\n-    ]], [[\n-    #if BOOST_VERSION >= $WANT_BOOST_VERSION\n-    // Everything is okay\n-    #else\n-    #  error Boost version is too old\n-    #endif\n-    ]])],[\n-        AC_MSG_RESULT(yes)\n-    succeeded=yes\n-    found_system=yes\n-        ],[\n-        ])\n-    AC_LANG_POP([C++])\n-\n-\n-\n-    dnl if we found no boost with system layout we search for boost libraries\n-    dnl built and installed without the --layout=system option or for a staged(not installed) version\n-    if test \"x$succeeded\" != \"xyes\"; then\n-        CPPFLAGS=\"$CPPFLAGS_SAVED\"\n-        LDFLAGS=\"$LDFLAGS_SAVED\"\n-        BOOST_CPPFLAGS=\n-        BOOST_LDFLAGS=\n-        _version=0\n-        if test \"$ac_boost_path\" != \"\"; then\n-            if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n-                for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do\n-                    _version_tmp=`echo $i | sed \"s#$ac_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n-                    V_CHECK=`expr $_version_tmp \\> $_version`\n-                    if test \"$V_CHECK\" = \"1\" ; then\n-                        _version=$_version_tmp\n-                    fi\n-                    VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n-                    BOOST_CPPFLAGS=\"-I$ac_boost_path/include/boost-$VERSION_UNDERSCORE\"\n-                done\n-                dnl if nothing found search for layout used in Windows distributions\n-                if test -z \"$BOOST_CPPFLAGS\"; then\n-                    if test -d \"$ac_boost_path/boost\" && test -r \"$ac_boost_path/boost\"; then\n-                        BOOST_CPPFLAGS=\"-I$ac_boost_path\"\n-                    fi\n-                fi\n-            fi\n-        else\n-            if test \"$cross_compiling\" != yes; then\n-                for ac_boost_path in /usr /usr/local /opt /opt/local ; do\n-                    if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n-                        for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do\n-                            _version_tmp=`echo $i | sed \"s#$ac_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n-                            V_CHECK=`expr $_version_tmp \\> $_version`\n-                            if test \"$V_CHECK\" = \"1\" ; then\n-                                _version=$_version_tmp\n-                                best_path=$ac_boost_path\n-                            fi\n-                        done\n-                    fi\n-                done\n-\n-                VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n-                BOOST_CPPFLAGS=\"-I$best_path/include/boost-$VERSION_UNDERSCORE\"\n-                if test \"$ac_boost_lib_path\" = \"\"; then\n-                    for libsubdir in $libsubdirs ; do\n-                        if ls \"$best_path/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n-                    done\n-                    BOOST_LDFLAGS=\"-L$best_path/$libsubdir\"\n-                fi\n-            fi\n-\n-            if test \"x$BOOST_ROOT\" != \"x\"; then\n-                for libsubdir in $libsubdirs ; do\n-                    if ls \"$BOOST_ROOT/stage/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n-                done\n-                if test -d \"$BOOST_ROOT\" && test -r \"$BOOST_ROOT\" && test -d \"$BOOST_ROOT/stage/$libsubdir\" && test -r \"$BOOST_ROOT/stage/$libsubdir\"; then\n-                    version_dir=`expr //$BOOST_ROOT : '.*/\\(.*\\)'`\n-                    stage_version=`echo $version_dir | sed 's/boost_//' | sed 's/_/./g'`\n-                        stage_version_shorten=`expr $stage_version : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n-                    V_CHECK=`expr $stage_version_shorten \\>\\= $_version`\n-                    if test \"$V_CHECK\" = \"1\" -a \"$ac_boost_lib_path\" = \"\" ; then\n-                        AC_MSG_NOTICE(We will use a staged boost library from $BOOST_ROOT)\n-                        BOOST_CPPFLAGS=\"-I$BOOST_ROOT\"\n-                        BOOST_LDFLAGS=\"-L$BOOST_ROOT/stage/$libsubdir\"\n-                    fi\n-                fi\n-            fi\n-        fi\n-\n-        CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-        export CPPFLAGS\n-        LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-        export LDFLAGS\n-\n-        AC_LANG_PUSH(C++)\n-            AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-        @%:@include <boost/version.hpp>\n-        ]], [[\n-        #if BOOST_VERSION >= $WANT_BOOST_VERSION\n-        // Everything is okay\n-        #else\n-        #  error Boost version is too old\n-        #endif\n-        ]])],[\n-            AC_MSG_RESULT(yes)\n-        succeeded=yes\n-        found_system=yes\n-            ],[\n-            ])\n-        AC_LANG_POP([C++])\n-    fi\n-\n-    if test \"$succeeded\" != \"yes\" ; then\n-        if test \"$_version\" = \"0\" ; then\n-            AC_MSG_NOTICE([[We could not detect the boost libraries (version $boost_lib_version_req_shorten or higher). If you have a staged boost library (still not installed) please specify \\$BOOST_ROOT in your environment and do not give a PATH to --with-boost option.  If you are sure you have boost installed, then check your version number looking in <boost/version.hpp>. See http://randspringer.de/boost for more documentation.]])\n-        else\n-            AC_MSG_NOTICE([Your boost libraries seems to old (version $_version).])\n-        fi\n-        # execute ACTION-IF-NOT-FOUND (if present):\n-        ifelse([$3], , :, [$3])\n-    else\n-        AC_SUBST(BOOST_CPPFLAGS)\n-        AC_SUBST(BOOST_LDFLAGS)\n-        AC_DEFINE(HAVE_BOOST,,[define if the Boost library is available])\n-        # execute ACTION-IF-FOUND (if present):\n-        ifelse([$2], , :, [$2])\n-    fi\n-\n-    CPPFLAGS=\"$CPPFLAGS_SAVED\"\n-    LDFLAGS=\"$LDFLAGS_SAVED\"\n-fi\n-\n-])"
      },
      {
        "sha": "e9b0f2061cd038d09691892421c27eeaea375aa9",
        "filename": "build-aux/m4/ax_boost_chrono.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 119,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/ax_boost_chrono.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/ax_boost_chrono.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_chrono.m4?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,119 +0,0 @@\n-# ===========================================================================\n-#     https://www.gnu.org/software/autoconf-archive/ax_boost_chrono.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_CHRONO\n-#\n-# DESCRIPTION\n-#\n-#   Test for Chrono library from the Boost C++ libraries. The macro requires\n-#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n-#   <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_CHRONO_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_CHRONO\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2012 Xiyue Deng <manphiz@gmail.com>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 4\n-\n-AC_DEFUN([AX_BOOST_CHRONO],\n-[\n-\tAC_ARG_WITH([boost-chrono],\n-\tAS_HELP_STRING([--with-boost-chrono@<:@=special-lib@:>@],\n-                   [use the Chrono library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-chrono=boost_chrono-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_chrono_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_chrono_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-        AC_REQUIRE([AC_CANONICAL_BUILD])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-        AC_CACHE_CHECK(whether the Boost::Chrono library is available,\n-\t\t\t\t\t   ax_cv_boost_chrono,\n-        [AC_LANG_PUSH([C++])\n-\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n-\n-\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/chrono.hpp>]],\n-                                   [[boost::chrono::system_clock::time_point* time = new boost::chrono::system_clock::time_point; delete time;]])],\n-                   ax_cv_boost_chrono=yes, ax_cv_boost_chrono=no)\n-\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n-             AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_chrono\" = \"xyes\"; then\n-\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n-\n-\t\t\tAC_DEFINE(HAVE_BOOST_CHRONO,,[define if the Boost::Chrono library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-\n-\t\t\tLDFLAGS_SAVE=$LDFLAGS\n-            if test \"x$ax_boost_user_chrono_lib\" = \"x\"; then\n-                ax_lib=\n-                for libextension in `ls $BOOSTLIBDIR/libboost_chrono*.so* $BOOSTLIBDIR/libboost_chrono*.dylib* $BOOSTLIBDIR/libboost_chrono*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_chrono.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n-                                 [link_chrono=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_chrono\" != \"xyes\"; then\n-                for libextension in `ls $BOOSTLIBDIR/boost_chrono*.dll* $BOOSTLIBDIR/boost_chrono*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_chrono.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_chrono.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n-                                 [link_chrono=\"no\"])\n-\t\t\t\tdone\n-                fi\n-\n-            else\n-               for ax_lib in $ax_boost_user_chrono_lib boost_chrono-$ax_boost_user_chrono_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n-                                   [link_chrono=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_chrono library!)\n-            fi\n-\t\t\tif test \"x$link_chrono\" = \"xno\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "f5c9d56470bf9659b2c38c677c946d37c32be206",
        "filename": "build-aux/m4/ax_boost_filesystem.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 119,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/ax_boost_filesystem.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/ax_boost_filesystem.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_filesystem.m4?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,119 +0,0 @@\n-# ===========================================================================\n-#    http://www.gnu.org/software/autoconf-archive/ax_boost_filesystem.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_FILESYSTEM\n-#\n-# DESCRIPTION\n-#\n-#   Test for Filesystem library from the Boost C++ libraries. The macro\n-#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n-#   available at <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_FILESYSTEM_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_FILESYSTEM\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2009 Michael Tindal\n-#   Copyright (c) 2009 Roman Rybalko <libtorrent@romanr.info>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 26\n-\n-AC_DEFUN([AX_BOOST_FILESYSTEM],\n-[\n-\tAC_ARG_WITH([boost-filesystem],\n-\tAS_HELP_STRING([--with-boost-filesystem@<:@=special-lib@:>@],\n-                   [use the Filesystem library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-filesystem=boost_filesystem-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_filesystem_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_filesystem_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-\t\tLIBS_SAVED=$LIBS\n-\t\tLIBS=\"$LIBS $BOOST_SYSTEM_LIB\"\n-\t\texport LIBS\n-\n-        AC_CACHE_CHECK(whether the Boost::Filesystem library is available,\n-\t\t\t\t\t   ax_cv_boost_filesystem,\n-        [AC_LANG_PUSH([C++])\n-         AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/filesystem/path.hpp>]],\n-                                   [[using namespace boost::filesystem;\n-                                   path my_path( \"foo/bar/data.txt\" );\n-                                   return 0;]])],\n-\t\t\t\t\t       ax_cv_boost_filesystem=yes, ax_cv_boost_filesystem=no)\n-         AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_filesystem\" = \"xyes\"; then\n-\t\t\tAC_DEFINE(HAVE_BOOST_FILESYSTEM,,[define if the Boost::Filesystem library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-            ax_lib=\n-            if test \"x$ax_boost_user_filesystem_lib\" = \"x\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/libboost_filesystem* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n-                                 [link_filesystem=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_filesystem\" != \"xyes\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/boost_filesystem* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n-                                 [link_filesystem=\"no\"])\n-\t\t\t\tdone\n-\t\t    fi\n-            else\n-               for ax_lib in $ax_boost_user_filesystem_lib boost_filesystem-$ax_boost_user_filesystem_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n-                                   [link_filesystem=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_filesystem library!)\n-            fi\n-\t\t\tif test \"x$link_filesystem\" != \"xyes\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\t\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\t\tLIBS=\"$LIBS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "2bdb5937162e4207cf0f96586bc343653ae30da1",
        "filename": "build-aux/m4/ax_boost_program_options.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 108,
        "changes": 108,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/ax_boost_program_options.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/ax_boost_program_options.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_program_options.m4?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,108 +0,0 @@\n-# ============================================================================\n-#  http://www.gnu.org/software/autoconf-archive/ax_boost_program_options.html\n-# ============================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_PROGRAM_OPTIONS\n-#\n-# DESCRIPTION\n-#\n-#   Test for program options library from the Boost C++ libraries. The macro\n-#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n-#   available at <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_PROGRAM_OPTIONS\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 24\n-\n-AC_DEFUN([AX_BOOST_PROGRAM_OPTIONS],\n-[\n-\tAC_ARG_WITH([boost-program-options],\n-\t\tAS_HELP_STRING([--with-boost-program-options@<:@=special-lib@:>@],\n-                       [use the program options library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-program-options=boost_program_options-gcc-mt-1_33_1 ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_program_options_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_program_options_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-\t    export want_boost\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\t\tAC_CACHE_CHECK([whether the Boost::Program_Options library is available],\n-\t\t\t\t\t   ax_cv_boost_program_options,\n-\t\t\t\t\t   [AC_LANG_PUSH(C++)\n-\t\t\t\tAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/program_options/errors.hpp>\n-                                                          ]],\n-                                  [[boost::program_options::error err(\"Error message\");\n-                                   return 0;]])],\n-                           ax_cv_boost_program_options=yes, ax_cv_boost_program_options=no)\n-\t\t\t\t\tAC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"$ax_cv_boost_program_options\" = yes; then\n-\t\t\t\tAC_DEFINE(HAVE_BOOST_PROGRAM_OPTIONS,,[define if the Boost::PROGRAM_OPTIONS library is available])\n-                  BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-                if test \"x$ax_boost_user_program_options_lib\" = \"x\"; then\n-                for libextension in `ls $BOOSTLIBDIR/libboost_program_options*.so* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.so.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_program_options*.dylib* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.dylib.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_program_options*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n-                                 [link_program_options=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_program_options\" != \"xyes\"; then\n-                for libextension in `ls $BOOSTLIBDIR/boost_program_options*.dll* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_program_options.*\\)\\.dll.*$;\\1;'` `ls $BOOSTLIBDIR/boost_program_options*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_program_options.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n-                                 [link_program_options=\"no\"])\n-\t\t\t\tdone\n-                fi\n-                else\n-                  for ax_lib in $ax_boost_user_program_options_lib boost_program_options-$ax_boost_user_program_options_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, main,\n-                                   [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n-                                   [link_program_options=\"no\"])\n-                  done\n-                fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_program_options library!)\n-            fi\n-\t\t\t\tif test \"x$link_program_options\" != \"xyes\"; then\n-\t\t\t\t\tAC_MSG_ERROR([Could not link against [$ax_lib] !])\n-\t\t\t\tfi\n-\t\tfi\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "1c05450cbe1d5cc11a257f5c02284900890a973e",
        "filename": "build-aux/m4/ax_boost_system.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 122,
        "changes": 122,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/ax_boost_system.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/ax_boost_system.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_system.m4?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,122 +0,0 @@\n-# ===========================================================================\n-#      http://www.gnu.org/software/autoconf-archive/ax_boost_system.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_SYSTEM\n-#\n-# DESCRIPTION\n-#\n-#   Test for System library from the Boost C++ libraries. The macro requires\n-#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n-#   <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_SYSTEM_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_SYSTEM\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2008 Michael Tindal\n-#   Copyright (c) 2008 Daniel Casimiro <dan.casimiro@gmail.com>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 18\n-\n-AC_DEFUN([AX_BOOST_SYSTEM],\n-[\n-\tAC_ARG_WITH([boost-system],\n-\tAS_HELP_STRING([--with-boost-system@<:@=special-lib@:>@],\n-                   [use the System library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-system=boost_system-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_system_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_system_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-        AC_REQUIRE([AC_CANONICAL_BUILD])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-        AC_CACHE_CHECK(whether the Boost::System library is available,\n-\t\t\t\t\t   ax_cv_boost_system,\n-        [AC_LANG_PUSH([C++])\n-\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n-\t\t\t CXXFLAGS=\n-\n-\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/system/error_code.hpp>]],\n-\t\t\t\t    [[boost::system::error_category *a = 0;]])],\n-                   ax_cv_boost_system=yes, ax_cv_boost_system=no)\n-\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n-             AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_system\" = \"xyes\"; then\n-\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n-\n-\t\t\tAC_DEFINE(HAVE_BOOST_SYSTEM,,[define if the Boost::System library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-\n-\t\t\tLDFLAGS_SAVE=$LDFLAGS\n-            if test \"x$ax_boost_user_system_lib\" = \"x\"; then\n-                ax_lib=\n-                for libextension in `ls -r $BOOSTLIBDIR/libboost_system* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n-                                 [link_system=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_system\" != \"xyes\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/boost_system* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n-                                 [link_system=\"no\"])\n-\t\t\t\tdone\n-                fi\n-\n-            else\n-               for ax_lib in $ax_boost_user_system_lib boost_system-$ax_boost_user_system_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n-                                   [link_system=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_system library!)\n-            fi\n-\t\t\tif test \"x$link_system\" = \"xno\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "9f0bd0b23c9b0caba987ba96080f7696643a8d5d",
        "filename": "build-aux/m4/ax_boost_thread.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 150,
        "changes": 150,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/ax_boost_thread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/ax_boost_thread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_thread.m4?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,150 +0,0 @@\n-# ===========================================================================\n-#      http://www.gnu.org/software/autoconf-archive/ax_boost_thread.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_THREAD\n-#\n-# DESCRIPTION\n-#\n-#   Test for Thread library from the Boost C++ libraries. The macro requires\n-#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n-#   <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_THREAD_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_THREAD\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2009 Michael Tindal\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 27\n-\n-AC_DEFUN([AX_BOOST_THREAD],\n-[\n-\tAC_ARG_WITH([boost-thread],\n-\tAS_HELP_STRING([--with-boost-thread@<:@=special-lib@:>@],\n-                   [use the Thread library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-thread=boost_thread-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_thread_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_thread_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-        AC_REQUIRE([AC_CANONICAL_BUILD])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-        AC_CACHE_CHECK(whether the Boost::Thread library is available,\n-\t\t\t\t\t   ax_cv_boost_thread,\n-        [AC_LANG_PUSH([C++])\n-\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n-\n-\t\t\t if test \"x$host_os\" = \"xsolaris\" ; then\n-\t\t\t\t CXXFLAGS=\"-pthreads $CXXFLAGS\"\n-\t\t\t elif test \"x$host_os\" = \"xmingw32\" ; then\n-\t\t\t\t CXXFLAGS=\"-mthreads $CXXFLAGS\"\n-\t\t\t else\n-\t\t\t\tCXXFLAGS=\"-pthread $CXXFLAGS\"\n-\t\t\t fi\n-\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/thread/thread.hpp>]],\n-                                   [[boost::thread_group thrds;\n-                                   return 0;]])],\n-                   ax_cv_boost_thread=yes, ax_cv_boost_thread=no)\n-\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n-             AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_thread\" = \"xyes\"; then\n-           if test \"x$host_os\" = \"xsolaris\" ; then\n-\t\t\t  BOOST_CPPFLAGS=\"-pthreads $BOOST_CPPFLAGS\"\n-\t\t   elif test \"x$host_os\" = \"xmingw32\" ; then\n-\t\t\t  BOOST_CPPFLAGS=\"-mthreads $BOOST_CPPFLAGS\"\n-\t\t   else\n-\t\t\t  BOOST_CPPFLAGS=\"-pthread $BOOST_CPPFLAGS\"\n-\t\t   fi\n-\n-\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n-\n-\t\t\tAC_DEFINE(HAVE_BOOST_THREAD,,[define if the Boost::Thread library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-\n-\t\t\tLDFLAGS_SAVE=$LDFLAGS\n-                        case \"x$host_os\" in\n-                          *bsd* )\n-                               LDFLAGS=\"-pthread $LDFLAGS\"\n-                          break;\n-                          ;;\n-                        esac\n-            if test \"x$ax_boost_user_thread_lib\" = \"x\"; then\n-                ax_lib=\n-                for libextension in `ls -r $BOOSTLIBDIR/libboost_thread* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'`; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n-                                 [link_thread=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_thread\" != \"xyes\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/boost_thread* 2>/dev/null | sed 's,.*/,,' | sed 's,\\..*,,'`; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n-                                 [link_thread=\"no\"])\n-\t\t\t\tdone\n-                fi\n-\n-            else\n-               for ax_lib in $ax_boost_user_thread_lib boost_thread-$ax_boost_user_thread_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n-                                   [link_thread=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_thread library!)\n-            fi\n-\t\t\tif test \"x$link_thread\" = \"xno\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-                        else\n-                           case \"x$host_os\" in\n-                              *bsd* )\n-\t\t\t\tBOOST_LDFLAGS=\"-pthread $BOOST_LDFLAGS\"\n-                              break;\n-                              ;;\n-                           esac\n-\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "0cdbe752cfb78ab887b35968745347a367a8ace5",
        "filename": "build-aux/m4/ax_boost_unit_test_framework.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 138,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/ax_boost_unit_test_framework.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/ax_boost_unit_test_framework.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_unit_test_framework.m4?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,138 +0,0 @@\n-# =================================================================================\n-#  https://www.gnu.org/software/autoconf-archive/ax_boost_unit_test_framework.html\n-# =================================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_UNIT_TEST_FRAMEWORK\n-#\n-# DESCRIPTION\n-#\n-#   Test for Unit_Test_Framework library from the Boost C++ libraries. The\n-#   macro requires a preceding call to AX_BOOST_BASE. Further documentation\n-#   is available at <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_UNIT_TEST_FRAMEWORK\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 21\n-\n-AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n-[\n-\tAC_ARG_WITH([boost-unit-test-framework],\n-\tAS_HELP_STRING([--with-boost-unit-test-framework@<:@=special-lib@:>@],\n-                   [use the Unit_Test_Framework library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-unit-test-framework=boost_unit_test_framework-gcc ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_unit_test_framework_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_unit_test_framework_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-        AC_CACHE_CHECK(whether the Boost::Unit_Test_Framework library is available,\n-\t\t\t\t\t   ax_cv_boost_unit_test_framework,\n-        [AC_LANG_PUSH([C++])\n-\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/test/unit_test.hpp>]],\n-                                    [[using boost::unit_test::test_suite;\n-\t\t\t\t\t\t\t test_suite* test= BOOST_TEST_SUITE( \"Unit test example 1\" ); if (test == NULL) { return 1; } else { return 0; }]])],\n-                   ax_cv_boost_unit_test_framework=yes, ax_cv_boost_unit_test_framework=no)\n-         AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_unit_test_framework\" = \"xyes\"; then\n-\t\t\tAC_DEFINE(HAVE_BOOST_UNIT_TEST_FRAMEWORK,,[define if the Boost::Unit_Test_Framework library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-\n-            if test \"x$ax_boost_user_unit_test_framework_lib\" = \"x\"; then\n-\t\t\tsaved_ldflags=\"${LDFLAGS}\"\n-                ax_lib=\n-                for monitor_library in `ls $BOOSTLIBDIR/libboost_unit_test_framework*.so* $BOOSTLIBDIR/libboost_unit_test_framework*.dylib* $BOOSTLIBDIR/libboost_unit_test_framework*.a* 2>/dev/null` ; do\n-                    if test -r $monitor_library ; then\n-                       libextension=`echo $monitor_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'`\n-                       ax_lib=${libextension}\n-                       link_unit_test_framework=\"yes\"\n-                    else\n-                       link_unit_test_framework=\"no\"\n-                    fi\n-\n-\t\t\t    if test \"x$link_unit_test_framework\" = \"xyes\"; then\n-                      BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"\n-                      AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n-\t\t\t\t\t  break\n-\t\t\t\t    fi\n-                done\n-                if test \"x$link_unit_test_framework\" != \"xyes\"; then\n-                for libextension in `ls $BOOSTLIBDIR/boost_unit_test_framework*.dll* $BOOSTLIBDIR/boost_unit_test_framework*.a* 2>/dev/null  | sed 's,.*/,,' | sed -e 's;^\\(boost_unit_test_framework.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB) link_unit_test_framework=\"yes\"; break],\n-                                 [link_unit_test_framework=\"no\"])\n-\t\t\t\tdone\n-                fi\n-            else\n-                link_unit_test_framework=\"no\"\n-\t\t\tsaved_ldflags=\"${LDFLAGS}\"\n-                for ax_lib in boost_unit_test_framework-$ax_boost_user_unit_test_framework_lib $ax_boost_user_unit_test_framework_lib ; do\n-                   if test \"x$link_unit_test_framework\" = \"xyes\"; then\n-                      break;\n-                   fi\n-                   for unittest_library in `ls $BOOSTLIBDIR/lib${ax_lib}.so* $BOOSTLIBDIR/lib${ax_lib}.a* 2>/dev/null` ; do\n-                   if test -r $unittest_library ; then\n-                       libextension=`echo $unittest_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a*$;\\1;'`\n-                       ax_lib=${libextension}\n-                       link_unit_test_framework=\"yes\"\n-                    else\n-                       link_unit_test_framework=\"no\"\n-                    fi\n-\n-\t\t\t\tif test \"x$link_unit_test_framework\" = \"xyes\"; then\n-                        BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"\n-                        AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n-\t\t\t\t\t    break\n-\t\t\t\t    fi\n-                  done\n-               done\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_unit_test_framework library!)\n-            fi\n-\t\t\tif test \"x$link_unit_test_framework\" != \"xyes\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "ca3639715e7243fa4343eb2e7f3de53927cc9d4a",
        "filename": "build-aux/m4/ax_check_compile_flag.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 74,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/ax_check_compile_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/ax_check_compile_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_compile_flag.m4?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,74 +0,0 @@\n-# ===========================================================================\n-#   http://www.gnu.org/software/autoconf-archive/ax_check_compile_flag.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_CHECK_COMPILE_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])\n-#\n-# DESCRIPTION\n-#\n-#   Check whether the given FLAG works with the current language's compiler\n-#   or gives an error.  (Warnings, however, are ignored)\n-#\n-#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n-#   success/failure.\n-#\n-#   If EXTRA-FLAGS is defined, it is added to the current language's default\n-#   flags (e.g. CFLAGS) when the check is done.  The check is thus made with\n-#   the flags: \"CFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to\n-#   force the compiler to issue an error when a bad flag is given.\n-#\n-#   INPUT gives an alternative input source to AC_COMPILE_IFELSE.\n-#\n-#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n-#   macro in sync with AX_CHECK_{PREPROC,LINK}_FLAG.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n-#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n-#\n-#   This program is free software: you can redistribute it and/or modify it\n-#   under the terms of the GNU General Public License as published by the\n-#   Free Software Foundation, either version 3 of the License, or (at your\n-#   option) any later version.\n-#\n-#   This program is distributed in the hope that it will be useful, but\n-#   WITHOUT ANY WARRANTY; without even the implied warranty of\n-#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n-#   Public License for more details.\n-#\n-#   You should have received a copy of the GNU General Public License along\n-#   with this program. If not, see <http://www.gnu.org/licenses/>.\n-#\n-#   As a special exception, the respective Autoconf Macro's copyright owner\n-#   gives unlimited permission to copy, distribute and modify the configure\n-#   scripts that are the output of Autoconf when processing the Macro. You\n-#   need not follow the terms of the GNU General Public License when using\n-#   or distributing such scripts, even though portions of the text of the\n-#   Macro appear in them. The GNU General Public License (GPL) does govern\n-#   all other use of the material that constitutes the Autoconf Macro.\n-#\n-#   This special exception to the GPL applies to versions of the Autoconf\n-#   Macro released by the Autoconf Archive. When you make and distribute a\n-#   modified version of the Autoconf Macro, you may extend this special\n-#   exception to the GPL to apply to your modified version as well.\n-\n-#serial 4\n-\n-AC_DEFUN([AX_CHECK_COMPILE_FLAG],\n-[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF\n-AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]flags_$4_$1])dnl\n-AC_CACHE_CHECK([whether _AC_LANG compiler accepts $1], CACHEVAR, [\n-  ax_check_save_flags=$[]_AC_LANG_PREFIX[]FLAGS\n-  _AC_LANG_PREFIX[]FLAGS=\"$[]_AC_LANG_PREFIX[]FLAGS $4 $1\"\n-  AC_COMPILE_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],\n-    [AS_VAR_SET(CACHEVAR,[yes])],\n-    [AS_VAR_SET(CACHEVAR,[no])])\n-  _AC_LANG_PREFIX[]FLAGS=$ax_check_save_flags])\n-AS_VAR_IF(CACHEVAR,yes,\n-  [m4_default([$2], :)],\n-  [m4_default([$3], :)])\n-AS_VAR_POPDEF([CACHEVAR])dnl\n-])dnl AX_CHECK_COMPILE_FLAGS"
      },
      {
        "sha": "eb01a6ce135eca0fdde834b00c21b12202b09f3d",
        "filename": "build-aux/m4/ax_check_link_flag.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 74,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/ax_check_link_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/ax_check_link_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_link_flag.m4?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,74 +0,0 @@\n-# ===========================================================================\n-#    http://www.gnu.org/software/autoconf-archive/ax_check_link_flag.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_CHECK_LINK_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])\n-#\n-# DESCRIPTION\n-#\n-#   Check whether the given FLAG works with the linker or gives an error.\n-#   (Warnings, however, are ignored)\n-#\n-#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n-#   success/failure.\n-#\n-#   If EXTRA-FLAGS is defined, it is added to the linker's default flags\n-#   when the check is done.  The check is thus made with the flags: \"LDFLAGS\n-#   EXTRA-FLAGS FLAG\".  This can for example be used to force the linker to\n-#   issue an error when a bad flag is given.\n-#\n-#   INPUT gives an alternative input source to AC_LINK_IFELSE.\n-#\n-#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n-#   macro in sync with AX_CHECK_{PREPROC,COMPILE}_FLAG.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n-#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n-#\n-#   This program is free software: you can redistribute it and/or modify it\n-#   under the terms of the GNU General Public License as published by the\n-#   Free Software Foundation, either version 3 of the License, or (at your\n-#   option) any later version.\n-#\n-#   This program is distributed in the hope that it will be useful, but\n-#   WITHOUT ANY WARRANTY; without even the implied warranty of\n-#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n-#   Public License for more details.\n-#\n-#   You should have received a copy of the GNU General Public License along\n-#   with this program. If not, see <http://www.gnu.org/licenses/>.\n-#\n-#   As a special exception, the respective Autoconf Macro's copyright owner\n-#   gives unlimited permission to copy, distribute and modify the configure\n-#   scripts that are the output of Autoconf when processing the Macro. You\n-#   need not follow the terms of the GNU General Public License when using\n-#   or distributing such scripts, even though portions of the text of the\n-#   Macro appear in them. The GNU General Public License (GPL) does govern\n-#   all other use of the material that constitutes the Autoconf Macro.\n-#\n-#   This special exception to the GPL applies to versions of the Autoconf\n-#   Macro released by the Autoconf Archive. When you make and distribute a\n-#   modified version of the Autoconf Macro, you may extend this special\n-#   exception to the GPL to apply to your modified version as well.\n-\n-#serial 4\n-\n-AC_DEFUN([AX_CHECK_LINK_FLAG],\n-[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF\n-AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_ldflags_$4_$1])dnl\n-AC_CACHE_CHECK([whether the linker accepts $1], CACHEVAR, [\n-  ax_check_save_flags=$LDFLAGS\n-  LDFLAGS=\"$LDFLAGS $4 $1\"\n-  AC_LINK_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],\n-    [AS_VAR_SET(CACHEVAR,[yes])],\n-    [AS_VAR_SET(CACHEVAR,[no])])\n-  LDFLAGS=$ax_check_save_flags])\n-AS_VAR_IF(CACHEVAR,yes,\n-  [m4_default([$2], :)],\n-  [m4_default([$3], :)])\n-AS_VAR_POPDEF([CACHEVAR])dnl\n-])dnl AX_CHECK_LINK_FLAGS"
      },
      {
        "sha": "ca1d5ee2b6d1ae107504d4ab433bc5f6fd629f61",
        "filename": "build-aux/m4/ax_check_preproc_flag.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 74,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/ax_check_preproc_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/ax_check_preproc_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_preproc_flag.m4?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,74 +0,0 @@\n-# ===========================================================================\n-#   http://www.gnu.org/software/autoconf-archive/ax_check_preproc_flag.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_CHECK_PREPROC_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])\n-#\n-# DESCRIPTION\n-#\n-#   Check whether the given FLAG works with the current language's\n-#   preprocessor or gives an error.  (Warnings, however, are ignored)\n-#\n-#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n-#   success/failure.\n-#\n-#   If EXTRA-FLAGS is defined, it is added to the preprocessor's default\n-#   flags when the check is done.  The check is thus made with the flags:\n-#   \"CPPFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to force the\n-#   preprocessor to issue an error when a bad flag is given.\n-#\n-#   INPUT gives an alternative input source to AC_PREPROC_IFELSE.\n-#\n-#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n-#   macro in sync with AX_CHECK_{COMPILE,LINK}_FLAG.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n-#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n-#\n-#   This program is free software: you can redistribute it and/or modify it\n-#   under the terms of the GNU General Public License as published by the\n-#   Free Software Foundation, either version 3 of the License, or (at your\n-#   option) any later version.\n-#\n-#   This program is distributed in the hope that it will be useful, but\n-#   WITHOUT ANY WARRANTY; without even the implied warranty of\n-#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n-#   Public License for more details.\n-#\n-#   You should have received a copy of the GNU General Public License along\n-#   with this program. If not, see <http://www.gnu.org/licenses/>.\n-#\n-#   As a special exception, the respective Autoconf Macro's copyright owner\n-#   gives unlimited permission to copy, distribute and modify the configure\n-#   scripts that are the output of Autoconf when processing the Macro. You\n-#   need not follow the terms of the GNU General Public License when using\n-#   or distributing such scripts, even though portions of the text of the\n-#   Macro appear in them. The GNU General Public License (GPL) does govern\n-#   all other use of the material that constitutes the Autoconf Macro.\n-#\n-#   This special exception to the GPL applies to versions of the Autoconf\n-#   Macro released by the Autoconf Archive. When you make and distribute a\n-#   modified version of the Autoconf Macro, you may extend this special\n-#   exception to the GPL to apply to your modified version as well.\n-\n-#serial 4\n-\n-AC_DEFUN([AX_CHECK_PREPROC_FLAG],\n-[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF\n-AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]cppflags_$4_$1])dnl\n-AC_CACHE_CHECK([whether _AC_LANG preprocessor accepts $1], CACHEVAR, [\n-  ax_check_save_flags=$CPPFLAGS\n-  CPPFLAGS=\"$CPPFLAGS $4 $1\"\n-  AC_PREPROC_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],\n-    [AS_VAR_SET(CACHEVAR,[yes])],\n-    [AS_VAR_SET(CACHEVAR,[no])])\n-  CPPFLAGS=$ax_check_save_flags])\n-AS_VAR_IF(CACHEVAR,yes,\n-  [m4_default([$2], :)],\n-  [m4_default([$3], :)])\n-AS_VAR_POPDEF([CACHEVAR])dnl\n-])dnl AX_CHECK_PREPROC_FLAGS"
      },
      {
        "sha": "f147cee3b117f80b22544976385e267b26f46dd9",
        "filename": "build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 568,
        "changes": 568,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_cxx_compile_stdcxx.m4?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,568 +0,0 @@\n-# ===========================================================================\n-#   http://www.gnu.org/software/autoconf-archive/ax_cxx_compile_stdcxx.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_CXX_COMPILE_STDCXX(VERSION, [ext|noext], [mandatory|optional])\n-#\n-# DESCRIPTION\n-#\n-#   Check for baseline language coverage in the compiler for the specified\n-#   version of the C++ standard.  If necessary, add switches to CXX and\n-#   CXXCPP to enable support.  VERSION may be '11' (for the C++11 standard)\n-#   or '14' (for the C++14 standard).\n-#\n-#   The second argument, if specified, indicates whether you insist on an\n-#   extended mode (e.g. -std=gnu++11) or a strict conformance mode (e.g.\n-#   -std=c++11).  If neither is specified, you get whatever works, with\n-#   preference for an extended mode.\n-#\n-#   The third argument, if specified 'mandatory' or if left unspecified,\n-#   indicates that baseline support for the specified C++ standard is\n-#   required and that the macro should error out if no mode with that\n-#   support is found.  If specified 'optional', then configuration proceeds\n-#   regardless, after defining HAVE_CXX${VERSION} if and only if a\n-#   supporting mode is found.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Benjamin Kosnik <bkoz@redhat.com>\n-#   Copyright (c) 2012 Zack Weinberg <zackw@panix.com>\n-#   Copyright (c) 2013 Roy Stogner <roystgnr@ices.utexas.edu>\n-#   Copyright (c) 2014, 2015 Google Inc.; contributed by Alexey Sokolov <sokolov@google.com>\n-#   Copyright (c) 2015 Paul Norman <penorman@mac.com>\n-#   Copyright (c) 2015 Moritz Klammler <moritz@klammler.eu>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved.  This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 4\n-\n-dnl  This macro is based on the code from the AX_CXX_COMPILE_STDCXX_11 macro\n-dnl  (serial version number 13).\n-\n-AC_DEFUN([AX_CXX_COMPILE_STDCXX], [dnl\n-  m4_if([$1], [11], [],\n-        [$1], [14], [],\n-        [$1], [17], [m4_fatal([support for C++17 not yet implemented in AX_CXX_COMPILE_STDCXX])],\n-        [m4_fatal([invalid first argument `$1' to AX_CXX_COMPILE_STDCXX])])dnl\n-  m4_if([$2], [], [],\n-        [$2], [ext], [],\n-        [$2], [noext], [],\n-        [m4_fatal([invalid second argument `$2' to AX_CXX_COMPILE_STDCXX])])dnl\n-  m4_if([$3], [], [ax_cxx_compile_cxx$1_required=true],\n-        [$3], [mandatory], [ax_cxx_compile_cxx$1_required=true],\n-        [$3], [optional], [ax_cxx_compile_cxx$1_required=false],\n-        [m4_fatal([invalid third argument `$3' to AX_CXX_COMPILE_STDCXX])])\n-  m4_if([$4], [], [ax_cxx_compile_cxx$1_try_default=true],\n-        [$4], [default], [ax_cxx_compile_cxx$1_try_default=true],\n-        [$4], [nodefault], [ax_cxx_compile_cxx$1_try_default=false],\n-        [m4_fatal([invalid fourth argument `$4' to AX_CXX_COMPILE_STDCXX])])\n-  AC_LANG_PUSH([C++])dnl\n-  ac_success=no\n-\n-  m4_if([$4], [nodefault], [], [dnl\n-  AC_CACHE_CHECK(whether $CXX supports C++$1 features by default,\n-  ax_cv_cxx_compile_cxx$1,\n-  [AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],\n-    [ax_cv_cxx_compile_cxx$1=yes],\n-    [ax_cv_cxx_compile_cxx$1=no])])\n-  if test x$ax_cv_cxx_compile_cxx$1 = xyes; then\n-    ac_success=yes\n-  fi])\n-\n-  m4_if([$2], [noext], [], [dnl\n-  if test x$ac_success = xno; then\n-    for switch in -std=gnu++$1 -std=gnu++0x; do\n-      cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])\n-      AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,\n-                     $cachevar,\n-        [ac_save_CXX=\"$CXX\"\n-         CXX=\"$CXX $switch\"\n-         AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],\n-          [eval $cachevar=yes],\n-          [eval $cachevar=no])\n-         CXX=\"$ac_save_CXX\"])\n-      if eval test x\\$$cachevar = xyes; then\n-        CXX=\"$CXX $switch\"\n-        if test -n \"$CXXCPP\" ; then\n-          CXXCPP=\"$CXXCPP $switch\"\n-        fi\n-        ac_success=yes\n-        break\n-      fi\n-    done\n-  fi])\n-\n-  m4_if([$2], [ext], [], [dnl\n-  if test x$ac_success = xno; then\n-    dnl HP's aCC needs +std=c++11 according to:\n-    dnl http://h21007.www2.hp.com/portal/download/files/unprot/aCxx/PDF_Release_Notes/769149-001.pdf\n-    dnl Cray's crayCC needs \"-h std=c++11\"\n-    for switch in -std=c++$1 -std=c++0x +std=c++$1 \"-h std=c++$1\"; do\n-      cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])\n-      AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,\n-                     $cachevar,\n-        [ac_save_CXX=\"$CXX\"\n-         CXX=\"$CXX $switch\"\n-         AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],\n-          [eval $cachevar=yes],\n-          [eval $cachevar=no])\n-         CXX=\"$ac_save_CXX\"])\n-      if eval test x\\$$cachevar = xyes; then\n-        CXX=\"$CXX $switch\"\n-        if test -n \"$CXXCPP\" ; then\n-          CXXCPP=\"$CXXCPP $switch\"\n-        fi\n-        ac_success=yes\n-        break\n-      fi\n-    done\n-  fi])\n-  AC_LANG_POP([C++])\n-  if test x$ax_cxx_compile_cxx$1_required = xtrue; then\n-    if test x$ac_success = xno; then\n-      AC_MSG_ERROR([*** A compiler with support for C++$1 language features is required.])\n-    fi\n-  fi\n-  if test x$ac_success = xno; then\n-    HAVE_CXX$1=0\n-    AC_MSG_NOTICE([No compiler with C++$1 support was found])\n-  else\n-    HAVE_CXX$1=1\n-    AC_DEFINE(HAVE_CXX$1,1,\n-              [define if the compiler supports basic C++$1 syntax])\n-  fi\n-  AC_SUBST(HAVE_CXX$1)\n-])\n-\n-\n-dnl  Test body for checking C++11 support\n-\n-m4_define([_AX_CXX_COMPILE_STDCXX_testbody_11],\n-  _AX_CXX_COMPILE_STDCXX_testbody_new_in_11\n-)\n-\n-\n-dnl  Test body for checking C++14 support\n-\n-m4_define([_AX_CXX_COMPILE_STDCXX_testbody_14],\n-  _AX_CXX_COMPILE_STDCXX_testbody_new_in_11\n-  _AX_CXX_COMPILE_STDCXX_testbody_new_in_14\n-)\n-\n-\n-dnl  Tests for new features in C++11\n-\n-m4_define([_AX_CXX_COMPILE_STDCXX_testbody_new_in_11], [[\n-\n-// If the compiler admits that it is not ready for C++11, why torture it?\n-// Hopefully, this will speed up the test.\n-\n-#ifndef __cplusplus\n-\n-#error \"This is not a C++ compiler\"\n-\n-#elif __cplusplus < 201103L\n-\n-#error \"This is not a C++11 compiler\"\n-\n-#else\n-\n-namespace cxx11\n-{\n-\n-  namespace test_static_assert\n-  {\n-\n-    template <typename T>\n-    struct check\n-    {\n-      static_assert(sizeof(int) <= sizeof(T), \"not big enough\");\n-    };\n-\n-  }\n-\n-  namespace test_final_override\n-  {\n-\n-    struct Base\n-    {\n-      virtual void f() {}\n-    };\n-\n-    struct Derived : public Base\n-    {\n-      virtual void f() override {}\n-    };\n-\n-  }\n-\n-  namespace test_double_right_angle_brackets\n-  {\n-\n-    template < typename T >\n-    struct check {};\n-\n-    typedef check<void> single_type;\n-    typedef check<check<void>> double_type;\n-    typedef check<check<check<void>>> triple_type;\n-    typedef check<check<check<check<void>>>> quadruple_type;\n-\n-  }\n-\n-  namespace test_decltype\n-  {\n-\n-    int\n-    f()\n-    {\n-      int a = 1;\n-      decltype(a) b = 2;\n-      return a + b;\n-    }\n-\n-  }\n-\n-  namespace test_type_deduction\n-  {\n-\n-    template < typename T1, typename T2 >\n-    struct is_same\n-    {\n-      static const bool value = false;\n-    };\n-\n-    template < typename T >\n-    struct is_same<T, T>\n-    {\n-      static const bool value = true;\n-    };\n-\n-    template < typename T1, typename T2 >\n-    auto\n-    add(T1 a1, T2 a2) -> decltype(a1 + a2)\n-    {\n-      return a1 + a2;\n-    }\n-\n-    int\n-    test(const int c, volatile int v)\n-    {\n-      static_assert(is_same<int, decltype(0)>::value == true, \"\");\n-      static_assert(is_same<int, decltype(c)>::value == false, \"\");\n-      static_assert(is_same<int, decltype(v)>::value == false, \"\");\n-      auto ac = c;\n-      auto av = v;\n-      auto sumi = ac + av + 'x';\n-      auto sumf = ac + av + 1.0;\n-      static_assert(is_same<int, decltype(ac)>::value == true, \"\");\n-      static_assert(is_same<int, decltype(av)>::value == true, \"\");\n-      static_assert(is_same<int, decltype(sumi)>::value == true, \"\");\n-      static_assert(is_same<int, decltype(sumf)>::value == false, \"\");\n-      static_assert(is_same<int, decltype(add(c, v))>::value == true, \"\");\n-      return (sumf > 0.0) ? sumi : add(c, v);\n-    }\n-\n-  }\n-\n-  namespace test_noexcept\n-  {\n-\n-    int f() { return 0; }\n-    int g() noexcept { return 0; }\n-\n-    static_assert(noexcept(f()) == false, \"\");\n-    static_assert(noexcept(g()) == true, \"\");\n-\n-  }\n-\n-  namespace test_constexpr\n-  {\n-\n-    template < typename CharT >\n-    unsigned long constexpr\n-    strlen_c_r(const CharT *const s, const unsigned long acc) noexcept\n-    {\n-      return *s ? strlen_c_r(s + 1, acc + 1) : acc;\n-    }\n-\n-    template < typename CharT >\n-    unsigned long constexpr\n-    strlen_c(const CharT *const s) noexcept\n-    {\n-      return strlen_c_r(s, 0UL);\n-    }\n-\n-    static_assert(strlen_c(\"\") == 0UL, \"\");\n-    static_assert(strlen_c(\"1\") == 1UL, \"\");\n-    static_assert(strlen_c(\"example\") == 7UL, \"\");\n-    static_assert(strlen_c(\"another\\0example\") == 7UL, \"\");\n-\n-  }\n-\n-  namespace test_rvalue_references\n-  {\n-\n-    template < int N >\n-    struct answer\n-    {\n-      static constexpr int value = N;\n-    };\n-\n-    answer<1> f(int&)       { return answer<1>(); }\n-    answer<2> f(const int&) { return answer<2>(); }\n-    answer<3> f(int&&)      { return answer<3>(); }\n-\n-    void\n-    test()\n-    {\n-      int i = 0;\n-      const int c = 0;\n-      static_assert(decltype(f(i))::value == 1, \"\");\n-      static_assert(decltype(f(c))::value == 2, \"\");\n-      static_assert(decltype(f(0))::value == 3, \"\");\n-    }\n-\n-  }\n-\n-  namespace test_uniform_initialization\n-  {\n-\n-    struct test\n-    {\n-      static const int zero {};\n-      static const int one {1};\n-    };\n-\n-    static_assert(test::zero == 0, \"\");\n-    static_assert(test::one == 1, \"\");\n-\n-  }\n-\n-  namespace test_lambdas\n-  {\n-\n-    void\n-    test1()\n-    {\n-      auto lambda1 = [](){};\n-      auto lambda2 = lambda1;\n-      lambda1();\n-      lambda2();\n-    }\n-\n-    int\n-    test2()\n-    {\n-      auto a = [](int i, int j){ return i + j; }(1, 2);\n-      auto b = []() -> int { return '0'; }();\n-      auto c = [=](){ return a + b; }();\n-      auto d = [&](){ return c; }();\n-      auto e = [a, &b](int x) mutable {\n-        const auto identity = [](int y){ return y; };\n-        for (auto i = 0; i < a; ++i)\n-          a += b--;\n-        return x + identity(a + b);\n-      }(0);\n-      return a + b + c + d + e;\n-    }\n-\n-    int\n-    test3()\n-    {\n-      const auto nullary = [](){ return 0; };\n-      const auto unary = [](int x){ return x; };\n-      using nullary_t = decltype(nullary);\n-      using unary_t = decltype(unary);\n-      const auto higher1st = [](nullary_t f){ return f(); };\n-      const auto higher2nd = [unary](nullary_t f1){\n-        return [unary, f1](unary_t f2){ return f2(unary(f1())); };\n-      };\n-      return higher1st(nullary) + higher2nd(nullary)(unary);\n-    }\n-\n-  }\n-\n-  namespace test_variadic_templates\n-  {\n-\n-    template <int...>\n-    struct sum;\n-\n-    template <int N0, int... N1toN>\n-    struct sum<N0, N1toN...>\n-    {\n-      static constexpr auto value = N0 + sum<N1toN...>::value;\n-    };\n-\n-    template <>\n-    struct sum<>\n-    {\n-      static constexpr auto value = 0;\n-    };\n-\n-    static_assert(sum<>::value == 0, \"\");\n-    static_assert(sum<1>::value == 1, \"\");\n-    static_assert(sum<23>::value == 23, \"\");\n-    static_assert(sum<1, 2>::value == 3, \"\");\n-    static_assert(sum<5, 5, 11>::value == 21, \"\");\n-    static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, \"\");\n-\n-  }\n-\n-  // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae\n-  // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function\n-  // because of this.\n-  namespace test_template_alias_sfinae\n-  {\n-\n-    struct foo {};\n-\n-    template<typename T>\n-    using member = typename T::member_type;\n-\n-    template<typename T>\n-    void func(...) {}\n-\n-    template<typename T>\n-    void func(member<T>*) {}\n-\n-    void test();\n-\n-    void test() { func<foo>(0); }\n-\n-  }\n-\n-}  // namespace cxx11\n-\n-#endif  // __cplusplus >= 201103L\n-\n-]])\n-\n-\n-dnl  Tests for new features in C++14\n-\n-m4_define([_AX_CXX_COMPILE_STDCXX_testbody_new_in_14], [[\n-\n-// If the compiler admits that it is not ready for C++14, why torture it?\n-// Hopefully, this will speed up the test.\n-\n-#ifndef __cplusplus\n-\n-#error \"This is not a C++ compiler\"\n-\n-#elif __cplusplus < 201402L\n-\n-#error \"This is not a C++14 compiler\"\n-\n-#else\n-\n-namespace cxx14\n-{\n-\n-  namespace test_polymorphic_lambdas\n-  {\n-\n-    int\n-    test()\n-    {\n-      const auto lambda = [](auto&&... args){\n-        const auto istiny = [](auto x){\n-          return (sizeof(x) == 1UL) ? 1 : 0;\n-        };\n-        const int aretiny[] = { istiny(args)... };\n-        return aretiny[0];\n-      };\n-      return lambda(1, 1L, 1.0f, '1');\n-    }\n-\n-  }\n-\n-  namespace test_binary_literals\n-  {\n-\n-    constexpr auto ivii = 0b0000000000101010;\n-    static_assert(ivii == 42, \"wrong value\");\n-\n-  }\n-\n-  namespace test_generalized_constexpr\n-  {\n-\n-    template < typename CharT >\n-    constexpr unsigned long\n-    strlen_c(const CharT *const s) noexcept\n-    {\n-      auto length = 0UL;\n-      for (auto p = s; *p; ++p)\n-        ++length;\n-      return length;\n-    }\n-\n-    static_assert(strlen_c(\"\") == 0UL, \"\");\n-    static_assert(strlen_c(\"x\") == 1UL, \"\");\n-    static_assert(strlen_c(\"test\") == 4UL, \"\");\n-    static_assert(strlen_c(\"another\\0test\") == 7UL, \"\");\n-\n-  }\n-\n-  namespace test_lambda_init_capture\n-  {\n-\n-    int\n-    test()\n-    {\n-      auto x = 0;\n-      const auto lambda1 = [a = x](int b){ return a + b; };\n-      const auto lambda2 = [a = lambda1(x)](){ return a; };\n-      return lambda2();\n-    }\n-\n-  }\n-\n-  namespace test_digit_seperators\n-  {\n-\n-    constexpr auto ten_million = 100'000'000;\n-    static_assert(ten_million == 100000000, \"\");\n-\n-  }\n-\n-  namespace test_return_type_deduction\n-  {\n-\n-    auto f(int& x) { return x; }\n-    decltype(auto) g(int& x) { return x; }\n-\n-    template < typename T1, typename T2 >\n-    struct is_same\n-    {\n-      static constexpr auto value = false;\n-    };\n-\n-    template < typename T >\n-    struct is_same<T, T>\n-    {\n-      static constexpr auto value = true;\n-    };\n-\n-    int\n-    test()\n-    {\n-      auto x = 0;\n-      static_assert(is_same<int, decltype(f(x))>::value, \"\");\n-      static_assert(is_same<int&, decltype(g(x))>::value, \"\");\n-      return x;\n-    }\n-\n-  }\n-\n-}  // namespace cxx14\n-\n-#endif  // __cplusplus >= 201402L\n-\n-]])"
      },
      {
        "sha": "c788ca9bd435fbfe4e1642281aabd7f9492786ff",
        "filename": "build-aux/m4/ax_gcc_func_attribute.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 223,
        "changes": 223,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/ax_gcc_func_attribute.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/ax_gcc_func_attribute.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_gcc_func_attribute.m4?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,223 +0,0 @@\n-# ===========================================================================\n-#   http://www.gnu.org/software/autoconf-archive/ax_gcc_func_attribute.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_GCC_FUNC_ATTRIBUTE(ATTRIBUTE)\n-#\n-# DESCRIPTION\n-#\n-#   This macro checks if the compiler supports one of GCC's function\n-#   attributes; many other compilers also provide function attributes with\n-#   the same syntax. Compiler warnings are used to detect supported\n-#   attributes as unsupported ones are ignored by default so quieting\n-#   warnings when using this macro will yield false positives.\n-#\n-#   The ATTRIBUTE parameter holds the name of the attribute to be checked.\n-#\n-#   If ATTRIBUTE is supported define HAVE_FUNC_ATTRIBUTE_<ATTRIBUTE>.\n-#\n-#   The macro caches its result in the ax_cv_have_func_attribute_<attribute>\n-#   variable.\n-#\n-#   The macro currently supports the following function attributes:\n-#\n-#    alias\n-#    aligned\n-#    alloc_size\n-#    always_inline\n-#    artificial\n-#    cold\n-#    const\n-#    constructor\n-#    constructor_priority for constructor attribute with priority\n-#    deprecated\n-#    destructor\n-#    dllexport\n-#    dllimport\n-#    error\n-#    externally_visible\n-#    flatten\n-#    format\n-#    format_arg\n-#    gnu_inline\n-#    hot\n-#    ifunc\n-#    leaf\n-#    malloc\n-#    noclone\n-#    noinline\n-#    nonnull\n-#    noreturn\n-#    nothrow\n-#    optimize\n-#    pure\n-#    unused\n-#    used\n-#    visibility\n-#    warning\n-#    warn_unused_result\n-#    weak\n-#    weakref\n-#\n-#   Unsuppored function attributes will be tested with a prototype returning\n-#   an int and not accepting any arguments and the result of the check might\n-#   be wrong or meaningless so use with care.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2013 Gabriele Svelto <gabriele.svelto@gmail.com>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved.  This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 3\n-\n-AC_DEFUN([AX_GCC_FUNC_ATTRIBUTE], [\n-    AS_VAR_PUSHDEF([ac_var], [ax_cv_have_func_attribute_$1])\n-\n-    AC_CACHE_CHECK([for __attribute__(($1))], [ac_var], [\n-        AC_LINK_IFELSE([AC_LANG_PROGRAM([\n-            m4_case([$1],\n-                [alias], [\n-                    int foo( void ) { return 0; }\n-                    int bar( void ) __attribute__(($1(\"foo\")));\n-                ],\n-                [aligned], [\n-                    int foo( void ) __attribute__(($1(32)));\n-                ],\n-                [alloc_size], [\n-                    void *foo(int a) __attribute__(($1(1)));\n-                ],\n-                [always_inline], [\n-                    inline __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [artificial], [\n-                    inline __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [cold], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [const], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [constructor_priority], [\n-                    int foo( void ) __attribute__((__constructor__(65535/2)));\n-                ],\n-                [constructor], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [deprecated], [\n-                    int foo( void ) __attribute__(($1(\"\")));\n-                ],\n-                [destructor], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [dllexport], [\n-                    __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [dllimport], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [error], [\n-                    int foo( void ) __attribute__(($1(\"\")));\n-                ],\n-                [externally_visible], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [flatten], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [format], [\n-                    int foo(const char *p, ...) __attribute__(($1(printf, 1, 2)));\n-                ],\n-                [format_arg], [\n-                    char *foo(const char *p) __attribute__(($1(1)));\n-                ],\n-                [gnu_inline], [\n-                    inline __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [hot], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [ifunc], [\n-                    int my_foo( void ) { return 0; }\n-                    static int (*resolve_foo(void))(void) { return my_foo; }\n-                    int foo( void ) __attribute__(($1(\"resolve_foo\")));\n-                ],\n-                [leaf], [\n-                    __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [malloc], [\n-                    void *foo( void ) __attribute__(($1));\n-                ],\n-                [noclone], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [noinline], [\n-                    __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [nonnull], [\n-                    int foo(char *p) __attribute__(($1(1)));\n-                ],\n-                [noreturn], [\n-                    void foo( void ) __attribute__(($1));\n-                ],\n-                [nothrow], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [optimize], [\n-                    __attribute__(($1(3))) int foo( void ) { return 0; }\n-                ],\n-                [pure], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [unused], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [used], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [visibility], [\n-                    int foo_def( void ) __attribute__(($1(\"default\")));\n-                    int foo_hid( void ) __attribute__(($1(\"hidden\")));\n-                    int foo_int( void ) __attribute__(($1(\"internal\")));\n-                    int foo_pro( void ) __attribute__(($1(\"protected\")));\n-                ],\n-                [warning], [\n-                    int foo( void ) __attribute__(($1(\"\")));\n-                ],\n-                [warn_unused_result], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [weak], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [weakref], [\n-                    static int foo( void ) { return 0; }\n-                    static int bar( void ) __attribute__(($1(\"foo\")));\n-                ],\n-                [\n-                 m4_warn([syntax], [Unsupported attribute $1, the test may fail])\n-                 int foo( void ) __attribute__(($1));\n-                ]\n-            )], [])\n-            ],\n-            dnl GCC doesn't exit with an error if an unknown attribute is\n-            dnl provided but only outputs a warning, so accept the attribute\n-            dnl only if no warning were issued.\n-            [AS_IF([test -s conftest.err],\n-                [AS_VAR_SET([ac_var], [no])],\n-                [AS_VAR_SET([ac_var], [yes])])],\n-            [AS_VAR_SET([ac_var], [no])])\n-    ])\n-\n-    AS_IF([test yes = AS_VAR_GET([ac_var])],\n-        [AC_DEFINE_UNQUOTED(AS_TR_CPP(HAVE_FUNC_ATTRIBUTE_$1), 1,\n-            [Define to 1 if the system has the `$1' function attribute])], [])\n-\n-    AS_VAR_POPDEF([ac_var])\n-])"
      },
      {
        "sha": "4c4051ea376f720faf21a4705c66604fe444c958",
        "filename": "build-aux/m4/ax_pthread.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 485,
        "changes": 485,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/ax_pthread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/ax_pthread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_pthread.m4?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,485 +0,0 @@\n-# ===========================================================================\n-#        http://www.gnu.org/software/autoconf-archive/ax_pthread.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_PTHREAD([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])\n-#\n-# DESCRIPTION\n-#\n-#   This macro figures out how to build C programs using POSIX threads. It\n-#   sets the PTHREAD_LIBS output variable to the threads library and linker\n-#   flags, and the PTHREAD_CFLAGS output variable to any special C compiler\n-#   flags that are needed. (The user can also force certain compiler\n-#   flags/libs to be tested by setting these environment variables.)\n-#\n-#   Also sets PTHREAD_CC to any special C compiler that is needed for\n-#   multi-threaded programs (defaults to the value of CC otherwise). (This\n-#   is necessary on AIX to use the special cc_r compiler alias.)\n-#\n-#   NOTE: You are assumed to not only compile your program with these flags,\n-#   but also to link with them as well. For example, you might link with\n-#   $PTHREAD_CC $CFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n-#\n-#   If you are only building threaded programs, you may wish to use these\n-#   variables in your default LIBS, CFLAGS, and CC:\n-#\n-#     LIBS=\"$PTHREAD_LIBS $LIBS\"\n-#     CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n-#     CC=\"$PTHREAD_CC\"\n-#\n-#   In addition, if the PTHREAD_CREATE_JOINABLE thread-attribute constant\n-#   has a nonstandard name, this macro defines PTHREAD_CREATE_JOINABLE to\n-#   that name (e.g. PTHREAD_CREATE_UNDETACHED on AIX).\n-#\n-#   Also HAVE_PTHREAD_PRIO_INHERIT is defined if pthread is found and the\n-#   PTHREAD_PRIO_INHERIT symbol is defined when compiling with\n-#   PTHREAD_CFLAGS.\n-#\n-#   ACTION-IF-FOUND is a list of shell commands to run if a threads library\n-#   is found, and ACTION-IF-NOT-FOUND is a list of commands to run it if it\n-#   is not found. If ACTION-IF-FOUND is not specified, the default action\n-#   will define HAVE_PTHREAD.\n-#\n-#   Please let the authors know if this macro fails on any platform, or if\n-#   you have any other suggestions or comments. This macro was based on work\n-#   by SGJ on autoconf scripts for FFTW (http://www.fftw.org/) (with help\n-#   from M. Frigo), as well as ac_pthread and hb_pthread macros posted by\n-#   Alejandro Forero Cuervo to the autoconf macro repository. We are also\n-#   grateful for the helpful feedback of numerous users.\n-#\n-#   Updated for Autoconf 2.68 by Daniel Richard G.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Steven G. Johnson <stevenj@alum.mit.edu>\n-#   Copyright (c) 2011 Daniel Richard G. <skunk@iSKUNK.ORG>\n-#\n-#   This program is free software: you can redistribute it and/or modify it\n-#   under the terms of the GNU General Public License as published by the\n-#   Free Software Foundation, either version 3 of the License, or (at your\n-#   option) any later version.\n-#\n-#   This program is distributed in the hope that it will be useful, but\n-#   WITHOUT ANY WARRANTY; without even the implied warranty of\n-#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n-#   Public License for more details.\n-#\n-#   You should have received a copy of the GNU General Public License along\n-#   with this program. If not, see <http://www.gnu.org/licenses/>.\n-#\n-#   As a special exception, the respective Autoconf Macro's copyright owner\n-#   gives unlimited permission to copy, distribute and modify the configure\n-#   scripts that are the output of Autoconf when processing the Macro. You\n-#   need not follow the terms of the GNU General Public License when using\n-#   or distributing such scripts, even though portions of the text of the\n-#   Macro appear in them. The GNU General Public License (GPL) does govern\n-#   all other use of the material that constitutes the Autoconf Macro.\n-#\n-#   This special exception to the GPL applies to versions of the Autoconf\n-#   Macro released by the Autoconf Archive. When you make and distribute a\n-#   modified version of the Autoconf Macro, you may extend this special\n-#   exception to the GPL to apply to your modified version as well.\n-\n-#serial 23\n-\n-AU_ALIAS([ACX_PTHREAD], [AX_PTHREAD])\n-AC_DEFUN([AX_PTHREAD], [\n-AC_REQUIRE([AC_CANONICAL_HOST])\n-AC_REQUIRE([AC_PROG_CC])\n-AC_REQUIRE([AC_PROG_SED])\n-AC_LANG_PUSH([C])\n-ax_pthread_ok=no\n-\n-# We used to check for pthread.h first, but this fails if pthread.h\n-# requires special compiler flags (e.g. on Tru64 or Sequent).\n-# It gets checked for in the link test anyway.\n-\n-# First of all, check if the user has set any of the PTHREAD_LIBS,\n-# etcetera environment variables, and if threads linking works using\n-# them:\n-if test \"x$PTHREAD_CFLAGS$PTHREAD_LIBS\" != \"x\"; then\n-        ax_pthread_save_CC=\"$CC\"\n-        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n-        ax_pthread_save_LIBS=\"$LIBS\"\n-        AS_IF([test \"x$PTHREAD_CC\" != \"x\"], [CC=\"$PTHREAD_CC\"])\n-        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n-        LIBS=\"$PTHREAD_LIBS $LIBS\"\n-        AC_MSG_CHECKING([for pthread_join using $CC $PTHREAD_CFLAGS $PTHREAD_LIBS])\n-        AC_LINK_IFELSE([AC_LANG_CALL([], [pthread_join])], [ax_pthread_ok=yes])\n-        AC_MSG_RESULT([$ax_pthread_ok])\n-        if test \"x$ax_pthread_ok\" = \"xno\"; then\n-                PTHREAD_LIBS=\"\"\n-                PTHREAD_CFLAGS=\"\"\n-        fi\n-        CC=\"$ax_pthread_save_CC\"\n-        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n-        LIBS=\"$ax_pthread_save_LIBS\"\n-fi\n-\n-# We must check for the threads library under a number of different\n-# names; the ordering is very important because some systems\n-# (e.g. DEC) have both -lpthread and -lpthreads, where one of the\n-# libraries is broken (non-POSIX).\n-\n-# Create a list of thread flags to try.  Items starting with a \"-\" are\n-# C compiler flags, and other items are library names, except for \"none\"\n-# which indicates that we try without any flags at all, and \"pthread-config\"\n-# which is a program returning the flags for the Pth emulation library.\n-\n-ax_pthread_flags=\"pthreads none -Kthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n-\n-# The ordering *is* (sometimes) important.  Some notes on the\n-# individual items follow:\n-\n-# pthreads: AIX (must check this before -lpthread)\n-# none: in case threads are in libc; should be tried before -Kthread and\n-#       other compiler flags to prevent continual compiler warnings\n-# -Kthread: Sequent (threads in libc, but -Kthread needed for pthread.h)\n-# -pthread: Linux/gcc (kernel threads), BSD/gcc (userland threads), Tru64\n-#           (Note: HP C rejects this with \"bad form for `-t' option\")\n-# -pthreads: Solaris/gcc (Note: HP C also rejects)\n-# -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it\n-#      doesn't hurt to check since this sometimes defines pthreads and\n-#      -D_REENTRANT too), HP C (must be checked before -lpthread, which\n-#      is present but should not be used directly; and before -mthreads,\n-#      because the compiler interprets this as \"-mt\" + \"-hreads\")\n-# -mthreads: Mingw32/gcc, Lynx/gcc\n-# pthread: Linux, etcetera\n-# --thread-safe: KAI C++\n-# pthread-config: use pthread-config program (for GNU Pth library)\n-\n-case $host_os in\n-\n-        freebsd*)\n-\n-        # -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)\n-        # lthread: LinuxThreads port on FreeBSD (also preferred to -pthread)\n-\n-        ax_pthread_flags=\"-kthread lthread $ax_pthread_flags\"\n-        ;;\n-\n-        hpux*)\n-\n-        # From the cc(1) man page: \"[-mt] Sets various -D flags to enable\n-        # multi-threading and also sets -lpthread.\"\n-\n-        ax_pthread_flags=\"-mt -pthread pthread $ax_pthread_flags\"\n-        ;;\n-\n-        openedition*)\n-\n-        # IBM z/OS requires a feature-test macro to be defined in order to\n-        # enable POSIX threads at all, so give the user a hint if this is\n-        # not set. (We don't define these ourselves, as they can affect\n-        # other portions of the system API in unpredictable ways.)\n-\n-        AC_EGREP_CPP([AX_PTHREAD_ZOS_MISSING],\n-            [\n-#            if !defined(_OPEN_THREADS) && !defined(_UNIX03_THREADS)\n-             AX_PTHREAD_ZOS_MISSING\n-#            endif\n-            ],\n-            [AC_MSG_WARN([IBM z/OS requires -D_OPEN_THREADS or -D_UNIX03_THREADS to enable pthreads support.])])\n-        ;;\n-\n-        solaris*)\n-\n-        # On Solaris (at least, for some versions), libc contains stubbed\n-        # (non-functional) versions of the pthreads routines, so link-based\n-        # tests will erroneously succeed. (N.B.: The stubs are missing\n-        # pthread_cleanup_push, or rather a function called by this macro,\n-        # so we could check for that, but who knows whether they'll stub\n-        # that too in a future libc.)  So we'll check first for the\n-        # standard Solaris way of linking pthreads (-mt -lpthread).\n-\n-        ax_pthread_flags=\"-mt,pthread pthread $ax_pthread_flags\"\n-        ;;\n-esac\n-\n-# GCC generally uses -pthread, or -pthreads on some platforms (e.g. SPARC)\n-\n-AS_IF([test \"x$GCC\" = \"xyes\"],\n-      [ax_pthread_flags=\"-pthread -pthreads $ax_pthread_flags\"])\n-\n-# The presence of a feature test macro requesting re-entrant function\n-# definitions is, on some systems, a strong hint that pthreads support is\n-# correctly enabled\n-\n-case $host_os in\n-        darwin* | hpux* | linux* | osf* | solaris*)\n-        ax_pthread_check_macro=\"_REENTRANT\"\n-        ;;\n-\n-        aix*)\n-        ax_pthread_check_macro=\"_THREAD_SAFE\"\n-        ;;\n-\n-        *)\n-        ax_pthread_check_macro=\"--\"\n-        ;;\n-esac\n-AS_IF([test \"x$ax_pthread_check_macro\" = \"x--\"],\n-      [ax_pthread_check_cond=0],\n-      [ax_pthread_check_cond=\"!defined($ax_pthread_check_macro)\"])\n-\n-# Are we compiling with Clang?\n-\n-AC_CACHE_CHECK([whether $CC is Clang],\n-    [ax_cv_PTHREAD_CLANG],\n-    [ax_cv_PTHREAD_CLANG=no\n-     # Note that Autoconf sets GCC=yes for Clang as well as GCC\n-     if test \"x$GCC\" = \"xyes\"; then\n-        AC_EGREP_CPP([AX_PTHREAD_CC_IS_CLANG],\n-            [/* Note: Clang 2.7 lacks __clang_[a-z]+__ */\n-#            if defined(__clang__) && defined(__llvm__)\n-             AX_PTHREAD_CC_IS_CLANG\n-#            endif\n-            ],\n-            [ax_cv_PTHREAD_CLANG=yes])\n-     fi\n-    ])\n-ax_pthread_clang=\"$ax_cv_PTHREAD_CLANG\"\n-\n-ax_pthread_clang_warning=no\n-\n-# Clang needs special handling, because older versions handle the -pthread\n-# option in a rather... idiosyncratic way\n-\n-if test \"x$ax_pthread_clang\" = \"xyes\"; then\n-\n-        # Clang takes -pthread; it has never supported any other flag\n-\n-        # (Note 1: This will need to be revisited if a system that Clang\n-        # supports has POSIX threads in a separate library.  This tends not\n-        # to be the way of modern systems, but it's conceivable.)\n-\n-        # (Note 2: On some systems, notably Darwin, -pthread is not needed\n-        # to get POSIX threads support; the API is always present and\n-        # active.  We could reasonably leave PTHREAD_CFLAGS empty.  But\n-        # -pthread does define _REENTRANT, and while the Darwin headers\n-        # ignore this macro, third-party headers might not.)\n-\n-        PTHREAD_CFLAGS=\"-pthread\"\n-        PTHREAD_LIBS=\n-\n-        ax_pthread_ok=yes\n-\n-        # However, older versions of Clang make a point of warning the user\n-        # that, in an invocation where only linking and no compilation is\n-        # taking place, the -pthread option has no effect (\"argument unused\n-        # during compilation\").  They expect -pthread to be passed in only\n-        # when source code is being compiled.\n-        #\n-        # Problem is, this is at odds with the way Automake and most other\n-        # C build frameworks function, which is that the same flags used in\n-        # compilation (CFLAGS) are also used in linking.  Many systems\n-        # supported by AX_PTHREAD require exactly this for POSIX threads\n-        # support, and in fact it is often not straightforward to specify a\n-        # flag that is used only in the compilation phase and not in\n-        # linking.  Such a scenario is extremely rare in practice.\n-        #\n-        # Even though use of the -pthread flag in linking would only print\n-        # a warning, this can be a nuisance for well-run software projects\n-        # that build with -Werror.  So if the active version of Clang has\n-        # this misfeature, we search for an option to squash it.\n-\n-        AC_CACHE_CHECK([whether Clang needs flag to prevent \"argument unused\" warning when linking with -pthread],\n-            [ax_cv_PTHREAD_CLANG_NO_WARN_FLAG],\n-            [ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=unknown\n-             # Create an alternate version of $ac_link that compiles and\n-             # links in two steps (.c -> .o, .o -> exe) instead of one\n-             # (.c -> exe), because the warning occurs only in the second\n-             # step\n-             ax_pthread_save_ac_link=\"$ac_link\"\n-             ax_pthread_sed='s/conftest\\.\\$ac_ext/conftest.$ac_objext/g'\n-             ax_pthread_link_step=`$as_echo \"$ac_link\" | sed \"$ax_pthread_sed\"`\n-             ax_pthread_2step_ac_link=\"($ac_compile) && (echo ==== >&5) && ($ax_pthread_link_step)\"\n-             ax_pthread_save_CFLAGS=\"$CFLAGS\"\n-             for ax_pthread_try in '' -Qunused-arguments -Wno-unused-command-line-argument unknown; do\n-                AS_IF([test \"x$ax_pthread_try\" = \"xunknown\"], [break])\n-                CFLAGS=\"-Werror -Wunknown-warning-option $ax_pthread_try -pthread $ax_pthread_save_CFLAGS\"\n-                ac_link=\"$ax_pthread_save_ac_link\"\n-                AC_LINK_IFELSE([AC_LANG_SOURCE([[int main(void){return 0;}]])],\n-                    [ac_link=\"$ax_pthread_2step_ac_link\"\n-                     AC_LINK_IFELSE([AC_LANG_SOURCE([[int main(void){return 0;}]])],\n-                         [break])\n-                    ])\n-             done\n-             ac_link=\"$ax_pthread_save_ac_link\"\n-             CFLAGS=\"$ax_pthread_save_CFLAGS\"\n-             AS_IF([test \"x$ax_pthread_try\" = \"x\"], [ax_pthread_try=no])\n-             ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=\"$ax_pthread_try\"\n-            ])\n-\n-        case \"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG\" in\n-                no | unknown) ;;\n-                *) PTHREAD_CFLAGS=\"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG $PTHREAD_CFLAGS\" ;;\n-        esac\n-\n-fi # $ax_pthread_clang = yes\n-\n-if test \"x$ax_pthread_ok\" = \"xno\"; then\n-for ax_pthread_try_flag in $ax_pthread_flags; do\n-\n-        case $ax_pthread_try_flag in\n-                none)\n-                AC_MSG_CHECKING([whether pthreads work without any flags])\n-                ;;\n-\n-                -mt,pthread)\n-                AC_MSG_CHECKING([whether pthreads work with -mt -lpthread])\n-                PTHREAD_CFLAGS=\"-mt\"\n-                PTHREAD_LIBS=\"-lpthread\"\n-                ;;\n-\n-                -*)\n-                AC_MSG_CHECKING([whether pthreads work with $ax_pthread_try_flag])\n-                PTHREAD_CFLAGS=\"$ax_pthread_try_flag\"\n-                ;;\n-\n-                pthread-config)\n-                AC_CHECK_PROG([ax_pthread_config], [pthread-config], [yes], [no])\n-                AS_IF([test \"x$ax_pthread_config\" = \"xno\"], [continue])\n-                PTHREAD_CFLAGS=\"`pthread-config --cflags`\"\n-                PTHREAD_LIBS=\"`pthread-config --ldflags` `pthread-config --libs`\"\n-                ;;\n-\n-                *)\n-                AC_MSG_CHECKING([for the pthreads library -l$ax_pthread_try_flag])\n-                PTHREAD_LIBS=\"-l$ax_pthread_try_flag\"\n-                ;;\n-        esac\n-\n-        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n-        ax_pthread_save_LIBS=\"$LIBS\"\n-        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n-        LIBS=\"$PTHREAD_LIBS $LIBS\"\n-\n-        # Check for various functions.  We must include pthread.h,\n-        # since some functions may be macros.  (On the Sequent, we\n-        # need a special flag -Kthread to make this header compile.)\n-        # We check for pthread_join because it is in -lpthread on IRIX\n-        # while pthread_create is in libc.  We check for pthread_attr_init\n-        # due to DEC craziness with -lpthreads.  We check for\n-        # pthread_cleanup_push because it is one of the few pthread\n-        # functions on Solaris that doesn't have a non-functional libc stub.\n-        # We try pthread_create on general principles.\n-\n-        AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>\n-#                       if $ax_pthread_check_cond\n-#                        error \"$ax_pthread_check_macro must be defined\"\n-#                       endif\n-                        static void routine(void *a) { a = 0; }\n-                        static void *start_routine(void *a) { return a; }],\n-                       [pthread_t th; pthread_attr_t attr;\n-                        pthread_create(&th, 0, start_routine, 0);\n-                        pthread_join(th, 0);\n-                        pthread_attr_init(&attr);\n-                        pthread_cleanup_push(routine, 0);\n-                        pthread_cleanup_pop(0) /* ; */])],\n-            [ax_pthread_ok=yes],\n-            [])\n-\n-        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n-        LIBS=\"$ax_pthread_save_LIBS\"\n-\n-        AC_MSG_RESULT([$ax_pthread_ok])\n-        AS_IF([test \"x$ax_pthread_ok\" = \"xyes\"], [break])\n-\n-        PTHREAD_LIBS=\"\"\n-        PTHREAD_CFLAGS=\"\"\n-done\n-fi\n-\n-# Various other checks:\n-if test \"x$ax_pthread_ok\" = \"xyes\"; then\n-        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n-        ax_pthread_save_LIBS=\"$LIBS\"\n-        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n-        LIBS=\"$PTHREAD_LIBS $LIBS\"\n-\n-        # Detect AIX lossage: JOINABLE attribute is called UNDETACHED.\n-        AC_CACHE_CHECK([for joinable pthread attribute],\n-            [ax_cv_PTHREAD_JOINABLE_ATTR],\n-            [ax_cv_PTHREAD_JOINABLE_ATTR=unknown\n-             for ax_pthread_attr in PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_UNDETACHED; do\n-                 AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>],\n-                                                 [int attr = $ax_pthread_attr; return attr /* ; */])],\n-                                [ax_cv_PTHREAD_JOINABLE_ATTR=$ax_pthread_attr; break],\n-                                [])\n-             done\n-            ])\n-        AS_IF([test \"x$ax_cv_PTHREAD_JOINABLE_ATTR\" != \"xunknown\" && \\\n-               test \"x$ax_cv_PTHREAD_JOINABLE_ATTR\" != \"xPTHREAD_CREATE_JOINABLE\" && \\\n-               test \"x$ax_pthread_joinable_attr_defined\" != \"xyes\"],\n-              [AC_DEFINE_UNQUOTED([PTHREAD_CREATE_JOINABLE],\n-                                  [$ax_cv_PTHREAD_JOINABLE_ATTR],\n-                                  [Define to necessary symbol if this constant\n-                                   uses a non-standard name on your system.])\n-               ax_pthread_joinable_attr_defined=yes\n-              ])\n-\n-        AC_CACHE_CHECK([whether more special flags are required for pthreads],\n-            [ax_cv_PTHREAD_SPECIAL_FLAGS],\n-            [ax_cv_PTHREAD_SPECIAL_FLAGS=no\n-             case $host_os in\n-             solaris*)\n-             ax_cv_PTHREAD_SPECIAL_FLAGS=\"-D_POSIX_PTHREAD_SEMANTICS\"\n-             ;;\n-             esac\n-            ])\n-        AS_IF([test \"x$ax_cv_PTHREAD_SPECIAL_FLAGS\" != \"xno\" && \\\n-               test \"x$ax_pthread_special_flags_added\" != \"xyes\"],\n-              [PTHREAD_CFLAGS=\"$ax_cv_PTHREAD_SPECIAL_FLAGS $PTHREAD_CFLAGS\"\n-               ax_pthread_special_flags_added=yes])\n-\n-        AC_CACHE_CHECK([for PTHREAD_PRIO_INHERIT],\n-            [ax_cv_PTHREAD_PRIO_INHERIT],\n-            [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <pthread.h>]],\n-                                             [[int i = PTHREAD_PRIO_INHERIT;]])],\n-                            [ax_cv_PTHREAD_PRIO_INHERIT=yes],\n-                            [ax_cv_PTHREAD_PRIO_INHERIT=no])\n-            ])\n-        AS_IF([test \"x$ax_cv_PTHREAD_PRIO_INHERIT\" = \"xyes\" && \\\n-               test \"x$ax_pthread_prio_inherit_defined\" != \"xyes\"],\n-              [AC_DEFINE([HAVE_PTHREAD_PRIO_INHERIT], [1], [Have PTHREAD_PRIO_INHERIT.])\n-               ax_pthread_prio_inherit_defined=yes\n-              ])\n-\n-        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n-        LIBS=\"$ax_pthread_save_LIBS\"\n-\n-        # More AIX lossage: compile with *_r variant\n-        if test \"x$GCC\" != \"xyes\"; then\n-            case $host_os in\n-                aix*)\n-                AS_CASE([\"x/$CC\"],\n-                    [x*/c89|x*/c89_128|x*/c99|x*/c99_128|x*/cc|x*/cc128|x*/xlc|x*/xlc_v6|x*/xlc128|x*/xlc128_v6],\n-                    [#handle absolute path differently from PATH based program lookup\n-                     AS_CASE([\"x$CC\"],\n-                         [x/*],\n-                         [AS_IF([AS_EXECUTABLE_P([${CC}_r])],[PTHREAD_CC=\"${CC}_r\"])],\n-                         [AC_CHECK_PROGS([PTHREAD_CC],[${CC}_r],[$CC])])])\n-                ;;\n-            esac\n-        fi\n-fi\n-\n-test -n \"$PTHREAD_CC\" || PTHREAD_CC=\"$CC\"\n-\n-AC_SUBST([PTHREAD_LIBS])\n-AC_SUBST([PTHREAD_CFLAGS])\n-AC_SUBST([PTHREAD_CC])\n-\n-# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:\n-if test \"x$ax_pthread_ok\" = \"xyes\"; then\n-        ifelse([$1],,[AC_DEFINE([HAVE_PTHREAD],[1],[Define if you have POSIX threads libraries and header files.])],[$1])\n-        :\n-else\n-        ax_pthread_ok=no\n-        $2\n-fi\n-AC_LANG_POP\n-])dnl AX_PTHREAD"
      },
      {
        "sha": "ea9c795daa2f9a31bf0d8c995ba97ebd2d0b0827",
        "filename": "build-aux/m4/bitcoin_find_bdb48.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 78,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/bitcoin_find_bdb48.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/bitcoin_find_bdb48.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_find_bdb48.m4?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,78 +0,0 @@\n-dnl Copyright (c) 2013-2015 The Bitcoin Core developers\n-dnl Distributed under the MIT software license, see the accompanying\n-dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-AC_DEFUN([BITCOIN_FIND_BDB48],[\n-  AC_ARG_VAR(BDB_CFLAGS, [C compiler flags for BerkeleyDB, bypasses autodetection])\n-  AC_ARG_VAR(BDB_LIBS, [Linker flags for BerkeleyDB, bypasses autodetection])\n-\n-  if test \"x$BDB_CFLAGS\" = \"x\"; then\n-    AC_MSG_CHECKING([for Berkeley DB C++ headers])\n-    BDB_CPPFLAGS=\n-    bdbpath=X\n-    bdb48path=X\n-    bdbdirlist=\n-    for _vn in 4.8 48 4 5 5.3 ''; do\n-      for _pfx in b lib ''; do\n-        bdbdirlist=\"$bdbdirlist ${_pfx}db${_vn}\"\n-      done\n-    done\n-    for searchpath in $bdbdirlist ''; do\n-      test -n \"${searchpath}\" && searchpath=\"${searchpath}/\"\n-      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-        #include <${searchpath}db_cxx.h>\n-      ]],[[\n-        #if !((DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR >= 8) || DB_VERSION_MAJOR > 4)\n-          #error \"failed to find bdb 4.8+\"\n-        #endif\n-      ]])],[\n-        if test \"x$bdbpath\" = \"xX\"; then\n-          bdbpath=\"${searchpath}\"\n-        fi\n-      ],[\n-        continue\n-      ])\n-      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-        #include <${searchpath}db_cxx.h>\n-      ]],[[\n-        #if !(DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR == 8)\n-          #error \"failed to find bdb 4.8\"\n-        #endif\n-      ]])],[\n-        bdb48path=\"${searchpath}\"\n-        break\n-      ],[])\n-    done\n-    if test \"x$bdbpath\" = \"xX\"; then\n-      AC_MSG_RESULT([no])\n-      AC_MSG_ERROR([libdb_cxx headers missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n-    elif test \"x$bdb48path\" = \"xX\"; then\n-      BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n-      AC_ARG_WITH([incompatible-bdb],[AS_HELP_STRING([--with-incompatible-bdb], [allow using a bdb version other than 4.8])],[\n-        AC_MSG_WARN([Found Berkeley DB other than 4.8; wallets opened by this build will not be portable!])\n-      ],[\n-        AC_MSG_ERROR([Found Berkeley DB other than 4.8, required for portable wallets (--with-incompatible-bdb to ignore or --disable-wallet to disable wallet functionality)])\n-      ])\n-    else\n-      BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdb48path}],db_cxx)\n-      bdbpath=\"${bdb48path}\"\n-    fi\n-  else\n-    BDB_CPPFLAGS=${BDB_CFLAGS}\n-  fi\n-  AC_SUBST(BDB_CPPFLAGS)\n-  \n-  if test \"x$BDB_LIBS\" = \"x\"; then\n-    # TODO: Ideally this could find the library version and make sure it matches the headers being used\n-    for searchlib in db_cxx-4.8 db_cxx db4_cxx; do\n-      AC_CHECK_LIB([$searchlib],[main],[\n-        BDB_LIBS=\"-l${searchlib}\"\n-        break\n-      ])\n-    done\n-    if test \"x$BDB_LIBS\" = \"x\"; then\n-        AC_MSG_ERROR([libdb_cxx missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n-    fi\n-  fi\n-  AC_SUBST(BDB_LIBS)\n-])"
      },
      {
        "sha": "f41508336ca07163a5768747120f0005855e12d6",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 539,
        "changes": 539,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,539 +0,0 @@\n-dnl Copyright (c) 2013-2016 The Bitcoin Core developers\n-dnl Distributed under the MIT software license, see the accompanying\n-dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-dnl Helper for cases where a qt dependency is not met.\n-dnl Output: If qt version is auto, set bitcoin_enable_qt to false. Else, exit.\n-AC_DEFUN([BITCOIN_QT_FAIL],[\n-  if test \"x$bitcoin_qt_want_version\" = xauto && test \"x$bitcoin_qt_force\" != xyes; then\n-    if test \"x$bitcoin_enable_qt\" != xno; then\n-      AC_MSG_WARN([$1; bitcoin-qt frontend will not be built])\n-    fi\n-    bitcoin_enable_qt=no\n-    bitcoin_enable_qt_test=no\n-  else\n-    AC_MSG_ERROR([$1])\n-  fi\n-])\n-\n-AC_DEFUN([BITCOIN_QT_CHECK],[\n-  if test \"x$bitcoin_enable_qt\" != xno && test \"x$bitcoin_qt_want_version\" != xno; then\n-    true\n-    $1\n-  else\n-    true\n-    $2\n-  fi\n-])\n-\n-dnl BITCOIN_QT_PATH_PROGS([FOO], [foo foo2], [/path/to/search/first], [continue if missing])\n-dnl Helper for finding the path of programs needed for Qt.\n-dnl Inputs: $1: Variable to be set\n-dnl Inputs: $2: List of programs to search for\n-dnl Inputs: $3: Look for $2 here before $PATH\n-dnl Inputs: $4: If \"yes\", don't fail if $2 is not found.\n-dnl Output: $1 is set to the path of $2 if found. $2 are searched in order.\n-AC_DEFUN([BITCOIN_QT_PATH_PROGS],[\n-  BITCOIN_QT_CHECK([\n-    if test \"x$3\" != x; then\n-      AC_PATH_PROGS($1,$2,,$3)\n-    else\n-      AC_PATH_PROGS($1,$2)\n-    fi\n-    if test \"x$$1\" = x && test \"x$4\" != xyes; then\n-      BITCOIN_QT_FAIL([$1 not found])\n-    fi\n-  ])\n-])\n-\n-dnl Initialize qt input.\n-dnl This must be called before any other BITCOIN_QT* macros to ensure that\n-dnl input variables are set correctly.\n-dnl CAUTION: Do not use this inside of a conditional.\n-AC_DEFUN([BITCOIN_QT_INIT],[\n-  dnl enable qt support\n-  AC_ARG_WITH([gui],\n-    [AS_HELP_STRING([--with-gui@<:@=no|qt4|qt5|auto@:>@],\n-    [build bitcoin-qt GUI (default=auto, qt5 tried first)])],\n-    [\n-     bitcoin_qt_want_version=$withval\n-     if test \"x$bitcoin_qt_want_version\" = xyes; then\n-       bitcoin_qt_force=yes\n-       bitcoin_qt_want_version=auto\n-     fi\n-    ],\n-    [bitcoin_qt_want_version=auto])\n-\n-  AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [])\n-  AC_ARG_WITH([qt-libdir],[AS_HELP_STRING([--with-qt-libdir=LIB_DIR],[specify qt lib path (overridden by pkgconfig)])], [qt_lib_path=$withval], [])\n-  AC_ARG_WITH([qt-plugindir],[AS_HELP_STRING([--with-qt-plugindir=PLUGIN_DIR],[specify qt plugin path (overridden by pkgconfig)])], [qt_plugin_path=$withval], [])\n-  AC_ARG_WITH([qt-translationdir],[AS_HELP_STRING([--with-qt-translationdir=PLUGIN_DIR],[specify qt translation path (overridden by pkgconfig)])], [qt_translation_path=$withval], [])\n-  AC_ARG_WITH([qt-bindir],[AS_HELP_STRING([--with-qt-bindir=BIN_DIR],[specify qt bin path])], [qt_bin_path=$withval], [])\n-\n-  AC_ARG_WITH([qtdbus],\n-    [AS_HELP_STRING([--with-qtdbus],\n-    [enable DBus support (default is yes if qt is enabled and QtDBus is found)])],\n-    [use_dbus=$withval],\n-    [use_dbus=auto])\n-\n-  AC_SUBST(QT_TRANSLATION_DIR,$qt_translation_path)\n-])\n-\n-dnl Find the appropriate version of Qt libraries and includes.\n-dnl Inputs: $1: Whether or not pkg-config should be used. yes|no. Default: yes.\n-dnl Inputs: $2: If $1 is \"yes\" and --with-gui=auto, which qt version should be\n-dnl         tried first.\n-dnl Outputs: See _BITCOIN_QT_FIND_LIBS_*\n-dnl Outputs: Sets variables for all qt-related tools.\n-dnl Outputs: bitcoin_enable_qt, bitcoin_enable_qt_dbus, bitcoin_enable_qt_test\n-AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n-  use_pkgconfig=$1\n-\n-  if test \"x$use_pkgconfig\" = x; then\n-    use_pkgconfig=yes\n-  fi\n-\n-  if test \"x$use_pkgconfig\" = xyes; then\n-    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG([$2])])\n-  else\n-    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG])\n-  fi\n-\n-  dnl This is ugly and complicated. Yuck. Works as follows:\n-  dnl We can't discern whether Qt4 builds are static or not. For Qt5, we can\n-  dnl check a header to find out. When Qt is built statically, some plugins must\n-  dnl be linked into the final binary as well. These plugins have changed between\n-  dnl Qt4 and Qt5. With Qt5, languages moved into core and the WindowsIntegration\n-  dnl plugin was added. Since we can't tell if Qt4 is static or not, it is\n-  dnl assumed for windows builds.\n-  dnl _BITCOIN_QT_CHECK_STATIC_PLUGINS does a quick link-check and appends the\n-  dnl results to QT_LIBS.\n-  BITCOIN_QT_CHECK([\n-  TEMP_CPPFLAGS=$CPPFLAGS\n-  TEMP_CXXFLAGS=$CXXFLAGS\n-  CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n-  CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n-  if test \"x$bitcoin_qt_got_major_vers\" = x5; then\n-    _BITCOIN_QT_IS_STATIC\n-    if test \"x$bitcoin_cv_static_qt\" = xyes; then\n-      _BITCOIN_QT_FIND_STATIC_PLUGINS\n-      AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-      AC_CACHE_CHECK(for Qt < 5.4, bitcoin_cv_need_acc_widget,[\n-        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-            #include <QtCore/qconfig.h>\n-            #ifndef QT_VERSION\n-            #  include <QtCore/qglobal.h>\n-            #endif\n-          ]],\n-          [[\n-            #if QT_VERSION >= 0x050400\n-            choke\n-            #endif\n-          ]])],\n-        [bitcoin_cv_need_acc_widget=yes],\n-        [bitcoin_cv_need_acc_widget=no])\n-      ])\n-      if test \"x$bitcoin_cv_need_acc_widget\" = xyes; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n-      fi\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin)],[-lqminimal])\n-      AC_DEFINE(QT_QPA_PLATFORM_MINIMAL, 1, [Define this symbol if the minimal qt platform exists])\n-      if test \"x$TARGET_OS\" = xwindows; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n-        AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n-      elif test \"x$TARGET_OS\" = xlinux; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])\n-        AC_DEFINE(QT_QPA_PLATFORM_XCB, 1, [Define this symbol if the qt platform is xcb])\n-      elif test \"x$TARGET_OS\" = xdarwin; then\n-        AX_CHECK_LINK_FLAG([[-framework IOKit]],[QT_LIBS=\"$QT_LIBS -framework IOKit\"],[AC_MSG_ERROR(could not iokit framework)])\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n-        AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])\n-      fi\n-    fi\n-  else\n-    if test \"x$TARGET_OS\" = xwindows; then\n-      AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([\n-         Q_IMPORT_PLUGIN(qcncodecs)\n-         Q_IMPORT_PLUGIN(qjpcodecs)\n-         Q_IMPORT_PLUGIN(qtwcodecs)\n-         Q_IMPORT_PLUGIN(qkrcodecs)\n-         Q_IMPORT_PLUGIN(AccessibleFactory)],\n-         [-lqcncodecs -lqjpcodecs -lqtwcodecs -lqkrcodecs -lqtaccessiblewidgets])\n-    fi\n-  fi\n-  CPPFLAGS=$TEMP_CPPFLAGS\n-  CXXFLAGS=$TEMP_CXXFLAGS\n-  ])\n-\n-  if test \"x$use_pkgconfig$qt_bin_path\" = xyes; then\n-    if test \"x$bitcoin_qt_got_major_vers\" = x5; then\n-      qt_bin_path=\"`$PKG_CONFIG --variable=host_bins Qt5Core 2>/dev/null`\"\n-    fi\n-  fi\n-\n-  if test \"x$use_hardening\" != xno; then\n-    BITCOIN_QT_CHECK([\n-    AC_MSG_CHECKING(whether -fPIE can be used with this Qt config)\n-    TEMP_CPPFLAGS=$CPPFLAGS\n-    TEMP_CXXFLAGS=$CXXFLAGS\n-    CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n-    CXXFLAGS=\"$PIE_FLAGS $CXXFLAGS\"\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-        #include <QtCore/qconfig.h>\n-        #ifndef QT_VERSION\n-        #  include <QtCore/qglobal.h>\n-        #endif\n-      ]],\n-      [[\n-        #if defined(QT_REDUCE_RELOCATIONS)\n-        choke\n-        #endif\n-      ]])],\n-      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIE_FLAGS ],\n-      [ AC_MSG_RESULT(no); QT_PIE_FLAGS=$PIC_FLAGS]\n-    )\n-    CPPFLAGS=$TEMP_CPPFLAGS\n-    CXXFLAGS=$TEMP_CXXFLAGS\n-    ])\n-  else\n-    BITCOIN_QT_CHECK([\n-    AC_MSG_CHECKING(whether -fPIC is needed with this Qt config)\n-    TEMP_CPPFLAGS=$CPPFLAGS\n-    CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-        #include <QtCore/qconfig.h>\n-        #ifndef QT_VERSION\n-        #  include <QtCore/qglobal.h>\n-        #endif\n-      ]],\n-      [[\n-        #if defined(QT_REDUCE_RELOCATIONS)\n-        choke\n-        #endif\n-      ]])],\n-      [ AC_MSG_RESULT(no)],\n-      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIC_FLAGS]\n-    )\n-    CPPFLAGS=$TEMP_CPPFLAGS\n-    ])\n-  fi\n-\n-  BITCOIN_QT_PATH_PROGS([MOC], [moc-qt${bitcoin_qt_got_major_vers} moc${bitcoin_qt_got_major_vers} moc], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([UIC], [uic-qt${bitcoin_qt_got_major_vers} uic${bitcoin_qt_got_major_vers} uic], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt${bitcoin_qt_got_major_vers} rcc${bitcoin_qt_got_major_vers} rcc], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt${bitcoin_qt_got_major_vers} lrelease${bitcoin_qt_got_major_vers} lrelease], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt${bitcoin_qt_got_major_vers} lupdate${bitcoin_qt_got_major_vers} lupdate],$qt_bin_path, yes)\n-\n-  MOC_DEFS='-DHAVE_CONFIG_H -I$(srcdir)'\n-  case $host in\n-    *darwin*)\n-     BITCOIN_QT_CHECK([\n-       MOC_DEFS=\"${MOC_DEFS} -DQ_OS_MAC\"\n-       base_frameworks=\"-framework Foundation -framework ApplicationServices -framework AppKit\"\n-       AX_CHECK_LINK_FLAG([[$base_frameworks]],[QT_LIBS=\"$QT_LIBS $base_frameworks\"],[AC_MSG_ERROR(could not find base frameworks)])\n-     ])\n-    ;;\n-    *mingw*)\n-       BITCOIN_QT_CHECK([\n-         AX_CHECK_LINK_FLAG([[-mwindows]],[QT_LDFLAGS=\"$QT_LDFLAGS -mwindows\"],[AC_MSG_WARN(-mwindows linker support not detected)])\n-       ])\n-  esac\n-\n-\n-  dnl enable qt support\n-  AC_MSG_CHECKING(whether to build ]AC_PACKAGE_NAME[ GUI)\n-  BITCOIN_QT_CHECK([\n-    bitcoin_enable_qt=yes\n-    bitcoin_enable_qt_test=yes\n-    if test \"x$have_qt_test\" = xno; then\n-      bitcoin_enable_qt_test=no\n-    fi\n-    bitcoin_enable_qt_dbus=no\n-    if test \"x$use_dbus\" != xno && test \"x$have_qt_dbus\" = xyes; then\n-      bitcoin_enable_qt_dbus=yes\n-    fi\n-    if test \"x$use_dbus\" = xyes && test \"x$have_qt_dbus\" = xno; then\n-      AC_MSG_ERROR([libQtDBus not found. Install libQtDBus or remove --with-qtdbus.])\n-    fi\n-    if test \"x$LUPDATE\" = x; then\n-      AC_MSG_WARN([lupdate is required to update qt translations])\n-    fi\n-  ],[\n-    bitcoin_enable_qt=no\n-  ])\n-  AC_MSG_RESULT([$bitcoin_enable_qt (Qt${bitcoin_qt_got_major_vers})])\n-\n-  AC_SUBST(QT_PIE_FLAGS)\n-  AC_SUBST(QT_INCLUDES)\n-  AC_SUBST(QT_LIBS)\n-  AC_SUBST(QT_LDFLAGS)\n-  AC_SUBST(QT_DBUS_INCLUDES)\n-  AC_SUBST(QT_DBUS_LIBS)\n-  AC_SUBST(QT_TEST_INCLUDES)\n-  AC_SUBST(QT_TEST_LIBS)\n-  AC_SUBST(QT_SELECT, qt${bitcoin_qt_got_major_vers})\n-  AC_SUBST(MOC_DEFS)\n-])\n-\n-dnl All macros below are internal and should _not_ be used from the main\n-dnl configure.ac.\n-dnl ----\n-\n-dnl Internal. Check if the included version of Qt is Qt5.\n-dnl Requires: INCLUDES must be populated as necessary.\n-dnl Output: bitcoin_cv_qt5=yes|no\n-AC_DEFUN([_BITCOIN_QT_CHECK_QT5],[\n-  AC_CACHE_CHECK(for Qt 5, bitcoin_cv_qt5,[\n-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-      #include <QtCore/qconfig.h>\n-      #ifndef QT_VERSION\n-      #  include <QtCore/qglobal.h>\n-      #endif\n-    ]],\n-    [[\n-      #if QT_VERSION < 0x050000\n-      choke\n-      #endif\n-    ]])],\n-    [bitcoin_cv_qt5=yes],\n-    [bitcoin_cv_qt5=no])\n-])])\n-\n-dnl Internal. Check if the linked version of Qt was built as static libs.\n-dnl Requires: Qt5. This check cannot determine if Qt4 is static.\n-dnl Requires: INCLUDES and LIBS must be populated as necessary.\n-dnl Output: bitcoin_cv_static_qt=yes|no\n-dnl Output: Defines QT_STATICPLUGIN if plugins are static.\n-AC_DEFUN([_BITCOIN_QT_IS_STATIC],[\n-  AC_CACHE_CHECK(for static Qt, bitcoin_cv_static_qt,[\n-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-      #include <QtCore/qconfig.h>\n-      #ifndef QT_VERSION\n-      #  include <QtCore/qglobal.h>\n-      #endif\n-    ]],\n-    [[\n-      #if !defined(QT_STATIC)\n-      choke\n-      #endif\n-    ]])],\n-    [bitcoin_cv_static_qt=yes],\n-    [bitcoin_cv_static_qt=no])\n-  ])\n-  if test \"x$bitcoin_cv_static_qt\" = xyes; then\n-    AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol for static Qt plugins])\n-  fi\n-])\n-\n-dnl Internal. Check if the link-requirements for static plugins are met.\n-dnl Requires: INCLUDES and LIBS must be populated as necessary.\n-dnl Inputs: $1: A series of Q_IMPORT_PLUGIN().\n-dnl Inputs: $2: The libraries that resolve $1.\n-dnl Output: QT_LIBS is prepended or configure exits.\n-AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGINS],[\n-  AC_MSG_CHECKING(for static Qt plugins: $2)\n-  CHECK_STATIC_PLUGINS_TEMP_LIBS=\"$LIBS\"\n-  LIBS=\"$2 $QT_LIBS $LIBS\"\n-  AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n-    #define QT_STATICPLUGIN\n-    #include <QtPlugin>\n-    $1]],\n-    [[return 0;]])],\n-    [AC_MSG_RESULT(yes); QT_LIBS=\"$2 $QT_LIBS\"],\n-    [AC_MSG_RESULT(no); BITCOIN_QT_FAIL(Could not resolve: $2)])\n-  LIBS=\"$CHECK_STATIC_PLUGINS_TEMP_LIBS\"\n-])\n-\n-dnl Internal. Find paths necessary for linking qt static plugins\n-dnl Inputs: bitcoin_qt_got_major_vers. 4 or 5.\n-dnl Inputs: qt_plugin_path. optional.\n-dnl Outputs: QT_LIBS is appended\n-AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n-  if test \"x$bitcoin_qt_got_major_vers\" = x5; then\n-      if test \"x$qt_plugin_path\" != x; then\n-        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n-        if test -d \"$qt_plugin_path/accessible\"; then\n-          QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n-        fi\n-      fi\n-     if test \"x$use_pkgconfig\" = xyes; then\n-     : dnl\n-     m4_ifdef([PKG_CHECK_MODULES],[\n-       PKG_CHECK_MODULES([QTPLATFORM], [Qt5PlatformSupport], [QT_LIBS=\"$QTPLATFORM_LIBS $QT_LIBS\"])\n-       if test \"x$TARGET_OS\" = xlinux; then\n-         PKG_CHECK_MODULES([X11XCB], [x11-xcb], [QT_LIBS=\"$X11XCB_LIBS $QT_LIBS\"])\n-         if ${PKG_CONFIG} --exists \"Qt5Core >= 5.5\" 2>/dev/null; then\n-           PKG_CHECK_MODULES([QTXCBQPA], [Qt5XcbQpa], [QT_LIBS=\"$QTXCBQPA_LIBS $QT_LIBS\"])\n-         fi\n-       elif test \"x$TARGET_OS\" = xdarwin; then\n-         PKG_CHECK_MODULES([QTPRINT], [Qt5PrintSupport], [QT_LIBS=\"$QTPRINT_LIBS $QT_LIBS\"])\n-       fi\n-     ])\n-     else\n-       if test \"x$TARGET_OS\" = xwindows; then\n-         AC_CACHE_CHECK(for Qt >= 5.6, bitcoin_cv_need_platformsupport,[\n-           AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-               #include <QtCore/qconfig.h>\n-               #ifndef QT_VERSION\n-               #  include <QtCore/qglobal.h>\n-               #endif\n-             ]],\n-             [[\n-               #if QT_VERSION < 0x050600\n-               choke\n-               #endif\n-             ]])],\n-           [bitcoin_cv_need_platformsupport=yes],\n-           [bitcoin_cv_need_platformsupport=no])\n-         ])\n-         if test \"x$bitcoin_cv_need_platformsupport\" = xyes; then\n-           BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}PlatformSupport],[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}PlatformSupport not found)))\n-         fi\n-       fi\n-     fi\n-  else\n-    if test \"x$qt_plugin_path\" != x; then\n-      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n-      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/codecs\"\n-    fi\n-  fi\n-])\n-\n-dnl Internal. Find Qt libraries using pkg-config.\n-dnl Inputs: bitcoin_qt_want_version (from --with-gui=). The version to check\n-dnl         first.\n-dnl Inputs: $1: If bitcoin_qt_want_version is \"auto\", check for this version\n-dnl         first.\n-dnl Outputs: All necessary QT_* variables are set.\n-dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n-dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n-AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n-  m4_ifdef([PKG_CHECK_MODULES],[\n-  auto_priority_version=$1\n-  if test \"x$auto_priority_version\" = x; then\n-    auto_priority_version=qt5\n-  fi\n-    if test \"x$bitcoin_qt_want_version\" = xqt5 ||  ( test \"x$bitcoin_qt_want_version\" = xauto && test \"x$auto_priority_version\" = xqt5 ); then\n-      QT_LIB_PREFIX=Qt5\n-      bitcoin_qt_got_major_vers=5\n-    else\n-      QT_LIB_PREFIX=Qt\n-      bitcoin_qt_got_major_vers=4\n-    fi\n-    qt5_modules=\"Qt5Core Qt5Gui Qt5Network Qt5Widgets\"\n-    qt4_modules=\"QtCore QtGui QtNetwork\"\n-    BITCOIN_QT_CHECK([\n-      if test \"x$bitcoin_qt_want_version\" = xqt5 || ( test \"x$bitcoin_qt_want_version\" = xauto && test \"x$auto_priority_version\" = xqt5 ); then\n-        PKG_CHECK_MODULES([QT5], [$qt5_modules], [QT_INCLUDES=\"$QT5_CFLAGS\"; QT_LIBS=\"$QT5_LIBS\" have_qt=yes],[have_qt=no])\n-      elif test \"x$bitcoin_qt_want_version\" = xqt4 || ( test \"x$bitcoin_qt_want_version\" = xauto && test \"x$auto_priority_version\" = xqt4 ); then\n-        PKG_CHECK_MODULES([QT4], [$qt4_modules], [QT_INCLUDES=\"$QT4_CFLAGS\"; QT_LIBS=\"$QT4_LIBS\" ; have_qt=yes], [have_qt=no])\n-      fi\n-\n-      dnl qt version is set to 'auto' and the preferred version wasn't found. Now try the other.\n-      if test \"x$have_qt\" = xno && test \"x$bitcoin_qt_want_version\" = xauto; then\n-        if test \"x$auto_priority_version\" = xqt5; then\n-          PKG_CHECK_MODULES([QT4], [$qt4_modules], [QT_INCLUDES=\"$QT4_CFLAGS\"; QT_LIBS=\"$QT4_LIBS\" ; have_qt=yes; QT_LIB_PREFIX=Qt; bitcoin_qt_got_major_vers=4], [have_qt=no])\n-        else\n-          PKG_CHECK_MODULES([QT5], [$qt5_modules], [QT_INCLUDES=\"$QT5_CFLAGS\"; QT_LIBS=\"$QT5_LIBS\" ; have_qt=yes; QT_LIB_PREFIX=Qt5; bitcoin_qt_got_major_vers=5], [have_qt=no])\n-        fi\n-      fi\n-      if test \"x$have_qt\" != xyes; then\n-        have_qt=no\n-        BITCOIN_QT_FAIL([Qt dependencies not found])\n-      fi\n-    ])\n-    BITCOIN_QT_CHECK([\n-      PKG_CHECK_MODULES([QT_TEST], [${QT_LIB_PREFIX}Test], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n-      if test \"x$use_dbus\" != xno; then\n-        PKG_CHECK_MODULES([QT_DBUS], [${QT_LIB_PREFIX}DBus], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n-      fi\n-    ])\n-  ])\n-  true; dnl\n-])\n-\n-dnl Internal. Find Qt libraries without using pkg-config. Version is deduced\n-dnl from the discovered headers.\n-dnl Inputs: bitcoin_qt_want_version (from --with-gui=). The version to use.\n-dnl         If \"auto\", the version will be discovered by _BITCOIN_QT_CHECK_QT5.\n-dnl Outputs: All necessary QT_* variables are set.\n-dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n-dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n-AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n-  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-  TEMP_CXXFLAGS=\"$CXXFLAGS\"\n-  CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n-  TEMP_LIBS=\"$LIBS\"\n-  BITCOIN_QT_CHECK([\n-    if test \"x$qt_include_path\" != x; then\n-      QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtWidgets -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n-      CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n-    fi\n-  ])\n-\n-  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QtPlugin],,BITCOIN_QT_FAIL(QtCore headers missing))])\n-  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QApplication],, BITCOIN_QT_FAIL(QtGui headers missing))])\n-  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QLocalSocket],, BITCOIN_QT_FAIL(QtNetwork headers missing))])\n-\n-  BITCOIN_QT_CHECK([\n-    if test \"x$bitcoin_qt_want_version\" = xauto; then\n-      _BITCOIN_QT_CHECK_QT5\n-    fi\n-    if test \"x$bitcoin_cv_qt5\" = xyes || test \"x$bitcoin_qt_want_version\" = xqt5; then\n-      QT_LIB_PREFIX=Qt5\n-      bitcoin_qt_got_major_vers=5\n-    else\n-      QT_LIB_PREFIX=Qt\n-      bitcoin_qt_got_major_vers=4\n-    fi\n-  ])\n-\n-  BITCOIN_QT_CHECK([\n-    LIBS=\n-    if test \"x$qt_lib_path\" != x; then\n-      LIBS=\"$LIBS -L$qt_lib_path\"\n-    fi\n-\n-    if test \"x$TARGET_OS\" = xwindows; then\n-      AC_CHECK_LIB([imm32],      [main],, BITCOIN_QT_FAIL(libimm32 not found))\n-    fi\n-  ])\n-\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([z] ,[main],,AC_MSG_WARN([zlib not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([png_error] ,[qtpng png],,AC_MSG_WARN([libpng not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([jpeg_create_decompress] ,[qtjpeg jpeg],,AC_MSG_WARN([libjpeg not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([pcre16_exec], [qtpcre pcre16],,AC_MSG_WARN([libpcre16 not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([hb_ot_tags_from_script] ,[qtharfbuzzng harfbuzz],,AC_MSG_WARN([libharfbuzz not found. Assuming qt has it built-in or support is disabled])))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Core not found)))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Gui not found)))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Network not found)))\n-  if test \"x$bitcoin_qt_got_major_vers\" = x5; then\n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Widgets],[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Widgets not found)))\n-  fi\n-  QT_LIBS=\"$LIBS\"\n-  LIBS=\"$TEMP_LIBS\"\n-\n-  BITCOIN_QT_CHECK([\n-    LIBS=\n-    if test \"x$qt_lib_path\" != x; then\n-      LIBS=\"-L$qt_lib_path\"\n-    fi\n-    AC_CHECK_LIB([${QT_LIB_PREFIX}Test],      [main],, have_qt_test=no)\n-    AC_CHECK_HEADER([QTest],, have_qt_test=no)\n-    QT_TEST_LIBS=\"$LIBS\"\n-    if test \"x$use_dbus\" != xno; then\n-      LIBS=\n-      if test \"x$qt_lib_path\" != x; then\n-        LIBS=\"-L$qt_lib_path\"\n-      fi\n-      AC_CHECK_LIB([${QT_LIB_PREFIX}DBus],      [main],, have_qt_dbus=no)\n-      AC_CHECK_HEADER([QtDBus],, have_qt_dbus=no)\n-      QT_DBUS_LIBS=\"$LIBS\"\n-    fi\n-  ])\n-  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-  CXXFLAGS=\"$TEMP_CXXFLAGS\"\n-  LIBS=\"$TEMP_LIBS\"\n-])\n-"
      },
      {
        "sha": "7841042ac877b20ea8b35e634f1b4088aae1647f",
        "filename": "build-aux/m4/bitcoin_subdir_to_include.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/bitcoin_subdir_to_include.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/bitcoin_subdir_to_include.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_subdir_to_include.m4?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,18 +0,0 @@\n-dnl Copyright (c) 2013-2014 The Bitcoin Core developers\n-dnl Distributed under the MIT software license, see the accompanying\n-dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-dnl BITCOIN_SUBDIR_TO_INCLUDE([CPPFLAGS-VARIABLE-NAME],[SUBDIRECTORY-NAME],[HEADER-FILE])\n-dnl SUBDIRECTORY-NAME must end with a path separator\n-AC_DEFUN([BITCOIN_SUBDIR_TO_INCLUDE],[\n-  if test \"x$2\" = \"x\"; then\n-    AC_MSG_RESULT([default])\n-  else\n-    echo \"#include <$2$3.h>\" >conftest.cpp\n-    newinclpath=`${CXXCPP} ${CPPFLAGS} -M conftest.cpp 2>/dev/null | [ tr -d '\\\\n\\\\r\\\\\\\\' | sed -e 's/^.*[[:space:]:]\\(\\/[^[:space:]]*\\)]$3[\\.h[[:space:]].*$/\\1/' -e t -e d`]\n-    AC_MSG_RESULT([${newinclpath}])\n-    if test \"x${newinclpath}\" != \"x\"; then\n-      eval \"$1=\\\"\\$$1\\\"' -I${newinclpath}'\"\n-    fi\n-  fi\n-])"
      },
      {
        "sha": "75c43f9a92d3d6ac2a5d1aee89e97bab7a89f545",
        "filename": "build-aux/m4/l_atomic.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 46,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/l_atomic.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/build-aux/m4/l_atomic.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/l_atomic.m4?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,46 +0,0 @@\n-dnl Copyright (c) 2015 Tim Kosse <tim.kosse@filezilla-project.org>\n-dnl Copying and distribution of this file, with or without modification, are\n-dnl permitted in any medium without royalty provided the copyright notice\n-dnl and this notice are preserved. This file is offered as-is, without any\n-dnl warranty.\n-\n-# Some versions of gcc/libstdc++ require linking with -latomic if\n-# using the C++ atomic library.\n-#\n-# Sourced from http://bugs.debian.org/797228\n-\n-m4_define([_CHECK_ATOMIC_testbody], [[\n-  #include <atomic>\n-  #include <cstdint>\n-\n-  int main() {\n-    std::atomic<int64_t> a{};\n-\n-    int64_t v = 5;\n-    int64_t r = a.fetch_add(v);\n-    return static_cast<int>(r);\n-  }\n-]])\n-\n-AC_DEFUN([CHECK_ATOMIC], [\n-\n-  AC_LANG_PUSH(C++)\n-\n-  AC_MSG_CHECKING([whether std::atomic can be used without link library])\n-\n-  AC_LINK_IFELSE([AC_LANG_SOURCE([_CHECK_ATOMIC_testbody])],[\n-      AC_MSG_RESULT([yes])\n-    ],[\n-      AC_MSG_RESULT([no])\n-      LIBS=\"$LIBS -latomic\"\n-      AC_MSG_CHECKING([whether std::atomic needs -latomic])\n-      AC_LINK_IFELSE([AC_LANG_SOURCE([_CHECK_ATOMIC_testbody])],[\n-          AC_MSG_RESULT([yes])\n-        ],[\n-          AC_MSG_RESULT([no])\n-          AC_MSG_FAILURE([cannot figure out how to use std::atomic])\n-        ])\n-    ])\n-\n-  AC_LANG_POP\n-])"
      },
      {
        "sha": "b68fd8fc5884337aac06d52864e5ea4dd28dbe0f",
        "filename": "configure.ac",
        "status": "removed",
        "additions": 0,
        "deletions": 1388,
        "changes": 1388,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,1388 +0,0 @@\n-dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\n-AC_PREREQ([2.60])\n-define(_CLIENT_VERSION_MAJOR, 0)\n-define(_CLIENT_VERSION_MINOR, 16)\n-define(_CLIENT_VERSION_REVISION, 99)\n-define(_CLIENT_VERSION_BUILD, 0)\n-define(_CLIENT_VERSION_IS_RELEASE, false)\n-define(_COPYRIGHT_YEAR, 2018)\n-define(_COPYRIGHT_HOLDERS,[The %s developers])\n-define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Bitcoin Core]])\n-AC_INIT([Bitcoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/bitcoin/bitcoin/issues],[bitcoin],[https://bitcoincore.org/])\n-AC_CONFIG_SRCDIR([src/validation.cpp])\n-AC_CONFIG_HEADERS([src/config/bitcoin-config.h])\n-AC_CONFIG_AUX_DIR([build-aux])\n-AC_CONFIG_MACRO_DIR([build-aux/m4])\n-\n-BITCOIN_DAEMON_NAME=bitcoind\n-BITCOIN_GUI_NAME=bitcoin-qt\n-BITCOIN_CLI_NAME=bitcoin-cli\n-BITCOIN_TX_NAME=bitcoin-tx\n-\n-dnl Unless the user specified ARFLAGS, force it to be cr\n-AC_ARG_VAR(ARFLAGS, [Flags for the archiver, defaults to <cr> if not set])\n-if test \"x${ARFLAGS+set}\" != \"xset\"; then\n-  ARFLAGS=\"cr\"\n-fi\n-\n-AC_CANONICAL_HOST\n-\n-AH_TOP([#ifndef BITCOIN_CONFIG_H])\n-AH_TOP([#define BITCOIN_CONFIG_H])\n-AH_BOTTOM([#endif //BITCOIN_CONFIG_H])\n-\n-dnl faketime breaks configure and is only needed for make. Disable it here.\n-unset FAKETIME\n-\n-dnl Automake init set-up and checks\n-AM_INIT_AUTOMAKE([no-define subdir-objects foreign])\n-\n-dnl faketime messes with timestamps and causes configure to be re-run.\n-dnl --disable-maintainer-mode can be used to bypass this.\n-AM_MAINTAINER_MODE([enable])\n-\n-dnl make the compilation flags quiet unless V=1 is used\n-m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n-\n-dnl Compiler checks (here before libtool).\n-if test \"x${CXXFLAGS+set}\" = \"xset\"; then\n-  CXXFLAGS_overridden=yes\n-else\n-  CXXFLAGS_overridden=no\n-fi\n-AC_PROG_CXX\n-\n-dnl By default, libtool for mingw refuses to link static libs into a dll for\n-dnl fear of mixing pic/non-pic objects, and import/export complications. Since\n-dnl we have those under control, re-enable that functionality.\n-case $host in\n-  *mingw*)\n-     lt_cv_deplibs_check_method=\"pass_all\"\n-  ;;\n-esac\n-dnl Require C++11 compiler (no GNU extensions)\n-AX_CXX_COMPILE_STDCXX([11], [noext], [mandatory], [nodefault])\n-dnl Check if -latomic is required for <std::atomic>\n-CHECK_ATOMIC\n-\n-dnl Unless the user specified OBJCXX, force it to be the same as CXX. This ensures\n-dnl that we get the same -std flags for both.\n-m4_ifdef([AC_PROG_OBJCXX],[\n-if test \"x${OBJCXX+set}\" = \"x\"; then\n-  OBJCXX=\"${CXX}\"\n-fi\n-AC_PROG_OBJCXX\n-])\n-\n-dnl Libtool init checks.\n-LT_INIT([pic-only])\n-\n-dnl Check/return PATH for base programs.\n-AC_PATH_TOOL(AR, ar)\n-AC_PATH_TOOL(RANLIB, ranlib)\n-AC_PATH_TOOL(STRIP, strip)\n-AC_PATH_TOOL(GCOV, gcov)\n-AC_PATH_PROG(LCOV, lcov)\n-dnl Python 3.x is supported from 3.4 on (see https://github.com/bitcoin/bitcoin/issues/7893)\n-AC_PATH_PROGS([PYTHON], [python3.6 python3.5 python3.4 python3 python2.7 python2 python])\n-AC_PATH_PROG(GENHTML, genhtml)\n-AC_PATH_PROG([GIT], [git])\n-AC_PATH_PROG(CCACHE,ccache)\n-AC_PATH_PROG(XGETTEXT,xgettext)\n-AC_PATH_PROG(HEXDUMP,hexdump)\n-AC_PATH_TOOL(READELF, readelf)\n-AC_PATH_TOOL(CPPFILT, c++filt)\n-AC_PATH_TOOL(OBJCOPY, objcopy)\n-AC_PATH_PROG(DOXYGEN, doxygen)\n-if test -z \"$DOXYGEN\"; then\n-   AC_MSG_WARN([Doxygen not found])\n-fi\n-AM_CONDITIONAL([HAVE_DOXYGEN], [test -n \"$DOXYGEN\"])\n-\n-AC_ARG_VAR(PYTHONPATH, Augments the default search path for python module files)\n-\n-# Enable wallet\n-AC_ARG_ENABLE([wallet],\n-  [AS_HELP_STRING([--disable-wallet],\n-  [disable wallet (enabled by default)])],\n-  [enable_wallet=$enableval],\n-  [enable_wallet=yes])\n-\n-AC_ARG_WITH([miniupnpc],\n-  [AS_HELP_STRING([--with-miniupnpc],\n-  [enable UPNP (default is yes if libminiupnpc is found)])],\n-  [use_upnp=$withval],\n-  [use_upnp=auto])\n-\n-AC_ARG_ENABLE([upnp-default],\n-  [AS_HELP_STRING([--enable-upnp-default],\n-  [if UPNP is enabled, turn it on at startup (default is no)])],\n-  [use_upnp_default=$enableval],\n-  [use_upnp_default=no])\n-\n-AC_ARG_ENABLE(tests,\n-    AS_HELP_STRING([--disable-tests],[do not compile tests (default is to compile)]),\n-    [use_tests=$enableval],\n-    [use_tests=yes])\n-\n-AC_ARG_ENABLE(gui-tests,\n-    AS_HELP_STRING([--disable-gui-tests],[do not compile GUI tests (default is to compile if GUI and tests enabled)]),\n-    [use_gui_tests=$enableval],\n-    [use_gui_tests=$use_tests])\n-\n-AC_ARG_ENABLE(bench,\n-    AS_HELP_STRING([--disable-bench],[do not compile benchmarks (default is to compile)]),\n-    [use_bench=$enableval],\n-    [use_bench=yes])\n-\n-AC_ARG_ENABLE([extended-functional-tests],\n-    AS_HELP_STRING([--enable-extended-functional-tests],[enable expensive functional tests when using lcov (default no)]),\n-    [use_extended_functional_tests=$enableval],\n-    [use_extended_functional_tests=no])\n-\n-AC_ARG_WITH([qrencode],\n-  [AS_HELP_STRING([--with-qrencode],\n-  [enable QR code support (default is yes if qt is enabled and libqrencode is found)])],\n-  [use_qr=$withval],\n-  [use_qr=auto])\n-\n-AC_ARG_ENABLE([hardening],\n-  [AS_HELP_STRING([--disable-hardening],\n-  [do not attempt to harden the resulting executables (default is to harden when possible)])],\n-  [use_hardening=$enableval],\n-  [use_hardening=auto])\n-\n-AC_ARG_ENABLE([reduce-exports],\n-  [AS_HELP_STRING([--enable-reduce-exports],\n-  [attempt to reduce exported symbols in the resulting executables (default is no)])],\n-  [use_reduce_exports=$enableval],\n-  [use_reduce_exports=no])\n-\n-AC_ARG_ENABLE([ccache],\n-  [AS_HELP_STRING([--disable-ccache],\n-  [do not use ccache for building (default is to use if found)])],\n-  [use_ccache=$enableval],\n-  [use_ccache=auto])\n-\n-AC_ARG_ENABLE([lcov],\n-  [AS_HELP_STRING([--enable-lcov],\n-  [enable lcov testing (default is no)])],\n-  [use_lcov=$enableval],\n-  [use_lcov=no])\n-\n-AC_ARG_ENABLE([lcov-branch-coverage],\n-  [AS_HELP_STRING([--enable-lcov-branch-coverage],\n-  [enable lcov testing branch coverage (default is no)])],\n-  [use_lcov_branch=yes],\n-  [use_lcov_branch=no])\n-\n-AC_ARG_ENABLE([glibc-back-compat],\n-  [AS_HELP_STRING([--enable-glibc-back-compat],\n-  [enable backwards compatibility with glibc])],\n-  [use_glibc_compat=$enableval],\n-  [use_glibc_compat=no])\n-\n-AC_ARG_ENABLE([asm],\n-  [AS_HELP_STRING([--enable-asm],\n-  [Enable assembly routines (default is yes)])],\n-  [use_asm=$enableval],\n-  [use_asm=yes])\n-\n-if test \"x$use_asm\" = xyes; then\n-  AC_DEFINE(USE_ASM, 1, [Define this symbol to build in assembly routines])\n-fi\n-\n-AC_ARG_WITH([system-univalue],\n-  [AS_HELP_STRING([--with-system-univalue],\n-  [Build with system UniValue (default is no)])],\n-  [system_univalue=$withval],\n-  [system_univalue=no]\n-)\n-AC_ARG_ENABLE([zmq],\n-  [AS_HELP_STRING([--disable-zmq],\n-  [disable ZMQ notifications])],\n-  [use_zmq=$enableval],\n-  [use_zmq=yes])\n-\n-AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])\n-\n-AC_ARG_ENABLE(man,\n-    [AS_HELP_STRING([--disable-man],\n-                    [do not install man pages (default is to install)])],,\n-    enable_man=yes)\n-AM_CONDITIONAL(ENABLE_MAN, test \"$enable_man\" != no)\n-\n-# Enable debug\n-AC_ARG_ENABLE([debug],\n-    [AS_HELP_STRING([--enable-debug],\n-                    [use debug compiler flags and macros (default is no)])],\n-    [enable_debug=$enableval],\n-    [enable_debug=no])\n-\n-# Enable different -fsanitize options\n-AC_ARG_WITH([sanitizers],\n-    [AS_HELP_STRING([--with-sanitizers],\n-                    [comma separated list of extra sanitizers to build with (default is none enabled)])],\n-    [use_sanitizers=$withval])\n-\n-# Enable gprof profiling\n-AC_ARG_ENABLE([gprof],\n-    [AS_HELP_STRING([--enable-gprof],\n-                    [use gprof profiling compiler flags (default is no)])],\n-    [enable_gprof=$enableval],\n-    [enable_gprof=no])\n-\n-# Turn warnings into errors\n-AC_ARG_ENABLE([werror],\n-    [AS_HELP_STRING([--enable-werror],\n-                    [Treat certain compiler warnings as errors (default is no)])],\n-    [enable_werror=$enableval],\n-    [enable_werror=no])\n-\n-AC_LANG_PUSH([C++])\n-AX_CHECK_COMPILE_FLAG([-Werror],[CXXFLAG_WERROR=\"-Werror\"],[CXXFLAG_WERROR=\"\"])\n-\n-if test \"x$enable_debug\" = xyes; then\n-    CPPFLAGS=\"$CPPFLAGS -DDEBUG -DDEBUG_LOCKORDER\"\n-    if test \"x$GCC\" = xyes; then\n-        CFLAGS=\"$CFLAGS -g3 -O0\"\n-    fi\n-\n-    if test \"x$GXX\" = xyes; then\n-        CXXFLAGS=\"$CXXFLAGS -g3 -O0\"\n-    fi\n-fi\n-\n-if test x$use_sanitizers != x; then\n-  # First check if the compiler accepts flags. If an incompatible pair like\n-  # -fsanitize=address,thread is used here, this check will fail. This will also\n-  # fail if a bad argument is passed, e.g. -fsanitize=undfeined\n-  AX_CHECK_COMPILE_FLAG(\n-    [[-fsanitize=$use_sanitizers]],\n-    [[SANITIZER_CXXFLAGS=-fsanitize=$use_sanitizers]],\n-    [AC_MSG_ERROR([compiler did not accept requested flags])])\n-\n-  # Some compilers (e.g. GCC) require additional libraries like libasan,\n-  # libtsan, libubsan, etc. Make sure linking still works with the sanitize\n-  # flag. This is a separate check so we can give a better error message when\n-  # the sanitize flags are supported by the compiler but the actual sanitizer\n-  # libs are missing.\n-  AX_CHECK_LINK_FLAG(\n-    [[-fsanitize=$use_sanitizers]],\n-    [[SANITIZER_LDFLAGS=-fsanitize=$use_sanitizers]],\n-    [AC_MSG_ERROR([linker did not accept requested flags, you are missing required libraries])])\n-fi\n-\n-ERROR_CXXFLAGS=\n-if test \"x$enable_werror\" = \"xyes\"; then\n-  if test \"x$CXXFLAG_WERROR\" = \"x\"; then\n-    AC_MSG_ERROR(\"enable-werror set but -Werror is not usable\")\n-  fi\n-  AX_CHECK_COMPILE_FLAG([-Werror=vla],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=vla\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=thread-safety-analysis],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=thread-safety-analysis\"],,[[$CXXFLAG_WERROR]])\n-fi\n-\n-if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n-  AX_CHECK_COMPILE_FLAG([-Wall],[CXXFLAGS=\"$CXXFLAGS -Wall\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wextra],[CXXFLAGS=\"$CXXFLAGS -Wextra\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wformat],[CXXFLAGS=\"$CXXFLAGS -Wformat\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wvla],[CXXFLAGS=\"$CXXFLAGS -Wvla\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wformat-security],[CXXFLAGS=\"$CXXFLAGS -Wformat-security\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wthread-safety-analysis],[CXXFLAGS=\"$CXXFLAGS -Wthread-safety-analysis\"],,[[$CXXFLAG_WERROR]])\n-\n-  ## Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n-  ## unknown options if any other warning is produced. Test the -Wfoo case, and\n-  ## set the -Wno-foo case if it works.\n-  AX_CHECK_COMPILE_FLAG([-Wunused-parameter],[CXXFLAGS=\"$CXXFLAGS -Wno-unused-parameter\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wself-assign],[CXXFLAGS=\"$CXXFLAGS -Wno-self-assign\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wunused-local-typedef],[CXXFLAGS=\"$CXXFLAGS -Wno-unused-local-typedef\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wdeprecated-register],[CXXFLAGS=\"$CXXFLAGS -Wno-deprecated-register\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wimplicit-fallthrough],[CXXFLAGS=\"$CXXFLAGS -Wno-implicit-fallthrough\"],,[[$CXXFLAG_WERROR]])\n-fi\n-\n-# Check for optional instruction set support. Enabling these does _not_ imply that all code will\n-# be compiled with them, rather that specific objects/libs may use them after checking for runtime\n-# compatibility.\n-AX_CHECK_COMPILE_FLAG([-msse4.2],[[SSE42_CXXFLAGS=\"-msse4.2\"]],,[[$CXXFLAG_WERROR]])\n-\n-TEMP_CXXFLAGS=\"$CXXFLAGS\"\n-CXXFLAGS=\"$CXXFLAGS $SSE42_CXXFLAGS\"\n-AC_MSG_CHECKING(for assembler crc32 support)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-    #include <stdint.h>\n-    #if defined(_MSC_VER)\n-    #include <intrin.h>\n-    #elif defined(__GNUC__) && defined(__SSE4_2__)\n-    #include <nmmintrin.h>\n-    #endif\n-  ]],[[\n-    uint64_t l = 0;\n-    l = _mm_crc32_u8(l, 0);\n-    l = _mm_crc32_u32(l, 0);\n-    l = _mm_crc32_u64(l, 0);\n-    return l;\n-  ]])],\n- [ AC_MSG_RESULT(yes); enable_hwcrc32=yes],\n- [ AC_MSG_RESULT(no)]\n-)\n-CXXFLAGS=\"$TEMP_CXXFLAGS\"\n-\n-CPPFLAGS=\"$CPPFLAGS -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n-\n-AC_ARG_WITH([utils],\n-  [AS_HELP_STRING([--with-utils],\n-  [build bitcoin-cli bitcoin-tx (default=yes)])],\n-  [build_bitcoin_utils=$withval],\n-  [build_bitcoin_utils=yes])\n-\n-AC_ARG_WITH([libs],\n-  [AS_HELP_STRING([--with-libs],\n-  [build libraries (default=yes)])],\n-  [build_bitcoin_libs=$withval],\n-  [build_bitcoin_libs=yes])\n-\n-AC_ARG_WITH([daemon],\n-  [AS_HELP_STRING([--with-daemon],\n-  [build bitcoind daemon (default=yes)])],\n-  [build_bitcoind=$withval],\n-  [build_bitcoind=yes])\n-\n-use_pkgconfig=yes\n-case $host in\n-  *mingw*)\n-\n-     #pkgconfig does more harm than good with MinGW\n-     use_pkgconfig=no\n-\n-     TARGET_OS=windows\n-     AC_CHECK_LIB([mingwthrd],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([kernel32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([user32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([gdi32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([comdlg32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([winspool],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([winmm],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([shell32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([comctl32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([ole32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([oleaut32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([uuid],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([rpcrt4],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([advapi32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([ws2_32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([mswsock],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([shlwapi],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([iphlpapi],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([crypt32],      [main],, AC_MSG_ERROR(lib missing))\n-\n-     # -static is interpreted by libtool, where it has a different meaning.\n-     # In libtool-speak, it's -all-static.\n-     AX_CHECK_LINK_FLAG([[-static]],[LIBTOOL_APP_LDFLAGS=\"$LIBTOOL_APP_LDFLAGS -all-static\"])\n-\n-     AC_PATH_PROG([MAKENSIS], [makensis], none)\n-     if test x$MAKENSIS = xnone; then\n-       AC_MSG_WARN(\"makensis not found. Cannot create installer.\")\n-     fi\n-\n-     AC_PATH_TOOL(WINDRES, windres, none)\n-     if test x$WINDRES = xnone; then\n-       AC_MSG_ERROR(\"windres not found\")\n-     fi\n-\n-     CPPFLAGS=\"$CPPFLAGS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB\"\n-     LEVELDB_TARGET_FLAGS=\"-DOS_WINDOWS\"\n-     if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n-       CXXFLAGS=\"$CXXFLAGS -w\"\n-     fi\n-     case $host in\n-       i?86-*) WINDOWS_BITS=32 ;;\n-       x86_64-*) WINDOWS_BITS=64 ;;\n-       *) AC_MSG_ERROR(\"Could not determine win32/win64 for installer\") ;;\n-     esac\n-     AC_SUBST(WINDOWS_BITS)\n-\n-     dnl libtool insists upon adding -nostdlib and a list of objects/libs to link against.\n-     dnl That breaks our ability to build dll's with static libgcc/libstdc++/libssp. Override\n-     dnl its command here, with the predeps/postdeps removed, and -static inserted. Postdeps are\n-     dnl also overridden to prevent their insertion later.\n-     dnl This should only affect dll's.\n-     archive_cmds_CXX=\"\\$CC -shared \\$libobjs \\$deplibs \\$compiler_flags -static -o \\$output_objdir/\\$soname \\${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker \\$lib\"\n-     postdeps_CXX=\n-\n-     ;;\n-  *darwin*)\n-     TARGET_OS=darwin\n-     LEVELDB_TARGET_FLAGS=\"-DOS_MACOSX\"\n-     if  test x$cross_compiling != xyes; then\n-       BUILD_OS=darwin\n-       AC_CHECK_PROG([PORT],port, port)\n-       if test x$PORT = xport; then\n-         dnl add default macports paths\n-         CPPFLAGS=\"$CPPFLAGS -isystem /opt/local/include\"\n-         LIBS=\"$LIBS -L/opt/local/lib\"\n-         if test -d /opt/local/include/db48; then\n-           CPPFLAGS=\"$CPPFLAGS -I/opt/local/include/db48\"\n-           LIBS=\"$LIBS -L/opt/local/lib/db48\"\n-         fi\n-       fi\n-\n-       AC_PATH_PROGS([RSVG_CONVERT], [rsvg-convert rsvg],rsvg-convert)\n-       AC_CHECK_PROG([BREW],brew, brew)\n-       if test x$BREW = xbrew; then\n-         dnl These Homebrew packages may be keg-only, meaning that they won't be found\n-         dnl in expected paths because they may conflict with system files. Ask\n-         dnl Homebrew where each one is located, then adjust paths accordingly.\n-         dnl It's safe to add these paths even if the functionality is disabled by\n-         dnl the user (--without-wallet or --without-gui for example).\n-\n-         openssl_prefix=`$BREW --prefix openssl 2>/dev/null`\n-         bdb_prefix=`$BREW --prefix berkeley-db4 2>/dev/null`\n-         qt5_prefix=`$BREW --prefix qt5 2>/dev/null`\n-         if test x$openssl_prefix != x; then\n-           PKG_CONFIG_PATH=\"$openssl_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\n-           export PKG_CONFIG_PATH\n-         fi\n-         if test x$bdb_prefix != x; then\n-           CPPFLAGS=\"$CPPFLAGS -I$bdb_prefix/include\"\n-           LIBS=\"$LIBS -L$bdb_prefix/lib\"\n-         fi\n-         if test x$qt5_prefix != x; then\n-           PKG_CONFIG_PATH=\"$qt5_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\n-           export PKG_CONFIG_PATH\n-         fi\n-       fi\n-     else\n-       case $build_os in\n-         *darwin*)\n-           BUILD_OS=darwin\n-           ;;\n-         *)\n-           AC_PATH_TOOL([INSTALLNAMETOOL], [install_name_tool], install_name_tool)\n-           AC_PATH_TOOL([OTOOL], [otool], otool)\n-           AC_PATH_PROGS([GENISOIMAGE], [genisoimage mkisofs],genisoimage)\n-           AC_PATH_PROGS([RSVG_CONVERT], [rsvg-convert rsvg],rsvg-convert)\n-           AC_PATH_PROGS([IMAGEMAGICK_CONVERT], [convert],convert)\n-           AC_PATH_PROGS([TIFFCP], [tiffcp],tiffcp)\n-\n-           dnl libtool will try to strip the static lib, which is a problem for\n-           dnl cross-builds because strip attempts to call a hard-coded ld,\n-           dnl which may not exist in the path. Stripping the .a is not\n-           dnl necessary, so just disable it.\n-           old_striplib=\n-           ;;\n-       esac\n-     fi\n-\n-     AX_CHECK_LINK_FLAG([[-Wl,-headerpad_max_install_names]], [LDFLAGS=\"$LDFLAGS -Wl,-headerpad_max_install_names\"])\n-     CPPFLAGS=\"$CPPFLAGS -DMAC_OSX\"\n-     OBJCXXFLAGS=\"$CXXFLAGS\"\n-     ;;\n-   *linux*)\n-     TARGET_OS=linux\n-     LEVELDB_TARGET_FLAGS=\"-DOS_LINUX\"\n-     ;;\n-   *freebsd*)\n-     LEVELDB_TARGET_FLAGS=\"-DOS_FREEBSD\"\n-     ;;\n-   *openbsd*)\n-     LEVELDB_TARGET_FLAGS=\"-DOS_OPENBSD\"\n-     ;;\n-   *netbsd*)\n-     LEVELDB_TARGET_FLAGS=\"-DOS_NETBSD\"\n-     ;;\n-   *)\n-     OTHER_OS=`echo ${host_os} | awk '{print toupper($0)}'`\n-     AC_MSG_WARN([Guessing LevelDB OS as OS_${OTHER_OS}, please check whether this is correct, if not add an entry to configure.ac.])\n-     LEVELDB_TARGET_FLAGS=\"-DOS_${OTHER_OS}\"\n-     ;;\n-esac\n-\n-if test x$use_pkgconfig = xyes; then\n-  m4_ifndef([PKG_PROG_PKG_CONFIG], [AC_MSG_ERROR(PKG_PROG_PKG_CONFIG macro not found. Please install pkg-config and re-run autogen.sh.)])\n-  m4_ifdef([PKG_PROG_PKG_CONFIG], [\n-  PKG_PROG_PKG_CONFIG\n-  if test x\"$PKG_CONFIG\" = \"x\"; then\n-    AC_MSG_ERROR(pkg-config not found.)\n-  fi\n-  ])\n-fi\n-\n-if test x$use_extended_functional_tests != xno; then\n-  AC_SUBST(EXTENDED_FUNCTIONAL_TESTS, --extended)\n-fi\n-\n-if test x$use_lcov = xyes; then\n-  if test x$LCOV = x; then\n-    AC_MSG_ERROR(\"lcov testing requested but lcov not found\")\n-  fi\n-  if test x$GCOV = x; then\n-    AC_MSG_ERROR(\"lcov testing requested but gcov not found\")\n-  fi\n-  if test x$PYTHON = x; then\n-    AC_MSG_ERROR(\"lcov testing requested but python not found\")\n-  fi\n-  if test x$GENHTML = x; then\n-    AC_MSG_ERROR(\"lcov testing requested but genhtml not found\")\n-  fi\n-  LCOV=\"$LCOV --gcov-tool=$GCOV\"\n-  AX_CHECK_LINK_FLAG([[--coverage]], [LDFLAGS=\"$LDFLAGS --coverage\"],\n-    [AC_MSG_ERROR(\"lcov testing requested but --coverage linker flag does not work\")])\n-  AX_CHECK_COMPILE_FLAG([--coverage],[CXXFLAGS=\"$CXXFLAGS --coverage\"],\n-    [AC_MSG_ERROR(\"lcov testing requested but --coverage flag does not work\")])\n-  AC_DEFINE(USE_COVERAGE, 1, [Define this symbol if coverage is enabled])\n-  CXXFLAGS=\"$CXXFLAGS -Og\"\n-fi\n-\n-if test x$use_lcov_branch != xno; then\n-  AC_SUBST(LCOV_OPTS, \"$LCOV_OPTS --rc lcov_branch_coverage=1\")\n-fi\n-\n-dnl Check for endianness\n-AC_C_BIGENDIAN\n-\n-dnl Check for pthread compile/link requirements\n-AX_PTHREAD\n-\n-# The following macro will add the necessary defines to bitcoin-config.h, but\n-# they also need to be passed down to any subprojects. Pull the results out of\n-# the cache and add them to CPPFLAGS.\n-AC_SYS_LARGEFILE\n-# detect POSIX or GNU variant of strerror_r\n-AC_FUNC_STRERROR_R\n-\n-if test x$ac_cv_sys_file_offset_bits != x &&\n-   test x$ac_cv_sys_file_offset_bits != xno &&\n-   test x$ac_cv_sys_file_offset_bits != xunknown; then\n-  CPPFLAGS=\"$CPPFLAGS -D_FILE_OFFSET_BITS=$ac_cv_sys_file_offset_bits\"\n-fi\n-\n-if test x$ac_cv_sys_large_files != x &&\n-   test x$ac_cv_sys_large_files != xno &&\n-   test x$ac_cv_sys_large_files != xunknown; then\n-  CPPFLAGS=\"$CPPFLAGS -D_LARGE_FILES=$ac_cv_sys_large_files\"\n-fi\n-\n-AX_CHECK_LINK_FLAG([[-Wl,--large-address-aware]], [LDFLAGS=\"$LDFLAGS -Wl,--large-address-aware\"])\n-\n-AX_GCC_FUNC_ATTRIBUTE([visibility])\n-AX_GCC_FUNC_ATTRIBUTE([dllexport])\n-AX_GCC_FUNC_ATTRIBUTE([dllimport])\n-\n-if test x$use_glibc_compat != xno; then\n-\n-  #glibc absorbed clock_gettime in 2.17. librt (its previous location) is safe to link\n-  #in anyway for back-compat.\n-  AC_CHECK_LIB([rt],[clock_gettime],, AC_MSG_ERROR(lib missing))\n-\n-  #__fdelt_chk's params and return type have changed from long unsigned int to long int.\n-  # See which one is present here.\n-  AC_MSG_CHECKING(__fdelt_chk type)\n-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#ifdef _FORTIFY_SOURCE\n-                    #undef _FORTIFY_SOURCE\n-                  #endif\n-                  #define _FORTIFY_SOURCE 2\n-                  #include <sys/select.h>\n-     extern \"C\" long unsigned int __fdelt_warn(long unsigned int);]],[[]])],\n-    [ fdelt_type=\"long unsigned int\"],\n-    [ fdelt_type=\"long int\"])\n-  AC_MSG_RESULT($fdelt_type)\n-  AC_DEFINE_UNQUOTED(FDELT_TYPE, $fdelt_type,[parameter and return value type for __fdelt_chk])\n-else\n-  AC_SEARCH_LIBS([clock_gettime],[rt])\n-fi\n-\n-if test \"x$enable_gprof\" = xyes; then\n-    dnl -pg is incompatible with -pie. Since hardening and profiling together doesn't make sense,\n-    dnl we simply make them mutually exclusive here. Additionally, hardened toolchains may force\n-    dnl -pie by default, in which case it needs to be turned off with -no-pie.\n-\n-    if test x$use_hardening = xyes; then\n-        AC_MSG_ERROR(gprof profiling is not compatible with hardening. Reconfigure with --disable-hardening or --disable-gprof)\n-    fi\n-    use_hardening=no\n-    AX_CHECK_COMPILE_FLAG([-pg],[GPROF_CXXFLAGS=\"-pg\"],\n-        [AC_MSG_ERROR(gprof profiling requested but not available)], [[$CXXFLAG_WERROR]])\n-\n-    AX_CHECK_LINK_FLAG([[-no-pie]], [GPROF_LDFLAGS=\"-no-pie\"])\n-    AX_CHECK_LINK_FLAG([[-pg]],[GPROF_LDFLAGS=\"$GPROF_LDFLAGS -pg\"],\n-        [AC_MSG_ERROR(gprof profiling requested but not available)], [[$GPROF_LDFLAGS]])\n-fi\n-\n-if test x$TARGET_OS != xwindows; then\n-  # All windows code is PIC, forcing it on just adds useless compile warnings\n-  AX_CHECK_COMPILE_FLAG([-fPIC],[PIC_FLAGS=\"-fPIC\"])\n-fi\n-\n-if test x$use_hardening != xno; then\n-  use_hardening=yes\n-  AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\n-  AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n-\n-  AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[\n-    AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[\n-      HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE\"\n-    ])\n-    HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2\"\n-  ])\n-\n-  AX_CHECK_LINK_FLAG([[-Wl,--dynamicbase]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--dynamicbase\"])\n-  AX_CHECK_LINK_FLAG([[-Wl,--nxcompat]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--nxcompat\"])\n-  AX_CHECK_LINK_FLAG([[-Wl,--high-entropy-va]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--high-entropy-va\"])\n-  AX_CHECK_LINK_FLAG([[-Wl,-z,relro]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,relro\"])\n-  AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,now\"])\n-  AX_CHECK_LINK_FLAG([[-fPIE -pie]], [PIE_FLAGS=\"-fPIE\"; HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -pie\"],, [[$CXXFLAG_WERROR]])\n-\n-  case $host in\n-    *mingw*)\n-       AC_CHECK_LIB([ssp],      [main],, AC_MSG_ERROR(lib missing))\n-    ;;\n-  esac\n-fi\n-\n-dnl this flag screws up non-darwin gcc even when the check fails. special-case it.\n-if test x$TARGET_OS = xdarwin; then\n-  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip\"])\n-fi\n-\n-AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h])\n-\n-AC_CHECK_DECLS([strnlen])\n-\n-# Check for daemon(3), unrelated to --with-daemon (although used by it)\n-AC_CHECK_DECLS([daemon])\n-\n-AC_CHECK_DECLS([le16toh, le32toh, le64toh, htole16, htole32, htole64, be16toh, be32toh, be64toh, htobe16, htobe32, htobe64],,,\n-\t\t[#if HAVE_ENDIAN_H\n-                 #include <endian.h>\n-                 #elif HAVE_SYS_ENDIAN_H\n-                 #include <sys/endian.h>\n-                 #endif])\n-\n-AC_CHECK_DECLS([bswap_16, bswap_32, bswap_64],,,\n-\t\t[#if HAVE_BYTESWAP_H\n-                 #include <byteswap.h>\n-                 #endif])\n-\n-AC_CHECK_DECLS([__builtin_clz, __builtin_clzl, __builtin_clzll])\n-\n-dnl Check for malloc_info (for memory statistics information in getmemoryinfo)\n-AC_MSG_CHECKING(for getmemoryinfo)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <malloc.h>]],\n- [[ int f = malloc_info(0, NULL); ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MALLOC_INFO, 1,[Define this symbol if you have malloc_info]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-dnl Check for mallopt(M_ARENA_MAX) (to set glibc arenas)\n-AC_MSG_CHECKING(for mallopt M_ARENA_MAX)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <malloc.h>]],\n- [[ mallopt(M_ARENA_MAX, 1); ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MALLOPT_ARENA_MAX, 1,[Define this symbol if you have mallopt with M_ARENA_MAX]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-AC_MSG_CHECKING([for visibility attribute])\n-AC_LINK_IFELSE([AC_LANG_SOURCE([\n-  int foo_def( void ) __attribute__((visibility(\"default\")));\n-  int main(){}\n-  ])],\n-  [\n-    AC_DEFINE(HAVE_VISIBILITY_ATTRIBUTE,1,[Define if the visibility attribute is supported.])\n-    AC_MSG_RESULT(yes)\n-  ],\n-  [\n-    AC_MSG_RESULT(no)\n-    if test x$use_reduce_exports = xyes; then\n-      AC_MSG_ERROR([Cannot find a working visibility attribute. Use --disable-reduce-exports.])\n-    fi\n-  ]\n-)\n-\n-TEMP_LDFLAGS=\"$LDFLAGS\"\n-LDFLAGS=\"$TEMP_LDFLAGS $PTHREAD_CFLAGS\"\n-AC_MSG_CHECKING([for thread_local support])\n-AC_LINK_IFELSE([AC_LANG_SOURCE([\n-  #include <thread>\n-  static thread_local int foo = 0;\n-  static void run_thread() { foo++;}\n-  int main(){\n-  for(int i = 0; i < 10; i++) { std::thread(run_thread).detach();}\n-  return foo;\n-  }\n-  ])],\n-  [\n-    AC_DEFINE(HAVE_THREAD_LOCAL,1,[Define if thread_local is supported.])\n-    AC_MSG_RESULT(yes)\n-  ],\n-  [\n-    AC_MSG_RESULT(no)\n-  ]\n-)\n-LDFLAGS=\"$TEMP_LDFLAGS\"\n-\n-# Check for different ways of gathering OS randomness\n-AC_MSG_CHECKING(for Linux getrandom syscall)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\n-  #include <sys/syscall.h>\n-  #include <linux/random.h>]],\n- [[ syscall(SYS_getrandom, nullptr, 32, 0); ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYS_GETRANDOM, 1,[Define this symbol if the Linux getrandom system call is available]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-AC_MSG_CHECKING(for getentropy)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>]],\n- [[ getentropy(nullptr, 32) ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GETENTROPY, 1,[Define this symbol if the BSD getentropy system call is available]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-AC_MSG_CHECKING(for getentropy via random.h)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\n- #include <sys/random.h>]],\n- [[ getentropy(nullptr, 32) ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GETENTROPY_RAND, 1,[Define this symbol if the BSD getentropy system call is available with sys/random.h]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-AC_MSG_CHECKING(for sysctl KERN_ARND)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n-  #include <sys/sysctl.h>]],\n- [[ static const int name[2] = {CTL_KERN, KERN_ARND};\n-    sysctl(name, 2, nullptr, nullptr, nullptr, 0); ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYSCTL_ARND, 1,[Define this symbol if the BSD sysctl(KERN_ARND) is available]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-# Check for reduced exports\n-if test x$use_reduce_exports = xyes; then\n-  AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[RE_CXXFLAGS=\"-fvisibility=hidden\"],\n-  [AC_MSG_ERROR([Cannot set default symbol visibility. Use --disable-reduce-exports.])])\n-fi\n-\n-LEVELDB_CPPFLAGS=\n-LIBLEVELDB=\n-LIBMEMENV=\n-AM_CONDITIONAL([EMBEDDED_LEVELDB],[true])\n-AC_SUBST(LEVELDB_CPPFLAGS)\n-AC_SUBST(LIBLEVELDB)\n-AC_SUBST(LIBMEMENV)\n-\n-if test x$enable_wallet != xno; then\n-    dnl Check for libdb_cxx only if wallet enabled\n-    BITCOIN_FIND_BDB48\n-fi\n-\n-dnl Check for libminiupnpc (optional)\n-if test x$use_upnp != xno; then\n-  AC_CHECK_HEADERS(\n-    [miniupnpc/miniwget.h miniupnpc/miniupnpc.h miniupnpc/upnpcommands.h miniupnpc/upnperrors.h],\n-    [AC_CHECK_LIB([miniupnpc], [upnpDiscover], [MINIUPNPC_LIBS=-lminiupnpc], [have_miniupnpc=no])],\n-    [have_miniupnpc=no]\n-  )\n-fi\n-\n-BITCOIN_QT_INIT\n-\n-dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n-BITCOIN_QT_CONFIGURE([$use_pkgconfig], [qt5])\n-\n-if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononono; then\n-    use_boost=no\n-else\n-    use_boost=yes\n-fi\n-\n-if test x$use_boost = xyes; then\n-\n-dnl Minimum required Boost version\n-define(MINIMUM_REQUIRED_BOOST, 1.47.0)\n-\n-dnl Check for boost libs\n-AX_BOOST_BASE([MINIMUM_REQUIRED_BOOST])\n-if test x$want_boost = xno; then\n-    AC_MSG_ERROR([[only libbitcoinconsensus can be built without boost]])\n-fi\n-AX_BOOST_SYSTEM\n-AX_BOOST_FILESYSTEM\n-AX_BOOST_PROGRAM_OPTIONS\n-AX_BOOST_THREAD\n-AX_BOOST_CHRONO\n-\n-dnl Boost 1.56 through 1.62 allow using std::atomic instead of its own atomic\n-dnl counter implementations. In 1.63 and later the std::atomic approach is default.\n-m4_pattern_allow(DBOOST_AC_USE_STD_ATOMIC) dnl otherwise it's treated like a macro\n-BOOST_CPPFLAGS=\"-DBOOST_SP_USE_STD_ATOMIC -DBOOST_AC_USE_STD_ATOMIC $BOOST_CPPFLAGS\"\n-\n-if test x$use_reduce_exports = xyes; then\n-  AC_MSG_CHECKING([for working boost reduced exports])\n-  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-  CPPFLAGS=\"$BOOST_CPPFLAGS $CPPFLAGS\"\n-  AC_PREPROC_IFELSE([AC_LANG_PROGRAM([[\n-      @%:@include <boost/version.hpp>\n-    ]], [[\n-      #if BOOST_VERSION >= 104900\n-      // Everything is okay\n-      #else\n-      #  error Boost version is too old\n-      #endif\n-    ]])],[\n-      AC_MSG_RESULT(yes)\n-    ],[\n-    AC_MSG_ERROR([boost versions < 1.49 are known to be broken with reduced exports. Use --disable-reduce-exports.])\n-  ])\n-  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-fi\n-fi\n-\n-if test x$use_reduce_exports = xyes; then\n-    CXXFLAGS=\"$CXXFLAGS $RE_CXXFLAGS\"\n-    AX_CHECK_LINK_FLAG([[-Wl,--exclude-libs,ALL]], [RELDFLAGS=\"-Wl,--exclude-libs,ALL\"])\n-fi\n-\n-if test x$use_tests = xyes; then\n-\n-  if test x$HEXDUMP = x; then\n-    AC_MSG_ERROR(hexdump is required for tests)\n-  fi\n-\n-\n-  if test x$use_boost = xyes; then\n-\n-  AX_BOOST_UNIT_TEST_FRAMEWORK\n-\n-  dnl Determine if -DBOOST_TEST_DYN_LINK is needed\n-  AC_MSG_CHECKING([for dynamic linked boost test])\n-  TEMP_LIBS=\"$LIBS\"\n-  LIBS=\"$LIBS $BOOST_LDFLAGS $BOOST_UNIT_TEST_FRAMEWORK_LIB\"\n-  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-  CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-  AC_LINK_IFELSE([AC_LANG_SOURCE([\n-       #define BOOST_TEST_DYN_LINK\n-       #define BOOST_TEST_MAIN\n-        #include <boost/test/unit_test.hpp>\n-\n-       ])],\n-    [AC_MSG_RESULT(yes)]\n-    [TESTDEFS=\"$TESTDEFS -DBOOST_TEST_DYN_LINK\"],\n-    [AC_MSG_RESULT(no)])\n-  LIBS=\"$TEMP_LIBS\"\n-  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-\n-  fi\n-fi\n-\n-if test x$use_boost = xyes; then\n-\n-BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_PROGRAM_OPTIONS_LIB $BOOST_THREAD_LIB $BOOST_CHRONO_LIB\"\n-\n-\n-dnl If boost (prior to 1.57) was built without c++11, it emulated scoped enums\n-dnl using c++98 constructs. Unfortunately, this implementation detail leaked into\n-dnl the abi. This was fixed in 1.57.\n-\n-dnl When building against that installed version using c++11, the headers pick up\n-dnl on the native c++11 scoped enum support and enable it, however it will fail to\n-dnl link. This can be worked around by disabling c++11 scoped enums if linking will\n-dnl fail.\n-dnl BOOST_NO_SCOPED_ENUMS was changed to BOOST_NO_CXX11_SCOPED_ENUMS in 1.51.\n-\n-TEMP_LIBS=\"$LIBS\"\n-LIBS=\"$BOOST_LIBS $LIBS\"\n-TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-AC_MSG_CHECKING([for mismatched boost c++11 scoped enums])\n-AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n-  #include <boost/config.hpp>\n-  #include <boost/version.hpp>\n-  #if !defined(BOOST_NO_SCOPED_ENUMS) && !defined(BOOST_NO_CXX11_SCOPED_ENUMS) && BOOST_VERSION < 105700\n-  #define BOOST_NO_SCOPED_ENUMS\n-  #define BOOST_NO_CXX11_SCOPED_ENUMS\n-  #define CHECK\n-  #endif\n-  #include <boost/filesystem.hpp>\n-  ]],[[\n-  #if defined(CHECK)\n-    boost::filesystem::copy_file(\"foo\", \"bar\");\n-  #else\n-    choke;\n-  #endif\n-  ]])],\n-  [AC_MSG_RESULT(mismatched); BOOST_CPPFLAGS=\"$BOOST_CPPFLAGS -DBOOST_NO_SCOPED_ENUMS -DBOOST_NO_CXX11_SCOPED_ENUMS\"], [AC_MSG_RESULT(ok)])\n-LIBS=\"$TEMP_LIBS\"\n-CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-\n-dnl Boost >= 1.50 uses sleep_for rather than the now-deprecated sleep, however\n-dnl it was broken from 1.50 to 1.52 when backed by nanosleep. Use sleep_for if\n-dnl a working version is available, else fall back to sleep. sleep was removed\n-dnl after 1.56.\n-dnl If neither is available, abort.\n-TEMP_LIBS=\"$LIBS\"\n-LIBS=\"$BOOST_LIBS $LIBS\"\n-TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n-  #include <boost/thread/thread.hpp>\n-  #include <boost/version.hpp>\n-  ]],[[\n-  #if BOOST_VERSION >= 105000 && (!defined(BOOST_HAS_NANOSLEEP) || BOOST_VERSION >= 105200)\n-      boost::this_thread::sleep_for(boost::chrono::milliseconds(0));\n-  #else\n-   choke me\n-  #endif\n-  ]])],\n-  [boost_sleep=yes;\n-     AC_DEFINE(HAVE_WORKING_BOOST_SLEEP_FOR, 1, [Define this symbol if boost sleep_for works])],\n-  [boost_sleep=no])\n-LIBS=\"$TEMP_LIBS\"\n-CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-\n-if test x$boost_sleep != xyes; then\n-TEMP_LIBS=\"$LIBS\"\n-LIBS=\"$BOOST_LIBS $LIBS\"\n-TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n-  #include <boost/version.hpp>\n-  #include <boost/thread.hpp>\n-  #include <boost/date_time/posix_time/posix_time_types.hpp>\n-  ]],[[\n-  #if BOOST_VERSION <= 105600\n-      boost::this_thread::sleep(boost::posix_time::milliseconds(0));\n-  #else\n-   choke me\n-  #endif\n-  ]])],\n-  [boost_sleep=yes; AC_DEFINE(HAVE_WORKING_BOOST_SLEEP, 1, [Define this symbol if boost sleep works])],\n-  [boost_sleep=no])\n-LIBS=\"$TEMP_LIBS\"\n-CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-fi\n-\n-if test x$boost_sleep != xyes; then\n-  AC_MSG_ERROR(No working boost sleep implementation found.)\n-fi\n-\n-fi\n-\n-if test x$use_pkgconfig = xyes; then\n-  : dnl\n-  m4_ifdef(\n-    [PKG_CHECK_MODULES],\n-    [\n-      PKG_CHECK_MODULES([SSL], [libssl],, [AC_MSG_ERROR(openssl not found.)])\n-      PKG_CHECK_MODULES([CRYPTO], [libcrypto],,[AC_MSG_ERROR(libcrypto not found.)])\n-      BITCOIN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [BITCOIN_QT_FAIL(libprotobuf not found)])])\n-      if test x$use_qr != xno; then\n-        BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n-      fi\n-      if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n-        PKG_CHECK_MODULES([EVENT], [libevent],, [AC_MSG_ERROR(libevent not found.)])\n-        if test x$TARGET_OS != xwindows; then\n-          PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads],, [AC_MSG_ERROR(libevent_pthreads not found.)])\n-        fi\n-      fi\n-\n-      if test \"x$use_zmq\" = \"xyes\"; then\n-        PKG_CHECK_MODULES([ZMQ],[libzmq >= 4],\n-          [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],\n-          [AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n-           AC_MSG_WARN([libzmq version 4.x or greater not found, disabling])\n-           use_zmq=no])\n-      else\n-          AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n-      fi\n-    ]\n-  )\n-else\n-  AC_CHECK_HEADER([openssl/crypto.h],,AC_MSG_ERROR(libcrypto headers missing))\n-  AC_CHECK_LIB([crypto],      [main],CRYPTO_LIBS=-lcrypto, AC_MSG_ERROR(libcrypto missing))\n-\n-  AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)\n-  AC_CHECK_LIB([ssl],         [main],SSL_LIBS=-lssl, AC_MSG_ERROR(libssl missing))\n-\n-  if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n-    AC_CHECK_HEADER([event2/event.h],, AC_MSG_ERROR(libevent headers missing),)\n-    AC_CHECK_LIB([event],[main],EVENT_LIBS=-levent,AC_MSG_ERROR(libevent missing))\n-    if test x$TARGET_OS != xwindows; then\n-      AC_CHECK_LIB([event_pthreads],[main],EVENT_PTHREADS_LIBS=-levent_pthreads,AC_MSG_ERROR(libevent_pthreads missing))\n-    fi\n-  fi\n-\n-  if test \"x$use_zmq\" = \"xyes\"; then\n-     AC_CHECK_HEADER([zmq.h],\n-       [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],\n-       [AC_MSG_WARN([zmq.h not found, disabling zmq support])\n-        use_zmq=no\n-        AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])])\n-     AC_CHECK_LIB([zmq],[zmq_ctx_shutdown],ZMQ_LIBS=-lzmq,\n-       [AC_MSG_WARN([libzmq >= 4.0 not found, disabling zmq support])\n-        use_zmq=no\n-        AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])])\n-  else\n-    AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n-  fi\n-\n-  if test \"x$use_zmq\" = \"xyes\"; then\n-    dnl Assume libzmq was built for static linking\n-    case $host in\n-      *mingw*)\n-        ZMQ_CFLAGS=\"$ZMQ_CFLAGS -DZMQ_STATIC\"\n-      ;;\n-    esac\n-  fi\n-\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], BITCOIN_QT_FAIL(libprotobuf not found)))\n-  if test x$use_qr != xno; then\n-    BITCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])\n-    BITCOIN_QT_CHECK([AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)])\n-  fi\n-fi\n-\n-save_CXXFLAGS=\"${CXXFLAGS}\"\n-CXXFLAGS=\"${CXXFLAGS} ${CRYPTO_CFLAGS} ${SSL_CFLAGS}\"\n-AC_CHECK_DECLS([EVP_MD_CTX_new],,,[AC_INCLUDES_DEFAULT\n-#include <openssl/x509_vfy.h>\n-])\n-CXXFLAGS=\"${save_CXXFLAGS}\"\n-\n-dnl univalue check\n-\n-need_bundled_univalue=yes\n-\n-if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononono; then\n-  need_bundled_univalue=no\n-else\n-\n-if test x$system_univalue != xno ; then\n-  found_univalue=no\n-  if test x$use_pkgconfig = xyes; then\n-    : #NOP\n-    m4_ifdef(\n-      [PKG_CHECK_MODULES],\n-      [\n-        PKG_CHECK_MODULES([UNIVALUE],[libunivalue >= 1.0.4],[found_univalue=yes],[true])\n-      ]\n-    )\n-  else\n-    AC_CHECK_HEADER([univalue.h],[\n-      AC_CHECK_LIB([univalue],  [main],[\n-        UNIVALUE_LIBS=-lunivalue\n-        found_univalue=yes\n-      ],[true])\n-    ],[true])\n-  fi\n-\n-  if test x$found_univalue = xyes ; then\n-    system_univalue=yes\n-    need_bundled_univalue=no\n-  elif test x$system_univalue = xyes ; then\n-    AC_MSG_ERROR([univalue not found])\n-  else\n-    system_univalue=no\n-  fi\n-fi\n-\n-if test x$need_bundled_univalue = xyes ; then\n-  UNIVALUE_CFLAGS='-I$(srcdir)/univalue/include'\n-  UNIVALUE_LIBS='univalue/libunivalue.la'\n-fi\n-\n-fi\n-\n-AM_CONDITIONAL([EMBEDDED_UNIVALUE],[test x$need_bundled_univalue = xyes])\n-AC_SUBST(UNIVALUE_CFLAGS)\n-AC_SUBST(UNIVALUE_LIBS)\n-\n-BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)\n-\n-AC_MSG_CHECKING([whether to build bitcoind])\n-AM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])\n-AC_MSG_RESULT($build_bitcoind)\n-\n-AC_MSG_CHECKING([whether to build utils (bitcoin-cli bitcoin-tx)])\n-AM_CONDITIONAL([BUILD_BITCOIN_UTILS], [test x$build_bitcoin_utils = xyes])\n-AC_MSG_RESULT($build_bitcoin_utils)\n-\n-AC_MSG_CHECKING([whether to build libraries])\n-AM_CONDITIONAL([BUILD_BITCOIN_LIBS], [test x$build_bitcoin_libs = xyes])\n-if test x$build_bitcoin_libs = xyes; then\n-  AC_DEFINE(HAVE_CONSENSUS_LIB, 1, [Define this symbol if the consensus lib has been built])\n-  AC_CONFIG_FILES([libbitcoinconsensus.pc:libbitcoinconsensus.pc.in])\n-fi\n-AC_MSG_RESULT($build_bitcoin_libs)\n-\n-AC_LANG_POP\n-\n-if test \"x$use_ccache\" != \"xno\"; then\n-  AC_MSG_CHECKING(if ccache should be used)\n-  if test x$CCACHE = x; then\n-    if test \"x$use_ccache\" = \"xyes\"; then\n-      AC_MSG_ERROR([ccache not found.]);\n-    else\n-      use_ccache=no\n-    fi\n-  else\n-    use_ccache=yes\n-    CC=\"$ac_cv_path_CCACHE $CC\"\n-    CXX=\"$ac_cv_path_CCACHE $CXX\"\n-  fi\n-  AC_MSG_RESULT($use_ccache)\n-fi\n-if test \"x$use_ccache\" = \"xyes\"; then\n-    AX_CHECK_PREPROC_FLAG([-Qunused-arguments],[CPPFLAGS=\"-Qunused-arguments $CPPFLAGS\"])\n-fi\n-\n-dnl enable wallet\n-AC_MSG_CHECKING([if wallet should be enabled])\n-if test x$enable_wallet != xno; then\n-  AC_MSG_RESULT(yes)\n-  AC_DEFINE_UNQUOTED([ENABLE_WALLET],[1],[Define to 1 to enable wallet functions])\n-\n-else\n-  AC_MSG_RESULT(no)\n-fi\n-\n-dnl enable upnp support\n-AC_MSG_CHECKING([whether to build with support for UPnP])\n-if test x$have_miniupnpc = xno; then\n-  if test x$use_upnp = xyes; then\n-     AC_MSG_ERROR(\"UPnP requested but cannot be built. use --without-miniupnpc\")\n-  fi\n-  AC_MSG_RESULT(no)\n-else\n-  if test x$use_upnp != xno; then\n-    AC_MSG_RESULT(yes)\n-    AC_MSG_CHECKING([whether to build with UPnP enabled by default])\n-    use_upnp=yes\n-    upnp_setting=0\n-    if test x$use_upnp_default != xno; then\n-      use_upnp_default=yes\n-      upnp_setting=1\n-    fi\n-    AC_MSG_RESULT($use_upnp_default)\n-    AC_DEFINE_UNQUOTED([USE_UPNP],[$upnp_setting],[UPnP support not compiled if undefined, otherwise value (0 or 1) determines default state])\n-    if test x$TARGET_OS = xwindows; then\n-      MINIUPNPC_CPPFLAGS=\"-DSTATICLIB -DMINIUPNP_STATICLIB\"\n-    fi\n-  else\n-    AC_MSG_RESULT(no)\n-  fi\n-fi\n-\n-dnl these are only used when qt is enabled\n-BUILD_TEST_QT=\"\"\n-if test x$bitcoin_enable_qt != xno; then\n-  dnl enable dbus support\n-  AC_MSG_CHECKING([whether to build GUI with support for D-Bus])\n-  if test x$bitcoin_enable_qt_dbus != xno; then\n-    AC_DEFINE([USE_DBUS],[1],[Define if dbus support should be compiled in])\n-  fi\n-  AC_MSG_RESULT($bitcoin_enable_qt_dbus)\n-\n-  dnl enable qr support\n-  AC_MSG_CHECKING([whether to build GUI with support for QR codes])\n-  if test x$have_qrencode = xno; then\n-    if test x$use_qr = xyes; then\n-     AC_MSG_ERROR(\"QR support requested but cannot be built. use --without-qrencode\")\n-    fi\n-    AC_MSG_RESULT(no)\n-  else\n-    if test x$use_qr != xno; then\n-      AC_MSG_RESULT(yes)\n-      AC_DEFINE([USE_QRCODE],[1],[Define if QR support should be compiled in])\n-      use_qr=yes\n-    else\n-      AC_MSG_RESULT(no)\n-    fi\n-  fi\n-\n-  if test x$XGETTEXT = x; then\n-    AC_MSG_WARN(\"xgettext is required to update qt translations\")\n-  fi\n-\n-  AC_MSG_CHECKING([whether to build test_bitcoin-qt])\n-  if test x$use_gui_tests$bitcoin_enable_qt_test = xyesyes; then\n-    AC_MSG_RESULT([yes])\n-    BUILD_TEST_QT=\"yes\"\n-  else\n-    AC_MSG_RESULT([no])\n-  fi\n-fi\n-\n-AM_CONDITIONAL([ENABLE_ZMQ], [test \"x$use_zmq\" = \"xyes\"])\n-\n-AC_MSG_CHECKING([whether to build test_bitcoin])\n-if test x$use_tests = xyes; then\n-  AC_MSG_RESULT([yes])\n-  BUILD_TEST=\"yes\"\n-else\n-  AC_MSG_RESULT([no])\n-  BUILD_TEST=\"\"\n-fi\n-\n-AC_MSG_CHECKING([whether to reduce exports])\n-if test x$use_reduce_exports = xyes; then\n-  AC_MSG_RESULT([yes])\n-else\n-  AC_MSG_RESULT([no])\n-fi\n-\n-if test x$build_bitcoin_utils$build_bitcoin_libs$build_bitcoind$bitcoin_enable_qt$use_bench$use_tests = xnononononono; then\n-  AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-libs --with-daemon --with-gui --enable-bench or --enable-tests])\n-fi\n-\n-AM_CONDITIONAL([TARGET_DARWIN], [test x$TARGET_OS = xdarwin])\n-AM_CONDITIONAL([BUILD_DARWIN], [test x$BUILD_OS = xdarwin])\n-AM_CONDITIONAL([TARGET_WINDOWS], [test x$TARGET_OS = xwindows])\n-AM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet = xyes])\n-AM_CONDITIONAL([ENABLE_TESTS],[test x$BUILD_TEST = xyes])\n-AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])\n-AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$BUILD_TEST_QT = xyes])\n-AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])\n-AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n-AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\n-AM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])\n-AM_CONDITIONAL([HARDEN],[test x$use_hardening = xyes])\n-AM_CONDITIONAL([ENABLE_HWCRC32],[test x$enable_hwcrc32 = xyes])\n-AM_CONDITIONAL([USE_ASM],[test x$use_asm = xyes])\n-\n-AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\n-AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])\n-AC_DEFINE(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION, [Build revision])\n-AC_DEFINE(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD, [Version Build])\n-AC_DEFINE(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE, [Version is release])\n-AC_DEFINE(COPYRIGHT_YEAR, _COPYRIGHT_YEAR, [Copyright year])\n-AC_DEFINE(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\", [Copyright holder(s) before %s replacement])\n-AC_DEFINE(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\", [Replacement for %s in copyright holders string])\n-define(_COPYRIGHT_HOLDERS_FINAL, [patsubst(_COPYRIGHT_HOLDERS, [%s], [_COPYRIGHT_HOLDERS_SUBSTITUTION])])\n-AC_DEFINE(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\", [Copyright holder(s)])\n-AC_SUBST(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR)\n-AC_SUBST(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR)\n-AC_SUBST(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION)\n-AC_SUBST(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD)\n-AC_SUBST(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE)\n-AC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)\n-AC_SUBST(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\")\n-AC_SUBST(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\")\n-AC_SUBST(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\")\n-AC_SUBST(BITCOIN_DAEMON_NAME)\n-AC_SUBST(BITCOIN_GUI_NAME)\n-AC_SUBST(BITCOIN_CLI_NAME)\n-AC_SUBST(BITCOIN_TX_NAME)\n-\n-AC_SUBST(RELDFLAGS)\n-AC_SUBST(ERROR_CXXFLAGS)\n-AC_SUBST(GPROF_CXXFLAGS)\n-AC_SUBST(GPROF_LDFLAGS)\n-AC_SUBST(HARDENED_CXXFLAGS)\n-AC_SUBST(HARDENED_CPPFLAGS)\n-AC_SUBST(HARDENED_LDFLAGS)\n-AC_SUBST(PIC_FLAGS)\n-AC_SUBST(PIE_FLAGS)\n-AC_SUBST(SANITIZER_CXXFLAGS)\n-AC_SUBST(SANITIZER_LDFLAGS)\n-AC_SUBST(SSE42_CXXFLAGS)\n-AC_SUBST(LIBTOOL_APP_LDFLAGS)\n-AC_SUBST(USE_UPNP)\n-AC_SUBST(USE_QRCODE)\n-AC_SUBST(BOOST_LIBS)\n-AC_SUBST(TESTDEFS)\n-AC_SUBST(LEVELDB_TARGET_FLAGS)\n-AC_SUBST(MINIUPNPC_CPPFLAGS)\n-AC_SUBST(MINIUPNPC_LIBS)\n-AC_SUBST(CRYPTO_LIBS)\n-AC_SUBST(SSL_LIBS)\n-AC_SUBST(EVENT_LIBS)\n-AC_SUBST(EVENT_PTHREADS_LIBS)\n-AC_SUBST(ZMQ_LIBS)\n-AC_SUBST(PROTOBUF_LIBS)\n-AC_SUBST(QR_LIBS)\n-AC_CONFIG_FILES([Makefile src/Makefile doc/man/Makefile share/setup.nsi share/qt/Info.plist test/config.ini])\n-AC_CONFIG_FILES([contrib/devtools/split-debug.sh],[chmod +x contrib/devtools/split-debug.sh])\n-AM_COND_IF([HAVE_DOXYGEN], [AC_CONFIG_FILES([doc/Doxyfile])])\n-AC_CONFIG_LINKS([contrib/filter-lcov.py:contrib/filter-lcov.py])\n-AC_CONFIG_LINKS([test/functional/test_runner.py:test/functional/test_runner.py])\n-AC_CONFIG_LINKS([test/util/bitcoin-util-test.py:test/util/bitcoin-util-test.py])\n-AC_CONFIG_LINKS([test/util/rpcauth-test.py:test/util/rpcauth-test.py])\n-\n-dnl boost's m4 checks do something really nasty: they export these vars. As a\n-dnl result, they leak into secp256k1's configure and crazy things happen.\n-dnl Until this is fixed upstream and we've synced, we'll just un-export them.\n-CPPFLAGS_TEMP=\"$CPPFLAGS\"\n-unset CPPFLAGS\n-CPPFLAGS=\"$CPPFLAGS_TEMP\"\n-\n-LDFLAGS_TEMP=\"$LDFLAGS\"\n-unset LDFLAGS\n-LDFLAGS=\"$LDFLAGS_TEMP\"\n-\n-LIBS_TEMP=\"$LIBS\"\n-unset LIBS\n-LIBS=\"$LIBS_TEMP\"\n-\n-PKGCONFIG_PATH_TEMP=\"$PKG_CONFIG_PATH\"\n-unset PKG_CONFIG_PATH\n-PKG_CONFIG_PATH=\"$PKGCONFIG_PATH_TEMP\"\n-\n-PKGCONFIG_LIBDIR_TEMP=\"$PKG_CONFIG_LIBDIR\"\n-unset PKG_CONFIG_LIBDIR\n-PKG_CONFIG_LIBDIR=\"$PKGCONFIG_LIBDIR_TEMP\"\n-\n-if test x$need_bundled_univalue = xyes; then\n-  AC_CONFIG_SUBDIRS([src/univalue])\n-fi\n-\n-ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --with-bignum=no --enable-module-recovery --disable-jni\"\n-AC_CONFIG_SUBDIRS([src/secp256k1])\n-\n-AC_OUTPUT\n-\n-dnl Taken from https://wiki.debian.org/RpathIssue\n-case $host in\n-   *-*-linux-gnu)\n-     AC_MSG_RESULT([Fixing libtool for -rpath problems.])\n-     sed < libtool > libtool-2 \\\n-     's/^hardcode_libdir_flag_spec.*$'/'hardcode_libdir_flag_spec=\" -D__LIBTOOL_IS_A_FOOL__ \"/'\n-     mv libtool-2 libtool\n-     chmod 755 libtool\n-   ;;\n-esac\n-\n-dnl Replace the BUILDDIR path with the correct Windows path if compiling on Native Windows\n-case ${OS} in\n-   *Windows*)\n-     sed  's/BUILDDIR=\"\\/\\([[a-z]]\\)/BUILDDIR=\"\\1:/'  test/config.ini > test/config-2.ini\n-     mv test/config-2.ini test/config.ini\n-   ;;\n-esac\n-\n-echo\n-echo \"Options used to compile and link:\"\n-echo \"  with wallet   = $enable_wallet\"\n-echo \"  with gui / qt = $bitcoin_enable_qt\"\n-if test x$bitcoin_enable_qt != xno; then\n-    echo \"    qt version  = $bitcoin_qt_got_major_vers\"\n-    echo \"    with qr     = $use_qr\"\n-fi\n-echo \"  with zmq      = $use_zmq\"\n-echo \"  with test     = $use_tests\"\n-echo \"  with bench    = $use_bench\"\n-echo \"  with upnp     = $use_upnp\"\n-echo \"  use asm       = $use_asm\"\n-echo \"  sanitizers    = $use_sanitizers\"\n-echo \"  debug enabled = $enable_debug\"\n-echo \"  gprof enabled = $enable_gprof\"\n-echo \"  werror        = $enable_werror\"\n-echo\n-echo \"  target os     = $TARGET_OS\"\n-echo \"  build os      = $BUILD_OS\"\n-echo\n-echo \"  CC            = $CC\"\n-echo \"  CFLAGS        = $CFLAGS\"\n-echo \"  CPPFLAGS      = $CPPFLAGS\"\n-echo \"  CXX           = $CXX\"\n-echo \"  CXXFLAGS      = $CXXFLAGS\"\n-echo \"  LDFLAGS       = $LDFLAGS\"\n-echo \"  ARFLAGS       = $ARFLAGS\"\n-echo"
      },
      {
        "sha": "a582a724f75ae59e6a1c1f19fbde10d7f0834462",
        "filename": "contrib/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 50,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/README.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,50 +0,0 @@\n-Repository Tools\n----------------------\n-\n-### [Developer tools](/contrib/devtools) ###\n-Specific tools for developers working on this repository.\n-Contains the script `github-merge.py` for merging GitHub pull requests securely and signing them using GPG.\n-\n-### [Verify-Commits](/contrib/verify-commits) ###\n-Tool to verify that every merge commit was signed by a developer using the above `github-merge.py` script.\n-\n-### [Linearize](/contrib/linearize) ###\n-Construct a linear, no-fork, best version of the blockchain.\n-\n-### [Qos](/contrib/qos) ###\n-\n-A Linux bash script that will set up traffic control (tc) to limit the outgoing bandwidth for connections to the Bitcoin network. This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it.\n-\n-### [Seeds](/contrib/seeds) ###\n-Utility to generate the pnSeed[] array that is compiled into the client.\n-\n-Build Tools and Keys\n----------------------\n-\n-### [Debian](/contrib/debian) ###\n-Contains files used to package bitcoind/bitcoin-qt\n-for Debian-based Linux systems. If you compile bitcoind/bitcoin-qt yourself, there are some useful files here.\n-\n-### [Gitian-descriptors](/contrib/gitian-descriptors) ###\n-Files used during the gitian build process. For more information about gitian, see the [the Bitcoin Core documentation repository](https://github.com/bitcoin-core/docs).\n-\n-### [Gitian-keys](/contrib/gitian-keys)\n-PGP keys used for signing Bitcoin Core [Gitian release](/doc/release-process.md) results.\n-\n-### [MacDeploy](/contrib/macdeploy) ###\n-Scripts and notes for Mac builds. \n-\n-### [RPM](/contrib/rpm) ###\n-RPM spec file for building bitcoin-core on RPM based distributions.\n-\n-### [Gitian-build](/contrib/gitian-build.sh) ###\n-Script for running full Gitian builds.\n-\n-Test and Verify Tools \n----------------------\n-\n-### [TestGen](/contrib/testgen) ###\n-Utilities to generate test vectors for the data-driven Bitcoin tests.\n-\n-### [Verify Binaries](/contrib/verifybinaries) ###\n-This script attempts to download and verify the signature file SHA256SUMS.asc from bitcoin.org."
      },
      {
        "sha": "732981fe7c5d1cb447ee90aac1c8ffb96ab24636",
        "filename": "contrib/bitcoin-cli.bash-completion",
        "status": "removed",
        "additions": 0,
        "deletions": 154,
        "changes": 154,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/bitcoin-cli.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/bitcoin-cli.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-cli.bash-completion?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,154 +0,0 @@\n-# bash programmable completion for bitcoin-cli(1)\n-# Copyright (c) 2012-2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# call $bitcoin-cli for RPC\n-_bitcoin_rpc() {\n-    # determine already specified args necessary for RPC\n-    local rpcargs=()\n-    for i in ${COMP_LINE}; do\n-        case \"$i\" in\n-            -conf=*|-datadir=*|-regtest|-rpc*|-testnet)\n-                rpcargs=( \"${rpcargs[@]}\" \"$i\" )\n-                ;;\n-        esac\n-    done\n-    $bitcoin_cli \"${rpcargs[@]}\" \"$@\"\n-}\n-\n-# Add wallet accounts to COMPREPLY\n-_bitcoin_accounts() {\n-    local accounts\n-    accounts=$(_bitcoin_rpc listaccounts | awk -F '\"' '{ print $2 }')\n-    COMPREPLY=( \"${COMPREPLY[@]}\" $( compgen -W \"$accounts\" -- \"$cur\" ) )\n-}\n-\n-_bitcoin_cli() {\n-    local cur prev words=() cword\n-    local bitcoin_cli\n-\n-    # save and use original argument to invoke bitcoin-cli for -help, help and RPC\n-    # as bitcoin-cli might not be in $PATH\n-    bitcoin_cli=\"$1\"\n-\n-    COMPREPLY=()\n-    _get_comp_words_by_ref -n = cur prev words cword\n-\n-    if ((cword > 5)); then\n-        case ${words[cword-5]} in\n-            sendtoaddress)\n-                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-        esac\n-    fi\n-\n-    if ((cword > 4)); then\n-        case ${words[cword-4]} in\n-            importaddress|listtransactions|setban)\n-                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-            signrawtransaction)\n-                COMPREPLY=( $( compgen -W \"ALL NONE SINGLE ALL|ANYONECANPAY NONE|ANYONECANPAY SINGLE|ANYONECANPAY\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-        esac\n-    fi\n-\n-    if ((cword > 3)); then\n-        case ${words[cword-3]} in\n-            addmultisigaddress)\n-                _bitcoin_accounts\n-                return 0\n-                ;;\n-            getbalance|gettxout|importaddress|importpubkey|importprivkey|listreceivedbyaccount|listreceivedbyaddress|listsinceblock)\n-                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-        esac\n-    fi\n-\n-    if ((cword > 2)); then\n-        case ${words[cword-2]} in\n-            addnode)\n-                COMPREPLY=( $( compgen -W \"add remove onetry\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-            setban)\n-                COMPREPLY=( $( compgen -W \"add remove\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-            fundrawtransaction|getblock|getblockheader|getmempoolancestors|getmempooldescendants|getrawtransaction|gettransaction|listaccounts|listreceivedbyaccount|listreceivedbyaddress|sendrawtransaction)\n-                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-            move|setaccount)\n-                _bitcoin_accounts\n-                return 0\n-                ;;\n-        esac\n-    fi\n-\n-    case \"$prev\" in\n-        backupwallet|dumpwallet|importwallet)\n-            _filedir\n-            return 0\n-            ;;\n-        getaddednodeinfo|getrawmempool|lockunspent|setgenerate)\n-            COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-            return 0\n-            ;;\n-        getaccountaddress|getaddressesbyaccount|getbalance|getnewaddress|getreceivedbyaccount|listtransactions|move|sendfrom|sendmany)\n-            _bitcoin_accounts\n-            return 0\n-            ;;\n-    esac\n-\n-    case \"$cur\" in\n-        -conf=*)\n-            cur=\"${cur#*=}\"\n-            _filedir\n-            return 0\n-            ;;\n-        -datadir=*)\n-            cur=\"${cur#*=}\"\n-            _filedir -d\n-            return 0\n-            ;;\n-        -*=*)\t# prevent nonsense completions\n-            return 0\n-            ;;\n-        *)\n-            local helpopts commands\n-\n-            # only parse -help if senseful\n-            if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n-                helpopts=$($bitcoin_cli -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n-            fi\n-\n-            # only parse help if senseful\n-            if [[ -z \"$cur\" || \"$cur\" =~ ^[a-z] ]]; then\n-                commands=$(_bitcoin_rpc help 2>/dev/null | awk '$1 ~ /^[a-z]/ { print $1; }')\n-            fi\n-\n-            COMPREPLY=( $( compgen -W \"$helpopts $commands\" -- \"$cur\" ) )\n-\n-            # Prevent space if an argument is desired\n-            if [[ $COMPREPLY == *= ]]; then\n-                compopt -o nospace\n-            fi\n-            return 0\n-            ;;\n-    esac\n-} &&\n-complete -F _bitcoin_cli bitcoin-cli\n-\n-# Local variables:\n-# mode: shell-script\n-# sh-basic-offset: 4\n-# sh-indent-comment: t\n-# indent-tabs-mode: nil\n-# End:\n-# ex: ts=4 sw=4 et filetype=sh"
      },
      {
        "sha": "b8133bf78914be68a33d881223da861820fdb05e",
        "filename": "contrib/bitcoin-qt.pro",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-qt.pro?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,21 +0,0 @@\n-FORMS += \\\n-    ../src/qt/forms/aboutdialog.ui \\\n-    ../src/qt/forms/addressbookpage.ui \\\n-    ../src/qt/forms/askpassphrasedialog.ui \\\n-    ../src/qt/forms/coincontroldialog.ui \\\n-    ../src/qt/forms/editaddressdialog.ui \\\n-    ../src/qt/forms/helpmessagedialog.ui \\\n-    ../src/qt/forms/intro.ui \\\n-    ../src/qt/forms/openuridialog.ui \\\n-    ../src/qt/forms/optionsdialog.ui \\\n-    ../src/qt/forms/overviewpage.ui \\\n-    ../src/qt/forms/receivecoinsdialog.ui \\\n-    ../src/qt/forms/receiverequestdialog.ui \\\n-    ../src/qt/forms/debugwindow.ui \\\n-    ../src/qt/forms/sendcoinsdialog.ui \\\n-    ../src/qt/forms/sendcoinsentry.ui \\\n-    ../src/qt/forms/signverifymessagedialog.ui \\\n-    ../src/qt/forms/transactiondescdialog.ui \\\n-\n-RESOURCES += \\\n-    ../src/qt/bitcoin.qrc"
      },
      {
        "sha": "a83d2979ed3a8f11edea358937e8d5d359d58b4c",
        "filename": "contrib/bitcoin-tx.bash-completion",
        "status": "removed",
        "additions": 0,
        "deletions": 57,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/bitcoin-tx.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/bitcoin-tx.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-tx.bash-completion?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,57 +0,0 @@\n-# bash programmable completion for bitcoin-tx(1)\n-# Copyright (c) 2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-_bitcoin_tx() {\n-    local cur prev words=() cword\n-    local bitcoin_tx\n-\n-    # save and use original argument to invoke bitcoin-tx for -help\n-    # it might not be in $PATH\n-    bitcoin_tx=\"$1\"\n-\n-    COMPREPLY=()\n-    _get_comp_words_by_ref -n =: cur prev words cword\n-\n-    case \"$cur\" in\n-        load=*:*)\n-            cur=\"${cur#load=*:}\"\n-            _filedir\n-            return 0\n-            ;;\n-        *=*)\t# prevent attempts to complete other arguments\n-            return 0\n-            ;;\n-    esac\n-\n-    if [[ \"$cword\" == 1 || ( \"$prev\" != \"-create\" && \"$prev\" == -* ) ]]; then\n-        # only options (or an uncompletable hex-string) allowed\n-        # parse bitcoin-tx -help for options\n-        local helpopts\n-        helpopts=$($bitcoin_tx -help | sed -e '/^  -/ p' -e d )\n-        COMPREPLY=( $( compgen -W \"$helpopts\" -- \"$cur\" ) )\n-    else\n-        # only commands are allowed\n-        # parse -help for commands\n-        local helpcmds\n-        helpcmds=$($bitcoin_tx -help | sed -e '1,/Commands:/d' -e 's/=.*/=/' -e '/^  [a-z]/ p' -e d )\n-        COMPREPLY=( $( compgen -W \"$helpcmds\" -- \"$cur\" ) )\n-    fi\n-\n-    # Prevent space if an argument is desired\n-    if [[ $COMPREPLY == *= ]]; then\n-        compopt -o nospace\n-    fi\n-\n-    return 0\n-} &&\n-complete -F _bitcoin_tx bitcoin-tx\n-\n-# Local variables:\n-# mode: shell-script\n-# sh-basic-offset: 4\n-# sh-indent-comment: t\n-# indent-tabs-mode: nil\n-# End:\n-# ex: ts=4 sw=4 et filetype=sh"
      },
      {
        "sha": "cccd4bde0d33d9dae39a23b53e2816ae5f1c5464",
        "filename": "contrib/bitcoind.bash-completion",
        "status": "removed",
        "additions": 0,
        "deletions": 56,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoind.bash-completion?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,56 +0,0 @@\n-# bash programmable completion for bitcoind(1) and bitcoin-qt(1)\n-# Copyright (c) 2012-2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-_bitcoind() {\n-    local cur prev words=() cword\n-    local bitcoind\n-\n-    # save and use original argument to invoke bitcoind for -help\n-    # it might not be in $PATH\n-    bitcoind=\"$1\"\n-\n-    COMPREPLY=()\n-    _get_comp_words_by_ref -n = cur prev words cword\n-\n-    case \"$cur\" in\n-        -conf=*|-pid=*|-loadblock=*|-rootcertificates=*|-rpccookiefile=*|-wallet=*)\n-            cur=\"${cur#*=}\"\n-            _filedir\n-            return 0\n-            ;;\n-        -datadir=*)\n-            cur=\"${cur#*=}\"\n-            _filedir -d\n-            return 0\n-            ;;\n-        -*=*)\t# prevent nonsense completions\n-            return 0\n-            ;;\n-        *)\n-\n-            # only parse -help if sensible\n-            if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n-                local helpopts\n-                helpopts=$($bitcoind -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n-                COMPREPLY=( $( compgen -W \"$helpopts\" -- \"$cur\" ) )\n-            fi\n-\n-            # Prevent space if an argument is desired\n-            if [[ $COMPREPLY == *= ]]; then\n-                compopt -o nospace\n-            fi\n-            return 0\n-            ;;\n-    esac\n-} &&\n-complete -F _bitcoind bitcoind bitcoin-qt\n-\n-# Local variables:\n-# mode: shell-script\n-# sh-basic-offset: 4\n-# sh-indent-comment: t\n-# indent-tabs-mode: nil\n-# End:\n-# ex: ts=4 sw=4 et filetype=sh"
      },
      {
        "sha": "b02b2991772e6e6ca73e9767317ea69bc34dbf75",
        "filename": "contrib/bitrpc/bitrpc.py",
        "status": "added",
        "additions": 324,
        "deletions": 0,
        "changes": 324,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/bitrpc/bitrpc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/bitrpc/bitrpc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitrpc/bitrpc.py?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,324 @@\n+from jsonrpc import ServiceProxy\n+import sys\n+import string\n+\n+# ===== BEGIN USER SETTINGS =====\n+# if you do not set these you will be prompted for a password for every command\n+rpcuser = \"\"\n+rpcpass = \"\"\n+# ====== END USER SETTINGS ======\n+\n+\n+if rpcpass == \"\":\n+\taccess = ServiceProxy(\"http://127.0.0.1:8332\")\n+else:\n+\taccess = ServiceProxy(\"http://\"+rpcuser+\":\"+rpcpass+\"@127.0.0.1:8332\")\n+cmd = sys.argv[1].lower()\n+\n+if cmd == \"backupwallet\":\n+\ttry:\n+\t\tpath = raw_input(\"Enter destination path/filename: \")\n+\t\tprint access.backupwallet(path)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getaccount\":\n+\ttry:\n+\t\taddr = raw_input(\"Enter a Bitcoin address: \")\n+\t\tprint access.getaccount(addr)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getaccountaddress\":\n+\ttry:\n+\t\tacct = raw_input(\"Enter an account name: \")\n+\t\tprint access.getaccountaddress(acct)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getaddressesbyaccount\":\n+\ttry:\n+\t\tacct = raw_input(\"Enter an account name: \")\n+\t\tprint access.getaddressesbyaccount(acct)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getbalance\":\n+\ttry:\n+\t\tacct = raw_input(\"Enter an account (optional): \")\n+\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n+\t\ttry:\n+\t\t\tprint access.getbalance(acct, mc)\n+\t\texcept:\n+\t\t\tprint access.getbalance()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getblockbycount\":\n+\ttry:\n+\t\theight = raw_input(\"Height: \")\n+\t\tprint access.getblockbycount(height)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getblockcount\":\n+\ttry:\n+\t\tprint access.getblockcount()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getblocknumber\":\n+\ttry:\n+\t\tprint access.getblocknumber()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getconnectioncount\":\n+\ttry:\n+\t\tprint access.getconnectioncount()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getdifficulty\":\n+\ttry:\n+\t\tprint access.getdifficulty()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getgenerate\":\n+\ttry:\n+\t\tprint access.getgenerate()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"gethashespersec\":\n+\ttry:\n+\t\tprint access.gethashespersec()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getinfo\":\n+\ttry:\n+\t\tprint access.getinfo()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getnewaddress\":\n+\ttry:\n+\t\tacct = raw_input(\"Enter an account name: \")\n+\t\ttry:\n+\t\t\tprint access.getnewaddress(acct)\n+\t\texcept:\n+\t\t\tprint access.getnewaddress()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getreceivedbyaccount\":\n+\ttry:\n+\t\tacct = raw_input(\"Enter an account (optional): \")\n+\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n+\t\ttry:\n+\t\t\tprint access.getreceivedbyaccount(acct, mc)\n+\t\texcept:\n+\t\t\tprint access.getreceivedbyaccount()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getreceivedbyaddress\":\n+\ttry:\n+\t\taddr = raw_input(\"Enter a Bitcoin address (optional): \")\n+\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n+\t\ttry:\n+\t\t\tprint access.getreceivedbyaddress(addr, mc)\n+\t\texcept:\n+\t\t\tprint access.getreceivedbyaddress()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"gettransaction\":\n+\ttry:\n+\t\ttxid = raw_input(\"Enter a transaction ID: \")\n+\t\tprint access.gettransaction(txid)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getwork\":\n+\ttry:\n+\t\tdata = raw_input(\"Data (optional): \")\n+\t\ttry:\n+\t\t\tprint access.gettransaction(data)\n+\t\texcept:\n+\t\t\tprint access.gettransaction()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"help\":\n+\ttry:\n+\t\tcmd = raw_input(\"Command (optional): \")\n+\t\ttry:\n+\t\t\tprint access.help(cmd)\n+\t\texcept:\n+\t\t\tprint access.help()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"listaccounts\":\n+\ttry:\n+\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n+\t\ttry:\n+\t\t\tprint access.listaccounts(mc)\n+\t\texcept:\n+\t\t\tprint access.listaccounts()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"listreceivedbyaccount\":\n+\ttry:\n+\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n+\t\tincemp = raw_input(\"Include empty? (true/false, optional): \")\n+\t\ttry:\n+\t\t\tprint access.listreceivedbyaccount(mc, incemp)\n+\t\texcept:\n+\t\t\tprint access.listreceivedbyaccount()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"listreceivedbyaddress\":\n+\ttry:\n+\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n+\t\tincemp = raw_input(\"Include empty? (true/false, optional): \")\n+\t\ttry:\n+\t\t\tprint access.listreceivedbyaddress(mc, incemp)\n+\t\texcept:\n+\t\t\tprint access.listreceivedbyaddress()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"listtransactions\":\n+\ttry:\n+\t\tacct = raw_input(\"Account (optional): \")\n+\t\tcount = raw_input(\"Number of transactions (optional): \")\n+\t\tfrm = raw_input(\"Skip (optional):\")\n+\t\ttry:\n+\t\t\tprint access.listtransactions(acct, count, frm)\n+\t\texcept:\n+\t\t\tprint access.listtransactions()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"move\":\n+\ttry:\n+\t\tfrm = raw_input(\"From: \")\n+\t\tto = raw_input(\"To: \")\n+\t\tamt = raw_input(\"Amount:\")\n+\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n+\t\tcomment = raw_input(\"Comment (optional): \")\n+\t\ttry:\n+\t\t\tprint access.move(frm, to, amt, mc, comment)\n+\t\texcept:\n+\t\t\tprint access.move(frm, to, amt)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"sendfrom\":\n+\ttry:\n+\t\tfrm = raw_input(\"From: \")\n+\t\tto = raw_input(\"To: \")\n+\t\tamt = raw_input(\"Amount:\")\n+\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n+\t\tcomment = raw_input(\"Comment (optional): \")\n+\t\tcommentto = raw_input(\"Comment-to (optional): \")\n+\t\ttry:\n+\t\t\tprint access.sendfrom(frm, to, amt, mc, comment, commentto)\n+\t\texcept:\n+\t\t\tprint access.sendfrom(frm, to, amt)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"sendmany\":\n+\ttry:\n+\t\tfrm = raw_input(\"From: \")\n+\t\tto = raw_input(\"To (in format address1:amount1,address2:amount2,...): \")\n+\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n+\t\tcomment = raw_input(\"Comment (optional): \")\n+\t\ttry:\n+\t\t\tprint access.sendmany(frm,to,mc,comment)\n+\t\texcept:\n+\t\t\tprint access.sendmany(frm,to)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"sendtoaddress\":\n+\ttry:\n+\t\tto = raw_input(\"To (in format address1:amount1,address2:amount2,...): \")\n+\t\tamt = raw_input(\"Amount:\")\n+\t\tcomment = raw_input(\"Comment (optional): \")\n+\t\tcommentto = raw_input(\"Comment-to (optional): \")\n+\t\ttry:\n+\t\t\tprint access.sendtoaddress(to,amt,comment,commentto)\n+\t\texcept:\n+\t\t\tprint access.sendtoaddress(to,amt)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"setaccount\":\n+\ttry:\n+\t\taddr = raw_input(\"Address: \")\n+\t\tacct = raw_input(\"Account:\")\n+\t\tprint access.setaccount(addr,acct)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"setgenerate\":\n+\ttry:\n+\t\tgen= raw_input(\"Generate? (true/false): \")\n+\t\tcpus = raw_input(\"Max processors/cores (-1 for unlimited, optional):\")\n+\t\ttry:\n+\t\t\tprint access.setgenerate(gen, cpus)\n+\t\texcept:\n+\t\t\tprint access.setgenerate(gen)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"settxfee\":\n+\ttry:\n+\t\tamt = raw_input(\"Amount:\")\n+\t\tprint access.settxfee(amt)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"stop\":\n+\ttry:\n+\t\tprint access.stop()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"validateaddress\":\n+\ttry:\n+\t\taddr = raw_input(\"Address: \")\n+\t\tprint access.validateaddress(addr)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"walletpassphrase\":\n+\ttry:\n+\t\tpwd = raw_input(\"Enter wallet passphrase: \")\n+\t\taccess.walletpassphrase(pwd, 60)\n+\t\tprint \"\\n---Wallet unlocked---\\n\"\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"walletpassphrasechange\":\n+\ttry:\n+\t\tpwd = raw_input(\"Enter old wallet passphrase: \")\n+\t\tpwd2 = raw_input(\"Enter new wallet passphrase: \")\n+\t\taccess.walletpassphrasechange(pwd, pwd2)\n+\t\tprint\n+\t\tprint \"\\n---Passphrase changed---\\n\"\n+\texcept:\n+\t\tprint\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\t\tprint\n+\n+else:\n+\tprint \"Command not found or not supported\"\n\\ No newline at end of file"
      },
      {
        "sha": "fab9cc238156789c96e4b908fbe1e4d863ecebf9",
        "filename": "contrib/debian/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/README.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,21 +0,0 @@\n-\n-Debian\n-====================\n-This directory contains files used to package bitcoind/bitcoin-qt\n-for Debian-based Linux systems. If you compile bitcoind/bitcoin-qt yourself, there are some useful files here.\n-\n-## bitcoin: URI support ##\n-\n-\n-bitcoin-qt.desktop  (Gnome / Open Desktop)\n-To install:\n-\n-\tsudo desktop-file-install bitcoin-qt.desktop\n-\tsudo update-desktop-database\n-\n-If you build yourself, you will either need to modify the paths in\n-the .desktop file or copy or symlink your bitcoin-qt binary to `/usr/bin`\n-and the `../../share/pixmaps/bitcoin128.png` to `/usr/share/pixmaps`\n-\n-bitcoin-qt.protocol (KDE)\n-"
      },
      {
        "sha": "b3bc973501f09844a64f2988e8ee8a776eefe581",
        "filename": "contrib/debian/bin/novacoin-qt",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/bin/novacoin-qt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/bin/novacoin-qt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bin/novacoin-qt?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,16 @@\n+#!/bin/sh\n+\n+set -e\n+\n+umask 077\n+\n+basedir=~/.novacoin\n+dbfile=\"$basedir/DB_CONFIG\"\n+cfgfile=\"$basedir/novacoin.conf\"\n+\n+[ -e \"$basedir\" ] || mkdir \"$basedir\"\n+\n+# Novacoin does not clean up DB log files by default\n+[ -e \"$dbfile\" ] || echo 'set_flags DB_LOG_AUTOREMOVE' > \"$dbfile\"\n+\n+exec /usr/lib/novacoin/novacoin-qt \"$@\""
      },
      {
        "sha": "a4f3fb808b8e19379c1cfd82c6a3c2d41ec88a82",
        "filename": "contrib/debian/bin/novacoind",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/bin/novacoind",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/bin/novacoind",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bin/novacoind?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,14 @@\n+#!/bin/sh\n+\n+set -e\n+\n+umask 077\n+\n+basedir=~/.novacoin\n+cfgfile=\"$basedir/novacoin.conf\"\n+\n+[ -e \"$basedir\" ] || mkdir \"$basedir\"\n+\n+[ -e \"$cfgfile\" ] || perl -le 'print\"rpcpassword=\",map{(a..z,A..Z,0..9)[rand 62]}0..9' > \"$cfgfile\"\n+\n+exec /usr/lib/novacoin/novacoind \"$@\""
      },
      {
        "sha": "8b312226482e1e937458133df92032092d5b7cb6",
        "filename": "contrib/debian/bitcoin-qt.desktop",
        "status": "removed",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/bitcoin-qt.desktop",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/bitcoin-qt.desktop",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.desktop?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Version=1.0\n-Name=Bitcoin Core\n-Comment=Connect to the Bitcoin P2P Network\n-Comment[de]=Verbinde mit dem Bitcoin peer-to-peer Netzwerk\n-Comment[fr]=Bitcoin, monnaie virtuelle cryptographique pair \u00e0 pair\n-Comment[tr]=Bitcoin, e\u015ften e\u015fe kriptografik sanal para birimi\n-Exec=bitcoin-qt %u\n-Terminal=false\n-Type=Application\n-Icon=bitcoin128\n-MimeType=x-scheme-handler/bitcoin;\n-Categories=Office;Finance;P2P;Network;Qt;\n-StartupWMClass=Bitcoin-qt"
      },
      {
        "sha": "e0b32373be68d74e075a779f083b3dededc574d7",
        "filename": "contrib/debian/bitcoin-qt.install",
        "status": "removed",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/bitcoin-qt.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/bitcoin-qt.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.install?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,6 +0,0 @@\n-usr/local/bin/bitcoin-qt usr/bin\n-share/pixmaps/bitcoin32.xpm usr/share/pixmaps\n-share/pixmaps/bitcoin16.xpm usr/share/pixmaps\n-share/pixmaps/bitcoin128.png usr/share/pixmaps\n-debian/bitcoin-qt.desktop usr/share/applications\n-debian/bitcoin-qt.protocol usr/share/kde4/services/"
      },
      {
        "sha": "7fb230eca8921cf3f2756a2e1fa3ea6ab808dca5",
        "filename": "contrib/debian/bitcoin-qt.lintian-overrides",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/bitcoin-qt.lintian-overrides",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/bitcoin-qt.lintian-overrides",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.lintian-overrides?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,2 +0,0 @@\n-# Linked code is Expat - only Debian packaging is GPL-2+\n-bitcoin-qt: possible-gpl-code-linked-with-openssl"
      },
      {
        "sha": "9a3cc31c09a8fb719315a546fb2144d423ade038",
        "filename": "contrib/debian/bitcoin-qt.manpages",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/bitcoin-qt.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/bitcoin-qt.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.manpages?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1 +0,0 @@\n-doc/man/bitcoin-qt.1"
      },
      {
        "sha": "014588d53679baf51055d70b8a621a99217eb160",
        "filename": "contrib/debian/bitcoin-qt.protocol",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/bitcoin-qt.protocol",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/bitcoin-qt.protocol",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.protocol?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,11 +0,0 @@\n-[Protocol]\n-exec=bitcoin-qt '%u'\n-protocol=bitcoin\n-input=none\n-output=none\n-helper=true\n-listing=\n-reading=false\n-writing=false\n-makedir=false\n-deleting=false"
      },
      {
        "sha": "7acb0b0aea668dd16129434813d05c0306617b68",
        "filename": "contrib/debian/bitcoin-tx.bash-completion",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/bitcoin-tx.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/bitcoin-tx.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.bash-completion?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1 +0,0 @@\n-contrib/bitcoin-tx.bash-completion\tbitcoin-tx"
      },
      {
        "sha": "2c21052a6876b4a0f94b79858ae1d164cf179b21",
        "filename": "contrib/debian/bitcoin-tx.install",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/bitcoin-tx.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/bitcoin-tx.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.install?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1 +0,0 @@\n-usr/local/bin/bitcoin-tx usr/bin"
      },
      {
        "sha": "861d49d07022e2468fca7c747d91b7fe4322e1c7",
        "filename": "contrib/debian/bitcoin-tx.manpages",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/bitcoin-tx.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/bitcoin-tx.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.manpages?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1 +0,0 @@\n-doc/man/bitcoin-tx.1"
      },
      {
        "sha": "5c69d78fbb0fc73017167bab3d8a1c6a78e85ed9",
        "filename": "contrib/debian/bitcoind.bash-completion",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.bash-completion?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,2 +0,0 @@\n-contrib/bitcoind.bash-completion\tbitcoind\n-contrib/bitcoin-cli.bash-completion\tbitcoin-cli"
      },
      {
        "sha": "4ded67d98e784e275c76839e7b06b413d774230e",
        "filename": "contrib/debian/bitcoind.examples",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/bitcoind.examples",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/bitcoind.examples",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.examples?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1 +0,0 @@\n-debian/examples/bitcoin.conf"
      },
      {
        "sha": "798ea851f6ef8a01e19984221efd327625fda92d",
        "filename": "contrib/debian/bitcoind.install",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/bitcoind.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/bitcoind.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.install?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,2 +0,0 @@\n-usr/local/bin/bitcoind usr/bin\n-usr/local/bin/bitcoin-cli usr/bin"
      },
      {
        "sha": "3f9f140bd827a1491ba6a0c46c1df16e428548bd",
        "filename": "contrib/debian/bitcoind.lintian-overrides",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/bitcoind.lintian-overrides",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/bitcoind.lintian-overrides",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.lintian-overrides?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,2 +0,0 @@\n-# Linked code is Expat - only Debian packaging is GPL-2+\n-bitcoind: possible-gpl-code-linked-with-openssl"
      },
      {
        "sha": "bab644ece1369ba4d8896ef507add76aae617d8e",
        "filename": "contrib/debian/bitcoind.manpages",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/bitcoind.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/bitcoind.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.manpages?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,2 +0,0 @@\n-doc/man/bitcoind.1\n-doc/man/bitcoin-cli.1"
      },
      {
        "sha": "64ceac004629a4dce24bcc73612482ace2cceaf1",
        "filename": "contrib/debian/changelog",
        "status": "modified",
        "additions": 3,
        "deletions": 575,
        "changes": 578,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/changelog",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/changelog",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/changelog?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -1,578 +1,6 @@\n-bitcoin (0.14.1-trusty4) trusty; urgency=medium\n+novacoin (0.4.0~dfsg-1) unstable; urgency=low\n \n-  * Re-enable UPnP support.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 05 May 2017 13:28:00 -0400\n-\n-bitcoin (0.14.1-trusty3) trusty; urgency=medium\n-\n-  * Build with qt5 if we are on a non-Ubuntu (ie non-Unity) distro.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Thu, 04 May 2017 17:13:00 -0400\n-\n-bitcoin (0.14.1-trusty2) trusty; urgency=medium\n-\n-  * Bump minimum boost version in deps.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Thu, 04 May 2017 17:12:00 -0400\n-\n-bitcoin (0.14.1-trusty1) trusty; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Sat, 22 Apr 2017 17:10:00 -0400\n-\n-bitcoin (0.14.0-trusty1) trusty; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 08 Mar 2017 10:30:00 -0500\n-\n-bitcoin (0.13.2-trusty1) trusty; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Thu, 05 Jan 2017 09:59:00 -0500\n-\n-bitcoin (0.13.1-trusty2) trusty; urgency=medium\n-\n-  * Revert to Qt4, due to https://github.com/bitcoin/bitcoin/issues/9038\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 31 Oct 2016 11:16:00 -0400\n-\n-bitcoin (0.13.1-trusty1) trusty; urgency=medium\n-\n-  * New upstream release.\n-  * Backport updated bitcoin-qt.desktop from upstream master\n-  * Add zmq dependency\n-  * Switch to Qt5 (breaks precise, but that was already broken by C++11)\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Thu, 27 Oct 2016 17:32:00 -0400\n-\n-bitcoin (0.13.0-trusty1) trusty; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Sun, 04 Sep 2016 22:09:00 -0400\n-\n-bitcoin (0.12.1-trusty1) trusty; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 18 Apr 2016 14:26:00 -0700\n-\n-bitcoin (0.12.0-trusty6) trusty; urgency=medium\n-\n-  * Fix program-options dep.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 25 Mar 2016 21:41:00 -0700\n-\n-bitcoin (0.12.0-trusty5) trusty; urgency=medium\n-\n-  * Test explicit --with-gui\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 23:25:00 -0800\n-\n-bitcoin (0.12.0-trusty4) trusty; urgency=medium\n-\n-  * Fix libevent-dev dep.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 23:25:00 -0800\n-\n-bitcoin (0.12.0-trusty3) trusty; urgency=medium\n-\n-  * Fix precise boost dep.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 19:55:00 -0800\n-\n-bitcoin (0.12.0-trusty2) trusty; urgency=medium\n-\n-  * Fix libevent dep.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 19:53:00 -0800\n-\n-bitcoin (0.12.0-trusty1) trusty; urgency=medium\n-\n-  * New upstream release\n-  * Various updates to contrib/debian were merged, a few were not\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 19:29:00 -0800\n-\n-bitcoin (0.11.2-trusty1) trusty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 13 Nov 2015 18:39:00 -0800\n-\n-bitcoin (0.11.1-trusty2) trusty; urgency=low\n-\n-  * Remove minupnpc builddep.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 14 Oct 2015 23:06:00 -1000\n-\n-bitcoin (0.11.1-trusty1) trusty; urgency=high\n-\n-  * New upstream release.\n-  * Disable all UPnP support.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 14 Oct 2015 13:57:00 -1000\n-\n-bitcoin (0.11.0-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 14 Jul 2015 14:39:00 -1000\n-\n-bitcoin (0.10.2-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 29 Jun 2015 17:33:00 -1000\n-\n-bitcoin (0.10.1-precise3) precise; urgency=medium\n-\n-  * Fix build dep (include python).\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 09:28:00 -1000\n-\n-bitcoin (0.10.1-precise2) precise; urgency=medium\n-\n-  * Fix miniupnpc dep.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 00:33:00 -1000\n-\n-bitcoin (0.10.1-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 00:07:00 -1000\n-\n-bitcoin (0.10.0-precise1) precise; urgency=medium\n-\n-  * New upstream releases.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 18 Feb 2015 13:22:00 -1000\n-\n-bitcoin (0.9.4-precise1) precise; urgency=high\n-\n-  * New upstream releases.\n-\n- -- Matt Corallo (laptop - only while traveling) <matt@mattcorallo.com>  Mon, 12 Jan 2015 23:30:00 -1000\n-\n-bitcoin (0.9.3-precise1) precise; urgency=medium\n-\n-  * New upstream releases.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 26 Sep 2014 12:01:00 -0700\n-\n-bitcoin (0.9.1-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-  * Backport pull #4019\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 19 Apr 2014 17:29:00 -0400\n-\n-bitcoin (0.9.0-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Thu, 20 Mar 2014 13:10:00 -0400\n-\n-bitcoin (0.8.6-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-  * Make .desktop paths non-fixed (suggested by prusnak@github)\n-\n- -- Matt Corallo <matt@bluematt.me>  Fri, 13 Dec 2013 13:31:00 -0400\n-\n-bitcoin (0.8.5-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sun, 15 Sep 2013 14:02:00 -0400\n-\n-bitcoin (0.8.4-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 4 Sep 2013 10:25:00 -0400\n-\n-bitcoin (0.8.3-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 26 Jun 2013 00:18:00 +0100\n-\n-bitcoin (0.8.2-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 29 Mar 2013 23:23:00 +0100\n-\n-bitcoin (0.8.1-natty3) natty; urgency=low\n-\n-  * New pixmaps\n-\n- -- Jonas Schnelli <jonas.schnelli@include7.ch>  Mon, 13 May 2013 16:14:00 +0100\n-\n-bitcoin (0.8.1-natty2) natty; urgency=low\n-\n-  * Remove dumb broken launcher script\n-\n- -- Matt Corallo <matt@bluematt.me>  Sun, 24 Mar 2013 20:01:00 -0400\n-\n-bitcoin (0.8.1-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Tue, 19 Mar 2013 13:03:00 -0400\n-\n-bitcoin (0.8.0-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 23 Feb 2013 16:01:00 -0500\n-\n-bitcoin (0.7.2-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 15 Dec 2012 10:59:00 -0400\n-\n-bitcoin (0.7.1-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 24 Oct 2012 15:06:00 -0400\n-\n-bitcoin (0.7.0-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Mon, 17 Sep 2012 13:45:00 +0200\n-\n-bitcoin (0.6.3-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Mon, 25 Jun 2012 23:47:00 +0200\n-\n-bitcoin (0.6.2-natty1) natty; urgency=low\n-\n-  * Update package description and launch scripts.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 2 Jun 2012 16:41:00 +0200\n-\n-bitcoin (0.6.2-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Tue, 8 May 2012 16:27:00 -0500\n-\n-bitcoin (0.6.1-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sun, 6 May 2012 20:09:00 -0500\n-\n-bitcoin (0.6.0-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-  * Add GNOME/KDE support for bitcoin-qt's bitcoin: URI support.\n-    Thanks to luke-jr for the KDE .protocol file.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 31 Mar 2012 15:35:00 -0500\n-\n-bitcoin (0.5.3-natty1) natty; urgency=low\n-\n-  * Mark for upload to PPA.\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 14 Mar 2012 23:06:00 -0400\n-\n-bitcoin (0.5.3-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Luke Dashjr <luke+bitcoin+deb@dashjr.org>  Tue, 10 Jan 2012 15:57:00 -0500\n-\n-bitcoin (0.5.2-natty1) natty; urgency=low\n-\n-  * Remove mentions on anonymity in package descriptions and manpage.\n-    These should never have been there, bitcoin isnt anonymous without\n-    a ton of work that virtually no users will ever be willing and\n-    capable of doing\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 7 Jan 2012 13:37:00 -0500\n-\n-bitcoin (0.5.2-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Luke Dashjr <luke+bitcoin+deb@dashjr.org>  Fri, 16 Dec 2011 17:57:00 -0500\n-\n-bitcoin (0.5.1-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Fri, 16 Dec 2011 13:27:00 -0500\n-\n-bitcoin (0.5.0-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Mon, 21 Nov 2011 11:32:00 -0500\n-\n-bitcoin (0.5.0~rc7-natty0) natty; urgency=low\n-\n-  * New upstream release candidate.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sun, 20 Nov 2011 17:08:00 -0500\n-\n-bitcoin (0.5.0~rc3-natty0) natty; urgency=low\n-\n-  * New upstream release candidate.\n-  * Don't set rpcpassword for bitcoin-qt.\n-\n- -- Matt Corallo <matt@bluematt.me>  Tue, 8 Nov 2011 11:56:00 -0400\n-\n-bitcoin (0.5.0~rc1-natty1) natty; urgency=low\n-\n-  * Add test_bitcoin to build test\n-  * Fix clean\n-  * Remove uneccessary build-dependancies\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 26 Oct 2011 14:37:18 -0400\n-\n-bitcoin (0.5.0~rc1-natty0) natty; urgency=low\n-\n-  * Mark for natty\n-  * Fix broken build\n-  * Fix copyright listing\n-  * Remove bitcoin: URL handler until bitcoin actually has support for it (Oops)\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 26 Oct 2011 14:37:18 -0400\n-\n-bitcoin (0.5.0~rc1-2) experimental; urgency=low\n-\n-  * Add bitcoin-qt\n-\n- -- Matt Corallo <matt@bluematt.me>  Tue, 25 Oct 2011 15:24:18 -0400\n-\n-bitcoin (0.5.0~rc1-1) experimental; urgency=low\n-\n-  * New upstream prerelease.\n-  * Add Github as alternate upstream source in watch file.\n-  * Stop build-depending on libcrypto++-dev, and drop patch 1000:\n-    Upstream no longer use crypto++.\n-  * Drop patch 1003: Upstream builds dynamic by default now.\n-  * Update copyright file: Drop notes on longer included sources.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Fri, 14 Oct 2011 00:16:18 +0200\n-\n-bitcoin (0.4.0-1) unstable; urgency=low\n-\n-  * New upstream release.\n-  * Stop repackaging source tarballs: No DFSG-violating stripping left.\n-  * Update copyright file:\n-    + Add Github URL to Source.\n-  * Drop dpkg-source local-options hint: Declared options are default\n-    since dpkg-source 1.16.1.\n-    + Add irc URL to Upstream-Contact.\n-    + Add comment on Bitcoin Developers to catch-all Files section.\n-    + Add Files sections for newly readded src/cryptopp/* (new custom\n-      BSD-like license), and newly added doc/build-osx.txt and\n-      src/makefile.osx (Expat).\n-  * Bump debhelper compatibility level to 7.\n-  * Suppress binary icns and gpg files.\n-  * Enable regression tests:\n-    + Build-depend on libboost-test-dev.\n-    + Extend patch 1003 to also dynamically link test binary.\n-    + Build and invoke test binary unless tests are disabled.\n-  * Tighten build-dependency on cdbs: Recent version needed to support\n-    debhelper 7.\n-  * Relax build-depend unversioned on debhelper: needed version\n-    satisfied even in oldstable.\n-  * Stop suppress optional build-dependencies: Satisfied in stable.\n-    Build-depend on devscripts (enabling copyright-check).\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Wed, 05 Oct 2011 01:48:53 +0200\n-\n-bitcoin (0.3.24~dfsg-1) unstable; urgency=low\n-\n-  * New upstream release.\n-\n-  [ Jonas Smedegaard ]\n-  * Improve various usage hints:\n-    + Explicitly mention in long description that bitcoind contains\n-      daemon and command-line interface.\n-    + Extend README.Debian with section on lack of GUI, and add primary\n-      headline.\n-    + Avoid installing upstream README: contains no parts relevant for\n-      Debian usage.\n-    Thanks to richard for suggestions (see bug#629443).\n-  * Favor final releases over prereleases in rules and watch file.\n-    Thanks to Jan Dittberner.\n-  * Track -src (not -linux) tarballs in rules and watch file.\n-    Thanks to Jan Dittberner.\n-  * Drop patches 1004 and 1005 (integrated upstream) and simplify\n-    CXXFLAGS in rules file.\n-  * Stop stripping no longer included source-less binaries from upstream\n-    tarballs.\n-\n-  [ Jan Dittberner ]\n-  * refresh debian/patches/1000_use_system_crypto++.patch\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Tue, 19 Jul 2011 15:08:54 +0200\n-\n-bitcoin (0.3.21~dfsg-2) unstable; urgency=low\n-\n-  * Enable UPNP support:\n-    + Drop patch 1006.\n-    + Build-depend on libminiupnpc-dev.\n-    Thanks to Matt Corallo.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Sat, 28 May 2011 15:52:44 +0200\n-\n-bitcoin (0.3.21~dfsg-1) unstable; urgency=low\n-\n-  * New upstream release.\n-  * Refresh patches.\n-  * Drop patch 1002: no longer needed, as upstream use pkgconfig now.\n-  * Add patch 1006 to really unset USE_UPNP as aparently intended.\n-  * Adjust cleanup rule to preserve .gitignore files.\n-  * Update copyright file:\n-    + Bump format to draft 174 of DEP-5.\n-    + Shorten comments.\n-  * Bump policy compliance to standards-version 3.9.2.\n-  * Shorten Vcs-Browser paragraph in control file.\n-  * Fix mention daemon (not CLI tools) in short description.\n-  * Stop conflicting with or replace bitcoin-cli: Only transitional, no\n-    longer needed.\n-  * Link against unversioned berkeleydb. Update NEWS and README.Debian\n-    accordingly (and improve wording while at it).\n-    Closes: Bug#621425. Thanks to Ond\u0159ej Sur\u00fd.\n-  * This release also implicitly updates linkage against libcrypto++,\n-    which closes: bug#626953, #627024.\n-  * Disable linkage against not yet Debian packaged MiniUPnP.\n-  * Silence seemingly harmless noise about unused variables.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Tue, 17 May 2011 15:31:24 +0200\n-\n-bitcoin (0.3.20.2~dfsg-2) unstable; urgency=medium\n-\n-  * Fix have wrapper script execute real binary (not loop executing\n-    itself).\n-    Closes: bug#617290. Thanks to Philippe Gauthier and Etienne Laurin.\n-  * Set urgency=medium as the only (user-exposed) binary is useless\n-    without this fix and has been for some time.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Wed, 16 Mar 2011 09:11:06 +0100\n-\n-bitcoin (0.3.20.2~dfsg-1) unstable; urgency=low\n-\n-  * New upstream release.\n-  * Fix provide and replace former package name bitcoin-cli.\n-    Closes: bug#618439. Thanks to Shane Wegner.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Tue, 15 Mar 2011 11:41:43 +0100\n-\n-bitcoin (0.3.20.01~dfsg-1) unstable; urgency=low\n-\n-  * New upstream release.\n-\n-  [ Micah Anderson ]\n-  * Add myself as uploader.\n-\n-  [ Jonas Smedegaard ]\n-  * Add wrapper for bitcoind to ease initial startup.\n-  * Update patches:\n-    + Drop patch 2002: Applied upstream.\n-    + Add patch 1005 to add phtread linker option.\n-      Closes: bug#615619. Thanks to Shane Wegner.\n-    + Refresh patches.\n-  * Extend copyright years in rules file header.\n-  * Rewrite copyright file using draft svn166 of DEP5 format.\n-  * Rename binary package to bitcoind (from bincoin-cli).\n-    Closes: bug#614025. Thanks to Luke-Jr.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Tue, 01 Mar 2011 15:55:04 +0100\n-\n-bitcoin (0.3.19~dfsg-6) unstable; urgency=low\n-\n-  * Fix override agressive optimizations.\n-  * Fix tighten build-dependencies to really fit backporting to Lenny:\n-    + Add fallback build-dependency on libdb4.6++-dev.\n-    + Tighten unversioned Boost build-dependencies to recent versions,\n-      To force use of versioned Boost when backporting to Lenny.\n-    ...needs more love, though: actual build fails.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 19:48:35 +0100\n-\n-bitcoin (0.3.19~dfsg-5) unstable; urgency=low\n-\n-  * Fix lower Boost fallback-build-dependencies to 1.35, really\n-    available in Lenny.\n-  * Correct comment in rules file regarding reason for versioned Boost\n-    fallback-build-dependency.\n-  * Add patch 2002 adding -mt decoration to Boost flags, to ease\n-    backporting to Lenny.\n-  * Respect DEB_BUILD_OPTIONS, and suppress arch-specific optimizations:\n-    + Add patch 1004 to allow overriding optimization flags.\n-    + Set optimization flags conditionally at build time.\n-    + Drop patch 2002 unconditionally suppressing arch-optimizations.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 16:04:48 +0100\n-\n-bitcoin (0.3.19~dfsg-4) unstable; urgency=low\n-\n-  [ Micah Anderson ]\n-  * Provide example bitcoin.conf.\n-  * Add bitcoind(1) and bitcoin.conf(5) man pages.\n-\n-  [ Jonas Smedegaard ]\n-  * Ease backporting:\n-    + Suppress optional build-dependencies.\n-    + Add fallback build-dependencies on the most recent Boost libs\n-    available in Lenny (where unversioned Boost libs are missing).\n-  * Add Micah as copyright holder for manpages, licensed as GPL-3+.\n-  * Bump copyright format to Subversion candidate draft 162 of DEP5.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 14:00:48 +0100\n-\n-bitcoin (0.3.19~dfsg-3) unstable; urgency=low\n-\n-  * Document in copyright file files excluded from repackaged source.\n-  * Update copyright file:\n-    + Bump DEP5 format hint to Subversion draft rev. 153.\n-    + Consistently wrap at 72 chars.\n-    + Refer to GPL-2 file (not GPL symlink).\n-  * Link against Berkeley DB 4.8 (not 4.7):\n-    + Build-depend on libdb4.8++-dev (and on on libdb4.7++-dev).\n-    + Suggest libdb4.8-util and db4.7-util.\n-    + Add README.Debian note on (untested) upgrade routine.\n-    + Add NEWS entry on changed db version, referring to README.Debian.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Fri, 07 Jan 2011 22:50:57 +0100\n-\n-bitcoin (0.3.19~dfsg-2) unstable; urgency=low\n-\n-  * Adjust build options to use optimized miner only for amd64. Fixes\n-    FTBFS on i386 (and other archs, if compiling anywhere else at all).\n-  * Avoid static linking.\n-  * Adjust patch 2001 to avoid only arch-specific optimizations (keep\n-    -O3).\n-  * Extend long description to mention disk consumption and initial use\n-    of IRC.\n-  All of above changes thanks to Helmuth Grohne.\n-  * Add lintian override regarding OpenSSL and GPL: Linked code is Expat\n-    - only Debian packaging is GPL-2+.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Wed, 29 Dec 2010 00:27:54 +0100\n-\n-bitcoin (0.3.19~dfsg-1) unstable; urgency=low\n-\n-  [ Jonas Smedegaard ]\n+  [ Balthazar ]\n   * Initial release.\n-    Closes: bug#578157.\n \n- -- Jonas Smedegaard <dr@jones.dk>  Tue, 28 Dec 2010 15:49:22 +0100\n+ -- Balthazar <balthazar@yandex.ru>  Mon, 15 Apr 2013 22:15:22 +0100"
      },
      {
        "sha": "44fa62c826b95b236b9a19a476a08a3f6e875516",
        "filename": "contrib/debian/control",
        "status": "modified",
        "additions": 31,
        "deletions": 42,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/control",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/control",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/control?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -1,70 +1,59 @@\n-Source: bitcoin\n+Source: novacoin\n Section: utils\n Priority: optional\n-Maintainer: Matt Corallo <matt@mattcorallo.com>\n-Uploaders: Matt Corallo <matt@mattcorallo.com>\n+Maintainer: Jonas Smedegaard <dr@jones.dk>\n+Uploaders: Micah Anderson <micah@debian.org>\n Build-Depends: debhelper,\n  devscripts,\n- automake,\n- libtool,\n  bash-completion,\n+ libboost-system-dev (>> 1.35) | libboost-system1.35-dev,\n  libdb4.8++-dev,\n  libssl-dev,\n  pkg-config,\n- libevent-dev,\n- libboost-system1.48-dev | libboost-system-dev (>> 1.47),\n- libboost-filesystem1.48-dev | libboost-filesystem-dev (>> 1.47),\n- libboost-program-options1.48-dev | libboost-program-options-dev (>> 1.47),\n- libboost-thread1.48-dev | libboost-thread-dev (>> 1.47),\n- libboost-test1.48-dev | libboost-test-dev (>> 1.47),\n- libboost-chrono1.48-dev | libboost-chrono-dev (>> 1.47),\n- libminiupnpc8-dev | libminiupnpc-dev,\n- qt4-qmake, libqt4-dev,\n- qttools5-dev-tools, qttools5-dev,\n- libqrencode-dev,\n- libprotobuf-dev, protobuf-compiler,\n- python,\n- libzmq3-dev\n+ libminiupnpc8-dev,\n+ libboost-filesystem-dev (>> 1.35) | libboost-filesystem1.35-dev,\n+ libboost-program-options-dev (>> 1.35) | libboost-program-options1.35-dev,\n+ libboost-thread-dev (>> 1.35) | libboost-thread1.35-dev,\n+ libboost-test-dev (>> 1.35) | libboost-test1.35-dev,\n+ qt4-qmake,\n+ libqt4-dev,\n+ libqrencode-dev\n Standards-Version: 3.9.2\n-Homepage: https://bitcoincore.org/\n-Vcs-Git: git://github.com/bitcoin/bitcoin.git\n-Vcs-Browser: https://github.com/bitcoin/bitcoin\n+Homepage: http://www.novacoin.su/\n+Vcs-Git: git://github.com/CryptoManiac/novacoin.git\n+Vcs-Browser: http://github.com/CryptoManiac/novacoin\n \n-Package: bitcoind\n+Package: novacoind\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer network based digital currency - daemon\n- Bitcoin is a free open source peer-to-peer electronic cash system that\n+ Novacoin is a free open source peer-to-peer electronic cash system that\n  is completely decentralized, without the need for a central server or\n  trusted parties.  Users hold the crypto keys to their own money and\n  transact directly with each other, with the help of a P2P network to\n  check for double-spending.\n  .\n- This package provides the daemon, bitcoind, and the CLI tool\n- bitcoin-cli to interact with the daemon.\n+ By default connects to an IRC network to discover other peers.\n+ .\n+ Full transaction history is stored locally at each client.  This\n+ requires 2+ GB of space, slowly growing.\n+ .\n+ This package provides novacoind, a combined daemon and CLI tool to\n+ interact with the daemon.\n \n-Package: bitcoin-qt\n+Package: novacoin-qt\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer network based digital currency - Qt GUI\n- Bitcoin is a free open source peer-to-peer electronic cash system that\n+ Novacoin is a free open source peer-to-peer electronic cash system that\n  is completely decentralized, without the need for a central server or\n  trusted parties.  Users hold the crypto keys to their own money and\n  transact directly with each other, with the help of a P2P network to\n  check for double-spending.\n  .\n- This package provides Bitcoin-Qt, a GUI for Bitcoin based on Qt.\n-\n-Package: bitcoin-tx\n-Architecture: any\n-Depends: ${shlibs:Depends}, ${misc:Depends}\n-Description: peer-to-peer digital currency - standalone transaction tool\n- Bitcoin is a free open source peer-to-peer electronic cash system that\n- is completely decentralized, without the need for a central server or\n- trusted parties.  Users hold the crypto keys to their own money and\n- transact directly with each other, with the help of a P2P network to\n- check for double-spending.\n+ By default connects to an IRC network to discover other peers.\n+ .\n+ Full transaction history is stored locally at each client.  This\n+ requires 2+ GB of space, slowly growing.\n  .\n- This package provides bitcoin-tx, a command-line transaction creation\n- tool which can be used without a bitcoin daemon.  Some means of\n- exchanging minimal transaction data with peers is still required.\n+ This package provides Novacoin-Qt, a GUI for Novacoin based on Qt."
      },
      {
        "sha": "b99604913c794116d683cf76dec73a60786692c4",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 95,
        "deletions": 81,
        "changes": 176,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -1,98 +1,87 @@\n-Format: http://www.debian.org/doc/packaging-manuals/copyright-format/1.0/\n+Format: http://svn.debian.org/wsvn/dep/web/deps/dep5.mdwn?rev=174\n Upstream-Name: Bitcoin\n Upstream-Contact: Satoshi Nakamoto <satoshin@gmx.com>\n  irc://#bitcoin@freenode.net\n-Source: https://github.com/bitcoin/bitcoin\n+Source: http://sourceforge.net/projects/bitcoin/files/\n+ https://github.com/bitcoin/bitcoin\n \n Files: *\n-Copyright: 2009-2018, Bitcoin Core Developers\n+Copyright: 2009-2012, Bitcoin Developers\n License: Expat\n-Comment: The Bitcoin Core Developers encompasses the current developers listed on bitcoin.org,\n+Comment: The Bitcoin Developers encompasses the current developers listed on bitcoin.org,\n          as well as the numerous contributors to the project.\n \n+Files: src/json/*\n+Copyright: 2007-2009, John W. Wilkinson\n+License: Expat\n+\n+Files: src/strlcpy.h\n+Copyright: 1998, Todd C. Miller <Todd.Miller@courtesan.com>\n+License: ISC\n+\n Files: debian/*\n Copyright: 2010-2011, Jonas Smedegaard <dr@jones.dk>\n            2011, Matt Corallo <matt@bluematt.me>\n License: GPL-2+\n \n-Files: src/secp256k1/build-aux/m4/ax_jni_include_dir.m4\n-Copyright: 2008 Don Anderson <dda@sleepycat.com>\n-License: GNU-All-permissive-License\n-\n-Files: src/secp256k1/build-aux/m4/ax_prog_cc_for_build.m4\n-Copyright: 2008 Paolo Bonzini <bonzini@gnu.org>\n-License: GNU-All-permissive-License\n-\n-Files: src/qt/res/icons/add.png\n-       src/qt/res/icons/address-book.png\n-       src/qt/res/icons/chevron.png\n-       src/qt/res/icons/configure.png\n-       src/qt/res/icons/debugwindow.png\n-       src/qt/res/icons/edit.png\n-       src/qt/res/icons/editcopy.png\n-       src/qt/res/icons/editpaste.png\n-       src/qt/res/icons/export.png\n-       src/qt/res/icons/eye.png\n-       src/qt/res/icons/filesave.png\n-       src/qt/res/icons/history.png\n-       src/qt/res/icons/info.png\n-       src/qt/res/icons/key.png\n-       src/qt/res/icons/lock_*.png\n-       src/qt/res/icons/open.png\n-       src/qt/res/icons/overview.png\n-       src/qt/res/icons/quit.png\n-       src/qt/res/icons/receive.png\n-       src/qt/res/icons/remove.png\n-       src/qt/res/icons/send.png\n-       src/qt/res/icons/synced.png\n-       src/qt/res/icons/transaction*.png\n-       src/qt/res/icons/tx_output.png\n-       src/qt/res/icons/warning.png\n-Copyright: Stephen Hutchings (and more)\n-           http://typicons.com\n+Files: debian/manpages/*\n+Copyright: Micah Anderson <micah@debian.org>\n+License: GPL-3+\n+\n+Files: src/qt/res/icons/clock*.png, src/qt/res/icons/tx*.png,\n+       src/qt/res/src/*.svg\n+Copyright: Wladimir van der Laan\n License: Expat\n-Comment: Site: https://github.com/stephenhutchings/typicons.font\n+\n+Files: src/qt/res/icons/address-book.png, src/qt/res/icons/export.png,\n+       src/qt/res/icons/history.png, src/qt/res/icons/key.png,\n+       src/qt/res/icons/lock_*.png, src/qt/res/icons/overview.png,\n+       src/qt/res/icons/receive.png, src/qt/res/icons/send.png,\n+       src/qt/res/icons/synced.png, src/qt/res/icons/filesave.png\n+Copyright: David Vignoni (david@icon-king.com)\n+           ICON KING - www.icon-king.com\n+License: LGPL\n+Comment: NUVOLA ICON THEME for KDE 3.x\n+         Original icons: kaddressbook, klipper_dock, view-list-text,\n+                         key-password, encrypted/decrypted, go-home, go-down,\n+                         go-next, dialog-ok\n+         Site: http://www.icon-king.com/projects/nuvola/\n \n Files: src/qt/res/icons/connect*.png\n-       src/qt/res/src/connect-*.svg\n-       src/qt/res/icons/network_disabled.png\n-       src/qt/res/src/network_disabled.svg\n-Copyright: Marco Falke\n-           Luke Dashjr\n-License: Expat\n-Comment: Inspired by Stephan Hutchings Typicons\n-\n-Files: src/qt/res/icons/tx_mined.png\n-       src/qt/res/src/mine.svg\n-       src/qt/res/icons/fontbigger.png\n-       src/qt/res/icons/fontsmaller.png\n-       src/qt/res/icons/hd_disabled.png\n-       src/qt/res/src/hd_disabled.svg\n-       src/qt/res/icons/hd_enabled.png\n-       src/qt/res/src/hd_enabled.svg\n-Copyright: Jonas Schnelli\n-License: Expat\n-Comment:\n+Copyright: schollidesign\n+License: GPL-3+\n+Comment: Icon Pack: Human-O2\n+         Site: http://findicons.com/icon/93743/blocks_gnome_netstatus_0\n \n-Files: src/qt/res/icons/clock*.png\n-       src/qt/res/icons/eye_*.png\n-       src/qt/res/icons/verify.png\n-       src/qt/res/icons/tx_in*.png\n-       src/qt/res/src/clock_*.svg\n-       src/qt/res/src/tx_*.svg\n-       src/qt/res/src/verify.svg\n-Copyright: Stephan Hutching, Jonas Schnelli\n+Files: src/qt/res/icons/transaction*.png\n+Copyright: md2k7\n License: Expat\n-Comment: Modifications of Stephan Hutchings Typicons\n-\n-Files: src/qt/res/icons/about.png\n-       src/qt/res/icons/bitcoin.*\n-       share/pixmaps/bitcoin*\n-       src/qt/res/src/bitcoin.svg\n-Copyright: Bitboy, Jonas Schnelli\n-License: public-domain\n+Comment: Site: https://bitcointalk.org/index.php?topic=15276.0\n+\n+Files: src/qt/res/icons/configure.png, src/qt/res/icons/quit.png,\n+      src/qt/res/icons/editcopy.png, src/qt/res/icons/editpaste.png,\n+      src/qt/res/icons/add.png, src/qt/res/icons/edit.png,\n+      src/qt/res/icons/remove.png\n+Copyright: http://www.everaldo.com\n+License: LGPL\n+Comment: Icon Pack: Crystal SVG\n+\n+Files: src/qt/res/icons/bitcoin.png, src/qt/res/icons/toolbar.png\n+Copyright: Bitboy (optimized for 16x16 by Wladimir van der Laan)\n+License: PUB-DOM\n Comment: Site: https://bitcointalk.org/?topic=1756.0\n \n+Files:  scripts/img/reload.xcf, src/qt/res/movies/update_spinner.mng\n+Copyright: Everaldo (Everaldo Coelho)\n+License: GPL-3+\n+Comment: Icon Pack: Kids\n+         Site: http://findicons.com/icon/17102/reload?id=17102\n+\n+Files: src/qt/res/images/splash2.jpg\n+License: PUB-DOM\n+Copyright: Crobbo (forum)\n+Comment: Site: https://bitcointalk.org/index.php?topic=32273.0\n+\n \n License: Expat\n  Permission is hereby granted, free of charge, to any person obtaining a\n@@ -114,11 +103,19 @@ License: Expat\n  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n \n-License: GNU-All-permissive-License\n- Copying and distribution of this file, with or without modification, are\n- permitted in any medium without royalty provided the copyright notice\n- and this notice are preserved. This file is offered as-is, without any\n- warranty.\n+License: ISC\n+ Permission to use, copy, modify, and distribute this software for any\n+ purpose with or without fee is hereby granted, provided that the above\n+ copyright notice and this permission notice appear in all copies.\n+ .\n+ THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL\n+ WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED\n+ WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR\n+ BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES\n+ OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n+ WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,\n+ ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS\n+ SOFTWARE.\n \n License: GPL-2+\n  This program is free software; you can redistribute it and/or modify it\n@@ -148,5 +145,22 @@ Comment:\n  You should have received a copy of the GNU General Public License along\n  with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n-License: public-domain\n+License: LGPL\n+ This program is free software: you can redistribute it and/or modify\n+ it under the terms of the GNU General Public License as published by\n+ the Free Software Foundation, either version 3 of the License, or\n+ (at your option) any later version.\n+ .\n+ This program is distributed in the hope that it will be useful,\n+ but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ GNU General Public License for more details.\n+Comment:\n+ On Debian systems the GNU Lesser General Public License (LGPL) is\n+ located in '/usr/share/common-licenses/LGPL'.\n+ .\n+ You should have received a copy of the GNU General Public License\n+ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+License: PUB-DOM\n  This work is in the public domain."
      },
      {
        "sha": "4dd73162a238b848c1d6ccf1b35540256b3b7d15",
        "filename": "contrib/debian/examples/bitcoin.conf",
        "status": "removed",
        "additions": 0,
        "deletions": 147,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/examples/bitcoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/debian/examples/bitcoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/bitcoin.conf?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,147 +0,0 @@\n-##\n-## bitcoin.conf configuration file. Lines beginning with # are comments.\n-##\n- \n-# Network-related settings:\n-\n-# Run on the test network instead of the real bitcoin network.\n-#testnet=0\n-\n-# Run a regression test network\n-#regtest=0\n-\n-# Connect via a SOCKS5 proxy\n-#proxy=127.0.0.1:9050\n-\n-# Bind to given address and always listen on it. Use [host]:port notation for IPv6\n-#bind=<addr>\n-\n-# Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6\n-#whitebind=<addr>\n-\n-##############################################################\n-##            Quick Primer on addnode vs connect            ##\n-##  Let's say for instance you use addnode=4.2.2.4          ##\n-##  addnode will connect you to and tell you about the      ##\n-##    nodes connected to 4.2.2.4.  In addition it will tell ##\n-##    the other nodes connected to it that you exist so     ##\n-##    they can connect to you.                              ##\n-##  connect will not do the above when you 'connect' to it. ##\n-##    It will *only* connect you to 4.2.2.4 and no one else.##\n-##                                                          ##\n-##  So if you're behind a firewall, or have other problems  ##\n-##  finding nodes, add some using 'addnode'.                ##\n-##                                                          ##\n-##  If you want to stay private, use 'connect' to only      ##\n-##  connect to \"trusted\" nodes.                             ##\n-##                                                          ##\n-##  If you run multiple nodes on a LAN, there's no need for ##\n-##  all of them to open lots of connections.  Instead       ##\n-##  'connect' them all to one node that is port forwarded   ##\n-##  and has lots of connections.                            ##\n-##       Thanks goes to [Noodle] on Freenode.               ##\n-##############################################################\n-\n-# Use as many addnode= settings as you like to connect to specific peers\n-#addnode=69.164.218.197\n-#addnode=10.0.0.2:8333\n-\n-# Alternatively use as many connect= settings as you like to connect ONLY to specific peers\n-#connect=69.164.218.197\n-#connect=10.0.0.1:8333\n-\n-# Listening mode, enabled by default except when 'connect' is being used\n-#listen=1\n-\n-# Maximum number of inbound+outbound connections.\n-#maxconnections=\n-\n-#\n-# JSON-RPC options (for controlling a running Bitcoin/bitcoind process)\n-#\n-\n-# server=1 tells Bitcoin-Qt and bitcoind to accept JSON-RPC commands\n-#server=0\n-\n-# Bind to given address to listen for JSON-RPC connections. Use [host]:port notation for IPv6.\n-# This option can be specified multiple times (default: bind to all interfaces)\n-#rpcbind=<addr>\n-\n-# If no rpcpassword is set, rpc cookie auth is sought. The default `-rpccookiefile` name\n-# is .cookie and found in the `-datadir` being used for bitcoind. This option is typically used\n-# when the server and client are run as the same user.\n-#\n-# If not, you must set rpcuser and rpcpassword to secure the JSON-RPC api. The first\n-# method(DEPRECATED) is to set this pair for the server and client:\n-#rpcuser=Ulysseys\n-#rpcpassword=YourSuperGreatPasswordNumber_DO_NOT_USE_THIS_OR_YOU_WILL_GET_ROBBED_385593\n-#\n-# The second method `rpcauth` can be added to server startup argument. It is set at initialization time\n-# using the output from the script in share/rpcauth/rpcauth.py after providing a username:\n-#\n-# ./share/rpcauth/rpcauth.py alice\n-# String to be appended to bitcoin.conf:\n-# rpcauth=alice:f7efda5c189b999524f151318c0c86$d5b51b3beffbc02b724e5d095828e0bc8b2456e9ac8757ae3211a5d9b16a22ae\n-# Your password:\n-# DONT_USE_THIS_YOU_WILL_GET_ROBBED_8ak1gI25KFTvjovL3gAM967mies3E=\n-#\n-# On client-side, you add the normal user/password pair to send commands:\n-#rpcuser=alice\n-#rpcpassword=DONT_USE_THIS_YOU_WILL_GET_ROBBED_8ak1gI25KFTvjovL3gAM967mies3E=\n-#\n-# You can even add multiple entries of these to the server conf file, and client can use any of them:\n-# rpcauth=bob:b2dd077cb54591a2f3139e69a897ac$4e71f08d48b4347cf8eff3815c0e25ae2e9a4340474079f55705f40574f4ec99\n-\n-# How many seconds bitcoin will wait for a complete RPC HTTP request.\n-# after the HTTP connection is established. \n-#rpcclienttimeout=30\n-\n-# By default, only RPC connections from localhost are allowed.\n-# Specify as many rpcallowip= settings as you like to allow connections from other hosts,\n-# either as a single IPv4/IPv6 or with a subnet specification.\n-\n-# NOTE: opening up the RPC port to hosts outside your local trusted network is NOT RECOMMENDED,\n-# because the rpcpassword is transmitted over the network unencrypted.\n-\n-# server=1 tells Bitcoin-Qt to accept JSON-RPC commands.\n-# it is also read by bitcoind to determine if RPC should be enabled \n-#rpcallowip=10.1.1.34/255.255.255.0\n-#rpcallowip=1.2.3.4/24\n-#rpcallowip=2001:db8:85a3:0:0:8a2e:370:7334/96\n-\n-# Listen for RPC connections on this TCP port:\n-#rpcport=8332\n-\n-# You can use Bitcoin or bitcoind to send commands to Bitcoin/bitcoind\n-# running on another host using this option:\n-#rpcconnect=127.0.0.1\n-\n-# Create transactions that have enough fees so they are likely to begin confirmation within n blocks (default: 6).\n-# This setting is over-ridden by the -paytxfee option.\n-#txconfirmtarget=n\n-\n-# Miscellaneous options\n-\n-# Pre-generate this many public/private key pairs, so wallet backups will be valid for\n-# both prior transactions and several dozen future transactions.\n-#keypool=100\n-\n-# Pay an optional transaction fee every time you send bitcoins.  Transactions with fees\n-# are more likely than free transactions to be included in generated blocks, so may\n-# be validated sooner.\n-#paytxfee=0.00\n-\n-# Enable pruning to reduce storage requirements by deleting old blocks. \n-# This mode is incompatible with -txindex and -rescan.\n-# 0 = default (no pruning).\n-# 1 = allows manual pruning via RPC.\n-# >=550 = target to stay under in MiB. \n-#prune=550\n-\n-# User interface options\n-\n-# Start Bitcoin minimized\n-#min=1\n-\n-# Minimize to the system tray\n-#minimizetotray=1"
      },
      {
        "sha": "bbd29e3ed089e6a2d32616befe1a531fbc2d0d85",
        "filename": "contrib/debian/examples/novacoin.conf",
        "status": "added",
        "additions": 81,
        "deletions": 0,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/examples/novacoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/examples/novacoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/novacoin.conf?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,81 @@\n+# novacoin.conf configuration file. Lines beginning with # are comments.\n+\n+\n+# Network-related settings:\n+\n+# Run on the test network instead of the real novacoin network.\n+#testnet=1\n+\n+# Connect via a socks4 proxy\n+#proxy=127.0.0.1:9050\n+\n+# Use as many addnode= settings as you like to connect to specific peers\n+#addnode=188.120.246.137:36939\n+\n+# ... or use as many connect= settings as you like to connect ONLY\n+# to specific peers:\n+#connect=188.120.246.137:36939\n+\n+# Do not use Internet Relay Chat (irc.lfnet.org #novacoin channel) to\n+# find other peers.\n+#noirc=1\n+\n+# Maximum number of inbound+outbound connections.\n+#maxconnections=\n+\n+\n+# JSON-RPC options (for controlling a running process)\n+\n+# server=1 tells NovaCoin to accept JSON-RPC commands.\n+#server=1\n+\n+# You must set rpcuser and rpcpassword to secure the JSON-RPC api\n+#rpcuser=Ulysseys\n+#rpcpassword=YourSuperGreatPasswordNumber_385593\n+\n+# By default, only RPC connections from localhost are allowed.  Specify\n+# as many rpcallowip= settings as you like to allow connections from\n+# other hosts (and you may use * as a wildcard character):\n+#rpcallowip=10.1.1.34\n+#rpcallowip=192.168.1.*\n+\n+# Listen for RPC connections on this TCP port:\n+rpcport=8332\n+\n+# You can use NovaCoin or novacoind to send commands to Bitcoin/bitcoindNovaCoin/novacoind\n+# running on another host using this option:\n+rpcconnect=127.0.0.1\n+\n+# Use Secure Sockets Layer (also known as TLS or HTTPS) to communicate\n+# with NovaCoin -server or novacoind\n+#rpcssl=1\n+\n+# OpenSSL settings used when rpcssl=1\n+rpcsslciphers=TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH\n+rpcsslcertificatechainfile=server.cert\n+rpcsslprivatekeyfile=server.pem\n+\n+\n+# Miscellaneous options\n+\n+# Set gen=1 to attempt to generate novacoins\n+gen=0\n+\n+# Pre-generate this many public/private key pairs, so wallet backups will be valid for\n+# both prior transactions and several dozen future transactions.\n+keypool=100\n+\n+# Pay an optional transaction fee every time you send novacoins.  \n+paytxfee=0.01\n+\n+# Allow direct connections for the 'pay via IP address' feature.\n+#allowreceivebyip=1\n+\n+\n+# User interface options\n+\n+# Start NovaCoin minimized\n+#min=1\n+\n+# Minimize to the system tray\n+#minimizetotray=1"
      },
      {
        "sha": "1901e16ee544f4d59aae245f240840aa0dda424e",
        "filename": "contrib/debian/manpages/novacoin.conf.5",
        "status": "added",
        "additions": 91,
        "deletions": 0,
        "changes": 91,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/manpages/novacoin.conf.5",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/manpages/novacoin.conf.5",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/novacoin.conf.5?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,91 @@\n+.TH NOVACOIN.CONF \"8\" \"April 2013\" \"novacoin.conf 3.19\"\n+.SH NAME\n+novacoin.conf \\- novacoin configuration file\n+.SH SYNOPSIS\n+All command-line options (except for '-datadir' and '-conf') may be specified in a configuration file, and all configuration file options may also be specified on the command line. Command-line options override values set in the configuration file.\n+.TP\n+The configuration file is a list of 'setting=value' pairs, one per line, with optional comments starting with the '#' character.\n+.TP\n+The configuration file is not automatically created; you can create it using your favorite plain-text editor. By default, novacoind(1) will look for a file named novacoin.conf(5) in the novacoin data directory, but both the data directory and the configuration file path may be changed using the '-datadir' and '-conf' command-line arguments.\n+.SH LOCATION\n+novacoin.conf should be located in $HOME/.novacoin\n+.SH NETWORK-RELATED SETTINGS\n+.TP\n+.TP\n+\\fBtestnet=\\fR[\\fI'1'\\fR|\\fI'0'\\fR]\n+Enable or disable run on the test network instead of the real *novacoin* network.\n+.TP\n+\\fBproxy=\\fR\\fI'127.0.0.1:9050'\\fR\n+Connect via a socks4 proxy.\n+.TP\n+\\fBaddnode=\\fR\\fI'10.0.0.2:8333'\\fR\n+Use as many *addnode=* settings as you like to connect to specific peers.\n+.TP\n+\\fBconnect=\\fR\\fI'10.0.0.1:8333'\\fR\n+Use as many *connect=* settings as you like to connect ONLY to specific peers.\n+.TP\n+\\fBnoirc=\\fR[\\fI'1'\\fR|\\fI'0'\\fR]\n+Use or Do not use Internet Relay Chat (irc.lfnet.org #novacoin channel) to find other peers.\n+.TP\n+\\fRmaxconnections=\\fR\\fI'value'\\fR\n+Maximum number of inbound+outbound connections.\n+.SH JSON-RPC OPTIONS\n+.TP\n+\\fBserver=\\fR[\\fI'1'\\fR|\\fI'0'\\fR]\n+Tells *novacoin* to accept or not accept JSON-RPC commands.\n+.TP\n+\\fBrpcuser=\\fR\\fI'username'\\fR\n+You must set *rpcuser* to secure the JSON-RPC api.\n+.TP\n+\\fBrpcpassword=\\fR\\fI'password'\\fR\n+You must set *rpcpassword* to secure the JSON-RPC api.\n+.TP\n+\\fBrpctimeout=\\fR\\fI'30'\\fR\n+How many seconds *novacoin* will wait for a complete RPC HTTP request, after the HTTP connection is established.\n+.TP\n+\\fBrpcallowip=\\fR\\fI'192.168.1.*'\\fR\n+By default, only RPC connections from localhost are allowed. Specify as many *rpcallowip=* settings as you like to allow connections from other hosts (and you may use * as a wildcard character).\n+.TP\n+\\fBrpcport=\\fR\\fI'8332'\\fR\n+Listen for RPC connections on this TCP port.\n+.TP\n+\\fBrpcconnect=\\fR\\fI'127.0.0.1'\\fR\n+You can use *novacoin* or *novacoind(1)* to send commands to *novacoin*/*novacoind(1)* running on another host using this option.\n+.TP\n+\\fBrpcssl=\\fR\\fI'1'\\fR\n+Use Secure Sockets Layer (also known as TLS or HTTPS) to communicate with *novacoin* '-server' or *novacoind(1)*. Example of OpenSSL settings used when *rpcssl*='1':\n+.TP\n+\\fBrpcsslciphers=\\fR\\fI'TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH'\\fR\n+.TP\n+\\fBrpcsslcertificatechainfile=\\fR\\fI'server.cert'\\fR\n+.TP\n+\\fBrpcsslprivatekeyfile=\\fR\\fI'server.pem'\\fR\n+.TP\n+.SH MISCELLANEOUS OPTIONS\n+.TP\n+\\fBgen=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n+Enable or disable attempt to generate novacoins.\n+.TP\n+\\fBkeypool=\\fR\\fI'100'\\fR\n+Pre-generate this many public/private key pairs, so wallet backups will be valid for both prior transactions and several dozen future transactions.\n+.TP\n+\\fBpaytxfee=\\fR\\fI'0.00'\\fR\n+Pay an optional transaction fee every time you send novacoins. Transactions with fees are more likely than free transactions to be included in generated blocks, so may be validated sooner.\n+.TP\n+\\fBallowreceivebyip=\\fR\\fI'1'\\fR\n+Allow direct connections for the 'pay via IP address' feature.\n+.TP\n+.SH USER INTERFACE OPTIONS\n+.TP\n+\\fBmin=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n+Enable or disable start novacoind minimized.\n+.TP\n+\\fBminimizetotray=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n+Enable or disable minimize to the system tray.\n+.SH \"SEE ALSO\"\n+novacoind(1)\n+.SH AUTHOR\n+This manual page was written by Micah Anderson <micah@debian.org> for the Debian system (but may be used by others). Permission is granted to copy, distribute and/or modify this document under the terms of the GNU General Public License, Version 3 or any later version published by the Free Software Foundation.\n+\n+On Debian systems, the complete text of the GNU General Public License can be found in /usr/share/common-licenses/GPL.\n+"
      },
      {
        "sha": "b8199c21022f531265ca8f2ad2106554ef3a33e2",
        "filename": "contrib/debian/manpages/novacoind.1",
        "status": "added",
        "additions": 206,
        "deletions": 0,
        "changes": 206,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/manpages/novacoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/manpages/novacoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/novacoind.1?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,206 @@\n+.TH NOVACOIND \"7\" \"April 2013\" \"novacoind 3.19\" \n+.SH NAME\n+novacoind \\- peer-to-peer network based digital currency\n+.SH SYNOPSIS\n+novacoin [options] <command> [params]  \n+.TP\n+novacoin [options] help <command> - Get help for a command\n+.SH DESCRIPTION\n+This  manual page documents the novacoind program. Novacoin is a peer-to-peer digital currency. Peer-to-peer (P2P) means that there is no central authority to issue new money or keep track of transactions. Instead, these tasks are managed collectively by the nodes of the network. Advantages:\n+\n+Novacoins can be sent easily through the Internet, without having to trust middlemen. Transactions are designed to be irreversible. Be safe from instability caused by fractional reserve banking and central banks. The limited inflation of the Novacoin system\u2019s money supply is distributed evenly (by CPU power) throughout the network, not monopolized by banks.\n+\n+.SH OPTIONS\n+.TP\n+\\fB\\-conf=\\fR<file>\n+Specify configuration file (default: novacoin.conf)\n+.TP\n+\\fB\\-gen\\fR\n+Generate coins\n+.TP\n+\\fB\\-gen\\fR=\\fI0\\fR\n+Don't generate coins\n+.TP\n+\\fB\\-min\\fR\n+Start minimized\n+.TP\n+\\fB\\-datadir=\\fR<dir>\n+Specify data directory\n+.TP\n+\\fB\\-proxy=\\fR<ip:port>\n+Connect through socks4 proxy\n+.TP\n+\\fB\\-addnode=\\fR<ip>\n+Add a node to connect to\n+.TP\n+\\fB\\-connect=\\fR<ip>\n+Connect only to the specified node\n+.TP\n+\\fB\\-paytxfee=\\fR<amt>\n+Fee per KB to add to transactions you send\n+.TP\n+\\fB\\-server\\fR\n+Accept command line and JSON\\-RPC commands\n+.TP\n+\\fB\\-daemon\\fR\n+Run in the background as a daemon and accept commands\n+.TP\n+\\fB\\-testnet\\fR\n+Use the test network\n+.TP\n+\\fB\\-rpcuser=\\fR<user>\n+Username for JSON\\-RPC connections\n+.TP\n+\\fB\\-rpcpassword=\\fR<pw>\n+Password for JSON\\-RPC connections\n+.TP\n+\\fB\\-rpcport=\\fR<port>\n+Listen for JSON\\-RPC connections on <port>\n+.TP\n+\\fB\\-rpcallowip=\\fR<ip>\n+Allow JSON\\-RPC connections from specified IP address\n+.TP\n+\\fB\\-rpcconnect=\\fR<ip>\n+Send commands to node running on <ip>\n+.PP\n+SSL options: (see the Bitcoin Wiki for SSL setup instructions)\n+.TP\n+\\fB\\-rpcssl\\fR=\\fI1\\fR\n+Use OpenSSL (https) for JSON\\-RPC connections\n+.TP\n+\\fB\\-rpcsslcertificatchainfile=\\fR<file.cert>\n+Server certificate file (default: server.cert)\n+.TP\n+\\fB\\-rpcsslprivatekeyfile=\\fR<file.pem>\n+Server private key (default: server.pem)\n+.TP\n+\\fB\\-rpcsslciphers=\\fR<ciphers>\n+Acceptable ciphers (default: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)\n+.TP\n+\\-?\n+This help message\n+.SH COMMANDS\n+.TP\n+\\fBbackupwallet 'destination'\\fR\n+Safely copies *wallet.dat* to 'destination', which can be a directory or a path with filename.\n+.TP\n+\\fBgetaccount 'novacoinaddress'\\fR\n+Returns the account associated with the given address.\n+.TP\n+\\fBsetaccount 'novacoinaddress' ['account']\\fR\n+Sets the ['account'] associated with the given address. ['account'] may be omitted to remove an address from ['account'].\n+.TP\n+\\fBgetaccountaddress 'account'\\fR\n+Returns a new novacoin address for 'account'.\n+.TP\n+\\fBgetaddressesbyaccount 'account'\\fR\n+Returns the list of addresses associated with the given 'account'.\n+.TP\n+\\fBgetbalance 'account'\\fR\n+Returns the server's available balance, or the balance for 'account'.\n+.TP\n+\\fBgetblockcount\\fR\n+Returns the number of blocks in the longest block chain.\n+.TP\n+\\fBgetblocknumber\\fR\n+Returns the block number of the latest block in the longest block chain.\n+.TP\n+\\fBgetconnectioncount\\fR\n+Returns the number of connections to other nodes.\n+.TP\n+\\fBgetdifficulty\\fR\n+Returns the proof-of-work difficulty as a multiple of the minimum difficulty.\n+.TP\n+\\fBgetgenerate\\fR\n+Returns boolean true if server is trying to generate novacoins, false otherwise.\n+.TP\n+\\fBsetgenerate 'generate' ['genproclimit']\\fR\n+Generation is limited to ['genproclimit'] processors, -1 is unlimited.\n+.TP\n+\\fBgethashespersec\\fR\n+Returns a recent hashes per second performance measurement while generating.\n+.TP\n+\\fBgetinfo\\fR\n+Returns an object containing server information.\n+.TP\n+\\fBgetnewaddress 'account'\\fR\n+Returns a new novacoin address for receiving payments. If 'account' is specified (recommended), it is added to the address book so payments received with the address will be credited to 'account'.\n+.TP\n+\\fBgetreceivedbyaccount 'account' ['minconf=1']\\fR\n+Returns the total amount received by addresses associated with 'account' in transactions with at least ['minconf'] confirmations.\n+.TP\n+\\fBgetreceivedbyaddress 'novacoinaddress' ['minconf=1']\\fR\n+Returns the total amount received by 'novacoinaddress' in transactions with at least ['minconf'] confirmations.\n+.TP\n+\\fBgettransaction 'txid'\\fR\n+Returns information about a specific transaction, given hexadecimal transaction ID.\n+.TP\n+\\fBgetwork 'data'\\fR\n+If 'data' is specified, tries to solve the block and returns true if it was successful. If 'data' is not specified, returns formatted hash 'data' to work on:\n+\n+    \"midstate\" : precomputed hash state after hashing the first half of the data.\n+    \"data\"     : block data.\n+    \"hash1\"    : formatted hash buffer for second hash.\n+    \"target\"   : little endian hash target.\n+.TP\n+\\fBhelp 'command'\\fR\n+List commands, or get help for a command.\n+.TP\n+\\fBlistaccounts ['minconf=1']\\fR\n+List accounts and their current balances.\n+.TP\n+\\fBlistreceivedbyaccount ['minconf=1'] ['includeempty=false']\\fR\n+['minconf'] is the minimum number of confirmations before payments are included. ['includeempty'] whether to include addresses that haven't received any payments. Returns an array of objects containing:\n+\n+    \"account\"       : the account of the receiving address.\n+    \"amount\"        : total amount received by the address.\n+    \"confirmations\" : number of confirmations of the most recent transaction included.\n+.TP\n+\\fBlistreceivedbyaddress ['minconf=1'] ['includeempty=false']\\fR\n+['minconf'] is the minimum number of confirmations before payments are included. ['includeempty'] whether to include addresses that haven't received any payments. Returns an array of objects containing:\n+\n+    \"address\"       : receiving address.\n+    \"account\"       : the account of the receiving address.\n+    \"amount\"        : total amount received by the address.\n+    \"confirmations\" : number of confirmations of the most recent transaction included.\n+.TP\n+\\fBlisttransactions 'account' ['count=10']\\fR\n+Returns a list of the last ['count'] transactions for 'account' - for all accounts if 'account' is not specified or is \"*\". Each entry in the list may contain:\n+\n+    \"category\"      : will be generate, send, receive, or move.\n+    \"amount\"        : amount of transaction.\n+    \"fee\"           : Fee (if any) paid (only for send transactions).\n+    \"confirmations\" : number of confirmations (only for generate/send/receive).\n+    \"txid\"          : transaction ID (only for generate/send/receive).\n+    \"otheraccount\"  : account funds were moved to or from (only for move).\n+    \"message\"       : message associated with transaction (only for send).\n+    \"to\"            : message-to associated with transaction (only for send).\n+.TP\n+\\fBmove <'fromaccount'> <'toaccount'> <'amount'> ['minconf=1'] ['comment']\\fR\n+Moves funds between accounts.\n+.TP\n+\\fBsendfrom* <'account'> <'novacoinaddress'> <'amount'> ['minconf=1'] ['comment'] ['comment-to']\\fR\n+Sends amount from account's balance to 'novacoinaddress'. This method will fail if there is less than amount novacoins with ['minconf'] confirmations in the account's balance (unless account is the empty-string-named default account; it behaves like the *sendtoaddress* method). Returns transaction ID on success.\n+.TP     \n+\\fBsendtoaddress 'novacoinaddress' 'amount' ['comment'] ['comment-to']\\fR\n+Sends amount from the server's available balance to 'novacoinaddress'. amount is a real and is rounded to the nearest 0.01. Returns transaction id on success.\n+.TP    \n+\\fBstop\\fR\n+Stops the novacoin server.\n+.TP    \n+\\fBvalidateaddress 'novacoinaddress'\\fR\n+Checks that 'novacoinaddress' looks like a proper novacoin address. Returns an object containing:\n+\n+    \"isvalid\" : true or false.\n+    \"ismine\"  : true if the address is in the server's wallet.\n+    \"address\" : novacoinaddress.\n+\n+    *note: ismine and address are only returned if the address is valid.\n+\n+.SH \"SEE ALSO\"\n+novacoin.conf(5)\n+.SH AUTHOR\n+This manual page was written by Micah Anderson <micah@debian.org> for the Debian system (but may be used by others). Permission is granted to copy, distribute and/or modify this document under the terms of the GNU General Public License, Version 3 or any later version published by the Free Software Foundation.\n+\n+On Debian systems, the complete text of the GNU General Public License can be found in /usr/share/common-licenses/GPL.\n+"
      },
      {
        "sha": "a299232d251f968b59c3866288ae6dab5fadce3b",
        "filename": "contrib/debian/novacoin-qt.desktop",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/novacoin-qt.desktop",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/novacoin-qt.desktop",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoin-qt.desktop?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,12 @@\n+[Desktop Entry]\n+Encoding=UTF-8\n+Name=NovaCoin\n+Comment=NovaCoin P2P Cryptocurrency\n+Comment[fr]=NovaCoin, monnaie virtuelle cryptographique pair \u00e0 pair\n+Comment[tr]=NovaCoin, e\u015ften e\u015fe kriptografik sanal para birimi\n+Exec=/usr/bin/novacoin-qt\n+Terminal=false\n+Type=Application\n+Icon=/usr/share/pixmaps/bitcoin80.xpm\n+MimeType=x-scheme-handler/novacoin;\n+Categories=Office;"
      },
      {
        "sha": "403fb4e2c44bd9a3f3acbca7d8aebba2a337bc1a",
        "filename": "contrib/debian/novacoin-qt.install",
        "status": "added",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/novacoin-qt.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/novacoin-qt.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoin-qt.install?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,5 @@\n+novacoin-qt usr/bin\n+share/pixmaps/bitcoin32.xpm usr/share/pixmaps\n+share/pixmaps/bitcoin80.xpm usr/share/pixmaps\n+debian/novacoin-qt.desktop usr/share/applications\n+debian/novacoin-qt.protocol usr/share/kde4/services/"
      },
      {
        "sha": "3e159d38fdca6ccacd45e9bc9c65a992480a9f95",
        "filename": "contrib/debian/novacoin-qt.lintian-overrides",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/novacoin-qt.lintian-overrides",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/novacoin-qt.lintian-overrides",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoin-qt.lintian-overrides?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,2 @@\n+# Linked code is Expat - only Debian packaging is GPL-2+\n+novacoin-qt: possible-gpl-code-linked-with-openssl"
      },
      {
        "sha": "29a45469f4621aea1d6dcb87745f7f3cec9eb082",
        "filename": "contrib/debian/novacoin-qt.protocol",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/novacoin-qt.protocol",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/novacoin-qt.protocol",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoin-qt.protocol?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,11 @@\n+[Protocol]\n+exec=novacoin-qt '%u'\n+protocol=novacoin\n+input=none\n+output=none\n+helper=true\n+listing=\n+reading=false\n+writing=false\n+makedir=false\n+deleting=false"
      },
      {
        "sha": "3728af9dd7af76b51d4fb9bad487b2a2f7f20772",
        "filename": "contrib/debian/novacoind.examples",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/novacoind.examples",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/novacoind.examples",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoind.examples?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1 @@\n+debian/examples/novacoin.conf"
      },
      {
        "sha": "b44acca382276c2e3d7d16f9bb8be53a523a36ee",
        "filename": "contrib/debian/novacoind.install",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/novacoind.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/novacoind.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoind.install?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,2 @@\n+debian/bin/novacoind usr/bin\n+src/novacoind usr/lib/novacoin"
      },
      {
        "sha": "e44a58f992cdbeb852bc56cc1e6d98bfafe7deab",
        "filename": "contrib/debian/novacoind.lintian-overrides",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/novacoind.lintian-overrides",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/novacoind.lintian-overrides",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoind.lintian-overrides?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,2 @@\n+# Linked code is Expat - only Debian packaging is GPL-2+\n+novacoind: possible-gpl-code-linked-with-openssl"
      },
      {
        "sha": "15116c8db664397df5da16a94aeb8cc7102db9a5",
        "filename": "contrib/debian/novacoind.manpages",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/novacoind.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/novacoind.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoind.manpages?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,2 @@\n+debian/manpages/novacoind.1\n+debian/manpages/novacoin.conf.5"
      },
      {
        "sha": "239dcf21bfa1ebe1ff2f602b44fde57e60d08974",
        "filename": "contrib/debian/rules",
        "status": "modified",
        "additions": 18,
        "deletions": 8,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/rules",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/rules",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/rules?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -5,19 +5,29 @@\n #build/bitcoind::\n #\t$(if $(filter nocheck,$(DEB_BUILD_OPTIONS)),,src/test_bitcoin)\n \n+DEB_INSTALL_EXAMPLES_novacoind += debian/examples/*\n+DEB_INSTALL_MANPAGES_novacoind += debian/manpages/*\n+\n %:\n \tdh --with bash-completion $@\n \n-override_dh_auto_clean:\n-\tif [ -f Makefile ]; then $(MAKE) distclean; fi\n-\trm -rf Makefile.in aclocal.m4 configure src/Makefile.in src/bitcoin-config.h.in src/build-aux src/qt/Makefile.in src/qt/test/Makefile.in src/test/Makefile.in\n+override_dh_auto_build:\n+\tcd src; $(MAKE) -f makefile.unix novacoind\n+\t$(MAKE)\n \n-QT=$(shell dpkg-vendor --derives-from Ubuntu && echo qt4 || echo qt5)\n+override_dh_auto_clean:\n+\tif [ -f Makefile ]; then $(MAKE) clean; else rm -rf build/; rm -f novacoin-qt; fi\n+\tcd src; $(MAKE) -f makefile.unix clean\n \n-# Yea, autogen should be run on the source archive, but I like doing git archive\n override_dh_auto_configure:\n-\t./autogen.sh\n-\t./configure --with-gui=$(QT)\n+\tqmake novacoin-qt.pro USE_QRCODE=1\n \n override_dh_auto_test:\n-\tmake check\n+\tcd src; $(MAKE) -f makefile.unix test_novacoin\n+\tsrc/test_novacoin\n+\n+# Ensure wrapper is set executable\n+binary-post-install/novacoind:\n+\tchmod +x $(cdbs_curdestdir)usr/bin/novacoind\n+binary-post-install/novacoin-qt:\n+\tchmod +x $(cdbs_curdestdir)usr/bin/novacoin-qt"
      },
      {
        "sha": "5da4e007a7cdd18da4edbc305297b530acc2dc34",
        "filename": "contrib/debian/watch",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/watch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/debian/watch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/watch?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -1,5 +1,4 @@\n # Run the \"uscan\" command to check for upstream updates and more.\n-version=3\n-# use qa.debian.org redirector; see man uscan\n+version=4\n opts=uversionmangle=s/(\\d)(alpha|beta|rc)/$1~$2/,dversionmangle=s/~dfsg\\d*// \\\n- http://githubredir.debian.net/github/bitcoin/bitcoin v(.*).tar.gz\n+ http://githubredir.debian.net/github/CryptoManiac/novacoin v(.*).tar.gz"
      },
      {
        "sha": "15ee8a3959b1428432f430165923591cbc1bb7b0",
        "filename": "contrib/devtools/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 196,
        "changes": 196,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,196 +0,0 @@\n-Contents\n-========\n-This directory contains tools for developers working on this repository.\n-\n-check-doc.py\n-============\n-\n-Check if all command line args are documented. The return value indicates the\n-number of undocumented args.\n-\n-clang-format-diff.py\n-===================\n-\n-A script to format unified git diffs according to [.clang-format](../../src/.clang-format).\n-\n-For instance, to format the last commit with 0 lines of context,\n-the script should be called from the git root folder as follows.\n-\n-```\n-git diff -U0 HEAD~1.. | ./contrib/devtools/clang-format-diff.py -p1 -i -v\n-```\n-\n-copyright\\_header.py\n-====================\n-\n-Provides utilities for managing copyright headers of `The Bitcoin Core\n-developers` in repository source files. It has three subcommands:\n-\n-```\n-$ ./copyright_header.py report <base_directory> [verbose]\n-$ ./copyright_header.py update <base_directory>\n-$ ./copyright_header.py insert <file>\n-```\n-Running these subcommands without arguments displays a usage string.\n-\n-copyright\\_header.py report \\<base\\_directory\\> [verbose]\n----------------------------------------------------------\n-\n-Produces a report of all copyright header notices found inside the source files\n-of a repository. Useful to quickly visualize the state of the headers.\n-Specifying `verbose` will list the full filenames of files of each category.\n-\n-copyright\\_header.py update \\<base\\_directory\\> [verbose]\n----------------------------------------------------------\n-Updates all the copyright headers of `The Bitcoin Core developers` which were\n-changed in a year more recent than is listed. For example:\n-```\n-// Copyright (c) <firstYear>-<lastYear> The Bitcoin Core developers\n-```\n-will be updated to:\n-```\n-// Copyright (c) <firstYear>-<lastModifiedYear> The Bitcoin Core developers\n-```\n-where `<lastModifiedYear>` is obtained from the `git log` history.\n-\n-This subcommand also handles copyright headers that have only a single year. In\n-those cases:\n-```\n-// Copyright (c) <year> The Bitcoin Core developers\n-```\n-will be updated to:\n-```\n-// Copyright (c) <year>-<lastModifiedYear> The Bitcoin Core developers\n-```\n-where the update is appropriate.\n-\n-copyright\\_header.py insert \\<file\\>\n-------------------------------------\n-Inserts a copyright header for `The Bitcoin Core developers` at the top of the\n-file in either Python or C++ style as determined by the file extension. If the\n-file is a Python file and it has  `#!` starting the first line, the header is\n-inserted in the line below it.\n-\n-The copyright dates will be set to be `<year_introduced>-<current_year>` where\n-`<year_introduced>` is according to the `git log` history. If\n-`<year_introduced>` is equal to `<current_year>`, it will be set as a single\n-year rather than two hyphenated years.\n-\n-If the file already has a copyright for `The Bitcoin Core developers`, the\n-script will exit.\n-\n-gen-manpages.sh\n-===============\n-\n-A small script to automatically create manpages in ../../doc/man by running the release binaries with the -help option.\n-This requires help2man which can be found at: https://www.gnu.org/software/help2man/\n-\n-With in-tree builds this tool can be run from any directory within the\n-repostitory. To use this tool with out-of-tree builds set `BUILDDIR`. For\n-example:\n-\n-```bash\n-BUILDDIR=$PWD/build contrib/devtools/gen-manpages.sh\n-```\n-\n-git-subtree-check.sh\n-====================\n-\n-Run this script from the root of the repository to verify that a subtree matches the contents of\n-the commit it claims to have been updated to.\n-\n-To use, make sure that you have fetched the upstream repository branch in which the subtree is\n-maintained:\n-* for `src/secp256k1`: https://github.com/bitcoin-core/secp256k1.git (branch master)\n-* for `src/leveldb`: https://github.com/bitcoin-core/leveldb.git (branch bitcoin-fork)\n-* for `src/univalue`: https://github.com/bitcoin-core/univalue.git (branch master)\n-* for `src/crypto/ctaes`: https://github.com/bitcoin-core/ctaes.git (branch master)\n-\n-Usage: `git-subtree-check.sh DIR (COMMIT)`\n-\n-`COMMIT` may be omitted, in which case `HEAD` is used.\n-\n-github-merge.py\n-===============\n-\n-A small script to automate merging pull-requests securely and sign them with GPG.\n-\n-For example:\n-\n-  ./github-merge.py 3077\n-\n-(in any git repository) will help you merge pull request #3077 for the\n-bitcoin/bitcoin repository.\n-\n-What it does:\n-* Fetch master and the pull request.\n-* Locally construct a merge commit.\n-* Show the diff that merge results in.\n-* Ask you to verify the resulting source tree (so you can do a make\n-check or whatever).\n-* Ask you whether to GPG sign the merge commit.\n-* Ask you whether to push the result upstream.\n-\n-This means that there are no potential race conditions (where a\n-pullreq gets updated while you're reviewing it, but before you click\n-merge), and when using GPG signatures, that even a compromised GitHub\n-couldn't mess with the sources.\n-\n-Setup\n----------\n-Configuring the github-merge tool for the bitcoin repository is done in the following way:\n-\n-    git config githubmerge.repository bitcoin/bitcoin\n-    git config githubmerge.testcmd \"make -j4 check\" (adapt to whatever you want to use for testing)\n-    git config --global user.signingkey mykeyid (if you want to GPG sign)\n-\n-Create and verify timestamps of merge commits\n----------------------------------------------\n-To create or verify timestamps on the merge commits, install the OpenTimestamps\n-client via `pip3 install opentimestamps-client`. Then, dowload the gpg wrapper\n-`ots-git-gpg-wrapper.sh` and set it as git's `gpg.program`. See\n-[the ots git integration documentation](https://github.com/opentimestamps/opentimestamps-client/blob/master/doc/git-integration.md#usage)\n-for further details.\n-\n-optimize-pngs.py\n-================\n-\n-A script to optimize png files in the bitcoin\n-repository (requires pngcrush).\n-\n-security-check.py and test-security-check.py\n-============================================\n-\n-Perform basic ELF security checks on a series of executables.\n-\n-symbol-check.py\n-===============\n-\n-A script to check that the (Linux) executables produced by gitian only contain\n-allowed gcc, glibc and libstdc++ version symbols. This makes sure they are\n-still compatible with the minimum supported Linux distribution versions.\n-\n-Example usage after a gitian build:\n-\n-    find ../gitian-builder/build -type f -executable | xargs python contrib/devtools/symbol-check.py \n-\n-If only supported symbols are used the return value will be 0 and the output will be empty.\n-\n-If there are 'unsupported' symbols, the return value will be 1 a list like this will be printed:\n-\n-    .../64/test_bitcoin: symbol memcpy from unsupported version GLIBC_2.14\n-    .../64/test_bitcoin: symbol __fdelt_chk from unsupported version GLIBC_2.15\n-    .../64/test_bitcoin: symbol std::out_of_range::~out_of_range() from unsupported version GLIBCXX_3.4.15\n-    .../64/test_bitcoin: symbol _ZNSt8__detail15_List_nod from unsupported version GLIBCXX_3.4.15\n-\n-update-translations.py\n-======================\n-\n-Run this script from the root of the repository to update all translations from transifex.\n-It will do the following automatically:\n-\n-- fetch all translations\n-- post-process them into valid and committable format\n-- add missing translations to the build system (TODO)\n-\n-See doc/translation-process.md for more information."
      },
      {
        "sha": "0c2e1a24be07a2e59a8acb2b3121059c95eb05ed",
        "filename": "contrib/devtools/check-doc.py",
        "status": "removed",
        "additions": 0,
        "deletions": 48,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/check-doc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/check-doc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/check-doc.py?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,48 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2015-2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-'''\n-This checks if all command line args are documented.\n-Return value is 0 to indicate no error.\n-\n-Author: @MarcoFalke\n-'''\n-\n-from subprocess import check_output\n-import re\n-import sys\n-\n-FOLDER_GREP = 'src'\n-FOLDER_TEST = 'src/test/'\n-REGEX_ARG = '(?:ForceSet|SoftSet|Get|Is)(?:Bool)?Args?(?:Set)?\\(\"(-[^\"]+)\"'\n-REGEX_DOC = 'HelpMessageOpt\\(\"(-[^\"=]+?)(?:=|\")'\n-CMD_ROOT_DIR = '`git rev-parse --show-toplevel`/{}'.format(FOLDER_GREP)\n-CMD_GREP_ARGS = r\"git grep --perl-regexp '{}' -- {} ':(exclude){}'\".format(REGEX_ARG, CMD_ROOT_DIR, FOLDER_TEST)\n-CMD_GREP_DOCS = r\"git grep --perl-regexp '{}' {}\".format(REGEX_DOC, CMD_ROOT_DIR)\n-# list unsupported, deprecated and duplicate args as they need no documentation\n-SET_DOC_OPTIONAL = set(['-rpcssl', '-benchmark', '-h', '-help', '-socks', '-tor', '-debugnet', '-whitelistalwaysrelay', '-prematurewitness', '-walletprematurewitness', '-promiscuousmempoolflags', '-blockminsize', '-dbcrashratio', '-forcecompactdb', '-usehd'])\n-\n-\n-def main():\n-    used = check_output(CMD_GREP_ARGS, shell=True, universal_newlines=True)\n-    docd = check_output(CMD_GREP_DOCS, shell=True, universal_newlines=True)\n-\n-    args_used = set(re.findall(re.compile(REGEX_ARG), used))\n-    args_docd = set(re.findall(re.compile(REGEX_DOC), docd)).union(SET_DOC_OPTIONAL)\n-    args_need_doc = args_used.difference(args_docd)\n-    args_unknown = args_docd.difference(args_used)\n-\n-    print(\"Args used        : {}\".format(len(args_used)))\n-    print(\"Args documented  : {}\".format(len(args_docd)))\n-    print(\"Args undocumented: {}\".format(len(args_need_doc)))\n-    print(args_need_doc)\n-    print(\"Args unknown     : {}\".format(len(args_unknown)))\n-    print(args_unknown)\n-\n-    sys.exit(len(args_need_doc))\n-\n-\n-if __name__ == \"__main__\":\n-    main()"
      },
      {
        "sha": "7e96852c5c26c78040ec173c2a14f5869218e35c",
        "filename": "contrib/devtools/check-rpc-mappings.py",
        "status": "removed",
        "additions": 0,
        "deletions": 158,
        "changes": 158,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/check-rpc-mappings.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/check-rpc-mappings.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/check-rpc-mappings.py?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,158 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Check RPC argument consistency.\"\"\"\n-\n-from collections import defaultdict\n-import os\n-import re\n-import sys\n-\n-# Source files (relative to root) to scan for dispatch tables\n-SOURCES = [\n-    \"src/rpc/server.cpp\",\n-    \"src/rpc/blockchain.cpp\",\n-    \"src/rpc/mining.cpp\",\n-    \"src/rpc/misc.cpp\",\n-    \"src/rpc/net.cpp\",\n-    \"src/rpc/rawtransaction.cpp\",\n-    \"src/wallet/rpcwallet.cpp\",\n-]\n-# Source file (relative to root) containing conversion mapping\n-SOURCE_CLIENT = 'src/rpc/client.cpp'\n-# Argument names that should be ignored in consistency checks\n-IGNORE_DUMMY_ARGS = {'dummy', 'arg0', 'arg1', 'arg2', 'arg3', 'arg4', 'arg5', 'arg6', 'arg7', 'arg8', 'arg9'}\n-\n-class RPCCommand:\n-    def __init__(self, name, args):\n-        self.name = name\n-        self.args = args\n-\n-class RPCArgument:\n-    def __init__(self, names, idx):\n-        self.names = names\n-        self.idx = idx\n-        self.convert = False\n-\n-def parse_string(s):\n-    assert s[0] == '\"'\n-    assert s[-1] == '\"'\n-    return s[1:-1]\n-\n-def process_commands(fname):\n-    \"\"\"Find and parse dispatch table in implementation file `fname`.\"\"\"\n-    cmds = []\n-    in_rpcs = False\n-    with open(fname, \"r\") as f:\n-        for line in f:\n-            line = line.rstrip()\n-            if not in_rpcs:\n-                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n-                    in_rpcs = True\n-            else:\n-                if line.startswith('};'):\n-                    in_rpcs = False\n-                elif '{' in line and '\"' in line:\n-                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *{([^}]*)} *},', line)\n-                    assert m, 'No match to table expression: %s' % line\n-                    name = parse_string(m.group(2))\n-                    args_str = m.group(4).strip()\n-                    if args_str:\n-                        args = [RPCArgument(parse_string(x.strip()).split('|'), idx) for idx, x in enumerate(args_str.split(','))]\n-                    else:\n-                        args = []\n-                    cmds.append(RPCCommand(name, args))\n-    assert not in_rpcs and cmds, \"Something went wrong with parsing the C++ file: update the regexps\"\n-    return cmds\n-\n-def process_mapping(fname):\n-    \"\"\"Find and parse conversion table in implementation file `fname`.\"\"\"\n-    cmds = []\n-    in_rpcs = False\n-    with open(fname, \"r\") as f:\n-        for line in f:\n-            line = line.rstrip()\n-            if not in_rpcs:\n-                if line == 'static const CRPCConvertParam vRPCConvertParams[] =':\n-                    in_rpcs = True\n-            else:\n-                if line.startswith('};'):\n-                    in_rpcs = False\n-                elif '{' in line and '\"' in line:\n-                    m = re.search('{ *(\"[^\"]*\"), *([0-9]+) *, *(\"[^\"]*\") *},', line)\n-                    assert m, 'No match to table expression: %s' % line\n-                    name = parse_string(m.group(1))\n-                    idx = int(m.group(2))\n-                    argname = parse_string(m.group(3))\n-                    cmds.append((name, idx, argname))\n-    assert not in_rpcs and cmds\n-    return cmds\n-\n-def main():\n-    root = sys.argv[1]\n-\n-    # Get all commands from dispatch tables\n-    cmds = []\n-    for fname in SOURCES:\n-        cmds += process_commands(os.path.join(root, fname))\n-\n-    cmds_by_name = {}\n-    for cmd in cmds:\n-        cmds_by_name[cmd.name] = cmd\n-\n-    # Get current convert mapping for client\n-    client = SOURCE_CLIENT\n-    mapping = set(process_mapping(os.path.join(root, client)))\n-\n-    print('* Checking consistency between dispatch tables and vRPCConvertParams')\n-\n-    # Check mapping consistency\n-    errors = 0\n-    for (cmdname, argidx, argname) in mapping:\n-        try:\n-            rargnames = cmds_by_name[cmdname].args[argidx].names\n-        except IndexError:\n-            print('ERROR: %s argument %i (named %s in vRPCConvertParams) is not defined in dispatch table' % (cmdname, argidx, argname))\n-            errors += 1\n-            continue\n-        if argname not in rargnames:\n-            print('ERROR: %s argument %i is named %s in vRPCConvertParams but %s in dispatch table' % (cmdname, argidx, argname, rargnames), file=sys.stderr)\n-            errors += 1\n-\n-    # Check for conflicts in vRPCConvertParams conversion\n-    # All aliases for an argument must either be present in the\n-    # conversion table, or not. Anything in between means an oversight\n-    # and some aliases won't work.\n-    for cmd in cmds:\n-        for arg in cmd.args:\n-            convert = [((cmd.name, arg.idx, argname) in mapping) for argname in arg.names]\n-            if any(convert) != all(convert):\n-                print('ERROR: %s argument %s has conflicts in vRPCConvertParams conversion specifier %s' % (cmd.name, arg.names, convert))\n-                errors += 1\n-            arg.convert = all(convert)\n-\n-    # Check for conversion difference by argument name.\n-    # It is preferable for API consistency that arguments with the same name\n-    # have the same conversion, so bin by argument name.\n-    all_methods_by_argname = defaultdict(list)\n-    converts_by_argname = defaultdict(list)\n-    for cmd in cmds:\n-        for arg in cmd.args:\n-            for argname in arg.names:\n-                all_methods_by_argname[argname].append(cmd.name)\n-                converts_by_argname[argname].append(arg.convert)\n-\n-    for argname, convert in converts_by_argname.items():\n-        if all(convert) != any(convert):\n-            if argname in IGNORE_DUMMY_ARGS:\n-                # these are testing or dummy, don't warn for them\n-                continue\n-            print('WARNING: conversion mismatch for argument named %s (%s)' %\n-                  (argname, list(zip(all_methods_by_argname[argname], converts_by_argname[argname]))))\n-\n-    sys.exit(errors > 0)\n-\n-\n-if __name__ == '__main__':\n-    main()"
      },
      {
        "sha": "5402870fbab15be89b38cf8deeffe425a51c27d0",
        "filename": "contrib/devtools/clang-format-diff.py",
        "status": "removed",
        "additions": 0,
        "deletions": 166,
        "changes": 166,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/clang-format-diff.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/clang-format-diff.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/clang-format-diff.py?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,166 +0,0 @@\n-#!/usr/bin/env python3\n-#\n-#===- clang-format-diff.py - ClangFormat Diff Reformatter ----*- python -*--===#\n-#\n-#                     The LLVM Compiler Infrastructure\n-#\n-# This file is distributed under the University of Illinois Open Source\n-# License.\n-#\n-#           ============================================================\n-#\n-# University of Illinois/NCSA\n-# Open Source License\n-#\n-# Copyright (c) 2007-2015 University of Illinois at Urbana-Champaign.\n-# All rights reserved.\n-#\n-# Developed by:\n-#\n-#     LLVM Team\n-#\n-#     University of Illinois at Urbana-Champaign\n-#\n-#     http://llvm.org\n-#\n-# Permission is hereby granted, free of charge, to any person obtaining a copy of\n-# this software and associated documentation files (the \"Software\"), to deal with\n-# the Software without restriction, including without limitation the rights to\n-# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n-# of the Software, and to permit persons to whom the Software is furnished to do\n-# so, subject to the following conditions:\n-#\n-#     * Redistributions of source code must retain the above copyright notice,\n-#       this list of conditions and the following disclaimers.\n-#\n-#     * Redistributions in binary form must reproduce the above copyright notice,\n-#       this list of conditions and the following disclaimers in the\n-#       documentation and/or other materials provided with the distribution.\n-#\n-#     * Neither the names of the LLVM Team, University of Illinois at\n-#       Urbana-Champaign, nor the names of its contributors may be used to\n-#       endorse or promote products derived from this Software without specific\n-#       prior written permission.\n-#\n-# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n-# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n-# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n-# CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n-# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n-# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE\n-# SOFTWARE.\n-#\n-#           ============================================================\n-#\n-#===------------------------------------------------------------------------===#\n-\n-r\"\"\"\n-ClangFormat Diff Reformatter\n-============================\n-\n-This script reads input from a unified diff and reformats all the changed\n-lines. This is useful to reformat all the lines touched by a specific patch.\n-Example usage for git/svn users:\n-\n-  git diff -U0 HEAD^ | clang-format-diff.py -p1 -i\n-  svn diff --diff-cmd=diff -x-U0 | clang-format-diff.py -i\n-\n-\"\"\"\n-\n-import argparse\n-import difflib\n-import io\n-import re\n-import subprocess\n-import sys\n-\n-\n-# Change this to the full path if clang-format is not on the path.\n-binary = 'clang-format'\n-\n-\n-def main():\n-  parser = argparse.ArgumentParser(description=\n-                                   'Reformat changed lines in diff. Without -i '\n-                                   'option just output the diff that would be '\n-                                   'introduced.')\n-  parser.add_argument('-i', action='store_true', default=False,\n-                      help='apply edits to files instead of displaying a diff')\n-  parser.add_argument('-p', metavar='NUM', default=0,\n-                      help='strip the smallest prefix containing P slashes')\n-  parser.add_argument('-regex', metavar='PATTERN', default=None,\n-                      help='custom pattern selecting file paths to reformat '\n-                      '(case sensitive, overrides -iregex)')\n-  parser.add_argument('-iregex', metavar='PATTERN', default=\n-                      r'.*\\.(cpp|cc|c\\+\\+|cxx|c|cl|h|hpp|m|mm|inc|js|ts|proto'\n-                      r'|protodevel|java)',\n-                      help='custom pattern selecting file paths to reformat '\n-                      '(case insensitive, overridden by -regex)')\n-  parser.add_argument('-sort-includes', action='store_true', default=False,\n-                      help='let clang-format sort include blocks')\n-  parser.add_argument('-v', '--verbose', action='store_true',\n-                      help='be more verbose, ineffective without -i')\n-  args = parser.parse_args()\n-\n-  # Extract changed lines for each file.\n-  filename = None\n-  lines_by_file = {}\n-  for line in sys.stdin:\n-    match = re.search('^\\+\\+\\+\\ (.*?/){%s}(\\S*)' % args.p, line)\n-    if match:\n-      filename = match.group(2)\n-    if filename == None:\n-      continue\n-\n-    if args.regex is not None:\n-      if not re.match('^%s$' % args.regex, filename):\n-        continue\n-    else:\n-      if not re.match('^%s$' % args.iregex, filename, re.IGNORECASE):\n-        continue\n-\n-    match = re.search('^@@.*\\+(\\d+)(,(\\d+))?', line)\n-    if match:\n-      start_line = int(match.group(1))\n-      line_count = 1\n-      if match.group(3):\n-        line_count = int(match.group(3))\n-      if line_count == 0:\n-        continue\n-      end_line = start_line + line_count - 1\n-      lines_by_file.setdefault(filename, []).extend(\n-          ['-lines', str(start_line) + ':' + str(end_line)])\n-\n-  # Reformat files containing changes in place.\n-  for filename, lines in lines_by_file.items():\n-    if args.i and args.verbose:\n-      print('Formatting {}'.format(filename))\n-    command = [binary, filename]\n-    if args.i:\n-      command.append('-i')\n-    if args.sort_includes:\n-      command.append('-sort-includes')\n-    command.extend(lines)\n-    command.extend(['-style=file', '-fallback-style=none'])\n-    p = subprocess.Popen(command,\n-                         stdout=subprocess.PIPE,\n-                         stderr=None,\n-                         stdin=subprocess.PIPE,\n-                         universal_newlines=True)\n-    stdout, stderr = p.communicate()\n-    if p.returncode != 0:\n-      sys.exit(p.returncode)\n-\n-    if not args.i:\n-      with open(filename) as f:\n-        code = f.readlines()\n-      formatted_code = io.StringIO(stdout).readlines()\n-      diff = difflib.unified_diff(code, formatted_code,\n-                                  filename, filename,\n-                                  '(before formatting)', '(after formatting)')\n-      diff_string = ''.join(diff)\n-      if len(diff_string) > 0:\n-        sys.stdout.write(diff_string)\n-\n-if __name__ == '__main__':\n-  main()"
      },
      {
        "sha": "1c9dbc7f68ff5355fa02848dd6c85d659cf8d409",
        "filename": "contrib/devtools/commit-script-check.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 46,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/commit-script-check.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/commit-script-check.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/commit-script-check.sh?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,46 +0,0 @@\n-#!/bin/sh\n-# Copyright (c) 2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# This simple script checks for commits beginning with: scripted-diff:\n-# If found, looks for a script between the lines -BEGIN VERIFY SCRIPT- and\n-# -END VERIFY SCRIPT-. If no ending is found, it reads until the end of the\n-# commit message.\n-\n-# The resulting script should exactly transform the previous commit into the current\n-# one. Any remaining diff signals an error.\n-\n-if test \"x$1\" = \"x\"; then\n-    echo \"Usage: $0 <commit>...\"\n-    exit 1\n-fi\n-\n-RET=0\n-PREV_BRANCH=`git name-rev --name-only HEAD`\n-PREV_HEAD=`git rev-parse HEAD`\n-for i in `git rev-list --reverse $1`; do\n-    if git rev-list -n 1 --pretty=\"%s\" $i | grep -q \"^scripted-diff:\"; then\n-        git checkout --quiet $i^ || exit\n-        SCRIPT=\"`git rev-list --format=%b -n1 $i | sed '/^-BEGIN VERIFY SCRIPT-$/,/^-END VERIFY SCRIPT-$/{//!b};d'`\"\n-        if test \"x$SCRIPT\" = \"x\"; then\n-            echo \"Error: missing script for: $i\"\n-            echo \"Failed\"\n-            RET=1\n-        else\n-            echo \"Running script for: $i\"\n-            echo \"$SCRIPT\"\n-            eval \"$SCRIPT\"\n-            git --no-pager diff --exit-code $i && echo \"OK\" || (echo \"Failed\"; false) || RET=1\n-        fi\n-        git reset --quiet --hard HEAD\n-     else\n-        if git rev-list \"--format=%b\" -n1 $i | grep -q '^-\\(BEGIN\\|END\\)[ a-zA-Z]*-$'; then\n-            echo \"Error: script block marker but no scripted-diff in title\"\n-            echo \"Failed\"\n-            RET=1\n-        fi\n-    fi\n-done\n-git checkout --quiet $PREV_BRANCH 2>/dev/null || git checkout --quiet $PREV_HEAD\n-exit $RET"
      },
      {
        "sha": "e7cccaab036b32d55fa6f3d073f9498a25f98cc5",
        "filename": "contrib/devtools/copyright_header.py",
        "status": "removed",
        "additions": 0,
        "deletions": 612,
        "changes": 612,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/copyright_header.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/copyright_header.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/copyright_header.py?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,612 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2016-2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-import re\n-import fnmatch\n-import sys\n-import subprocess\n-import datetime\n-import os\n-\n-################################################################################\n-# file filtering\n-################################################################################\n-\n-EXCLUDE = [\n-    # libsecp256k1:\n-    'src/secp256k1/include/secp256k1.h',\n-    'src/secp256k1/include/secp256k1_ecdh.h',\n-    'src/secp256k1/include/secp256k1_recovery.h',\n-    'src/secp256k1/include/secp256k1_schnorr.h',\n-    'src/secp256k1/src/java/org_bitcoin_NativeSecp256k1.c',\n-    'src/secp256k1/src/java/org_bitcoin_NativeSecp256k1.h',\n-    'src/secp256k1/src/java/org_bitcoin_Secp256k1Context.c',\n-    'src/secp256k1/src/java/org_bitcoin_Secp256k1Context.h',\n-    # univalue:\n-    'src/univalue/test/object.cpp',\n-    'src/univalue/lib/univalue_escapes.h',\n-    # auto generated:\n-    'src/qt/bitcoinstrings.cpp',\n-    'src/chainparamsseeds.h',\n-    # other external copyrights:\n-    'src/tinyformat.h',\n-    'src/leveldb/util/env_win.cc',\n-    'src/crypto/ctaes/bench.c',\n-    'test/functional/test_framework/bignum.py',\n-    # python init:\n-    '*__init__.py',\n-]\n-EXCLUDE_COMPILED = re.compile('|'.join([fnmatch.translate(m) for m in EXCLUDE]))\n-\n-INCLUDE = ['*.h', '*.cpp', '*.cc', '*.c', '*.py']\n-INCLUDE_COMPILED = re.compile('|'.join([fnmatch.translate(m) for m in INCLUDE]))\n-\n-def applies_to_file(filename):\n-    return ((EXCLUDE_COMPILED.match(filename) is None) and\n-            (INCLUDE_COMPILED.match(filename) is not None))\n-\n-################################################################################\n-# obtain list of files in repo according to INCLUDE and EXCLUDE\n-################################################################################\n-\n-GIT_LS_CMD = 'git ls-files'\n-\n-def call_git_ls():\n-    out = subprocess.check_output(GIT_LS_CMD.split(' '))\n-    return [f for f in out.decode(\"utf-8\").split('\\n') if f != '']\n-\n-def get_filenames_to_examine():\n-    filenames = call_git_ls()\n-    return sorted([filename for filename in filenames if\n-                   applies_to_file(filename)])\n-\n-################################################################################\n-# define and compile regexes for the patterns we are looking for\n-################################################################################\n-\n-\n-COPYRIGHT_WITH_C = 'Copyright \\(c\\)'\n-COPYRIGHT_WITHOUT_C = 'Copyright'\n-ANY_COPYRIGHT_STYLE = '(%s|%s)' % (COPYRIGHT_WITH_C, COPYRIGHT_WITHOUT_C)\n-\n-YEAR = \"20[0-9][0-9]\"\n-YEAR_RANGE = '(%s)(-%s)?' % (YEAR, YEAR)\n-YEAR_LIST = '(%s)(, %s)+' % (YEAR, YEAR)\n-ANY_YEAR_STYLE = '(%s|%s)' % (YEAR_RANGE, YEAR_LIST)\n-ANY_COPYRIGHT_STYLE_OR_YEAR_STYLE = (\"%s %s\" % (ANY_COPYRIGHT_STYLE,\n-                                                ANY_YEAR_STYLE))\n-\n-ANY_COPYRIGHT_COMPILED = re.compile(ANY_COPYRIGHT_STYLE_OR_YEAR_STYLE)\n-\n-def compile_copyright_regex(copyright_style, year_style, name):\n-    return re.compile('%s %s %s' % (copyright_style, year_style, name))\n-\n-EXPECTED_HOLDER_NAMES = [\n-    \"Satoshi Nakamoto\\n\",\n-    \"The Bitcoin Core developers\\n\",\n-    \"The Bitcoin Core developers \\n\",\n-    \"Bitcoin Core Developers\\n\",\n-    \"the Bitcoin Core developers\\n\",\n-    \"The Bitcoin developers\\n\",\n-    \"The LevelDB Authors\\. All rights reserved\\.\\n\",\n-    \"BitPay Inc\\.\\n\",\n-    \"BitPay, Inc\\.\\n\",\n-    \"University of Illinois at Urbana-Champaign\\.\\n\",\n-    \"MarcoFalke\\n\",\n-    \"Pieter Wuille\\n\",\n-    \"Pieter Wuille +\\*\\n\",\n-    \"Pieter Wuille, Gregory Maxwell +\\*\\n\",\n-    \"Pieter Wuille, Andrew Poelstra +\\*\\n\",\n-    \"Andrew Poelstra +\\*\\n\",\n-    \"Wladimir J. van der Laan\\n\",\n-    \"Jeff Garzik\\n\",\n-    \"Diederik Huys, Pieter Wuille +\\*\\n\",\n-    \"Thomas Daede, Cory Fields +\\*\\n\",\n-    \"Jan-Klaas Kollhof\\n\",\n-    \"Sam Rushing\\n\",\n-    \"ArtForz -- public domain half-a-node\\n\",\n-]\n-\n-DOMINANT_STYLE_COMPILED = {}\n-YEAR_LIST_STYLE_COMPILED = {}\n-WITHOUT_C_STYLE_COMPILED = {}\n-\n-for holder_name in EXPECTED_HOLDER_NAMES:\n-    DOMINANT_STYLE_COMPILED[holder_name] = (\n-        compile_copyright_regex(COPYRIGHT_WITH_C, YEAR_RANGE, holder_name))\n-    YEAR_LIST_STYLE_COMPILED[holder_name] = (\n-        compile_copyright_regex(COPYRIGHT_WITH_C, YEAR_LIST, holder_name))\n-    WITHOUT_C_STYLE_COMPILED[holder_name] = (\n-        compile_copyright_regex(COPYRIGHT_WITHOUT_C, ANY_YEAR_STYLE,\n-                                holder_name))\n-\n-################################################################################\n-# search file contents for copyright message of particular category\n-################################################################################\n-\n-def get_count_of_copyrights_of_any_style_any_holder(contents):\n-    return len(ANY_COPYRIGHT_COMPILED.findall(contents))\n-\n-def file_has_dominant_style_copyright_for_holder(contents, holder_name):\n-    match = DOMINANT_STYLE_COMPILED[holder_name].search(contents)\n-    return match is not None\n-\n-def file_has_year_list_style_copyright_for_holder(contents, holder_name):\n-    match = YEAR_LIST_STYLE_COMPILED[holder_name].search(contents)\n-    return match is not None\n-\n-def file_has_without_c_style_copyright_for_holder(contents, holder_name):\n-    match = WITHOUT_C_STYLE_COMPILED[holder_name].search(contents)\n-    return match is not None\n-\n-################################################################################\n-# get file info\n-################################################################################\n-\n-def read_file(filename):\n-    return open(os.path.abspath(filename), 'r').read()\n-\n-def gather_file_info(filename):\n-    info = {}\n-    info['filename'] = filename\n-    c = read_file(filename)\n-    info['contents'] = c\n-\n-    info['all_copyrights'] = get_count_of_copyrights_of_any_style_any_holder(c)\n-\n-    info['classified_copyrights'] = 0\n-    info['dominant_style'] = {}\n-    info['year_list_style'] = {}\n-    info['without_c_style'] = {}\n-    for holder_name in EXPECTED_HOLDER_NAMES:\n-        has_dominant_style = (\n-            file_has_dominant_style_copyright_for_holder(c, holder_name))\n-        has_year_list_style = (\n-            file_has_year_list_style_copyright_for_holder(c, holder_name))\n-        has_without_c_style = (\n-            file_has_without_c_style_copyright_for_holder(c, holder_name))\n-        info['dominant_style'][holder_name] = has_dominant_style\n-        info['year_list_style'][holder_name] = has_year_list_style\n-        info['without_c_style'][holder_name] = has_without_c_style\n-        if has_dominant_style or has_year_list_style or has_without_c_style:\n-            info['classified_copyrights'] = info['classified_copyrights'] + 1\n-    return info\n-\n-################################################################################\n-# report execution\n-################################################################################\n-\n-SEPARATOR = '-'.join(['' for _ in range(80)])\n-\n-def print_filenames(filenames, verbose):\n-    if not verbose:\n-        return\n-    for filename in filenames:\n-        print(\"\\t%s\" % filename)\n-\n-def print_report(file_infos, verbose):\n-    print(SEPARATOR)\n-    examined = [i['filename'] for i in file_infos]\n-    print(\"%d files examined according to INCLUDE and EXCLUDE fnmatch rules\" %\n-          len(examined))\n-    print_filenames(examined, verbose)\n-\n-    print(SEPARATOR)\n-    print('')\n-    zero_copyrights = [i['filename'] for i in file_infos if\n-                       i['all_copyrights'] == 0]\n-    print(\"%4d with zero copyrights\" % len(zero_copyrights))\n-    print_filenames(zero_copyrights, verbose)\n-    one_copyright = [i['filename'] for i in file_infos if\n-                     i['all_copyrights'] == 1]\n-    print(\"%4d with one copyright\" % len(one_copyright))\n-    print_filenames(one_copyright, verbose)\n-    two_copyrights = [i['filename'] for i in file_infos if\n-                      i['all_copyrights'] == 2]\n-    print(\"%4d with two copyrights\" % len(two_copyrights))\n-    print_filenames(two_copyrights, verbose)\n-    three_copyrights = [i['filename'] for i in file_infos if\n-                        i['all_copyrights'] == 3]\n-    print(\"%4d with three copyrights\" % len(three_copyrights))\n-    print_filenames(three_copyrights, verbose)\n-    four_or_more_copyrights = [i['filename'] for i in file_infos if\n-                               i['all_copyrights'] >= 4]\n-    print(\"%4d with four or more copyrights\" % len(four_or_more_copyrights))\n-    print_filenames(four_or_more_copyrights, verbose)\n-    print('')\n-    print(SEPARATOR)\n-    print('Copyrights with dominant style:\\ne.g. \"Copyright (c)\" and '\n-          '\"<year>\" or \"<startYear>-<endYear>\":\\n')\n-    for holder_name in EXPECTED_HOLDER_NAMES:\n-        dominant_style = [i['filename'] for i in file_infos if\n-                          i['dominant_style'][holder_name]]\n-        if len(dominant_style) > 0:\n-            print(\"%4d with '%s'\" % (len(dominant_style),\n-                                     holder_name.replace('\\n', '\\\\n')))\n-            print_filenames(dominant_style, verbose)\n-    print('')\n-    print(SEPARATOR)\n-    print('Copyrights with year list style:\\ne.g. \"Copyright (c)\" and '\n-          '\"<year1>, <year2>, ...\":\\n')\n-    for holder_name in EXPECTED_HOLDER_NAMES:\n-        year_list_style = [i['filename'] for i in file_infos if\n-                           i['year_list_style'][holder_name]]\n-        if len(year_list_style) > 0:\n-            print(\"%4d with '%s'\" % (len(year_list_style),\n-                                     holder_name.replace('\\n', '\\\\n')))\n-            print_filenames(year_list_style, verbose)\n-    print('')\n-    print(SEPARATOR)\n-    print('Copyrights with no \"(c)\" style:\\ne.g. \"Copyright\" and \"<year>\" or '\n-          '\"<startYear>-<endYear>\":\\n')\n-    for holder_name in EXPECTED_HOLDER_NAMES:\n-        without_c_style = [i['filename'] for i in file_infos if\n-                           i['without_c_style'][holder_name]]\n-        if len(without_c_style) > 0:\n-            print(\"%4d with '%s'\" % (len(without_c_style),\n-                                     holder_name.replace('\\n', '\\\\n')))\n-            print_filenames(without_c_style, verbose)\n-\n-    print('')\n-    print(SEPARATOR)\n-\n-    unclassified_copyrights = [i['filename'] for i in file_infos if\n-                               i['classified_copyrights'] < i['all_copyrights']]\n-    print(\"%d with unexpected copyright holder names\" %\n-          len(unclassified_copyrights))\n-    print_filenames(unclassified_copyrights, verbose)\n-    print(SEPARATOR)\n-\n-def exec_report(base_directory, verbose):\n-    original_cwd = os.getcwd()\n-    os.chdir(base_directory)\n-    filenames = get_filenames_to_examine()\n-    file_infos = [gather_file_info(f) for f in filenames]\n-    print_report(file_infos, verbose)\n-    os.chdir(original_cwd)\n-\n-################################################################################\n-# report cmd\n-################################################################################\n-\n-REPORT_USAGE = \"\"\"\n-Produces a report of all copyright header notices found inside the source files\n-of a repository.\n-\n-Usage:\n-    $ ./copyright_header.py report <base_directory> [verbose]\n-\n-Arguments:\n-    <base_directory> - The base directory of a bitcoin source code repository.\n-    [verbose] - Includes a list of every file of each subcategory in the report.\n-\"\"\"\n-\n-def report_cmd(argv):\n-    if len(argv) == 2:\n-        sys.exit(REPORT_USAGE)\n-\n-    base_directory = argv[2]\n-    if not os.path.exists(base_directory):\n-        sys.exit(\"*** bad <base_directory>: %s\" % base_directory)\n-\n-    if len(argv) == 3:\n-        verbose = False\n-    elif argv[3] == 'verbose':\n-        verbose = True\n-    else:\n-        sys.exit(\"*** unknown argument: %s\" % argv[2])\n-\n-    exec_report(base_directory, verbose)\n-\n-################################################################################\n-# query git for year of last change\n-################################################################################\n-\n-GIT_LOG_CMD = \"git log --pretty=format:%%ai %s\"\n-\n-def call_git_log(filename):\n-    out = subprocess.check_output((GIT_LOG_CMD % filename).split(' '))\n-    return out.decode(\"utf-8\").split('\\n')\n-\n-def get_git_change_years(filename):\n-    git_log_lines = call_git_log(filename)\n-    if len(git_log_lines) == 0:\n-        return [datetime.date.today().year]\n-    # timestamp is in ISO 8601 format. e.g. \"2016-09-05 14:25:32 -0600\"\n-    return [line.split(' ')[0].split('-')[0] for line in git_log_lines]\n-\n-def get_most_recent_git_change_year(filename):\n-    return max(get_git_change_years(filename))\n-\n-################################################################################\n-# read and write to file\n-################################################################################\n-\n-def read_file_lines(filename):\n-    f = open(os.path.abspath(filename), 'r')\n-    file_lines = f.readlines()\n-    f.close()\n-    return file_lines\n-\n-def write_file_lines(filename, file_lines):\n-    f = open(os.path.abspath(filename), 'w')\n-    f.write(''.join(file_lines))\n-    f.close()\n-\n-################################################################################\n-# update header years execution\n-################################################################################\n-\n-COPYRIGHT = 'Copyright \\(c\\)'\n-YEAR = \"20[0-9][0-9]\"\n-YEAR_RANGE = '(%s)(-%s)?' % (YEAR, YEAR)\n-HOLDER = 'The Bitcoin Core developers'\n-UPDATEABLE_LINE_COMPILED = re.compile(' '.join([COPYRIGHT, YEAR_RANGE, HOLDER]))\n-\n-def get_updatable_copyright_line(file_lines):\n-    index = 0\n-    for line in file_lines:\n-        if UPDATEABLE_LINE_COMPILED.search(line) is not None:\n-            return index, line\n-        index = index + 1\n-    return None, None\n-\n-def parse_year_range(year_range):\n-    year_split = year_range.split('-')\n-    start_year = year_split[0]\n-    if len(year_split) == 1:\n-        return start_year, start_year\n-    return start_year, year_split[1]\n-\n-def year_range_to_str(start_year, end_year):\n-    if start_year == end_year:\n-        return start_year\n-    return \"%s-%s\" % (start_year, end_year)\n-\n-def create_updated_copyright_line(line, last_git_change_year):\n-    copyright_splitter = 'Copyright (c) '\n-    copyright_split = line.split(copyright_splitter)\n-    # Preserve characters on line that are ahead of the start of the copyright\n-    # notice - they are part of the comment block and vary from file-to-file.\n-    before_copyright = copyright_split[0]\n-    after_copyright = copyright_split[1]\n-\n-    space_split = after_copyright.split(' ')\n-    year_range = space_split[0]\n-    start_year, end_year = parse_year_range(year_range)\n-    if end_year == last_git_change_year:\n-        return line\n-    return (before_copyright + copyright_splitter +\n-            year_range_to_str(start_year, last_git_change_year) + ' ' +\n-            ' '.join(space_split[1:]))\n-\n-def update_updatable_copyright(filename):\n-    file_lines = read_file_lines(filename)\n-    index, line = get_updatable_copyright_line(file_lines)\n-    if not line:\n-        print_file_action_message(filename, \"No updatable copyright.\")\n-        return\n-    last_git_change_year = get_most_recent_git_change_year(filename)\n-    new_line = create_updated_copyright_line(line, last_git_change_year)\n-    if line == new_line:\n-        print_file_action_message(filename, \"Copyright up-to-date.\")\n-        return\n-    file_lines[index] = new_line\n-    write_file_lines(filename, file_lines)\n-    print_file_action_message(filename,\n-                              \"Copyright updated! -> %s\" % last_git_change_year)\n-\n-def exec_update_header_year(base_directory):\n-    original_cwd = os.getcwd()\n-    os.chdir(base_directory)\n-    for filename in get_filenames_to_examine():\n-        update_updatable_copyright(filename)\n-    os.chdir(original_cwd)\n-\n-################################################################################\n-# update cmd\n-################################################################################\n-\n-UPDATE_USAGE = \"\"\"\n-Updates all the copyright headers of \"The Bitcoin Core developers\" which were\n-changed in a year more recent than is listed. For example:\n-\n-// Copyright (c) <firstYear>-<lastYear> The Bitcoin Core developers\n-\n-will be updated to:\n-\n-// Copyright (c) <firstYear>-<lastModifiedYear> The Bitcoin Core developers\n-\n-where <lastModifiedYear> is obtained from the 'git log' history.\n-\n-This subcommand also handles copyright headers that have only a single year. In those cases:\n-\n-// Copyright (c) <year> The Bitcoin Core developers\n-\n-will be updated to:\n-\n-// Copyright (c) <year>-<lastModifiedYear> The Bitcoin Core developers\n-\n-where the update is appropriate.\n-\n-Usage:\n-    $ ./copyright_header.py update <base_directory>\n-\n-Arguments:\n-    <base_directory> - The base directory of a bitcoin source code repository.\n-\"\"\"\n-\n-def print_file_action_message(filename, action):\n-    print(\"%-52s %s\" % (filename, action))\n-\n-def update_cmd(argv):\n-    if len(argv) != 3:\n-        sys.exit(UPDATE_USAGE)\n-\n-    base_directory = argv[2]\n-    if not os.path.exists(base_directory):\n-        sys.exit(\"*** bad base_directory: %s\" % base_directory)\n-    exec_update_header_year(base_directory)\n-\n-################################################################################\n-# inserted copyright header format\n-################################################################################\n-\n-def get_header_lines(header, start_year, end_year):\n-    lines = header.split('\\n')[1:-1]\n-    lines[0] = lines[0] % year_range_to_str(start_year, end_year)\n-    return [line + '\\n' for line in lines]\n-\n-CPP_HEADER = '''\n-// Copyright (c) %s The Bitcoin Core developers\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-\n-def get_cpp_header_lines_to_insert(start_year, end_year):\n-    return reversed(get_header_lines(CPP_HEADER, start_year, end_year))\n-\n-PYTHON_HEADER = '''\n-# Copyright (c) %s The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-\n-def get_python_header_lines_to_insert(start_year, end_year):\n-    return reversed(get_header_lines(PYTHON_HEADER, start_year, end_year))\n-\n-################################################################################\n-# query git for year of last change\n-################################################################################\n-\n-def get_git_change_year_range(filename):\n-    years = get_git_change_years(filename)\n-    return min(years), max(years)\n-\n-################################################################################\n-# check for existing core copyright\n-################################################################################\n-\n-def file_already_has_core_copyright(file_lines):\n-    index, _ = get_updatable_copyright_line(file_lines)\n-    return index != None\n-\n-################################################################################\n-# insert header execution\n-################################################################################\n-\n-def file_has_hashbang(file_lines):\n-    if len(file_lines) < 1:\n-        return False\n-    if len(file_lines[0]) <= 2:\n-        return False\n-    return file_lines[0][:2] == '#!'\n-\n-def insert_python_header(filename, file_lines, start_year, end_year):\n-    if file_has_hashbang(file_lines):\n-        insert_idx = 1 \n-    else:\n-        insert_idx = 0\n-    header_lines = get_python_header_lines_to_insert(start_year, end_year)\n-    for line in header_lines:\n-        file_lines.insert(insert_idx, line)\n-    write_file_lines(filename, file_lines)\n-\n-def insert_cpp_header(filename, file_lines, start_year, end_year):\n-    header_lines = get_cpp_header_lines_to_insert(start_year, end_year)\n-    for line in header_lines:\n-        file_lines.insert(0, line)\n-    write_file_lines(filename, file_lines)\n-\n-def exec_insert_header(filename, style):\n-    file_lines = read_file_lines(filename)\n-    if file_already_has_core_copyright(file_lines):\n-        sys.exit('*** %s already has a copyright by The Bitcoin Core developers'\n-                 % (filename))\n-    start_year, end_year = get_git_change_year_range(filename)\n-    if style == 'python':\n-        insert_python_header(filename, file_lines, start_year, end_year)\n-    else:\n-        insert_cpp_header(filename, file_lines, start_year, end_year)\n-\n-################################################################################\n-# insert cmd\n-################################################################################\n-\n-INSERT_USAGE = \"\"\"\n-Inserts a copyright header for \"The Bitcoin Core developers\" at the top of the\n-file in either Python or C++ style as determined by the file extension. If the\n-file is a Python file and it has a '#!' starting the first line, the header is\n-inserted in the line below it.\n-\n-The copyright dates will be set to be:\n-\n-\"<year_introduced>-<current_year>\"\n-\n-where <year_introduced> is according to the 'git log' history. If\n-<year_introduced> is equal to <current_year>, the date will be set to be:\n-\n-\"<current_year>\"\n-\n-If the file already has a copyright for \"The Bitcoin Core developers\", the\n-script will exit.\n-\n-Usage:\n-    $ ./copyright_header.py insert <file>\n-\n-Arguments:\n-    <file> - A source file in the bitcoin repository.\n-\"\"\"\n-\n-def insert_cmd(argv):\n-    if len(argv) != 3:\n-        sys.exit(INSERT_USAGE)\n-\n-    filename = argv[2]\n-    if not os.path.isfile(filename):\n-        sys.exit(\"*** bad filename: %s\" % filename)\n-    _, extension = os.path.splitext(filename)\n-    if extension not in ['.h', '.cpp', '.cc', '.c', '.py']:\n-        sys.exit(\"*** cannot insert for file extension %s\" % extension)\n-\n-    if extension == '.py': \n-        style = 'python'\n-    else:\n-        style = 'cpp'\n-    exec_insert_header(filename, style)\n-\n-################################################################################\n-# UI\n-################################################################################\n-\n-USAGE = \"\"\"\n-copyright_header.py - utilities for managing copyright headers of 'The Bitcoin\n-Core developers' in repository source files.\n-\n-Usage:\n-    $ ./copyright_header <subcommand>\n-\n-Subcommands:\n-    report\n-    update\n-    insert\n-\n-To see subcommand usage, run them without arguments.\n-\"\"\"\n-\n-SUBCOMMANDS = ['report', 'update', 'insert']\n-\n-if __name__ == \"__main__\":\n-    if len(sys.argv) == 1:\n-        sys.exit(USAGE)\n-    subcommand = sys.argv[1]\n-    if subcommand not in SUBCOMMANDS:\n-        sys.exit(USAGE)\n-    if subcommand == 'report':\n-        report_cmd(sys.argv)\n-    elif subcommand == 'update':\n-        update_cmd(sys.argv)\n-    elif subcommand == 'insert':\n-        insert_cmd(sys.argv)"
      },
      {
        "sha": "27c80548c1e1769c915261941b7c003d76e15065",
        "filename": "contrib/devtools/gen-manpages.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 31,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/gen-manpages.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/gen-manpages.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/gen-manpages.sh?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,31 +0,0 @@\n-#!/bin/bash\n-\n-TOPDIR=${TOPDIR:-$(git rev-parse --show-toplevel)}\n-BUILDDIR=${BUILDDIR:-$TOPDIR}\n-\n-BINDIR=${BINDIR:-$BUILDDIR/src}\n-MANDIR=${MANDIR:-$TOPDIR/doc/man}\n-\n-BITCOIND=${BITCOIND:-$BINDIR/bitcoind}\n-BITCOINCLI=${BITCOINCLI:-$BINDIR/bitcoin-cli}\n-BITCOINTX=${BITCOINTX:-$BINDIR/bitcoin-tx}\n-BITCOINQT=${BITCOINQT:-$BINDIR/qt/bitcoin-qt}\n-\n-[ ! -x $BITCOIND ] && echo \"$BITCOIND not found or not executable.\" && exit 1\n-\n-# The autodetected version git tag can screw up manpage output a little bit\n-BTCVER=($($BITCOINCLI --version | head -n1 | awk -F'[ -]' '{ print $6, $7 }'))\n-\n-# Create a footer file with copyright content.\n-# This gets autodetected fine for bitcoind if --version-string is not set,\n-# but has different outcomes for bitcoin-qt and bitcoin-cli.\n-echo \"[COPYRIGHT]\" > footer.h2m\n-$BITCOIND --version | sed -n '1!p' >> footer.h2m\n-\n-for cmd in $BITCOIND $BITCOINCLI $BITCOINTX $BITCOINQT; do\n-  cmdname=\"${cmd##*/}\"\n-  help2man -N --version-string=${BTCVER[0]} --include=footer.h2m -o ${MANDIR}/${cmdname}.1 ${cmd}\n-  sed -i \"s/\\\\\\-${BTCVER[1]}//g\" ${MANDIR}/${cmdname}.1\n-done\n-\n-rm -f footer.h2m"
      },
      {
        "sha": "184951715e99ee051cea0f73535330f5033ee80f",
        "filename": "contrib/devtools/git-subtree-check.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 94,
        "changes": 94,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/git-subtree-check.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/git-subtree-check.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/git-subtree-check.sh?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,94 +0,0 @@\n-#!/bin/sh\n-# Copyright (c) 2015 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-DIR=\"$1\"\n-COMMIT=\"$2\"\n-if [ -z \"$COMMIT\" ]; then\n-    COMMIT=HEAD\n-fi\n-\n-# Taken from git-subtree (Copyright (C) 2009 Avery Pennarun <apenwarr@gmail.com>)\n-find_latest_squash()\n-{\n-\tdir=\"$1\"\n-\tsq=\n-\tmain=\n-\tsub=\n-\tgit log --grep=\"^git-subtree-dir: $dir/*\\$\" \\\n-\t\t--pretty=format:'START %H%n%s%n%n%b%nEND%n' \"$COMMIT\" |\n-\twhile read a b _; do\n-\t\tcase \"$a\" in\n-\t\t\tSTART) sq=\"$b\" ;;\n-\t\t\tgit-subtree-mainline:) main=\"$b\" ;;\n-\t\t\tgit-subtree-split:) sub=\"$b\" ;;\n-\t\t\tEND)\n-\t\t\t\tif [ -n \"$sub\" ]; then\n-\t\t\t\t\tif [ -n \"$main\" ]; then\n-\t\t\t\t\t\t# a rejoin commit?\n-\t\t\t\t\t\t# Pretend its sub was a squash.\n-\t\t\t\t\t\tsq=\"$sub\"\n-\t\t\t\t\tfi\n-\t\t\t\t\techo \"$sq\" \"$sub\"\n-\t\t\t\t\tbreak\n-\t\t\t\tfi\n-\t\t\t\tsq=\n-\t\t\t\tmain=\n-\t\t\t\tsub=\n-\t\t\t\t;;\n-\t\tesac\n-\tdone\n-}\n-\n-# find latest subtree update\n-latest_squash=\"$(find_latest_squash \"$DIR\")\"\n-if [ -z \"$latest_squash\" ]; then\n-    echo \"ERROR: $DIR is not a subtree\" >&2\n-    exit 2\n-fi\n-set $latest_squash\n-old=$1\n-rev=$2\n-\n-# get the tree in the current commit\n-tree_actual=$(git ls-tree -d \"$COMMIT\" \"$DIR\" | head -n 1)\n-if [ -z \"$tree_actual\" ]; then\n-    echo \"FAIL: subtree directory $DIR not found in $COMMIT\" >&2\n-    exit 1\n-fi\n-set $tree_actual\n-tree_actual_type=$2\n-tree_actual_tree=$3\n-echo \"$DIR in $COMMIT currently refers to $tree_actual_type $tree_actual_tree\"\n-if [ \"d$tree_actual_type\" != \"dtree\" ]; then\n-    echo \"FAIL: subtree directory $DIR is not a tree in $COMMIT\" >&2\n-    exit 1\n-fi\n-\n-# get the tree at the time of the last subtree update\n-tree_commit=$(git show -s --format=\"%T\" $old)\n-echo \"$DIR in $COMMIT was last updated in commit $old (tree $tree_commit)\"\n-\n-# ... and compare the actual tree with it\n-if [ \"$tree_actual_tree\" != \"$tree_commit\" ]; then\n-    git diff $tree_commit $tree_actual_tree >&2\n-    echo \"FAIL: subtree directory was touched without subtree merge\" >&2\n-    exit 1\n-fi\n-\n-# get the tree in the subtree commit referred to\n-if [ \"d$(git cat-file -t $rev 2>/dev/null)\" != dcommit ]; then\n-    echo \"subtree commit $rev unavailable: cannot compare\" >&2\n-    exit\n-fi\n-tree_subtree=$(git show -s --format=\"%T\" $rev)\n-echo \"$DIR in $COMMIT was last updated to upstream commit $rev (tree $tree_subtree)\"\n-\n-# ... and compare the actual tree with it\n-if [ \"$tree_actual_tree\" != \"$tree_subtree\" ]; then\n-    echo \"FAIL: subtree update commit differs from upstream tree!\" >&2\n-    exit 1\n-fi\n-\n-echo \"GOOD\""
      },
      {
        "sha": "187ef75fb7183eac7b919c19609f7302ddf74d18",
        "filename": "contrib/devtools/github-merge.py",
        "status": "removed",
        "additions": 0,
        "deletions": 331,
        "changes": 331,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/github-merge.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/github-merge.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.py?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,331 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2016-2017 Bitcoin Core Developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# This script will locally construct a merge commit for a pull request on a\n-# github repository, inspect it, sign it and optionally push it.\n-\n-# The following temporary branches are created/overwritten and deleted:\n-# * pull/$PULL/base (the current master we're merging onto)\n-# * pull/$PULL/head (the current state of the remote pull request)\n-# * pull/$PULL/merge (github's merge)\n-# * pull/$PULL/local-merge (our merge)\n-\n-# In case of a clean merge that is accepted by the user, the local branch with\n-# name $BRANCH is overwritten with the merged result, and optionally pushed.\n-from __future__ import division,print_function,unicode_literals\n-import os\n-from sys import stdin,stdout,stderr\n-import argparse\n-import hashlib\n-import subprocess\n-import sys\n-import json\n-import codecs\n-try:\n-    from urllib.request import Request,urlopen\n-except:\n-    from urllib2 import Request,urlopen\n-\n-# External tools (can be overridden using environment)\n-GIT = os.getenv('GIT','git')\n-BASH = os.getenv('BASH','bash')\n-\n-# OS specific configuration for terminal attributes\n-ATTR_RESET = ''\n-ATTR_PR = ''\n-COMMIT_FORMAT = '%h %s (%an)%d'\n-if os.name == 'posix': # if posix, assume we can use basic terminal escapes\n-    ATTR_RESET = '\\033[0m'\n-    ATTR_PR = '\\033[1;36m'\n-    COMMIT_FORMAT = '%C(bold blue)%h%Creset %s %C(cyan)(%an)%Creset%C(green)%d%Creset'\n-\n-def git_config_get(option, default=None):\n-    '''\n-    Get named configuration option from git repository.\n-    '''\n-    try:\n-        return subprocess.check_output([GIT,'config','--get',option]).rstrip().decode('utf-8')\n-    except subprocess.CalledProcessError:\n-        return default\n-\n-def retrieve_pr_info(repo,pull):\n-    '''\n-    Retrieve pull request information from github.\n-    Return None if no title can be found, or an error happens.\n-    '''\n-    try:\n-        req = Request(\"https://api.github.com/repos/\"+repo+\"/pulls/\"+pull)\n-        result = urlopen(req)\n-        reader = codecs.getreader('utf-8')\n-        obj = json.load(reader(result))\n-        return obj\n-    except Exception as e:\n-        print('Warning: unable to retrieve pull information from github: %s' % e)\n-        return None\n-\n-def ask_prompt(text):\n-    print(text,end=\" \",file=stderr)\n-    stderr.flush()\n-    reply = stdin.readline().rstrip()\n-    print(\"\",file=stderr)\n-    return reply\n-\n-def get_symlink_files():\n-    files = sorted(subprocess.check_output([GIT, 'ls-tree', '--full-tree', '-r', 'HEAD']).splitlines())\n-    ret = []\n-    for f in files:\n-        if (int(f.decode('utf-8').split(\" \")[0], 8) & 0o170000) == 0o120000:\n-            ret.append(f.decode('utf-8').split(\"\\t\")[1])\n-    return ret\n-\n-def tree_sha512sum(commit='HEAD'):\n-    # request metadata for entire tree, recursively\n-    files = []\n-    blob_by_name = {}\n-    for line in subprocess.check_output([GIT, 'ls-tree', '--full-tree', '-r', commit]).splitlines():\n-        name_sep = line.index(b'\\t')\n-        metadata = line[:name_sep].split() # perms, 'blob', blobid\n-        assert(metadata[1] == b'blob')\n-        name = line[name_sep+1:]\n-        files.append(name)\n-        blob_by_name[name] = metadata[2]\n-\n-    files.sort()\n-    # open connection to git-cat-file in batch mode to request data for all blobs\n-    # this is much faster than launching it per file\n-    p = subprocess.Popen([GIT, 'cat-file', '--batch'], stdout=subprocess.PIPE, stdin=subprocess.PIPE)\n-    overall = hashlib.sha512()\n-    for f in files:\n-        blob = blob_by_name[f]\n-        # request blob\n-        p.stdin.write(blob + b'\\n')\n-        p.stdin.flush()\n-        # read header: blob, \"blob\", size\n-        reply = p.stdout.readline().split()\n-        assert(reply[0] == blob and reply[1] == b'blob')\n-        size = int(reply[2])\n-        # hash the blob data\n-        intern = hashlib.sha512()\n-        ptr = 0\n-        while ptr < size:\n-            bs = min(65536, size - ptr)\n-            piece = p.stdout.read(bs)\n-            if len(piece) == bs:\n-                intern.update(piece)\n-            else:\n-                raise IOError('Premature EOF reading git cat-file output')\n-            ptr += bs\n-        dig = intern.hexdigest()\n-        assert(p.stdout.read(1) == b'\\n') # ignore LF that follows blob data\n-        # update overall hash with file hash\n-        overall.update(dig.encode(\"utf-8\"))\n-        overall.update(\"  \".encode(\"utf-8\"))\n-        overall.update(f)\n-        overall.update(\"\\n\".encode(\"utf-8\"))\n-    p.stdin.close()\n-    if p.wait():\n-        raise IOError('Non-zero return value executing git cat-file')\n-    return overall.hexdigest()\n-\n-def print_merge_details(pull, title, branch, base_branch, head_branch):\n-    print('%s#%s%s %s %sinto %s%s' % (ATTR_RESET+ATTR_PR,pull,ATTR_RESET,title,ATTR_RESET+ATTR_PR,branch,ATTR_RESET))\n-    subprocess.check_call([GIT,'log','--graph','--topo-order','--pretty=format:'+COMMIT_FORMAT,base_branch+'..'+head_branch])\n-\n-def parse_arguments():\n-    epilog = '''\n-        In addition, you can set the following git configuration variables:\n-        githubmerge.repository (mandatory),\n-        user.signingkey (mandatory),\n-        githubmerge.host (default: git@github.com),\n-        githubmerge.branch (no default),\n-        githubmerge.testcmd (default: none).\n-    '''\n-    parser = argparse.ArgumentParser(description='Utility to merge, sign and push github pull requests',\n-            epilog=epilog)\n-    parser.add_argument('pull', metavar='PULL', type=int, nargs=1,\n-        help='Pull request ID to merge')\n-    parser.add_argument('branch', metavar='BRANCH', type=str, nargs='?',\n-        default=None, help='Branch to merge against (default: githubmerge.branch setting, or base branch for pull, or \\'master\\')')\n-    return parser.parse_args()\n-\n-def main():\n-    # Extract settings from git repo\n-    repo = git_config_get('githubmerge.repository')\n-    host = git_config_get('githubmerge.host','git@github.com')\n-    opt_branch = git_config_get('githubmerge.branch',None)\n-    testcmd = git_config_get('githubmerge.testcmd')\n-    signingkey = git_config_get('user.signingkey')\n-    if repo is None:\n-        print(\"ERROR: No repository configured. Use this command to set:\", file=stderr)\n-        print(\"git config githubmerge.repository <owner>/<repo>\", file=stderr)\n-        sys.exit(1)\n-    if signingkey is None:\n-        print(\"ERROR: No GPG signing key set. Set one using:\",file=stderr)\n-        print(\"git config --global user.signingkey <key>\",file=stderr)\n-        sys.exit(1)\n-\n-    host_repo = host+\":\"+repo # shortcut for push/pull target\n-\n-    # Extract settings from command line\n-    args = parse_arguments()\n-    pull = str(args.pull[0])\n-\n-    # Receive pull information from github\n-    info = retrieve_pr_info(repo,pull)\n-    if info is None:\n-        sys.exit(1)\n-    title = info['title'].strip()\n-    body = info['body'].strip()\n-    # precedence order for destination branch argument:\n-    #   - command line argument\n-    #   - githubmerge.branch setting\n-    #   - base branch for pull (as retrieved from github)\n-    #   - 'master'\n-    branch = args.branch or opt_branch or info['base']['ref'] or 'master'\n-\n-    # Initialize source branches\n-    head_branch = 'pull/'+pull+'/head'\n-    base_branch = 'pull/'+pull+'/base'\n-    merge_branch = 'pull/'+pull+'/merge'\n-    local_merge_branch = 'pull/'+pull+'/local-merge'\n-\n-    devnull = open(os.devnull,'w')\n-    try:\n-        subprocess.check_call([GIT,'checkout','-q',branch])\n-    except subprocess.CalledProcessError:\n-        print(\"ERROR: Cannot check out branch %s.\" % (branch), file=stderr)\n-        sys.exit(3)\n-    try:\n-        subprocess.check_call([GIT,'fetch','-q',host_repo,'+refs/pull/'+pull+'/*:refs/heads/pull/'+pull+'/*',\n-                                                          '+refs/heads/'+branch+':refs/heads/'+base_branch])\n-    except subprocess.CalledProcessError:\n-        print(\"ERROR: Cannot find pull request #%s or branch %s on %s.\" % (pull,branch,host_repo), file=stderr)\n-        sys.exit(3)\n-    try:\n-        subprocess.check_call([GIT,'log','-q','-1','refs/heads/'+head_branch], stdout=devnull, stderr=stdout)\n-    except subprocess.CalledProcessError:\n-        print(\"ERROR: Cannot find head of pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n-        sys.exit(3)\n-    try:\n-        subprocess.check_call([GIT,'log','-q','-1','refs/heads/'+merge_branch], stdout=devnull, stderr=stdout)\n-    except subprocess.CalledProcessError:\n-        print(\"ERROR: Cannot find merge of pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n-        sys.exit(3)\n-    subprocess.check_call([GIT,'checkout','-q',base_branch])\n-    subprocess.call([GIT,'branch','-q','-D',local_merge_branch], stderr=devnull)\n-    subprocess.check_call([GIT,'checkout','-q','-b',local_merge_branch])\n-\n-    try:\n-        # Go up to the repository's root.\n-        toplevel = subprocess.check_output([GIT,'rev-parse','--show-toplevel']).strip()\n-        os.chdir(toplevel)\n-        # Create unsigned merge commit.\n-        if title:\n-            firstline = 'Merge #%s: %s' % (pull,title)\n-        else:\n-            firstline = 'Merge #%s' % (pull,)\n-        message = firstline + '\\n\\n'\n-        message += subprocess.check_output([GIT,'log','--no-merges','--topo-order','--pretty=format:%h %s (%an)',base_branch+'..'+head_branch]).decode('utf-8')\n-        message += '\\n\\nPull request description:\\n\\n  ' + body.replace('\\n', '\\n  ') + '\\n'\n-        try:\n-            subprocess.check_call([GIT,'merge','-q','--commit','--no-edit','--no-ff','-m',message.encode('utf-8'),head_branch])\n-        except subprocess.CalledProcessError:\n-            print(\"ERROR: Cannot be merged cleanly.\",file=stderr)\n-            subprocess.check_call([GIT,'merge','--abort'])\n-            sys.exit(4)\n-        logmsg = subprocess.check_output([GIT,'log','--pretty=format:%s','-n','1']).decode('utf-8')\n-        if logmsg.rstrip() != firstline.rstrip():\n-            print(\"ERROR: Creating merge failed (already merged?).\",file=stderr)\n-            sys.exit(4)\n-\n-        symlink_files = get_symlink_files()\n-        for f in symlink_files:\n-            print(\"ERROR: File %s was a symlink\" % f)\n-        if len(symlink_files) > 0:\n-            sys.exit(4)\n-\n-        # Put tree SHA512 into the message\n-        try:\n-            first_sha512 = tree_sha512sum()\n-            message += '\\n\\nTree-SHA512: ' + first_sha512\n-        except subprocess.CalledProcessError:\n-            print(\"ERROR: Unable to compute tree hash\")\n-            sys.exit(4)\n-        try:\n-            subprocess.check_call([GIT,'commit','--amend','-m',message.encode('utf-8')])\n-        except subprocess.CalledProcessError:\n-            print(\"ERROR: Cannot update message.\", file=stderr)\n-            sys.exit(4)\n-\n-        print_merge_details(pull, title, branch, base_branch, head_branch)\n-        print()\n-\n-        # Run test command if configured.\n-        if testcmd:\n-            if subprocess.call(testcmd,shell=True):\n-                print(\"ERROR: Running %s failed.\" % testcmd,file=stderr)\n-                sys.exit(5)\n-\n-            # Show the created merge.\n-            diff = subprocess.check_output([GIT,'diff',merge_branch+'..'+local_merge_branch])\n-            subprocess.check_call([GIT,'diff',base_branch+'..'+local_merge_branch])\n-            if diff:\n-                print(\"WARNING: merge differs from github!\",file=stderr)\n-                reply = ask_prompt(\"Type 'ignore' to continue.\")\n-                if reply.lower() == 'ignore':\n-                    print(\"Difference with github ignored.\",file=stderr)\n-                else:\n-                    sys.exit(6)\n-        else:\n-            # Verify the result manually.\n-            print(\"Dropping you on a shell so you can try building/testing the merged source.\",file=stderr)\n-            print(\"Run 'git diff HEAD~' to show the changes being merged.\",file=stderr)\n-            print(\"Type 'exit' when done.\",file=stderr)\n-            if os.path.isfile('/etc/debian_version'): # Show pull number on Debian default prompt\n-                os.putenv('debian_chroot',pull)\n-            subprocess.call([BASH,'-i'])\n-\n-        second_sha512 = tree_sha512sum()\n-        if first_sha512 != second_sha512:\n-            print(\"ERROR: Tree hash changed unexpectedly\",file=stderr)\n-            sys.exit(8)\n-\n-        # Sign the merge commit.\n-        print_merge_details(pull, title, branch, base_branch, head_branch)\n-        while True:\n-            reply = ask_prompt(\"Type 's' to sign off on the above merge, or 'x' to reject and exit.\").lower()\n-            if reply == 's':\n-                try:\n-                    subprocess.check_call([GIT,'commit','-q','--gpg-sign','--amend','--no-edit'])\n-                    break\n-                except subprocess.CalledProcessError:\n-                    print(\"Error while signing, asking again.\",file=stderr)\n-            elif reply == 'x':\n-                print(\"Not signing off on merge, exiting.\",file=stderr)\n-                sys.exit(1)\n-\n-        # Put the result in branch.\n-        subprocess.check_call([GIT,'checkout','-q',branch])\n-        subprocess.check_call([GIT,'reset','-q','--hard',local_merge_branch])\n-    finally:\n-        # Clean up temporary branches.\n-        subprocess.call([GIT,'checkout','-q',branch])\n-        subprocess.call([GIT,'branch','-q','-D',head_branch],stderr=devnull)\n-        subprocess.call([GIT,'branch','-q','-D',base_branch],stderr=devnull)\n-        subprocess.call([GIT,'branch','-q','-D',merge_branch],stderr=devnull)\n-        subprocess.call([GIT,'branch','-q','-D',local_merge_branch],stderr=devnull)\n-\n-    # Push the result.\n-    while True:\n-        reply = ask_prompt(\"Type 'push' to push the result to %s, branch %s, or 'x' to exit without pushing.\" % (host_repo,branch)).lower()\n-        if reply == 'push':\n-            subprocess.check_call([GIT,'push',host_repo,'refs/heads/'+branch])\n-            break\n-        elif reply == 'x':\n-            sys.exit(1)\n-\n-if __name__ == '__main__':\n-    main()\n-"
      },
      {
        "sha": "b6d86959c669c60919a738cd74674a40c4e89118",
        "filename": "contrib/devtools/lint-all.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/lint-all.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/lint-all.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/lint-all.sh?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,22 +0,0 @@\n-#!/bin/bash\n-#\n-# Copyright (c) 2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-# This script runs all contrib/devtools/lint-*.sh files, and fails if any exit\n-# with a non-zero status code.\n-\n-set -u\n-\n-SCRIPTDIR=$(dirname \"${BASH_SOURCE[0]}\")\n-LINTALL=$(basename \"${BASH_SOURCE[0]}\")\n-\n-for f in \"${SCRIPTDIR}\"/lint-*.sh; do\n-  if [ \"$(basename \"$f\")\" != \"$LINTALL\" ]; then\n-    if ! \"$f\"; then\n-      echo \"^---- failure generated from $f\"\n-      exit 1\n-    fi\n-  fi\n-done"
      },
      {
        "sha": "6a0dd556bbd76343941aaf8953bf855c64cde817",
        "filename": "contrib/devtools/lint-include-guards.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 29,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/lint-include-guards.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/lint-include-guards.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/lint-include-guards.sh?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,29 +0,0 @@\n-#!/bin/bash\n-#\n-# Copyright (c) 2018 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-# Check include guards.\n-\n-HEADER_ID_PREFIX=\"BITCOIN_\"\n-HEADER_ID_SUFFIX=\"_H\"\n-\n-REGEXP_EXCLUDE_FILES_WITH_PREFIX=\"src/(crypto/ctaes/|leveldb/|secp256k1/|tinyformat.h|univalue/)\"\n-\n-EXIT_CODE=0\n-for HEADER_FILE in $(git ls-files -- \"*.h\" | grep -vE \"^${REGEXP_EXCLUDE_FILES_WITH_PREFIX}\")\n-do\n-    HEADER_ID_BASE=$(cut -f2- -d/ <<< \"${HEADER_FILE}\" | sed \"s/\\.h$//g\" | tr / _ | tr \"[:lower:]\" \"[:upper:]\")\n-    HEADER_ID=\"${HEADER_ID_PREFIX}${HEADER_ID_BASE}${HEADER_ID_SUFFIX}\"\n-    if [[ $(grep -cE \"^#(ifndef|define) ${HEADER_ID}\" \"${HEADER_FILE}\") != 2 ]]; then\n-        echo \"${HEADER_FILE} seems to be missing the expected include guard:\"\n-        echo \"  #ifndef ${HEADER_ID}\"\n-        echo \"  #define ${HEADER_ID}\"\n-        echo \"  ...\"\n-        echo \"  #endif // ${HEADER_ID}\"\n-        echo\n-        EXIT_CODE=1\n-    fi\n-done\n-exit ${EXIT_CODE}"
      },
      {
        "sha": "f54be46b529da74c7a95894c1cb25152da084a5b",
        "filename": "contrib/devtools/lint-includes.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 32,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/lint-includes.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/lint-includes.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/lint-includes.sh?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,32 +0,0 @@\n-#!/bin/bash\n-#\n-# Copyright (c) 2018 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-# Check for duplicate includes.\n-\n-filter_suffix() {\n-    git ls-files | grep -E \"^src/.*\\.${1}\"'$' | grep -Ev \"/(leveldb|secp256k1|univalue)/\"\n-}\n-\n-EXIT_CODE=0\n-for HEADER_FILE in $(filter_suffix h); do\n-    DUPLICATE_INCLUDES_IN_HEADER_FILE=$(grep -E \"^#include \" < \"${HEADER_FILE}\" | sort | uniq -d)\n-    if [[ ${DUPLICATE_INCLUDES_IN_HEADER_FILE} != \"\" ]]; then\n-        echo \"Duplicate include(s) in ${HEADER_FILE}:\"\n-        echo \"${DUPLICATE_INCLUDES_IN_HEADER_FILE}\"\n-        echo\n-        EXIT_CODE=1\n-    fi\n-done\n-for CPP_FILE in $(filter_suffix cpp); do\n-    DUPLICATE_INCLUDES_IN_CPP_FILE=$(grep -E \"^#include \" < \"${CPP_FILE}\" | sort | uniq -d)\n-    if [[ ${DUPLICATE_INCLUDES_IN_CPP_FILE} != \"\" ]]; then\n-        echo \"Duplicate include(s) in ${CPP_FILE}:\"\n-        echo \"${DUPLICATE_INCLUDES_IN_CPP_FILE}\"\n-        echo\n-        EXIT_CODE=1\n-    fi\n-done\n-exit ${EXIT_CODE}"
      },
      {
        "sha": "3bb54359a87b93023520fe91b976d057b2e15667",
        "filename": "contrib/devtools/lint-logs.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 25,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/lint-logs.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/lint-logs.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/lint-logs.sh?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,25 +0,0 @@\n-#!/bin/bash\n-#\n-# Copyright (c) 2018 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-# Check that all logs are terminated with '\\n'\n-#\n-# Some logs are continued over multiple lines. They should be explicitly\n-# commented with \\* Continued *\\\n-#\n-# There are some instances of LogPrintf() in comments. Those can be\n-# ignored\n-\n-\n-UNTERMINATED_LOGS=$(git grep \"LogPrintf(\" -- \"*.cpp\" | \\\n-    grep -v '\\\\n\"' | \\\n-    grep -v \"/\\* Continued \\*/\" | \\\n-    grep -v \"LogPrintf()\")\n-if [[ ${UNTERMINATED_LOGS} != \"\" ]]; then\n-    echo \"All calls to LogPrintf() should be terminated with \\\\n\"\n-    echo\n-    echo \"${UNTERMINATED_LOGS}\"\n-    exit 1\n-fi"
      },
      {
        "sha": "f5c5971c0379fde7bc9bcaa858e74bab23d003bd",
        "filename": "contrib/devtools/lint-python-shebang.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/lint-python-shebang.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/lint-python-shebang.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/lint-python-shebang.sh?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,11 +0,0 @@\n-#!/bin/bash\n-# Shebang must use python3 (not python or python2)\n-EXIT_CODE=0\n-for PYTHON_FILE in $(git ls-files -- \"*.py\"); do\n-    if [[ $(head -c 2 \"${PYTHON_FILE}\") == \"#!\" &&\n-          $(head -n 1 \"${PYTHON_FILE}\") != \"#!/usr/bin/env python3\" ]]; then\n-        echo \"Missing shebang \\\"#!/usr/bin/env python3\\\" in ${PYTHON_FILE} (do not use python or python2)\"\n-        EXIT_CODE=1\n-    fi\n-done\n-exit ${EXIT_CODE}"
      },
      {
        "sha": "239337000dc8c6d48f2c2cb0b1eecc7ac985600e",
        "filename": "contrib/devtools/lint-python.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 74,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/lint-python.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/lint-python.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/lint-python.sh?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,74 +0,0 @@\n-#!/bin/sh\n-#\n-# Copyright (c) 2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-# Check for specified flake8 warnings in python files.\n-\n-# E112 expected an indented block\n-# E113 unexpected indentation\n-# E115 expected an indented block (comment)\n-# E116 unexpected indentation (comment)\n-# E125 continuation line with same indent as next logical line\n-# E131 continuation line unaligned for hanging indent\n-# E133 closing bracket is missing indentation\n-# E223 tab before operator\n-# E224 tab after operator\n-# E242 tab after ','\n-# E266 too many leading '#' for block comment\n-# E271 multiple spaces after keyword\n-# E272 multiple spaces before keyword\n-# E273 tab after keyword\n-# E274 tab before keyword\n-# E275 missing whitespace after keyword\n-# E304 blank lines found after function decorator\n-# E306 expected 1 blank line before a nested definition\n-# E401 multiple imports on one line\n-# E402 module level import not at top of file\n-# E502 the backslash is redundant between brackets\n-# E701 multiple statements on one line (colon)\n-# E702 multiple statements on one line (semicolon)\n-# E703 statement ends with a semicolon\n-# E714 test for object identity should be \"is not\"\n-# E721 do not compare types, use \"isinstance()\"\n-# E741 do not use variables named \"l\", \"O\", or \"I\"\n-# E742 do not define classes named \"l\", \"O\", or \"I\"\n-# E743 do not define functions named \"l\", \"O\", or \"I\"\n-# E901 SyntaxError: invalid syntax\n-# E902 TokenError: EOF in multi-line string\n-# F401 module imported but unused\n-# F402 import module from line N shadowed by loop variable\n-# F404 future import(s) name after other statements\n-# F406 \"from module import *\" only allowed at module level\n-# F407 an undefined __future__ feature name was imported\n-# F601 dictionary key name repeated with different values\n-# F602 dictionary key variable name repeated with different values\n-# F621 too many expressions in an assignment with star-unpacking\n-# F622 two or more starred expressions in an assignment (a, *b, *c = d)\n-# F631 assertion test is a tuple, which are always True\n-# F701 a break statement outside of a while or for loop\n-# F702 a continue statement outside of a while or for loop\n-# F703 a continue statement in a finally block in a loop\n-# F704 a yield or yield from statement outside of a function\n-# F705 a return statement with arguments inside a generator\n-# F706 a return statement outside of a function/method\n-# F707 an except: block as not the last exception handler\n-# F811 redefinition of unused name from line N\n-# F812 list comprehension redefines 'foo' from line N\n-# F821 undefined name 'Foo'\n-# F822 undefined name name in __all__\n-# F823 local variable name \u2026 referenced before assignment\n-# F831 duplicate argument name in function definition\n-# F841 local variable 'foo' is assigned to but never used\n-# W292 no newline at end of file\n-# W293 blank line contains whitespace\n-# W504 line break after binary operator\n-# W601 .has_key() is deprecated, use \"in\"\n-# W602 deprecated form of raising exception\n-# W603 \"<>\" is deprecated, use \"!=\"\n-# W604 backticks are deprecated, use \"repr()\"\n-# W605 invalid escape sequence \"x\"\n-# W606 'async' and 'await' are reserved keywords starting with Python 3.7\n-\n-flake8 --ignore=B,C,E,F,I,N,W --select=E112,E113,E115,E116,E125,E131,E133,E223,E224,E242,E266,E271,E272,E273,E274,E275,E304,E306,E401,E402,E502,E701,E702,E703,E714,E721,E741,E742,E743,F401,E901,E902,F402,F404,F406,F407,F601,F602,F621,F622,F631,F701,F702,F703,F704,F705,F706,F707,F811,F812,F821,F822,F823,F831,F841,W292,W293,W504,W601,W602,W603,W604,W605,W606 ."
      },
      {
        "sha": "5f5fa9a925db4a144498168fef46d292002d6146",
        "filename": "contrib/devtools/lint-shell.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/lint-shell.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/lint-shell.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/lint-shell.sh?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,27 +0,0 @@\n-#!/bin/bash\n-#\n-# Copyright (c) 2018 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-# Check for shellcheck warnings in shell scripts.\n-\n-# Disabled warnings:\n-# SC2001: See if you can use ${variable//search/replace} instead.\n-# SC2004: $/${} is unnecessary on arithmetic variables.\n-# SC2005: Useless echo? Instead of 'echo $(cmd)', just use 'cmd'.\n-# SC2006: Use $(..) instead of legacy `..`.\n-# SC2016: Expressions don't expand in single quotes, use double quotes for that.\n-# SC2028: echo won't expand escape sequences. Consider printf.\n-# SC2046: Quote this to prevent word splitting.\n-# SC2048: Use \"$@\" (with quotes) to prevent whitespace problems.\n-# SC2066: Since you double quoted this, it will not word split, and the loop will only run once.\n-# SC2086: Double quote to prevent globbing and word splitting.\n-# SC2116: Useless echo? Instead of 'cmd $(echo foo)', just use 'cmd foo'.\n-# SC2148: Tips depend on target shell and yours is unknown. Add a shebang.\n-# SC2162: read without -r will mangle backslashes.\n-# SC2166: Prefer [ p ] && [ q ] as [ p -a q ] is not well defined.\n-# SC2166: Prefer [ p ] || [ q ] as [ p -o q ] is not well defined.\n-# SC2181: Check exit code directly with e.g. 'if mycmd;', not indirectly with $?.\n-shellcheck -e SC2001,SC2004,SC2005,SC2006,SC2016,SC2028,SC2046,SC2048,SC2066,SC2086,SC2116,SC2148,SC2162,SC2166,SC2181 \\\n-    $(git ls-files -- \"*.sh\" | grep -vE 'src/(secp256k1|univalue)/')"
      },
      {
        "sha": "ffc0660551e85660d04dc69d482a5c83aa7d5183",
        "filename": "contrib/devtools/lint-tests.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 34,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/lint-tests.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/lint-tests.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/lint-tests.sh?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,34 +0,0 @@\n-#!/bin/bash\n-#\n-# Copyright (c) 2018 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-# Check the test suite naming conventions\n-\n-EXIT_CODE=0\n-\n-NAMING_INCONSISTENCIES=$(git grep -E '^BOOST_FIXTURE_TEST_SUITE\\(' -- \\\n-    \"src/test/**.cpp\" \"src/wallet/test/**.cpp\" | \\\n-    grep -vE '/(.*?)\\.cpp:BOOST_FIXTURE_TEST_SUITE\\(\\1, .*\\)$')\n-if [[ ${NAMING_INCONSISTENCIES} != \"\" ]]; then\n-    echo \"The test suite in file src/test/foo_tests.cpp should be named\"\n-    echo \"\\\"foo_tests\\\". Please make sure the following test suites follow\"\n-    echo \"that convention:\"\n-    echo\n-    echo \"${NAMING_INCONSISTENCIES}\"\n-    EXIT_CODE=1\n-fi\n-\n-TEST_SUITE_NAME_COLLISSIONS=$(git grep -E '^BOOST_FIXTURE_TEST_SUITE\\(' -- \\\n-    \"src/test/**.cpp\" \"src/wallet/test/**.cpp\" | cut -f2 -d'(' | cut -f1 -d, | \\\n-    sort | uniq -d)\n-if [[ ${TEST_SUITE_NAME_COLLISSIONS} != \"\" ]]; then\n-    echo \"Test suite names must be unique. The following test suite names\"\n-    echo \"appear to be used more than once:\"\n-    echo\n-    echo \"${TEST_SUITE_NAME_COLLISSIONS}\"\n-    EXIT_CODE=1\n-fi\n-\n-exit ${EXIT_CODE}"
      },
      {
        "sha": "c5d43043d5d24b11ef7c6e5a55d7ee2afeabe93c",
        "filename": "contrib/devtools/lint-whitespace.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 112,
        "changes": 112,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/lint-whitespace.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/lint-whitespace.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/lint-whitespace.sh?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,112 +0,0 @@\n-#!/bin/bash\n-#\n-# Copyright (c) 2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-# Check for new lines in diff that introduce trailing whitespace.\n-\n-# We can't run this check unless we know the commit range for the PR.\n-\n-while getopts \"?\" opt; do\n-  case $opt in\n-    ?)\n-      echo \"Usage: .lint-whitespace.sh [N]\"\n-      echo \"       TRAVIS_COMMIT_RANGE='<commit range>' .lint-whitespace.sh\"\n-      echo \"       .lint-whitespace.sh -?\"\n-      echo \"Checks unstaged changes, the previous N commits, or a commit range.\"\n-      echo \"TRAVIS_COMMIT_RANGE='47ba2c3...ee50c9e' .lint-whitespace.sh\"\n-      exit 0\n-    ;;\n-  esac\n-done\n-\n-if [ -z \"${TRAVIS_COMMIT_RANGE}\" ]; then\n-  if [ \"$1\" ]; then\n-    TRAVIS_COMMIT_RANGE=\"HEAD~$1...HEAD\"\n-  else\n-    TRAVIS_COMMIT_RANGE=\"HEAD\"\n-  fi\n-fi\n-\n-showdiff() {\n-  if ! git diff -U0 \"${TRAVIS_COMMIT_RANGE}\" -- \".\" \":(exclude)depends/patches/\" \":(exclude)src/leveldb/\" \":(exclude)src/secp256k1/\" \":(exclude)src/univalue/\" \":(exclude)doc/release-notes/\"; then\n-    echo \"Failed to get a diff\"\n-    exit 1\n-  fi\n-}\n-\n-showcodediff() {\n-  if ! git diff -U0 \"${TRAVIS_COMMIT_RANGE}\" -- *.cpp *.h *.md *.py *.sh \":(exclude)src/leveldb/\" \":(exclude)src/secp256k1/\" \":(exclude)src/univalue/\" \":(exclude)doc/release-notes/\"; then\n-    echo \"Failed to get a diff\"\n-    exit 1\n-  fi\n-}\n-\n-RET=0\n-\n-# Check if trailing whitespace was found in the diff.\n-if showdiff | grep -E -q '^\\+.*\\s+$'; then\n-  echo \"This diff appears to have added new lines with trailing whitespace.\"\n-  echo \"The following changes were suspected:\"\n-  FILENAME=\"\"\n-  SEEN=0\n-  SEENLN=0\n-  while read -r line; do\n-    if [[ \"$line\" =~ ^diff ]]; then\n-      FILENAME=\"$line\"\n-      SEEN=0\n-    elif [[ \"$line\" =~ ^@@ ]]; then\n-      LINENUMBER=\"$line\"\n-      SEENLN=0\n-    else\n-      if [ \"$SEEN\" -eq 0 ]; then\n-        # The first time a file is seen with trailing whitespace, we print the\n-        # filename (preceded by a newline).\n-        echo\n-        echo \"$FILENAME\"\n-        SEEN=1\n-      fi\n-      if [ \"$SEENLN\" -eq 0 ]; then\n-        echo \"$LINENUMBER\"\n-        SEENLN=1\n-      fi\n-      echo \"$line\"\n-    fi\n-  done < <(showdiff | grep -E '^(diff --git |@@|\\+.*\\s+$)')\n-  RET=1\n-fi\n-\n-# Check if tab characters were found in the diff.\n-if showcodediff | perl -nle '$MATCH++ if m{^\\+.*\\t}; END{exit 1 unless $MATCH>0}' > /dev/null; then\n-  echo \"This diff appears to have added new lines with tab characters instead of spaces.\"\n-  echo \"The following changes were suspected:\"\n-  FILENAME=\"\"\n-  SEEN=0\n-  SEENLN=0\n-  while read -r line; do\n-    if [[ \"$line\" =~ ^diff ]]; then\n-      FILENAME=\"$line\"\n-      SEEN=0\n-    elif [[ \"$line\" =~ ^@@ ]]; then\n-      LINENUMBER=\"$line\"\n-      SEENLN=0\n-    else\n-      if [ \"$SEEN\" -eq 0 ]; then\n-        # The first time a file is seen with a tab character, we print the\n-        # filename (preceded by a newline).\n-        echo\n-        echo \"$FILENAME\"\n-        SEEN=1\n-      fi\n-      if [ \"$SEENLN\" -eq 0 ]; then\n-        echo \"$LINENUMBER\"\n-        SEENLN=1\n-      fi\n-      echo \"$line\"\n-    fi\n-  done < <(showcodediff | perl -nle 'print if m{^(diff --git |@@|\\+.*\\t)}')\n-  RET=1\n-fi\n-\n-exit $RET"
      },
      {
        "sha": "a75731ef76e60863562a42dfb56c9a506af9355a",
        "filename": "contrib/devtools/optimize-pngs.py",
        "status": "removed",
        "additions": 0,
        "deletions": 76,
        "changes": 76,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/optimize-pngs.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/optimize-pngs.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/optimize-pngs.py?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,76 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2014-2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Run this script every time you change one of the png files. Using pngcrush, it will optimize the png files, remove various color profiles, remove ancillary chunks (alla) and text chunks (text).\n-#pngcrush -brute -ow -rem gAMA -rem cHRM -rem iCCP -rem sRGB -rem alla -rem text\n-'''\n-import os\n-import sys\n-import subprocess\n-import hashlib\n-from PIL import Image  # pip3 install Pillow\n-\n-def file_hash(filename):\n-    '''Return hash of raw file contents'''\n-    with open(filename, 'rb') as f:\n-        return hashlib.sha256(f.read()).hexdigest()\n-\n-def content_hash(filename):\n-    '''Return hash of RGBA contents of image'''\n-    i = Image.open(filename)\n-    i = i.convert('RGBA')\n-    data = i.tobytes()\n-    return hashlib.sha256(data).hexdigest()\n-\n-pngcrush = 'pngcrush'\n-git = 'git'\n-folders = [\"src/qt/res/movies\", \"src/qt/res/icons\", \"share/pixmaps\"]\n-basePath = subprocess.check_output([git, 'rev-parse', '--show-toplevel'], universal_newlines=True).rstrip('\\n')\n-totalSaveBytes = 0\n-noHashChange = True\n-\n-outputArray = []\n-for folder in folders:\n-    absFolder=os.path.join(basePath, folder)\n-    for file in os.listdir(absFolder):\n-        extension = os.path.splitext(file)[1]\n-        if extension.lower() == '.png':\n-            print(\"optimizing {}...\".format(file), end =' ')\n-            file_path = os.path.join(absFolder, file)\n-            fileMetaMap = {'file' : file, 'osize': os.path.getsize(file_path), 'sha256Old' : file_hash(file_path)}\n-            fileMetaMap['contentHashPre'] = content_hash(file_path)\n-\n-            try:\n-                subprocess.call([pngcrush, \"-brute\", \"-ow\", \"-rem\", \"gAMA\", \"-rem\", \"cHRM\", \"-rem\", \"iCCP\", \"-rem\", \"sRGB\", \"-rem\", \"alla\", \"-rem\", \"text\", file_path],\n-                                stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)\n-            except:\n-                print(\"pngcrush is not installed, aborting...\")\n-                sys.exit(0)\n-\n-            #verify\n-            if \"Not a PNG file\" in subprocess.check_output([pngcrush, \"-n\", \"-v\", file_path], stderr=subprocess.STDOUT, universal_newlines=True):\n-                print(\"PNG file \"+file+\" is corrupted after crushing, check out pngcursh version\")\n-                sys.exit(1)\n-\n-            fileMetaMap['sha256New'] = file_hash(file_path)\n-            fileMetaMap['contentHashPost'] = content_hash(file_path)\n-\n-            if fileMetaMap['contentHashPre'] != fileMetaMap['contentHashPost']:\n-                print(\"Image contents of PNG file {} before and after crushing don't match\".format(file))\n-                sys.exit(1)\n-\n-            fileMetaMap['psize'] = os.path.getsize(file_path)\n-            outputArray.append(fileMetaMap)\n-            print(\"done\")\n-\n-print(\"summary:\\n+++++++++++++++++\")\n-for fileDict in outputArray:\n-    oldHash = fileDict['sha256Old']\n-    newHash = fileDict['sha256New']\n-    totalSaveBytes += fileDict['osize'] - fileDict['psize']\n-    noHashChange = noHashChange and (oldHash == newHash)\n-    print(fileDict['file']+\"\\n  size diff from: \"+str(fileDict['osize'])+\" to: \"+str(fileDict['psize'])+\"\\n  old sha256: \"+oldHash+\"\\n  new sha256: \"+newHash+\"\\n\")\n-\n-print(\"completed. Checksum stable: \"+str(noHashChange)+\". Total reduction: \"+str(totalSaveBytes)+\" bytes\")"
      },
      {
        "sha": "0f2099953f8ad47cb95eb8c066ae4d169ed82bd6",
        "filename": "contrib/devtools/security-check.py",
        "status": "removed",
        "additions": 0,
        "deletions": 215,
        "changes": 215,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/security-check.py?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,215 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2015-2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Perform basic ELF security checks on a series of executables.\n-Exit status will be 0 if successful, and the program will be silent.\n-Otherwise the exit status will be 1 and it will log which executables failed which checks.\n-Needs `readelf` (for ELF) and `objdump` (for PE).\n-'''\n-import subprocess\n-import sys\n-import os\n-\n-READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n-OBJDUMP_CMD = os.getenv('OBJDUMP', '/usr/bin/objdump')\n-NONFATAL = {'HIGH_ENTROPY_VA'} # checks which are non-fatal for now but only generate a warning\n-\n-def check_ELF_PIE(executable):\n-    '''\n-    Check for position independent executable (PIE), allowing for address space randomization.\n-    '''\n-    p = subprocess.Popen([READELF_CMD, '-h', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Error opening file')\n-\n-    ok = False\n-    for line in stdout.splitlines():\n-        line = line.split()\n-        if len(line)>=2 and line[0] == 'Type:' and line[1] == 'DYN':\n-            ok = True\n-    return ok\n-\n-def get_ELF_program_headers(executable):\n-    '''Return type and flags for ELF program headers'''\n-    p = subprocess.Popen([READELF_CMD, '-l', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Error opening file')\n-    in_headers = False\n-    count = 0\n-    headers = []\n-    for line in stdout.splitlines():\n-        if line.startswith('Program Headers:'):\n-            in_headers = True\n-        if line == '':\n-            in_headers = False\n-        if in_headers:\n-            if count == 1: # header line\n-                ofs_typ = line.find('Type')\n-                ofs_offset = line.find('Offset')\n-                ofs_flags = line.find('Flg')\n-                ofs_align = line.find('Align')\n-                if ofs_typ == -1 or ofs_offset == -1 or ofs_flags == -1 or ofs_align  == -1:\n-                    raise ValueError('Cannot parse elfread -lW output')\n-            elif count > 1:\n-                typ = line[ofs_typ:ofs_offset].rstrip()\n-                flags = line[ofs_flags:ofs_align].rstrip()\n-                headers.append((typ, flags))\n-            count += 1\n-    return headers\n-\n-def check_ELF_NX(executable):\n-    '''\n-    Check that no sections are writable and executable (including the stack)\n-    '''\n-    have_wx = False\n-    have_gnu_stack = False\n-    for (typ, flags) in get_ELF_program_headers(executable):\n-        if typ == 'GNU_STACK':\n-            have_gnu_stack = True\n-        if 'W' in flags and 'E' in flags: # section is both writable and executable\n-            have_wx = True\n-    return have_gnu_stack and not have_wx\n-\n-def check_ELF_RELRO(executable):\n-    '''\n-    Check for read-only relocations.\n-    GNU_RELRO program header must exist\n-    Dynamic section must have BIND_NOW flag\n-    '''\n-    have_gnu_relro = False\n-    for (typ, flags) in get_ELF_program_headers(executable):\n-        # Note: not checking flags == 'R': here as linkers set the permission differently\n-        # This does not affect security: the permission flags of the GNU_RELRO program header are ignored, the PT_LOAD header determines the effective permissions.\n-        # However, the dynamic linker need to write to this area so these are RW.\n-        # Glibc itself takes care of mprotecting this area R after relocations are finished.\n-        # See also http://permalink.gmane.org/gmane.comp.gnu.binutils/71347\n-        if typ == 'GNU_RELRO':\n-            have_gnu_relro = True\n-\n-    have_bindnow = False\n-    p = subprocess.Popen([READELF_CMD, '-d', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Error opening file')\n-    for line in stdout.splitlines():\n-        tokens = line.split()\n-        if len(tokens)>1 and tokens[1] == '(BIND_NOW)' or (len(tokens)>2 and tokens[1] == '(FLAGS)' and 'BIND_NOW' in tokens[2]):\n-            have_bindnow = True\n-    return have_gnu_relro and have_bindnow\n-\n-def check_ELF_Canary(executable):\n-    '''\n-    Check for use of stack canary\n-    '''\n-    p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Error opening file')\n-    ok = False\n-    for line in stdout.splitlines():\n-        if '__stack_chk_fail' in line:\n-            ok = True\n-    return ok\n-\n-def get_PE_dll_characteristics(executable):\n-    '''\n-    Get PE DllCharacteristics bits.\n-    Returns a tuple (arch,bits) where arch is 'i386:x86-64' or 'i386'\n-    and bits is the DllCharacteristics value.\n-    '''\n-    p = subprocess.Popen([OBJDUMP_CMD, '-x',  executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Error opening file')\n-    arch = ''\n-    bits = 0\n-    for line in stdout.splitlines():\n-        tokens = line.split()\n-        if len(tokens)>=2 and tokens[0] == 'architecture:':\n-            arch = tokens[1].rstrip(',')\n-        if len(tokens)>=2 and tokens[0] == 'DllCharacteristics':\n-            bits = int(tokens[1],16)\n-    return (arch,bits)\n-\n-IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA = 0x0020\n-IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE    = 0x0040\n-IMAGE_DLL_CHARACTERISTICS_NX_COMPAT       = 0x0100\n-\n-def check_PE_DYNAMIC_BASE(executable):\n-    '''PIE: DllCharacteristics bit 0x40 signifies dynamicbase (ASLR)'''\n-    (arch,bits) = get_PE_dll_characteristics(executable)\n-    reqbits = IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE\n-    return (bits & reqbits) == reqbits\n-\n-# On 64 bit, must support high-entropy 64-bit address space layout randomization in addition to DYNAMIC_BASE\n-# to have secure ASLR.\n-def check_PE_HIGH_ENTROPY_VA(executable):\n-    '''PIE: DllCharacteristics bit 0x20 signifies high-entropy ASLR'''\n-    (arch,bits) = get_PE_dll_characteristics(executable)\n-    if arch == 'i386:x86-64': \n-        reqbits = IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA\n-    else: # Unnecessary on 32-bit\n-        assert(arch == 'i386')\n-        reqbits = 0\n-    return (bits & reqbits) == reqbits\n-\n-def check_PE_NX(executable):\n-    '''NX: DllCharacteristics bit 0x100 signifies nxcompat (DEP)'''\n-    (arch,bits) = get_PE_dll_characteristics(executable)\n-    return (bits & IMAGE_DLL_CHARACTERISTICS_NX_COMPAT) == IMAGE_DLL_CHARACTERISTICS_NX_COMPAT\n-\n-CHECKS = {\n-'ELF': [\n-    ('PIE', check_ELF_PIE),\n-    ('NX', check_ELF_NX),\n-    ('RELRO', check_ELF_RELRO),\n-    ('Canary', check_ELF_Canary)\n-],\n-'PE': [\n-    ('DYNAMIC_BASE', check_PE_DYNAMIC_BASE),\n-    ('HIGH_ENTROPY_VA', check_PE_HIGH_ENTROPY_VA),\n-    ('NX', check_PE_NX)\n-]\n-}\n-\n-def identify_executable(executable):\n-    with open(filename, 'rb') as f:\n-        magic = f.read(4)\n-    if magic.startswith(b'MZ'):\n-        return 'PE'\n-    elif magic.startswith(b'\\x7fELF'):\n-        return 'ELF'\n-    return None\n-\n-if __name__ == '__main__':\n-    retval = 0\n-    for filename in sys.argv[1:]:\n-        try:\n-            etype = identify_executable(filename)\n-            if etype is None:\n-                print('%s: unknown format' % filename)\n-                retval = 1\n-                continue\n-\n-            failed = []\n-            warning = []\n-            for (name, func) in CHECKS[etype]:\n-                if not func(filename):\n-                    if name in NONFATAL:\n-                        warning.append(name)\n-                    else:\n-                        failed.append(name)\n-            if failed:\n-                print('%s: failed %s' % (filename, ' '.join(failed)))\n-                retval = 1\n-            if warning:\n-                print('%s: warning %s' % (filename, ' '.join(warning)))\n-        except IOError:\n-            print('%s: cannot open' % filename)\n-            retval = 1\n-    sys.exit(retval)\n-"
      },
      {
        "sha": "deda49cc541043d0a05aee05038c69ee1dee51b3",
        "filename": "contrib/devtools/split-debug.sh.in",
        "status": "removed",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/split-debug.sh.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/split-debug.sh.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/split-debug.sh.in?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,10 +0,0 @@\n-#!/bin/sh\n-\n-if [ $# -ne 3 ];\n-    then echo \"usage: $0 <input> <stripped-binary> <debug-binary>\"\n-fi\n-\n-@OBJCOPY@ --enable-deterministic-archives -p --only-keep-debug $1 $3\n-@OBJCOPY@ --enable-deterministic-archives -p --strip-debug $1 $2\n-@STRIP@ --enable-deterministic-archives -p -s $2\n-@OBJCOPY@ --enable-deterministic-archives -p --add-gnu-debuglink=$3 $2"
      },
      {
        "sha": "3a67319eaa81783ad3afdd65650e899b39a5781c",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "removed",
        "additions": 0,
        "deletions": 163,
        "changes": 163,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,163 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2014 Wladimir J. van der Laan\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-A script to check that the (Linux) executables produced by gitian only contain\n-allowed gcc, glibc and libstdc++ version symbols.  This makes sure they are\n-still compatible with the minimum supported Linux distribution versions.\n-\n-Example usage:\n-\n-    find ../gitian-builder/build -type f -executable | xargs python contrib/devtools/symbol-check.py\n-'''\n-import subprocess\n-import re\n-import sys\n-import os\n-\n-# Debian 6.0.9 (Squeeze) has:\n-#\n-# - g++ version 4.4.5 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=g%2B%2B)\n-# - libc version 2.11.3 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=libc6)\n-# - libstdc++ version 4.4.5 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=libstdc%2B%2B6)\n-#\n-# Ubuntu 10.04.4 (Lucid Lynx) has:\n-#\n-# - g++ version 4.4.3 (http://packages.ubuntu.com/search?keywords=g%2B%2B&searchon=names&suite=lucid&section=all)\n-# - libc version 2.11.1 (http://packages.ubuntu.com/search?keywords=libc6&searchon=names&suite=lucid&section=all)\n-# - libstdc++ version 4.4.3 (http://packages.ubuntu.com/search?suite=lucid&section=all&arch=any&keywords=libstdc%2B%2B&searchon=names)\n-#\n-# Taking the minimum of these as our target.\n-#\n-# According to GNU ABI document (http://gcc.gnu.org/onlinedocs/libstdc++/manual/abi.html) this corresponds to:\n-#   GCC 4.4.0: GCC_4.4.0\n-#   GCC 4.4.2: GLIBCXX_3.4.13, CXXABI_1.3.3\n-#   (glibc)    GLIBC_2_11\n-#\n-MAX_VERSIONS = {\n-'GCC':     (4,4,0),\n-'CXXABI':  (1,3,3),\n-'GLIBCXX': (3,4,13),\n-'GLIBC':   (2,11)\n-}\n-# See here for a description of _IO_stdin_used:\n-# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=634261#109\n-\n-# Ignore symbols that are exported as part of every executable\n-IGNORE_EXPORTS = {\n-'_edata', '_end', '_init', '__bss_start', '_fini', '_IO_stdin_used'\n-}\n-READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n-CPPFILT_CMD = os.getenv('CPPFILT', '/usr/bin/c++filt')\n-# Allowed NEEDED libraries\n-ALLOWED_LIBRARIES = {\n-# bitcoind and bitcoin-qt\n-'libgcc_s.so.1', # GCC base support\n-'libc.so.6', # C library\n-'libpthread.so.0', # threading\n-'libanl.so.1', # DNS resolve\n-'libm.so.6', # math library\n-'librt.so.1', # real-time (clock)\n-'ld-linux-x86-64.so.2', # 64-bit dynamic linker\n-'ld-linux.so.2', # 32-bit dynamic linker\n-# bitcoin-qt only\n-'libX11-xcb.so.1', # part of X11\n-'libX11.so.6', # part of X11\n-'libxcb.so.1', # part of X11\n-'libfontconfig.so.1', # font support\n-'libfreetype.so.6', # font parsing\n-'libdl.so.2' # programming interface to dynamic linker\n-}\n-\n-class CPPFilt(object):\n-    '''\n-    Demangle C++ symbol names.\n-\n-    Use a pipe to the 'c++filt' command.\n-    '''\n-    def __init__(self):\n-        self.proc = subprocess.Popen(CPPFILT_CMD, stdin=subprocess.PIPE, stdout=subprocess.PIPE, universal_newlines=True)\n-\n-    def __call__(self, mangled):\n-        self.proc.stdin.write(mangled + '\\n')\n-        self.proc.stdin.flush()\n-        return self.proc.stdout.readline().rstrip()\n-\n-    def close(self):\n-        self.proc.stdin.close()\n-        self.proc.stdout.close()\n-        self.proc.wait()\n-\n-def read_symbols(executable, imports=True):\n-    '''\n-    Parse an ELF executable and return a list of (symbol,version) tuples\n-    for dynamic, imported symbols.\n-    '''\n-    p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Could not read symbols for %s: %s' % (executable, stderr.strip()))\n-    syms = []\n-    for line in stdout.splitlines():\n-        line = line.split()\n-        if len(line)>7 and re.match('[0-9]+:$', line[0]):\n-            (sym, _, version) = line[7].partition('@')\n-            is_import = line[6] == 'UND'\n-            if version.startswith('@'):\n-                version = version[1:]\n-            if is_import == imports:\n-                syms.append((sym, version))\n-    return syms\n-\n-def check_version(max_versions, version):\n-    if '_' in version:\n-        (lib, _, ver) = version.rpartition('_')\n-    else:\n-        lib = version\n-        ver = '0'\n-    ver = tuple([int(x) for x in ver.split('.')])\n-    if not lib in max_versions:\n-        return False\n-    return ver <= max_versions[lib]\n-\n-def read_libraries(filename):\n-    p = subprocess.Popen([READELF_CMD, '-d', '-W', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Error opening file')\n-    libraries = []\n-    for line in stdout.splitlines():\n-        tokens = line.split()\n-        if len(tokens)>2 and tokens[1] == '(NEEDED)':\n-            match = re.match('^Shared library: \\[(.*)\\]$', ' '.join(tokens[2:]))\n-            if match:\n-                libraries.append(match.group(1))\n-            else:\n-                raise ValueError('Unparseable (NEEDED) specification')\n-    return libraries\n-\n-if __name__ == '__main__':\n-    cppfilt = CPPFilt()\n-    retval = 0\n-    for filename in sys.argv[1:]:\n-        # Check imported symbols\n-        for sym,version in read_symbols(filename, True):\n-            if version and not check_version(MAX_VERSIONS, version):\n-                print('%s: symbol %s from unsupported version %s' % (filename, cppfilt(sym), version))\n-                retval = 1\n-        # Check exported symbols\n-        for sym,version in read_symbols(filename, False):\n-            if sym in IGNORE_EXPORTS:\n-                continue\n-            print('%s: export of symbol %s not allowed' % (filename, cppfilt(sym)))\n-            retval = 1\n-        # Check dependency libraries\n-        for library_name in read_libraries(filename):\n-            if library_name not in ALLOWED_LIBRARIES:\n-                print('%s: NEEDED library %s is not allowed' % (filename, library_name))\n-                retval = 1\n-\n-    sys.exit(retval)\n-\n-"
      },
      {
        "sha": "ee87c8bab479cb8c77249a1a58e498f97945a313",
        "filename": "contrib/devtools/test-security-check.py",
        "status": "removed",
        "additions": 0,
        "deletions": 61,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/test-security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/test-security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test-security-check.py?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,61 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2015-2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Test script for security-check.py\n-'''\n-import subprocess\n-import unittest\n-\n-def write_testcode(filename):\n-    with open(filename, 'w') as f:\n-        f.write('''\n-    #include <stdio.h>\n-    int main()\n-    {\n-        printf(\"the quick brown fox jumps over the lazy god\\\\n\");\n-        return 0;\n-    }\n-    ''')\n-\n-def call_security_check(cc, source, executable, options):\n-    subprocess.check_call([cc,source,'-o',executable] + options)\n-    p = subprocess.Popen(['./security-check.py',executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n-    (stdout, stderr) = p.communicate()\n-    return (p.returncode, stdout.rstrip())\n-\n-class TestSecurityChecks(unittest.TestCase):\n-    def test_ELF(self):\n-        source = 'test1.c'\n-        executable = 'test1'\n-        cc = 'gcc'\n-        write_testcode(source)\n-\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-zexecstack','-fno-stack-protector','-Wl,-znorelro']), \n-                (1, executable+': failed PIE NX RELRO Canary'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fno-stack-protector','-Wl,-znorelro']), \n-                (1, executable+': failed PIE RELRO Canary'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro']), \n-                (1, executable+': failed PIE RELRO'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro','-pie','-fPIE']), \n-                (1, executable+': failed RELRO'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-zrelro','-Wl,-z,now','-pie','-fPIE']), \n-                (0, ''))\n-\n-    def test_PE(self):\n-        source = 'test1.c'\n-        executable = 'test1.exe'\n-        cc = 'i686-w64-mingw32-gcc'\n-        write_testcode(source)\n-\n-        self.assertEqual(call_security_check(cc, source, executable, []), \n-                (1, executable+': failed PIE NX'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat']), \n-                (1, executable+': failed PIE'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase']), \n-                (0, ''))\n-\n-if __name__ == '__main__':\n-    unittest.main()\n-"
      },
      {
        "sha": "b36e6968bf0f64d424992ff1589f9e44fb3ce671",
        "filename": "contrib/devtools/update-translations.py",
        "status": "removed",
        "additions": 0,
        "deletions": 207,
        "changes": 207,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/update-translations.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/devtools/update-translations.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/update-translations.py?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,207 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2014 Wladimir J. van der Laan\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Run this script from the root of the repository to update all translations from\n-transifex.\n-It will do the following automatically:\n-\n-- fetch all translations using the tx tool\n-- post-process them into valid and committable format\n-  - remove invalid control characters\n-  - remove location tags (makes diffs less noisy)\n-\n-TODO:\n-- auto-add new translations to the build system according to the translation process\n-'''\n-import subprocess\n-import re\n-import sys\n-import os\n-import io\n-import xml.etree.ElementTree as ET\n-\n-# Name of transifex tool\n-TX = 'tx'\n-# Name of source language file\n-SOURCE_LANG = 'bitcoin_en.ts'\n-# Directory with locale files\n-LOCALE_DIR = 'src/qt/locale'\n-# Minimum number of messages for translation to be considered at all\n-MIN_NUM_MESSAGES = 10\n-\n-def check_at_repository_root():\n-    if not os.path.exists('.git'):\n-        print('No .git directory found')\n-        print('Execute this script at the root of the repository', file=sys.stderr)\n-        sys.exit(1)\n-\n-def fetch_all_translations():\n-    if subprocess.call([TX, 'pull', '-f', '-a']):\n-        print('Error while fetching translations', file=sys.stderr)\n-        sys.exit(1)\n-\n-def find_format_specifiers(s):\n-    '''Find all format specifiers in a string.'''\n-    pos = 0\n-    specifiers = []\n-    while True:\n-        percent = s.find('%', pos)\n-        if percent < 0:\n-            break\n-        specifiers.append(s[percent+1])\n-        pos = percent+2\n-    return specifiers\n-\n-def split_format_specifiers(specifiers):\n-    '''Split format specifiers between numeric (Qt) and others (strprintf)'''\n-    numeric = []\n-    other = []\n-    for s in specifiers:\n-        if s in {'1','2','3','4','5','6','7','8','9'}:\n-            numeric.append(s)\n-        else:\n-            other.append(s)\n-\n-    # If both numeric format specifiers and \"others\" are used, assume we're dealing\n-    # with a Qt-formatted message. In the case of Qt formatting (see https://doc.qt.io/qt-5/qstring.html#arg)\n-    # only numeric formats are replaced at all. This means \"(percentage: %1%)\" is valid, without needing\n-    # any kind of escaping that would be necessary for strprintf. Without this, this function\n-    # would wrongly detect '%)' as a printf format specifier.\n-    if numeric:\n-        other = []\n-\n-    # numeric (Qt) can be present in any order, others (strprintf) must be in specified order\n-    return set(numeric),other\n-\n-def sanitize_string(s):\n-    '''Sanitize string for printing'''\n-    return s.replace('\\n',' ')\n-\n-def check_format_specifiers(source, translation, errors, numerus):\n-    source_f = split_format_specifiers(find_format_specifiers(source))\n-    # assert that no source messages contain both Qt and strprintf format specifiers\n-    # if this fails, go change the source as this is hacky and confusing!\n-    assert(not(source_f[0] and source_f[1]))\n-    try:\n-        translation_f = split_format_specifiers(find_format_specifiers(translation))\n-    except IndexError:\n-        errors.append(\"Parse error in translation for '%s': '%s'\" % (sanitize_string(source), sanitize_string(translation)))\n-        return False\n-    else:\n-        if source_f != translation_f:\n-            if numerus and source_f == (set(), ['n']) and translation_f == (set(), []) and translation.find('%') == -1:\n-                # Allow numerus translations to omit %n specifier (usually when it only has one possible value)\n-                return True\n-            errors.append(\"Mismatch between '%s' and '%s'\" % (sanitize_string(source), sanitize_string(translation)))\n-            return False\n-    return True\n-\n-def all_ts_files(suffix=''):\n-    for filename in os.listdir(LOCALE_DIR):\n-        # process only language files, and do not process source language\n-        if not filename.endswith('.ts'+suffix) or filename == SOURCE_LANG+suffix:\n-            continue\n-        if suffix: # remove provided suffix\n-            filename = filename[0:-len(suffix)]\n-        filepath = os.path.join(LOCALE_DIR, filename)\n-        yield(filename, filepath)\n-\n-FIX_RE = re.compile(b'[\\x00-\\x09\\x0b\\x0c\\x0e-\\x1f]')\n-def remove_invalid_characters(s):\n-    '''Remove invalid characters from translation string'''\n-    return FIX_RE.sub(b'', s)\n-\n-# Override cdata escape function to make our output match Qt's (optional, just for cleaner diffs for\n-# comparison, disable by default)\n-_orig_escape_cdata = None\n-def escape_cdata(text):\n-    text = _orig_escape_cdata(text)\n-    text = text.replace(\"'\", '&apos;')\n-    text = text.replace('\"', '&quot;')\n-    return text\n-\n-def postprocess_translations(reduce_diff_hacks=False):\n-    print('Checking and postprocessing...')\n-\n-    if reduce_diff_hacks:\n-        global _orig_escape_cdata\n-        _orig_escape_cdata = ET._escape_cdata\n-        ET._escape_cdata = escape_cdata\n-\n-    for (filename,filepath) in all_ts_files():\n-        os.rename(filepath, filepath+'.orig')\n-\n-    have_errors = False\n-    for (filename,filepath) in all_ts_files('.orig'):\n-        # pre-fixups to cope with transifex output\n-        parser = ET.XMLParser(encoding='utf-8') # need to override encoding because 'utf8' is not understood only 'utf-8'\n-        with open(filepath + '.orig', 'rb') as f:\n-            data = f.read()\n-        # remove control characters; this must be done over the entire file otherwise the XML parser will fail\n-        data = remove_invalid_characters(data)\n-        tree = ET.parse(io.BytesIO(data), parser=parser)\n-\n-        # iterate over all messages in file\n-        root = tree.getroot()\n-        for context in root.findall('context'):\n-            for message in context.findall('message'):\n-                numerus = message.get('numerus') == 'yes'\n-                source = message.find('source').text\n-                translation_node = message.find('translation')\n-                # pick all numerusforms\n-                if numerus:\n-                    translations = [i.text for i in translation_node.findall('numerusform')]\n-                else:\n-                    translations = [translation_node.text]\n-\n-                for translation in translations:\n-                    if translation is None:\n-                        continue\n-                    errors = []\n-                    valid = check_format_specifiers(source, translation, errors, numerus)\n-\n-                    for error in errors:\n-                        print('%s: %s' % (filename, error))\n-\n-                    if not valid: # set type to unfinished and clear string if invalid\n-                        translation_node.clear()\n-                        translation_node.set('type', 'unfinished')\n-                        have_errors = True\n-\n-                # Remove location tags\n-                for location in message.findall('location'):\n-                    message.remove(location)\n-\n-                # Remove entire message if it is an unfinished translation\n-                if translation_node.get('type') == 'unfinished':\n-                    context.remove(message)\n-\n-        # check if document is (virtually) empty, and remove it if so\n-        num_messages = 0\n-        for context in root.findall('context'):\n-            for message in context.findall('message'):\n-                num_messages += 1\n-        if num_messages < MIN_NUM_MESSAGES:\n-            print('Removing %s, as it contains only %i messages' % (filepath, num_messages))\n-            continue\n-\n-        # write fixed-up tree\n-        # if diff reduction requested, replace some XML to 'sanitize' to qt formatting\n-        if reduce_diff_hacks:\n-            out = io.BytesIO()\n-            tree.write(out, encoding='utf-8')\n-            out = out.getvalue()\n-            out = out.replace(b' />', b'/>')\n-            with open(filepath, 'wb') as f:\n-                f.write(out)\n-        else:\n-            tree.write(filepath, encoding='utf-8')\n-    return have_errors\n-\n-if __name__ == '__main__':\n-    check_at_repository_root()\n-    fetch_all_translations()\n-    postprocess_translations()\n-"
      },
      {
        "sha": "299377d691155308875fb95fe5b7f49f9e8d50dc",
        "filename": "contrib/filter-lcov.py",
        "status": "removed",
        "additions": 0,
        "deletions": 25,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/filter-lcov.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/filter-lcov.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/filter-lcov.py?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,25 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import argparse\n-\n-parser = argparse.ArgumentParser(description='Remove the coverage data from a tracefile for all files matching the pattern.')\n-parser.add_argument('--pattern', '-p', action='append', help='the pattern of files to remove', required=True)\n-parser.add_argument('tracefile', help='the tracefile to remove the coverage data from')\n-parser.add_argument('outfile', help='filename for the output to be written to')\n-\n-args = parser.parse_args()\n-tracefile = args.tracefile\n-pattern = args.pattern\n-outfile = args.outfile\n-\n-in_remove = False\n-with open(tracefile, 'r') as f:\n-    with open(outfile, 'w') as wf:\n-        for line in f:\n-            for p in pattern:\n-                if line.startswith(\"SF:\") and p in line:\n-                    in_remove = True\n-            if not in_remove:\n-                wf.write(line)\n-            if line == 'end_of_record\\n':\n-                in_remove = False"
      },
      {
        "sha": "94d6a89c7b22bff126edb1c0ca8e3c92be9cac02",
        "filename": "contrib/gitian-build.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 389,
        "changes": 389,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/gitian-build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/gitian-build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-build.sh?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,389 +0,0 @@\n-# Copyright (c) 2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# What to do\n-sign=false\n-verify=false\n-build=false\n-\n-# Systems to build\n-linux=true\n-windows=true\n-osx=true\n-\n-# Other Basic variables\n-SIGNER=\n-VERSION=\n-commit=false\n-url=https://github.com/bitcoin/bitcoin\n-proc=2\n-mem=2000\n-lxc=true\n-osslTarUrl=http://downloads.sourceforge.net/project/osslsigncode/osslsigncode/osslsigncode-1.7.1.tar.gz\n-osslPatchUrl=https://bitcoincore.org/cfields/osslsigncode-Backports-to-1.7.1.patch\n-scriptName=$(basename -- \"$0\")\n-signProg=\"gpg --detach-sign\"\n-commitFiles=true\n-\n-# Help Message\n-read -d '' usage <<- EOF\n-Usage: $scriptName [-c|u|v|b|s|B|o|h|j|m|] signer version\n-\n-Run this script from the directory containing the bitcoin, gitian-builder, gitian.sigs, and bitcoin-detached-sigs.\n-\n-Arguments:\n-signer          GPG signer to sign each build assert file\n-version\t\tVersion number, commit, or branch to build. If building a commit or branch, the -c option must be specified\n-\n-Options:\n--c|--commit\tIndicate that the version argument is for a commit or branch\n--u|--url\tSpecify the URL of the repository. Default is https://github.com/bitcoin/bitcoin\n--v|--verify \tVerify the Gitian build\n--b|--build\tDo a Gitian build\n--s|--sign\tMake signed binaries for Windows and Mac OSX\n--B|--buildsign\tBuild both signed and unsigned binaries\n--o|--os\t\tSpecify which Operating Systems the build is for. Default is lwx. l for linux, w for windows, x for osx\n--j\t\tNumber of processes to use. Default 2\n--m\t\tMemory to allocate in MiB. Default 2000\n---kvm           Use KVM instead of LXC\n---setup         Set up the Gitian building environment. Uses LXC. If you want to use KVM, use the --kvm option. Only works on Debian-based systems (Ubuntu, Debian)\n---detach-sign   Create the assert file for detached signing. Will not commit anything.\n---no-commit     Do not commit anything to git\n--h|--help\tPrint this help message\n-EOF\n-\n-# Get options and arguments\n-while :; do\n-    case $1 in\n-        # Verify\n-        -v|--verify)\n-\t    verify=true\n-            ;;\n-        # Build\n-        -b|--build)\n-\t    build=true\n-            ;;\n-        # Sign binaries\n-        -s|--sign)\n-\t    sign=true\n-            ;;\n-        # Build then Sign\n-        -B|--buildsign)\n-\t    sign=true\n-\t    build=true\n-            ;;\n-        # PGP Signer\n-        -S|--signer)\n-\t    if [ -n \"$2\" ]\n-\t    then\n-\t\tSIGNER=\"$2\"\n-\t\tshift\n-\t    else\n-\t\techo 'Error: \"--signer\" requires a non-empty argument.'\n-\t\texit 1\n-\t    fi\n-           ;;\n-        # Operating Systems\n-        -o|--os)\n-\t    if [ -n \"$2\" ]\n-\t    then\n-\t\tlinux=false\n-\t\twindows=false\n-\t\tosx=false\n-\t\tif [[ \"$2\" = *\"l\"* ]]\n-\t\tthen\n-\t\t    linux=true\n-\t\tfi\n-\t\tif [[ \"$2\" = *\"w\"* ]]\n-\t\tthen\n-\t\t    windows=true\n-\t\tfi\n-\t\tif [[ \"$2\" = *\"x\"* ]]\n-\t\tthen\n-\t\t    osx=true\n-\t\tfi\n-\t\tshift\n-\t    else\n-\t\techo 'Error: \"--os\" requires an argument containing an l (for linux), w (for windows), or x (for Mac OSX)'\n-\t\texit 1\n-\t    fi\n-\t    ;;\n-\t# Help message\n-\t-h|--help)\n-\t    echo \"$usage\"\n-\t    exit 0\n-\t    ;;\n-\t# Commit or branch\n-\t-c|--commit)\n-\t    commit=true\n-\t    ;;\n-\t# Number of Processes\n-\t-j)\n-\t    if [ -n \"$2\" ]\n-\t    then\n-\t\tproc=$2\n-\t\tshift\n-\t    else\n-\t\techo 'Error: \"-j\" requires an argument'\n-\t\texit 1\n-\t    fi\n-\t    ;;\n-\t# Memory to allocate\n-\t-m)\n-\t    if [ -n \"$2\" ]\n-\t    then\n-\t\tmem=$2\n-\t\tshift\n-\t    else\n-\t\techo 'Error: \"-m\" requires an argument'\n-\t\texit 1\n-\t    fi\n-\t    ;;\n-\t# URL\n-\t-u)\n-\t    if [ -n \"$2\" ]\n-\t    then\n-\t\turl=$2\n-\t\tshift\n-\t    else\n-\t\techo 'Error: \"-u\" requires an argument'\n-\t\texit 1\n-\t    fi\n-\t    ;;\n-        # kvm\n-        --kvm)\n-            lxc=false\n-            ;;\n-        # Detach sign\n-        --detach-sign)\n-            signProg=\"true\"\n-            commitFiles=false\n-            ;;\n-        # Commit files\n-        --no-commit)\n-            commitFiles=false\n-            ;;\n-        # Setup\n-        --setup)\n-            setup=true\n-            ;;\n-\t*)               # Default case: If no more options then break out of the loop.\n-             break\n-    esac\n-    shift\n-done\n-\n-# Set up LXC\n-if [[ $lxc = true ]]\n-then\n-    export USE_LXC=1\n-fi\n-\n-# Check for OSX SDK\n-if [[ ! -e \"gitian-builder/inputs/MacOSX10.11.sdk.tar.gz\" && $osx == true ]]\n-then\n-    echo \"Cannot build for OSX, SDK does not exist. Will build for other OSes\"\n-    osx=false\n-fi\n-\n-# Get signer\n-if [[ -n \"$1\" ]]\n-then\n-    SIGNER=\"$1\"\n-    shift\n-fi\n-\n-# Get version\n-if [[ -n \"$1\" ]]\n-then\n-    VERSION=$1\n-    COMMIT=$VERSION\n-    shift\n-fi\n-\n-# Check that a signer is specified\n-if [[ \"$SIGNER\" == \"\" ]]\n-then\n-    echo \"$scriptName: Missing signer.\"\n-    echo \"Try $scriptName --help for more information\"\n-    exit 1\n-fi\n-\n-# Check that a version is specified\n-if [[ $VERSION == \"\" ]]\n-then\n-    echo \"$scriptName: Missing version.\"\n-    echo \"Try $scriptName --help for more information\"\n-    exit 1\n-fi\n-\n-# Add a \"v\" if no -c\n-if [[ $commit = false ]]\n-then\n-\tCOMMIT=\"v${VERSION}\"\n-fi\n-echo ${COMMIT}\n-\n-# Setup build environment\n-if [[ $setup = true ]]\n-then\n-    sudo apt-get install ruby apache2 git apt-cacher-ng python-vm-builder qemu-kvm qemu-utils\n-    git clone https://github.com/bitcoin-core/gitian.sigs.git\n-    git clone https://github.com/bitcoin-core/bitcoin-detached-sigs.git\n-    git clone https://github.com/devrandom/gitian-builder.git\n-    pushd ./gitian-builder\n-    if [[ -n \"$USE_LXC\" ]]\n-    then\n-        sudo apt-get install lxc\n-        bin/make-base-vm --suite trusty --arch amd64 --lxc\n-    else\n-        bin/make-base-vm --suite trusty --arch amd64\n-    fi\n-    popd\n-fi\n-\n-# Set up build\n-pushd ./bitcoin\n-git fetch\n-git checkout ${COMMIT}\n-popd\n-\n-# Build\n-if [[ $build = true ]]\n-then\n-\t# Make output folder\n-\tmkdir -p ./bitcoin-binaries/${VERSION}\n-\t\n-\t# Build Dependencies\n-\techo \"\"\n-\techo \"Building Dependencies\"\n-\techo \"\"\n-\tpushd ./gitian-builder\t\n-\tmkdir -p inputs\n-\twget -N -P inputs $osslPatchUrl\n-\twget -N -P inputs $osslTarUrl\n-\tmake -C ../bitcoin/depends download SOURCES_PATH=`pwd`/cache/common\n-\n-\t# Linux\n-\tif [[ $linux = true ]]\n-\tthen\n-            echo \"\"\n-\t    echo \"Compiling ${VERSION} Linux\"\n-\t    echo \"\"\n-\t    ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-\t    ./bin/gsign -p \"$signProg\" --signer \"$SIGNER\" --release ${VERSION}-linux --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-\t    mv build/out/bitcoin-*.tar.gz build/out/src/bitcoin-*.tar.gz ../bitcoin-binaries/${VERSION}\n-\tfi\n-\t# Windows\n-\tif [[ $windows = true ]]\n-\tthen\n-\t    echo \"\"\n-\t    echo \"Compiling ${VERSION} Windows\"\n-\t    echo \"\"\n-\t    ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-\t    ./bin/gsign -p \"$signProg\" --signer \"$SIGNER\" --release ${VERSION}-win-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-\t    mv build/out/bitcoin-*-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz\n-\t    mv build/out/bitcoin-*.zip build/out/bitcoin-*.exe ../bitcoin-binaries/${VERSION}\n-\tfi\n-\t# Mac OSX\n-\tif [[ $osx = true ]]\n-\tthen\n-\t    echo \"\"\n-\t    echo \"Compiling ${VERSION} Mac OSX\"\n-\t    echo \"\"\n-\t    ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-\t    ./bin/gsign -p \"$signProg\" --signer \"$SIGNER\" --release ${VERSION}-osx-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-\t    mv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz\n-\t    mv build/out/bitcoin-*.tar.gz build/out/bitcoin-*.dmg ../bitcoin-binaries/${VERSION}\n-\tfi\n-\tpopd\n-\n-        if [[ $commitFiles = true ]]\n-        then\n-\t    # Commit to gitian.sigs repo\n-            echo \"\"\n-            echo \"Committing ${VERSION} Unsigned Sigs\"\n-            echo \"\"\n-            pushd gitian.sigs\n-            git add ${VERSION}-linux/\"${SIGNER}\"\n-            git add ${VERSION}-win-unsigned/\"${SIGNER}\"\n-            git add ${VERSION}-osx-unsigned/\"${SIGNER}\"\n-            git commit -a -m \"Add ${VERSION} unsigned sigs for ${SIGNER}\"\n-            popd\n-        fi\n-fi\n-\n-# Verify the build\n-if [[ $verify = true ]]\n-then\n-\t# Linux\n-\tpushd ./gitian-builder\n-\techo \"\"\n-\techo \"Verifying v${VERSION} Linux\"\n-\techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-\t# Windows\n-\techo \"\"\n-\techo \"Verifying v${VERSION} Windows\"\n-\techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-\t# Mac OSX\t\n-\techo \"\"\n-\techo \"Verifying v${VERSION} Mac OSX\"\n-\techo \"\"\t\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-\t# Signed Windows\n-\techo \"\"\n-\techo \"Verifying v${VERSION} Signed Windows\"\n-\techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-\t# Signed Mac OSX\n-\techo \"\"\n-\techo \"Verifying v${VERSION} Signed Mac OSX\"\n-\techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\t\n-\tpopd\n-fi\n-\n-# Sign binaries\n-if [[ $sign = true ]]\n-then\n-\t\n-        pushd ./gitian-builder\n-\t# Sign Windows\n-\tif [[ $windows = true ]]\n-\tthen\n-\t    echo \"\"\n-\t    echo \"Signing ${VERSION} Windows\"\n-\t    echo \"\"\n-\t    ./bin/gbuild -i --commit signature=${COMMIT} ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-\t    ./bin/gsign -p \"$signProg\" --signer \"$SIGNER\" --release ${VERSION}-win-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-\t    mv build/out/bitcoin-*win64-setup.exe ../bitcoin-binaries/${VERSION}\n-\t    mv build/out/bitcoin-*win32-setup.exe ../bitcoin-binaries/${VERSION}\n-\tfi\n-\t# Sign Mac OSX\n-\tif [[ $osx = true ]]\n-\tthen\n-\t    echo \"\"\n-\t    echo \"Signing ${VERSION} Mac OSX\"\n-\t    echo \"\"\n-\t    ./bin/gbuild -i --commit signature=${COMMIT} ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-\t    ./bin/gsign -p \"$signProg\" --signer \"$SIGNER\" --release ${VERSION}-osx-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-\t    mv build/out/bitcoin-osx-signed.dmg ../bitcoin-binaries/${VERSION}/bitcoin-${VERSION}-osx.dmg\n-\tfi\n-\tpopd\n-\n-        if [[ $commitFiles = true ]]\n-        then\n-            # Commit Sigs\n-            pushd gitian.sigs\n-            echo \"\"\n-            echo \"Committing ${VERSION} Signed Sigs\"\n-            echo \"\"\n-            git add ${VERSION}-win-signed/\"${SIGNER}\"\n-            git add ${VERSION}-osx-signed/\"${SIGNER}\"\n-            git commit -a -m \"Add ${VERSION} signed binary sigs for ${SIGNER}\"\n-            popd\n-        fi\n-fi"
      },
      {
        "sha": "a2d902e210181b78ecda5f357bc82b977bcd45ef",
        "filename": "contrib/gitian-descriptors/README",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-descriptors/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-descriptors/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/README?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,31 @@\n+Gavin's notes on getting gitian builds up and running:\n+\n+You need the right hardware: you need a 64-bit-capable CPU with hardware virtualization support (Intel VT-x or AMD-V). Not all modern CPUs support hardware virtualization.\n+\n+You probably need to enable hardware virtualization in your machine's BIOS.\n+\n+You need to be running a recent version of 64-bit-Ubuntu, and you need to install several prerequisites:\n+  sudo apt-get install apache2 git apt-cacher-ng python-vm-builder qemu-kvm\n+\n+Sanity checks:\n+  sudo service apt-cacher-ng status   # Should return apt-cacher-ng is running\n+  ls -l /dev/kvm   # Should show a /dev/kvm device\n+\n+Once you've got the right hardware and software:\n+\n+    git clone git://github.com/bitcoin/bitcoin.git\n+    git clone git://github.com/devrandom/gitian-builder.git\n+    mkdir gitian-builder/inputs\n+    wget 'http://miniupnp.tuxfamily.org/files/download.php?file=miniupnpc-1.6.tar.gz' -O gitian-builder/inputs/miniupnpc-1.6.tar.gz\n+\n+    cd gitian-builder\n+    bin/make-base-vm --arch i386\n+    bin/make-base-vm --arch amd64\n+    cd ..\n+\n+    # To build\n+    cd bitcoin\n+    git pull\n+    cd ../gitian-builder\n+    git pull\n+    ./bin/gbuild --commit bitcoin=HEAD ../bitcoin/contrib/gitian.yml"
      },
      {
        "sha": "61ea50e4fed266a01622cad5c6a154d40fccca02",
        "filename": "contrib/gitian-descriptors/boost-win32.yml",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-descriptors/boost-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-descriptors/boost-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/boost-win32.yml?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,38 @@\n+---\n+name: \"boost\"\n+suites:\n+- \"lucid\"\n+architectures:\n+- \"i386\"\n+packages: \n+- \"mingw32\"\n+- \"faketime\"\n+- \"zip\"\n+reference_datetime: \"2011-01-30 00:00:00\"\n+remotes: []\n+files:\n+- \"boost_1_47_0.tar.bz2\"\n+script: |\n+  TMPDIR=\"$HOME/tmpdir\"\n+  mkdir -p $TMPDIR/bin/$GBUILD_BITS $TMPDIR/include\n+  tar xjf boost_1_47_0.tar.bz2\n+  cd boost_1_47_0\n+  echo \"using gcc : 4.4 : i586-mingw32msvc-g++\n+        :\n+        <rc>i586-mingw32msvc-windres\n+        <archiver>i586-mingw32msvc-ar\n+        <cxxflags>-frandom-seed=boost1\n+  ;\" > user-config.jam\n+  ./bootstrap.sh --without-icu\n+  ./bjam toolset=gcc target-os=windows threadapi=win32 threading=multi variant=release link=static --user-config=user-config.jam --without-mpi --without-python -sNO_BZIP2=1 -sNO_ZLIB=1 --layout=tagged --build-type=complete $MAKEOPTS stage\n+  for lib in chrono date_time exception filesystem graph iostreams math_c99f math_c99l math_c99 math_tr1f math_tr1l math_tr1 prg_exec_monitor program_options random regex serialization signals system test_exec_monitor thread_win32 unit_test_framework wave wserialization; do\n+      mkdir $lib\n+      (cd $lib ; ar xf ../stage/lib/libboost_${lib}-mt-s.a)\n+      mv $lib $TMPDIR/bin/$GBUILD_BITS\n+  done\n+  cp -a boost $TMPDIR/include\n+  cd $TMPDIR\n+  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n+  export FAKETIME=$REFERENCE_DATETIME\n+  zip -r boost-win32-1.47.0-gitian.zip *\n+  cp boost-win32-1.47.0-gitian.zip $OUTDIR"
      },
      {
        "sha": "62b67ee9a892a1cd67d12d4a05ab7f13c4e09912",
        "filename": "contrib/gitian-descriptors/deps-win32.yml",
        "status": "added",
        "additions": 71,
        "deletions": 0,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-descriptors/deps-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-descriptors/deps-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/deps-win32.yml?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,71 @@\n+---\n+name: \"bitcoin-deps\"\n+suites:\n+- \"lucid\"\n+architectures:\n+- \"i386\"\n+packages: \n+- \"mingw32\"\n+- \"git-core\"\n+- \"zip\"\n+- \"faketime\"\n+- \"wine\"\n+reference_datetime: \"2011-01-30 00:00:00\"\n+remotes: []\n+files:\n+- \"openssl-1.0.1b.tar.gz\"\n+- \"db-4.8.30.NC.tar.gz\"\n+- \"miniupnpc-1.6.tar.gz\"\n+- \"zlib-1.2.7.tar.gz\"\n+- \"libpng-1.5.12.tar.gz\"\n+- \"qrencode-3.2.0.tar.bz2\"\n+script: |\n+  #\n+  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n+  export FAKETIME=$REFERENCE_DATETIME\n+  export TZ=UTC\n+  #\n+  tar xzf openssl-1.0.1b.tar.gz\n+  cd openssl-1.0.1b\n+  ./Configure --cross-compile-prefix=i586-mingw32msvc- mingw\n+  make\n+  cd ..\n+  #\n+  tar xzf db-4.8.30.NC.tar.gz\n+  cd db-4.8.30.NC/build_unix\n+  ../dist/configure --enable-mingw --enable-cxx --host=i586-mingw32msvc CFLAGS=\"-I/usr/i586-mingw32msvc/include\"\n+  make $MAKEOPTS\n+  cd ../..\n+  #\n+  tar xzf miniupnpc-1.6.tar.gz\n+  cd miniupnpc-1.6\n+  sed 's/dllwrap -k --driver-name gcc/$(DLLWRAP) -k --driver-name $(CC)/' -i Makefile.mingw\n+  sed 's|wingenminiupnpcstrings $< $@|./wingenminiupnpcstrings $< $@|' -i Makefile.mingw\n+  make -f Makefile.mingw DLLWRAP=i586-mingw32msvc-dllwrap CC=i586-mingw32msvc-gcc AR=i586-mingw32msvc-ar\n+  cd ..\n+  mv miniupnpc-1.6 miniupnpc\n+  #\n+  tar xzf zlib-1.2.7.tar.gz\n+  cd zlib-1.2.7\n+  make -f win32/Makefile.gcc PREFIX=i586-mingw32msvc- $MAKEOPTS\n+  cd ..\n+  #\n+  tar xzf libpng-1.5.12.tar.gz\n+  cd libpng-1.5.12\n+  ./configure -disable-shared CC=i586-mingw32msvc-cc AR=i586-mingw32msvc-ar STRIP=i586-mingw32msvc-strip RANLIB=i586-mingw32msvc-ranlib OBJDUMP=i586-mingw32msvc-objdump LD=i586-mingw32msvc-ld LDFLAGS=\"-L../zlib-1.2.7/\" CFLAGS=\"-I../zlib-1.2.7/\"\n+  make $MAKEOPTS\n+  cd ..\n+  #\n+  tar xjf qrencode-3.2.0.tar.bz2\n+  cd qrencode-3.2.0\n+  ./configure CC=i586-mingw32msvc-cc AR=i586-mingw32msvc-ar STRIP=i586-mingw32msvc-strip RANLIB=i586-mingw32msvc-ranlib OBJDUMP=i586-mingw32msvc-objdump LD=i586-mingw32msvc-ld png_LIBS=\"../libpng-1.5.12/.libs/libpng15.a ../zlib-1.2.7/libz.a\" png_CFLAGS=\"-I../libpng-1.5.12\"\n+  make $MAKEOPTS\n+  cd ..\n+  #\n+  zip -r $OUTDIR/ppcoin-deps-0.0.1.zip \\\n+    $(ls qrencode-*/{qrencode.h,.libs/libqrencode.{,l}a} | sort) \\\n+    $(ls db-*/build_unix/{libdb_cxx.a,db.h,db_cxx.h,libdb.a,.libs/libdb_cxx-?.?.a} | sort) \\\n+    $(find openssl-* -name '*.a' -o -name '*.h' | sort) \\\n+    $(find miniupnpc -name '*.h' -o -name 'libminiupnpc.a' | sort)\n+  # Kill wine processes as gitian won't figure out we are done otherwise\n+  killall wineserver services.exe explorer.exe winedevice.exe"
      },
      {
        "sha": "3e9ee0495a8e254e37124e113a6975bab07cf5de",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 192,
        "changes": 192,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,192 +0,0 @@\n----\n-name: \"bitcoin-linux-0.17\"\n-enable_cache: true\n-suites:\n-- \"trusty\"\n-architectures:\n-- \"amd64\"\n-packages:\n-- \"curl\"\n-- \"g++-aarch64-linux-gnu\"\n-- \"g++-4.8-aarch64-linux-gnu\"\n-- \"gcc-4.8-aarch64-linux-gnu\"\n-- \"binutils-aarch64-linux-gnu\"\n-- \"g++-arm-linux-gnueabihf\"\n-- \"g++-4.8-arm-linux-gnueabihf\"\n-- \"gcc-4.8-arm-linux-gnueabihf\"\n-- \"binutils-arm-linux-gnueabihf\"\n-- \"g++-4.8-multilib\"\n-- \"gcc-4.8-multilib\"\n-- \"binutils-gold\"\n-- \"git-core\"\n-- \"pkg-config\"\n-- \"autoconf\"\n-- \"libtool\"\n-- \"automake\"\n-- \"faketime\"\n-- \"bsdmainutils\"\n-- \"ca-certificates\"\n-- \"python\"\n-remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n-files: []\n-script: |\n-\n-  WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"i686-pc-linux-gnu x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu\"\n-  CONFIGFLAGS=\"--enable-glibc-back-compat --enable-reduce-exports --disable-bench --disable-gui-tests\"\n-  FAKETIME_HOST_PROGS=\"\"\n-  FAKETIME_PROGS=\"date ar ranlib nm\"\n-  HOST_CFLAGS=\"-O2 -g\"\n-  HOST_CXXFLAGS=\"-O2 -g\"\n-  HOST_LDFLAGS=-static-libstdc++\n-\n-  export QT_RCC_TEST=1\n-  export GZIP=\"-9n\"\n-  export TAR_OPTIONS=\"--mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n-  export TZ=\"UTC\"\n-  export BUILD_DIR=`pwd`\n-  mkdir -p ${WRAP_DIR}\n-  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n-    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n-    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n-    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n-  fi\n-\n-  function create_global_faketime_wrappers {\n-  for prog in ${FAKETIME_PROGS}; do\n-    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n-    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n-    echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n-    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n-    chmod +x ${WRAP_DIR}/${prog}\n-  done\n-  }\n-\n-  function create_per-host_faketime_wrappers {\n-  for i in $HOSTS; do\n-    for prog in ${FAKETIME_HOST_PROGS}; do\n-        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n-        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n-        chmod +x ${WRAP_DIR}/${i}-${prog}\n-    done\n-  done\n-  }\n-\n-  # Faketime for depends so intermediate results are comparable\n-  export PATH_orig=${PATH}\n-  create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n-  create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n-  export PATH=${WRAP_DIR}:${PATH}\n-\n-  EXTRA_INCLUDES_BASE=$WRAP_DIR/extra_includes\n-  mkdir -p $EXTRA_INCLUDES_BASE\n-\n-  # x86 needs /usr/include/i386-linux-gnu/asm pointed to /usr/include/x86_64-linux-gnu/asm,\n-  # but we can't write there. Instead, create a link here and force it to be included in the\n-  # search paths by wrapping gcc/g++.\n-\n-  mkdir -p $EXTRA_INCLUDES_BASE/i686-pc-linux-gnu\n-  rm -f $WRAP_DIR/extra_includes/i686-pc-linux-gnu/asm\n-  ln -s /usr/include/x86_64-linux-gnu/asm $EXTRA_INCLUDES_BASE/i686-pc-linux-gnu/asm\n-\n-  for prog in gcc g++; do\n-  rm -f ${WRAP_DIR}/${prog}\n-  cat << EOF > ${WRAP_DIR}/${prog}\n-  #!/bin/bash\n-  REAL=\"`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1`\"\n-  for var in \"\\$@\"\n-  do\n-    if [ \"\\$var\" = \"-m32\" ]; then\n-      export C_INCLUDE_PATH=\"$EXTRA_INCLUDES_BASE/i686-pc-linux-gnu\"\n-      export CPLUS_INCLUDE_PATH=\"$EXTRA_INCLUDES_BASE/i686-pc-linux-gnu\"\n-      break\n-    fi\n-  done\n-  \\$REAL \\$@\n-  EOF\n-  chmod +x ${WRAP_DIR}/${prog}\n-  done\n-\n-  cd bitcoin\n-  BASEPREFIX=`pwd`/depends\n-  # Build dependencies for each host\n-  for i in $HOSTS; do\n-    EXTRA_INCLUDES=\"$EXTRA_INCLUDES_BASE/$i\"\n-    if [ -d \"$EXTRA_INCLUDES\" ]; then\n-      export HOST_ID_SALT=\"$EXTRA_INCLUDES\"\n-    fi\n-    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n-    unset HOST_ID_SALT\n-  done\n-\n-  # Faketime for binaries\n-  export PATH=${PATH_orig}\n-  create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n-  create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n-  export PATH=${WRAP_DIR}:${PATH}\n-\n-  # Create the release tarball using (arbitrarily) the first host\n-  ./autogen.sh\n-  CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n-  make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n-  DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n-  # Correct tar file order\n-  mkdir -p temp\n-  pushd temp\n-  tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n-  popd\n-\n-  # Workaround for tarball not building with the bare tag version (prep)\n-  make -C src obj/build.h\n-\n-  ORIGPATH=\"$PATH\"\n-  # Extract the release tarball into a dir for each host and build\n-  for i in ${HOSTS}; do\n-    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n-    mkdir -p distsrc-${i}\n-    cd distsrc-${i}\n-    INSTALLPATH=`pwd`/installed/${DISTNAME}\n-    mkdir -p ${INSTALLPATH}\n-    tar --strip-components=1 -xf ../$SOURCEDIST\n-\n-    # Workaround for tarball not building with the bare tag version\n-    echo '#!/bin/true' >share/genbuild.sh\n-    mkdir src/obj\n-    cp ../src/obj/build.h src/obj/\n-\n-    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\" LDFLAGS=\"${HOST_LDFLAGS}\"\n-    make ${MAKEOPTS}\n-    make ${MAKEOPTS} -C src check-security\n-\n-    #TODO: This is a quick hack that disables symbol checking for arm.\n-    #      Instead, we should investigate why these are popping up.\n-    #      For aarch64, we'll need to bump up the min GLIBC version, as the abi\n-    #      support wasn't introduced until 2.17.\n-    case $i in\n-       aarch64-*) : ;;\n-       arm-*) : ;;\n-       *) make ${MAKEOPTS} -C src check-symbols ;;\n-    esac\n-\n-    make install DESTDIR=${INSTALLPATH}\n-    cd installed\n-    find . -name \"lib*.la\" -delete\n-    find . -name \"lib*.a\" -delete\n-    rm -rf ${DISTNAME}/lib/pkgconfig\n-    find ${DISTNAME}/bin -type f -executable -exec ../contrib/devtools/split-debug.sh {} {} {}.dbg \\;\n-    find ${DISTNAME}/lib -type f -exec ../contrib/devtools/split-debug.sh {} {} {}.dbg \\;\n-    find ${DISTNAME} -not -name \"*.dbg\" | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n-    find ${DISTNAME} -name \"*.dbg\" | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}-debug.tar.gz\n-    cd ../../\n-    rm -rf distsrc-${i}\n-  done\n-  mkdir -p $OUTDIR/src\n-  mv $SOURCEDIST $OUTDIR/src"
      },
      {
        "sha": "f6e9414ab1bf2ec0fa0f098fa62972bb06281f43",
        "filename": "contrib/gitian-descriptors/gitian-osx-signer.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-signer.yml?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,37 +0,0 @@\n----\n-name: \"bitcoin-dmg-signer\"\n-suites:\n-- \"trusty\"\n-architectures:\n-- \"amd64\"\n-packages:\n-- \"faketime\"\n-remotes:\n-- \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n-  \"dir\": \"signature\"\n-files:\n-- \"bitcoin-osx-unsigned.tar.gz\"\n-script: |\n-  WRAP_DIR=$HOME/wrapped\n-  mkdir -p ${WRAP_DIR}\n-  export PATH=`pwd`:$PATH\n-  FAKETIME_PROGS=\"dmg genisoimage\"\n-\n-  # Create global faketime wrappers\n-  for prog in ${FAKETIME_PROGS}; do\n-    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n-    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n-    echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n-    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n-    chmod +x ${WRAP_DIR}/${prog}\n-  done\n-\n-  UNSIGNED=bitcoin-osx-unsigned.tar.gz\n-  SIGNED=bitcoin-osx-signed.dmg\n-\n-  tar -xf ${UNSIGNED}\n-  OSX_VOLNAME=\"$(cat osx_volname)\"\n-  ./detached-sig-apply.sh ${UNSIGNED} signature/osx\n-  ${WRAP_DIR}/genisoimage -no-cache-inodes -D -l -probe -V \"${OSX_VOLNAME}\" -no-pad -r -dir-mode 0755 -apple -o uncompressed.dmg signed-app\n-  ${WRAP_DIR}/dmg dmg uncompressed.dmg ${OUTDIR}/${SIGNED}"
      },
      {
        "sha": "a84dce3e3aec3ec6a269ba3293eb7af0fdbaa97e",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 166,
        "changes": 166,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,166 +0,0 @@\n----\n-name: \"bitcoin-osx-0.17\"\n-enable_cache: true\n-suites:\n-- \"trusty\"\n-architectures:\n-- \"amd64\"\n-packages:\n-- \"ca-certificates\"\n-- \"curl\"\n-- \"g++\"\n-- \"git-core\"\n-- \"pkg-config\"\n-- \"autoconf\"\n-- \"librsvg2-bin\"\n-- \"libtiff-tools\"\n-- \"libtool\"\n-- \"automake\"\n-- \"faketime\"\n-- \"bsdmainutils\"\n-- \"cmake\"\n-- \"imagemagick\"\n-- \"libcap-dev\"\n-- \"libz-dev\"\n-- \"libbz2-dev\"\n-- \"python\"\n-- \"python-dev\"\n-- \"python-setuptools\"\n-- \"fonts-tuffy\"\n-remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n-files:\n-- \"MacOSX10.11.sdk.tar.gz\"\n-script: |\n-  WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"x86_64-apple-darwin11\"\n-  CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests GENISOIMAGE=$WRAP_DIR/genisoimage\"\n-  FAKETIME_HOST_PROGS=\"\"\n-  FAKETIME_PROGS=\"ar ranlib date dmg genisoimage\"\n-\n-  export QT_RCC_TEST=1\n-  export GZIP=\"-9n\"\n-  export TAR_OPTIONS=\"--mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n-  export TZ=\"UTC\"\n-  export BUILD_DIR=`pwd`\n-  mkdir -p ${WRAP_DIR}\n-  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n-    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n-    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n-    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n-  fi\n-\n-  export ZERO_AR_DATE=1\n-\n-  function create_global_faketime_wrappers {\n-  for prog in ${FAKETIME_PROGS}; do\n-    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n-    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n-    echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n-    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n-    chmod +x ${WRAP_DIR}/${prog}\n-  done\n-  }\n-\n-  function create_per-host_faketime_wrappers {\n-  for i in $HOSTS; do\n-    for prog in ${FAKETIME_HOST_PROGS}; do\n-        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n-        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n-        chmod +x ${WRAP_DIR}/${i}-${prog}\n-    done\n-  done\n-  }\n-\n-  # Faketime for depends so intermediate results are comparable\n-  export PATH_orig=${PATH}\n-  create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n-  create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n-  export PATH=${WRAP_DIR}:${PATH}\n-\n-  cd bitcoin\n-  BASEPREFIX=`pwd`/depends\n-\n-  mkdir -p ${BASEPREFIX}/SDKs\n-  tar -C ${BASEPREFIX}/SDKs -xf ${BUILD_DIR}/MacOSX10.11.sdk.tar.gz\n-\n-  # Build dependencies for each host\n-  for i in $HOSTS; do\n-    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n-  done\n-\n-  # Faketime for binaries\n-  export PATH=${PATH_orig}\n-  create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n-  create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n-  export PATH=${WRAP_DIR}:${PATH}\n-\n-  # Create the release tarball using (arbitrarily) the first host\n-  ./autogen.sh\n-  CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n-  make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n-  DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n-\n-  # Correct tar file order\n-  mkdir -p temp\n-  pushd temp\n-  tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n-  popd\n-\n-  # Workaround for tarball not building with the bare tag version (prep)\n-  make -C src obj/build.h\n-\n-  ORIGPATH=\"$PATH\"\n-  # Extract the release tarball into a dir for each host and build\n-  for i in ${HOSTS}; do\n-    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n-    mkdir -p distsrc-${i}\n-    cd distsrc-${i}\n-    INSTALLPATH=`pwd`/installed/${DISTNAME}\n-    mkdir -p ${INSTALLPATH}\n-    tar --strip-components=1 -xf ../$SOURCEDIST\n-\n-    # Workaround for tarball not building with the bare tag version\n-    echo '#!/bin/true' >share/genbuild.sh\n-    mkdir src/obj\n-    cp ../src/obj/build.h src/obj/\n-\n-    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n-    make ${MAKEOPTS}\n-    make install-strip DESTDIR=${INSTALLPATH}\n-\n-    make osx_volname\n-    make deploydir\n-    OSX_VOLNAME=\"$(cat osx_volname)\"\n-    mkdir -p unsigned-app-${i}\n-    cp osx_volname unsigned-app-${i}/\n-    cp contrib/macdeploy/detached-sig-apply.sh unsigned-app-${i}\n-    cp contrib/macdeploy/detached-sig-create.sh unsigned-app-${i}\n-    cp ${BASEPREFIX}/${i}/native/bin/dmg ${BASEPREFIX}/${i}/native/bin/genisoimage unsigned-app-${i}\n-    cp ${BASEPREFIX}/${i}/native/bin/${i}-codesign_allocate unsigned-app-${i}/codesign_allocate\n-    cp ${BASEPREFIX}/${i}/native/bin/${i}-pagestuff unsigned-app-${i}/pagestuff\n-    mv dist unsigned-app-${i}\n-    pushd unsigned-app-${i}\n-    find . | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-osx-unsigned.tar.gz\n-    popd\n-\n-    make deploy\n-    ${WRAP_DIR}/dmg dmg \"${OSX_VOLNAME}.dmg\" ${OUTDIR}/${DISTNAME}-osx-unsigned.dmg\n-\n-    cd installed\n-    find . -name \"lib*.la\" -delete\n-    find . -name \"lib*.a\" -delete\n-    rm -rf ${DISTNAME}/lib/pkgconfig\n-    find ${DISTNAME} | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n-    cd ../../\n-  done\n-  mkdir -p $OUTDIR/src\n-  mv $SOURCEDIST $OUTDIR/src\n-  mv ${OUTDIR}/${DISTNAME}-x86_64-*.tar.gz ${OUTDIR}/${DISTNAME}-osx64.tar.gz"
      },
      {
        "sha": "3c1e0214a0aa6bfd31c54fabfdc444aad705c0b0",
        "filename": "contrib/gitian-descriptors/gitian-win-signer.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 38,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/gitian-descriptors/gitian-win-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/gitian-descriptors/gitian-win-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win-signer.yml?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,38 +0,0 @@\n----\n-name: \"bitcoin-win-signer\"\n-suites:\n-- \"trusty\"\n-architectures:\n-- \"amd64\"\n-packages:\n-- \"libssl-dev\"\n-- \"autoconf\"\n-remotes:\n-- \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n-  \"dir\": \"signature\"\n-files:\n-- \"osslsigncode-1.7.1.tar.gz\"\n-- \"osslsigncode-Backports-to-1.7.1.patch\"\n-- \"bitcoin-win-unsigned.tar.gz\"\n-script: |\n-  BUILD_DIR=`pwd`\n-  SIGDIR=${BUILD_DIR}/signature/win\n-  UNSIGNED_DIR=${BUILD_DIR}/unsigned\n-\n-  echo \"f9a8cdb38b9c309326764ebc937cba1523a3a751a7ab05df3ecc99d18ae466c9  osslsigncode-1.7.1.tar.gz\" | sha256sum -c\n-  echo \"a8c4e9cafba922f89de0df1f2152e7be286aba73f78505169bc351a7938dd911  osslsigncode-Backports-to-1.7.1.patch\" | sha256sum -c\n-\n-  mkdir -p ${UNSIGNED_DIR}\n-  tar -C ${UNSIGNED_DIR} -xf bitcoin-win-unsigned.tar.gz\n-\n-  tar xf osslsigncode-1.7.1.tar.gz\n-  cd osslsigncode-1.7.1\n-  patch -p1 < ${BUILD_DIR}/osslsigncode-Backports-to-1.7.1.patch\n-\n-  ./configure --without-gsf --without-curl --disable-dependency-tracking\n-  make\n-  find ${UNSIGNED_DIR} -name \"*-unsigned.exe\" | while read i; do\n-    INFILE=\"`basename \"${i}\"`\"\n-    OUTFILE=\"`echo \"${INFILE}\" | sed s/-unsigned//`\"\n-    ./osslsigncode attach-signature -in \"${i}\" -out \"${OUTDIR}/${OUTFILE}\" -sigin \"${SIGDIR}/${INFILE}.pem\"\n-  done"
      },
      {
        "sha": "8a87d91754a91a86732fe5fcd5e34718d05f4dca",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 179,
        "changes": 179,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,179 +0,0 @@\n----\n-name: \"bitcoin-win-0.17\"\n-enable_cache: true\n-suites:\n-- \"trusty\"\n-architectures:\n-- \"amd64\"\n-packages:\n-- \"curl\"\n-- \"g++\"\n-- \"git-core\"\n-- \"pkg-config\"\n-- \"autoconf\"\n-- \"libtool\"\n-- \"automake\"\n-- \"faketime\"\n-- \"bsdmainutils\"\n-- \"mingw-w64\"\n-- \"g++-mingw-w64\"\n-- \"nsis\"\n-- \"zip\"\n-- \"ca-certificates\"\n-- \"python\"\n-remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n-files: []\n-script: |\n-  WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"i686-w64-mingw32 x86_64-w64-mingw32\"\n-  CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests\"\n-  FAKETIME_HOST_PROGS=\"g++ ar ranlib nm windres strip objcopy\"\n-  FAKETIME_PROGS=\"date makensis zip\"\n-  HOST_CFLAGS=\"-O2 -g\"\n-  HOST_CXXFLAGS=\"-O2 -g\"\n-\n-  export QT_RCC_TEST=1\n-  export GZIP=\"-9n\"\n-  export TAR_OPTIONS=\"--mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n-  export TZ=\"UTC\"\n-  export BUILD_DIR=`pwd`\n-  mkdir -p ${WRAP_DIR}\n-  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n-    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n-    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n-    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n-  fi\n-\n-  function create_global_faketime_wrappers {\n-  for prog in ${FAKETIME_PROGS}; do\n-    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n-    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n-    echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n-    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n-    chmod +x ${WRAP_DIR}/${prog}\n-  done\n-  }\n-\n-  function create_per-host_faketime_wrappers {\n-  for i in $HOSTS; do\n-    for prog in ${FAKETIME_HOST_PROGS}; do\n-        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n-        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n-        chmod +x ${WRAP_DIR}/${i}-${prog}\n-    done\n-  done\n-  }\n-\n-  function create_per-host_linker_wrapper {\n-  # This is only needed for trusty, as the mingw linker leaks a few bytes of\n-  # heap, causing non-determinism. See discussion in https://github.com/bitcoin/bitcoin/pull/6900\n-  for i in $HOSTS; do\n-    mkdir -p ${WRAP_DIR}/${i}\n-    for prog in collect2; do\n-        echo '#!/bin/bash' > ${WRAP_DIR}/${i}/${prog}\n-        REAL=$(${i}-gcc -print-prog-name=${prog})\n-        echo \"export MALLOC_PERTURB_=255\" >> ${WRAP_DIR}/${i}/${prog}\n-        echo \"${REAL} \\$@\" >> $WRAP_DIR/${i}/${prog}\n-        chmod +x ${WRAP_DIR}/${i}/${prog}\n-    done\n-    for prog in gcc g++; do\n-        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n-        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export COMPILER_PATH=${WRAP_DIR}/${i}\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n-        chmod +x ${WRAP_DIR}/${i}-${prog}\n-    done\n-  done\n-  }\n-\n-  # Faketime for depends so intermediate results are comparable\n-  export PATH_orig=${PATH}\n-  create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n-  create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n-  create_per-host_linker_wrapper \"2000-01-01 12:00:00\"\n-  export PATH=${WRAP_DIR}:${PATH}\n-\n-  cd bitcoin\n-  BASEPREFIX=`pwd`/depends\n-  # Build dependencies for each host\n-  for i in $HOSTS; do\n-    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n-  done\n-\n-  # Faketime for binaries\n-  export PATH=${PATH_orig}\n-  create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n-  create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n-  create_per-host_linker_wrapper \"${REFERENCE_DATETIME}\"\n-  export PATH=${WRAP_DIR}:${PATH}\n-\n-  # Create the release tarball using (arbitrarily) the first host\n-  ./autogen.sh\n-  CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n-  make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n-  DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n-\n-  # Correct tar file order\n-  mkdir -p temp\n-  pushd temp\n-  tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n-  mkdir -p $OUTDIR/src\n-  cp ../$SOURCEDIST $OUTDIR/src\n-  popd\n-\n-  # Workaround for tarball not building with the bare tag version (prep)\n-  make -C src obj/build.h\n-\n-  ORIGPATH=\"$PATH\"\n-  # Extract the release tarball into a dir for each host and build\n-  for i in ${HOSTS}; do\n-    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n-    mkdir -p distsrc-${i}\n-    cd distsrc-${i}\n-    INSTALLPATH=`pwd`/installed/${DISTNAME}\n-    mkdir -p ${INSTALLPATH}\n-    tar --strip-components=1 -xf ../$SOURCEDIST\n-\n-    # Workaround for tarball not building with the bare tag version\n-    echo '#!/bin/true' >share/genbuild.sh\n-    mkdir src/obj\n-    cp ../src/obj/build.h src/obj/\n-\n-    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\"\n-    make ${MAKEOPTS}\n-    make ${MAKEOPTS} -C src check-security\n-    make deploy\n-    make install DESTDIR=${INSTALLPATH}\n-    rename 's/-setup\\.exe$/-setup-unsigned.exe/' *-setup.exe\n-    cp -f bitcoin-*setup*.exe $OUTDIR/\n-    cd installed\n-    mv ${DISTNAME}/bin/*.dll ${DISTNAME}/lib/\n-    find . -name \"lib*.la\" -delete\n-    find . -name \"lib*.a\" -delete\n-    rm -rf ${DISTNAME}/lib/pkgconfig\n-    find ${DISTNAME}/bin -type f -executable -exec ${i}-objcopy --only-keep-debug {} {}.dbg \\; -exec ${i}-strip -s {} \\; -exec ${i}-objcopy --add-gnu-debuglink={}.dbg {} \\;\n-    find ${DISTNAME}/lib -type f -exec ${i}-objcopy --only-keep-debug {} {}.dbg \\; -exec ${i}-strip -s {} \\; -exec ${i}-objcopy --add-gnu-debuglink={}.dbg {} \\;\n-    find ${DISTNAME} -not -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i}.zip\n-    find ${DISTNAME} -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i}-debug.zip\n-    cd ../../\n-    rm -rf distsrc-${i}\n-  done\n-  cp -rf contrib/windeploy $BUILD_DIR\n-  cd $BUILD_DIR/windeploy\n-  mkdir unsigned\n-  cp $OUTDIR/bitcoin-*setup-unsigned.exe unsigned/\n-  find . | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\n-  mv ${OUTDIR}/${DISTNAME}-x86_64-*-debug.zip ${OUTDIR}/${DISTNAME}-win64-debug.zip\n-  mv ${OUTDIR}/${DISTNAME}-i686-*-debug.zip ${OUTDIR}/${DISTNAME}-win32-debug.zip\n-  mv ${OUTDIR}/${DISTNAME}-x86_64-*.zip ${OUTDIR}/${DISTNAME}-win64.zip\n-  mv ${OUTDIR}/${DISTNAME}-i686-*.zip ${OUTDIR}/${DISTNAME}-win32.zip"
      },
      {
        "sha": "2bf3a7dc2d72084367835be2fa0615aaad20db02",
        "filename": "contrib/gitian-descriptors/gitian-win32.yml",
        "status": "added",
        "additions": 74,
        "deletions": 0,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-descriptors/gitian-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-descriptors/gitian-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win32.yml?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,74 @@\n+---\n+name: \"ppcoin\"\n+suites:\n+- \"lucid\"\n+architectures:\n+- \"i386\"\n+packages: \n+- \"mingw32\"\n+- \"git-core\"\n+- \"unzip\"\n+- \"nsis\"\n+- \"faketime\"\n+reference_datetime: \"2011-01-30 00:00:00\"\n+remotes:\n+- \"url\": \"https://github.com/ppcoin/ppcoin.git\"\n+  \"dir\": \"ppcoin\"\n+files:\n+- \"qt-win32-4.7.4-gitian.zip\"\n+- \"boost-win32-1.47.0-gitian.zip\"\n+- \"ppcoin-deps-0.0.1.zip\"\n+script: |\n+  #\n+  mkdir $HOME/qt\n+  cd $HOME/qt\n+  unzip ../build/qt-win32-4.7.4-gitian.zip\n+  cd $HOME/build/\n+  export PATH=$PATH:$HOME/qt/bin/\n+  #\n+  mkdir boost_1_47_0\n+  cd boost_1_47_0\n+  mkdir -p stage/lib\n+  unzip ../boost-win32-1.47.0-gitian.zip\n+  cd bin/$GBUILD_BITS\n+  for lib in *; do\n+    i586-mingw32msvc-ar rc ../../stage/lib/libboost_${lib}-mt-s.a $lib/*.o\n+    i586-mingw32msvc-ranlib ../../stage/lib/libboost_${lib}-mt-s.a\n+  done\n+  cd ../..\n+  mv include/boost .\n+  cd ..\n+  #\n+  unzip ppcoin-deps-0.0.1.zip\n+  #\n+  find -type f | xargs touch --date=\"$REFERENCE_DATETIME\"\n+  #\n+  cd ppcoin\n+  mkdir -p $OUTDIR/src\n+  git archive HEAD | tar -x -C $OUTDIR/src\n+  cp $OUTDIR/src/doc/README_windows.txt $OUTDIR/readme.txt\n+  cp $OUTDIR/src/COPYING $OUTDIR/license.txt\n+  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n+  export FAKETIME=$REFERENCE_DATETIME\n+  export TZ=UTC\n+  $HOME/qt/src/bin/qmake -spec unsupported/win32-g++-cross MINIUPNPC_LIB_PATH=$HOME/build/miniupnpc MINIUPNPC_INCLUDE_PATH=$HOME/build/ BDB_LIB_PATH=$HOME/build/db-4.8.30.NC/build_unix BDB_INCLUDE_PATH=$HOME/build/db-4.8.30.NC/build_unix BOOST_LIB_PATH=$HOME/build/boost_1_47_0/stage/lib BOOST_INCLUDE_PATH=$HOME/build/boost_1_47_0 BOOST_LIB_SUFFIX=-mt-s BOOST_THREAD_LIB_SUFFIX=_win32-mt-s OPENSSL_LIB_PATH=$HOME/build/openssl-1.0.1b OPENSSL_INCLUDE_PATH=$HOME/build/openssl-1.0.1b/include QRENCODE_LIB_PATH=$HOME/build/qrencode-3.2.0/.libs QRENCODE_INCLUDE_PATH=$HOME/build/qrencode-3.2.0 USE_QRCODE=1 INCLUDEPATH=$HOME/build DEFINES=BOOST_THREAD_USE_LIB BITCOIN_NEED_QT_PLUGINS=1 QMAKE_LRELEASE=lrelease QMAKE_CXXFLAGS=-frandom-seed=ppcoin QMAKE_LFLAGS=-frandom-seed=ppcoin USE_BUILD_INFO=1\n+  make $MAKEOPTS\n+  cp release/ppcoin-qt.exe $OUTDIR/\n+  #\n+  cd src\n+  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n+  export FAKETIME=$REFERENCE_DATETIME\n+  export TZ=UTC\n+  make -f makefile.linux-mingw $MAKEOPTS DEPSDIR=$HOME/build ppcoind.exe USE_UPNP=1 DEBUGFLAGS=\"-frandom-seed=ppcoin\"\n+  i586-mingw32msvc-strip ppcoind.exe\n+  mkdir $OUTDIR/daemon\n+  cp ppcoind.exe $OUTDIR/daemon\n+  cd ..\n+  mkdir nsis\n+  git archive HEAD | tar -x -C nsis\n+  cd nsis/src\n+  mkdir ../release\n+  cp ../../release/* ../release/\n+  cp ../../src/*.exe .\n+  makensis ../share/setup.nsi\n+  cp ../share/ppcoin-*-win32-setup.exe $OUTDIR/"
      },
      {
        "sha": "340de5e5a27ff852a00fc7faa70e741e95cda4c2",
        "filename": "contrib/gitian-descriptors/gitian.yml",
        "status": "added",
        "additions": 56,
        "deletions": 0,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-descriptors/gitian.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-descriptors/gitian.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian.yml?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,56 @@\n+---\n+name: \"ppcoin\"\n+suites:\n+- \"lucid\"\n+architectures:\n+- \"i386\"\n+- \"amd64\"\n+packages: \n+- \"libdb4.8++-dev\"\n+- \"qt4-qmake\"\n+- \"libqt4-dev\"\n+- \"libboost-system-dev\"\n+- \"libboost-filesystem-dev\"\n+- \"libboost-program-options-dev\"\n+- \"libboost-thread-dev\"\n+- \"libssl-dev\"\n+- \"git-core\"\n+- \"unzip\"\n+- \"pkg-config\"\n+- \"libpng12-dev\"\n+reference_datetime: \"2011-01-30 00:00:00\"\n+remotes:\n+- \"url\": \"https://github.com/ppcoin/ppcoin.git\"\n+  \"dir\": \"ppcoin\"\n+files:\n+- \"miniupnpc-1.6.tar.gz\"\n+- \"qrencode-3.2.0.tar.bz2\"\n+script: |\n+  INSTDIR=\"$HOME/install\"\n+  export LIBRARY_PATH=\"$INSTDIR/lib\"\n+  #\n+  tar xzf miniupnpc-1.6.tar.gz\n+  cd miniupnpc-1.6\n+  INSTALLPREFIX=$INSTDIR make $MAKEOPTS install\n+  cd ..\n+  #\n+  tar xjf qrencode-3.2.0.tar.bz2\n+  cd qrencode-3.2.0\n+  ./configure --prefix=$INSTDIR --enable-static --disable-shared\n+  make $MAKEOPTS install\n+  cd ..\n+  #\n+  cd ppcoin\n+  mkdir -p $OUTDIR/src\n+  git archive HEAD | tar -x -C $OUTDIR/src\n+  cp $OUTDIR/src/doc/README $OUTDIR\n+  cp $OUTDIR/src/COPYING $OUTDIR\n+  cd src\n+  make -f makefile.unix STATIC=1 OPENSSL_INCLUDE_PATH=\"$INSTDIR/include\" OPENSSL_LIB_PATH=\"$INSTDIR/lib\" $MAKEOPTS ppcoind USE_UPNP=1 DEBUGFLAGS=\n+  mkdir -p $OUTDIR/bin/$GBUILD_BITS\n+  install -s ppcoind $OUTDIR/bin/$GBUILD_BITS\n+  #\n+  cd ..\n+  qmake INCLUDEPATH=\"$INSTDIR/include\" LIBS=\"-L$INSTDIR/lib\" RELEASE=1 USE_QRCODE=1\n+  make $MAKEOPTS\n+  install ppcoin-qt $OUTDIR/bin/$GBUILD_BITS"
      },
      {
        "sha": "6eb76b217078170dfa731b8e54ef87118bc94fcb",
        "filename": "contrib/gitian-descriptors/qt-win32.yml",
        "status": "added",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-descriptors/qt-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-descriptors/qt-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/qt-win32.yml?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,54 @@\n+---\n+name: \"qt\"\n+suites:\n+- \"lucid\"\n+architectures:\n+- \"i386\"\n+packages: \n+- \"mingw32\"\n+- \"zip\"\n+- \"faketime\"\n+reference_datetime: \"2011-01-30 00:00:00\"\n+remotes: []\n+files:\n+- \"qt-everywhere-opensource-src-4.7.4.tar.gz\"\n+script: |\n+  INSTDIR=\"$HOME/qt/\"\n+  mkdir $INSTDIR\n+  SRCDIR=\"$INSTDIR/src/\"\n+  mkdir $SRCDIR\n+  #\n+  tar xzf qt-everywhere-opensource-src-4.7.4.tar.gz\n+  cd qt-everywhere-opensource-src-4.7.4\n+  sed 's/$TODAY/2011-01-30/' -i configure\n+  sed 's/i686-pc-mingw32-/i586-mingw32msvc-/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n+  sed --posix 's|QMAKE_CFLAGS\\t\\t= -pipe|QMAKE_CFLAGS\\t\\t= -pipe -isystem /usr/i586-mingw32msvc/include/ -frandom-seed=qtbuild|' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n+  sed 's/QMAKE_CXXFLAGS_EXCEPTIONS_ON = -fexceptions -mthreads/QMAKE_CXXFLAGS_EXCEPTIONS_ON = -fexceptions/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n+  sed 's/QMAKE_LFLAGS_EXCEPTIONS_ON = -mthreads/QMAKE_LFLAGS_EXCEPTIONS_ON = -lmingwthrd/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n+  sed --posix 's/QMAKE_MOC\\t\\t= i586-mingw32msvc-moc/QMAKE_MOC\\t\\t= moc/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n+  sed --posix 's/QMAKE_RCC\\t\\t= i586-mingw32msvc-rcc/QMAKE_RCC\\t\\t= rcc/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n+  sed --posix 's/QMAKE_UIC\\t\\t= i586-mingw32msvc-uic/QMAKE_UIC\\t\\t= uic/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n+  # ar adds timestamps to every object file included in the static library\n+  # providing -D as ar argument is supposed to solve it, but doesn't work as qmake strips off the arguments and adds -M to pass a script...\n+  # which somehow cannot be combined with other flags.\n+  # use faketime only for ar, as it confuses make/qmake into hanging sometimes\n+  sed --posix \"s|QMAKE_LIB\\t\\t= i586-mingw32msvc-ar -ru|QMAKE_LIB\\t\\t= $HOME/ar -Dr|\" -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n+  echo '#!/bin/bash' > $HOME/ar\n+  echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> $HOME/ar\n+  echo 'i586-mingw32msvc-ar \"$@\"' >> $HOME/ar\n+  chmod +x $HOME/ar\n+  #export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n+  export FAKETIME=$REFERENCE_DATETIME\n+  export TZ=UTC\n+  ./configure -prefix $INSTDIR -confirm-license -release -opensource -static -no-qt3support -xplatform unsupported/win32-g++-cross -no-multimedia -no-audio-backend -no-phonon -no-phonon-backend -no-declarative -no-script -no-scripttools -no-javascript-jit  -no-webkit -no-svg -no-xmlpatterns -no-sql-sqlite -no-nis -no-cups -no-iconv -no-dbus -no-gif -no-libtiff -opengl no -nomake examples -nomake demos -nomake docs\n+  find . -name *.prl | xargs -l sed 's|/\\.||' -i\n+  find . -name *.prl | xargs -l sed 's|/$||' -i\n+  make $MAKEOPTS install\n+  cp -a bin $SRCDIR/\n+  cd $INSTDIR\n+  find . -name *.prl | xargs -l sed 's|/$||' -i\n+  #sed 's|QMAKE_PRL_LIBS.*|QMAKE_PRL_LIBS = -lQtDeclarative -lQtScript -lQtSvg -lQtSql -lQtXmlPatterns -lQtGui -lgdi32 -lcomdlg32 -loleaut32 -limm32 -lwinmm -lwinspool -lmsimg32 -lQtNetwork -lQtCore -lole32 -luuid -lws2_32 -ladvapi32 -lshell32 -luser32 -lkernel32|' -i imports/Qt/labs/particles/qmlparticlesplugin.prl\n+\n+  # as zip stores file timestamps, use faketime to intercept stat calls to set dates for all files to reference date\n+  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n+  zip -r $OUTDIR/qt-win32-4.7.4-gitian.zip *"
      },
      {
        "sha": "fb6d9eb28423d2c8ece89179f8e67ae06fa6dc13",
        "filename": "contrib/gitian-downloader/bluematt-key.pgp",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-downloader/bluematt-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-downloader/bluematt-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/bluematt-key.pgp?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec"
      },
      {
        "sha": "71898127ba0d6c9976ab7225d8c71ffc6380b0a2",
        "filename": "contrib/gitian-downloader/devrandom-key.pgp",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-downloader/devrandom-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-downloader/devrandom-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/devrandom-key.pgp?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec"
      },
      {
        "sha": "f81f44e874707837c13446858db2fed14ad5c501",
        "filename": "contrib/gitian-downloader/gavinandresen-key.pgp",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-downloader/gavinandresen-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-downloader/gavinandresen-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/gavinandresen-key.pgp?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec"
      },
      {
        "sha": "559295109d9646f4baa3f2d7c1eb374333899fd9",
        "filename": "contrib/gitian-downloader/laanwj-key.pgp",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-downloader/laanwj-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-downloader/laanwj-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/laanwj-key.pgp?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,28 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: SKS 1.1.0\n+\n+mQENBE5UtMEBCADOUz2i9l/D8xYINCmfUDnxi+DXvX5LmZ39ZdvsoE+ugO0SRRGdIHEFO2is\n+0xezX50wXu9aneb+tEqM0BuiLo6VxaXpxrkxHpr6c4jf37SkE/H0qsi/txEUp7337y3+4HMG\n+lUjiuh802I72p1qusjsKBnmnnR0rwNouTcoDmGUDh7jpKCtzFv+2TR2dRthJn7vmmjq3+bG6\n+PYfqoFY1yHrAGT1lrDBULZsQ/NBLI2+J4oo2LYv3GCq8GNnzrovqvTvui50VSROhLrOe58o2\n+shE+sjQShAy5wYkPt1R1fQnpfx+5vf+TPnkxVwRb3h5GhCp0YL8XC/BXsd5vM4KlVH2rABEB\n+AAG0K1dsYWRpbWlyIEouIHZhbiBkZXIgTGFhbiA8bGFhbndqQGdtYWlsLmNvbT6JATgEEwEC\n+ACIFAk5UtMECGwMGCwkIBwMCBhUIAgkKCwQWAgMBAh4BAheAAAoJEHSBCwEjRsmmy6YIAK09\n+buNXyYQrJBsX16sXxEhx5QPKyF3uHJDFJv66SdnpvIkNoznsaPiRJkbTANop93FZmaGa6wVn\n+zGDiz7jPA8Dpxx5aAYPhIT+zPJAdXWM3wJ/Gio9besRNzniai8Lwi5MZ9R/5yFGBobm6/AcN\n+4sUoqA3NSV2U3I29R0Vwlzo8GVtmyi9ENSi6Oo7AcXNTRt69cxW4nAHkB+amwwDJlcAb31ex\n+bogYXPhScwqQZixRr+JBkKxBjkTXXnQypT4KI5SegYwQVYfyiZmDP7UHKe/u6pSKKbVphLg8\n+xLB5spcXse8/a2+onrbNlw6y8TXiJ++Z54PE7zztWTXf2huakeG5AQ0ETlS0wQEIAMNO3OkP\n+xoPRKWzBLcI7JRITAW+HNaLTq3uN2+4WxA57DEjbL9EDoAv+7wTkDAL40f0T+xiu6GJcLFjw\n+GJZu/tYu7+mErHjrdo+K4suCQt7w5EXCBvOLjhW4tyYMzNx8hP+oqzOW9iEC+6VV91+DYeqt\n+EkJuyVXOI4vzBlTw8uGow8aMMsCq8XVvKUZFTPsjGl197Q5B3A+ZOFCR8xqiqdPjuz6MglVV\n+oFdDNu3EZn8zkGsQlovXoE9ndVeVzx/XMNmsxFaMYsReUs253RIf1FEfgExID0fg2OnyLCjS\n+2iFW1RgajS+/saIkKl+N1iuMzJA7wMAM0plhRueOG0MtZSsAEQEAAYkBHwQYAQIACQUCTlS0\n+wQIbDAAKCRB0gQsBI0bJpmsDB/4waenn2CvSHXyomykfpwf5lMte1V5LvH3z5R2LY+1NopRv\n+LSz3iC39x69XWiTbhywDfgafnGPW4pWBOff2/bu5/A6z1Hnan1vyrRRD/hx1uMJ7S6q+bIvZ\n+iVIg1p0jH6tdIIhwX3cydhdRZHo7e9oSMgOUWsr6Ar59NRo9CENwGPE4U61HXfOnxWdrFWoA\n+XdwZczBeLxmUy6Vo6sKqv+gE4bqrtAM0sY/MsQ9cU95x+52ox/sq44lQMwd3ZBYUP7B1qbHI\n+hZSZuch6MLi5scLPeau0ZvCaljiaMeivP5+x0gWPRs0kI+9sZxInbqvrsJ6oOBJM3xYGhtn1\n+zZ7qmZR7\n+=si/k\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "aef614d0caaf85b4708fc34f8fa51e3c16c6b4cc",
        "filename": "contrib/gitian-downloader/linux-download-config",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-downloader/linux-download-config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-downloader/linux-download-config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/linux-download-config?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,38 @@\n+--- \n+name: bitcoin\n+urls:\n+- http://bitcoin.org/bitcoin-latest-linux-gitian.zip\n+rss:\n+- url: http://sourceforge.net/api/file/index/project-id/244765/mtime/desc/limit/100/rss\n+  xpath: //item/link/text()\n+  pattern: bitcoin-\\d+.\\d+.\\d+-linux-gitian.zip\n+signers:\n+  0A82509767C7D4A5D14DA2301AE1D35043E08E54:\n+    weight: 40\n+    name: BlueMatt\n+    key: bluematt\n+  BF6273FAEF7CC0BA1F562E50989F6B3048A116B5:\n+    weight: 40\n+    name: Devrandom\n+    key: devrandom\n+  E463A93F5F3117EEDE6C7316BD02942421F4889F:\n+    weight: 40\n+    name: Luke-Jr\n+    key: luke-jr\n+  D762373D24904A3E42F33B08B9A408E71DAAC974:\n+    weight: 40\n+    name: \"Pieter Wuille\"\n+    key: sipa\n+  77E72E69DA7EE0A148C06B21B34821D4944DE5F7:\n+    weight: 40\n+    name: tcatm\n+    key: tcatm\n+  01CDF4627A3B88AAE4A571C87588242FBE38D3A8:\n+    weight: 40\n+    name: \"Gavin Andresen\"\n+    key: gavinandresen\n+  71A3B16735405025D447E8F274810B012346C9A6:\n+    weight: 40\n+    name: \"Wladimir J. van der Laan\"\n+    key: laanwj\n+minimum_weight: 120"
      },
      {
        "sha": "c40917d78c512ac13414b0d9e92c59f57e6a9c77",
        "filename": "contrib/gitian-downloader/luke-jr-key.pgp",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-downloader/luke-jr-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-downloader/luke-jr-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/luke-jr-key.pgp?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec"
      },
      {
        "sha": "04d1d538bea3e61e0905f95432927ab2939de0b9",
        "filename": "contrib/gitian-downloader/richardsmith-key.gpg",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-downloader/richardsmith-key.gpg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-downloader/richardsmith-key.gpg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/richardsmith-key.gpg?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,52 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1.4.10 (GNU/Linux)\n+\n+mQINBFAsDREBEADD88DdBoGu/rMpNYWyzXNWfHI5su/JX1tfzM/pb/iSrC4ywOtZ\n+P7wCqqAB1lhuT94j2m8kpv/VSb98Q7ZURxbwY/zEQnDuifiBCj5hO4lWTdSKgmLy\n+8xVR7WHEYCscKFl92mG6tqDewnD2oX5NyJrFeXPAM9R9jBIDc2oyUVznv5Rb2YUp\n+D4rdIHbEMoe524Ucw8ez5Kxtf0OW0Zbrraq1utbcL3B99FMnoSaXq5AiGTmcI3Xm\n+Mx8T8E6I2gd6ZLEtJbgzG7B8so/0tbpGIYExzatjWEzuDEPAgAB028nNWf8q+SE+\n+G3Zo/ZrCenGYPmDKIaSlqmdhqHe22AGtn+k6gzvLVN9MHY2exIWhu2R8uw6cGCbG\n+piw7HPDR0epgf5im50rr/k9ZgELhURqDezeHCwRBFtBZd+1sLgzMocYybq7XM9e6\n+dcHRZoXamlMibKoYMp30jfyb5mVYwnOJAQNUkFxwZOJXONOvwEyO+89ep0c7H/I5\n+h/4F7UGTpRB84HpkZCK+rxOg90UpOQEAA1OKi2od5DNBtu9JnXOD8Ki9lXHaGgL2\n+H6Q+ugntvsYmcJZ22IkymZ1DPaEPJa8Y/pwovl9rYac1A1v9PFkl2XsE2EZyipmF\n+QjTSimnmvCCIXFSG7yN4iP/H/+vP8kdV2HuPfLnq7i0uIe9q9s0ogtZEpwARAQAB\n+tCVyaWNoYXJkc21pdGggPGljZWVhdHNjcmVhbUBnbWFpbC5jb20+iQI+BBMBAgAo\n+BQJQLA0RAhsDBQkSzAMABgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAKCRCiiuz9\n+atLt+MecD/9qO/1ALT4EH5MewKG6mMT9hrbsIf07Cc0uKl4/hpbElK2iEclcXdj6\n+fXyxVF0+1Vl8Bfkj47n4sL8aOmVjZ8YpFcW59GqE9Me9Sw7bPE5x8Ly2Am+NMkhz\n+myq3aJX54bzUGvBxCNwZYV46DxKjsOLrw2I/Tzt2zjzROlCW/r4IpEuFAQY5zzNv\n+YryzWuaJF27pVZH2od9X0nEfn7qBoDYWEtvlI5jfsL4HI0bd4Ws9xMrkjHKBaFaC\n+H5sxZS7mxicTRf4qeP/XKxdEI461sg28wYewnIBqYm8OEkwFS3YB51hlA1ufi3Za\n+m5sMmiut8H5jq0QXH+LWWQAADOnCbMrr3zbkaueMvLzjUsR1EtbYlpGPHXwk9eVk\n+9XckZ1hMjUl5VCBLzquuGuJonUfb5plxEDJ2MCkkkhBJ6DR3yMpjS//ogi52fwlI\n+0yltpyXUXcgURwvQ1pwpTkjbD09KqUmxViULFMLXT3e6vRc5pH9e7mja5LxSe/No\n+Kqm0RdFlM/2CMDQ0ByNUGWjAPozuxm5PeO0ypS3+tDBiLcgZnayWelsuHzR4BCmk\n+LkXiNTrIlXSJpBWsg5D99ni8VrFGLwn9PBaDrOsztfL8iDFgVUzPbizbEEAbKiYq\n+lo/qnq2nrxR7YtChJQwhKlc0NHOWmqJOp2+AIW+L1LfDiVo3wuH6XrkCDQRQLA0R\n+ARAA0e4sHZQDTZZ9DdmML1yhL9C0DqsBaDTiKQY+s9lanrjSs7HKgv8bK+gTNvng\n+/O0M1/xhSOsgepq5lpdl7h5QqGZ1oCSF3QYxCeGe85g9SKBsUFNbYwdS2JXBwO3V\n+1euBM2pNSmNL0PYiTsWylUQPymUZ4ww2n6giVYWmsEqSF/Ld/kkfODzJAP4AwBIJ\n+f+2GY+vWcvxNKES1JT98p/dlMMMXeDKqcXIIzoZbnpk5gd21oGXbMwaf9s8bK8ob\n+BMqZCORmSnG9npRSfFXDHSa2983nGPUoL8bMzeyDu/1PViclxTWtI012gYp99pRm\n+JXzGiGdBmuLItAQW5o8DWXfiiobYd5H0+PfAX62H5oXTWH1T5jblyxcyA+fYU71t\n+wCRZ93OEHv0Q/RafH6Fr+ltZVnpPmYpJ4gyWpyoP2j91N6KaVyrfbCaN0Cyv4bQG\n+JCg8Ss8UqOnsFj88KikYwRMVxJp5E6MpM0yEuIU+vrB+58yOmeNCQ+LwBNnltCmC\n+9v0YYibMbmUv4wRvScGHPAfJ3CWndRbIObXoMlLs9nayMCqpBTEDGhTKheocQdMo\n+aLt3OJsaTmFKE7iFGKImGgUdD94kbkzb7R+ZRlI9mNNiq+Kuj19CSAVdM9vttjyt\n+whPYPR6d4GNWZFS+Gg9k2Bv7O2cDYh78Go7ywuAtPkcTMv8AEQEAAYkCJQQYAQIA\n+DwUCUCwNEQIbDAUJEswDAAAKCRCiiuz9atLt+PAXEACLd967Sz06DpjMHqgHahCr\n+m1Kt13EM/mbrnoFJWePTp1JAtlzSMXKsWo7zOCC71dyI8PEfjylsZiuC3uL54DDl\n+JlQmlXa6/qi1KnqroJEkZ+YoDnIy/jiN1L3SqMVwUeQrd5N0koPZflpnoAq1np97\n+wWDwK8NqALq5VsqXhVWvXeqjDM1q9+7fO7xDQLFZ0MNhqoMBdE4QRRkw55XWJKS9\n+RI/hxDFuCJlK04eFTU/5pUSksEZZ0vl43YkXlN54qiyOvkVL2Aq9gVgvdaqGbG8x\n+kVSEtJK9XTwlo+BA/sFCMlR4NL1XCrrvv9/1SwiFAFSV4dz6Cg9ObAonNh0mbnwj\n+IaaBzS18pqRzqZg69aZzlKp6LxBYOmZTQuPiwdF0Cn/b5VNtgLKInmOvDvpHFWE2\n+H4dU3Al/B+3o1Bm24mAgLQHGFh4GN4BV1ge+Lijiz+N0sUfPsqtHaP3RNZsm/4oL\n+zyVuoSMRL+NtkB03SID7CBzrVLGWRGgeWjLfLz+wnrDGlWz0N7dKJx76nayTvsM2\n+xd81jat8FyHFFoB5D4xn+czbkCq1k3giyKqilz2NNXX0G7kUiU0D+tvIb76qP389\n+9uiMAuC5q1Ibo+k3pOZrWWHX3c9HB1Qlry9Qw57Y4ncqjRcdMf884da5mTmCjl/d\n+EwL78xfzdw9iYRRwoeP+IQ==\n+=jMKy\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "678ec7e962fae5d91f468f8bdb79a1d01adda506",
        "filename": "contrib/gitian-downloader/scottnadal-key.gpg",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-downloader/scottnadal-key.gpg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-downloader/scottnadal-key.gpg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/scottnadal-key.gpg?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,52 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1.4.10 (GNU/Linux)\n+\n+mQINBFAs/eYBEADJq87tlE9Lu4dtgzKcnLrY6m7Eab3fPL4aW+g1PC3O4rMn2jjT\n+vp4TU+DHBgt9r+DBpiK48v9fd3BNpg8mB25pDgdWtoBj64D1YxlU/NxbwnR4SGDD\n+nSCjp/Z+ZxTCjUHfAu384P9nsSvMFksVhhzgd9JXvxJzB61odjgPRVs5buJtLzrg\n+v7jJdBZPDC2R9kJIggdrrN4sWhE9o3VQ4kFMxEu3KGJSLZuGRdwr1Ni5jxpo1Hio\n+Xf1LDKJ5+kTb2YpHL9trxe9ELt3HLa5mryCVff1wwN+MBwsXdvxTjF2RXJUWbKlC\n+M78DjLCCyM5T1XPb4D0dp/olEhNqI6IrBhR9rEOVR5Rbsl49lfhQIUEDAVlogAoG\n+yzwQMO/NGOD0NUgQV/7ZIN1fpKPuipJsCId2UvzuxzjwtMf20VUI5OPKRk122OOv\n+9c91y9fI9H6rgHKcS96HLM840pkQmr00CpsEtCjtYxvOKCakCcbq4SHZSrB2gjcK\n+msY/DfEjO5An/LXh5IbEiSSgSXfCTSXMU7yB36yX4CniIDTEe044DlTwhSGUnw65\n+alTp4taaswjB+yhAWI5IXOGifFyOAFW0BhGpDHuWoevUHKYXMla9czB0Jn1VIX/E\n+bAPxi5sZKHjhhjZY6ngZAO2HXliWHXIeLvwjUdE0+AAP5B+eh7kyMV7mlQARAQAB\n+tCJzY290dG5hZGFsIDxzY290dC5uYWRhbEBnbWFpbC5jb20+iQI+BBMBAgAoBQJQ\n+LP3mAhsDBQkSzAMABgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAKCRAu6TbaW7w+\n+y477EAC9yNgDSSdSmqUVQdrPdEn1RyZl4sjAznuRk+CKffi83/ZwjZJkT12GapPF\n+9/wW/YXGGbb2wUK17xIz8ZcKCjZeSf8w0HNwFfy8bOOkewpJ3QMp+PO61KTa1sfn\n+hJvPKQTxKAM49tiq1O/x5hppKCrJjPzlH41+4rfrFk7+v5ZHusIDqxIzepS+MyNy\n+fhmCq1Pd2w/R3zHIDH7R8uuuJKDDkZhhJgQjjxGo4Mqo6UaJOHsmLNGmQi+at/Eu\n+BssrO2OHSShCvA6/fvKXN4XEFxm7w3WUylw3h47j1hXhQClqBJrLA08N7+iNqKKg\n+DX2ePpWIptwjJyqn/6UtEfFyeIBQITpxyrVoWCtdnNdo03AQpraPV8DICyxQY3e9\n+FFKkrod+XKeGqs7Lsk5mPUOQVl7KoCfmW+M1vcvEpK7wElSRUdy0Fw0s6BiYN1xH\n+baOsBIvc1KWN9x//ctJPcjxEONiPDKv1dyWUYIWieSTrFjP6aOLoe0uGkDXxxlEs\n+4X4ZAgLUXs4j62on9lsFH1pVAQOpbmVS06vmmHQTR3skG9D8s4jVn1dyJQ35I0ml\n+P0IH4DazTTld6laYptd4CqlohotME+yh9VqiQ0Tg1u6L4VwYsBN6AKGgOq+T8T0b\n+VPNK1+Si9Poq4J/wPPqUQRzxSgWbX5Ho/k+6t0R8dpne6oFGrbkCDQRQLP3mARAA\n+mIA7DN9DT1xN0uazTRXV4lqFTuG+86iPU35eUtReGcChYwq0V56bV+gywObo4fAP\n+QsynzCUvtk+8FSL++SLysIaD/VAu3YAqsI/shzA/KG77ZqgR3/E6pnkaN8aFVPRf\n+dFFbBYioXP2MkOMd2MqPSnUI5+dMKnJ4HBQvucG5yxdR7VKP9VxBwQcfZEcE+l8a\n+yRyaAr3NNDm69Qxb6TeiJlwSQvcY4FhnP9EpIW11DEIvCEKKr6X0UoWFTm7dSfLk\n+n2e1IsK1kk3Uy45KzrR/4dYB7PhEP0VjLZ4bueXMjvZW8YBUoC6emOU/3B+/j3GO\n+N+62XE9u0Vsh2uzRnOqjucn+i83Og7+1VaXVRh77giWTlDTAeJARRGa6ScmxI9Vk\n+MJgbe2oseDxTv9QF5guqLUNe0MlUZ/9SXXjou/D+L/S9Beo775sfn57gANDbaGRm\n+9795YyAHphl26Qp7es3uj99mlK7tGDHajb2JkJutMtaevGuVNN9QlUrhr7klPOAd\n+6jdAxsU9Sn/gnUBZJbCFoQlUveEjkSu24/tYoo6Oy7VgMxwt/CMhB5HzVOpY20Ym\n+BDTO9P9MBeD0/wSPyanHc+XVepXWwsp4EC5RVnJFLf+o3vmeQYqiF0qXuapLmLnK\n+XqSD+M+uIr15XxTLLx9vsjUVN/xkLu7DCgyVeRA3ytUAEQEAAYkCJQQYAQIADwUC\n+UCz95gIbDAUJEswDAAAKCRAu6TbaW7w+yxsEEACu+7g6trtjYQZ3FStCK8OZOAJl\n+jefUONgZX8woSSmyeVlg5Ex9cSvAgfOhiM2J2+K8aI53woOsiE3LihElaX+Qi+hE\n+GgjsFdd6lNn3i5gFydDHs6uLvtVAXxAOOOaXWT/ucsTgBRGcY4H1QYlkTGD8Xsf8\n+qyUOzP/s8RQbvIrGrQtLN3O9r8wDBzDdZZjp/IZZaY6VT1r3AvF2mX+ip8/OqxNc\n+Yd3qxf8s7Kyn0eChSq1DAp83XMWxCje2EwXXzDA7Jd0pMAppWevFks4INGyCxz+9\n+jOZ4Ris2a907ShWmIg8bw40r5L69j59qPk0fr44X6XVguN9zmKpLV5fyY88Qy9iq\n+8uy/3UVprZ0LnPbBXhbDsFkgiDOo2zCJfaVhPirMlpPJg/T5pFyAt+klrq6bD+tD\n+50Hh9gOpXXg58bELJhOtDUCV6Froc99LeqoBvlKJWqr58QguO2mn1cFJcP+nVzxz\n+DBpB/dWsmQst/NQ3YlgfVr6CcgqlCqVI4yNT91Q5Ns8/pdkcUBIVDUC+4oyKwA4n\n+XZMmydPJDdUiluwVSeIw0N/jiZhBJvMJHlOQ3xmb8In0WXcnE5JbibCITTN/T224\n+jL14ObF+aMWlFanqRDUwllEQFv0Wa9dgTaHzxl+l9Ojw+YaYt/96UTtEJaMaxmww\n+JzdBFnCP7RoNHIQ20A==\n+=CQsQ\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "a52a5deb1b6c4691bb7073fc819080f66df6d2f2",
        "filename": "contrib/gitian-downloader/sipa-key.pgp",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-downloader/sipa-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-downloader/sipa-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/sipa-key.pgp?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec"
      },
      {
        "sha": "16b2a40b3c4d7355411de311f313d76313e0ea5f",
        "filename": "contrib/gitian-downloader/sunnyking-key.gpg",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-downloader/sunnyking-key.gpg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-downloader/sunnyking-key.gpg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/sunnyking-key.gpg?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,52 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1.4.10 (GNU/Linux)\n+\n+mQINBFAsDOMBEACysMqtJfC7ikO2o+ioQZvHSSbL2R2zdgYxPjtQvLqbNMiJyV3q\n+vwXGWh0Z3eGu/cpHvfN6mguwHqgh319AtU6wiOHX/1yGMf2MUNFhoh8RlDWhZ+ba\n+gMTv7pcZKE2Ca7JgDtLNWd+NpjYrlGDSEEFl2vTohKKd+V7hRjyMc8iLkLjVdtdd\n+OTuFQeyNB8DUMUr3GuaPr52RgidZdMbJ0QSnEQeN9/ZTYjmYfREO+mal+2G/OKMk\n+6naUcGrhwHimc02WDddkqMhe5eZsU3XG+WqrD5NkN3my72XjkqSE1++k2+XgnOon\n+pUOciWfF3R3RBlOn0MlfKvNa/GXZ7PFxke3tkxdym8BV10l8spV++tPuhxovR7Gp\n+XG8Mt66uxlFc4S9wTg5FJilk2W75LK+FjFLAk9gJ24IHUawdSpLdCM+a4/JL1Ys+\n+CQUuQA06Xdq3x8iuZSduRrnLeFEkM/F6JmyH22L8b5ptIm/wgjCaa+R/8P5ROO/E\n+FM1z7sw2RK12ZNPqwrNysePSVze2MGNdPnmb2KDcxSlxoK6Nzcef5xGkP/WwdBnd\n+WN2iA70I0S8DEywpY3hrJ4YIDg+SvCsoRIBH90PUORQ5Uhfj15QbmT2bZrqoFaDY\n+1+dWmijsPJ6+6MYjDWte/WVDSqTJEa22R/SAjGETGmUig7OqE7FFaQFLPwARAQAB\n+tCNzdW5ueWtpbmcgPHN1bm55a2luZzk5OTlAZ21haWwuY29tPokCPgQTAQIAKAUC\n+UCwM4wIbAwUJEswDAAYLCQgHAwIGFQgCCQoLBBYCAwECHgECF4AACgkQGPNEBNK5\n+Xmp4hg//f/rUs1ABrsd7ciHN0ByOH/WKdlUNNvf8jua86mHdPcHAFtZ3HC8ICVLe\n+7TAUMEgQ1Vsmk1QBILCaE50cD9iya4uCYCpBN6RZXUd09Te+ugb+VUYda4NmVbF+\n+ZYidDjLwFZ3MV4uXZLWMGnxVDYVrBDHdfvFkZvi+/thtEME+Ea84diBZcAW/ncUb\n+AMNxNsmOTlTcPuB47UZVxg2vSJWkJe9O6IpuF782+49O14hsxidPMV+BKOaYWwoj\n+wGlJ+NDkobaQ/a0lI0aGHL1KXA58mNMB0i7SoYB8YJMfL2+lx0AZsvxaqFmuMcPf\n+zo7I9UCyf/gHorQaxsbz2/LUfpFL4T7IWt9IJkVe8TT9KQV8T0l9uUaQtX3iLwqQ\n+IRJWdQZMpnENhEgkSLRSkmCV/162ksYoboSpfI3Qhz1h0yqnwHAGBKSbE/2IGVo5\n+3m/27xUFy5+7WeiON7DelYS6mx4UiAkhSWj4/u60YNnq5eTAYQFqawtSwIiO9pLH\n+C1gqOCoakESdFCQfABNsI6paIkfTylZhLd20qrr9qvBfvOgpMRXbO6xBPYp92/UK\n+9uRkFFCJORLBUl9saLfZa4Hw1CcY06IA3XXBx2/kp42aeAnWrfzqLvXwFZGtOJie\n+ajQsJUeDLFjbsYmw9FP8izK2H6plEa3PLFDz2gP+MSLZ5+13eES5Ag0EUCwM4wEQ\n+AMTFatCCzaUPwFpM9GyC7JwIWofDRpZBigXnzTC8RwHnb1ruWliFUkTEeSB8z7pC\n+3DaQ+owf0TUqj0c8Ui3SVfCcQqIJuWBycxxUnSaqWvz7wRaRN+WG4gaWgA2z7k4Q\n+CMmVhbxTaaZ67rfqtFOKM7EaIqOBE+AKg5BCCrxnja/xR0eZxRLwZKXqfakgqXy8\n+HaWOzLPU6zMheTXu4YW5S6jvZOaMRkKI5xEUdQf/UPYkwYM6PaA/o70rTSGuQ/mc\n+zwFZp7FxKqKINPBSJLu1CjhnnrZM37y26I5O+nErDTinvYg5Rkq5wV3gMNbzpOdA\n+qPdw2qkVwKWDErNrA9amKuM0/fpvu/kXkGnfkugvt3Rokc3MQO2u5HI1eO571zaV\n+GoDt1oYjpKPuu6JMe2b5D1fLhyHicGaH8V2vpJi6+01Ww09srKemox54J4Z/Xjw6\n+gyaWuPkCHO3roNjeGMtzbbJeOYEZC/AMTuqmnv3gHXENgrxKjCkkGddH8t7nZUNT\n+zmTMHrqOzhacRIp/6jpKCNXea2FaeRQECtDD2awNxUpmFFQeGpXJGsGc/GYHqvtV\n+HxWOiio1BpHhjCySHCYpqsq/GtGVdxNVz6o7H0/i4wipT7Q2dKVKbSuapaqI01jv\n+40019gtjOV7Gw8fX0MLt3ViCQVHpDxdMN/vkumw9YKA1ABEBAAGJAiUEGAECAA8F\n+AlAsDOMCGwwFCRLMAwAACgkQGPNEBNK5XmpymA//UXydFKX11RGloxzMfdgoFvjw\n+mNoZeS5Sv22hpsS2XswqAIbGdI/s2PbEzLv6nn0ck1PUFn9wL+TxB9GF2wWelpI4\n+qe1mKsedJbj9PG6Wx2Invn6IcEInMrSLspBWiJJL2eP4y1hjAGG4v1wxPXQ4/FNe\n+OvXzAwShz79nVY35MDPBpL/dlhRJAIe/T7pYiI/HB8p4bI9MbtJcfp61oRPt17UC\n+vIQFnKKkwPT99i3PsOqAa8mVa2Ae4EElHG844Hr89ptHrGjudssfBf4kOaENMQqE\n+MFlyGaT9CLrD/2Qs/rXqFz3VAQykw/Cuw0kiRJjS5xKZZjVbz3Zd9suklk6YkSpI\n+jLzcPPON8nC6wvtUus5d0gtQeGx2DaX9n2+ubKlZgTSvT41PO/2Th9o3CgptHYJT\n+59ncrZP515yd0ZMknZ9bFt9BaE3V17hblOjFXoFqmAhwXyHQD9Ffd62AO1h2JNx5\n+BAr4D7VyxJ3WX1yJFtdGsU7iD6ko4HahRepfp8UMtyVRLWVPGVmNq38Tozb4dhyh\n+fk3MxiatbEXQZbvFVr8WfGoNOIXB4Kg68NGxwZv6Jd5lobDOQjVYOykD2UpuOXmY\n+VRanFk5eIy0UWYAwUNP+XnjGHdwtX4ZYh+O4wDnWEZd4soVMXzOBuyWTSKahHhZi\n+KIjGheFAFTRFLgBmol4=\n+=Qxzm\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "baaec76b8c656a04beb4a91155dff40658c87bd7",
        "filename": "contrib/gitian-downloader/tcatm-key.pgp",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-downloader/tcatm-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-downloader/tcatm-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/tcatm-key.pgp?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec"
      },
      {
        "sha": "0f7032e6438c9529c58837f765497629ee03b462",
        "filename": "contrib/gitian-downloader/win32-download-config",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-downloader/win32-download-config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/gitian-downloader/win32-download-config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/win32-download-config?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,38 @@\n+--- \n+name: bitcoin\n+urls:\n+- http://bitcoin.org/bitcoin-latest-win32-gitian.zip\n+rss:\n+- url: http://sourceforge.net/api/file/index/project-id/244765/mtime/desc/limit/100/rss\n+  xpath: //item/link/text()\n+  pattern: bitcoin-\\d+.\\d+.\\d+-win32-gitian.zip\n+signers:\n+  0A82509767C7D4A5D14DA2301AE1D35043E08E54:\n+    weight: 40\n+    name: BlueMatt\n+    key: bluematt\n+  BF6273FAEF7CC0BA1F562E50989F6B3048A116B5:\n+    weight: 40\n+    name: Devrandom\n+    key: devrandom\n+  E463A93F5F3117EEDE6C7316BD02942421F4889F:\n+    weight: 40\n+    name: Luke-Jr\n+    key: luke-jr\n+  D762373D24904A3E42F33B08B9A408E71DAAC974:\n+    weight: 40\n+    name: \"Pieter Wuille\"\n+    key: sipa\n+  77E72E69DA7EE0A148C06B21B34821D4944DE5F7:\n+    weight: 40\n+    name: tcatm\n+    key: tcatm\n+  01CDF4627A3B88AAE4A571C87588242FBE38D3A8:\n+    weight: 40\n+    name: \"Gavin Andresen\"\n+    key: gavinandresen\n+  71A3B16735405025D447E8F274810B012346C9A6:\n+    weight: 40\n+    name: \"Wladimir J. van der Laan\"\n+    key: laanwj\n+minimum_weight: 120"
      },
      {
        "sha": "a9339c8bdababb0880e97622004caddd9aea40c5",
        "filename": "contrib/gitian-keys/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/gitian-keys/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/gitian-keys/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/README.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,26 +0,0 @@\n-## PGP keys of Gitian builders and Developers\n-\n-The keys.txt contains the public keys of Gitian builders and active developers.\n-\n-The keys are mainly used to sign git commits or the build results of Gitian\n-builds.\n-\n-The most recent version of each pgp key can be found on most pgp key servers.\n-\n-Fetch the latest version from the key server to see if any key was revoked in\n-the meantime.\n-To fetch the latest version of all pgp keys in your gpg homedir,\n-\n-```sh\n-gpg --refresh-keys\n-```\n-\n-To fetch keys of Gitian builders and active developers, feed the list of\n-fingerprints of the primary keys into gpg:\n-\n-```sh\n-while read fingerprint keyholder_name; do gpg --keyserver hkp://subset.pool.sks-keyservers.net --recv-keys ${fingerprint}; done < ./keys.txt\n-```\n-\n-Add your key to the list if you provided Gitian signatures for two major or\n-minor releases of Bitcoin Core."
      },
      {
        "sha": "593fba1d0915fb8ad7e3c246e14f5dcbf4e5b1de",
        "filename": "contrib/gitian-keys/keys.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 30,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/gitian-keys/keys.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/gitian-keys/keys.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/keys.txt?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,30 +0,0 @@\n-617C90010B3BD370B0AC7D424BB42E31C79111B8 Akira Takizawa\n-E944AE667CF960B1004BC32FCA662BE18B877A60 Andreas Schildbach\n-152812300785C96444D3334D17565732E08E5E41 Andrew Chow\n-912FD3228387123DC97E0E57D5566241A0295FA9 BtcDrak\n-C519EBCF3B926298946783EFF6430754120EC2F4 Christian Decker (cdecker)\n-F20F56EF6A067F70E8A5C99FFF95FAA971697405 centaur\n-C060A6635913D98A3587D7DB1C2491FFEB0EF770 Cory Fields\n-BF6273FAEF7CC0BA1F562E50989F6B3048A116B5 Dev Random\n-9A1689B60D1B3CCE9262307A2F40A9BF167FBA47 Erik Mossberg (erkmos)\n-D35176BE9264832E4ACA8986BF0792FBE95DC863 fivepiece\n-01CDF4627A3B88AAE4A571C87588242FBE38D3A8 Gavin Andresen\n-D3CC177286005BB8FF673294C5242A1AB3936517 jl2012\n-32EE5C4C3FA15CCADB46ABE529D4BCB6416F53EC Jonas Schnelli\n-4B4E840451149DD7FB0D633477DFAB5C3108B9A8 Jorge Timon\n-C42AFF7C61B3E44A1454CD3557AF762DB3353322 Karl-Johan Alm (kallewoof)\n-E463A93F5F3117EEDE6C7316BD02942421F4889F Luke Dashjr\n-B8B3F1C0E58C15DB6A81D30C3648A882F4316B9B Marco Falke\n-07DF3E57A548CCFB7530709189BBB8663E2E65CE Matt Corallo (BlueMatt)\n-CA03882CB1FC067B5D3ACFE4D300116E1C875A3D MeshCollider\n-E777299FC265DD04793070EB944D35F9AC3DB76A Michael Ford\n-9692B91BBF0E8D34DFD33B1882C5C009628ECF0C Michagogo\n-77E72E69DA7EE0A148C06B21B34821D4944DE5F7 Nils Schneider\n-D62A803E27E7F43486035ADBBCD04D8E9CCCAC2A Paul Rabahy\n-37EC7D7B0A217CDB4B4E007E7FAB114267E4FA04 Peter Todd\n-D762373D24904A3E42F33B08B9A408E71DAAC974 Pieter Wuille (Location: Leuven, Belgium)\n-133EAC179436F14A5CF1B794860FEB804E669320 Pieter Wuille\n-ED9BDF7AD6A55E232E84524257FF9BDBCC301009 Sjors Provoost\n-AEC1884398647C47413C1C3FB1179EB7347DC10D Warren Togami\n-79D00BAC68B56D422F945A8F8E3A8F3247DBCBBF Willy Ko\n-71A3B16735405025D447E8F274810B012346C9A6 Wladimir J. van der Laan"
      },
      {
        "sha": "1a949f3c078bec11afeb991ccc28dac640481082",
        "filename": "contrib/init/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/init/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/init/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/README.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,12 +0,0 @@\n-Sample configuration files for:\n-```\n-SystemD: bitcoind.service\n-Upstart: bitcoind.conf\n-OpenRC:  bitcoind.openrc\n-         bitcoind.openrcconf\n-CentOS:  bitcoind.init\n-OS X:    org.bitcoin.bitcoind.plist\n-```\n-have been made available to assist packagers in creating node packages here.\n-\n-See doc/init.md for more information."
      },
      {
        "sha": "de4ea0ed522d1c6d764e5e05a5939e097b420e86",
        "filename": "contrib/init/bitcoind.conf",
        "status": "removed",
        "additions": 0,
        "deletions": 65,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/init/bitcoind.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/init/bitcoind.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.conf?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,65 +0,0 @@\n-description \"Bitcoin Core Daemon\"\n-\n-start on runlevel [2345]\n-stop on starting rc RUNLEVEL=[016]\n-\n-env BITCOIND_BIN=\"/usr/bin/bitcoind\"\n-env BITCOIND_USER=\"bitcoin\"\n-env BITCOIND_GROUP=\"bitcoin\"\n-env BITCOIND_PIDDIR=\"/var/run/bitcoind\"\n-# upstart can't handle variables constructed with other variables\n-env BITCOIND_PIDFILE=\"/var/run/bitcoind/bitcoind.pid\"\n-env BITCOIND_CONFIGFILE=\"/etc/bitcoin/bitcoin.conf\"\n-env BITCOIND_DATADIR=\"/var/lib/bitcoind\"\n-\n-expect fork\n-\n-respawn\n-respawn limit 5 120\n-kill timeout 60\n-\n-pre-start script\n-    # this will catch non-existent config files\n-    # bitcoind will check and exit with this very warning, but it can do so\n-    # long after forking, leaving upstart to think everything started fine.\n-    # since this is a commonly encountered case on install, just check and\n-    # warn here.\n-    if ! grep -qs '^rpcpassword=' \"$BITCOIND_CONFIGFILE\" ; then\n-        echo \"ERROR: You must set a secure rpcpassword to run bitcoind.\"\n-        echo \"The setting must appear in $BITCOIND_CONFIGFILE\"\n-        echo\n-        echo \"This password is security critical to securing wallets \"\n-        echo \"and must not be the same as the rpcuser setting.\"\n-        echo \"You can generate a suitable random password using the following \"\n-        echo \"command from the shell:\"\n-        echo\n-        echo \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n-        echo\n-        echo \"It is recommended that you also set alertnotify so you are \"\n-        echo \"notified of problems:\"\n-        echo\n-        echo \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\\n-            \"admin@foo.com\"\n-        echo\n-        exit 1\n-    fi\n-\n-    mkdir -p \"$BITCOIND_PIDDIR\"\n-    chmod 0755 \"$BITCOIND_PIDDIR\"\n-    chown $BITCOIND_USER:$BITCOIND_GROUP \"$BITCOIND_PIDDIR\"\n-    chown $BITCOIND_USER:$BITCOIND_GROUP \"$BITCOIND_CONFIGFILE\"\n-    chmod 0660 \"$BITCOIND_CONFIGFILE\"\n-end script\n-\n-exec start-stop-daemon \\\n-    --start \\\n-    --pidfile \"$BITCOIND_PIDFILE\" \\\n-    --chuid $BITCOIND_USER:$BITCOIND_GROUP \\\n-    --exec \"$BITCOIND_BIN\" \\\n-    -- \\\n-    -pid=\"$BITCOIND_PIDFILE\" \\\n-    -conf=\"$BITCOIND_CONFIGFILE\" \\\n-    -datadir=\"$BITCOIND_DATADIR\" \\\n-    -disablewallet \\\n-    -daemon\n-"
      },
      {
        "sha": "db5061874b3a923278fa11d4f3117fca19da1bcc",
        "filename": "contrib/init/bitcoind.init",
        "status": "removed",
        "additions": 0,
        "deletions": 67,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/init/bitcoind.init",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/init/bitcoind.init",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.init?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,67 +0,0 @@\n-#!/bin/bash\n-#\n-#  bitcoind The bitcoin core server.\n-#\n-#\n-# chkconfig: 345 80 20\n-# description: bitcoind\n-# processname: bitcoind\n-#\n-\n-# Source function library.\n-. /etc/init.d/functions\n-\n-# you can override defaults in /etc/sysconfig/bitcoind, see below\n-if [ -f /etc/sysconfig/bitcoind ]; then\n-        . /etc/sysconfig/bitcoind\n-fi\n-\n-RETVAL=0\n-\n-prog=bitcoind\n-# you can override the lockfile via BITCOIND_LOCKFILE in /etc/sysconfig/bitcoind\n-lockfile=${BITCOIND_LOCKFILE-/var/lock/subsys/bitcoind}\n-\n-# bitcoind defaults to /usr/bin/bitcoind, override with BITCOIND_BIN\n-bitcoind=${BITCOIND_BIN-/usr/bin/bitcoind}\n-\n-# bitcoind opts default to -disablewallet, override with BITCOIND_OPTS\n-bitcoind_opts=${BITCOIND_OPTS--disablewallet}\n-\n-start() {\n-    echo -n $\"Starting $prog: \"\n-    daemon $DAEMONOPTS $bitcoind $bitcoind_opts\n-    RETVAL=$?\n-    echo\n-    [ $RETVAL -eq 0 ] && touch $lockfile\n-    return $RETVAL\n-}\n-\n-stop() {\n-    echo -n $\"Stopping $prog: \"\n-    killproc $prog\n-    RETVAL=$?\n-    echo\n-    [ $RETVAL -eq 0 ] && rm -f $lockfile\n-    return $RETVAL\n-}\n-\n-case \"$1\" in\n-    start)\n-        start\n-        ;;\n-    stop)\n-        stop\n-        ;;\n-    status)\n-        status $prog\n-        ;;\n-    restart)\n-        stop\n-        start\n-        ;;\n-    *)\n-        echo \"Usage: service $prog {start|stop|status|restart}\"\n-        exit 1\n-        ;;\n-esac"
      },
      {
        "sha": "86222295dbe052a5c6455e80dcf830161dccc05f",
        "filename": "contrib/init/bitcoind.openrc",
        "status": "removed",
        "additions": 0,
        "deletions": 92,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/init/bitcoind.openrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/init/bitcoind.openrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrc?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,92 +0,0 @@\n-#!/sbin/openrc-run\n-\n-# backward compatibility for existing gentoo layout \n-#\n-if [ -d \"/var/lib/bitcoin/.bitcoin\" ]; then\n-\tBITCOIND_DEFAULT_DATADIR=\"/var/lib/bitcoin/.bitcoin\"\n-else\n-\tBITCOIND_DEFAULT_DATADIR=\"/var/lib/bitcoind\"\n-fi\n-\n-BITCOIND_CONFIGFILE=${BITCOIND_CONFIGFILE:-/etc/bitcoin/bitcoin.conf}\n-BITCOIND_PIDDIR=${BITCOIND_PIDDIR:-/var/run/bitcoind}\n-BITCOIND_PIDFILE=${BITCOIND_PIDFILE:-${BITCOIND_PIDDIR}/bitcoind.pid}\n-BITCOIND_DATADIR=${BITCOIND_DATADIR:-${BITCOIND_DEFAULT_DATADIR}}\n-BITCOIND_USER=${BITCOIND_USER:-${BITCOIN_USER:-bitcoin}}\n-BITCOIND_GROUP=${BITCOIND_GROUP:-bitcoin}\n-BITCOIND_BIN=${BITCOIND_BIN:-/usr/bin/bitcoind}\n-BITCOIND_NICE=${BITCOIND_NICE:-${NICELEVEL:-0}}\n-BITCOIND_OPTS=\"${BITCOIND_OPTS:-${BITCOIN_OPTS}}\"\n-\n-name=\"Bitcoin Core Daemon\"\n-description=\"Bitcoin cryptocurrency P2P network daemon\"\n-\n-command=\"/usr/bin/bitcoind\"\n-command_args=\"-pid=\\\"${BITCOIND_PIDFILE}\\\" \\\n-\t\t-conf=\\\"${BITCOIND_CONFIGFILE}\\\" \\\n-\t\t-datadir=\\\"${BITCOIND_DATADIR}\\\" \\\n-\t\t-daemon \\\n-\t\t${BITCOIND_OPTS}\"\n-\n-required_files=\"${BITCOIND_CONFIGFILE}\"\n-start_stop_daemon_args=\"-u ${BITCOIND_USER} \\\n-\t\t\t-N ${BITCOIND_NICE} -w 2000\"\n-pidfile=\"${BITCOIND_PIDFILE}\"\n-\n-# The retry schedule to use when stopping the daemon. Could be either\n-# a timeout in seconds or multiple signal/timeout pairs (like\n-# \"SIGKILL/180 SIGTERM/300\")\n-retry=\"${BITCOIND_SIGTERM_TIMEOUT}\"\n-\n-depend() {\n-\tneed localmount net\n-}\n-\n-# verify\n-# 1) that the datadir exists and is writable (or create it)\n-# 2) that a directory for the pid exists and is writable\n-# 3) ownership and permissions on the config file\n-start_pre() {\n-\tcheckpath \\\n-\t-d \\\n-\t--mode 0750 \\\n-\t--owner \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n-\t\"${BITCOIND_DATADIR}\"\n-\n-\tcheckpath \\\n-\t-d \\\n-\t--mode 0755 \\\n-\t--owner \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n-\t\"${BITCOIND_PIDDIR}\"\n-\n-\tcheckpath -f \\\n-\t-o ${BITCOIND_USER}:${BITCOIND_GROUP} \\\n-\t-m 0660 \\\n-\t${BITCOIND_CONFIGFILE}\n-\n-\tcheckconfig || return 1\n-}\n-\n-checkconfig()\n-{\n-\tif ! grep -qs '^rpcpassword=' \"${BITCOIND_CONFIGFILE}\" ; then\n-\t\teerror \"\"\n-\t\teerror \"ERROR: You must set a secure rpcpassword to run bitcoind.\"\n-\t\teerror \"The setting must appear in ${BITCOIND_CONFIGFILE}\"\n-\t\teerror \"\"\n-\t\teerror \"This password is security critical to securing wallets \"\n-\t\teerror \"and must not be the same as the rpcuser setting.\"\n-\t\teerror \"You can generate a suitable random password using the following \"\n-\t\teerror \"command from the shell:\"\n-\t\teerror \"\"\n-\t\teerror \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n-\t\teerror \"\"\n-\t\teerror \"It is recommended that you also set alertnotify so you are \"\n-\t\teerror \"notified of problems:\"\n-\t\teerror \"\"\n-\t\teerror \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\\n-\t\t\t\"admin@foo.com\"\n-\t\teerror \"\"\n-\t\treturn 1\n-\tfi\n-}"
      },
      {
        "sha": "f70e25cb5fdd29e49de2c89b81bd92633e5b93df",
        "filename": "contrib/init/bitcoind.openrcconf",
        "status": "removed",
        "additions": 0,
        "deletions": 33,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/init/bitcoind.openrcconf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/init/bitcoind.openrcconf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrcconf?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,33 +0,0 @@\n-# /etc/conf.d/bitcoind: config file for /etc/init.d/bitcoind\n-\n-# Config file location\n-#BITCOIND_CONFIGFILE=\"/etc/bitcoin/bitcoin.conf\"\n-\n-# What directory to write pidfile to?  (created and owned by $BITCOIND_USER)\n-#BITCOIND_PIDDIR=\"/var/run/bitcoind\"\n-\n-# What filename to give the pidfile\n-#BITCOIND_PIDFILE=\"${BITCOIND_PIDDIR}/bitcoind.pid\"\n-\n-# Where to write bitcoind data (be mindful that the blockchain is large)\n-#BITCOIND_DATADIR=\"/var/lib/bitcoind\"\n-\n-# User and group to own bitcoind process\n-#BITCOIND_USER=\"bitcoin\"\n-#BITCOIND_GROUP=\"bitcoin\"\n-\n-# Path to bitcoind executable\n-#BITCOIND_BIN=\"/usr/bin/bitcoind\"\n-\n-# Nice value to run bitcoind under\n-#BITCOIND_NICE=0\n-\n-# Additional options (avoid -conf and -datadir, use flags above)\n-#BITCOIND_OPTS=\"\"\n-\n-# The timeout in seconds OpenRC will wait for bitcoind to terminate\n-# after a SIGTERM has been raised.\n-# Note that this will be mapped as argument to start-stop-daemon's\n-# '--retry' option, which means you can specify a retry schedule\n-# here. For more information see man 8 start-stop-daemon.\n-BITCOIND_SIGTERM_TIMEOUT=60"
      },
      {
        "sha": "877abafd19260e1707e6b1e370cde8b2e088a599",
        "filename": "contrib/init/bitcoind.service",
        "status": "removed",
        "additions": 0,
        "deletions": 44,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/init/bitcoind.service",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/init/bitcoind.service",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.service?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,44 +0,0 @@\n-# It is not recommended to modify this file in-place, because it will\n-# be overwritten during package upgrades. If you want to add further\n-# options or overwrite existing ones then use\n-# $ systemctl edit bitcoind.service\n-# See \"man systemd.service\" for details.\n-\n-# Note that almost all daemon options could be specified in\n-# /etc/bitcoin/bitcoin.conf\n-\n-[Unit]\n-Description=Bitcoin daemon\n-After=network.target\n-\n-[Service]\n-ExecStart=/usr/bin/bitcoind -daemon -conf=/etc/bitcoin/bitcoin.conf -pid=/run/bitcoind/bitcoind.pid\n-# Creates /run/bitcoind owned by bitcoin\n-RuntimeDirectory=bitcoind\n-User=bitcoin\n-Type=forking\n-PIDFile=/run/bitcoind/bitcoind.pid\n-Restart=on-failure\n-\n-# Hardening measures\n-####################\n-\n-# Provide a private /tmp and /var/tmp.\n-PrivateTmp=true\n-\n-# Mount /usr, /boot/ and /etc read-only for the process.\n-ProtectSystem=full\n-\n-# Disallow the process and all of its children to gain\n-# new privileges through execve().\n-NoNewPrivileges=true\n-\n-# Use a new /dev namespace only populated with API pseudo devices\n-# such as /dev/null, /dev/zero and /dev/random.\n-PrivateDevices=true\n-\n-# Deny the creation of writable and executable memory mappings.\n-MemoryDenyWriteExecute=true\n-\n-[Install]\n-WantedBy=multi-user.target"
      },
      {
        "sha": "95b5342f1ef9dc9b9bb66538d0cc842d02951d62",
        "filename": "contrib/init/org.bitcoin.bitcoind.plist",
        "status": "removed",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/init/org.bitcoin.bitcoind.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/init/org.bitcoin.bitcoind.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/org.bitcoin.bitcoind.plist?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,14 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n-<plist version=\"1.0\">\n-<dict>\n-\t<key>Label</key>\n-\t<string>org.bitcoin.bitcoind</string>\n-\t<key>ProgramArguments</key>\n-\t<array>\n-\t\t<string>/usr/local/bin/bitcoind</string>\n-\t</array>\n-\t<key>RunAtLoad</key>\n-\t<true/>\n-</dict>\n-</plist>"
      },
      {
        "sha": "d315a7d3b72549a746e70fe3d015fd083c89f86d",
        "filename": "contrib/install_db4.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 86,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/install_db4.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/install_db4.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/install_db4.sh?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,86 +0,0 @@\n-#!/bin/sh\n-\n-# Install libdb4.8 (Berkeley DB).\n-\n-set -e\n-\n-if [ -z \"${1}\" ]; then\n-  echo \"Usage: ./install_db4.sh <base-dir> [<extra-bdb-configure-flag> ...]\"\n-  echo\n-  echo \"Must specify a single argument: the directory in which db4 will be built.\"\n-  echo \"This is probably \\`pwd\\` if you're at the root of the bitcoin repository.\"\n-  exit 1\n-fi\n-\n-expand_path() {\n-  echo \"$(cd \"${1}\" && pwd -P)\"\n-}\n-\n-BDB_PREFIX=\"$(expand_path ${1})/db4\"; shift;\n-BDB_VERSION='db-4.8.30.NC'\n-BDB_HASH='12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef'\n-BDB_URL=\"https://download.oracle.com/berkeley-db/${BDB_VERSION}.tar.gz\"\n-\n-check_exists() {\n-  which \"$1\" >/dev/null 2>&1\n-}\n-\n-sha256_check() {\n-  # Args: <sha256_hash> <filename>\n-  #\n-  if check_exists sha256sum; then\n-    echo \"${1}  ${2}\" | sha256sum -c\n-  elif check_exists sha256; then\n-    if [ \"$(uname)\" = \"FreeBSD\" ]; then\n-      sha256 -c \"${1}\" \"${2}\"\n-    else\n-      echo \"${1}  ${2}\" | sha256 -c\n-    fi\n-  else\n-    echo \"${1}  ${2}\" | shasum -a 256 -c\n-  fi\n-}\n-\n-http_get() {\n-  # Args: <url> <filename> <sha256_hash>\n-  #\n-  # It's acceptable that we don't require SSL here because we manually verify\n-  # content hashes below.\n-  #\n-  if [ -f \"${2}\" ]; then\n-    echo \"File ${2} already exists; not downloading again\"\n-  elif check_exists curl; then\n-    curl --insecure \"${1}\" -o \"${2}\"\n-  else\n-    wget --no-check-certificate \"${1}\" -O \"${2}\"\n-  fi\n-\n-  sha256_check \"${3}\" \"${2}\"\n-}\n-\n-mkdir -p \"${BDB_PREFIX}\"\n-http_get \"${BDB_URL}\" \"${BDB_VERSION}.tar.gz\" \"${BDB_HASH}\"\n-tar -xzvf ${BDB_VERSION}.tar.gz -C \"$BDB_PREFIX\"\n-cd \"${BDB_PREFIX}/${BDB_VERSION}/\"\n-\n-# Apply a patch necessary when building with clang and c++11 (see https://community.oracle.com/thread/3952592)\n-CLANG_CXX11_PATCH_URL='https://gist.githubusercontent.com/LnL7/5153b251fd525fe15de69b67e63a6075/raw/7778e9364679093a32dec2908656738e16b6bdcb/clang.patch'\n-CLANG_CXX11_PATCH_HASH='7a9a47b03fd5fb93a16ef42235fa9512db9b0829cfc3bdf90edd3ec1f44d637c'\n-http_get \"${CLANG_CXX11_PATCH_URL}\" clang.patch \"${CLANG_CXX11_PATCH_HASH}\"\n-patch -p2 < clang.patch\n-\n-cd build_unix/\n-\n-\"${BDB_PREFIX}/${BDB_VERSION}/dist/configure\" \\\n-  --enable-cxx --disable-shared --disable-replication --with-pic --prefix=\"${BDB_PREFIX}\" \\\n-  \"${@}\"\n-\n-make install\n-\n-echo\n-echo \"db4 build complete.\"\n-echo\n-echo 'When compiling bitcoind, run `./configure` in the following way:'\n-echo\n-echo \"  export BDB_PREFIX='${BDB_PREFIX}'\"\n-echo '  ./configure BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx-4.8\" BDB_CFLAGS=\"-I${BDB_PREFIX}/include\" ...'"
      },
      {
        "sha": "2985106982788c8bfa31ee077b05e8e77ba19e72",
        "filename": "contrib/linearize/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 55,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,55 +0,0 @@\n-# Linearize\n-Construct a linear, no-fork, best version of the Bitcoin blockchain. The scripts\n-run using Python 3 but are compatible with Python 2.\n-\n-## Step 1: Download hash list\n-\n-    $ ./linearize-hashes.py linearize.cfg > hashlist.txt\n-\n-Required configuration file settings for linearize-hashes:\n-* RPC: `datadir` (Required if `rpcuser` and `rpcpassword` are not specified)\n-* RPC: `rpcuser`, `rpcpassword` (Required if `datadir` is not specified)\n-\n-Optional config file setting for linearize-hashes:\n-* RPC: `host`  (Default: `127.0.0.1`)\n-* RPC: `port`  (Default: `8332`)\n-* Blockchain: `min_height`, `max_height`\n-* `rev_hash_bytes`: If true, the written block hash list will be\n-byte-reversed. (In other words, the hash returned by getblockhash will have its\n-bytes reversed.) False by default. Intended for generation of\n-standalone hash lists but safe to use with linearize-data.py, which will output\n-the same data no matter which byte format is chosen.\n-\n-The `linearize-hashes` script requires a connection, local or remote, to a\n-JSON-RPC server. Running `bitcoind` or `bitcoin-qt -server` will be sufficient.\n-\n-## Step 2: Copy local block data\n-\n-    $ ./linearize-data.py linearize.cfg\n-\n-Required configuration file settings:\n-* `output_file`: The file that will contain the final blockchain.\n-      or\n-* `output`: Output directory for linearized `blocks/blkNNNNN.dat` output.\n-\n-Optional config file setting for linearize-data:\n-* `debug_output`: Some printouts may not always be desired. If true, such output\n-will be printed.\n-* `file_timestamp`: Set each file's last-accessed and last-modified times,\n-respectively, to the current time and to the timestamp of the most recent block\n-written to the script's blockchain.\n-* `genesis`: The hash of the genesis block in the blockchain.\n-* `input`: bitcoind blocks/ directory containing blkNNNNN.dat\n-* `hashlist`: text file containing list of block hashes created by\n-linearize-hashes.py.\n-* `max_out_sz`: Maximum size for files created by the `output_file` option.\n-(Default: `1000*1000*1000 bytes`)\n-* `netmagic`: Network magic number.\n-* `out_of_order_cache_sz`: If out-of-order blocks are being read, the block can\n-be written to a cache so that the blockchain doesn't have to be sought again.\n-This option specifies the cache size. (Default: `100*1000*1000 bytes`)\n-* `rev_hash_bytes`: If true, the block hash list written by linearize-hashes.py\n-will be byte-reversed when read by linearize-data.py. See the linearize-hashes\n-entry for more information.\n-* `split_timestamp`: Split blockchain files when a new month is first seen, in\n-addition to reaching a maximum file size (`max_out_sz`)."
      },
      {
        "sha": "2315898bf1d7561260fe3a3b5c1dd21c09ca0d9b",
        "filename": "contrib/linearize/example-linearize.cfg",
        "status": "removed",
        "additions": 0,
        "deletions": 50,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/linearize/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/linearize/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize.cfg?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,50 +0,0 @@\n-# bitcoind RPC settings (linearize-hashes)\n-rpcuser=someuser\n-rpcpassword=somepassword\n-#datadir=~/.bitcoin\n-host=127.0.0.1\n-\n-#mainnet default\n-port=8332\n-\n-#testnet default\n-#port=18332\n-\n-#regtest default\n-#port=18443\n-\n-# bootstrap.dat hashlist settings (linearize-hashes)\n-max_height=313000\n-\n-# bootstrap.dat input/output settings (linearize-data)\n-\n-# mainnet\n-netmagic=f9beb4d9\n-genesis=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n-input=/home/example/.bitcoin/blocks\n-\n-# testnet\n-#netmagic=0b110907\n-#genesis=000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\n-#input=/home/example/.bitcoin/testnet3/blocks\n-\n-# \"output\" option causes blockchain files to be written to the given location,\n-# with \"output_file\" ignored. If not used, \"output_file\" is used instead.\n-# output=/home/example/blockchain_directory\n-output_file=/home/example/Downloads/bootstrap.dat\n-hashlist=hashlist.txt\n-\n-# Maximum size in bytes of out-of-order blocks cache in memory\n-out_of_order_cache_sz = 100000000\n-\n-# Do we want the reverse the hash bytes coming from getblockhash?\n-rev_hash_bytes = False\n-\n-# On a new month, do we want to set the access and modify times of the new\n-# blockchain file?\n-file_timestamp = 0\n-# Do we want to split the blockchain files given a new month or specific height?\n-split_timestamp = 0\n-\n-# Do we want debug printouts?\n-debug_output = False"
      },
      {
        "sha": "c609e9b3363de88c61f4c5277a5215b1e1a10b3a",
        "filename": "contrib/linearize/linearize-data.py",
        "status": "removed",
        "additions": 0,
        "deletions": 321,
        "changes": 321,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/linearize/linearize-data.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/linearize/linearize-data.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-data.py?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,321 +0,0 @@\n-#!/usr/bin/env python3\n-#\n-# linearize-data.py: Construct a linear, no-fork version of the chain.\n-#\n-# Copyright (c) 2013-2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-\n-from __future__ import print_function, division\n-import struct\n-import re\n-import os\n-import os.path\n-import sys\n-import hashlib\n-import datetime\n-import time\n-from collections import namedtuple\n-from binascii import hexlify, unhexlify\n-\n-settings = {}\n-\n-def hex_switchEndian(s):\n-\t\"\"\" Switches the endianness of a hex string (in pairs of hex chars) \"\"\"\n-\tpairList = [s[i:i+2].encode() for i in range(0, len(s), 2)]\n-\treturn b''.join(pairList[::-1]).decode()\n-\n-def uint32(x):\n-\treturn x & 0xffffffff\n-\n-def bytereverse(x):\n-\treturn uint32(( ((x) << 24) | (((x) << 8) & 0x00ff0000) |\n-\t\t       (((x) >> 8) & 0x0000ff00) | ((x) >> 24) ))\n-\n-def bufreverse(in_buf):\n-\tout_words = []\n-\tfor i in range(0, len(in_buf), 4):\n-\t\tword = struct.unpack('@I', in_buf[i:i+4])[0]\n-\t\tout_words.append(struct.pack('@I', bytereverse(word)))\n-\treturn b''.join(out_words)\n-\n-def wordreverse(in_buf):\n-\tout_words = []\n-\tfor i in range(0, len(in_buf), 4):\n-\t\tout_words.append(in_buf[i:i+4])\n-\tout_words.reverse()\n-\treturn b''.join(out_words)\n-\n-def calc_hdr_hash(blk_hdr):\n-\thash1 = hashlib.sha256()\n-\thash1.update(blk_hdr)\n-\thash1_o = hash1.digest()\n-\n-\thash2 = hashlib.sha256()\n-\thash2.update(hash1_o)\n-\thash2_o = hash2.digest()\n-\n-\treturn hash2_o\n-\n-def calc_hash_str(blk_hdr):\n-\thash = calc_hdr_hash(blk_hdr)\n-\thash = bufreverse(hash)\n-\thash = wordreverse(hash)\n-\thash_str = hexlify(hash).decode('utf-8')\n-\treturn hash_str\n-\n-def get_blk_dt(blk_hdr):\n-\tmembers = struct.unpack(\"<I\", blk_hdr[68:68+4])\n-\tnTime = members[0]\n-\tdt = datetime.datetime.fromtimestamp(nTime)\n-\tdt_ym = datetime.datetime(dt.year, dt.month, 1)\n-\treturn (dt_ym, nTime)\n-\n-# When getting the list of block hashes, undo any byte reversals.\n-def get_block_hashes(settings):\n-\tblkindex = []\n-\tf = open(settings['hashlist'], \"r\")\n-\tfor line in f:\n-\t\tline = line.rstrip()\n-\t\tif settings['rev_hash_bytes'] == 'true':\n-\t\t\tline = hex_switchEndian(line)\n-\t\tblkindex.append(line)\n-\n-\tprint(\"Read \" + str(len(blkindex)) + \" hashes\")\n-\n-\treturn blkindex\n-\n-# The block map shouldn't give or receive byte-reversed hashes.\n-def mkblockmap(blkindex):\n-\tblkmap = {}\n-\tfor height,hash in enumerate(blkindex):\n-\t\tblkmap[hash] = height\n-\treturn blkmap\n-\n-# Block header and extent on disk\n-BlockExtent = namedtuple('BlockExtent', ['fn', 'offset', 'inhdr', 'blkhdr', 'size'])\n-\n-class BlockDataCopier:\n-\tdef __init__(self, settings, blkindex, blkmap):\n-\t\tself.settings = settings\n-\t\tself.blkindex = blkindex\n-\t\tself.blkmap = blkmap\n-\n-\t\tself.inFn = 0\n-\t\tself.inF = None\n-\t\tself.outFn = 0\n-\t\tself.outsz = 0\n-\t\tself.outF = None\n-\t\tself.outFname = None\n-\t\tself.blkCountIn = 0\n-\t\tself.blkCountOut = 0\n-\n-\t\tself.lastDate = datetime.datetime(2000, 1, 1)\n-\t\tself.highTS = 1408893517 - 315360000\n-\t\tself.timestampSplit = False\n-\t\tself.fileOutput = True\n-\t\tself.setFileTime = False\n-\t\tself.maxOutSz = settings['max_out_sz']\n-\t\tif 'output' in settings:\n-\t\t\tself.fileOutput = False\n-\t\tif settings['file_timestamp'] != 0:\n-\t\t\tself.setFileTime = True\n-\t\tif settings['split_timestamp'] != 0:\n-\t\t\tself.timestampSplit = True\n-\t\t# Extents and cache for out-of-order blocks\n-\t\tself.blockExtents = {}\n-\t\tself.outOfOrderData = {}\n-\t\tself.outOfOrderSize = 0 # running total size for items in outOfOrderData\n-\n-\tdef writeBlock(self, inhdr, blk_hdr, rawblock):\n-\t\tblockSizeOnDisk = len(inhdr) + len(blk_hdr) + len(rawblock)\n-\t\tif not self.fileOutput and ((self.outsz + blockSizeOnDisk) > self.maxOutSz):\n-\t\t\tself.outF.close()\n-\t\t\tif self.setFileTime:\n-\t\t\t\tos.utime(self.outFname, (int(time.time()), self.highTS))\n-\t\t\tself.outF = None\n-\t\t\tself.outFname = None\n-\t\t\tself.outFn = self.outFn + 1\n-\t\t\tself.outsz = 0\n-\n-\t\t(blkDate, blkTS) = get_blk_dt(blk_hdr)\n-\t\tif self.timestampSplit and (blkDate > self.lastDate):\n-\t\t\tprint(\"New month \" + blkDate.strftime(\"%Y-%m\") + \" @ \" + self.hash_str)\n-\t\t\tself.lastDate = blkDate\n-\t\t\tif self.outF:\n-\t\t\t\tself.outF.close()\n-\t\t\t\tif self.setFileTime:\n-\t\t\t\t\tos.utime(self.outFname, (int(time.time()), self.highTS))\n-\t\t\t\tself.outF = None\n-\t\t\t\tself.outFname = None\n-\t\t\t\tself.outFn = self.outFn + 1\n-\t\t\t\tself.outsz = 0\n-\n-\t\tif not self.outF:\n-\t\t\tif self.fileOutput:\n-\t\t\t\tself.outFname = self.settings['output_file']\n-\t\t\telse:\n-\t\t\t\tself.outFname = os.path.join(self.settings['output'], \"blk%05d.dat\" % self.outFn)\n-\t\t\tprint(\"Output file \" + self.outFname)\n-\t\t\tself.outF = open(self.outFname, \"wb\")\n-\n-\t\tself.outF.write(inhdr)\n-\t\tself.outF.write(blk_hdr)\n-\t\tself.outF.write(rawblock)\n-\t\tself.outsz = self.outsz + len(inhdr) + len(blk_hdr) + len(rawblock)\n-\n-\t\tself.blkCountOut = self.blkCountOut + 1\n-\t\tif blkTS > self.highTS:\n-\t\t\tself.highTS = blkTS\n-\n-\t\tif (self.blkCountOut % 1000) == 0:\n-\t\t\tprint('%i blocks scanned, %i blocks written (of %i, %.1f%% complete)' % \n-\t\t\t\t\t(self.blkCountIn, self.blkCountOut, len(self.blkindex), 100.0 * self.blkCountOut / len(self.blkindex)))\n-\n-\tdef inFileName(self, fn):\n-\t\treturn os.path.join(self.settings['input'], \"blk%05d.dat\" % fn)\n-\n-\tdef fetchBlock(self, extent):\n-\t\t'''Fetch block contents from disk given extents'''\n-\t\twith open(self.inFileName(extent.fn), \"rb\") as f:\n-\t\t\tf.seek(extent.offset)\n-\t\t\treturn f.read(extent.size)\n-\n-\tdef copyOneBlock(self):\n-\t\t'''Find the next block to be written in the input, and copy it to the output.'''\n-\t\textent = self.blockExtents.pop(self.blkCountOut)\n-\t\tif self.blkCountOut in self.outOfOrderData:\n-\t\t\t# If the data is cached, use it from memory and remove from the cache\n-\t\t\trawblock = self.outOfOrderData.pop(self.blkCountOut)\n-\t\t\tself.outOfOrderSize -= len(rawblock)\n-\t\telse: # Otherwise look up data on disk\n-\t\t\trawblock = self.fetchBlock(extent)\n-\n-\t\tself.writeBlock(extent.inhdr, extent.blkhdr, rawblock)\n-\n-\tdef run(self):\n-\t\twhile self.blkCountOut < len(self.blkindex):\n-\t\t\tif not self.inF:\n-\t\t\t\tfname = self.inFileName(self.inFn)\n-\t\t\t\tprint(\"Input file \" + fname)\n-\t\t\t\ttry:\n-\t\t\t\t\tself.inF = open(fname, \"rb\")\n-\t\t\t\texcept IOError:\n-\t\t\t\t\tprint(\"Premature end of block data\")\n-\t\t\t\t\treturn\n-\n-\t\t\tinhdr = self.inF.read(8)\n-\t\t\tif (not inhdr or (inhdr[0] == \"\\0\")):\n-\t\t\t\tself.inF.close()\n-\t\t\t\tself.inF = None\n-\t\t\t\tself.inFn = self.inFn + 1\n-\t\t\t\tcontinue\n-\n-\t\t\tinMagic = inhdr[:4]\n-\t\t\tif (inMagic != self.settings['netmagic']):\n-\t\t\t\tprint(\"Invalid magic: \" + hexlify(inMagic).decode('utf-8'))\n-\t\t\t\treturn\n-\t\t\tinLenLE = inhdr[4:]\n-\t\t\tsu = struct.unpack(\"<I\", inLenLE)\n-\t\t\tinLen = su[0] - 80 # length without header\n-\t\t\tblk_hdr = self.inF.read(80)\n-\t\t\tinExtent = BlockExtent(self.inFn, self.inF.tell(), inhdr, blk_hdr, inLen)\n-\n-\t\t\tself.hash_str = calc_hash_str(blk_hdr)\n-\t\t\tif not self.hash_str in blkmap:\n-\t\t\t\t# Because blocks can be written to files out-of-order as of 0.10, the script\n-\t\t\t\t# may encounter blocks it doesn't know about. Treat as debug output.\n-\t\t\t\tif settings['debug_output'] == 'true':\n-\t\t\t\t\tprint(\"Skipping unknown block \" + self.hash_str)\n-\t\t\t\tself.inF.seek(inLen, os.SEEK_CUR)\n-\t\t\t\tcontinue\n-\n-\t\t\tblkHeight = self.blkmap[self.hash_str]\n-\t\t\tself.blkCountIn += 1\n-\n-\t\t\tif self.blkCountOut == blkHeight:\n-\t\t\t\t# If in-order block, just copy\n-\t\t\t\trawblock = self.inF.read(inLen)\n-\t\t\t\tself.writeBlock(inhdr, blk_hdr, rawblock)\n-\n-\t\t\t\t# See if we can catch up to prior out-of-order blocks\n-\t\t\t\twhile self.blkCountOut in self.blockExtents:\n-\t\t\t\t\tself.copyOneBlock()\n-\n-\t\t\telse: # If out-of-order, skip over block data for now\n-\t\t\t\tself.blockExtents[blkHeight] = inExtent\n-\t\t\t\tif self.outOfOrderSize < self.settings['out_of_order_cache_sz']:\n-\t\t\t\t\t# If there is space in the cache, read the data\n-\t\t\t\t\t# Reading the data in file sequence instead of seeking and fetching it later is preferred,\n-\t\t\t\t\t# but we don't want to fill up memory\n-\t\t\t\t\tself.outOfOrderData[blkHeight] = self.inF.read(inLen)\n-\t\t\t\t\tself.outOfOrderSize += inLen\n-\t\t\t\telse: # If no space in cache, seek forward\n-\t\t\t\t\tself.inF.seek(inLen, os.SEEK_CUR)\n-\n-\t\tprint(\"Done (%i blocks written)\" % (self.blkCountOut))\n-\n-if __name__ == '__main__':\n-\tif len(sys.argv) != 2:\n-\t\tprint(\"Usage: linearize-data.py CONFIG-FILE\")\n-\t\tsys.exit(1)\n-\n-\tf = open(sys.argv[1])\n-\tfor line in f:\n-\t\t# skip comment lines\n-\t\tm = re.search('^\\s*#', line)\n-\t\tif m:\n-\t\t\tcontinue\n-\n-\t\t# parse key=value lines\n-\t\tm = re.search('^(\\w+)\\s*=\\s*(\\S.*)$', line)\n-\t\tif m is None:\n-\t\t\tcontinue\n-\t\tsettings[m.group(1)] = m.group(2)\n-\tf.close()\n-\n-\t# Force hash byte format setting to be lowercase to make comparisons easier.\n-\t# Also place upfront in case any settings need to know about it.\n-\tif 'rev_hash_bytes' not in settings:\n-\t\tsettings['rev_hash_bytes'] = 'false'\n-\tsettings['rev_hash_bytes'] = settings['rev_hash_bytes'].lower()\n-\n-\tif 'netmagic' not in settings:\n-\t\tsettings['netmagic'] = 'f9beb4d9'\n-\tif 'genesis' not in settings:\n-\t\tsettings['genesis'] = '000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f'\n-\tif 'input' not in settings:\n-\t\tsettings['input'] = 'input'\n-\tif 'hashlist' not in settings:\n-\t\tsettings['hashlist'] = 'hashlist.txt'\n-\tif 'file_timestamp' not in settings:\n-\t\tsettings['file_timestamp'] = 0\n-\tif 'split_timestamp' not in settings:\n-\t\tsettings['split_timestamp'] = 0\n-\tif 'max_out_sz' not in settings:\n-\t\tsettings['max_out_sz'] = 1000 * 1000 * 1000\n-\tif 'out_of_order_cache_sz' not in settings:\n-\t\tsettings['out_of_order_cache_sz'] = 100 * 1000 * 1000\n-\tif 'debug_output' not in settings:\n-\t\tsettings['debug_output'] = 'false'\n-\n-\tsettings['max_out_sz'] = int(settings['max_out_sz'])\n-\tsettings['split_timestamp'] = int(settings['split_timestamp'])\n-\tsettings['file_timestamp'] = int(settings['file_timestamp'])\n-\tsettings['netmagic'] = unhexlify(settings['netmagic'].encode('utf-8'))\n-\tsettings['out_of_order_cache_sz'] = int(settings['out_of_order_cache_sz'])\n-\tsettings['debug_output'] = settings['debug_output'].lower()\n-\n-\tif 'output_file' not in settings and 'output' not in settings:\n-\t\tprint(\"Missing output file / directory\")\n-\t\tsys.exit(1)\n-\n-\tblkindex = get_block_hashes(settings)\n-\tblkmap = mkblockmap(blkindex)\n-\n-\t# Block hash map won't be byte-reversed. Neither should the genesis hash.\n-\tif not settings['genesis'] in blkmap:\n-\t\tprint(\"Genesis block not found in hashlist\")\n-\telse:\n-\t\tBlockDataCopier(settings, blkindex, blkmap).run()"
      },
      {
        "sha": "e1304e26d0492bc824fb2987f4d6b5edc83f142c",
        "filename": "contrib/linearize/linearize-hashes.py",
        "status": "removed",
        "additions": 0,
        "deletions": 156,
        "changes": 156,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/linearize/linearize-hashes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/linearize/linearize-hashes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-hashes.py?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,156 +0,0 @@\n-#!/usr/bin/env python3\n-#\n-# linearize-hashes.py:  List blocks in a linear, no-fork version of the chain.\n-#\n-# Copyright (c) 2013-2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-\n-from __future__ import print_function\n-try: # Python 3\n-    import http.client as httplib\n-except ImportError: # Python 2\n-    import httplib\n-import json\n-import re\n-import base64\n-import sys\n-import os\n-import os.path\n-\n-settings = {}\n-\n-def hex_switchEndian(s):\n-\t\"\"\" Switches the endianness of a hex string (in pairs of hex chars) \"\"\"\n-\tpairList = [s[i:i+2].encode() for i in range(0, len(s), 2)]\n-\treturn b''.join(pairList[::-1]).decode()\n-\n-class BitcoinRPC:\n-\tdef __init__(self, host, port, username, password):\n-\t\tauthpair = \"%s:%s\" % (username, password)\n-\t\tauthpair = authpair.encode('utf-8')\n-\t\tself.authhdr = b\"Basic \" + base64.b64encode(authpair)\n-\t\tself.conn = httplib.HTTPConnection(host, port=port, timeout=30)\n-\n-\tdef execute(self, obj):\n-\t\ttry:\n-\t\t\tself.conn.request('POST', '/', json.dumps(obj),\n-\t\t\t\t{ 'Authorization' : self.authhdr,\n-\t\t\t\t  'Content-type' : 'application/json' })\n-\t\texcept ConnectionRefusedError:\n-\t\t\tprint('RPC connection refused. Check RPC settings and the server status.',\n-\t\t\t      file=sys.stderr)\n-\t\t\treturn None\n-\n-\t\tresp = self.conn.getresponse()\n-\t\tif resp is None:\n-\t\t\tprint(\"JSON-RPC: no response\", file=sys.stderr)\n-\t\t\treturn None\n-\n-\t\tbody = resp.read().decode('utf-8')\n-\t\tresp_obj = json.loads(body)\n-\t\treturn resp_obj\n-\n-\t@staticmethod\n-\tdef build_request(idx, method, params):\n-\t\tobj = { 'version' : '1.1',\n-\t\t\t'method' : method,\n-\t\t\t'id' : idx }\n-\t\tif params is None:\n-\t\t\tobj['params'] = []\n-\t\telse:\n-\t\t\tobj['params'] = params\n-\t\treturn obj\n-\n-\t@staticmethod\n-\tdef response_is_error(resp_obj):\n-\t\treturn 'error' in resp_obj and resp_obj['error'] is not None\n-\n-def get_block_hashes(settings, max_blocks_per_call=10000):\n-\trpc = BitcoinRPC(settings['host'], settings['port'],\n-\t\t\t settings['rpcuser'], settings['rpcpassword'])\n-\n-\theight = settings['min_height']\n-\twhile height < settings['max_height']+1:\n-\t\tnum_blocks = min(settings['max_height']+1-height, max_blocks_per_call)\n-\t\tbatch = []\n-\t\tfor x in range(num_blocks):\n-\t\t\tbatch.append(rpc.build_request(x, 'getblockhash', [height + x]))\n-\n-\t\treply = rpc.execute(batch)\n-\t\tif reply is None:\n-\t\t\tprint('Cannot continue. Program will halt.')\n-\t\t\treturn None\n-\n-\t\tfor x,resp_obj in enumerate(reply):\n-\t\t\tif rpc.response_is_error(resp_obj):\n-\t\t\t\tprint('JSON-RPC: error at height', height+x, ': ', resp_obj['error'], file=sys.stderr)\n-\t\t\t\tsys.exit(1)\n-\t\t\tassert(resp_obj['id'] == x) # assume replies are in-sequence\n-\t\t\tif settings['rev_hash_bytes'] == 'true':\n-\t\t\t\tresp_obj['result'] = hex_switchEndian(resp_obj['result'])\n-\t\t\tprint(resp_obj['result'])\n-\n-\t\theight += num_blocks\n-\n-def get_rpc_cookie():\n-\t# Open the cookie file\n-\twith open(os.path.join(os.path.expanduser(settings['datadir']), '.cookie'), 'r') as f:\n-\t\tcombined = f.readline()\n-\t\tcombined_split = combined.split(\":\")\n-\t\tsettings['rpcuser'] = combined_split[0]\n-\t\tsettings['rpcpassword'] = combined_split[1]\n-\n-if __name__ == '__main__':\n-\tif len(sys.argv) != 2:\n-\t\tprint(\"Usage: linearize-hashes.py CONFIG-FILE\")\n-\t\tsys.exit(1)\n-\n-\tf = open(sys.argv[1])\n-\tfor line in f:\n-\t\t# skip comment lines\n-\t\tm = re.search('^\\s*#', line)\n-\t\tif m:\n-\t\t\tcontinue\n-\n-\t\t# parse key=value lines\n-\t\tm = re.search('^(\\w+)\\s*=\\s*(\\S.*)$', line)\n-\t\tif m is None:\n-\t\t\tcontinue\n-\t\tsettings[m.group(1)] = m.group(2)\n-\tf.close()\n-\n-\tif 'host' not in settings:\n-\t\tsettings['host'] = '127.0.0.1'\n-\tif 'port' not in settings:\n-\t\tsettings['port'] = 8332\n-\tif 'min_height' not in settings:\n-\t\tsettings['min_height'] = 0\n-\tif 'max_height' not in settings:\n-\t\tsettings['max_height'] = 313000\n-\tif 'rev_hash_bytes' not in settings:\n-\t\tsettings['rev_hash_bytes'] = 'false'\n-\n-\tuse_userpass = True\n-\tuse_datadir = False\n-\tif 'rpcuser' not in settings or 'rpcpassword' not in settings:\n-\t\tuse_userpass = False\n-\tif 'datadir' in settings and not use_userpass:\n-\t\tuse_datadir = True\n-\tif not use_userpass and not use_datadir:\n-\t\tprint(\"Missing datadir or username and/or password in cfg file\", file=sys.stderr)\n-\t\tsys.exit(1)\n-\n-\tsettings['port'] = int(settings['port'])\n-\tsettings['min_height'] = int(settings['min_height'])\n-\tsettings['max_height'] = int(settings['max_height'])\n-\n-\t# Force hash byte format setting to be lowercase to make comparisons easier.\n-\tsettings['rev_hash_bytes'] = settings['rev_hash_bytes'].lower()\n-\n-\t# Get the rpc user and pass from the cookie if the datadir is set\n-\tif use_datadir:\n-\t\tget_rpc_cookie()\n-\n-\tget_block_hashes(settings)"
      },
      {
        "sha": "6163734e623bd3a21ac5e1ef83a42dd45febe746",
        "filename": "contrib/macdeploy/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/macdeploy/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/macdeploy/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/README.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,15 +0,0 @@\n-### MacDeploy ###\n-\n-For Snow Leopard (which uses [Python 2.6](http://www.python.org/download/releases/2.6/)), you will need the param_parser package:\n-\t\n-\tsudo easy_install argparse\n-\n-This script should not be run manually, instead, after building as usual:\n-\n-\tmake deploy\n-\n-During the process, the disk image window will pop up briefly where the fancy\n-settings are applied. This is normal, please do not interfere.\n-\n-When finished, it will produce `Bitcoin-Core.dmg`.\n-"
      },
      {
        "sha": "51dc01ac08f55952ddfcf115d0c3a829d8d2ac8d",
        "filename": "contrib/macdeploy/background.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/macdeploy/background.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/macdeploy/background.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.png?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec"
      },
      {
        "sha": "e0a8c9ab9da81e052dfd9daa61e594462ef0e8fe",
        "filename": "contrib/macdeploy/background.psd",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/macdeploy/background.psd",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/macdeploy/background.psd",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.psd?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec"
      },
      {
        "sha": "9c330af45142e011e78b4b86874ac4b3457ed457",
        "filename": "contrib/macdeploy/background.svg",
        "status": "removed",
        "additions": 0,
        "deletions": 34,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/macdeploy/background.svg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/macdeploy/background.svg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.svg?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,34 +0,0 @@\n-<?xml version=\"1.0\" standalone=\"no\"?>\n-<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 20010904//EN\"\n- \"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\">\n-<svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1000pt\" height=\"640pt\" viewBox=\"0 0 1000 640\" preserveAspectRatio=\"xMidYMid meet\">\n-\t<!-- kate: space-indent off;\n-\tCopyright (c) 2015 The Bitcoin Core developers\n-\tDistributed under the MIT software license, see the accompanying\n-\tfile COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\t-->\n-\t<style type=\"text/css\"><![CDATA[\n-\t\ttext {\n-\t\t\tfont-family: \"Tuffy\";\n-\t\t\tfont-size: 86px;\n-\t\t\tfill: gray;\n-\t\t\ttext-anchor: middle;\n-\t\t}\n-\t]]></style>\n-\t<defs>\n-\t\t<linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n-\t\t\t<stop offset=\"0%\" style=\"stop-color:rgb(239,239,239);stop-opacity:1\" />\n-\t\t\t<stop offset=\"33%\" style=\"stop-color:rgb(239,239,239);stop-opacity:1\" />\n-\t\t\t<stop offset=\"80%\" style=\"stop-color:rgb(205,205,205);stop-opacity:1\" />\n-\t\t\t<stop offset=\"100%\" style=\"stop-color:rgb(204,204,204);stop-opacity:1\" />\n-\t\t</linearGradient>\n-\t</defs>\n-\t<rect width=\"1000\" height=\"640\" style=\"fill:url(#gradient);stroke-width:0\" />\n-\t<g transform=\"translate(500,0) scale(0.9, 1)\">\n-\t\t<text x=\"0\" y=\"114\">PACKAGE_NAME</text>\n-\t</g>\n-\t<g transform=\"translate(0.000000,640.000000) scale(0.100000,-0.100000)\"\n-\tfill=\"#000000\" stroke=\"none\">\n-\t\t<path d=\"M4995 3705 c-24 -23 -25 -29 -25 -165 l0 -140 -306 0 -306 0 -29 -29 c-29 -29 -29 -31 -29 -141 0 -110 0 -112 29 -141 l29 -29 306 0 306 0 0 -140 c0 -136 1 -142 25 -165 16 -17 35 -25 57 -25 29 0 72 32 306 226 180 149 274 233 278 250 13 53 -2 70 -278 299 -235 194 -277 225 -306 225 -22 0 -41 -8 -57 -25z\" fixlter=\"url(#glow)\"/>\n-\t</g>\n-</svg>"
      },
      {
        "sha": "b29fc71765653b816e9fcef0437c302c0dd55a86",
        "filename": "contrib/macdeploy/custom_dsstore.py",
        "status": "removed",
        "additions": 0,
        "deletions": 59,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/macdeploy/custom_dsstore.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/macdeploy/custom_dsstore.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/custom_dsstore.py?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,59 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2013-2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-import biplist\n-from ds_store import DSStore\n-from mac_alias import Alias\n-import sys\n-\n-output_file = sys.argv[1]\n-package_name_ns = sys.argv[2]\n-\n-ds = DSStore.open(output_file, 'w+')\n-ds['.']['bwsp'] = {\n-    'ShowStatusBar': False,\n-    'WindowBounds': b'{{300, 280}, {500, 343}}',\n-    'ContainerShowSidebar': False,\n-    'SidebarWidth': 0,\n-    'ShowTabView': False,\n-    'PreviewPaneVisibility': False,\n-    'ShowToolbar': False,\n-    'ShowSidebar': False,\n-    'ShowPathbar': True\n-}\n-\n-icvp = {\n-    'gridOffsetX': 0.0,\n-    'textSize': 12.0,\n-    'viewOptionsVersion': 1,\n-    'backgroundImageAlias': b'\\x00\\x00\\x00\\x00\\x02\\x1e\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xd1\\x94\\\\\\xb0H+\\x00\\x05\\x00\\x00\\x00\\x98\\x0fbackground.tiff\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x99\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\x00\\x00\\r\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0b.background\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x98\\x00\\x0e\\x00 \\x00\\x0f\\x00b\\x00a\\x00c\\x00k\\x00g\\x00r\\x00o\\x00u\\x00n\\x00d\\x00.\\x00t\\x00i\\x00f\\x00f\\x00\\x0f\\x00\\x02\\x00\\x00\\x00\\x12\\x00\\x1c/.background/background.tiff\\x00\\x14\\x01\\x06\\x00\\x00\\x00\\x00\\x01\\x06\\x00\\x02\\x00\\x00\\x0cMacintosh HD\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xce\\x97\\xab\\xc3H+\\x00\\x00\\x01\\x88[\\x88\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02u\\xab\\x8d\\xd1\\x94\\\\\\xb0devrddsk\\xff\\xff\\xff\\xff\\x00\\x00\\t \\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x07bitcoin\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xce\\x97\\xab\\xc3\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x01\\x00\\x14\\x01\\x88[\\x88\\x00\\x16\\xa9\\t\\x00\\x08\\xfaR\\x00\\x08\\xfaQ\\x00\\x02d\\x8e\\x00\\x0e\\x00\\x02\\x00\\x00\\x00\\x0f\\x00\\x1a\\x00\\x0c\\x00M\\x00a\\x00c\\x00i\\x00n\\x00t\\x00o\\x00s\\x00h\\x00 \\x00H\\x00D\\x00\\x13\\x00\\x01/\\x00\\x00\\x15\\x00\\x02\\x00\\x14\\xff\\xff\\x00\\x00\\xff\\xff\\x00\\x00',\n-    'backgroundColorBlue': 1.0,\n-    'iconSize': 96.0,\n-    'backgroundColorGreen': 1.0,\n-    'arrangeBy': 'none',\n-    'showIconPreview': True,\n-    'gridSpacing': 100.0,\n-    'gridOffsetY': 0.0,\n-    'showItemInfo': False,\n-    'labelOnBottom': True,\n-    'backgroundType': 2,\n-    'backgroundColorRed': 1.0\n-}\n-alias = Alias.from_bytes(icvp['backgroundImageAlias'])\n-alias.volume.name = package_name_ns\n-alias.volume.posix_path = '/Volumes/' + package_name_ns\n-alias.volume.disk_image_alias.target.filename = package_name_ns + '.temp.dmg'\n-alias.volume.disk_image_alias.target.carbon_path = 'Macintosh HD:Users:\\x00bitcoinuser:\\x00Documents:\\x00bitcoin:\\x00bitcoin:\\x00' + package_name_ns + '.temp.dmg'\n-alias.volume.disk_image_alias.target.posix_path = 'Users/bitcoinuser/Documents/bitcoin/bitcoin/' + package_name_ns + '.temp.dmg'\n-alias.target.carbon_path = package_name_ns + ':.background:\\x00background.tiff'\n-icvp['backgroundImageAlias'] = biplist.Data(alias.to_bytes())\n-ds['.']['icvp'] = icvp\n-\n-ds['.']['vSrn'] = ('long', 1)\n-\n-ds['Applications']['Iloc'] = (370, 156)\n-ds['Bitcoin-Qt.app']['Iloc'] = (128, 156)\n-\n-ds.flush()\n-ds.close()"
      },
      {
        "sha": "91674a92e6fa6196c0190b6bf42fcdf32cf7d42f",
        "filename": "contrib/macdeploy/detached-sig-apply.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 56,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/macdeploy/detached-sig-apply.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/macdeploy/detached-sig-apply.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-apply.sh?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,56 +0,0 @@\n-#!/bin/sh\n-# Copyright (c) 2014-2015 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-set -e\n-\n-UNSIGNED=\"$1\"\n-SIGNATURE=\"$2\"\n-ARCH=x86_64\n-ROOTDIR=dist\n-TEMPDIR=signed.temp\n-OUTDIR=signed-app\n-\n-if [ -z \"$UNSIGNED\" ]; then\n-  echo \"usage: $0 <unsigned app> <signature>\"\n-  exit 1\n-fi\n-\n-if [ -z \"$SIGNATURE\" ]; then\n-  echo \"usage: $0 <unsigned app> <signature>\"\n-  exit 1\n-fi\n-\n-rm -rf ${TEMPDIR} && mkdir -p ${TEMPDIR}\n-tar -C ${TEMPDIR} -xf ${UNSIGNED}\n-cp -rf \"${SIGNATURE}\"/* ${TEMPDIR}\n-\n-if [ -z \"${PAGESTUFF}\" ]; then\n-  PAGESTUFF=${TEMPDIR}/pagestuff\n-fi\n-\n-if [ -z \"${CODESIGN_ALLOCATE}\" ]; then\n-  CODESIGN_ALLOCATE=${TEMPDIR}/codesign_allocate\n-fi\n-\n-find ${TEMPDIR} -name \"*.sign\" | while read i; do\n-  SIZE=`stat -c %s \"${i}\"`\n-  TARGET_FILE=\"`echo \"${i}\" | sed 's/\\.sign$//'`\"\n-\n-  echo \"Allocating space for the signature of size ${SIZE} in ${TARGET_FILE}\"\n-  ${CODESIGN_ALLOCATE} -i \"${TARGET_FILE}\" -a ${ARCH} ${SIZE} -o \"${i}.tmp\"\n-\n-  OFFSET=`${PAGESTUFF} \"${i}.tmp\" -p | tail -2 | grep offset | sed 's/[^0-9]*//g'`\n-  if [ -z ${QUIET} ]; then\n-    echo \"Attaching signature at offset ${OFFSET}\"\n-  fi\n-\n-  dd if=\"$i\" of=\"${i}.tmp\" bs=1 seek=${OFFSET} count=${SIZE} 2>/dev/null\n-  mv \"${i}.tmp\" \"${TARGET_FILE}\"\n-  rm \"${i}\"\n-  echo \"Success.\"\n-done\n-mv ${TEMPDIR}/${ROOTDIR} ${OUTDIR}\n-rm -rf ${TEMPDIR}\n-echo \"Signed: ${OUTDIR}\""
      },
      {
        "sha": "3379a4599c7036870e1de876d31e063a78aac0f7",
        "filename": "contrib/macdeploy/detached-sig-create.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 51,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/macdeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/macdeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-create.sh?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,51 +0,0 @@\n-#!/bin/sh\n-# Copyright (c) 2014-2015 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-set -e\n-\n-ROOTDIR=dist\n-BUNDLE=\"${ROOTDIR}/Bitcoin-Qt.app\"\n-CODESIGN=codesign\n-TEMPDIR=sign.temp\n-TEMPLIST=${TEMPDIR}/signatures.txt\n-OUT=signature-osx.tar.gz\n-OUTROOT=osx\n-\n-if [ ! -n \"$1\" ]; then\n-  echo \"usage: $0 <codesign args>\"\n-  echo \"example: $0 -s MyIdentity\"\n-  exit 1\n-fi\n-\n-rm -rf ${TEMPDIR} ${TEMPLIST}\n-mkdir -p ${TEMPDIR}\n-\n-${CODESIGN} -f --file-list ${TEMPLIST} \"$@\" \"${BUNDLE}\"\n-\n-grep -v CodeResources < \"${TEMPLIST}\" | while read i; do\n-  TARGETFILE=\"${BUNDLE}/`echo \"${i}\" | sed \"s|.*${BUNDLE}/||\"`\"\n-  SIZE=`pagestuff \"$i\" -p | tail -2 | grep size | sed 's/[^0-9]*//g'`\n-  OFFSET=`pagestuff \"$i\" -p | tail -2 | grep offset | sed 's/[^0-9]*//g'`\n-  SIGNFILE=\"${TEMPDIR}/${OUTROOT}/${TARGETFILE}.sign\"\n-  DIRNAME=\"`dirname \"${SIGNFILE}\"`\"\n-  mkdir -p \"${DIRNAME}\"\n-  echo \"Adding detached signature for: ${TARGETFILE}. Size: ${SIZE}. Offset: ${OFFSET}\"\n-  dd if=\"$i\" of=\"${SIGNFILE}\" bs=1 skip=${OFFSET} count=${SIZE} 2>/dev/null\n-done\n-\n-grep CodeResources < \"${TEMPLIST}\" | while read i; do\n-  TARGETFILE=\"${BUNDLE}/`echo \"${i}\" | sed \"s|.*${BUNDLE}/||\"`\"\n-  RESOURCE=\"${TEMPDIR}/${OUTROOT}/${TARGETFILE}\"\n-  DIRNAME=\"`dirname \"${RESOURCE}\"`\"\n-  mkdir -p \"${DIRNAME}\"\n-  echo \"Adding resource for: \\\"${TARGETFILE}\\\"\"\n-  cp \"${i}\" \"${RESOURCE}\"\n-done\n-\n-rm ${TEMPLIST}\n-\n-tar -C \"${TEMPDIR}\" -czf \"${OUT}\" .\n-rm -rf \"${TEMPDIR}\"\n-echo \"Created ${OUT}\""
      },
      {
        "sha": "ff9fbd58df0718d5bb123c927a6488ef5eef2ce0",
        "filename": "contrib/macdeploy/extract-osx-sdk.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 33,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/macdeploy/extract-osx-sdk.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/macdeploy/extract-osx-sdk.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/extract-osx-sdk.sh?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,33 +0,0 @@\n-#!/bin/bash\n-# Copyright (c) 2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-set -e\n-\n-INPUTFILE=\"Xcode_7.3.1.dmg\"\n-HFSFILENAME=\"5.hfs\"\n-SDKDIR=\"Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk\"\n-\n-7z x \"${INPUTFILE}\" \"${HFSFILENAME}\"\n-SDKNAME=\"$(basename \"${SDKDIR}\")\"\n-SDKDIRINODE=$(ifind -n \"${SDKDIR}\" \"${HFSFILENAME}\")\n-fls \"${HFSFILENAME}\" -rpF ${SDKDIRINODE} |\n- while read type inode filename; do\n-\tinode=\"${inode::-1}\"\n-\tif [ \"${filename:0:14}\" = \"usr/share/man/\" ]; then\n-\t\tcontinue\n-\tfi\n-\tfilename=\"${SDKNAME}/$filename\"\n-\techo \"Extracting $filename ...\"\n-\tmkdir -p \"$(dirname \"$filename\")\"\n-\tif [ \"$type\" = \"l/l\" ]; then\n-\t\tln -s \"$(icat \"${HFSFILENAME}\" $inode)\" \"$filename\"\n-\telse\n-\t\ticat \"${HFSFILENAME}\" $inode >\"$filename\"\n-\tfi\n-done\n-echo \"Building ${SDKNAME}.tar.gz ...\"\n-MTIME=\"$(istat \"${HFSFILENAME}\" \"${SDKDIRINODE}\" | perl -nle 'm/Content Modified:\\s+(.*?)\\s\\(/ && print $1')\"\n-find \"${SDKNAME}\" | sort | tar --no-recursion --mtime=\"${MTIME}\" --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > \"${SDKNAME}.tar.gz\"\n-echo 'All done!'"
      },
      {
        "sha": "08c2a06fcc7c7da9ff2d5cd05f993c35cd915c4f",
        "filename": "contrib/macdeploy/fancy.plist",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/macdeploy/fancy.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/macdeploy/fancy.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/fancy.plist?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -10,7 +10,7 @@\n \t\t<integer>620</integer>\n \t</array>\n \t<key>background_picture</key>\n-\t<string>background.tiff</string>\n+\t<string>background.png</string>\n \t<key>icon_size</key>\n \t<integer>96</integer>\n \t<key>applications_symlink</key>\n@@ -22,7 +22,7 @@\n \t\t\t<integer>370</integer>\n \t\t\t<integer>156</integer>\n \t\t</array>\n-\t\t<key>Bitcoin-Qt.app</key>\n+\t\t<key>NovaCoin-Qt.app</key>\n \t\t<array>\n \t\t\t<integer>128</integer>\n \t\t\t<integer>156</integer>"
      },
      {
        "sha": "7981eca402e416f866ba1436d7ae9a5414618a29",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "modified",
        "additions": 127,
        "deletions": 241,
        "changes": 368,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -1,4 +1,5 @@\n-#!/usr/bin/env python3\n+#!/usr/bin/env python\n+\n #\n # Copyright (C) 2011  Patrick \"p2k\" Schneider <me@p2k-network.org>\n #\n@@ -16,8 +17,9 @@\n # along with this program.  If not, see <http://www.gnu.org/licenses/>.\n #\n \n-import subprocess, sys, re, os, shutil, stat, os.path, time\n+import subprocess, sys, re, os, shutil, stat, os.path\n from string import Template\n+from time import sleep\n from argparse import ArgumentParser\n \n # This is ported from the original macdeployqt with modifications\n@@ -36,10 +38,7 @@ class FrameworkInfo(object):\n         self.sourceFilePath = \"\"\n         self.destinationDirectory = \"\"\n         self.sourceResourcesDirectory = \"\"\n-        self.sourceVersionContentsDirectory = \"\"\n-        self.sourceContentsDirectory = \"\"\n         self.destinationResourcesDirectory = \"\"\n-        self.destinationVersionContentsDirectory = \"\"\n     \n     def __eq__(self, other):\n         if self.__class__ == other.__class__:\n@@ -143,18 +142,14 @@ class FrameworkInfo(object):\n             info.destinationDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, info.binaryDirectory)\n             \n             info.sourceResourcesDirectory = os.path.join(info.frameworkPath, \"Resources\")\n-            info.sourceContentsDirectory = os.path.join(info.frameworkPath, \"Contents\")\n-            info.sourceVersionContentsDirectory = os.path.join(info.frameworkPath, \"Versions\", info.version, \"Contents\")\n             info.destinationResourcesDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Resources\")\n-            info.destinationContentsDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Contents\")\n-            info.destinationVersionContentsDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Versions\", info.version, \"Contents\")\n         \n         return info\n \n class ApplicationBundleInfo(object):\n     def __init__(self, path):\n         self.path = path\n-        appName = \"Bitcoin-Qt\"\n+        appName = os.path.splitext(os.path.basename(path))[0]\n         self.binaryPath = os.path.join(path, \"Contents\", \"MacOS\", appName)\n         if not os.path.exists(self.binaryPath):\n             raise RuntimeError(\"Could not find bundle binary for \" + path)\n@@ -200,65 +195,62 @@ class DeploymentInfo(object):\n \n def getFrameworks(binaryPath, verbose):\n     if verbose >= 3:\n-        print(\"Inspecting with otool: \" + binaryPath)\n-    otoolbin=os.getenv(\"OTOOL\", \"otool\")\n-    otool = subprocess.Popen([otoolbin, \"-L\", binaryPath], stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)\n+        print \"Inspecting with otool: \" + binaryPath\n+    otool = subprocess.Popen([\"otool\", \"-L\", binaryPath], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n     o_stdout, o_stderr = otool.communicate()\n     if otool.returncode != 0:\n         if verbose >= 1:\n             sys.stderr.write(o_stderr)\n             sys.stderr.flush()\n             raise RuntimeError(\"otool failed with return code %d\" % otool.returncode)\n-\n+    \n     otoolLines = o_stdout.split(\"\\n\")\n     otoolLines.pop(0) # First line is the inspected binary\n     if \".framework\" in binaryPath or binaryPath.endswith(\".dylib\"):\n         otoolLines.pop(0) # Frameworks and dylibs list themselves as a dependency.\n     \n     libraries = []\n     for line in otoolLines:\n-        line = line.replace(\"@loader_path\", os.path.dirname(binaryPath))\n         info = FrameworkInfo.fromOtoolLibraryLine(line.strip())\n         if info is not None:\n             if verbose >= 3:\n-                print(\"Found framework:\")\n-                print(info)\n+                print \"Found framework:\"\n+                print info\n             libraries.append(info)\n     \n     return libraries\n \n def runInstallNameTool(action, *args):\n-    installnametoolbin=os.getenv(\"INSTALLNAMETOOL\", \"install_name_tool\")\n-    subprocess.check_call([installnametoolbin, \"-\"+action] + list(args))\n+    subprocess.check_call([\"install_name_tool\", \"-\"+action] + list(args))\n \n def changeInstallName(oldName, newName, binaryPath, verbose):\n     if verbose >= 3:\n-        print(\"Using install_name_tool:\")\n-        print(\" in\", binaryPath)\n-        print(\" change reference\", oldName)\n-        print(\" to\", newName)\n+        print \"Using install_name_tool:\"\n+        print \" in\", binaryPath\n+        print \" change reference\", oldName\n+        print \" to\", newName\n     runInstallNameTool(\"change\", oldName, newName, binaryPath)\n \n def changeIdentification(id, binaryPath, verbose):\n     if verbose >= 3:\n-        print(\"Using install_name_tool:\")\n-        print(\" change identification in\", binaryPath)\n-        print(\" to\", id)\n+        print \"Using install_name_tool:\"\n+        print \" change identification in\", binaryPath\n+        print \" to\", id\n     runInstallNameTool(\"id\", id, binaryPath)\n \n def runStrip(binaryPath, verbose):\n-    stripbin=os.getenv(\"STRIP\", \"strip\")\n     if verbose >= 3:\n-        print(\"Using strip:\")\n-        print(\" stripped\", binaryPath)\n-    subprocess.check_call([stripbin, \"-x\", binaryPath])\n+        print \"Using strip:\"\n+        print \" stripped\", binaryPath\n+    subprocess.check_call([\"strip\", \"-x\", binaryPath])\n \n def copyFramework(framework, path, verbose):\n     if framework.sourceFilePath.startswith(\"Qt\"):\n         #standard place for Nokia Qt installer's frameworks\n         fromPath = \"/Library/Frameworks/\" + framework.sourceFilePath\n     else:\n         fromPath = framework.sourceFilePath\n+\n     toDir = os.path.join(path, framework.destinationDirectory)\n     toPath = os.path.join(toDir, framework.binaryName)\n     \n@@ -273,45 +265,29 @@ def copyFramework(framework, path, verbose):\n     \n     shutil.copy2(fromPath, toPath)\n     if verbose >= 3:\n-        print(\"Copied:\", fromPath)\n-        print(\" to:\", toPath)\n+        print \"Copied:\", fromPath\n+        print \" to:\", toPath\n \n     permissions = os.stat(toPath)\n     if not permissions.st_mode & stat.S_IWRITE:\n       os.chmod(toPath, permissions.st_mode | stat.S_IWRITE)\n \n     if not framework.isDylib(): # Copy resources for real frameworks\n-\n-        linkfrom = os.path.join(path, \"Contents\",\"Frameworks\", framework.frameworkName, \"Versions\", \"Current\")\n-        linkto = framework.version\n-        if not os.path.exists(linkfrom):\n-            os.symlink(linkto, linkfrom)\n-            if verbose >= 2:\n-                print(\"Linked:\", linkfrom, \"->\", linkto)\n         fromResourcesDir = framework.sourceResourcesDirectory\n         if os.path.exists(fromResourcesDir):\n             toResourcesDir = os.path.join(path, framework.destinationResourcesDirectory)\n-            shutil.copytree(fromResourcesDir, toResourcesDir, symlinks=True)\n+            shutil.copytree(fromResourcesDir, toResourcesDir)\n             if verbose >= 3:\n-                print(\"Copied resources:\", fromResourcesDir)\n-                print(\" to:\", toResourcesDir)\n-        fromContentsDir = framework.sourceVersionContentsDirectory\n-        if not os.path.exists(fromContentsDir):\n-            fromContentsDir = framework.sourceContentsDirectory\n-        if os.path.exists(fromContentsDir):\n-            toContentsDir = os.path.join(path, framework.destinationVersionContentsDirectory)\n-            shutil.copytree(fromContentsDir, toContentsDir, symlinks=True)\n-            if verbose >= 3:\n-                print(\"Copied Contents:\", fromContentsDir)\n-                print(\" to:\", toContentsDir)\n+                print \"Copied resources:\", fromResourcesDir\n+                print \" to:\", toResourcesDir\n     elif framework.frameworkName.startswith(\"libQtGui\"): # Copy qt_menu.nib (applies to non-framework layout)\n         qtMenuNibSourcePath = os.path.join(framework.frameworkDirectory, \"Resources\", \"qt_menu.nib\")\n         qtMenuNibDestinationPath = os.path.join(path, \"Contents\", \"Resources\", \"qt_menu.nib\")\n         if os.path.exists(qtMenuNibSourcePath) and not os.path.exists(qtMenuNibDestinationPath):\n-            shutil.copytree(qtMenuNibSourcePath, qtMenuNibDestinationPath, symlinks=True)\n+            shutil.copytree(qtMenuNibSourcePath, qtMenuNibDestinationPath)\n             if verbose >= 3:\n-                print(\"Copied for libQtGui:\", qtMenuNibSourcePath)\n-                print(\" to:\", qtMenuNibDestinationPath)\n+                print \"Copied for libQtGui:\", qtMenuNibSourcePath\n+                print \" to:\", qtMenuNibDestinationPath\n     \n     return toPath\n \n@@ -324,21 +300,21 @@ def deployFrameworks(frameworks, bundlePath, binaryPath, strip, verbose, deploym\n         deploymentInfo.deployedFrameworks.append(framework.frameworkName)\n         \n         if verbose >= 2:\n-            print(\"Processing\", framework.frameworkName, \"...\")\n+            print \"Processing\", framework.frameworkName, \"...\"\n         \n         # Get the Qt path from one of the Qt frameworks\n         if deploymentInfo.qtPath is None and framework.isQtFramework():\n             deploymentInfo.detectQtPath(framework.frameworkDirectory)\n         \n-        if framework.installName.startswith(\"@executable_path\") or framework.installName.startswith(bundlePath):\n+        if framework.installName.startswith(\"@executable_path\"):\n             if verbose >= 2:\n-                print(framework.frameworkName, \"already deployed, skipping.\")\n+                print framework.frameworkName, \"already deployed, skipping.\"\n             continue\n         \n         # install_name_tool the new id into the binary\n         changeInstallName(framework.installName, framework.deployedInstallName, binaryPath, verbose)\n         \n-        # Copy framework to app bundle.\n+        # Copy farmework to app bundle.\n         deployedBinaryPath = copyFramework(framework, bundlePath, verbose)\n         # Skip the rest if already was deployed.\n         if deployedBinaryPath is None:\n@@ -364,16 +340,14 @@ def deployFrameworks(frameworks, bundlePath, binaryPath, strip, verbose, deploym\n def deployFrameworksForAppBundle(applicationBundle, strip, verbose):\n     frameworks = getFrameworks(applicationBundle.binaryPath, verbose)\n     if len(frameworks) == 0 and verbose >= 1:\n-        print(\"Warning: Could not find any external frameworks to deploy in %s.\" % (applicationBundle.path))\n+        print \"Warning: Could not find any external frameworks to deploy in %s.\" % (applicationBundle.path)\n         return DeploymentInfo()\n     else:\n         return deployFrameworks(frameworks, applicationBundle.path, applicationBundle.binaryPath, strip, verbose)\n \n def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n     # Lookup available plugins, exclude unneeded\n     plugins = []\n-    if deploymentInfo.pluginPath is None:\n-        return\n     for dirpath, dirnames, filenames in os.walk(deploymentInfo.pluginPath):\n         pluginDirectory = os.path.relpath(dirpath, deploymentInfo.pluginPath)\n         if pluginDirectory == \"designer\":\n@@ -391,31 +365,15 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n             # Deploy the script plugins only if QtScript is in use\n             if not deploymentInfo.usesFramework(\"QtScript\"):\n                 continue\n-        elif pluginDirectory == \"qmltooling\" or pluginDirectory == \"qml1tooling\":\n+        elif pluginDirectory == \"qmltooling\":\n             # Deploy the qml plugins only if QtDeclarative is in use\n             if not deploymentInfo.usesFramework(\"QtDeclarative\"):\n                 continue\n         elif pluginDirectory == \"bearer\":\n             # Deploy the bearer plugins only if QtNetwork is in use\n             if not deploymentInfo.usesFramework(\"QtNetwork\"):\n                 continue\n-        elif pluginDirectory == \"position\":\n-            # Deploy the position plugins only if QtPositioning is in use\n-            if not deploymentInfo.usesFramework(\"QtPositioning\"):\n-                continue\n-        elif pluginDirectory == \"sensors\" or pluginDirectory == \"sensorgestures\":\n-            # Deploy the sensor plugins only if QtSensors is in use\n-            if not deploymentInfo.usesFramework(\"QtSensors\"):\n-                continue\n-        elif pluginDirectory == \"audio\" or pluginDirectory == \"playlistformats\":\n-            # Deploy the audio plugins only if QtMultimedia is in use\n-            if not deploymentInfo.usesFramework(\"QtMultimedia\"):\n-                continue\n-        elif pluginDirectory == \"mediaservice\":\n-            # Deploy the mediaservice plugins only if QtMultimediaWidgets is in use\n-            if not deploymentInfo.usesFramework(\"QtMultimediaWidgets\"):\n-                continue\n-\n+        \n         for pluginName in filenames:\n             pluginPath = os.path.join(pluginDirectory, pluginName)\n             if pluginName.endswith(\"_debug.dylib\"):\n@@ -433,16 +391,12 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n                 # Deploy the opengl graphicssystem plugin only if QtOpenGL is in use\n                 if not deploymentInfo.usesFramework(\"QtOpenGL\"):\n                     continue\n-            elif pluginPath == \"accessible/libqtaccessiblequick.dylib\":\n-                # Deploy the accessible qtquick plugin only if QtQuick is in use\n-                if not deploymentInfo.usesFramework(\"QtQuick\"):\n-                    continue\n-\n+            \n             plugins.append((pluginDirectory, pluginName))\n     \n     for pluginDirectory, pluginName in plugins:\n         if verbose >= 2:\n-            print(\"Processing plugin\", os.path.join(pluginDirectory, pluginName), \"...\")\n+            print \"Processing plugin\", os.path.join(pluginDirectory, pluginName), \"...\"\n         \n         sourcePath = os.path.join(deploymentInfo.pluginPath, pluginDirectory, pluginName)\n         destinationDirectory = os.path.join(appBundleInfo.pluginPath, pluginDirectory)\n@@ -452,8 +406,8 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n         destinationPath = os.path.join(destinationDirectory, pluginName)\n         shutil.copy2(sourcePath, destinationPath)\n         if verbose >= 3:\n-            print(\"Copied:\", sourcePath)\n-            print(\" to:\", destinationPath)\n+            print \"Copied:\", sourcePath\n+            print \" to:\", destinationPath\n         \n         if strip:\n             runStrip(destinationPath, verbose)\n@@ -468,32 +422,25 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n                 deployFrameworks([dependency], appBundleInfo.path, destinationPath, strip, verbose, deploymentInfo)\n \n qt_conf=\"\"\"[Paths]\n-Translations=Resources\n-Plugins=PlugIns\n+translations=Resources\n+plugins=PlugIns\n \"\"\"\n \n ap = ArgumentParser(description=\"\"\"Improved version of macdeployqt.\n \n Outputs a ready-to-deploy app in a folder \"dist\" and optionally wraps it in a .dmg file.\n Note, that the \"dist\" folder will be deleted before deploying on each run.\n \n-Optionally, Qt translation files (.qm) and additional resources can be added to the bundle.\n-\n-Also optionally signs the .app bundle; set the CODESIGNARGS environment variable to pass arguments\n-to the codesign tool.\n-E.g. CODESIGNARGS='--sign \"Developer ID Application: ...\" --keychain /encrypted/foo.keychain'\"\"\")\n+Optionally, Qt translation files (.qm) and additional resources can be added to the bundle.\"\"\")\n \n ap.add_argument(\"app_bundle\", nargs=1, metavar=\"app-bundle\", help=\"application bundle to be deployed\")\n ap.add_argument(\"-verbose\", type=int, nargs=1, default=[1], metavar=\"<0-3>\", help=\"0 = no output, 1 = error/warning (default), 2 = normal, 3 = debug\")\n ap.add_argument(\"-no-plugins\", dest=\"plugins\", action=\"store_false\", default=True, help=\"skip plugin deployment\")\n ap.add_argument(\"-no-strip\", dest=\"strip\", action=\"store_false\", default=True, help=\"don't run 'strip' on the binaries\")\n-ap.add_argument(\"-sign\", dest=\"sign\", action=\"store_true\", default=False, help=\"sign .app bundle with codesign tool\")\n ap.add_argument(\"-dmg\", nargs=\"?\", const=\"\", metavar=\"basename\", help=\"create a .dmg disk image; if basename is not specified, a camel-cased version of the app name is used\")\n ap.add_argument(\"-fancy\", nargs=1, metavar=\"plist\", default=[], help=\"make a fancy looking disk image using the given plist file with instructions; requires -dmg to work\")\n-ap.add_argument(\"-add-qt-tr\", nargs=1, metavar=\"languages\", default=[], help=\"add Qt translation files to the bundle's resources; the language list must be separated with commas, not with whitespace\")\n-ap.add_argument(\"-translations-dir\", nargs=1, metavar=\"path\", default=None, help=\"Path to Qt's translation files\")\n+ap.add_argument(\"-add-qt-tr\", nargs=1, metavar=\"languages\", default=[], help=\"add Qt translation files to the bundle's ressources; the language list must be separated with commas, not with whitespace\")\n ap.add_argument(\"-add-resources\", nargs=\"+\", metavar=\"path\", default=[], help=\"list of additional files or folders to be copied into the bundle's resources; must be the last argument\")\n-ap.add_argument(\"-volname\", nargs=1, metavar=\"volname\", default=[], help=\"custom volume name for dmg\")\n \n config = ap.parse_args()\n \n@@ -511,19 +458,10 @@ if not os.path.exists(app_bundle):\n app_bundle_name = os.path.splitext(os.path.basename(app_bundle))[0]\n \n # ------------------------------------------------\n-translations_dir = None\n-if config.translations_dir and config.translations_dir[0]:\n-    if os.path.exists(config.translations_dir[0]):\n-        translations_dir = config.translations_dir[0]\n-    else:\n-        if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not find translation dir \\\"%s\\\"\\n\" % (translations_dir))\n-        sys.exit(1)\n-# ------------------------------------------------\n \n for p in config.add_resources:\n     if verbose >= 3:\n-        print(\"Checking for \\\"%s\\\"...\" % p)\n+        print \"Checking for \\\"%s\\\"...\" % p\n     if not os.path.exists(p):\n         if verbose >= 1:\n             sys.stderr.write(\"Error: Could not find additional resource file \\\"%s\\\"\\n\" % (p))\n@@ -533,17 +471,27 @@ for p in config.add_resources:\n \n if len(config.fancy) == 1:\n     if verbose >= 3:\n-        print(\"Fancy: Importing plistlib...\")\n+        print \"Fancy: Importing plistlib...\"\n     try:\n         import plistlib\n     except ImportError:\n         if verbose >= 1:\n             sys.stderr.write(\"Error: Could not import plistlib which is required for fancy disk images.\\n\")\n         sys.exit(1)\n     \n+    if verbose >= 3:\n+        print \"Fancy: Importing appscript...\"\n+    try:\n+        import appscript\n+    except ImportError:\n+        if verbose >= 1:\n+            sys.stderr.write(\"Error: Could not import appscript which is required for fancy disk images.\\n\")\n+            sys.stderr.write(\"Please install it e.g. with \\\"sudo easy_install appscript\\\".\\n\")\n+        sys.exit(1)\n+    \n     p = config.fancy[0]\n     if verbose >= 3:\n-        print(\"Fancy: Loading \\\"%s\\\"...\" % p)\n+        print \"Fancy: Loading \\\"%s\\\"...\" % p\n     if not os.path.exists(p):\n         if verbose >= 1:\n             sys.stderr.write(\"Error: Could not find fancy disk image plist at \\\"%s\\\"\\n\" % (p))\n@@ -557,23 +505,23 @@ if len(config.fancy) == 1:\n         sys.exit(1)\n     \n     try:\n-        assert \"window_bounds\" not in fancy or (isinstance(fancy[\"window_bounds\"], list) and len(fancy[\"window_bounds\"]) == 4)\n-        assert \"background_picture\" not in fancy or isinstance(fancy[\"background_picture\"], str)\n-        assert \"icon_size\" not in fancy or isinstance(fancy[\"icon_size\"], int)\n-        assert \"applications_symlink\" not in fancy or isinstance(fancy[\"applications_symlink\"], bool)\n-        if \"items_position\" in fancy:\n+        assert not fancy.has_key(\"window_bounds\") or (isinstance(fancy[\"window_bounds\"], list) and len(fancy[\"window_bounds\"]) == 4)\n+        assert not fancy.has_key(\"background_picture\") or isinstance(fancy[\"background_picture\"], str)\n+        assert not fancy.has_key(\"icon_size\") or isinstance(fancy[\"icon_size\"], int)\n+        assert not fancy.has_key(\"applications_symlink\") or isinstance(fancy[\"applications_symlink\"], bool)\n+        if fancy.has_key(\"items_position\"):\n             assert isinstance(fancy[\"items_position\"], dict)\n-            for key, value in fancy[\"items_position\"].items():\n+            for key, value in fancy[\"items_position\"].iteritems():\n                 assert isinstance(value, list) and len(value) == 2 and isinstance(value[0], int) and isinstance(value[1], int)\n     except:\n         if verbose >= 1:\n             sys.stderr.write(\"Error: Bad format of fancy disk image plist at \\\"%s\\\"\\n\" % (p))\n         sys.exit(1)\n     \n-    if \"background_picture\" in fancy:\n+    if fancy.has_key(\"background_picture\"):\n         bp = fancy[\"background_picture\"]\n         if verbose >= 3:\n-            print(\"Fancy: Resolving background picture \\\"%s\\\"...\" % bp)\n+            print \"Fancy: Resolving background picture \\\"%s\\\"...\" % bp\n         if not os.path.exists(bp):\n             bp = os.path.join(os.path.dirname(p), bp)\n             if not os.path.exists(bp):\n@@ -589,35 +537,28 @@ else:\n \n if os.path.exists(\"dist\"):\n     if verbose >= 2:\n-        print(\"+ Removing old dist folder +\")\n+        print \"+ Removing old dist folder +\"\n     \n     shutil.rmtree(\"dist\")\n \n # ------------------------------------------------\n \n-if len(config.volname) == 1:\n-    volname = config.volname[0]\n-else:\n-    volname = app_bundle_name\n-\n-# ------------------------------------------------\n-\n-target = os.path.join(\"dist\", \"Bitcoin-Qt.app\")\n+target = os.path.join(\"dist\", app_bundle)\n \n if verbose >= 2:\n-    print(\"+ Copying source bundle +\")\n+    print \"+ Copying source bundle +\"\n if verbose >= 3:\n-    print(app_bundle, \"->\", target)\n+    print app_bundle, \"->\", target\n \n os.mkdir(\"dist\")\n-shutil.copytree(app_bundle, target, symlinks=True)\n+shutil.copytree(app_bundle, target)\n \n applicationBundle = ApplicationBundleInfo(target)\n \n # ------------------------------------------------\n \n if verbose >= 2:\n-    print(\"+ Deploying frameworks +\")\n+    print \"+ Deploying frameworks +\"\n \n try:\n     deploymentInfo = deployFrameworksForAppBundle(applicationBundle, config.strip, verbose)\n@@ -630,39 +571,32 @@ try:\n except RuntimeError as e:\n     if verbose >= 1:\n         sys.stderr.write(\"Error: %s\\n\" % str(e))\n-    sys.exit(1)\n+    sys.exit(ret)\n \n # ------------------------------------------------\n \n if config.plugins:\n     if verbose >= 2:\n-        print(\"+ Deploying plugins +\")\n+        print \"+ Deploying plugins +\"\n     \n     try:\n         deployPlugins(applicationBundle, deploymentInfo, config.strip, verbose)\n     except RuntimeError as e:\n         if verbose >= 1:\n             sys.stderr.write(\"Error: %s\\n\" % str(e))\n-        sys.exit(1)\n+        sys.exit(ret)\n \n # ------------------------------------------------\n \n if len(config.add_qt_tr) == 0:\n     add_qt_tr = []\n else:\n-    if translations_dir is not None:\n-        qt_tr_dir = translations_dir\n-    else:\n-        if deploymentInfo.qtPath is not None:\n-            qt_tr_dir = os.path.join(deploymentInfo.qtPath, \"translations\")\n-        else:\n-            sys.stderr.write(\"Error: Could not find Qt translation path\\n\")\n-            sys.exit(1)\n+    qt_tr_dir = os.path.join(deploymentInfo.qtPath, \"translations\")\n     add_qt_tr = [\"qt_%s.qm\" % lng for lng in config.add_qt_tr[0].split(\",\")]\n     for lng_file in add_qt_tr:\n         p = os.path.join(qt_tr_dir, lng_file)\n         if verbose >= 3:\n-            print(\"Checking for \\\"%s\\\"...\" % p)\n+            print \"Checking for \\\"%s\\\"...\" % p\n         if not os.path.exists(p):\n             if verbose >= 1:\n                 sys.stderr.write(\"Error: Could not find Qt translation file \\\"%s\\\"\\n\" % (lng_file))\n@@ -671,51 +605,42 @@ else:\n # ------------------------------------------------\n \n if verbose >= 2:\n-    print(\"+ Installing qt.conf +\")\n+    print \"+ Installing qt.conf +\"\n \n-with open(os.path.join(applicationBundle.resourcesPath, \"qt.conf\"), \"wb\") as f:\n-    f.write(qt_conf.encode())\n+f = open(os.path.join(applicationBundle.resourcesPath, \"qt.conf\"), \"wb\")\n+f.write(qt_conf)\n+f.close()\n \n # ------------------------------------------------\n \n if len(add_qt_tr) > 0 and verbose >= 2:\n-    print(\"+ Adding Qt translations +\")\n+    print \"+ Adding Qt translations +\"\n \n for lng_file in add_qt_tr:\n     if verbose >= 3:\n-        print(os.path.join(qt_tr_dir, lng_file), \"->\", os.path.join(applicationBundle.resourcesPath, lng_file))\n+        print os.path.join(qt_tr_dir, lng_file), \"->\", os.path.join(applicationBundle.resourcesPath, lng_file)\n     shutil.copy2(os.path.join(qt_tr_dir, lng_file), os.path.join(applicationBundle.resourcesPath, lng_file))\n \n # ------------------------------------------------\n \n if len(config.add_resources) > 0 and verbose >= 2:\n-    print(\"+ Adding additional resources +\")\n+    print \"+ Adding additional resources +\"\n \n for p in config.add_resources:\n     t = os.path.join(applicationBundle.resourcesPath, os.path.basename(p))\n     if verbose >= 3:\n-        print(p, \"->\", t)\n+        print p, \"->\", t\n     if os.path.isdir(p):\n-        shutil.copytree(p, t, symlinks=True)\n+        shutil.copytree(p, t)\n     else:\n         shutil.copy2(p, t)\n \n # ------------------------------------------------\n \n-if config.sign and 'CODESIGNARGS' not in os.environ:\n-    print(\"You must set the CODESIGNARGS environment variable. Skipping signing.\")\n-elif config.sign:\n-    if verbose >= 1:\n-        print(\"Code-signing app bundle %s\"%(target,))\n-    subprocess.check_call(\"codesign --force %s %s\"%(os.environ['CODESIGNARGS'], target), shell=True)\n-\n-# ------------------------------------------------\n-\n if config.dmg is not None:\n-\n     def runHDIUtil(verb, image_basename, **kwargs):\n         hdiutil_args = [\"hdiutil\", verb, image_basename + \".dmg\"]\n-        if \"capture_stdout\" in kwargs:\n+        if kwargs.has_key(\"capture_stdout\"):\n             del kwargs[\"capture_stdout\"]\n             run = subprocess.check_output\n         else:\n@@ -725,18 +650,18 @@ if config.dmg is not None:\n                 hdiutil_args.append(\"-verbose\")\n             run = subprocess.check_call\n         \n-        for key, value in kwargs.items():\n+        for key, value in kwargs.iteritems():\n             hdiutil_args.append(\"-\" + key)\n             if not value is True:\n                 hdiutil_args.append(str(value))\n         \n-        return run(hdiutil_args, universal_newlines=True)\n+        return run(hdiutil_args)\n     \n     if verbose >= 2:\n         if fancy is None:\n-            print(\"+ Creating .dmg disk image +\")\n+            print \"+ Creating .dmg disk image +\"\n         else:\n-            print(\"+ Preparing .dmg disk image +\")\n+            print \"+ Preparing .dmg disk image +\"\n     \n     if config.dmg != \"\":\n         dmg_name = config.dmg\n@@ -746,27 +671,27 @@ if config.dmg is not None:\n     \n     if fancy is None:\n         try:\n-            runHDIUtil(\"create\", dmg_name, srcfolder=\"dist\", format=\"UDBZ\", volname=volname, ov=True)\n+            runHDIUtil(\"create\", dmg_name, srcfolder=\"dist\", format=\"UDBZ\", volname=app_bundle_name, ov=True)\n         except subprocess.CalledProcessError as e:\n             sys.exit(e.returncode)\n     else:\n         if verbose >= 3:\n-            print(\"Determining size of \\\"dist\\\"...\")\n+            print \"Determining size of \\\"dist\\\"...\"\n         size = 0\n         for path, dirs, files in os.walk(\"dist\"):\n             for file in files:\n                 size += os.path.getsize(os.path.join(path, file))\n-        size += int(size * 0.15)\n+        size += int(size * 0.1)\n         \n         if verbose >= 3:\n-            print(\"Creating temp image for modification...\")\n+            print \"Creating temp image for modification...\"\n         try:\n-            runHDIUtil(\"create\", dmg_name + \".temp\", srcfolder=\"dist\", format=\"UDRW\", size=size, volname=volname, ov=True)\n+            runHDIUtil(\"create\", dmg_name + \".temp\", srcfolder=\"dist\", format=\"UDRW\", size=size, volname=app_bundle_name, ov=True)\n         except subprocess.CalledProcessError as e:\n             sys.exit(e.returncode)\n         \n         if verbose >= 3:\n-            print(\"Attaching temp image...\")\n+            print \"Attaching temp image...\"\n         try:\n             output = runHDIUtil(\"attach\", dmg_name + \".temp\", readwrite=True, noverify=True, noautoopen=True, capture_stdout=True)\n         except subprocess.CalledProcessError as e:\n@@ -777,85 +702,46 @@ if config.dmg is not None:\n         disk_name = m.group(1)\n         \n         if verbose >= 2:\n-            print(\"+ Applying fancy settings +\")\n+            print \"+ Applying fancy settings +\"\n         \n-        if \"background_picture\" in fancy:\n-            bg_path = os.path.join(disk_root, \".background\", os.path.basename(fancy[\"background_picture\"]))\n-            os.mkdir(os.path.dirname(bg_path))\n+        if fancy.has_key(\"background_picture\"):\n+            bg_path = os.path.join(disk_root, os.path.basename(fancy[\"background_picture\"]))\n             if verbose >= 3:\n-                print(fancy[\"background_picture\"], \"->\", bg_path)\n+                print fancy[\"background_picture\"], \"->\", bg_path\n             shutil.copy2(fancy[\"background_picture\"], bg_path)\n         else:\n             bg_path = None\n         \n         if fancy.get(\"applications_symlink\", False):\n             os.symlink(\"/Applications\", os.path.join(disk_root, \"Applications\"))\n         \n-        # The Python appscript package broke with OSX 10.8 and isn't being fixed.\n-        # So we now build up an AppleScript string and use the osascript command\n-        # to make the .dmg file pretty:\n-        appscript = Template( \"\"\"\n-        on run argv\n-           tell application \"Finder\"\n-             tell disk \"$disk\"\n-                   open\n-                   set current view of container window to icon view\n-                   set toolbar visible of container window to false\n-                   set statusbar visible of container window to false\n-                   set the bounds of container window to {$window_bounds}\n-                   set theViewOptions to the icon view options of container window\n-                   set arrangement of theViewOptions to not arranged\n-                   set icon size of theViewOptions to $icon_size\n-                   $background_commands\n-                   $items_positions\n-                   close -- close/reopen works around a bug...\n-                   open\n-                   update without registering applications\n-                   delay 5\n-                   eject\n-             end tell\n-           end tell\n-        end run\n-        \"\"\")\n-\n-        itemscript = Template('set position of item \"${item}\" of container window to {${position}}')\n-        items_positions = []\n-        if \"items_position\" in fancy:\n-            for name, position in fancy[\"items_position\"].items():\n-                params = { \"item\" : name, \"position\" : \",\".join([str(p) for p in position]) }\n-                items_positions.append(itemscript.substitute(params))\n-\n-        params = {\n-            \"disk\" : volname,\n-            \"window_bounds\" : \"300,300,800,620\",\n-            \"icon_size\" : \"96\",\n-            \"background_commands\" : \"\",\n-            \"items_positions\" : \"\\n                   \".join(items_positions)\n-            }\n-        if \"window_bounds\" in fancy:\n-            params[\"window_bounds\"] = \",\".join([str(p) for p in fancy[\"window_bounds\"]])\n-        if \"icon_size\" in fancy:\n-            params[\"icon_size\"] = str(fancy[\"icon_size\"])\n+        finder = appscript.app(\"Finder\")\n+        disk = finder.disks[disk_name]\n+        disk.open()\n+        window = disk.container_window\n+        window.current_view.set(appscript.k.icon_view)\n+        window.toolbar_visible.set(False)\n+        window.statusbar_visible.set(False)\n+        if fancy.has_key(\"window_bounds\"):\n+            window.bounds.set(fancy[\"window_bounds\"])\n+        view_options = window.icon_view_options\n+        view_options.arrangement.set(appscript.k.not_arranged)\n+        if fancy.has_key(\"icon_size\"):\n+            view_options.icon_size.set(fancy[\"icon_size\"])\n         if bg_path is not None:\n-            # Set background file, then call SetFile to make it invisible.\n-            # (note: making it invisible first makes set background picture fail)\n-            bgscript = Template(\"\"\"set background picture of theViewOptions to file \".background:$bgpic\"\n-                   do shell script \"SetFile -a V /Volumes/$disk/.background/$bgpic\" \"\"\")\n-            params[\"background_commands\"] = bgscript.substitute({\"bgpic\" : os.path.basename(bg_path), \"disk\" : params[\"disk\"]})\n-\n-        s = appscript.substitute(params)\n-        if verbose >= 2:\n-            print(\"Running AppleScript:\")\n-            print(s)\n-\n-        p = subprocess.Popen(['osascript', '-'], stdin=subprocess.PIPE)\n-        p.communicate(input=s.encode('utf-8'))\n-        if p.returncode:\n-            print(\"Error running osascript.\")\n-\n+            view_options.background_picture.set(disk.files[os.path.basename(bg_path)])\n+        if fancy.has_key(\"items_position\"):\n+            for name, position in fancy[\"items_position\"].iteritems():\n+                window.items[name].position.set(position)\n+        disk.close()\n+        if bg_path is not None:\n+            subprocess.call([\"SetFile\", \"-a\", \"V\", bg_path])\n+        disk.update(registering_applications=False)\n+        sleep(2)\n+        disk.eject()\n+        \n         if verbose >= 2:\n-            print(\"+ Finalizing .dmg disk image +\")\n-            time.sleep(5)\n+            print \"+ Finalizing .dmg disk image +\"\n         \n         try:\n             runHDIUtil(\"convert\", dmg_name + \".temp\", format=\"UDBZ\", o=dmg_name + \".dmg\", ov=True)\n@@ -867,6 +753,6 @@ if config.dmg is not None:\n # ------------------------------------------------\n \n if verbose >= 2:\n-    print(\"+ Done +\")\n+    print \"+ Done +\"\n \n sys.exit(0)"
      },
      {
        "sha": "9b592fc9556dc03db62ee6a334711bde00115900",
        "filename": "contrib/macdeploy/notes.txt",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/macdeploy/notes.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/macdeploy/notes.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/notes.txt?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,26 @@\n+\n+macdeployqtplus works best on OS X Lion, for Snow Leopard you'd need to install\n+Python 2.7 and make it your default Python installation.\n+\n+You will need the appscript package for the fancy disk image creation to work.\n+Install it by invoking \"sudo easy_install appscript\".\n+\n+Ths script should be invoked in the target directory like this:\n+$source_dir/contrib/macdeploy/macdeployqtplus NovaCoin-Qt.app -add-qt-tr da,de,es,hu,ru,uk,zh_CN,zh_TW -dmg -fancy $source_dir/contrib/macdeploy/fancy.plist -verbose 2\n+\n+During the process, the disk image window will pop up briefly where the fancy\n+settings are applied. This is normal, please do not interfere.\n+\n+You can also set up Qt Creator for invoking the script. For this, go to the\n+\"Projects\" tab on the left side, switch to \"Run Settings\" above and add a\n+deploy configuration. Next add a deploy step choosing \"Custom Process Step\".\n+Fill in the following.\n+\n+Enable custom process step: [x]\n+Command: %{sourceDir}/contrib/macdeploy/macdeployqtplus\n+Working directory: %{buildDir}\n+Command arguments: NovaCoin-Qt.app -add-qt-tr da,de,es,hu,ru,uk,zh_CN,zh_TW -dmg -fancy %{sourceDir}/contrib/macdeploy/fancy.plist -verbose 2\n+\n+After that you can start the deployment process through the menu with\n+Build -> Deploy Project \"novacoin-qt\"\n+"
      },
      {
        "sha": "0ded87c58f4ee721058f914682a283f9f9a69787",
        "filename": "contrib/qos/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/qos/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/qos/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/README.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,5 +0,0 @@\n-### QoS (Quality of service) ###\n-\n-This is a Linux bash script that will set up tc to limit the outgoing bandwidth for connections to the Bitcoin network. It limits outbound TCP traffic with a source or destination port of 8333, but not if the destination IP is within a LAN.\n-\n-This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it."
      },
      {
        "sha": "0d1dd65b4f58f1fdd57c268c508938f6287e8311",
        "filename": "contrib/qos/tc.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 59,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/qos/tc.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/qos/tc.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/tc.sh?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,59 +0,0 @@\n-# Copyright (c) 2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#network interface on which to limit traffic\n-IF=\"eth0\"\n-#limit of the network interface in question\n-LINKCEIL=\"1gbit\"\n-#limit outbound Bitcoin protocol traffic to this rate\n-LIMIT=\"160kbit\"\n-#defines the IPv4 address space for which you wish to disable rate limiting\n-LOCALNET_V4=\"192.168.0.0/16\"\n-#defines the IPv6 address space for which you wish to disable rate limiting\n-LOCALNET_V6=\"fe80::/10\"\n-\n-#delete existing rules\n-tc qdisc del dev ${IF} root\n-\n-#add root class\n-tc qdisc add dev ${IF} root handle 1: htb default 10\n-\n-#add parent class\n-tc class add dev ${IF} parent 1: classid 1:1 htb rate ${LINKCEIL} ceil ${LINKCEIL}\n-\n-#add our two classes. one unlimited, another limited\n-tc class add dev ${IF} parent 1:1 classid 1:10 htb rate ${LINKCEIL} ceil ${LINKCEIL} prio 0\n-tc class add dev ${IF} parent 1:1 classid 1:11 htb rate ${LIMIT} ceil ${LIMIT} prio 1\n-\n-#add handles to our classes so packets marked with <x> go into the class with \"... handle <x> fw ...\"\n-tc filter add dev ${IF} parent 1: protocol ip prio 1 handle 1 fw classid 1:10\n-tc filter add dev ${IF} parent 1: protocol ip prio 2 handle 2 fw classid 1:11\n-\n-if [ ! -z \"${LOCALNET_V6}\" ] ; then\n-\t# v6 cannot have the same priority value as v4\n-\ttc filter add dev ${IF} parent 1: protocol ipv6 prio 3 handle 1 fw classid 1:10\n-\ttc filter add dev ${IF} parent 1: protocol ipv6 prio 4 handle 2 fw classid 1:11\n-fi\n-\n-#delete any existing rules\n-#disable for now\n-#ret=0\n-#while [ $ret -eq 0 ]; do\n-#\tiptables -t mangle -D OUTPUT 1\n-#\tret=$?\n-#done\n-\n-#limit outgoing traffic to and from port 8333. but not when dealing with a host on the local network\n-#\t(defined by $LOCALNET_V4 and $LOCALNET_V6)\n-#\t--set-mark marks packages matching these criteria with the number \"2\" (v4)\n-#\t--set-mark marks packages matching these criteria with the number \"4\" (v6)\n-#\tthese packets are filtered by the tc filter with \"handle 2\"\n-#\tthis filter sends the packages into the 1:11 class, and this class is limited to ${LIMIT}\n-iptables -t mangle -A OUTPUT -p tcp -m tcp --dport 8333 ! -d ${LOCALNET_V4} -j MARK --set-mark 0x2\n-iptables -t mangle -A OUTPUT -p tcp -m tcp --sport 8333 ! -d ${LOCALNET_V4} -j MARK --set-mark 0x2\n-\n-if [ ! -z \"${LOCALNET_V6}\" ] ; then\n-\tip6tables -t mangle -A OUTPUT -p tcp -m tcp --dport 8333 ! -d ${LOCALNET_V6} -j MARK --set-mark 0x4\n-\tip6tables -t mangle -A OUTPUT -p tcp -m tcp --sport 8333 ! -d ${LOCALNET_V6} -j MARK --set-mark 0x4\n-fi"
      },
      {
        "sha": "fd8a8b71298c6b5878c83842cd3f68804560a2e2",
        "filename": "contrib/qt_translations.py",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/qt_translations.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/qt_translations.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qt_translations.py?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,22 @@\n+#!/usr/bin/env python\n+\n+# Helpful little script that spits out a comma-separated list of\n+# language codes for Qt icons that should be included\n+# in binary bitcoin distributions\n+\n+import glob\n+import os\n+import re\n+import sys\n+\n+if len(sys.argv) != 3:\n+  sys.exit(\"Usage: %s $QTDIR/translations $BITCOINDIR/src/qt/locale\"%sys.argv[0])\n+\n+d1 = sys.argv[1]\n+d2 = sys.argv[2]\n+\n+l1 = set([ re.search(r'qt_(.*).qm', f).group(1) for f in glob.glob(os.path.join(d1, 'qt_*.qm')) ])\n+l2 = set([ re.search(r'bitcoin_(.*).qm', f).group(1) for f in glob.glob(os.path.join(d2, 'bitcoin_*.qm')) ])\n+\n+print \",\".join(sorted(l1.intersection(l2)))\n+"
      },
      {
        "sha": "e1e0745fd636d7240a6eb6a20775c9d043eac826",
        "filename": "contrib/rpm/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 185,
        "changes": 185,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/rpm/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/rpm/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/README.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,185 +0,0 @@\n-RPM Spec File Notes\n--------------------\n-\n-The RPM spec file provided here is for Bitcoin-Core 0.12.0 and builds on CentOS\n-7 with either the CentOS provided OpenSSL library or with LibreSSL as packaged\n-at [LibreLAMP.com](https://librelamp.com/). It should hopefully not be too\n-difficult to port the RPM spec file to most RPM based Linux distributions.\n-\n-When porting the spec file to build for a particular distribution, there are\n-some important notes.\n-\n-## Sources\n-\n-It is considered good form for all sources to reference a URL where the source\n-can be downloaded.\n-\n-Sources 0-9 should be reserved for source code tarballs. `Source0` should\n-reference the release tarball available from https://bitcoin.org/bin/ and\n-`Source1` should reference the BerkeleyDB source.\n-\n-Sources 10-99 are for source files that are maintained in the\n-[Bitcoin git repository](https://github.com/bitcoin/bitcoin) but are not part of\n-the release tarball. Most of these will reside in the `contrib` sub-directory.\n-\n-Sources 10-19 should be reserved for miscellaneous configuration files.\n-Currently only `Source10` is used, for the example `bitcoin.conf` file.\n-\n-Sources 20-29 should be reserved for man pages. Currently only `Source20`\n-through `Source23` are used.\n-\n-Sources 30-39 should be reserved for SELinux related files. Currently only\n-`Source30` through `Source32` are used. Until those files are in a tagged\n-release, the full URL specified in the RPM spec file will not work. You can get\n-them from the git repository where you retrieved this file.\n-\n-Sources 100+ are for files that are not source tarballs and are not maintained\n-in the bitcoin git repository. At present only an SVG version of the Bitcoin\n-icon is used.\n-\n-## Patches\n-\n-In general, patches should be avoided. When a packager feels a patch is\n-necessary, the packager should bring the problem to the attention of the bitcoin\n-developers so that an official fix to the issue can make it into the next\n-release.\n-\n-### Patch0 bitcoin-0.12.0-libressl.patch\n-\n-This patch is only needed if building against LibreSSL. LibreSSL is not the\n-standard TLS library on most Linux distributions. The patch will likely not be\n-needed when 0.12.1 is released, a proper fix is already in the Bitcoin git\n-master branch.\n-\n-## BuildRequires\n-\n-The packages specified in the `BuildRequires` are specified according to the\n-package naming convention currently used in CentOS 7 and EPEL for CentOS 7. You\n-may need to change some of the package names for other distributions. This is\n-most likely to be the case with the Qt packages.\n-\n-## BerkeleyDB\n-\n-The `build-unix.md` file recommends building against BerkeleyDB 4.8.30. Even if\n-that is the version your Linux distribution ships with, it probably is a good\n-idea to build Bitcoin Core against a static version of that library compiled\n-according to the instructions in the `build-unix.md` file so that any changes\n-the distribution may make in the future will not result in a problem for users.\n-\n-The problem that can exist, clients built against different versions of\n-BerkeleyDB may not be able read each other's `wallet.dat` file which can make it\n-difficult for a user to recover from backup in the event of a system failure.\n-\n-## Graphical User Interface and Qt Version\n-\n-The RPM spec file will by default build the GUI client linked against the Qt5\n-libraries. If you wish instead to link against the Qt4 libraries you need to\n-pass the switch `-D '_use_qt4 1'` at build time to the `rpmbuild` or `mock`\n-command used to build the packages.\n-\n-If you would prefer not to build the GUI at all, you can pass the switch\n-`-D '_no_gui 1'` to the `rpmbuild` or `mock` build command.\n-\n-## Desktop and KDE Files\n-\n-The desktop and KDE meta files are created in the spec file itself with the\n-`cat` command. This is done to allow easy distribution specific changes without\n-needing to use any patches. A specific timestamp is given to the files so that\n-it does not they do not appear to have been updated every time the package is\n-built. If you do make changes to them, you probably should update timestamp\n-assigned to them in the `touch` command that specifies the timestamp.\n-\n-## SVG, PNG, and XPM Icons\n-\n-The `bitcoin.svg` file is from the source listed as `Source100`. It is used as\n-the source for the PNG and XPM files. The generated PNG and XPM files are given\n-the same timestamp as the source SVG file as a means of indicating they are\n-derived from it.\n-\n-## Systemd\n-\n-This spec file assumes the target distribution uses systemd. That really only\n-matters for the `bitcoin-server` package. At this point, most RPM based\n-distributions that still receive vendor updates do in fact use systemd.\n-\n-The files to control the service are created in the RPM spec file itself using\n-the `cat` command. This is done to make it easy to modify for other\n-distributions that may implement things differently without needing to patch\n-source. A specific timestamp is given to the files so that they do not appear\n-to have been updated every time the package is built. If you do make changes to\n-them, you probably should update the timestamp assigned to them in the `touch`\n-command that specifies the timestamp.\n-\n-## SELinux\n-\n-The `bitcoin-server` package should have SELinux support. How to properly do\n-that *may* vary by distribution and version of distribution.\n-\n-The SELinux stuff in this RPM spec file *should* be correct for CentOS, RHEL,\n-and Fedora but it would be a good idea to review it before building the package\n-on other distributions.\n-\n-## Tests\n-\n-The `%check` section takes a very long time to run. If your build system has a\n-time limit for package build, you may need to make an exception for this\n-package. On CentOS 7 the `%check` section completes successfully with both\n-OpenSSL and LibreSSL, a failure really does mean something is wrong.\n-\n-## LibreSSL Build Notes\n-\n-To build against LibreSSL you will need to pass the switch\n-`-D '_use_libressl 1'` to the `rpmbuild` or `mock` command or the spec file will\n-want the OpenSSL development files.\n-\n-### LibreSSL and Boost\n-\n-LibreSSL (and some newer builds of OpenSSL) do not have support for SSLv3. This\n-can cause issues with the Boost package if the Boost package has not been\n-patched accordingly. On those distributions, you will either need to build\n-Bitcoin-Core against OpenSSL or use a patched version of Boost in the build\n-system.\n-\n-As SSLv3 is no longer safe, distributions that have not patched Boost to work\n-with TLS libraries that do not support SSLv3 should have bug reports filed\n-against the Boost package. This bug report has already been filed for RHEL 7 but\n-it may need to be filed for other distributions.\n-\n-A patch for Boost: https://github.com/boostorg/asio/pull/23/files\n-\n-## ZeroMQ\n-\n-At this time, this RPM spec file does not support the ZeroMQ build options. A\n-suitable version of ZeroMQ is not available for the platform this spec file was\n-developed on (CentOS 7).\n-\n-## Legacy Credit\n-\n-This RPM spec file is largely based upon the work of Michael Hampton at\n-[Ringing Liberty](https://www.ringingliberty.com/bitcoin/). He has been\n-packaging Bitcoin for Fedora at least since 2012.\n-\n-Most of the differences between his packaging and this package are stylistic in\n-nature. The major differences:\n-\n-1. He builds from a github tagged release rather than a release tarball. This\n-should not result in different source code.\n-\n-2. He does not build BerkeleyDB but instead uses the BerkeleyDB provided by the\n-Linux distribution. For the distributions he packages for, they currently all\n-use the same version of BerkeleyDB so that difference is *probably* just\n-academic.\n-\n-3. As of his 10.11.2 package he did not allow for building against LibreSSL,\n-specifying a build without the Qt GUI, or specifying which version of the Qt\n-libraries to use.\n-\n-4. I renamed the `bitcoin` package that contains the Qt GUI to `bitcoin-core` as\n-that appears to be how the general population refers to it, in contrast to\n-`bitcoin-xt` or `bitcoin-classic`. I wanted to make sure the general population\n-knows what they are getting when installing the GUI package.\n-\n-As far as minor differences, I generally prefer to assign the file permissions\n-in the `%files` portion of an RPM spec file rather than specifying the\n-permissions of a file during `%install` and other minor things like that\n-are largely just cosmetic."
      },
      {
        "sha": "555614a06d49ab820fce1e08f723005b26cdcb01",
        "filename": "contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin-0.12.0-libressl.patch?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,24 +0,0 @@\n-diff -ur bitcoin-0.12.0.orig/src/init.cpp bitcoin-0.12.0/src/init.cpp\n---- bitcoin-0.12.0.orig/src/init.cpp\t2015-12-31 16:00:00.000000000 -0800\n-+++ bitcoin-0.12.0/src/init.cpp\t2016-02-23 06:03:47.133227757 -0800\n-@@ -1075,7 +1075,7 @@\n-     if (fPrintToDebugLog)\n-         OpenDebugLog();\n- \n--#if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n-+#if defined(LIBRESSL_VERSION_NUMBER) || (OPENSSL_VERSION_NUMBER < 0x10100000L)\n-     LogPrintf(\"Using OpenSSL version %s\\n\", SSLeay_version(SSLEAY_VERSION));\n- #else\n-     LogPrintf(\"Using OpenSSL version %s\\n\", OpenSSL_version(OPENSSL_VERSION));\n-diff -ur bitcoin-0.12.0.orig/src/qt/rpcconsole.cpp bitcoin-0.12.0/src/qt/rpcconsole.cpp\n---- bitcoin-0.12.0.orig/src/qt/rpcconsole.cpp\t2015-12-31 16:00:00.000000000 -0800\n-+++ bitcoin-0.12.0/src/qt/rpcconsole.cpp\t2016-02-23 15:09:42.881126841 -0800\n-@@ -264,7 +264,7 @@\n- \n-     // set library version labels\n- \n--#if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n-+#if defined(LIBRESSL_VERSION_NUMBER) || (OPENSSL_VERSION_NUMBER < 0x10100000L)\n-     ui->openSSLVersion->setText(SSLeay_version(SSLEAY_VERSION));\n- #else\n-     ui->openSSLVersion->setText(OpenSSL_version(OPENSSL_VERSION));"
      },
      {
        "sha": "6f5eef6375255381f7c4552715ffdaf329e4a502",
        "filename": "contrib/rpm/bitcoin.fc",
        "status": "removed",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/rpm/bitcoin.fc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/rpm/bitcoin.fc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.fc?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,8 +0,0 @@\n-/usr/bin/bitcoin-cli\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n-/usr/sbin/bitcoind\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n-/usr/lib(64)?/bitcoin/bitcoind\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n-\n-/etc/bitcoin(/.*)?\t\tgen_context(system_u:object_r:bitcoin_conf_t,s0)\n-/var/lib/bitcoin(/.*)?\t\tgen_context(system_u:object_r:bitcoin_var_lib_t,s0)\n-\n-(/var)?/run/bitcoind(/.*)?   gen_context(system_u:object_r:bitcoin_var_run_t,s0)"
      },
      {
        "sha": "b206866cc5eb4abc3075f8692637a7096d7f0b0e",
        "filename": "contrib/rpm/bitcoin.if",
        "status": "removed",
        "additions": 0,
        "deletions": 157,
        "changes": 157,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/rpm/bitcoin.if",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/rpm/bitcoin.if",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.if?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,157 +0,0 @@\n-\n-## <summary>policy for bitcoin</summary>\n-\n-\n-########################################\n-## <summary>\n-##\tTransition to bitcoin.\n-## </summary>\n-## <param name=\"domain\">\n-## <summary>\n-##\tDomain allowed to transition.\n-## </summary>\n-## </param>\n-#\n-interface(`bitcoin_domtrans',`\n-\tgen_require(`\n-\t\ttype bitcoin_t, bitcoin_exec_t;\n-\t')\n-\n-\tcorecmd_search_bin($1)\n-\tdomtrans_pattern($1, bitcoin_exec_t, bitcoin_t)\n-')\n-\n-\n-########################################\n-## <summary>\n-##\tExecute bitcoin server in the bitcoin domain.\n-## </summary>\n-## <param name=\"domain\">\n-##\t<summary>\n-##\tDomain allowed access.\n-##\t</summary>\n-## </param>\n-#\n-interface(`bitcoin_initrc_domtrans',`\n-\tgen_require(`\n-\t\ttype bitcoin_initrc_exec_t;\n-\t')\n-\n-\tinit_labeled_script_domtrans($1, bitcoin_initrc_exec_t)\n-')\n-\n-\n-########################################\n-## <summary>\n-##\tSearch bitcoin lib directories.\n-## </summary>\n-## <param name=\"domain\">\n-##\t<summary>\n-##\tDomain allowed access.\n-##\t</summary>\n-## </param>\n-#\n-interface(`bitcoin_search_lib',`\n-\tgen_require(`\n-\t\ttype bitcoin_var_lib_t;\n-\t')\n-\n-\tallow $1 bitcoin_var_lib_t:dir search_dir_perms;\n-\tfiles_search_var_lib($1)\n-')\n-\n-########################################\n-## <summary>\n-##\tRead bitcoin lib files.\n-## </summary>\n-## <param name=\"domain\">\n-##\t<summary>\n-##\tDomain allowed access.\n-##\t</summary>\n-## </param>\n-#\n-interface(`bitcoin_read_lib_files',`\n-\tgen_require(`\n-\t\ttype bitcoin_var_lib_t;\n-\t')\n-\n-\tfiles_search_var_lib($1)\n-\tread_files_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n-')\n-\n-########################################\n-## <summary>\n-##\tManage bitcoin lib files.\n-## </summary>\n-## <param name=\"domain\">\n-##\t<summary>\n-##\tDomain allowed access.\n-##\t</summary>\n-## </param>\n-#\n-interface(`bitcoin_manage_lib_files',`\n-\tgen_require(`\n-\t\ttype bitcoin_var_lib_t;\n-\t')\n-\n-\tfiles_search_var_lib($1)\n-\tmanage_files_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n-')\n-\n-########################################\n-## <summary>\n-##\tManage bitcoin lib directories.\n-## </summary>\n-## <param name=\"domain\">\n-##\t<summary>\n-##\tDomain allowed access.\n-##\t</summary>\n-## </param>\n-#\n-interface(`bitcoin_manage_lib_dirs',`\n-\tgen_require(`\n-\t\ttype bitcoin_var_lib_t;\n-\t')\n-\n-\tfiles_search_var_lib($1)\n-\tmanage_dirs_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n-')\n-\n-\n-########################################\n-## <summary>\n-##\tAll of the rules required to administrate\n-##\ta bitcoin environment\n-## </summary>\n-## <param name=\"domain\">\n-##\t<summary>\n-##\tDomain allowed access.\n-##\t</summary>\n-## </param>\n-## <param name=\"role\">\n-##\t<summary>\n-##\tRole allowed access.\n-##\t</summary>\n-## </param>\n-## <rolecap/>\n-#\n-interface(`bitcoin_admin',`\n-\tgen_require(`\n-\t\ttype bitcoin_t;\n-\t\ttype bitcoin_initrc_exec_t;\n-\t\ttype bitcoin_var_lib_t;\n-\t')\n-\n-\tallow $1 bitcoin_t:process { ptrace signal_perms };\n-\tps_process_pattern($1, bitcoin_t)\n-\n-\tbitcoin_initrc_domtrans($1)\n-\tdomain_system_change_exemption($1)\n-\trole_transition $2 bitcoin_initrc_exec_t system_r;\n-\tallow $2 system_r;\n-\n-\tfiles_search_var_lib($1)\n-\tadmin_pattern($1, bitcoin_var_lib_t)\n-\n-')\n-"
      },
      {
        "sha": "7c4d933ee05a41ea41d02a358c9b0f4ba3f638e9",
        "filename": "contrib/rpm/bitcoin.spec",
        "status": "removed",
        "additions": 0,
        "deletions": 442,
        "changes": 442,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/rpm/bitcoin.spec",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/rpm/bitcoin.spec",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.spec?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,442 +0,0 @@\n-%define bdbv 4.8.30\n-%global selinux_variants mls strict targeted\n-\n-%if 0%{?_no_gui:1}\n-%define _buildqt 0\n-%define buildargs --with-gui=no\n-%else\n-%define _buildqt 1\n-%if 0%{?_use_qt4}\n-%define buildargs --with-qrencode --with-gui=qt4\n-%else\n-%define buildargs --with-qrencode --with-gui=qt5\n-%endif\n-%endif\n-\n-Name:\t\tbitcoin\n-Version:\t0.12.0\n-Release:\t2%{?dist}\n-Summary:\tPeer to Peer Cryptographic Currency\n-\n-Group:\t\tApplications/System\n-License:\tMIT\n-URL:\t\thttps://bitcoin.org/\n-Source0:\thttps://bitcoin.org/bin/bitcoin-core-%{version}/bitcoin-%{version}.tar.gz\n-Source1:\thttp://download.oracle.com/berkeley-db/db-%{bdbv}.NC.tar.gz\n-\n-Source10:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/debian/examples/bitcoin.conf\n-\n-#man pages\n-Source20:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/doc/man/bitcoind.1\n-Source21:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/doc/man/bitcoin-cli.1\n-Source22:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/doc/man/bitcoin-qt.1\n-\n-#selinux\n-Source30:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.te\n-# Source31 - what about bitcoin-tx and bench_bitcoin ???\n-Source31:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.fc\n-Source32:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.if\n-\n-Source100:\thttps://upload.wikimedia.org/wikipedia/commons/4/46/Bitcoin.svg\n-\n-%if 0%{?_use_libressl:1}\n-BuildRequires:\tlibressl-devel\n-%else\n-BuildRequires:\topenssl-devel\n-%endif\n-BuildRequires:\tboost-devel\n-BuildRequires:\tminiupnpc-devel\n-BuildRequires:\tautoconf automake libtool\n-BuildRequires:\tlibevent-devel\n-\n-\n-Patch0:\t\tbitcoin-0.12.0-libressl.patch\n-\n-\n-%description\n-Bitcoin is a digital cryptographic currency that uses peer-to-peer technology to\n-operate with no central authority or banks; managing transactions and the\n-issuing of bitcoins is carried out collectively by the network.\n-\n-%if %{_buildqt}\n-%package core\n-Summary:\tPeer to Peer Cryptographic Currency\n-Group:\t\tApplications/System\n-Obsoletes:\t%{name} < %{version}-%{release}\n-Provides:\t%{name} = %{version}-%{release}\n-%if 0%{?_use_qt4}\n-BuildRequires:\tqt-devel\n-%else\n-BuildRequires:\tqt5-qtbase-devel\n-# for /usr/bin/lrelease-qt5\n-BuildRequires:\tqt5-linguist\n-%endif\n-BuildRequires:\tprotobuf-devel\n-BuildRequires:\tqrencode-devel\n-BuildRequires:\t%{_bindir}/desktop-file-validate\n-# for icon generation from SVG\n-BuildRequires:\t%{_bindir}/inkscape\n-BuildRequires:\t%{_bindir}/convert\n-\n-%description core\n-Bitcoin is a digital cryptographic currency that uses peer-to-peer technology to\n-operate with no central authority or banks; managing transactions and the\n-issuing of bitcoins is carried out collectively by the network.\n-\n-This package contains the Qt based graphical client and node. If you are looking\n-to run a Bitcoin wallet, this is probably the package you want.\n-%endif\n-\n-\n-%package libs\n-Summary:\tBitcoin shared libraries\n-Group:\t\tSystem Environment/Libraries\n-\n-%description libs\n-This package provides the bitcoinconsensus shared libraries. These libraries\n-may be used by third party software to provide consensus verification\n-functionality.\n-\n-Unless you know need this package, you probably do not.\n-\n-%package devel\n-Summary:\tDevelopment files for bitcoin\n-Group:\t\tDevelopment/Libraries\n-Requires:\t%{name}-libs = %{version}-%{release}\n-\n-%description devel\n-This package contains the header files and static library for the\n-bitcoinconsensus shared library. If you are developing or compiling software\n-that wants to link against that library, then you need this package installed.\n-\n-Most people do not need this package installed.\n-\n-%package server\n-Summary:\tThe bitcoin daemon\n-Group:\t\tSystem Environment/Daemons\n-Requires:\tbitcoin-utils = %{version}-%{release}\n-Requires:\tselinux-policy policycoreutils-python\n-Requires(pre):\tshadow-utils\n-Requires(post):\t%{_sbindir}/semodule %{_sbindir}/restorecon %{_sbindir}/fixfiles %{_sbindir}/sestatus\n-Requires(postun):\t%{_sbindir}/semodule %{_sbindir}/restorecon %{_sbindir}/fixfiles %{_sbindir}/sestatus\n-BuildRequires:\tsystemd\n-BuildRequires:\tcheckpolicy\n-BuildRequires:\t%{_datadir}/selinux/devel/Makefile\n-\n-%description server\n-This package provides a stand-alone bitcoin-core daemon. For most users, this\n-package is only needed if they need a full-node without the graphical client.\n-\n-Some third party wallet software will want this package to provide the actual\n-bitcoin-core node they use to connect to the network.\n-\n-If you use the graphical bitcoin-core client then you almost certainly do not\n-need this package.\n-\n-%package utils\n-Summary:\tBitcoin utilities\n-Group:\t\tApplications/System\n-\n-%description utils\n-This package provides several command line utilities for interacting with a\n-bitcoin-core daemon.\n-\n-The bitcoin-cli utility allows you to communicate and control a bitcoin daemon\n-over RPC, the bitcoin-tx utility allows you to create a custom transaction, and\n-the bench_bitcoin utility can be used to perform some benchmarks.\n-\n-This package contains utilities needed by the bitcoin-server package.\n-\n-\n-%prep\n-%setup -q\n-%patch0 -p1 -b .libressl\n-cp -p %{SOURCE10} ./bitcoin.conf.example\n-tar -zxf %{SOURCE1}\n-cp -p db-%{bdbv}.NC/LICENSE ./db-%{bdbv}.NC-LICENSE\n-mkdir db4 SELinux\n-cp -p %{SOURCE30} %{SOURCE31} %{SOURCE32} SELinux/\n-\n-\n-%build\n-CWD=`pwd`\n-cd db-%{bdbv}.NC/build_unix/\n-../dist/configure --enable-cxx --disable-shared --with-pic --prefix=${CWD}/db4\n-make install\n-cd ../..\n-\n-./autogen.sh\n-%configure LDFLAGS=\"-L${CWD}/db4/lib/\" CPPFLAGS=\"-I${CWD}/db4/include/\" --with-miniupnpc --enable-glibc-back-compat %{buildargs}\n-make %{?_smp_mflags}\n-\n-pushd SELinux\n-for selinuxvariant in %{selinux_variants}; do\n-\tmake NAME=${selinuxvariant} -f %{_datadir}/selinux/devel/Makefile\n-\tmv bitcoin.pp bitcoin.pp.${selinuxvariant}\n-\tmake NAME=${selinuxvariant} -f %{_datadir}/selinux/devel/Makefile clean\n-done\n-popd\n-\n-\n-%install\n-make install DESTDIR=%{buildroot}\n-\n-mkdir -p -m755 %{buildroot}%{_sbindir}\n-mv %{buildroot}%{_bindir}/bitcoind %{buildroot}%{_sbindir}/bitcoind\n-\n-# systemd stuff\n-mkdir -p %{buildroot}%{_tmpfilesdir}\n-cat <<EOF > %{buildroot}%{_tmpfilesdir}/bitcoin.conf\n-d /run/bitcoind 0750 bitcoin bitcoin -\n-EOF\n-touch -a -m -t 201504280000 %{buildroot}%{_tmpfilesdir}/bitcoin.conf\n-\n-mkdir -p %{buildroot}%{_sysconfdir}/sysconfig\n-cat <<EOF > %{buildroot}%{_sysconfdir}/sysconfig/bitcoin\n-# Provide options to the bitcoin daemon here, for example\n-# OPTIONS=\"-testnet -disable-wallet\"\n-\n-OPTIONS=\"\"\n-\n-# System service defaults.\n-# Don't change these unless you know what you're doing.\n-CONFIG_FILE=\"%{_sysconfdir}/bitcoin/bitcoin.conf\"\n-DATA_DIR=\"%{_localstatedir}/lib/bitcoin\"\n-PID_FILE=\"/run/bitcoind/bitcoind.pid\"\n-EOF\n-touch -a -m -t 201504280000 %{buildroot}%{_sysconfdir}/sysconfig/bitcoin\n-\n-mkdir -p %{buildroot}%{_unitdir}\n-cat <<EOF > %{buildroot}%{_unitdir}/bitcoin.service\n-[Unit]\n-Description=Bitcoin daemon\n-After=syslog.target network.target\n-\n-[Service]\n-Type=forking\n-ExecStart=%{_sbindir}/bitcoind -daemon -conf=\\${CONFIG_FILE} -datadir=\\${DATA_DIR} -pid=\\${PID_FILE} \\$OPTIONS\n-EnvironmentFile=%{_sysconfdir}/sysconfig/bitcoin\n-User=bitcoin\n-Group=bitcoin\n-\n-Restart=on-failure\n-PrivateTmp=true\n-TimeoutStopSec=120\n-TimeoutStartSec=60\n-StartLimitInterval=240\n-StartLimitBurst=5\n-\n-[Install]\n-WantedBy=multi-user.target\n-EOF\n-touch -a -m -t 201504280000 %{buildroot}%{_unitdir}/bitcoin.service\n-#end systemd stuff\n-\n-mkdir %{buildroot}%{_sysconfdir}/bitcoin\n-mkdir -p %{buildroot}%{_localstatedir}/lib/bitcoin\n-\n-#SELinux\n-for selinuxvariant in %{selinux_variants}; do\n-\tinstall -d %{buildroot}%{_datadir}/selinux/${selinuxvariant}\n-\tinstall -p -m 644 SELinux/bitcoin.pp.${selinuxvariant} %{buildroot}%{_datadir}/selinux/${selinuxvariant}/bitcoin.pp\n-done\n-\n-%if %{_buildqt}\n-# qt icons\n-install -D -p share/pixmaps/bitcoin.ico %{buildroot}%{_datadir}/pixmaps/bitcoin.ico\n-install -p share/pixmaps/nsis-header.bmp %{buildroot}%{_datadir}/pixmaps/\n-install -p share/pixmaps/nsis-wizard.bmp %{buildroot}%{_datadir}/pixmaps/\n-install -p %{SOURCE100} %{buildroot}%{_datadir}/pixmaps/bitcoin.svg\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin16.png -w16 -h16\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin32.png -w32 -h32\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin64.png -w64 -h64\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin128.png -w128 -h128\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin256.png -w256 -h256\n-%{_bindir}/convert -resize 16x16 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin16.xpm\n-%{_bindir}/convert -resize 32x32 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin32.xpm\n-%{_bindir}/convert -resize 64x64 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin64.xpm\n-%{_bindir}/convert -resize 128x128 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin128.xpm\n-%{_bindir}/convert %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin256.xpm\n-touch %{buildroot}%{_datadir}/pixmaps/*.png -r %{SOURCE100}\n-touch %{buildroot}%{_datadir}/pixmaps/*.xpm -r %{SOURCE100}\n-\n-# Desktop File - change the touch timestamp if modifying\n-mkdir -p %{buildroot}%{_datadir}/applications\n-cat <<EOF > %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n-[Desktop Entry]\n-Encoding=UTF-8\n-Name=Bitcoin\n-Comment=Bitcoin P2P Cryptocurrency\n-Comment[fr]=Bitcoin, monnaie virtuelle cryptographique pair \u00e0 pair\n-Comment[tr]=Bitcoin, e\u015ften e\u015fe kriptografik sanal para birimi\n-Exec=bitcoin-qt %u\n-Terminal=false\n-Type=Application\n-Icon=bitcoin128\n-MimeType=x-scheme-handler/bitcoin;\n-Categories=Office;Finance;\n-EOF\n-# change touch date when modifying desktop\n-touch -a -m -t 201511100546 %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n-%{_bindir}/desktop-file-validate %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n-\n-# KDE protocol - change the touch timestamp if modifying\n-mkdir -p %{buildroot}%{_datadir}/kde4/services\n-cat <<EOF > %{buildroot}%{_datadir}/kde4/services/bitcoin-core.protocol\n-[Protocol]\n-exec=bitcoin-qt '%u'\n-protocol=bitcoin\n-input=none\n-output=none\n-helper=true\n-listing=\n-reading=false\n-writing=false\n-makedir=false\n-deleting=false\n-EOF\n-# change touch date when modifying protocol\n-touch -a -m -t 201511100546 %{buildroot}%{_datadir}/kde4/services/bitcoin-core.protocol\n-%endif\n-\n-# man pages\n-install -D -p %{SOURCE20} %{buildroot}%{_mandir}/man1/bitcoind.1\n-install -p %{SOURCE21} %{buildroot}%{_mandir}/man1/bitcoin-cli.1\n-%if %{_buildqt}\n-install -p %{SOURCE22} %{buildroot}%{_mandir}/man1/bitcoin-qt.1\n-%endif\n-\n-# nuke these, we do extensive testing of binaries in %%check before packaging\n-rm -f %{buildroot}%{_bindir}/test_*\n-\n-%check\n-make check\n-srcdir=src test/bitcoin-util-test.py\n-test/functional/test_runner.py --extended\n-\n-%post libs -p /sbin/ldconfig\n-\n-%postun libs -p /sbin/ldconfig\n-\n-%pre server\n-getent group bitcoin >/dev/null || groupadd -r bitcoin\n-getent passwd bitcoin >/dev/null ||\n-\tuseradd -r -g bitcoin -d /var/lib/bitcoin -s /sbin/nologin \\\n-\t-c \"Bitcoin wallet server\" bitcoin\n-exit 0\n-\n-%post server\n-%systemd_post bitcoin.service\n-# SELinux\n-if [ `%{_sbindir}/sestatus |grep -c \"disabled\"` -eq 0 ]; then\n-for selinuxvariant in %{selinux_variants}; do\n-\t%{_sbindir}/semodule -s ${selinuxvariant} -i %{_datadir}/selinux/${selinuxvariant}/bitcoin.pp &> /dev/null || :\n-done\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 8332\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 8333\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18332\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18333\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18443\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18444\n-%{_sbindir}/fixfiles -R bitcoin-server restore &> /dev/null || :\n-%{_sbindir}/restorecon -R %{_localstatedir}/lib/bitcoin || :\n-fi\n-\n-%posttrans server\n-%{_bindir}/systemd-tmpfiles --create\n-\n-%preun server\n-%systemd_preun bitcoin.service\n-\n-%postun server\n-%systemd_postun bitcoin.service\n-# SELinux\n-if [ $1 -eq 0 ]; then\n-\tif [ `%{_sbindir}/sestatus |grep -c \"disabled\"` -eq 0 ]; then\n-\t%{_sbindir}/semanage port -d -p tcp 8332\n-\t%{_sbindir}/semanage port -d -p tcp 8333\n-\t%{_sbindir}/semanage port -d -p tcp 18332\n-\t%{_sbindir}/semanage port -d -p tcp 18333\n-\t%{_sbindir}/semanage port -d -p tcp 18443\n-\t%{_sbindir}/semanage port -d -p tcp 18444\n-\tfor selinuxvariant in %{selinux_variants}; do\n-\t\t%{_sbindir}/semodule -s ${selinuxvariant} -r bitcoin &> /dev/null || :\n-\tdone\n-\t%{_sbindir}/fixfiles -R bitcoin-server restore &> /dev/null || :\n-\t[ -d %{_localstatedir}/lib/bitcoin ] && \\\n-\t\t%{_sbindir}/restorecon -R %{_localstatedir}/lib/bitcoin &> /dev/null || :\n-\tfi\n-fi\n-\n-%clean\n-rm -rf %{buildroot}\n-\n-%if %{_buildqt}\n-%files core\n-%defattr(-,root,root,-)\n-%license COPYING db-%{bdbv}.NC-LICENSE\n-%doc COPYING bitcoin.conf.example doc/README.md doc/bips.md doc/files.md doc/multiwallet-qt.md doc/reduce-traffic.md doc/release-notes.md doc/tor.md\n-%attr(0755,root,root) %{_bindir}/bitcoin-qt\n-%attr(0644,root,root) %{_datadir}/applications/bitcoin-core.desktop\n-%attr(0644,root,root) %{_datadir}/kde4/services/bitcoin-core.protocol\n-%attr(0644,root,root) %{_datadir}/pixmaps/*.ico\n-%attr(0644,root,root) %{_datadir}/pixmaps/*.bmp\n-%attr(0644,root,root) %{_datadir}/pixmaps/*.svg\n-%attr(0644,root,root) %{_datadir}/pixmaps/*.png\n-%attr(0644,root,root) %{_datadir}/pixmaps/*.xpm\n-%attr(0644,root,root) %{_mandir}/man1/bitcoin-qt.1*\n-%endif\n-\n-%files libs\n-%defattr(-,root,root,-)\n-%license COPYING\n-%doc COPYING doc/README.md doc/shared-libraries.md\n-%{_libdir}/lib*.so.*\n-\n-%files devel\n-%defattr(-,root,root,-)\n-%license COPYING\n-%doc COPYING doc/README.md doc/developer-notes.md doc/shared-libraries.md\n-%attr(0644,root,root) %{_includedir}/*.h\n-%{_libdir}/*.so\n-%{_libdir}/*.a\n-%{_libdir}/*.la\n-%attr(0644,root,root) %{_libdir}/pkgconfig/*.pc\n-\n-%files server\n-%defattr(-,root,root,-)\n-%license COPYING db-%{bdbv}.NC-LICENSE\n-%doc COPYING bitcoin.conf.example doc/README.md doc/REST-interface.md doc/bips.md doc/dnsseed-policy.md doc/files.md doc/reduce-traffic.md doc/release-notes.md doc/tor.md\n-%attr(0755,root,root) %{_sbindir}/bitcoind\n-%attr(0644,root,root) %{_tmpfilesdir}/bitcoin.conf\n-%attr(0644,root,root) %{_unitdir}/bitcoin.service\n-%dir %attr(0750,bitcoin,bitcoin) %{_sysconfdir}/bitcoin\n-%dir %attr(0750,bitcoin,bitcoin) %{_localstatedir}/lib/bitcoin\n-%config(noreplace) %attr(0600,root,root) %{_sysconfdir}/sysconfig/bitcoin\n-%attr(0644,root,root) %{_datadir}/selinux/*/*.pp\n-%attr(0644,root,root) %{_mandir}/man1/bitcoind.1*\n-\n-%files utils\n-%defattr(-,root,root,-)\n-%license COPYING\n-%doc COPYING bitcoin.conf.example doc/README.md\n-%attr(0755,root,root) %{_bindir}/bitcoin-cli\n-%attr(0755,root,root) %{_bindir}/bitcoin-tx\n-%attr(0755,root,root) %{_bindir}/bench_bitcoin\n-%attr(0644,root,root) %{_mandir}/man1/bitcoin-cli.1*\n-\n-\n-\n-%changelog\n-* Fri Feb 26 2016 Alice Wonder <buildmaster@librelamp.com> - 0.12.0-2\n-- Rename Qt package from bitcoin to bitcoin-core\n-- Make building of the Qt package optional\n-- When building the Qt package, default to Qt5 but allow building\n--  against Qt4\n-- Only run SELinux stuff in post scripts if it is not set to disabled\n-\n-* Wed Feb 24 2016 Alice Wonder <buildmaster@librelamp.com> - 0.12.0-1\n-- Initial spec file for 0.12.0 release\n-\n-# This spec file is written from scratch but a lot of the packaging decisions are directly\n-# based upon the 0.11.2 package spec file from https://www.ringingliberty.com/bitcoin/"
      },
      {
        "sha": "d6231c591a24312b3c073f7658533587279aeba7",
        "filename": "contrib/rpm/bitcoin.te",
        "status": "removed",
        "additions": 0,
        "deletions": 81,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/rpm/bitcoin.te",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/rpm/bitcoin.te",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.te?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,81 +0,0 @@\n-policy_module(bitcoin, 1.100.1)\n-\n-########################################\n-#\n-# Declarations\n-#\n-\n-type bitcoin_t;\n-type bitcoin_exec_t;\n-init_daemon_domain(bitcoin_t, bitcoin_exec_t)\n-\n-permissive bitcoin_t;\n-\n-type bitcoin_initrc_exec_t;\n-init_script_file(bitcoin_initrc_exec_t)\n-\n-type bitcoin_conf_t;\n-files_type(bitcoin_conf_t)\n-\n-type bitcoin_var_lib_t;\n-files_type(bitcoin_var_lib_t)\n-\n-type bitcoin_var_run_t;\n-files_type(bitcoin_var_run_t)\n-\n-type bitcoin_port_t;\n-corenet_port(bitcoin_port_t)\n-\n-########################################\n-#\n-# bitcoin local policy\n-#\n-allow bitcoin_t self:process { fork };\n-\n-allow bitcoin_t self:fifo_file rw_fifo_file_perms;\n-allow bitcoin_t self:unix_stream_socket create_stream_socket_perms;\n-\n-manage_dirs_pattern(bitcoin_t, bitcoin_conf_t, bitcoin_conf_t)\n-manage_files_pattern(bitcoin_t, bitcoin_conf_t, bitcoin_conf_t)\n-\n-manage_dirs_pattern(bitcoin_t, bitcoin_var_lib_t, bitcoin_var_lib_t)\n-manage_files_pattern(bitcoin_t, bitcoin_var_lib_t, bitcoin_var_lib_t)\n-files_var_lib_filetrans(bitcoin_t, bitcoin_var_lib_t, { dir file })\n-\n-manage_dirs_pattern(bitcoin_t, bitcoin_var_run_t, bitcoin_var_run_t)\n-manage_files_pattern(bitcoin_t, bitcoin_var_run_t, bitcoin_var_run_t)\n-\n-sysnet_dns_name_resolve(bitcoin_t)\n-corenet_all_recvfrom_unlabeled(bitcoin_t)\n-\n-allow bitcoin_t self:tcp_socket create_stream_socket_perms;\n-corenet_tcp_sendrecv_generic_if(bitcoin_t)\n-corenet_tcp_sendrecv_generic_node(bitcoin_t)\n-corenet_tcp_sendrecv_all_ports(bitcoin_t)\n-corenet_tcp_bind_generic_node(bitcoin_t)\n-\n-gen_require(`\n-    type bitcoin_port_t;\n-')\n-allow bitcoin_t bitcoin_port_t:tcp_socket name_bind;\n-\n-gen_require(`\n-    type bitcoin_port_t;\n-')\n-allow bitcoin_t bitcoin_port_t:tcp_socket name_connect;\n-\n-domain_use_interactive_fds(bitcoin_t)\n-\n-files_read_etc_files(bitcoin_t)\n-\n-miscfiles_read_localization(bitcoin_t)\n-\n-sysnet_dns_name_resolve(bitcoin_t)\n-\n-allow bitcoin_t bitcoin_exec_t:file execute_no_trans;\n-allow bitcoin_t self:process setsched;\n-corecmd_exec_ls(bitcoin_t)\n-corenet_tcp_connect_http_port(bitcoin_t)\n-dev_read_urand(bitcoin_t)\n-fs_getattr_xattr_fs(bitcoin_t)\n-kernel_read_system_state(bitcoin_t)"
      },
      {
        "sha": "6dc277f2985aa9b9c06c4ccc583a26a6c0ce1e4f",
        "filename": "contrib/seeds/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/seeds/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/seeds/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/README.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,21 +0,0 @@\n-# Seeds\n-\n-Utility to generate the seeds.txt list that is compiled into the client\n-(see [src/chainparamsseeds.h](/src/chainparamsseeds.h) and other utilities in [contrib/seeds](/contrib/seeds)).\n-\n-Be sure to update `PATTERN_AGENT` in `makeseeds.py` to include the current version,\n-and remove old versions as necessary (at a minimum when GetDesireableServiceFlags\n-changes its default return value, as those are the services which seeds are added\n-to addrman with).\n-\n-The seeds compiled into the release are created from sipa's DNS seed data, like this:\n-\n-    curl -s http://bitcoin.sipa.be/seeds.txt.gz | gzip -dc > seeds_main.txt\n-    python3 makeseeds.py < seeds_main.txt > nodes_main.txt\n-    python3 generate-seeds.py . > ../../src/chainparamsseeds.h\n-\n-## Dependencies\n-\n-Ubuntu:\n-\n-    sudo apt-get install python3-dnspython"
      },
      {
        "sha": "72eb7255f30e9c084bd8890a7d05c7b8b08dd0c6",
        "filename": "contrib/seeds/generate-seeds.py",
        "status": "removed",
        "additions": 0,
        "deletions": 139,
        "changes": 139,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/seeds/generate-seeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/seeds/generate-seeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/generate-seeds.py?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,139 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2014-2017 Wladimir J. van der Laan\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Script to generate list of seed nodes for chainparams.cpp.\n-\n-This script expects two text files in the directory that is passed as an\n-argument:\n-\n-    nodes_main.txt\n-    nodes_test.txt\n-\n-These files must consist of lines in the format \n-\n-    <ip>\n-    <ip>:<port>\n-    [<ipv6>]\n-    [<ipv6>]:<port>\n-    <onion>.onion\n-    0xDDBBCCAA (IPv4 little-endian old pnSeeds format)\n-\n-The output will be two data structures with the peers in binary format:\n-\n-   static SeedSpec6 pnSeed6_main[]={\n-   ...\n-   }\n-   static SeedSpec6 pnSeed6_test[]={\n-   ...\n-   }\n-\n-These should be pasted into `src/chainparamsseeds.h`.\n-'''\n-\n-from base64 import b32decode\n-from binascii import a2b_hex\n-import sys\n-import os\n-import re\n-\n-# ipv4 in ipv6 prefix\n-pchIPv4 = bytearray([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff])\n-# tor-specific ipv6 prefix\n-pchOnionCat = bytearray([0xFD,0x87,0xD8,0x7E,0xEB,0x43])\n-\n-def name_to_ipv6(addr):\n-    if len(addr)>6 and addr.endswith('.onion'):\n-        vchAddr = b32decode(addr[0:-6], True)\n-        if len(vchAddr) != 16-len(pchOnionCat):\n-            raise ValueError('Invalid onion %s' % vchAddr)\n-        return pchOnionCat + vchAddr\n-    elif '.' in addr: # IPv4\n-        return pchIPv4 + bytearray((int(x) for x in addr.split('.')))\n-    elif ':' in addr: # IPv6\n-        sub = [[], []] # prefix, suffix\n-        x = 0\n-        addr = addr.split(':')\n-        for i,comp in enumerate(addr):\n-            if comp == '':\n-                if i == 0 or i == (len(addr)-1): # skip empty component at beginning or end\n-                    continue\n-                x += 1 # :: skips to suffix\n-                assert(x < 2)\n-            else: # two bytes per component\n-                val = int(comp, 16)\n-                sub[x].append(val >> 8)\n-                sub[x].append(val & 0xff)\n-        nullbytes = 16 - len(sub[0]) - len(sub[1])\n-        assert((x == 0 and nullbytes == 0) or (x == 1 and nullbytes > 0))\n-        return bytearray(sub[0] + ([0] * nullbytes) + sub[1])\n-    elif addr.startswith('0x'): # IPv4-in-little-endian\n-        return pchIPv4 + bytearray(reversed(a2b_hex(addr[2:])))\n-    else:\n-        raise ValueError('Could not parse address %s' % addr)\n-\n-def parse_spec(s, defaultport):\n-    match = re.match('\\[([0-9a-fA-F:]+)\\](?::([0-9]+))?$', s)\n-    if match: # ipv6\n-        host = match.group(1)\n-        port = match.group(2)\n-    elif s.count(':') > 1: # ipv6, no port\n-        host = s\n-        port = ''\n-    else:\n-        (host,_,port) = s.partition(':')\n-\n-    if not port:\n-        port = defaultport\n-    else:\n-        port = int(port)\n-\n-    host = name_to_ipv6(host)\n-\n-    return (host,port)\n-\n-def process_nodes(g, f, structname, defaultport):\n-    g.write('static SeedSpec6 %s[] = {\\n' % structname)\n-    first = True\n-    for line in f:\n-        comment = line.find('#')\n-        if comment != -1:\n-            line = line[0:comment]\n-        line = line.strip()\n-        if not line:\n-            continue\n-        if not first:\n-            g.write(',\\n')\n-        first = False\n-\n-        (host,port) = parse_spec(line, defaultport)\n-        hoststr = ','.join(('0x%02x' % b) for b in host)\n-        g.write('    {{%s}, %i}' % (hoststr, port))\n-    g.write('\\n};\\n')\n-\n-def main():\n-    if len(sys.argv)<2:\n-        print(('Usage: %s <path_to_nodes_txt>' % sys.argv[0]), file=sys.stderr)\n-        sys.exit(1)\n-    g = sys.stdout\n-    indir = sys.argv[1]\n-    g.write('#ifndef BITCOIN_CHAINPARAMSSEEDS_H\\n')\n-    g.write('#define BITCOIN_CHAINPARAMSSEEDS_H\\n')\n-    g.write('/**\\n')\n-    g.write(' * List of fixed seed nodes for the bitcoin network\\n')\n-    g.write(' * AUTOGENERATED by contrib/seeds/generate-seeds.py\\n')\n-    g.write(' *\\n')\n-    g.write(' * Each line contains a 16-byte IPv6 address and a port.\\n')\n-    g.write(' * IPv4 as well as onion addresses are wrapped inside an IPv6 address accordingly.\\n')\n-    g.write(' */\\n')\n-    with open(os.path.join(indir,'nodes_main.txt'),'r') as f:\n-        process_nodes(g, f, 'pnSeed6_main', 8333)\n-    g.write('\\n')\n-    with open(os.path.join(indir,'nodes_test.txt'),'r') as f:\n-        process_nodes(g, f, 'pnSeed6_test', 18333)\n-    g.write('#endif // BITCOIN_CHAINPARAMSSEEDS_H\\n')\n-\n-if __name__ == '__main__':\n-    main()\n-"
      },
      {
        "sha": "59044e701af8cf07f98cff9dc0055e905fb4406d",
        "filename": "contrib/seeds/makeseeds.py",
        "status": "removed",
        "additions": 0,
        "deletions": 172,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/seeds/makeseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/seeds/makeseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/makeseeds.py?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,172 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2013-2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-# Generate seeds.txt from Pieter's DNS seeder\n-#\n-\n-import re\n-import sys\n-import dns.resolver\n-import collections\n-\n-NSEEDS=512\n-\n-MAX_SEEDS_PER_ASN=2\n-\n-MIN_BLOCKS = 337600\n-\n-# These are hosts that have been observed to be behaving strangely (e.g.\n-# aggressively connecting to every node).\n-SUSPICIOUS_HOSTS = {\n-    \"130.211.129.106\", \"178.63.107.226\",\n-    \"83.81.130.26\", \"88.198.17.7\", \"148.251.238.178\", \"176.9.46.6\",\n-    \"54.173.72.127\", \"54.174.10.182\", \"54.183.64.54\", \"54.194.231.211\",\n-    \"54.66.214.167\", \"54.66.220.137\", \"54.67.33.14\", \"54.77.251.214\",\n-    \"54.94.195.96\", \"54.94.200.247\"\n-}\n-\n-PATTERN_IPV4 = re.compile(r\"^((\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})):(\\d+)$\")\n-PATTERN_IPV6 = re.compile(r\"^\\[([0-9a-z:]+)\\]:(\\d+)$\")\n-PATTERN_ONION = re.compile(r\"^([abcdefghijklmnopqrstuvwxyz234567]{16}\\.onion):(\\d+)$\")\n-PATTERN_AGENT = re.compile(r\"^(/Satoshi:0.13.(1|2|99)/|/Satoshi:0.14.(0|1|2|99)/|/Satoshi:0.15.(0|1|2|99)/)$\")\n-\n-def parseline(line):\n-    sline = line.split()\n-    if len(sline) < 11:\n-       return None\n-    m = PATTERN_IPV4.match(sline[0])\n-    sortkey = None\n-    ip = None\n-    if m is None:\n-        m = PATTERN_IPV6.match(sline[0])\n-        if m is None:\n-            m = PATTERN_ONION.match(sline[0])\n-            if m is None:\n-                return None\n-            else:\n-                net = 'onion'\n-                ipstr = sortkey = m.group(1)\n-                port = int(m.group(2))\n-        else:\n-            net = 'ipv6'\n-            if m.group(1) in ['::']: # Not interested in localhost\n-                return None\n-            ipstr = m.group(1)\n-            sortkey = ipstr # XXX parse IPv6 into number, could use name_to_ipv6 from generate-seeds\n-            port = int(m.group(2))\n-    else:\n-        # Do IPv4 sanity check\n-        ip = 0\n-        for i in range(0,4):\n-            if int(m.group(i+2)) < 0 or int(m.group(i+2)) > 255:\n-                return None\n-            ip = ip + (int(m.group(i+2)) << (8*(3-i)))\n-        if ip == 0:\n-            return None\n-        net = 'ipv4'\n-        sortkey = ip\n-        ipstr = m.group(1)\n-        port = int(m.group(6))\n-    # Skip bad results.\n-    if sline[1] == 0:\n-        return None\n-    # Extract uptime %.\n-    uptime30 = float(sline[7][:-1])\n-    # Extract Unix timestamp of last success.\n-    lastsuccess = int(sline[2])\n-    # Extract protocol version.\n-    version = int(sline[10])\n-    # Extract user agent.\n-    agent = sline[11][1:-1]\n-    # Extract service flags.\n-    service = int(sline[9], 16)\n-    # Extract blocks.\n-    blocks = int(sline[8])\n-    # Construct result.\n-    return {\n-        'net': net,\n-        'ip': ipstr,\n-        'port': port,\n-        'ipnum': ip,\n-        'uptime': uptime30,\n-        'lastsuccess': lastsuccess,\n-        'version': version,\n-        'agent': agent,\n-        'service': service,\n-        'blocks': blocks,\n-        'sortkey': sortkey,\n-    }\n-\n-def filtermultiport(ips):\n-    '''Filter out hosts with more nodes per IP'''\n-    hist = collections.defaultdict(list)\n-    for ip in ips:\n-        hist[ip['sortkey']].append(ip)\n-    return [value[0] for (key,value) in list(hist.items()) if len(value)==1]\n-\n-# Based on Greg Maxwell's seed_filter.py\n-def filterbyasn(ips, max_per_asn, max_total):\n-    # Sift out ips by type\n-    ips_ipv4 = [ip for ip in ips if ip['net'] == 'ipv4']\n-    ips_ipv6 = [ip for ip in ips if ip['net'] == 'ipv6']\n-    ips_onion = [ip for ip in ips if ip['net'] == 'onion']\n-\n-    # Filter IPv4 by ASN\n-    result = []\n-    asn_count = {}\n-    for ip in ips_ipv4:\n-        if len(result) == max_total:\n-            break\n-        try:\n-            asn = int([x.to_text() for x in dns.resolver.query('.'.join(reversed(ip['ip'].split('.'))) + '.origin.asn.cymru.com', 'TXT').response.answer][0].split('\\\"')[1].split(' ')[0])\n-            if asn not in asn_count:\n-                asn_count[asn] = 0\n-            if asn_count[asn] == max_per_asn:\n-                continue\n-            asn_count[asn] += 1\n-            result.append(ip)\n-        except:\n-            sys.stderr.write('ERR: Could not resolve ASN for \"' + ip['ip'] + '\"\\n')\n-\n-    # TODO: filter IPv6 by ASN\n-\n-    # Add back non-IPv4\n-    result.extend(ips_ipv6)\n-    result.extend(ips_onion)\n-    return result\n-\n-def main():\n-    lines = sys.stdin.readlines()\n-    ips = [parseline(line) for line in lines]\n-\n-    # Skip entries with valid address.\n-    ips = [ip for ip in ips if ip is not None]\n-    # Skip entries from suspicious hosts.\n-    ips = [ip for ip in ips if ip['ip'] not in SUSPICIOUS_HOSTS]\n-    # Enforce minimal number of blocks.\n-    ips = [ip for ip in ips if ip['blocks'] >= MIN_BLOCKS]\n-    # Require service bit 1.\n-    ips = [ip for ip in ips if (ip['service'] & 1) == 1]\n-    # Require at least 50% 30-day uptime.\n-    ips = [ip for ip in ips if ip['uptime'] > 50]\n-    # Require a known and recent user agent.\n-    ips = [ip for ip in ips if PATTERN_AGENT.match(ip['agent'])]\n-    # Sort by availability (and use last success as tie breaker)\n-    ips.sort(key=lambda x: (x['uptime'], x['lastsuccess'], x['ip']), reverse=True)\n-    # Filter out hosts with multiple bitcoin ports, these are likely abusive\n-    ips = filtermultiport(ips)\n-    # Look up ASNs and limit results, both per ASN and globally.\n-    ips = filterbyasn(ips, MAX_SEEDS_PER_ASN, NSEEDS)\n-    # Sort the results by IP address (for deterministic output).\n-    ips.sort(key=lambda x: (x['net'], x['sortkey']))\n-\n-    for ip in ips:\n-        if ip['net'] == 'ipv6':\n-            print('[%s]:%i' % (ip['ip'], ip['port']))\n-        else:\n-            print('%s:%i' % (ip['ip'], ip['port']))\n-\n-if __name__ == '__main__':\n-    main()"
      },
      {
        "sha": "01a386c60e9cf234540e5d28e0d06f7c9bc68688",
        "filename": "contrib/seeds/nodes_main.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 1525,
        "changes": 1525,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/seeds/nodes_main.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/seeds/nodes_main.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_main.txt?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,1525 +0,0 @@\n-5.19.5.127:8333\n-5.29.139.120:8333\n-5.39.64.7:8333\n-5.39.174.116:8333\n-5.45.69.13:8333\n-5.45.75.15:8333\n-5.45.108.108:8333\n-5.101.140.194:8333\n-5.133.13.56:8333\n-5.175.24.7:8333\n-5.189.133.130:8333\n-5.228.64.71:8333\n-13.80.67.162:8333\n-14.192.8.27:21301\n-23.89.193.201:8333\n-23.125.224.84:8333\n-23.225.160.26:8333\n-23.226.231.122:8333\n-23.227.204.78:8333\n-23.238.132.188:8333\n-23.240.67.204:8333\n-24.25.141.186:8333\n-24.120.235.185:8333\n-24.138.188.60:8333\n-24.211.229.7:8333\n-24.220.78.161:8333\n-24.225.34.62:8333\n-24.232.136.119:8333\n-27.68.131.10:8333\n-31.28.10.13:8333\n-31.31.203.113:8333\n-31.145.106.61:8333\n-31.211.102.129:62734\n-37.48.64.140:8333\n-37.120.163.181:8333\n-37.134.167.91:8333\n-37.191.225.174:8333\n-37.192.41.32:8333\n-37.194.10.30:8333\n-37.200.34.18:8333\n-37.205.8.78:8333\n-38.27.100.44:8333\n-38.102.69.70:8333\n-38.104.225.30:8333\n-41.86.104.94:8333\n-41.170.64.8:8333\n-43.229.76.45:8333\n-43.248.160.151:8333\n-45.32.65.19:8333\n-45.62.198.46:8333\n-46.19.136.138:8333\n-46.20.246.117:8333\n-46.28.69.138:8333\n-46.28.205.112:8333\n-46.160.195.121:8333\n-46.163.118.51:8333\n-46.166.129.159:8333\n-46.183.236.254:8333\n-46.227.101.176:8333\n-46.229.168.201:8333\n-46.238.238.176:8333\n-46.242.131.168:8333\n-47.20.103.108:8333\n-47.94.224.99:8333\n-47.187.1.83:8333\n-47.223.232.58:8333\n-47.254.128.15:8333\n-47.254.128.197:8333\n-50.2.189.35:8333\n-50.28.99.81:8333\n-50.31.170.51:8333\n-50.126.194.190:8333\n-51.15.0.17:8333\n-52.29.0.37:8333\n-52.59.96.11:8333\n-52.225.128.191:8333\n-54.84.98.69:8333\n-54.197.4.92:8333\n-54.223.136.62:8333\n-58.173.224.98:8333\n-58.229.208.166:8333\n-61.125.131.55:8333\n-62.13.193.206:8333\n-62.45.0.15:8333\n-62.107.200.30:8333\n-62.133.194.156:8333\n-62.138.11.10:8333\n-62.182.171.116:8333\n-62.195.193.35:8333\n-62.210.161.249:8333\n-63.141.228.18:8333\n-63.143.37.46:8333\n-64.34.231.140:8333\n-64.39.234.49:8333\n-64.110.25.26:8333\n-64.121.35.3:8333\n-65.19.155.88:8333\n-66.18.172.16:8333\n-66.160.128.215:8333\n-66.180.64.95:8333\n-66.194.38.250:8333\n-67.68.101.249:8333\n-67.128.36.90:8333\n-67.148.60.130:8333\n-67.210.228.203:8333\n-67.225.134.26:8333\n-68.12.98.246:8333\n-68.199.10.75:8333\n-69.39.49.199:8333\n-69.41.171.35:8333\n-69.41.171.224:8333\n-69.64.34.1:8333\n-69.64.46.27:8333\n-69.64.225.2:8333\n-69.159.134.58:8333\n-69.181.160.80:8333\n-69.222.192.88:8333\n-70.15.74.72:8333\n-70.35.98.12:8333\n-70.60.65.62:8333\n-70.113.33.131:8333\n-71.85.226.76:8333\n-71.93.161.162:8333\n-73.241.192.40:8333\n-74.118.192.119:8333\n-74.122.237.124:8333\n-75.159.6.167:8333\n-76.10.157.58:8333\n-76.92.136.75:8333\n-77.95.226.194:8333\n-77.163.136.136:8333\n-77.234.50.2:8333\n-77.239.37.12:8333\n-78.31.67.156:8333\n-78.109.163.153:8333\n-78.130.161.78:8333\n-78.192.35.130:8333\n-78.248.65.34:8333\n-79.46.194.163:8333\n-79.77.6.136:8333\n-79.98.196.89:8333\n-79.154.97.168:8333\n-79.165.235.119:8333\n-79.169.35.235:8333\n-79.182.167.137:8333\n-80.82.67.182:8333\n-80.82.77.138:8333\n-80.84.54.26:8333\n-80.208.224.217:8333\n-80.208.227.53:8333\n-80.220.43.228:8333\n-80.254.188.235:8333\n-81.7.10.251:8333\n-81.7.13.84:8333\n-81.18.224.62:8333\n-81.27.96.37:8333\n-81.108.196.72:8333\n-81.186.243.220:8333\n-81.228.194.187:8333\n-82.72.198.68:8333\n-82.74.224.35:8333\n-82.96.64.6:8333\n-82.117.166.77:8333\n-82.118.236.69:8333\n-82.161.109.190:8333\n-82.193.102.228:8333\n-82.193.109.199:8333\n-82.199.102.10:8333\n-82.200.204.119:8333\n-82.202.197.224:8333\n-82.212.7.242:8333\n-82.221.108.27:8333\n-82.221.128.81:8333\n-83.50.134.8:8333\n-83.78.33.135:8333\n-83.137.41.10:8333\n-83.150.37.94:8333\n-83.162.43.154:8333\n-83.164.131.242:8333\n-83.164.131.243:8333\n-83.209.8.140:8333\n-83.236.135.251:8333\n-83.243.59.41:8333\n-83.249.13.223:8333\n-83.250.86.108:8333\n-84.94.235.161:8333\n-84.117.1.27:8333\n-84.200.106.128:8333\n-84.213.64.21:8333\n-84.226.164.161:8333\n-84.245.27.130:8333\n-84.251.161.205:8333\n-85.5.1.72:8333\n-85.10.41.41:8333\n-85.25.194.12:8333\n-85.95.241.46:8333\n-85.129.0.126:8333\n-85.170.232.245:8333\n-85.195.232.39:8333\n-85.214.68.122:8333\n-85.214.235.137:8333\n-85.245.167.246:8333\n-86.8.35.17:8333\n-86.105.5.113:8333\n-86.106.131.179:8333\n-87.79.68.86:8333\n-87.120.8.5:8333\n-87.239.202.239:8333\n-88.98.198.130:8333\n-88.149.106.236:8333\n-88.207.236.175:8333\n-89.35.29.3:8333\n-89.38.96.70:8333\n-89.142.65.151:8333\n-89.163.224.195:8333\n-89.179.240.131:8333\n-89.230.96.42:8333\n-89.236.101.52:8333\n-90.191.203.18:8333\n-91.65.7.30:8333\n-91.65.192.159:8333\n-91.135.0.187:8333\n-91.154.113.227:8333\n-91.195.42.134:8333\n-91.202.67.107:8333\n-91.221.71.115:8333\n-91.224.0.227:8333\n-91.224.1.17:8333\n-91.225.236.145:8333\n-91.228.45.130:8333\n-91.231.229.136:8333\n-91.238.100.249:8333\n-92.27.142.29:8333\n-92.62.34.184:8333\n-92.177.2.181:8333\n-92.249.169.36:8333\n-92.255.176.109:8333\n-93.75.18.151:8333\n-93.79.204.222:10333\n-93.95.100.155:8333\n-93.113.131.134:8333\n-93.170.13.15:8333\n-93.179.197.152:8333\n-93.190.205.25:8333\n-94.59.135.148:8333\n-94.156.35.8:8333\n-94.177.106.189:8333\n-94.181.44.104:8333\n-94.198.97.215:8333\n-94.236.198.253:8333\n-94.237.64.138:8333\n-94.242.232.92:8333\n-95.84.134.107:8333\n-95.105.183.183:8333\n-95.191.130.100:8333\n-95.213.161.2:8333\n-95.226.77.108:8333\n-96.20.227.39:8333\n-96.23.67.85:8333\n-96.27.8.242:8333\n-98.5.31.251:8333\n-98.127.130.17:8333\n-98.162.209.130:8333\n-99.198.237.76:8333\n-99.238.3.86:8333\n-101.165.34.253:8333\n-103.44.162.50:8333\n-103.56.136.105:8333\n-103.59.166.139:8333\n-103.60.97.21:8333\n-103.79.107.144:8333\n-103.80.168.57:8333\n-103.85.14.106:8333\n-103.100.44.58:8333\n-103.250.4.74:8333\n-103.250.5.74:8333\n-104.32.162.149:8333\n-104.156.99.240:8333\n-104.156.103.72:8333\n-104.168.101.207:8333\n-104.171.113.52:8333\n-104.197.64.3:8333\n-104.199.192.85:8333\n-104.200.67.161:8333\n-104.220.16.253:8333\n-104.237.4.26:8333\n-104.238.198.165:8333\n-107.180.85.93:33244\n-108.4.11.29:8333\n-108.49.194.58:8333\n-108.175.3.18:8333\n-109.61.102.5:8333\n-109.106.136.195:8333\n-109.110.95.201:8333\n-109.172.104.119:8333\n-110.4.40.147:8333\n-112.187.178.116:8333\n-113.105.139.42:8333\n-115.90.171.158:8333\n-116.88.75.110:8333\n-116.250.193.234:8333\n-117.141.138.240:8333\n-118.67.201.40:8333\n-118.89.229.178:8333\n-118.211.167.90:8333\n-120.79.64.154:8333\n-121.200.5.186:8333\n-121.254.173.39:8333\n-123.2.128.107:8333\n-123.203.163.128:8333\n-128.1.68.46:8333\n-128.125.100.2:8333\n-130.89.78.87:8333\n-130.204.75.3:8333\n-131.114.10.233:8333\n-131.188.40.191:8333\n-132.148.130.51:8333\n-134.255.226.233:8333\n-135.23.194.98:8333\n-136.25.137.220:8333\n-136.55.10.249:8333\n-136.243.32.38:8333\n-136.243.64.23:8333\n-137.226.34.46:8333\n-139.59.96.16:8333\n-139.162.160.232:8333\n-139.199.228.84:8333\n-141.134.71.188:8333\n-141.138.137.40:8333\n-145.129.31.147:8333\n-146.71.76.53:8333\n-146.71.76.236:8333\n-149.210.228.108:8333\n-150.229.0.143:8333\n-150.249.76.102:8333\n-153.125.224.44:8333\n-155.4.99.150:8333\n-155.133.129.97:8333\n-157.159.103.161:8333\n-158.140.201.35:8333\n-158.140.229.62:8333\n-158.181.104.132:8333\n-158.181.134.193:8333\n-160.16.135.187:8333\n-162.221.224.63:8333\n-165.165.132.68:8333\n-165.194.35.203:8333\n-166.230.70.145:8333\n-169.44.34.203:8333\n-169.48.163.176:8333\n-170.75.162.180:8333\n-170.75.195.168:8333\n-171.25.165.145:8333\n-172.96.161.138:8333\n-172.98.193.45:8333\n-172.103.164.75:8333\n-172.110.8.233:8333\n-173.209.53.114:8333\n-173.212.192.117:8333\n-173.243.64.49:8333\n-173.255.224.185:8333\n-174.100.131.151:8333\n-174.113.66.230:8333\n-174.138.62.90:8333\n-176.10.136.25:8333\n-176.23.13.27:8333\n-176.24.220.141:8333\n-176.106.252.173:8333\n-176.126.167.10:8333\n-177.52.173.63:8333\n-178.78.226.178:8333\n-178.132.4.123:8333\n-178.175.144.122:8333\n-178.221.66.212:8333\n-178.236.130.229:8333\n-178.254.7.88:8333\n-178.254.34.144:8333\n-178.255.41.21:8333\n-179.48.251.41:8333\n-182.247.238.169:8333\n-183.111.29.28:8333\n-184.64.12.109:8333\n-184.70.33.190:8333\n-184.95.38.218:8333\n-185.8.172.121:8333\n-185.11.82.38:8333\n-185.12.7.38:8333\n-185.12.236.242:8333\n-185.20.226.148:8333\n-185.21.216.134:8333\n-185.22.232.167:8333\n-185.28.76.179:8333\n-185.31.136.69:8333\n-185.35.137.175:8333\n-185.35.138.84:8333\n-185.35.182.123:8333\n-185.47.132.109:8333\n-185.53.128.180:8333\n-185.63.172.14:8333\n-185.64.104.2:8333\n-185.70.105.74:8339\n-185.77.128.69:8333\n-185.77.129.176:8333\n-185.85.3.137:8333\n-185.102.71.6:8333\n-185.121.173.223:8333\n-185.127.17.167:8333\n-185.154.156.50:8333\n-185.162.128.83:8333\n-185.183.161.35:8333\n-185.189.199.248:8333\n-185.215.224.107:8333\n-186.5.136.70:8333\n-186.31.4.202:8333\n-188.27.80.126:8333\n-188.65.212.49:8333\n-188.116.140.127:8333\n-188.134.79.145:8333\n-188.214.128.18:8333\n-188.214.128.175:8333\n-188.227.64.19:8333\n-188.234.241.172:8333\n-188.253.2.125:8333\n-190.10.8.211:8333\n-190.145.22.202:8333\n-190.184.198.34:8333\n-190.210.234.38:8333\n-192.92.129.5:8333\n-192.121.170.180:8333\n-192.162.100.156:8333\n-192.162.210.91:8333\n-192.169.6.127:8333\n-192.175.59.140:8333\n-192.222.237.16:8333\n-192.228.101.157:8333\n-193.23.181.135:8333\n-193.49.43.219:8333\n-193.106.30.173:8333\n-193.138.224.230:8333\n-193.224.22.45:8333\n-194.15.231.236:8333\n-194.106.216.20:8333\n-194.186.160.253:8333\n-194.246.86.32:8333\n-195.22.104.23:8333\n-195.49.75.233:8333\n-195.91.244.138:8333\n-195.169.99.82:8333\n-196.28.98.21:8333\n-196.220.67.151:8333\n-197.155.6.43:8333\n-197.189.236.250:8333\n-197.234.69.146:8333\n-198.143.12.105:8333\n-198.187.28.2:8333\n-199.68.197.5:8333\n-199.127.224.50:8333\n-199.193.6.14:8333\n-199.201.110.146:8333\n-200.109.67.71:8333\n-200.122.128.130:8333\n-201.238.223.165:8333\n-202.47.225.242:8333\n-203.60.2.67:8333\n-204.15.11.4:8333\n-204.15.11.8:8333\n-204.138.165.35:8333\n-206.123.11.139:8333\n-206.253.163.226:8333\n-207.188.16.16:8333\n-208.77.18.25:8333\n-208.86.161.83:8333\n-208.100.137.204:8333\n-208.107.224.202:8333\n-208.118.235.190:8333\n-209.159.137.146:8333\n-209.161.4.164:8333\n-209.197.13.62:8333\n-210.211.109.165:8333\n-211.151.38.92:8333\n-212.32.229.230:8333\n-212.51.14.72:8333\n-212.56.108.81:8333\n-212.110.171.118:8333\n-212.124.160.199:8333\n-212.128.44.49:8333\n-212.149.235.185:8333\n-212.199.175.30:8333\n-212.237.96.98:8333\n-213.67.99.142:8333\n-213.91.205.134:8333\n-213.115.224.252:8333\n-213.131.12.10:8333\n-213.132.76.184:8333\n-213.152.161.170:45893\n-213.155.3.216:8333\n-213.156.108.63:8333\n-213.219.162.146:8333\n-216.36.179.27:8333\n-216.184.8.26:8333\n-216.245.218.242:8333\n-217.12.204.86:8333\n-217.20.130.72:8333\n-217.169.7.111:8333\n-217.182.192.7:8333\n-217.199.99.30:8333\n-219.88.232.229:8333\n-220.130.128.58:8333\n-220.191.169.90:8333\n-221.127.43.207:8333\n-222.239.193.210:8333\n-223.17.202.206:8333\n-[2001:0:4137:9e76:10f2:2873:970b:2068]:8333\n-[2001:0:4137:9e76:10f6:1aa2:ae9d:4286]:8333\n-[2001:0:4137:9e76:140a:d05:c1e1:b5c4]:8333\n-[2001:0:4137:9e76:142a:1957:b61e:56e]:8333\n-[2001:0:4137:9e76:142d:fac:2aaf:e4c2]:8333\n-[2001:0:4137:9e76:1471:452:6671:8274]:8333\n-[2001:0:4137:9e76:1482:530:b145:7e28]:8333\n-[2001:0:4137:9e76:18ac:3954:3901:a257]:8333\n-[2001:0:4137:9e76:18d5:3c77:829a:6fe6]:8333\n-[2001:0:4137:9e76:2066:164f:b39d:b087]:8333\n-[2001:0:4137:9e76:2069:78b:b7d5:5860]:8333\n-[2001:0:4137:9e76:20ac:22b1:bb18:1160]:8333\n-[2001:0:4137:9e76:20f6:147f:e7e9:ddd1]:8333\n-[2001:0:4137:9e76:20fa:3126:97f1:600d]:8333\n-[2001:0:4137:9e76:2457:f34:a313:4b99]:8333\n-[2001:0:4137:9e76:28f4:2512:bc91:2e53]:8333\n-[2001:0:4137:9e76:2c55:fa9:fde5:5d86]:8333\n-[2001:0:4137:9e76:2cba:1828:52ae:7501]:8333\n-[2001:0:4137:9e76:2cf3:78fc:a138:e6ed]:8333\n-[2001:0:4137:9e76:3001:bf6:be62:cce5]:8333\n-[2001:0:4137:9e76:30a8:3afb:b6d5:2bd7]:8333\n-[2001:0:4137:9e76:30e6:44d:ae7f:749d]:8333\n-[2001:0:4137:9e76:3402:daf:b475:daf9]:8333\n-[2001:0:4137:9e76:3423:3d03:d771:d501]:8333\n-[2001:0:4137:9e76:3424:211:b600:b4cb]:8333\n-[2001:0:4137:9e76:342f:1453:cddc:4f03]:8333\n-[2001:0:4137:9e76:3457:248d:a0b9:3bc9]:8333\n-[2001:0:4137:9e76:386f:3846:b995:188]:8333\n-[2001:0:4137:9e76:38a8:318a:e7dc:aee1]:8333\n-[2001:0:4137:9e76:38eb:1e88:addb:181c]:8333\n-[2001:0:4137:9e76:3c39:27e3:4758:365c]:8333\n-[2001:0:4137:9e76:3c7d:3fa4:86ad:4ebb]:8333\n-[2001:0:4137:9e76:3cfd:3181:b2c7:5c5e]:8333\n-[2001:0:4137:9e76:401:2157:684e:f2d6]:8333\n-[2001:0:4137:9e76:43a:1a64:bd14:fb16]:8333\n-[2001:0:4137:9e76:47d:bb:ae1e:2948]:8333\n-[2001:0:4137:9e76:843:9b9e:cd0a:6655]:8333\n-[2001:0:4137:9e76:886:3c19:addd:9a58]:8333\n-[2001:0:4137:9e76:8ba:9f8:9ead:f21]:8333\n-[2001:0:4137:9e76:c06:124c:a482:a761]:8333\n-[2001:0:4137:9e76:cda:b84:8d4c:d1e6]:8333\n-[2001:0:53aa:64c:20:a71:858b:83f7]:8333\n-[2001:0:53aa:64c:c5:235d:a10d:e0]:8333\n-[2001:0:5ef5:79fb:103a:23fb:bb8a:ed5b]:8333\n-[2001:0:5ef5:79fb:1064:d3d:51ff:5938]:8333\n-[2001:0:5ef5:79fb:10fd:1369:715e:6aa7]:8333\n-[2001:0:5ef5:79fb:14d5:1758:b17d:5eb1]:8333\n-[2001:0:5ef5:79fb:1817:2634:9fc9:1bc4]:8333\n-[2001:0:5ef5:79fb:181a:2717:9441:c1eb]:8333\n-[2001:0:5ef5:79fb:1875:bc8:b1c2:1b4]:8333\n-[2001:0:5ef5:79fb:18b5:3185:51a2:35d]:8333\n-[2001:0:5ef5:79fb:18c3:feb:b471:49d1]:8333\n-[2001:0:5ef5:79fb:18dd:3bd5:418f:c1e]:8333\n-[2001:0:5ef5:79fb:1c19:3062:bcaa:96b]:8333\n-[2001:0:5ef5:79fb:1c53:14bd:b8d9:7aa2]:8333\n-[2001:0:5ef5:79fb:1c60:82b:94fd:a452]:8333\n-[2001:0:5ef5:79fb:1c85:2e50:ba7d:a1a]:8333\n-[2001:0:5ef5:79fb:1cff:2d43:51f9:b889]:8333\n-[2001:0:5ef5:79fb:2074:221a:4750:eb12]:8333\n-[2001:0:5ef5:79fb:208f:2d83:e0f5:e31f]:8333\n-[2001:0:5ef5:79fb:2092:371f:9dfb:98cd]:8333\n-[2001:0:5ef5:79fb:20f3:39a2:39ca:38c]:8333\n-[2001:0:5ef5:79fb:281c:2085:518d:9c97]:8333\n-[2001:0:5ef5:79fb:2851:c:524c:a180]:8333\n-[2001:0:5ef5:79fb:2853:3b95:a430:40f3]:8333\n-[2001:0:5ef5:79fb:28f6:30a4:30d9:1201]:8333\n-[2001:0:5ef5:79fb:2c5f:1ade:718f:609d]:8333\n-[2001:0:5ef5:79fb:2cc0:1b38:e7af:ae80]:8333\n-[2001:0:5ef5:79fb:3000:3dc4:524d:3ce2]:8333\n-[2001:0:5ef5:79fb:3060:2e81:518f:63bc]:8333\n-[2001:0:5ef5:79fb:3068:507:bcaf:dbad]:8333\n-[2001:0:5ef5:79fb:308f:f3:935d:6a1b]:8333\n-[2001:0:5ef5:79fb:30ce:3301:d2d0:9bbc]:8333\n-[2001:0:5ef5:79fb:30db:3145:4381:f147]:8333\n-[2001:0:5ef5:79fb:34a3:2298:b7cd:22f6]:8333\n-[2001:0:5ef5:79fb:41e:160:bc48:791d]:8333\n-[2001:0:5ef5:79fb:42:b4fc:3f74:affb]:8333\n-[2001:0:5ef5:79fb:47a:16aa:d0c9:30a4]:8333\n-[2001:0:5ef5:79fb:89c:3481:d973:5dad]:8333\n-[2001:0:5ef5:79fb:8be:314a:26b2:efef]:8333\n-[2001:0:5ef5:79fb:8f3:3daf:3f21:bac]:8333\n-[2001:0:5ef5:79fb:c1f:20f4:b9ac:99db]:8333\n-[2001:0:5ef5:79fb:c70:105c:77de:9f7d]:8333\n-[2001:0:5ef5:79fb:ed:200c:b9ac:34db]:8333\n-[2001:0:5ef5:79fd:3057:85b:b703:255d]:8333\n-[2001:0:5ef5:79fd:8d1:13c6:5d0a:b117]:8333\n-[2001:0:9d38:6ab8:1007:395e:cd3a:82f2]:8333\n-[2001:0:9d38:6ab8:108b:34b5:e8e3:eed7]:8333\n-[2001:0:9d38:6ab8:109c:738:7fb9:785c]:8333\n-[2001:0:9d38:6ab8:1401:393:ba7f:c313]:8333\n-[2001:0:9d38:6ab8:1449:21d9:a05e:32f5]:8333\n-[2001:0:9d38:6ab8:1498:36b6:a29b:12a4]:8333\n-[2001:0:9d38:6ab8:183d:3649:b8f5:35d9]:8333\n-[2001:0:9d38:6ab8:1857:3293:438b:73de]:8333\n-[2001:0:9d38:6ab8:18b0:15d3:431c:bfec]:8333\n-[2001:0:9d38:6ab8:18b1:288b:51c9:db37]:8333\n-[2001:0:9d38:6ab8:18d5:2a37:6806:9797]:8333\n-[2001:0:9d38:6ab8:1c42:3a1c:942f:7f08]:8333\n-[2001:0:9d38:6ab8:1c7a:2fb7:e7d5:7ee2]:8333\n-[2001:0:9d38:6ab8:1cc6:38c6:438b:73de]:8333\n-[2001:0:9d38:6ab8:1cd6:2f48:fa1b:51c1]:8333\n-[2001:0:9d38:6ab8:1cda:2fdf:b091:dbe5]:8333\n-[2001:0:9d38:6ab8:1cf3:b9e:a14a:41f3]:8333\n-[2001:0:9d38:6ab8:2015:473:9d21:cc3c]:8333\n-[2001:0:9d38:6ab8:205d:eea3:a3c8:ea79]:8333\n-[2001:0:9d38:6ab8:207c:19b1:e758:1c46]:8333\n-[2001:0:9d38:6ab8:20cb:6b0:46cc:c27d]:8333\n-[2001:0:9d38:6ab8:20cd:1cd9:54e6:5a6e]:8333\n-[2001:0:9d38:6ab8:20ef:bc1:95f0:a658]:8333\n-[2001:0:9d38:6ab8:2409:2ea4:47ee:3c9d]:8333\n-[2001:0:9d38:6ab8:2427:330a:9441:dc2d]:8333\n-[2001:0:9d38:6ab8:2436:3c78:431d:d559]:8333\n-[2001:0:9d38:6ab8:24dd:2acb:b8a9:5ade]:8333\n-[2001:0:9d38:6ab8:2869:2cb3:b57b:311c]:8333\n-[2001:0:9d38:6ab8:28bf:33d4:9d29:8edc]:8333\n-[2001:0:9d38:6ab8:28e0:142e:3ed6:b182]:8333\n-[2001:0:9d38:6ab8:28f3:1675:c3ed:5be7]:8333\n-[2001:0:9d38:6ab8:2c4c:21d6:946c:ef01]:8333\n-[2001:0:9d38:6ab8:2cd6:3f49:a1ec:736]:8333\n-[2001:0:9d38:6ab8:301d:1cd6:ba5a:2935]:8333\n-[2001:0:9d38:6ab8:302b:340f:e723:b15e]:8333\n-[2001:0:9d38:6ab8:3034:2d96:b57f:b0e6]:8333\n-[2001:0:9d38:6ab8:306b:872:b4bc:d79f]:8333\n-[2001:0:9d38:6ab8:30a4:1190:4315:e53]:8333\n-[2001:0:9d38:6ab8:30c3:1362:521f:52c5]:8333\n-[2001:0:9d38:6ab8:30e7:3e5c:da3f:6466]:8333\n-[2001:0:9d38:6ab8:3439:223:a04a:fdfd]:8333\n-[2001:0:9d38:6ab8:3477:14cd:f7de:dee8]:8333\n-[2001:0:9d38:6ab8:3498:1a5:4635:2b50]:8333\n-[2001:0:9d38:6ab8:349d:db2:a0e6:29a2]:8333\n-[2001:0:9d38:6ab8:34f7:15b2:3012:3a74]:8333\n-[2001:0:9d38:6ab8:3809:2941:4344:4838]:8333\n-[2001:0:9d38:6ab8:3809:37b7:31b5:8e3d]:8333\n-[2001:0:9d38:6ab8:3877:2dac:b691:719c]:8333\n-[2001:0:9d38:6ab8:388a:24f3:a141:c194]:8333\n-[2001:0:9d38:6ab8:38ba:3b3e:430c:fb74]:8333\n-[2001:0:9d38:6ab8:38c4:2f2a:9357:b1ae]:8333\n-[2001:0:9d38:6ab8:38e2:23f:b4f6:6ad1]:8333\n-[2001:0:9d38:6ab8:3c56:2171:9d80:d360]:8333\n-[2001:0:9d38:6ab8:3cab:1421:3ca4:1a8e]:8333\n-[2001:0:9d38:6ab8:3f:2441:6806:9797]:8333\n-[2001:0:9d38:6ab8:424:321:52b3:5633]:8333\n-[2001:0:9d38:6ab8:47c:32ef:a7a8:a2b4]:8333\n-[2001:0:9d38:6ab8:4a7:3cdd:9d1b:708]:8333\n-[2001:0:9d38:6ab8:4c3:3a54:9d1c:2ad7]:8333\n-[2001:0:9d38:6ab8:813:3ae3:bdd2:66d8]:8333\n-[2001:0:9d38:6ab8:818:cf4:27f2:b5f5]:8333\n-[2001:0:9d38:6ab8:855:33f7:6dbd:53c4]:8333\n-[2001:0:9d38:6ab8:868:1baa:b174:b764]:8333\n-[2001:0:9d38:6ab8:878:21cf:2b5b:2860]:8333\n-[2001:0:9d38:6ab8:8a4:e1d1:79ec:7cee]:8333\n-[2001:0:9d38:6ab8:8b3:392c:ab0d:ae6b]:8333\n-[2001:0:9d38:6ab8:8ff:352f:b208:5604]:8333\n-[2001:0:9d38:6ab8:c2f:1793:fa42:acdc]:8333\n-[2001:0:9d38:6ab8:c36:25f:a0d0:e871]:8333\n-[2001:0:9d38:6ab8:d3:69e:d0a0:1b73]:8333\n-[2001:0:9d38:6abd:109f:379e:aeff:3957]:8333\n-[2001:0:9d38:6abd:10a5:2f7d:ab07:9c7b]:8333\n-[2001:0:9d38:6abd:1462:3fe1:b2cf:dcf0]:8333\n-[2001:0:9d38:6abd:180b:29be:3429:fede]:8333\n-[2001:0:9d38:6abd:1857:24c:46f4:7dc9]:8333\n-[2001:0:9d38:6abd:18d5:a69:4b4a:6e8b]:8333\n-[2001:0:9d38:6abd:1c20:25a2:3f5d:2da4]:8333\n-[2001:0:9d38:6abd:1c96:24dc:a753:d6f2]:8333\n-[2001:0:9d38:6abd:1ce7:533:26f3:2aab]:8333\n-[2001:0:9d38:6abd:2065:3008:76b5:cb06]:8333\n-[2001:0:9d38:6abd:20b2:434:4387:f5e1]:8333\n-[2001:0:9d38:6abd:20ff:147c:840c:b0db]:8333\n-[2001:0:9d38:6abd:2436:3c96:91e9:2de3]:8333\n-[2001:0:9d38:6abd:244c:1817:ae9f:8a38]:8333\n-[2001:0:9d38:6abd:284c:29ce:88b5:c86f]:8333\n-[2001:0:9d38:6abd:285a:5c:c16b:119a]:8333\n-[2001:0:9d38:6abd:2c5f:a51:a671:3d90]:8333\n-[2001:0:9d38:6abd:3065:3255:4b21:e520]:8333\n-[2001:0:9d38:6abd:341d:2dfa:892f:4366]:8333\n-[2001:0:9d38:6abd:3450:302f:23b3:a33a]:8333\n-[2001:0:9d38:6abd:3456:2308:d0b5:7970]:8333\n-[2001:0:9d38:6abd:3470:346d:af23:d41b]:8333\n-[2001:0:9d38:6abd:34ba:20c2:9a5a:dd02]:8333\n-[2001:0:9d38:6abd:3846:1133:a68c:ea80]:8333\n-[2001:0:9d38:6abd:38ef:31ea:6cd1:45db]:8333\n-[2001:0:9d38:6abd:3c1f:c35a:cc00:28d3]:8333\n-[2001:0:9d38:6abd:3c49:1539:fe22:5b3b]:8333\n-[2001:0:9d38:6abd:3c5e:2ecd:88ee:787c]:8333\n-[2001:0:9d38:6abd:3c74:194:4f94:e1b]:8333\n-[2001:0:9d38:6abd:4c4:3492:4d56:35dd]:8333\n-[2001:0:9d38:6abd:4e7:35f2:ae92:cbcd]:8333\n-[2001:0:9d38:6abd:850:2b2f:adbf:fa7e]:8333\n-[2001:0:9d38:6abd:8ba:f4f:3e75:b00b]:8333\n-[2001:0:9d38:6abd:9e:3294:c2b5:67d7]:8333\n-[2001:0:9d38:6abd:c74:81b:a2fb:aa90]:8333\n-[2001:0:9d38:78cf:146b:2cc2:b2a5:db7]:8333\n-[2001:0:9d38:78cf:18d3:1602:2a06:c562]:8333\n-[2001:0:9d38:78cf:24a7:ee0:72cc:7f75]:8333\n-[2001:0:9d38:78cf:2862:1384:b4b8:406f]:8333\n-[2001:0:9d38:78cf:30c4:3698:92a5:3af9]:8333\n-[2001:0:9d38:78cf:340b:1270:4d61:857]:8333\n-[2001:0:9d38:78cf:3cb3:2773:4da3:d4c]:8333\n-[2001:0:9d38:78cf:3cdf:8ab:a331:d75]:8333\n-[2001:0:9d38:78cf:4d1:366f:4f91:eafb]:8333\n-[2001:0:9d38:78cf:83f:b1c:c1a4:ad71]:8333\n-[2001:0:9d38:90d7:1067:13c5:a69c:b099]:8333\n-[2001:0:9d38:90d7:10aa:20c7:aa6f:d318]:8333\n-[2001:0:9d38:90d7:10df:16c3:b351:e824]:8333\n-[2001:0:9d38:90d7:1464:255e:9208:8012]:8333\n-[2001:0:9d38:90d7:14e1:1b8:b256:ff4c]:8333\n-[2001:0:9d38:90d7:180c:ebf:2a63:93c0]:8333\n-[2001:0:9d38:90d7:18fb:9d7:af8d:a5d5]:8333\n-[2001:0:9d38:90d7:1ca1:3e8e:ab02:edbe]:8333\n-[2001:0:9d38:90d7:1cd7:3fe8:e80f:53f9]:8333\n-[2001:0:9d38:90d7:20d8:1062:2684:32c2]:8333\n-[2001:0:9d38:90d7:2419:373e:da40:1e51]:8333\n-[2001:0:9d38:90d7:242b:1ac2:fdcc:af6a]:8333\n-[2001:0:9d38:90d7:2442:2d34:9e97:36a0]:8333\n-[2001:0:9d38:90d7:246c:24f1:3c0f:65fc]:8333\n-[2001:0:9d38:90d7:24c4:15e7:d0cb:7a52]:8333\n-[2001:0:9d38:90d7:2837:324e:d0cb:9f45]:22475\n-[2001:0:9d38:90d7:2858:2d7c:bc51:6ee0]:8333\n-[2001:0:9d38:90d7:289e:1b03:438e:b517]:8333\n-[2001:0:9d38:90d7:289f:30fc:54bc:9685]:8333\n-[2001:0:9d38:90d7:28a2:760:a6b3:3139]:8333\n-[2001:0:9d38:90d7:28a4:1b25:b8c7:38ff]:8333\n-[2001:0:9d38:90d7:28d3:1049:fd91:712c]:8333\n-[2001:0:9d38:90d7:2c32:2da7:c111:dd82]:8333\n-[2001:0:9d38:90d7:2c91:1e07:5d3d:7eb1]:8333\n-[2001:0:9d38:90d7:2ce5:3c7:b736:9128]:8333\n-[2001:0:9d38:90d7:2cf4:30d4:e020:53fa]:8333\n-[2001:0:9d38:90d7:2cfc:2221:98e5:eed7]:8333\n-[2001:0:9d38:90d7:3016:aed:6107:4df]:8333\n-[2001:0:9d38:90d7:303e:3e8a:d06a:d137]:8333\n-[2001:0:9d38:90d7:30ee:19d6:6e7b:908e]:8333\n-[2001:0:9d38:90d7:342c:3ecc:c2a2:1e31]:8333\n-[2001:0:9d38:90d7:3474:1df1:e732:e5e3]:8333\n-[2001:0:9d38:90d7:3496:2e2d:cb17:c3bd]:8333\n-[2001:0:9d38:90d7:34f3:3584:d0a4:aa5]:8333\n-[2001:0:9d38:90d7:38e6:1092:d0cb:7576]:8333\n-[2001:0:9d38:90d7:38ec:611:e05f:df3d]:8333\n-[2001:0:9d38:90d7:38f5:3938:b454:4717]:8333\n-[2001:0:9d38:90d7:38f8:14ce:8809:7786]:8333\n-[2001:0:9d38:90d7:3c2c:10a4:bbfa:e09d]:8333\n-[2001:0:9d38:90d7:3c35:2a8e:e79f:62fd]:8333\n-[2001:0:9d38:90d7:3c40:77b:c2bb:79]:8333\n-[2001:0:9d38:90d7:65:2adf:b8de:1781]:8333\n-[2001:0:9d38:90d7:7c:129:d0cb:6e8b]:8333\n-[2001:0:9d38:90d7:851:10d8:9d58:7059]:8333\n-[2001:0:9d38:90d7:85d:102:2aa2:519a]:8333\n-[2001:0:9d38:90d7:896:fe0:afc6:2270]:8333\n-[2001:0:9d38:90d7:8a0:22cc:a0b3:d9da]:8333\n-[2001:0:9d38:90d7:c0d:de2:b94f:774]:8333\n-[2001:0:9d38:90d7:cff:c79:aa69:cb82]:8333\n-[2001:0:9d38:953c:104e:8af:b3aa:f300]:8333\n-[2001:0:9d38:953c:1063:10c4:93fd:77b5]:8333\n-[2001:0:9d38:953c:10dd:3d0d:daee:ccda]:8333\n-[2001:0:9d38:953c:1883:22e3:af92:33c7]:8333\n-[2001:0:9d38:953c:1c0a:1583:9473:5f2e]:8333\n-[2001:0:9d38:953c:1c44:2b70:9de7:a7cc]:8333\n-[2001:0:9d38:953c:1cbb:646:d2cf:fd00]:8333\n-[2001:0:9d38:953c:2051:348d:dc5a:c3c2]:8333\n-[2001:0:9d38:953c:24f8:198a:d023:6580]:8333\n-[2001:0:9d38:953c:2c32:2ea8:b817:2bb0]:8333\n-[2001:0:9d38:953c:2c6d:3cef:4386:4937]:8333\n-[2001:0:9d38:953c:2cb1:1719:5398:e444]:8333\n-[2001:0:9d38:953c:3053:8a5e:25e4:352d]:8333\n-[2001:0:9d38:953c:307b:2309:b347:3fdc]:8333\n-[2001:0:9d38:953c:3084:1e46:8a72:750f]:8333\n-[2001:0:9d38:953c:30a8:2304:9d47:7fdf]:8333\n-[2001:0:9d38:953c:30b9:2ea0:e80c:53e5]:8333\n-[2001:0:9d38:953c:30cf:3e04:a88b:4fe8]:8333\n-[2001:0:9d38:953c:3427:2c62:bd53:f12d]:8333\n-[2001:0:9d38:953c:3445:1bcb:b8b5:9653]:8333\n-[2001:0:9d38:953c:3874:295f:9de2:cf3c]:8333\n-[2001:0:9d38:953c:38bc:3f1:52c4:ea47]:8333\n-[2001:0:9d38:953c:38c9:394f:bea2:fd60]:8333\n-[2001:0:9d38:953c:38e8:2391:b6b2:90c1]:8333\n-[2001:0:9d38:953c:3c43:3f1:b489:f8b8]:8333\n-[2001:0:9d38:953c:4c5:2ae2:b643:3866]:8333\n-[2001:0:9d38:953c:4db:3a7f:87b0:f876]:8333\n-[2001:0:9d38:953c:8be:ce8:b8c5:5212]:8333\n-[2001:0:9d38:953c:ac:2eab:2f99:80c4]:8333\n-[2001:0:9d38:953c:c0a:1923:52a0:7ab2]:8333\n-[2001:0:9d38:953c:c2:1715:b80b:7121]:8333\n-[2001:0:9d38:953c:c8c:ee1:5199:bf8a]:8333\n-[2001:0:9d38:953c:cbb:3f5:a670:b045]:8333\n-[2001:13d8:1c01:1000::8]:8333\n-[2001:13d8:1c01:2000:2470::1]:8333\n-[2001:14ba:1900::754:f271:151c]:8333\n-[2001:1608:10:156:38::265c]:8333\n-[2001:1620:923:0:75be:ed92:1a01:641]:8333\n-[2001:1680:101:8c::1]:8333\n-[2001:1838:2000:413::3]:8333\n-[2001:19c0:1:801:801:ff00:46c:2]:8333\n-[2001:19f0:0:204f:5400:ff:fe05:2d2e]:8333\n-[2001:19f0:5000:8c8b:5400:ff:fe1f:c023]:8333\n-[2001:19f0:5:17a7:5400:ff:fe87:cc21]:8333\n-[2001:19f0:5c01:63b:5400:1ff:fe47:2ede]:8333\n-[2001:19f0:ac01:2fb:5400:ff:fe5b:c3ff]:8333\n-[2001:1af8:4070:a016:3333::5afb]:8333\n-[2001:1af8:4700:a071:4444::e26e]:8333\n-[2001:1bc0::ffff:aaaa:21]:8333\n-[2001:200:0:8801:5054:ff:fef2:1d0]:8333\n-[2001:4128:6135:10:20c:29ff:fe69:9e81]:8333\n-[2001:4128:6135:2010:21e:bff:fee8:a3c0]:8333\n-[2001:4128:6135:e001:5054:ff:fe37:e9eb]:8333\n-[2001:4178:6:1427:62:116:188:85]:8333\n-[2001:41c9:1:424::231]:8333\n-[2001:41d0:1000:1e1f::]:8333\n-[2001:41d0:1004:1fef::]:8333\n-[2001:41d0:1004:24a5::]:8333\n-[2001:41d0:1008:1c23::]:8333\n-[2001:41d0:1008:2752::]:8333\n-[2001:41d0:1:45d8::1]:8333\n-[2001:41d0:1:7d09::1]:8333\n-[2001:41d0:1:8113::1]:8333\n-[2001:41d0:1:8649::1]:8333\n-[2001:41d0:1:8b26::1]:8333\n-[2001:41d0:1:a5b8::1]:8333\n-[2001:41d0:1:ab6b::1]:8333\n-[2001:41d0:1:afd8::]:8333\n-[2001:41d0:1:b421::1]:8333\n-[2001:41d0:1:b5ce::1]:8333\n-[2001:41d0:1:d227::]:8333\n-[2001:41d0:1:dabd::1]:8333\n-[2001:41d0:1:e13b::1]:8333\n-[2001:41d0:1:f176::1]:8333\n-[2001:41d0:203:10bd::]:8333\n-[2001:41d0:2:16be::1]:8333\n-[2001:41d0:2:53df::]:8333\n-[2001:41d0:2:8c65::]:8333\n-[2001:41d0:2:9431::]:8333\n-[2001:41d0:2:9c94::1]:8333\n-[2001:41d0:2:a5a9::]:8333\n-[2001:41d0:2:ab38::]:8333\n-[2001:41d0:2:c6e::]:8333\n-[2001:41d0:2:c9bf::]:8333\n-[2001:41d0:302:1000::fa25]:8333\n-[2001:41d0:303:188::]:8333\n-[2001:41d0:303:1907::]:8333\n-[2001:41d0:303:2505::1a]:8333\n-[2001:41d0:303:4140::]:8333\n-[2001:41d0:303:d02::]:8333\n-[2001:41d0:403:589::]:8333\n-[2001:41d0:52:d00::6e2]:8333\n-[2001:41d0:52:d00::6e3]:8333\n-[2001:41d0:602:3b::]:8333\n-[2001:41d0:602:6ca::]:8333\n-[2001:41d0:602:e0::]:8333\n-[2001:41d0:604:177::]:8333\n-[2001:41d0:700:468::]:8333\n-[2001:41d0:700:479::]:8333\n-[2001:41d0:800:283::]:8333\n-[2001:41d0:8:1b29::]:8333\n-[2001:41d0:8:2556::]:8333\n-[2001:41d0:8:7a38::1]:8333\n-[2001:41d0:8:8007::]:8333\n-[2001:41d0:8:8f46::1]:8333\n-[2001:41d0:8:9c6e::1]:8333\n-[2001:41d0:8:b3ad::1]:8333\n-[2001:41d0:8:b7d0::1]:8333\n-[2001:41d0:8:bed3::]:8333\n-[2001:41d0:8:c67c::]:8333\n-[2001:41d0:8:d444::1]:8333\n-[2001:41d0:8:d844:1337::1017]:8333\n-[2001:41d0:8:db78::1]:8333\n-[2001:41d0:8:ddb::1]:8333\n-[2001:41d0:8:ddf::1]:8333\n-[2001:41d0:8:e3e4::1]:8333\n-[2001:41d0:a:3b5f::1]:8333\n-[2001:41d0:a:405c::]:8333\n-[2001:41d0:a:635b::1]:8333\n-[2001:41d0:a:6a0d::1]:8333\n-[2001:41d0:a:6a1::1]:8333\n-[2001:41d0:a:6c29::1]:8333\n-[2001:41d0:a:6fd0::]:8333\n-[2001:41d0:a:755::1]:8333\n-[2001:41d0:a:f8d2::1]:8333\n-[2001:41d0:a:f915::1]:8333\n-[2001:41d0:e:1146::1]:8333\n-[2001:41d0:e:1388::1]:8333\n-[2001:41d0:e:26b::1]:8333\n-[2001:41d0:e:9e7::1]:8333\n-[2001:41d0:e:ec5::1]:8333\n-[2001:41f0:61:0:72f3:95ff:fe09:7521]:8333\n-[2001:41f0:61::7]:8333\n-[2001:4642:e527::beef]:8333\n-[2001:470:1d:8a9::]:8333\n-[2001:470:1d:8a9::4]:8333\n-[2001:470:1f06:15b4::2]:8333\n-[2001:470:1f07:803:20c:29ff:fe2d:5879]:8333\n-[2001:470:1f09:325::40]:8333\n-[2001:470:1f0b:56e:7e5c:f8ff:fe32:5302]:8333\n-[2001:470:1f0b:8c4::5]:8333\n-[2001:470:1f0b:8fe:c4:4338:e528:2713]:8333\n-[2001:470:1f0b:967::11]:8333\n-[2001:470:1f10:776::2]:8333\n-[2001:470:1f15:11f8::10]:8333\n-[2001:470:1f15:1b95:2c3e:8a9a:24e1:7084]:8333\n-[2001:470:1f15:cf7::14]:8333\n-[2001:470:1f15:e9b::3ef]:8333\n-[2001:470:1f17:22a:8d2:72bf:a564:21fb]:8333\n-[2001:470:1f17:b5::10]:8333\n-[2001:470:1f1b:5a6:216:3eff:fe24:1162]:8333\n-[2001:470:2179:dead:deaf:0:2e70:9d8b]:8333\n-[2001:470:25:482::2]:8333\n-[2001:470:27:483::2]:8333\n-[2001:470:7:b74::2]:8333\n-[2001:470:8:2e1:44ff:654e:e53e:ad59]:8333\n-[2001:470:8:2e1:7058:53f6:5681:5be4]:8333\n-[2001:470:8:2e1::43]:8333\n-[2001:470:8:7b3::17]:8333\n-[2001:470:8a2f:8000::e998]:8333\n-[2001:470:a068::2]:8333\n-[2001:470:a:88b::2]:8333\n-[2001:470:a:c13::2]:8333\n-[2001:470:b3d5:1:641c:6bff:fe9d:bccf]:8333\n-[2001:470:c144:cafe::9]:8333\n-[2001:470:d00d:0:3664:a9ff:fe9a:5150]:8333\n-[2001:470:dbf2:aaaa::b17:c01c]:8333\n-[2001:4802:7802:103:be76:4eff:fe21:19f9]:8333\n-[2001:48f8:1003::3ba]:8333\n-[2001:4b99:1:1:216:3eff:febd:85ba]:8333\n-[2001:4ba0:babe:2681::]:8333\n-[2001:4ba0:babe:832::]:8333\n-[2001:4ba0:cafe:20c::1]:8333\n-[2001:579:9284:bc:10be:5df1:f6d2:4194]:8333\n-[2001:638:a000:4140::ff10:415]:8333\n-[2001:638:a000:4140::ffff:191]:8333\n-[2001:67c:2564:520:7800:4817:52ec:d8f]:8333\n-[2001:708:150:10::4329]:8333\n-[2001:980:231b:1:8e89:a5ff:fee3:f8be]:8333\n-[2001:980:ade8:1:14fc:fd6d:608c:f669]:8333\n-[2001:984:aec7:1:dcb7:29a:7eda:b9a2]:8333\n-[2001:985:79af:20::35]:8333\n-[2001:bc8:225f:10e:505:6573:7573:d0a]:8333\n-[2001:bc8:323c:100::]:8333\n-[2001:bc8:399f:f000::1]:8333\n-[2001:bc8:3cbf::5]:8333\n-[2001:bc8:4400:2400::480f]:8333\n-[2002:261b:642c::261b:642c]:8333\n-[2002:2956:685e::2956:685e]:8333\n-[2002:2d7b:674f::2d7b:674f]:8333\n-[2002:2df9:5e40::2df9:5e40]:8333\n-[2002:2e04:784b::2e04:784b]:8333\n-[2002:2f58:fe42::2f58:fe42]:8333\n-[2002:2f58:fe62::2f58:fe62]:8333\n-[2002:2f59:30f3::2f59:30f3]:8333\n-[2002:2f5a:3c1c::2f5a:3c1c]:10011\n-[2002:2f5a:562a::2f5a:562a]:8333\n-[2002:2f5b:a5f9::2f5b:a5f9]:8333\n-[2002:2f5b:b086::2f5b:b086]:8333\n-[2002:323f:a61b::323f:a61b]:8333\n-[2002:33ff:69a0::1]:8333\n-[2002:3f62:e6bb::3f62:e6bb]:8333\n-[2002:4b63:50b4:1234:4059:bf54:e088:7daa]:8333\n-[2002:509:6ac5::509:6ac5]:8333\n-[2002:51a9:9cc9::51a9:9cc9]:8333\n-[2002:54fb:a1cd::1]:8333\n-[2002:5bc2:5428::5bc2:5428]:8333\n-[2002:5bce:1253::5bce:1253]:8333\n-[2002:5d68:d270::5d68:d270]:8333\n-[2002:5dbd:91a9::5dbd:91a9]:8333\n-[2002:5fd3:8944::5fd3:8944]:8333\n-[2002:6738:8869::6738:8869]:8333\n-[2002:67e9:fe16::67e9:fe16]:8333\n-[2002:67fa:44a::67fa:44a]:8333\n-[2002:67fa:44b::67fa:44b]:8333\n-[2002:6825:d425::6825:d425]:8333\n-[2002:6a0e:3ea8::6a0e:3ea8]:10011\n-[2002:6bb4:475c::6bb4:475c]:41888\n-[2002:6bb4:54bc::6bb4:54bc]:8333\n-[2002:6c3d:d88a::6c3d:d88a]:8333\n-[2002:704a:d6d4::704a:d6d4]:9997\n-[2002:7169:8b2a::7169:8b2a]:8333\n-[2002:7237:fcf6::7237:fcf6]:20188\n-[2002:7819:7e80::7819:7e80]:7743\n-[2002:8494:8233::8494:8233]:8333\n-[2002:8494:84fc::8494:84fc]:8333\n-[2002:9247:4cec::9247:4cec]:8333\n-[2002:9538:735d::9538:735d]:8333\n-[2002:adcd:b88c::adcd:b88c]:8333\n-[2002:b025:5c52::b025:5c52]:8333\n-[2002:b07e:a70a::b07e:a70a]:8333\n-[2002:b2c9:e6fc:10:3d5c:e3ad:813:9c46]:8333\n-[2002:b4b2:3612::b4b2:3612]:8333\n-[2002:b610:1ca3::b610:1ca3]:8333\n-[2002:b85f:26da::b85f:26da]:8333\n-[2002:b923:b67b::b923:b67b]:8333\n-[2002:b946:694a::b946:694a]:8339\n-[2002:b960:5e18::b960:5e18]:8333\n-[2002:bc48:d606::bc48:d606]:8333\n-[2002:c13a:c4d4::1]:8333\n-[2002:c16a:1c08::c16a:1c08]:8333\n-[2002:c16a:1d12::c16a:1d12]:8333\n-[2002:c23f:8fc5::c23f:8fc5]:8333\n-[2002:c2a5:1021::c2a5:1021]:8333\n-[2002:c2a5:10fe::c2a5:10fe]:8333\n-[2002:c39a:a4a8::c39a:a4a8]:8333\n-[2002:cb82:d02d::cb82:d02d]:8333\n-[2002:d035:2734::d035:2734]:8333\n-[2002:d2d3:6da5::d2d3:6da5]:8333\n-[2002:d453:9174::d453:9174]:8333\n-[2002:d917:d95::d917:d95]:8333\n-[2003:a:1114:1001:6ab5:99ff:feb0:8770]:8333\n-[2400:2650:480:bc00:bcaf:7c49:8c9e:7cdf]:8333\n-[2400:8901::f03c:91ff:fe1f:ec00]:8333\n-[2400:8901::f03c:91ff:fe3e:571b]:8333\n-[2400:8901::f03c:91ff:fe3e:57ef]:8333\n-[2400:8901::f03c:91ff:feb4:71f1]:8333\n-[2400:8902::f03c:91ff:feb9:c59c]:8333\n-[2400:dd01:1034:e00:f21f:afff:fedc:164d]:8333\n-[2400:dd08:1001:120:f0f7:d9da:8b5b:58d7]:8333\n-[2401:1800:7800:102:be76:4eff:fe1c:a7d]:8333\n-[2401:1800:7801:101:be76:4eff:fe1c:f4b]:8333\n-[2402:1f00:8100:36::]:8333\n-[2404:7a83:94e0:7f00:858f:8a7d:3a8c:26dd]:8333\n-[2404:c805:d00:101:716a:cff7:c9ab:a595]:8333\n-[2405:aa00:2::40]:8333\n-[2409:10:ca20:1df0:224:e8ff:fe1f:60d9]:8333\n-[2600:1f14:6ae:d900:6550:3fc5:e074:a72c]:8333\n-[2600:1f14:6d0:2e03:640e:1937:9960:32e9]:8333\n-[2600:1f14:6d0:2e03:761:6e21:952c:de5b]:8333\n-[2600:1f16:625:e00:269a:3452:2edf:1011]:8333\n-[2600:1f16:625:e00:7bc:5879:4463:15dd]:8333\n-[2600:1f16:625:e00:a28b:5a16:849c:fe41]:8333\n-[2600:1f16:625:e00:a70f:e728:e8e1:2c2e]:8333\n-[2600:1f16:b32:3102:440:fab:d8a2:cc59]:8333\n-[2600:1f18:3d:4600:699a:d6b3:76e8:9b8d]:48333\n-[2600:1f18:3f8:f90f:2b39:201b:e9a4:e882]:8333\n-[2600:1f18:609f:da02:b283:b16e:aac4:749f]:8333\n-[2600:3c00::f03c:91ff:fe28:9e61]:8333\n-[2600:3c00::f03c:91ff:fe91:3e49]:8333\n-[2600:3c00::f03c:91ff:feb9:36fc]:8333\n-[2600:3c01::f03c:91ff:fe39:768b]:8333\n-[2600:3c01::f03c:91ff:fe8e:8ae1]:8333\n-[2600:3c01::f03c:91ff:fe91:6a29]:8333\n-[2600:3c01::f03c:91ff:fea7:e0f9]:8333\n-[2600:3c02::f03c:91ff:fe8e:bcd9]:8333\n-[2600:3c03::f03c:91ff:fe28:1445]:8333\n-[2600:3c03::f03c:91ff:fe7a:1eb2]:8333\n-[2600:3c03::f03c:91ff:feb0:5fc4]:8333\n-[2600:3c03::f03c:91ff:fee0:233e]:8333\n-[2600:6c40:7900:319f:8390:e8af:5a2c:9b0b]:8333\n-[2600:6c44:467f:f89c:722d:8424:d481:d155]:8333\n-[2600:8801:8306:e900:dce8:6a03:9592:a053]:8333\n-[2601:186:c100:6bcd:16bd:cea1:235d:1c19]:8333\n-[2601:18d:4600:5f32:20e7:b3ff:fecf:a99]:8333\n-[2601:1c2:f00:29b0:922b:34ff:fea8:4118]:8333\n-[2601:282:8000:20b0:67f8:fa63:e056:dd23]:8333\n-[2601:40a:c200:37e8:9528:d453:6358:9f2a]:8333\n-[2601:646:4101:1603:5809:1bff:fe55:6678]:8333\n-[2601:c0:c100:1880:21f:5bff:fe3c:6e84]:8333\n-[2601:c8:4100:770:23e:e1ff:febe:736d]:8333\n-[2603:3000:903:c5f1:468a:5bff:fe9e:89dc]:8333\n-[2603:3005:3000:5000:bc5a:72ac:36e9:175e]:8333\n-[2603:3022:501:7800:495c:728c:ed5d:5d75]:8333\n-[2604:180:1:346::684d]:8333\n-[2604:67c0:2001::2]:8333\n-[2604:8d80:100:0:8065:4c57:667a:b70f]:8333\n-[2604:8d80:100::adf3:4031]:8333\n-[2604:a880:2:d0::22f8:f001]:8333\n-[2604:a880:2:d0::22f9:1]:8333\n-[2604:a880:2:d0::22f9:1001]:8333\n-[2604:a880:2:d0::22f9:c001]:8333\n-[2604:a880:2:d0::22f9:d001]:8333\n-[2604:a880:2:d0::22f9:e001]:8333\n-[2604:a880:2:d0::22fa:1001]:8333\n-[2604:a880:2:d0::22fa:2001]:8333\n-[2604:a880:2:d0::22fa:3001]:8333\n-[2604:a880:2:d0::301:8001]:8333\n-[2604:a880:2:d0::38:f001]:8333\n-[2604:a880:2:d0::46:f001]:8333\n-[2604:a880:2:d0::b2:9001]:8333\n-[2604:a880:400:d0::1ac4:b001]:8333\n-[2604:a880:400:d0::2004:4001]:8333\n-[2604:a880:400:d0::2004:5001]:8333\n-[2604:a880:400:d0::2004:6001]:8333\n-[2604:a880:400:d0::2004:c001]:8333\n-[2604:a880:400:d0::2004:d001]:8333\n-[2604:a880:400:d0::2004:e001]:8333\n-[2604:a880:400:d0::2004:f001]:8333\n-[2604:a880:400:d0::2005:1]:8333\n-[2604:a880:400:d0::2005:2001]:8333\n-[2604:a880:400:d0::2005:3001]:8333\n-[2604:a880:400:d0::261f:6001]:8333\n-[2605:4d00::50]:8333\n-[2605:6000:e8c8:6701:7562:de11:245c:f6ba]:8333\n-[2605:9880:0:3::8333]:8333\n-[2605:9880:201:17::4b7c]:8333\n-[2605:9880:201:6:ec4:7aff:fe6c:a660]:8333\n-[2605:a000:f343:b700:5054:ff:fea7:131]:8333\n-[2605:ae00:203::203]:8333\n-[2605:c000:2a0a:1::102]:8333\n-[2605:f700:80:800::3724:81c]:8333\n-[2605:f700:80:800::38c1:2b84]:8333\n-[2606:df00:7:4:4caa:2c79:b619:27c9]:8333\n-[2607:4480:2:1:38:102:69:70]:8333\n-[2607:5300:120:b7e::]:8333\n-[2607:5300:201:2000::1:556]:8333\n-[2607:5300:203:1245::]:8333\n-[2607:5300:203:14e7::20f]:8333\n-[2607:5300:203:190a::]:8333\n-[2607:5300:203:a3::]:8333\n-[2607:5300:60:10aa::1]:8333\n-[2607:5300:60:13bb::1]:8333\n-[2607:5300:60:1ba8::1]:8333\n-[2607:5300:60:2218::]:8333\n-[2607:5300:60:26f::1]:8333\n-[2607:5300:60:2827::]:8333\n-[2607:5300:60:2c16::]:8333\n-[2607:5300:60:3ddf::]:8333\n-[2607:5300:60:9ad::1]:8333\n-[2607:5300:60:ac0::1]:8333\n-[2607:5300:61:c50::]:8333\n-[2607:5300:61:f5b::]:8333\n-[2607:9000:0:6:1:0:36b:5a5]:8333\n-[2607:f178:0:8::106]:8333\n-[2607:f1c0:823:af00::35:bbd1]:8333\n-[2607:f1c0:846:9a00::87:d00e]:8333\n-[2607:f2d8:4005:d:a8a2:eeff:fee0:a859]:8333\n-[2607:f470:14:a:21d:7dff:fe01:bcee]:8333\n-[2607:fa18:0:beef::c012]:8333\n-[2607:fd70:4a:babe:b00b:1e5:0:1]:8333\n-[2607:fea8:e2df:f87e:4b8e:8a8c:8167:ec0d]:8333\n-[2607:fea8:e60:574:fdbc:add5:eabd:4d9e]:8333\n-[2610:1a0:103:4a:dead:beaf:0:cafe]:8333\n-[2610:1a0:103:4a:dead:beef:1:cafe]:8333\n-[2801:80:930::63]:8333\n-[2803:1500:1200:c487::1]:8333\n-[2a00:16d8:c::5b6a:c261]:8333\n-[2a00:1a48:7810:101:be76:4eff:fe08:c774]:8333\n-[2a00:1c48:6:108:a6bf:1ff:fe16:35c1]:8333\n-[2a00:1c60:0:12:e2d5:5eff:fe09:257d]:8333\n-[2a00:1ca8:37::65e9:f438]:8333\n-[2a00:4802:360::ff9]:8333\n-[2a00:7c80:0:97::7]:8333\n-[2a00:8a60:e012:a00::21]:8333\n-[2a00:bbe0:0:42:222:64ff:fe9a:e206]:8333\n-[2a00:bbe0:cc:0:6651:6ff:fe0e:9418]:8333\n-[2a00:c440:10:1c62:1234::1]:8333\n-[2a00:c440:40:33b:9d1c:7726:5571:c862]:8333\n-[2a00:c70:1:213:246:56:95:1]:8333\n-[2a00:ee2:1200:1900:20c:29ff:fe81:a0a3]:8333\n-[2a00:f940:2:1:2::1086]:8333\n-[2a00:f940:2:1:2::184b]:8333\n-[2a01:238:4343:7700:3e6:f65c:5e57:511c]:8333\n-[2a01:238:43a6:6500:5e5c:24bb:5e39:d96f]:8333\n-[2a01:4240:a21:983b::c0a8:32]:8333\n-[2a01:488:66:1000:2ea3:7633:0:1]:8333\n-[2a01:4d60:3:1:5::1]:8333\n-[2a01:4f8:10a:10a8::2]:8333\n-[2a01:4f8:10a:1d8f::2]:8333\n-[2a01:4f8:10a:239c::2]:9002\n-[2a01:4f8:10a:2ae0::2]:8333\n-[2a01:4f8:10a:31d3::2]:8333\n-[2a01:4f8:10a:3718::2]:8333\n-[2a01:4f8:10a:3fe4::2]:8333\n-[2a01:4f8:10a:41c1::2]:8333\n-[2a01:4f8:10b:18c2::2]:8333\n-[2a01:4f8:10b:2a9b::2]:8333\n-[2a01:4f8:10b:2e18::2]:8333\n-[2a01:4f8:10b:2e19::2]:8333\n-[2a01:4f8:10b:2e8c::3]:8333\n-[2a01:4f8:10b:d50::2]:8333\n-[2a01:4f8:10b:e2d::2]:8333\n-[2a01:4f8:10b:ee1::2]:8333\n-[2a01:4f8:10b:f04::2]:8333\n-[2a01:4f8:10b:f44::2]:8333\n-[2a01:4f8:110:411f::2]:8333\n-[2a01:4f8:120:1391::2]:8333\n-[2a01:4f8:120:62e6::2]:8333\n-[2a01:4f8:120:702e::2]:8333\n-[2a01:4f8:130:618e::2]:8333\n-[2a01:4f8:130:71d2::2]:8333\n-[2a01:4f8:130:7422::2]:8333\n-[2a01:4f8:13b:271c::2]:8333\n-[2a01:4f8:13b:3810::2]:8333\n-[2a01:4f8:140:2123::2]:8333\n-[2a01:4f8:140:3144::2]:8333\n-[2a01:4f8:140:4201::2]:8333\n-[2a01:4f8:140:524a::2]:8333\n-[2a01:4f8:140:5329::102]:8333\n-[2a01:4f8:140:624c::2]:8333\n-[2a01:4f8:140:7173::2]:8333\n-[2a01:4f8:140:82b6::2]:8333\n-[2a01:4f8:140:9082::2]:8333\n-[2a01:4f8:140:931a::2]:8333\n-[2a01:4f8:141:13b1::2]:8333\n-[2a01:4f8:141:22ae::2]:8333\n-[2a01:4f8:141:2426::2]:8333\n-[2a01:4f8:141:5491::2]:8333\n-[2a01:4f8:150:32f2::2]:8333\n-[2a01:4f8:150:4107::2]:5001\n-[2a01:4f8:150:4226::2]:8333\n-[2a01:4f8:150:5327::2]:8333\n-[2a01:4f8:150:53a4::2]:8333\n-[2a01:4f8:150:53a4::4]:8333\n-[2a01:4f8:150:728f::2]:8333\n-[2a01:4f8:150:72ee::4202]:8333\n-[2a01:4f8:150:7331::2]:8333\n-[2a01:4f8:151:82d2::2]:8333\n-[2a01:4f8:160:3324::2]:8333\n-[2a01:4f8:160:41f0::1:33]:8333\n-[2a01:4f8:160:542e::2]:8333\n-[2a01:4f8:160:636e::2]:8333\n-[2a01:4f8:160:74b2::2]:8333\n-[2a01:4f8:161:2148::2]:8333\n-[2a01:4f8:161:22e7::2]:8333\n-[2a01:4f8:161:6091::2]:8333\n-[2a01:4f8:161:610c::2]:8333\n-[2a01:4f8:161:9::2]:8333\n-[2a01:4f8:162:128d::2]:8333\n-[2a01:4f8:162:14ee::2]:8333\n-[2a01:4f8:162:2108::2]:8333\n-[2a01:4f8:162:33ac::2]:8333\n-[2a01:4f8:162:3462::2]:8333\n-[2a01:4f8:162:4110::2]:8333\n-[2a01:4f8:162:424c::2]:8333\n-[2a01:4f8:171:1c3::2]:8333\n-[2a01:4f8:171:3248::2]:8333\n-[2a01:4f8:171:d4a::2]:8333\n-[2a01:4f8:172:1568::2]:8333\n-[2a01:4f8:172:1823::2]:8333\n-[2a01:4f8:172:29ef::2]:8333\n-[2a01:4f8:173:1622::2]:8333\n-[2a01:4f8:173:1c9c::2]:8333\n-[2a01:4f8:173:294f::2]:8333\n-[2a01:4f8:173:2d9c::2]:8333\n-[2a01:4f8:190:24eb::2]:8333\n-[2a01:4f8:190:528d::2]:8333\n-[2a01:4f8:191:22ee::2]:8333\n-[2a01:4f8:191:3068::2]:8333\n-[2a01:4f8:191:40ef::2]:8333\n-[2a01:4f8:191:60a5::2]:8333\n-[2a01:4f8:191:81b7::2]:8333\n-[2a01:4f8:192:1b2::2]:8333\n-[2a01:4f8:192:34d0::2]:8333\n-[2a01:4f8:192:4a5::2]:8333\n-[2a01:4f8:192:628a::83]:8333\n-[2a01:4f8:200:1012::2]:8333\n-[2a01:4f8:200:24bb::2]:8333\n-[2a01:4f8:200:32a6::2]:8333\n-[2a01:4f8:200:442d::2]:8333\n-[2a01:4f8:200:6346::2]:8333\n-[2a01:4f8:200:7222::2]:8333\n-[2a01:4f8:200:90c3::2]:8333\n-[2a01:4f8:201:4017::11]:8333\n-[2a01:4f8:201:6016::2]:8333\n-[2a01:4f8:202:3030::2]:8333\n-[2a01:4f8:202:32c6::2]:8333\n-[2a01:4f8:202:53c3::2]:8333\n-[2a01:4f8:202:7227::2]:8333\n-[2a01:4f8:210:5488::2]:8333\n-[2a01:4f8:211:13cf::2]:8333\n-[2a01:4f8:211:1643::2]:8333\n-[2a01:4f8:211:17c6::2]:8333\n-[2a01:4f8:211:1e17::2]:8333\n-[2a01:4f8:211:d99::133]:8333\n-[2a01:4f8:211:f08::2]:8333\n-[2a01:4f8:212:1e16::2]:8333\n-[2a01:4f8:212:311::2]:8333\n-[2a01:4f8:221:1384::2311]:8333\n-[2a01:4f8:221:3c82:fea1::666]:8333\n-[2a01:4f8:221:801::2]:8333\n-[2a01:4f8:221:f59::2]:8333\n-[2a01:4f8:a0:108c::2]:8333\n-[2a01:4f8:a0:2232::2]:8333\n-[2a01:4f8:a0:4366::2]:8333\n-[2a01:4f8:a0:6147::2]:8333\n-[2a01:4f8:a0:746a:101:1:1:2]:8333\n-[2a01:4f8:a0:828a::2]:8333\n-[2a01:4f8:a0:9163::2]:8333\n-[2a01:4f8:b10:5009::2]:8333\n-[2a01:4f8:c0c:10dc::2]:8333\n-[2a01:4f8:c0c:1ff7::2]:8333\n-[2a01:4f8:c0c:2262::2]:8333\n-[2a01:4f8:c0c:354c::2]:8333\n-[2a01:4f8:c0c:4242::2]:8333\n-[2a01:4f8:c0c:4816::2]:8333\n-[2a01:4f8:c0c:dcc::2]:8333\n-[2a01:4f8:c17:24ee::2]:8333\n-[2a01:4f8:c17:330f::2]:8333\n-[2a01:4f8:c17:3b02::2]:8333\n-[2a01:4f8:c17:5dc0::2]:8333\n-[2a01:4f8:c17:67f8::2]:8333\n-[2a01:4f8:c17:710b::2]:8333\n-[2a01:4f8:c17:714::2]:8333\n-[2a01:4f8:c17:e00::2]:8333\n-[2a01:5c0:10:6eb1:89b8:bb58:25a:6050]:8333\n-[2a01:680:10:10::1]:8333\n-[2a01:6f0:ffff:120::8dcb]:8333\n-[2a01:7a0:2:1374::4]:8333\n-[2a01:7a0:2:1374::5]:8333\n-[2a01:7a0:2:1374::7]:8333\n-[2a01:7a7:2:1218:ec4:7aff:fe83:83c4]:8333\n-[2a01:7a7:2:1288:ea39:35ff:fef0:c429]:8333\n-[2a01:7a7:2:155c:346c:8f5:719f:a6b6]:8333\n-[2a01:7a7:2:1565:9484:509b:2a3b:a773]:8333\n-[2a01:7c8:aaaa:373:5054:ff:feb3:2947]:8333\n-[2a01:7c8:aab5:3e6:5054:ff:fed7:4e54]:8333\n-[2a01:7c8:aaba:343::8333]:8333\n-[2a01:7c8:aabd:3d5:5054:ff:fe95:f586]:8333\n-[2a01:7c8:aac1:453:c50:fa3a:229:8504]:8333\n-[2a01:7c8:aac7:5e:5054:ff:fee9:bdf7]:8333\n-[2a01:be00:10:201:0:80:cece:1]:8333\n-[2a01:cb00:2ca:b700:2079:b33f:cf5a:5958]:8333\n-[2a01:cb00:b3:d300:90fd:e3b1:28de:116c]:8333\n-[2a01:cb14:b8:a500:dd9d:80f5:d305:68f9]:8333\n-[2a01:d0:0:1c::245]:8333\n-[2a01:e0a:d:6ea0:56:deab:1b2f:300b]:8333\n-[2a01:e34:ecfd:1910:58fb:c2ff:feac:571f]:8333\n-[2a01:e34:eed7:6670:e150:6bb0:f11b:d6d8]:8333\n-[2a01:e35:2433:e320:9c8e:6ff0:990f:f06e]:8333\n-[2a01:e35:2ee5:610:21f:d0ff:fe4e:7460]:8333\n-[2a01:e35:8be7:53d0:b8d5:de58:95b5:dd16]:8333\n-[2a01:e35:8bff:70b0:1e1b:dff:fe0b:236d]:8333\n-[2a02:1205:34c3:bae0:baae:edff:feea:9445]:8333\n-[2a02:1205:5004:de00:c84:4a1:e760:cf90]:8333\n-[2a02:1205:5076:ee00:d6c9:efff:fe65:fbfb]:8333\n-[2a02:1205:c6be:84e0:ca2a:14ff:fe0b:803b]:8333\n-[2a02:1206:45c3:be80:d4a4:3215:aaf0:85aa]:8333\n-[2a02:120b:2c2a:5ec0:10dd:31ff:fe42:5079]:8333\n-[2a02:120b:2c3f:3fc0:10dd:31ff:fe42:5079]:8333\n-[2a02:121e:3e87:0:7d3a:fe09:b619:6b4b]:8333\n-[2a02:168:420b:a::20]:8333\n-[2a02:168:4a01::39]:8333\n-[2a02:168:4a35:0:2e44:fdff:fe9a:46dc]:8333\n-[2a02:180:1:1::517:10b6]:8333\n-[2a02:180:6:1::18]:8333\n-[2a02:1810:1d13:7200:848b:c4c4:526b:e657]:8333\n-[2a02:181f:0:2161:8f0:54b2:222c:b315]:8333\n-[2a02:20c8:1422:1::a3]:8333\n-[2a02:2168:80d:6e8::2]:8333\n-[2a02:2168:d05:2c00:216:3eff:fef7:a099]:8333\n-[2a02:2528:503:2::14]:8333\n-[2a02:2808:5401:0:225:90ff:fe4e:ee42]:8333\n-[2a02:390:9000:0:218:7dff:fe10:be33]:8333\n-[2a02:7aa0:1201::bd4e:1219]:8333\n-[2a02:7aa0:1619::590:eba2]:8333\n-[2a02:7b40:50d0:e0d9::1]:8333\n-[2a02:7b40:50d0:e335::1]:8333\n-[2a02:7b40:c287:53af::1]:8333\n-[2a02:7b40:d418:60c5::1]:8333\n-[2a02:7b40:d418:6a84::1]:8333\n-[2a02:8108:9c3f:dd18:922b:34ff:fe30:ac42]:8333\n-[2a02:8109:9ac0:2a2b:707a:ad1a:70c:84a9]:8333\n-[2a02:810d:8a40:36f8:9af2:b3ff:fee8:6d7a]:8333\n-[2a02:810d:9840:7e50::227]:8333\n-[2a02:930:1:0:250:56ff:fe8e:2819]:8333\n-[2a02:c200:1:10:2:4:334:1]:8333\n-[2a02:c200:1:10:2:5:227:1]:8333\n-[2a02:c200:1:10:2:5:800:1]:8333\n-[2a02:c205:0:5145::1]:8333\n-[2a02:c205:2008:272::1]:8333\n-[2a02:c205:2008:7160::1]:8333\n-[2a02:c205:2009:7804::1]:8333\n-[2a02:c205:2014:1981::1]:8333\n-[2a02:c205:2014:3524::1]:8333\n-[2a02:c205:2015:2475::1]:8333\n-[2a02:c205:3002:2787::1]:8333\n-[2a02:c207:2002:9013::1]:8333\n-[2a02:c207:2007:4699::1]:8333\n-[2a02:c207:2008:6519::1]:8333\n-[2a02:c207:2009:213::1]:8333\n-[2a02:c207:2011:2583::1]:8333\n-[2a02:c207:2012:263::1]:8333\n-[2a02:c207:2012:2917::1]:8333\n-[2a02:c207:2012:4826::1]:8333\n-[2a02:c207:2013:3160::1]:8333\n-[2a02:c207:2014:4199::1]:8333\n-[2a02:c207:2014:5639::1]:8333\n-[2a02:c207:2014:7160::1]:8333\n-[2a02:c207:2014:8104::1]:8333\n-[2a02:c207:2014:8536::1]:8333\n-[2a02:c207:2014:9433::1]:8333\n-[2a02:c207:2015:4997::1]:8333\n-[2a02:c207:2015:5919::1]:8333\n-[2a02:c207:3001:5824::1]:8333\n-[2a02:c207:3001:7645::1]:8333\n-[2a02:c207:3001:7776::1]:8333\n-[2a02:c207:3001:9320::1]:8333\n-[2a02:c207:3002:1287::1]:8333\n-[2a02:c207:3002:1532::1]:8333\n-[2a02:c207:3002:2432::1]:8333\n-[2a02:c207:3002:4431::1]:8333\n-[2a02:c207:3002:809::1]:8333\n-[2a02:c7f:7c2c:a800:428d:5cff:fe74:1455]:8333\n-[2a02:c7f:d826:1901:20c:29ff:fe11:9d0e]:8333\n-[2a02:ce80:0:20::1]:8333\n-[2a03:4000:2:496::8]:8333\n-[2a03:7380:300:16::]:8333\n-[2a03:7380:300:7:a19f:eb0b:ae0:6aad]:8333\n-[2a03:b0c0:3:d0::1219:6001]:8333\n-[2a03:b0c0:3:d0::23fb:6001]:8333\n-[2a03:b0c0:3:d0::44b8:9001]:8333\n-[2a03:b0c0:3:d0::44b8:a001]:8333\n-[2a03:b0c0:3:d0::44b8:b001]:8333\n-[2a03:b0c0:3:d0::44b8:e001]:8333\n-[2a03:b0c0:3:d0::44b8:f001]:8333\n-[2a03:b0c0:3:d0::44b9:1]:8333\n-[2a03:b0c0:3:d0::44b9:1001]:8333\n-[2a03:b0c0:3:d0::44b9:2001]:8333\n-[2a03:b0c0:3:d0::44b9:4001]:8333\n-[2a03:b0c0:3:d0::4:1]:8333\n-[2a03:b0c0:3:d0::5e48:d001]:8333\n-[2a03:b0c0:3:d0::c7:f001]:8333\n-[2a03:b0c0:3:d0::e9:f001]:8333\n-[2a03:ff40:4ed1:1004:a236:9fff:feb4:f9f8]:8333\n-[2a04:2180:0:2::94]:8333\n-[2a04:2180:1:6:f000::14]:8333\n-[2a04:52c0:101:122::496d]:8333\n-[2a04:dbc3:fffe:0:e61f:13ff:fe95:8401]:8333\n-[2a05:3580:d400:140d:da6e:826e:e771:4100]:8333\n-[2a05:bec0:1:1:216:3eff:fe73:d20a]:8333\n-[2a06:3d80:b:1:48b4:bedd:6964:54ac]:8333\n-[2a06:3d80:b:1:ae1f:6bff:fe13:c13e]:8333\n-[2a06:3d80:b:2:ae1f:6bff:fe13:c13e]:8333\n-[2a06:3d80:b:2:ec4:7aff:fe96:b570]:8333\n-[2a07:5740:600::14ad:9cec]:8333\n-[2a07:5740:600::1b5:3082]:8333\n-[2a07:5741:0:d8b::1]:8333\n-226eupdnaouu4h2v.onion:8333\n-2ej5qoyruoeijadb.onion:8333\n-2f4xg7m3g6vtxqcd.onion:8333\n-3ig6dutfdd6pkkw4.onion:8333\n-3r44ddzjitznyahw.onion:8333\n-53tsjt6zq3iasv5q.onion:8333\n-546esc6botbjfbxb.onion:8333\n-5elzwcg4xysogalo.onion:8333\n-5ygszbkbbauzjx7m.onion:8333\n-64qrhyxglyjjhkne.onion:8333\n-66ehyqkvke6td4fy.onion:8333\n-6ruyo3kysvd27dlf.onion:8333\n-6tr7cshvx5aymzth.onion:8333\n-7nubu2wy3xizgwzu.onion:8333\n-7nui6eestaw2f7xm.onion:8333\n-7qg6jdmahfxamay5.onion:8333\n-ab7ftdfw6qhdx3re.onion:8333\n-ajqvsylg5xd5vs3y.onion:8333\n-alhlegtjkdmbqsvt.onion:8333\n-b5d6etfljm2lje5y.onion:8333\n-b7xer7moeiiz56cp.onion:8333\n-brwqezn6le54w2bb.onion:8333\n-bup5n5e3kurvjzf3.onion:8333\n-bvay66ezgxwo7wj4.onion:8333\n-cgk4u2lxrvml4jvb.onion:8333\n-cpyfqbs4fs3vnbpf.onion:8333\n-cyvpgt25274i5b7c.onion:8333\n-d26tupmbhdjmxzwm.onion:8333\n-d6wubsdtr46dd5ki.onion:8333\n-dekj4wacywpqsad3.onion:8333\n-dqpxwlpnv3z3hznl.onion:8333\n-dsrwqwijtsvi4dfk.onion:42434\n-dxkmtmwiq7ddtgul.onion:8333\n-e3zbephvcqmzcqkr.onion:8333\n-eab5op3z24n7eqd5.onion:8333\n-ejcqevujcqltqn7d.onion:8333\n-ep2mjzox3kvb6ax4.onion:8333\n-f34cshhal2nuljsc.onion:8333\n-f3nfioh27j2xlfe5.onion:8333\n-f6h7ukyyiczlyvml.onion:8333\n-faewczjuzs4wfxhv.onion:8333\n-fnk3dioogxals7r4.onion:8333\n-hahhloezyfqh3hci.onion:8333\n-ifruqn4x7nbn5pba.onion:8333\n-ijmbmziunbszzxtj.onion:8333\n-imperialnza3tqgh.onion:8333\n-in7r5ieo7ogkxbne.onion:8333\n-iuenlcarsnsstiix.onion:8333\n-jtksnokusbzms7wl.onion:8333\n-k6cpe3hatrrxvnz6.onion:8333\n-kswfyurnglm65u7b.onion:8333\n-kvd44sw7skb5folw.onion:8333\n-l2pruzr3mnhieuug.onion:8333\n-l5oddj46pvoddzd4.onion:8333\n-lgkvbvro67jomosw.onion:8333\n-loflfbxumxm55biq.onion:8333\n-m6jrhrqvjbnzla3r.onion:8333\n-mvomwfdddqfqg3lq.onion:8333\n-o4dfb6tp33ff2lq7.onion:8333\n-o4sl5na6jeqgi3l6.onion:8333\n-o72zyzrv77ea2bwu.onion:8333\n-omts4ofhwqjdulr6.onion:8333\n-pbnlp7m4kujma6iz.onion:8333\n-pcfhsdqzs6q63ryu.onion:8333\n-pjghcivzkoersesd.onion:8333\n-pz2x5nfhjipshaz3.onion:8333\n-qaxm5spmx5d2k3up.onion:8333\n-qepth54daysmpy5y.onion:8333\n-qgw4jb6yikp44ypa.onion:8333\n-qj6irqn2i73edff5.onion:8333\n-qlv6py6hdtzipntn.onion:8333\n-qv4hq75asyitkmas.onion:8333\n-r3dsojfhwcm7x7p6.onion:8333\n-rjacws757ai66lre.onion:8333\n-seoskudzk6vn6mqz.onion:8333\n-smtmhcewuv6tjynv.onion:8333\n-stil3scvqbvhowvb.onion:8333\n-tchop676j6yppwwm.onion:8333\n-toguvy5upyuctudx.onion:8333\n-tpx4jan5n2a2cci2.onion:8333\n-trrtyp3sirmwttyu.onion:8333\n-u7mpvxotmnqntyn5.onion:8333\n-ueo6royc3775ioq7.onion:8333\n-vev3n5fxfrtqj6e5.onion:8333\n-visevrizz3quyagj.onion:8333\n-vnzfcobvaqahooun.onion:8333\n-w2dtur5kugapw3rp.onion:8333\n-wg6vwmbrzyyzapun.onion:8333\n-wmxc6ask4a5xyaxh.onion:8333\n-xz3bsfhiqucn37gd.onion:8333\n-ypzld2xyidu6ymqc.onion:8333\n-yyuxafli7fqdizhq.onion:8333\n-ziew7smr2dl2hg2q.onion:8333\n-zsq5qogtoshzkqad.onion:8333"
      },
      {
        "sha": "98365ee505ced2410cdc7ea841bf52198b405662",
        "filename": "contrib/seeds/nodes_test.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/seeds/nodes_test.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/seeds/nodes_test.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_test.txt?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,11 +0,0 @@\n-# List of fixed seed nodes for testnet\n-\n-# Onion nodes\n-thfsmmn2jbitcoin.onion\n-it2pj4f7657g3rhi.onion\n-nkf5e6b7pl4jfd4a.onion\n-4zhkir2ofl7orfom.onion\n-t6xj6wilh4ytvcs7.onion\n-i6y6ivorwakd7nw3.onion\n-ubqj4rsu3nqtxmtp.onion\n-"
      },
      {
        "sha": "83624f443a7f9f71ba2a1f1c2dbc3d3a8297bc7d",
        "filename": "contrib/testgen/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/testgen/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/testgen/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/README.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,8 +0,0 @@\n-### TestGen ###\n-\n-Utilities to generate test vectors for the data-driven Bitcoin tests.\n-\n-Usage: \n-\n-    gen_base58_test_vectors.py valid 50 > ../../src/test/data/base58_keys_valid.json\n-    gen_base58_test_vectors.py invalid 50 > ../../src/test/data/base58_keys_invalid.json\n\\ No newline at end of file"
      },
      {
        "sha": "071bc722b0eee886b5f1acd8bae4634e3f384186",
        "filename": "contrib/testgen/base58.py",
        "status": "removed",
        "additions": 0,
        "deletions": 115,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/testgen/base58.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/testgen/base58.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/base58.py?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,115 +0,0 @@\n-# Copyright (c) 2012-2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Bitcoin base58 encoding and decoding.\n-\n-Based on https://bitcointalk.org/index.php?topic=1026.0 (public domain)\n-'''\n-import hashlib\n-\n-# for compatibility with following code...\n-class SHA256:\n-    new = hashlib.sha256\n-\n-if str != bytes:\n-    # Python 3.x\n-    def ord(c):\n-        return c\n-    def chr(n):\n-        return bytes( (n,) )\n-\n-__b58chars = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n-__b58base = len(__b58chars)\n-b58chars = __b58chars\n-\n-def b58encode(v):\n-    \"\"\" encode v, which is a string of bytes, to base58.\n-    \"\"\"\n-    long_value = 0\n-    for (i, c) in enumerate(v[::-1]):\n-        if isinstance(c, str):\n-            c = ord(c)\n-        long_value += (256**i) * c\n-\n-    result = ''\n-    while long_value >= __b58base:\n-        div, mod = divmod(long_value, __b58base)\n-        result = __b58chars[mod] + result\n-        long_value = div\n-    result = __b58chars[long_value] + result\n-\n-    # Bitcoin does a little leading-zero-compression:\n-    # leading 0-bytes in the input become leading-1s\n-    nPad = 0\n-    for c in v:\n-        if c == 0:\n-            nPad += 1\n-        else:\n-            break\n-\n-    return (__b58chars[0]*nPad) + result\n-\n-def b58decode(v, length = None):\n-    \"\"\" decode v into a string of len bytes\n-    \"\"\"\n-    long_value = 0\n-    for i, c in enumerate(v[::-1]):\n-        pos = __b58chars.find(c)\n-        assert pos != -1\n-        long_value += pos * (__b58base**i)\n-\n-    result = bytes()\n-    while long_value >= 256:\n-        div, mod = divmod(long_value, 256)\n-        result = chr(mod) + result\n-        long_value = div\n-    result = chr(long_value) + result\n-\n-    nPad = 0\n-    for c in v:\n-        if c == __b58chars[0]:\n-            nPad += 1\n-            continue\n-        break\n-\n-    result = bytes(nPad) + result\n-    if length is not None and len(result) != length:\n-        return None\n-\n-    return result\n-\n-def checksum(v):\n-    \"\"\"Return 32-bit checksum based on SHA256\"\"\"\n-    return SHA256.new(SHA256.new(v).digest()).digest()[0:4]\n-\n-def b58encode_chk(v):\n-    \"\"\"b58encode a string, with 32-bit checksum\"\"\"\n-    return b58encode(v + checksum(v))\n-\n-def b58decode_chk(v):\n-    \"\"\"decode a base58 string, check and remove checksum\"\"\"\n-    result = b58decode(v)\n-    if result is None:\n-        return None\n-    if result[-4:] == checksum(result[:-4]):\n-        return result[:-4]\n-    else:\n-        return None\n-\n-def get_bcaddress_version(strAddress):\n-    \"\"\" Returns None if strAddress is invalid.  Otherwise returns integer version of address. \"\"\"\n-    addr = b58decode_chk(strAddress)\n-    if addr is None or len(addr)!=21:\n-        return None\n-    version = addr[0]\n-    return ord(version)\n-\n-if __name__ == '__main__':\n-    # Test case (from http://gitorious.org/bitcoin/python-base58.git)\n-    assert get_bcaddress_version('15VjRaDX9zpbA8LVnbrCAFzrVzN7ixHNsC') is 0\n-    _ohai = 'o hai'.encode('ascii')\n-    _tmp = b58encode(_ohai)\n-    assert _tmp == 'DYB3oMS'\n-    assert b58decode(_tmp, 5) == _ohai\n-    print(\"Tests passed\")"
      },
      {
        "sha": "de15657d27ed319a2ed8acdd0b9ed80397056687",
        "filename": "contrib/testgen/gen_base58_test_vectors.py",
        "status": "removed",
        "additions": 0,
        "deletions": 132,
        "changes": 132,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/testgen/gen_base58_test_vectors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/testgen/gen_base58_test_vectors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/gen_base58_test_vectors.py?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,132 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2012-2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Generate valid and invalid base58 address and private key test vectors.\n-\n-Usage:\n-    gen_base58_test_vectors.py valid 50 > ../../src/test/data/base58_keys_valid.json\n-    gen_base58_test_vectors.py invalid 50 > ../../src/test/data/base58_keys_invalid.json\n-'''\n-# 2012 Wladimir J. van der Laan\n-# Released under MIT License\n-import os\n-from itertools import islice\n-from base58 import b58encode_chk, b58decode_chk, b58chars\n-import random\n-from binascii import b2a_hex\n-\n-# key types\n-PUBKEY_ADDRESS = 0\n-SCRIPT_ADDRESS = 5\n-PUBKEY_ADDRESS_TEST = 111\n-SCRIPT_ADDRESS_TEST = 196\n-PRIVKEY = 128\n-PRIVKEY_TEST = 239\n-\n-metadata_keys = ['isPrivkey', 'isTestnet', 'addrType', 'isCompressed']\n-# templates for valid sequences\n-templates = [\n-  # prefix, payload_size, suffix, metadata\n-  #                                  None = N/A\n-  ((PUBKEY_ADDRESS,),      20, (),   (False, False, 'pubkey', None)),\n-  ((SCRIPT_ADDRESS,),      20, (),   (False, False, 'script',  None)),\n-  ((PUBKEY_ADDRESS_TEST,), 20, (),   (False, True,  'pubkey', None)),\n-  ((SCRIPT_ADDRESS_TEST,), 20, (),   (False, True,  'script',  None)),\n-  ((PRIVKEY,),             32, (),   (True,  False, None,  False)),\n-  ((PRIVKEY,),             32, (1,), (True,  False, None,  True)),\n-  ((PRIVKEY_TEST,),        32, (),   (True,  True,  None,  False)),\n-  ((PRIVKEY_TEST,),        32, (1,), (True,  True,  None,  True))\n-]\n-\n-def is_valid(v):\n-    '''Check vector v for validity'''\n-    result = b58decode_chk(v)\n-    if result is None:\n-        return False\n-    for template in templates:\n-        prefix = bytearray(template[0])\n-        suffix = bytearray(template[2])\n-        if result.startswith(prefix) and result.endswith(suffix):\n-            if (len(result) - len(prefix) - len(suffix)) == template[1]:\n-                return True\n-    return False\n-\n-def gen_valid_vectors():\n-    '''Generate valid test vectors'''\n-    while True:\n-        for template in templates:\n-            prefix = bytearray(template[0])\n-            payload = bytearray(os.urandom(template[1]))\n-            suffix = bytearray(template[2])\n-            rv = b58encode_chk(prefix + payload + suffix)\n-            assert is_valid(rv)\n-            metadata = {x: y for x, y in zip(metadata_keys,template[3]) if y is not None}\n-            hexrepr = b2a_hex(payload)\n-            if isinstance(hexrepr, bytes):\n-                hexrepr = hexrepr.decode('utf8')\n-            yield (rv, hexrepr, metadata)\n-\n-def gen_invalid_vector(template, corrupt_prefix, randomize_payload_size, corrupt_suffix):\n-    '''Generate possibly invalid vector'''\n-    if corrupt_prefix:\n-        prefix = os.urandom(1)\n-    else:\n-        prefix = bytearray(template[0])\n-\n-    if randomize_payload_size:\n-        payload = os.urandom(max(int(random.expovariate(0.5)), 50))\n-    else:\n-        payload = os.urandom(template[1])\n-\n-    if corrupt_suffix:\n-        suffix = os.urandom(len(template[2]))\n-    else:\n-        suffix = bytearray(template[2])\n-\n-    return b58encode_chk(prefix + payload + suffix)\n-\n-def randbool(p = 0.5):\n-    '''Return True with P(p)'''\n-    return random.random() < p\n-\n-def gen_invalid_vectors():\n-    '''Generate invalid test vectors'''\n-    # start with some manual edge-cases\n-    yield \"\",\n-    yield \"x\",\n-    while True:\n-        # kinds of invalid vectors:\n-        #   invalid prefix\n-        #   invalid payload length\n-        #   invalid (randomized) suffix (add random data)\n-        #   corrupt checksum\n-        for template in templates:\n-            val = gen_invalid_vector(template, randbool(0.2), randbool(0.2), randbool(0.2))\n-            if random.randint(0,10)<1: # line corruption\n-                if randbool(): # add random character to end\n-                    val += random.choice(b58chars)\n-                else: # replace random character in the middle\n-                    n = random.randint(0, len(val))\n-                    val = val[0:n] + random.choice(b58chars) + val[n+1:]\n-            if not is_valid(val):\n-                yield val,\n-\n-if __name__ == '__main__':\n-    import sys\n-    import json\n-    iters = {'valid':gen_valid_vectors, 'invalid':gen_invalid_vectors}\n-    try:\n-        uiter = iters[sys.argv[1]]\n-    except IndexError:\n-        uiter = gen_valid_vectors\n-    try:\n-        count = int(sys.argv[2])\n-    except IndexError:\n-        count = 0\n-\n-    data = list(islice(uiter(), count))\n-    json.dump(data, sys.stdout, sort_keys=True, indent=4)\n-    sys.stdout.write('\\n')\n-"
      },
      {
        "sha": "b845b34e41044f19adc35b36ab8fec45d74dc5a3",
        "filename": "contrib/tidy_datadir.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 62,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/tidy_datadir.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/tidy_datadir.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/tidy_datadir.sh?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,62 +0,0 @@\n-#!/bin/bash\n-# Copyright (c) 2013 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-if [ -d \"$1\" ]; then\n-  cd \"$1\" || exit 1\n-else\n-  echo \"Usage: $0 <datadir>\" >&2\n-  echo \"Removes obsolete Bitcoin database files\" >&2\n-  exit 1\n-fi\n-\n-LEVEL=0\n-if [ -f wallet.dat -a -f addr.dat -a -f blkindex.dat -a -f blk0001.dat ]; then LEVEL=1; fi\n-if [ -f wallet.dat -a -f peers.dat -a -f blkindex.dat -a -f blk0001.dat ]; then LEVEL=2; fi\n-if [ -f wallet.dat -a -f peers.dat -a -f coins/CURRENT -a -f blktree/CURRENT -a -f blocks/blk00000.dat ]; then LEVEL=3; fi\n-if [ -f wallet.dat -a -f peers.dat -a -f chainstate/CURRENT -a -f blocks/index/CURRENT -a -f blocks/blk00000.dat ]; then LEVEL=4; fi\n-\n-case $LEVEL in\n-  0)\n-    echo \"Error: no Bitcoin datadir detected.\"\n-    exit 1\n-    ;;\n-  1)\n-    echo \"Detected old Bitcoin datadir (before 0.7).\"\n-    echo \"Nothing to do.\"\n-    exit 0\n-    ;;\n-  2)\n-    echo \"Detected Bitcoin 0.7 datadir.\"\n-    ;;\n-  3)\n-    echo \"Detected Bitcoin pre-0.8 datadir.\"\n-    ;;\n-  4)\n-    echo \"Detected Bitcoin 0.8 datadir.\"\n-    ;;\n-esac\n-\n-FILES=\"\"\n-DIRS=\"\"\n-\n-if [ $LEVEL -ge 3 ]; then FILES=$(echo $FILES blk????.dat blkindex.dat); fi\n-if [ $LEVEL -ge 2 ]; then FILES=$(echo $FILES addr.dat); fi\n-if [ $LEVEL -ge 4 ]; then DIRS=$(echo $DIRS coins blktree); fi\n-\n-for FILE in $FILES; do\n-  if [ -f $FILE ]; then\n-    echo \"Deleting: $FILE\"\n-    rm -f $FILE\n-  fi\n-done\n-\n-for DIR in $DIRS; do\n-  if [ -d $DIR ]; then\n-    echo \"Deleting: $DIR/\"\n-    rm -rf $DIR\n-  fi\n-done\n-\n-echo \"Done.\""
      },
      {
        "sha": "0f6d993fd2b4ad45ec10b9324d40edfb96afa9d8",
        "filename": "contrib/valgrind.supp",
        "status": "removed",
        "additions": 0,
        "deletions": 43,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/valgrind.supp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/valgrind.supp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/valgrind.supp?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,43 +0,0 @@\n-# Valgrind suppressions file for Bitcoin.\n-#\n-# Includes known Valgrind warnings in our dependencies that cannot be fixed\n-# in-tree.\n-#\n-# Example use:\n-# $ valgrind --suppressions=contrib/valgrind.supp src/test/test_bitcoin\n-# $ valgrind --suppressions=contrib/valgrind.supp --leak-check=full \\\n-#       --show-leak-kinds=all src/test/test_bitcoin --log_level=test_suite\n-{\n-   Suppress libstdc++ warning - https://gcc.gnu.org/bugzilla/show_bug.cgi?id=65434\n-   Memcheck:Leak\n-   match-leak-kinds: reachable\n-   fun:malloc\n-   obj:*/libstdc++.*\n-   fun:call_init.part.0\n-   fun:call_init\n-   fun:_dl_init\n-   obj:*/ld-*.so\n-}\n-{\n-   Suppress libdb warning - https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=662917\n-   Memcheck:Cond\n-   obj:*/libdb_cxx-*.so\n-   fun:__log_put\n-   obj:*/libdb_cxx-*.so\n-   fun:__log_put_record\n-}\n-{\n-   Suppress leveldb warning (leveldb::InitModule()) - https://github.com/google/leveldb/issues/113\n-   Memcheck:Leak\n-   match-leak-kinds: reachable\n-   fun:_Znwm\n-   fun:_ZN7leveldbL10InitModuleEv\n-}\n-{\n-   Suppress leveldb warning (leveldb::Env::Default()) - https://github.com/google/leveldb/issues/113\n-   Memcheck:Leak\n-   match-leak-kinds: reachable\n-   fun:_Znwm\n-   ...\n-   fun:_ZN7leveldbL14InitDefaultEnvEv\n-}"
      },
      {
        "sha": "fa492fdd2750639aca86c787da7a797e7a22479e",
        "filename": "contrib/verify-commits/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 47,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/verify-commits/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/verify-commits/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/README.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,47 +0,0 @@\n-Tooling for verification of PGP signed commits\n-----------------------------------------------\n-\n-This is an incomplete work in progress, but currently includes a pre-push hook\n-script (`pre-push-hook.sh`) for maintainers to ensure that their own commits\n-are PGP signed (nearly always merge commits), as well as a script to verify\n-commits against a trusted keys list.\n-\n-\n-Using verify-commits.sh safely\n-------------------------------\n-\n-Remember that you can't use an untrusted script to verify itself. This means\n-that checking out code, then running `verify-commits.sh` against `HEAD` is\n-_not_ safe, because the version of `verify-commits.sh` that you just ran could\n-be backdoored. Instead, you need to use a trusted version of verify-commits\n-prior to checkout to make sure you're checking out only code signed by trusted\n-keys:\n-\n-    git fetch origin && \\\n-      ./contrib/verify-commits/verify-commits.sh origin/master && \\\n-      git checkout origin/master\n-\n-Note that the above isn't a good UI/UX yet, and needs significant improvements\n-to make it more convenient and reduce the chance of errors; pull-reqs\n-improving this process would be much appreciated.\n-\n-Configuration files\n--------------------\n-\n-* `trusted-git-root`: This file should contain a single git commit hash which is the first unsigned git commit (hence it is the \"root of trust\").\n-* `trusted-sha512-root-commit`: This file should contain a single git commit hash which is the first commit without a SHA512 root commitment.\n-* `trusted-keys`: This file should contain a \\n-delimited list of all PGP fingerprints of authorized commit signers (primary, not subkeys).\n-* `allow-revsig-commits`: This file should contain a \\n-delimited list of git commit hashes. See next section for more info.\n-\n-Key expiry/revocation\n----------------------\n-\n-When a key (or subkey) which has signed old commits expires or is revoked,\n-verify-commits will start failing to verify all commits which were signed by\n-said key. In order to avoid bumping the root-of-trust `trusted-git-root`\n-file, individual commits which were signed by such a key can be added to the\n-`allow-revsig-commits` file. That way, the PGP signatures are still verified\n-but no new commits can be signed by any expired/revoked key. To easily build a\n-list of commits which need to be added, verify-commits.sh can be edited to test\n-each commit with BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG set to both 1 and 0, and\n-those which need it set to 1 printed."
      },
      {
        "sha": "3abf82e529cbbbc766d0b7f7c4028d7721eb6755",
        "filename": "contrib/verify-commits/allow-revsig-commits",
        "status": "removed",
        "additions": 0,
        "deletions": 504,
        "changes": 504,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/verify-commits/allow-revsig-commits",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/verify-commits/allow-revsig-commits",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/allow-revsig-commits?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,504 +0,0 @@\n-a06ede9a138d0fb86b0de17c42b936d9fe6e2158\n-923dc447eaa8e017985b2afbbb12dd1283fbea0e\n-71148b8947fe8b4d756822420a7f31c380159425\n-6696b4635ceb9b47aaa63244bff9032fa7b08354\n-812714fd80e96e28cd288c553c83838cecbfc2d9\n-8a445c5651edb9a1f51497055b7ddf4402be9188\n-e126d0c12ca66278d9e7b12187c5ff4fc02a7e6c\n-3908fc4728059719bed0e1c7b1c8b388c2d4a8da\n-8b66bf74e2a349e71eaa183af81fa63eaee76ad2\n-05950427d310654774031764a7141a1a4fd9c6e4\n-07fd147b9f12e9205afd66a624edce357977d615\n-12e31127948fa4bb01c3bddc1b8c85b432f7465b\n-8c87f175d335e9d9e93f987d871ae9f05f6a10a7\n-46b249e578e8a3dfbe85bc7253a12e82ef4b658b\n-a55716abe5662ec74c2f8af93023f1e7cca901fc\n-f646275b90b1de93bc62b4c4d045d75ac0b96eee\n-c252685aa5867631e9a5ef07ccae7c7c25cae8ff\n-a7d55c93385359952d85decd5037843ac70ba3d4\n-7dac1e5e9e887f5f6ff146e812a05bd3bf281eae\n-2a524b8e8fe69ef487fd8ea1b4f7a03f473ed201\n-ce5c1f4acae43477989cdf9a82ed33703919cda2\n-2db4cbcc437f51f5dac82cc4de46f383b92e6f11\n-7aa700424cbda387536373d8dfec88aee43f950e\n-b99a093afed880f23fb279c443cc6ae5e379cc43\n-b83264d9c7a8ddb79f64bd9540caddc8632ef31f\n-57e337d40e94ba33d8cd265c134d6ef857b32b59\n-a1dcf2e1087beaf3981739fd2bb74f35ecad630a\n-d38b0d7a6b6056cba26999b702815775e2437d87\n-815640ec6af9a38d6a2da4a4400056e2f4105080\n-09c4fd157c5b88df2d97fad4826c79b094db90c9\n-2efcfa5acfacb958973d9e8125e1d81f102e2dfd\n-dc6dee41f7cf2ba93fcd0fea7c157e4b2775d439\n-ad826b3df9f763b49f1e3e3d50c4efdd438c7547\n-c1a52276848d8caa9a9789dff176408c1aa6b1ed\n-3bf06e9bac57b5b5a746677b75e297a7b154bdbd\n-72ae6f8cf0224370e8121d6769b21e612ca15d6f\n-a143b88dbd4971ecfdd1d39a494489c8f2db0344\n-76fec09d878d6dbf214bdb6228d480bd9195db4c\n-93566e0c37c5ae104095474fea89f00dcb40f551\n-407d9232ef5cb1ebf6cff21f3d13e07ea4158eeb\n-9346f8429957e356d21c665bab59fe45bcf1f74e\n-6eeac6e30d65f9a972067c1ea8c49978c8e631ac\n-dc6b9406bdfab2af8c86cb080cb3e6cf8f2385d8\n-9f554e03ebe5701c1b75ff03b3d6152095c0cad3\n-05009935f9ac070197113954d680bc2c9150b9b3\n-508404de98a8a5435f52916cef8f328e82651961\n-ed0cc50afed146c27f6d8129c683c225fb940093\n-6429cfa8a70308241c576aeb92ffe3db5203b2ef\n-6898213409811b140843c3d89af43328c3b22fad\n-5b2ea29cf4fd298346437bb16a54407f8c1f9dca\n-e2a1a1ee895149c544d4ae295466611f0cec3094\n-e82fb872ff5cc8fd22d43327c1ee3e755f61c562\n-19b0f33de0efd9da788e8e4f3fdc2a9e159abdb1\n-89de1538ce1f8c00f80e8d11f43e1b77e24d7dea\n-de07fdcf77e97b8613091285e4d0a734f5de7492\n-01680195f8aa586c55c44767397380def3a23b54\n-05e1c85fb687c82ae477c72d4a7e2d6b0c692167\n-c072b8fd95cd4fa84f08189a0cd8b173ea2dbb8e\n-9a0ed08b40b15ae2b791aa8549b53e69934b4ea7\n-53f8f226bd1d627c4a6dec5862a1d4ea5a933e45\n-9d0f43b7ca7241d8a018fd35dd3bc01555235ec6\n-f12d2b5a8ac397e4bcaefcc19898f8ff5705dea5\n-8250de13587ed05ca45df3e12c5dc9bcb1500e2c\n-d727f77e390426e9e463336bda08d50c451c7086\n-484312bda2d43e3ea60047be076332299463adf8\n-c7e05b35ab0a791c7a8e2d863e716fdec6f3f671\n-b9c1cd81848da9de1baf9c2f29c19c50e549de13\n-8ea7d31e384975019733b5778feabbd9955c79d8\n-f798b891bcecea9548eedacae70eeb9906c1ddbf\n-ebefe7a00b46579cdd1e033a8c7fd8ce9aa578e4\n-ad087638ee4864d6244ec9381ff764bfa6ee5086\n-66db2d62d59817320c9182fc18e75a93b76828ea\n-7ce9ac5c83b1844a518ef2e12e87aae3cacdfe58\n-4286f43025149cf44207c3ad98e4a1f068520ada\n-cd0c5135ab2291aaa5410ac919bad3fc87249a4a\n-66ed450d771a8fc01c159a8402648ebd1c35eb4c\n-a82f03393a32842d49236e8666ee57805ca701f8\n-f972b04d63eb8af79ff3cec1dc561ed13dfa6053\n-ec45cc5e27668171b55271b0c735194c70e7da41\n-715e9fd7454f7a48d7adba7d42f662c20a3e3367\n-2e0a99037dcc35bc63ba0d54371bc678af737c8e\n-7fa8d758598407f3bf0beb0118dc122ea5340736\n-6a22373771edbc3c7513cacb9355f880c73c2cbf\n-b89ef131147f71a96152a7b5c4374266cdf539b2\n-01d8359983e2f77b5118fede3ffa947072c666c8\n-58f0c929a3d70a4bff79cc200f1c186f71ef1675\n-950be19727a581970591d8f8138dfe4725750382\n-425278d17bd0edf8a3a7cc81e55016f7fd8e7726\n-c028c7b7557da2baff7af8840108e8be4db8e0c6\n-47a7cfb0aa2498f6801026d258a59f9de48f60b0\n-f6b7df3155ddb4cedfbcf5d3eb3383d4614b3a85\n-d72098038f3b55a714ed8adb34fab547b15eb0d5\n-c49c825bd9f4764536b45df5a684d97173673fc7\n-33799afe83eec4200ff140e9bf5eae83701a4d7f\n-5c3f8ddcaa1164079105c452429fccf8127b01b6\n-1f01443567b03ac75a91c810f1733f5c21b5699d\n-b3e42b6d02e8d19658a9135e427ebceab5367779\n-69b3a6dd9d9a0adf5506c8b9fde42187356bd4a8\n-bafd075c5e6a1088ef0f1aa0b0b224e026a3d3e0\n-7daa3adb242d9c8728fdb15c6af6596aaad5502f\n-514993554c370f4cf30a109ac28d5d64893dbf0a\n-c8d2473e6cb042e7275a10c49d3f6a4a91bf0166\n-386f4385ab04b0b2c3d47bddc0dc0f2de7354964\n-9f33dba05c01ecc5c56eb1284ab7d64d42f55171\n-7466a26cab5d66665991433947964a638f5b957e\n-b43aba89e356ff95b706e80d4802f60fc46a569a\n-02b7e8319aef2a870264ad4fa2e3bb18664dcc36\n-f686002a8eba820a40ac2f34a6e8f57b2b5cc54c\n-2b1c50b9352ab1dc40b0f877db23c1fa4048fae3\n-2405ce1df043f778b8efb9205009500cbc17313a\n-4ad3b3c72c73d61e0a0cab541dca20acf651320d\n-4ba3d4f4393d81148422d24d222fe7ed00130194\n-8ee5c7b747171e335793c74cd9d2f7491da58164\n-872c921c0a208b04bd0713758e52fcab5b7c1684\n-00d1680498c5550e7db1f359202d3433a092fafd\n-585db41e9ab7a6fb262c8bad7f427cdbdc497188\n-18462960c0f13bd07d8f52b61e7d7bc17e991eea\n-0630974647dacaf25e7fcb7f9cbb785bb078ede6\n-0f58d7f3d62f012f2584f5e781fc73de4763dd9e\n-3d16f581538b0974853e820508e8b3093269d2fd\n-66e91420ab233cf1dac64504e0dc129019bf8c0d\n-d8d9162f5bad39b2720dd2b2da237c6159e4755f\n-29fad97c320c892ab6a480c81e2078ec22ab354b\n-791c3ea61b4e49fd46a1a71b84ca99ddf69d2ff7\n-a312e201ba56742499a5480b5f2115f01505c217\n-ce56fdd2e8cdf94fd0ab76d71adbfa755e23ce7d\n-480f42630cbd598c04fa59ee0e406f56904ecffb\n-6012f1caf744ac9b53383d7d10a8f1b70ca2c0e1\n-ded6a2afa549f693dcabb430ce0862f8631360c8\n-07090c5339436f856e79a8036d1c85deeb453803\n-0e265916d1c6a63e4a3821dab9db597b5ec64b46\n-e4ffcacc2187d3419c8ea12b82fb06d82d8751d2\n-e117cfe45eee9169409e74a44ef4a866be25bc35\n-dcfe218626b05204e9fbc95ba5d95ca0eb72ec9b\n-23481fa50301201ef5a60675ef899aa6ce94ca03\n-27c59dc502f29cf1d76290556c21e366145e3b2e\n-4a62ddd01873d18dbca96c81d756be1020249b45\n-a233fb4f1d037e68ff70eef3a9f5b7bf1d631918\n-b2089c51cc4af2f7e1c0ec75be9449ee222b1d69\n-c997f8808256521397f1c003bb1e9896fee6eaa0\n-5dc00f68c49c46a380a98d06233f90528b8e2557\n-fe53d5f3636aed064823bc220d828c7ff08d1d52\n-935eb8de039dec65669a96a1c3b86f4b03a1b86c\n-0277173b1defb63216d40a8d8805ae6d5d563c26\n-2a30e67d20f76bbcd9a7d445f616f005316e0a1a\n-d32528e733f2711b34dbc41fbb2bb0f153bf7e9a\n-4cad91663df381d0dff8526f3b4aa74569dfb626\n-1b06ed136f17b526360617a70026aed5ded5746c\n-895fbd768f0c89cea3f78acac58b233d4e3a145e\n-f0295becbf3ef1fb78095306408789253fe0c114\n-8d573198638e52e2dbd9abc609861430f9d2bcc3\n-9d9c4185fadaf243bb97c226e2fef16b65299699\n-eebe4580bc8d6484d79ecb24dd87412221cf2ea7\n-9cf6393a4f82b9c81d3b4b468a17a89db10531a2\n-598a9c4e4dcd03c6d80fba005de729a6a3aeba7e\n-6970b30c6f1d2be7947295fe18f2390649b17a4b\n-f359afcc410432ed5d30001acda0c66741ee8935\n-126000ba9e7ff16271be2f4eef3df99ade8d624f\n-b5e4b9b5100ec15217d43edb5f4149439f4b20a5\n-b987ca4ee495a7fff82f0ac14ef0753bfb7586e2\n-b03013396cb2f4bf25746388b3982a2c3616e16b\n-9a97f39afaa890caa7987c6bc001b9a66e3e74e8\n-cad504bf4c302f7a72e0a0e191f3fdbafda7340f\n-45cf8a03cb57b8639a8d47323bde46ba22d9eeaf\n-b7450cdbd89a1c862f4d4d8bf093f8a0b5448f9c\n-0910cbe4ef31eb95fd76c7c2f820419fe64a3150\n-92a810d04b906722c9efe60e3997243c71ff3d4c\n-45173fa6fca9537abb0a0554f731d14b9f89c456\n-fd4ca17360e6fc0c9bb76bf6b5b07c9102c12728\n-ddff3447f29b62d79a33f728791f42fa9436216e\n-36a5a4404836da323c755523fbd27563a8e84f94\n-c991b304dee368f506cfee27ddaa333f1f82c518\n-d38d1a3e75aa97ffa8755ddd431754a6d0942964\n-a332a7d5a15214015f9553fdb2bcf80a1a4b8dc0\n-604e08c83cf58ca7e7cda2ab284c1ace7bb12977\n-18a1bbad98bd4321f15e7921d9aec91661499d90\n-8049241e226c16bd07b029c0cb4b62ac40f0c923\n-797441ee995aac59f55d59a93ecb55e8ecbe7dbc\n-62fdf9b07087b80d2142799bdd2324f61483359d\n-f60b4ad57912b78a96af08046a503f7905610a8c\n-13e31dd6548d64a5992f439e74bb424bf88aca04\n-fbce66a982679b5409a295be5c99a2eef429cabf\n-9f2c2dba21855b8cb9b193b1819be73fa4a23a99\n-a89221873a3ee2451c73b41bbe2d99d36f439d31\n-3d6ad407770e13958e157bf026cae0bfb9254899\n-901ba3e3819405306414628306746552b0aa1d28\n-7a43fbb959c38e025e558e472ad57de357539894\n-0d89fa0877930c6c8a539a656c1009ad8ab6755b\n-54aedc013744c86b11157423fa3cffc9a51eef02\n-f0c1f8abb0182da557d07372b938f3a0a4bb906f\n-4ed818060ecf4a38a02c8cb48f6cbc78d2ee7708\n-3bdf242fc68a8d767932c6214455d4d413effbc9\n-5e468994fbb349e8eefc996954a31a67a34aaa15\n-41aa9c4a801a01eca1fad22a7095372d23dace60\n-2adbddb03840ad71e843c6c4a207a13e871cd1d4\n-13e352dc53dec0127c5f94a60055d0ca829420dc\n-95e14dc81dd30ee0d396ad08dca9a6980d16eee1\n-61fb80660f73e5aa5b69302ecc7ac33da206ba5a\n-05a761932edd05cf94ffe938908baf058f38632a\n-ee92243e66f2df03b3a759a8ffb75dc06f0cea0d\n-22cdf93c062eeaa0f8f9d6220f01b67240073dfb\n-76b33491596736ca804e3a29bd8398d7a1516ab7\n-6e4e98ee8ce2da3cca2e2fd210e9e8dbc9b1c936\n-c838283ecdfb9490425bb071b7c22e542de46c7c\n-5e3f5e4f25b65b583d3bfefac9e1148035781089\n-f7388e93d3dd91a90239aedac4ec58404f103a2e\n-0a2f46b0158b6fc7244a585913b0925c0acf707f\n-dd561667cb7ccbbfed3134b05a565971ef6f5873\n-6f01dcf63873a5e42798635ab4026c9a5f9fa213\n-70fec9e36bcd1a3d93df019be084aaf89cecd7d7\n-f9b74ef3fc74fd7d2aa94560820341f03cda8e12\n-998c3046fab2b52bc9f141cfb588a18c05506a86\n-89cc4f905e30b913ca20e4192d538cc5cbe2c38d\n-87d90efd69b64f769116956a5db89e536e9e3714\n-5aeaa9ccd1568a77e075dbe2bd2435bd60c87c91\n-bfb270acfa30713dc8c968bb9ee40cf5a2360359\n-1b8c88451b0554502435d3883c528ad0aad1b09b\n-57ee73990f1ce29916adfd99f93eae1ccea1a43b\n-808c84f89d0edcef9ddaab0b849a382719f6ec9e\n-14b860bf64020451ced823b859da8cb912278ab9\n-c63364610f4a041df1c1bd81d01b1f6856160749\n-92eadc395071876d77f3babddc056b4325bdbabc\n-e93fff1463ae906fc986bf98c3b118c82f171546\n-9ccafb1d7bdd172a9b963444072a844da379c4f7\n-b4a509a3f817121c3df98ddfd96b2769e18a3e5a\n-dbc4ae03963014ab4b7957d62ba59dbd8f938c33\n-8ddf60db7ad636b6a31b590251c671ded635fa1d\n-f199b8a33d9443a258a1f49a1a29674cd9ee9a20\n-e542728cde676f218c552d841d0af29b92f9800b\n-763231051596b8e3455b839911ad6a3a1f1c3c74\n-ff4cd6075b12fb32b9a906deea3ed033e3f9560a\n-9c3c9cdae3e20b5bdea91a0631edac5116bbc89f\n-93d20a734d2ee873832bed8ca5c05cf8e539c53c\n-ef8340d25f7c5dd5682bdecea97ce84cfce1493c\n-69c7ecef405d168f658a9cc7996da84c17f61e66\n-4ce2f3d0d33346e9f0e96851689ee6550b2a72e3\n-44e1fd926cfb0df0fbd8c41de8cd65ed8d5d6e18\n-d6d2c8503c4039b682196d83a67dc28359c10c5c\n-ae233c4ec3d14a97c6195059f52873cdba2b4755\n-0f399a9ff227896265cafab9b2e9fab6cdb9b5b9\n-f4ed44ab4a8f9a87ba678d5fd1449fbf636103dc\n-7fcd61b2613c211bb042a82a889655178be6a212\n-42973f834445d7735738bdba8847812ba3c34d95\n-8df48b36ed3201d938b9974ecbee455d7dc2fb84\n-96ac26e56627f0c24213fcd3a1cce9fc95f1f661\n-cce94c518a46b7b0006f984bbe4d69e8749182d2\n-801dd40666d1e6009920ad3ff755c7bb993b2a62\n-ce829855cfca103dde55661fa1524e66b139d063\n-b148803b181e30213e8a7f3bd89c8239e9dcb866\n-c377feaad87f8109f85da6caf62602b30c20effc\n-b37cab65c63e051ebc5b491da9bd687581df94df\n-16e41844e7d6c5876d2caaeef6010656950c6ec5\n-ee50c9e48786dea0d9df2e45805c25565c100fe3\n-11dacc6154c42bc6fe3ba94c1823f8a46e4fe81a\n-791a0e6ddade27d1b69f4861a6640de60b9553cf\n-638e6c59da4fad987c437592174b188510193b2e\n-52f8877525d5238f3440e73710507be889d14127\n-2a56baf395bf11835d784c4f8634f4525deed6a1\n-bc561b4b7d6a3f71649d37d5eb9047c29efa2b13\n-31809d6f8514c4a8d5677e947e3f1ebb0db210b9\n-a31e9ad4f027955d43c04a05517244647e250161\n-777519bd96f68c18150a0f5942f8f97a91937f5e\n-4eb1f39d421024d9666cec61deaf96715ffae4c6\n-50fae68d416b4b8ec4ca192923dfd5ae9ea42773\n-ce665863b137ac4a7470cf006a92aa7694faca71\n-81f8c0378b2ab5ea0d7b65635cb529bd3c69127c\n-108222b9c323a05cc9339368f10ddd0859f62b43\n-28f788e47e58f2b462351d6989348a4e1a241b2b\n-d81dccf191a48a6b59c3747d7b4ccbe3535dde40\n-a90e6d2bffc422ddcdb771c53aac0bceb970a2c4\n-91e49c51f1aecc9e1d75457f4920d52a4b0a133c\n-60dd9cc470584960431de425e2a9ffbed0e8034a\n-ede386c2193fc31351e193b3a8cf30030d6be62c\n-a084767b40c0d3ba8fa8f8d60f1e8d99a9dc3457\n-3f726c99f819f97f2ab21b94d34c6b3129cd883a\n-77fc469fc78cdd87c29f398d46ac58dbb9ef62c0\n-4ae6d0fbef60ccbecf8f23bb482e201b3678f7a3\n-8858b6ddd3bce9daa08da6e05de3ca863a399c15\n-22e301a3d56dc9e6878380ee92c7d19ca43119d2\n-c484ec6c9b85ca4e331e395c564ae232fd0681dd\n-a46a671e253528e450bd57645c400bf761da07ab\n-655970d9c60ae6850daf452457e14e21047c0e1b\n-b6a48914c50631914192aa11b19205436a9c664d\n-7db65c363a0cc6ca7cdb04de9a973ab70013baad\n-6366941275344dac7e2130b0c972e90117d37ed0\n-4fb2586661471a1572c2df2a5a091011d45eb7c4\n-d7be7b39fa1021ec4518186afe145ee948e12a94\n-85aec87b11ec41295558175c63f1f5a849460fdf\n-aeb31756276034dd506fdf97c8aaade0e7e584f5\n-ac016e17d20253129a0287cee7e1d06b7ef15966\n-bf74d377fb8e20140da6eac1407414928384bcea\n-2c811e08db651a4aed6ea0f7c1972d60de6de8ab\n-e5d26e47c7a482c072a7fe47bb84c56854734184\n-96a63a3e0cefe920819bd42add0041837b1214a1\n-e526ca6284b9e13be1b912b80dd73a34e739b539\n-ecd21357f16106e541e9c2854ead2a906659b938\n-4b5a7ce0c301ad971f383eb60f61bf9b4026efda\n-929fd7276c0f0c30b9416f61a6f5f35d763d81e4\n-fa8a0639f7b0ce04030b72b4d5be4f0aa36fc5cb\n-f1f1605c22a6283bbfd757055fcf2b584a857709\n-0c173a15ca1bf20999f74987988985508c9de463\n-df0793f324e33066cc746c0cb1d053d35733d626\n-2b0179d8a9b75397937126b36114df0dddeab40c\n-bf0a08be281dc42241e7f264c2a20515eb4781bb\n-3895e25a77363ae8b49358fb793f50fa8b271e2d\n-1fc783fc08bc078239537535f174ab8a489772c0\n-1d4805ce04645f3203b0cfd3d66ea710e7433eb4\n-d3b58704d1d325875fc605580c1c02b825c1bbcc\n-ed88e3194c4bc43aeafef929da7b419d03dea1ad\n-dd07f47b79628668e29cc0143b21e790100ee445\n-65cc7aacfbfc7b747926375280a1d839e88d576b\n-080ec5209172ac9605f1434559dbb3c1e012b10a\n-416af3edf5b5ab265acf95568f2bc9eabd3d96de\n-e0a7801223fd573863939e76cb633f1dcc2d22c4\n-4bc853b50fd9127687eb9e4f3b679dd261a4fa96\n-c68a9a69278aa194fed96bd9733d32af3690a11e\n-c38f540298f0e188df5ed68fd56c623b9ac8331b\n-643fa0b22d70e459d7f7ec3d728ae4811dc5158f\n-e053e05c130549f43953f1d70e724dc9ce3e1b85\n-75e898c094eea533d1dfaf141c6afccc3072c49f\n-2805d606bc46bf5589093a1b92d3542c13ce50c2\n-32751807c9c06011eb689cba56b401a6302699c0\n-30853e16d332816752dafcfca92147c7ffef5b54\n-bea5b00cfe95cd37832305c0f93c339a22a7d79d\n-c871f323b418fac27bf834843ca26985010df53f\n-329fc1dce7a1c372c8b10c2f2f8732b2c60daff0\n-1aefc94dd78d6e0c9209cb09fc16f53dedf42108\n-8e5725666b519b61fcdc3141da5c6a57c1959909\n-a4ca0b042365061020627a8c045cddacea3312ec\n-8bd16ee12fc8ef6723e0572c29b979c15b92b4f4\n-87abe20fc118721cc5efdbd94a8462468cd1da2b\n-4b766fcdd4ca16399075d1e081a321b3b05ce516\n-f6241b3e420e19f3f0507cbbc872fe9218916a02\n-7ee523604851af62c0a47c07ee023a8710ef32f7\n-776ba233e939fe41a74c6b2632b93a0679a32c71\n-6a796b2b53fe542e0f340f250f4f20d69efed8d0\n-23d78c4dd01bc74ba35db3e3df95280f6f1b2e22\n-f4b15e2de97c4f8cdbb40bef4c9d0ab2807974d9\n-fff72de5bf8ac7b70208e655f237b80e70e18851\n-170bc2c381f86a523de2fc8b71d62ade66303c0d\n-314ebdfcb38d4b4c977579f787d5e1a20d068c94\n-e9274839bf316b1972d80d28e45759f898edbf86\n-75171f099e82e3527d7c3469b15891bd92227ec2\n-3c5e6c94caf40395e031fbde44a0cca46fdd76ec\n-dc8fc0c73bebbc1c48ac5540026030c9cc00ec23\n-492d22f92919d8d9d59568318c26c1e2ac4890cc\n-80c3a734298e824f9321c4efdd446086a3baad89\n-47535d7c3ec79c5978cdcc03a5351ddbbb22538d\n-1b25b6df0f08f7474228c5b6ed13b58682e1e440\n-c530c15180631cea95e9c292cf7fabde9dca9db3\n-2723bcdce3248417e98e6c43207bef74d34076c1\n-ed22eb4a62bd8d5369aaec87d4cbdc03c9f16368\n-9111df9673beb6d6616d491a5478f09b5f14d040\n-d86bb075bf6d1e78c1e4f3dd38b0ea828ef5ecfe\n-50a1cc0f0aef1514b917a5a3f4476967170b429d\n-6ce733747e160ca699711f2c47e686284ca9aa07\n-b44adf92342ad4f9c343ba29c081a91687932936\n-88799ea1b1c08f4bc1a487c9e3c2effd5e1650ae\n-080d7c700fc3291560d79fc590e05b8e2bad984f\n-12af74b289f8cdc6caf850dc6c802f9936b1e8b3\n-8e4f7e72410df3ba430082c7cf385f26fd75b033\n-8ac80412867118172dc4172494304e19969e9489\n-f2734c2828f69d9cfd535e5eab0592a7674b2b61\n-0b9fb682890b8fe10cec54072b809a5efe57d33d\n-5b029aaedb5fcf7cadd249607dd28eb3f233ab8c\n-79af9fbd8c3c0e54702a9c92b171f134bd4466c8\n-c412fd805ddf3282dc2e1f28e30f51ffcb1f1da2\n-111849345bb5140f86b48e730ceab4bff45fa2e9\n-a0b1e57b20a17177ed5a9a54e4a8aab597a546b4\n-ca209230c8e73745cf8cfc79f500c9c46e103306\n-a230b0588788dbe1ac84622aea169c577b381241\n-dfef6b6af08097f0676a2323085558fbbd3c48c6\n-3192e5278abca7c1f3b4a2a7f77a0ce941c73985\n-7c7ddd9ead99a8b5033a1a5d4698032c9e2b3a92\n-10b930dde8f14e9cb661810e97a33bbf144fc55c\n-9225de2cf652fe2bf6e50636824cdb641546f57d\n-598ef9c44b3ea2cc142c175f077b493f39f5ba22\n-c49355c7170a64bdd7864cc3ba9a64916b67fe7c\n-857d1e171e051b254a617f27b39f6a551054cee2\n-21833f9456f6ad5bc06321ad6d9590f42ce0195c\n-8910b4717e5bb946ee6988f7fe9fd461f53a5935\n-5703dff0939f05c7457cebd6fc61d88ab13afe41\n-8bfa13b15b84cb372950fb7b25a1080173060b6a\n-ac23a7c1f19b3d8c326ffe75c8e13edf285f90fe\n-19be26afe3d04783a92d032b55bf3fb1e2ae63cc\n-f7ec7cfd38b543ba81ac7bed5b77f9a19739460b\n-36afd4db4442c45d4078b1a7ad16a1872b5bee0d\n-88c2ae3ed2bb5d367dd408c9255cd8f1e7a36c7d\n-a13a417cdcfdfd1f1b3bf997bb6ffe6e69b096b9\n-d6064a89ac97dc0d2ce9da3982e1a4e25afaeda8\n-7146d96de3e15a80cafbab2af48ff6f65d8e41bb\n-5628c70f2a44567695e5331fe2293c5b7f35b629\n-7ff4a538a8682cdf02a4bcd6f15499c841001b73\n-aa5fa642b0e7ce2ea55e2298886f212f11a8894e\n-8efd1c820b9a782d8608d54d924658536178295c\n-50a226563cd8d7c0a5e8448e87fede0eb72a8354\n-b860915f8b0dae98e57a254d11575ea41f5c5a79\n-d304fef3746039183f51b3ac8f4774dcf3a64f59\n-53ab12d9318d5d195ccc77028b0e3ae66dc6e1fd\n-668de70be039a4f1ffcf20aeae2a22ee71fc55a8\n-0fea960ca917b73aff853fe88476174c8a313863\n-f89502306dcf6393a2c7b0efbb0fa728fc582137\n-ff58b1c3bdff5e5f687f10f9e40ce495ca49674e\n-0b96abc35f1a9d46a27eeddd7df418d107c29c57\n-b0b57a17306a7e963a4fe463f84e2b150a00a859\n-4105cb6fd964ad13099ca83b1fdf3d35f3961f74\n-23281a4dc3afc42a001346caec4dbb8193f0bb53\n-8daf103fa138f9a184448ebf1c2e03b9dbd96f21\n-02e5308c1b9f3771bbe49bc5036215fa2bd66aa9\n-a65ced1a66575c652baf5084644b8647f531be8c\n-2456a835f0bc7796d9ff71f64837fa6790e2b7cc\n-9ec1330b455c1ab2eb6b89f8a2ab885677d4ae8a\n-0b738075bd43fbd4410e30a51e0498cbfd2b7513\n-98c80e374b84e5a9c2d5c36889a0b1ebed5b814b\n-25720fc394e27a951bcad26095fb5a711bfacb8f\n-4cfd57d2e38207d78722ce8c9274ba8dd700d1cc\n-0fc1c31a878e93d938c67db3f958e82e3c39659f\n-df1ab5b4d67b46b5e9e840b1fbe0ff02520831f9\n-5bc3b6cede8dabdf3f4f27ddb03723cbb7cde51a\n-c2ea1e6561caba3abffce361abc800822b9e0efe\n-caa2f106d704ec3ade63498031dd58d34510bc76\n-dce853ef76ef90c46d84294225088d595467d08c\n-dbc8a8c86ae50059fddb2d6834fa5f0c9bbf9b71\n-0f921e6a0492c4e9f037a9ed91f474885032d68c\n-041331e1da23e4136fd046ed870cdcc177464176\n-e6ba5068f107ac234576e77cedbd748b665369c2\n-76fcd9d5034143a5b041766552670d19f926097d\n-72bf1b3d0962304850a3ef5fe375db4bff1d0a39\n-919db037f1f5cc73cdcaef92dd9cb0e7f5c8dec3\n-c36229b0b2e9d4554053f5c9fc451ac29a493b1f\n-9e4bb312e6958d2baa309ba670e5eed1523c6f47\n-d7ba4a233bd5a6f8fadee681c68a995e23fe36d7\n-98514988a3d3e8b7dbf0463884a5c38f5ed5562d\n-5412c08c3cf13577566064edd04da021c37b7cbe\n-31bcc667863f368157efa1143a78623a5db8f0d1\n-7bd1aa566fb4a4fe194f209085649f2c722b0cff\n-c4522e71c7e1d8ecfd70112e9375b9d00d6733a8\n-e22f409f18881b63a8e747036584a71217f40e6e\n-97ec6e5c9098a1240655cfcab05b6cd5eedb6cd1\n-bc121b0eb19713ec72002b5be03ba5ac35903a17\n-c98f6b3d93a2cc1b49a6db425ea2b661089d0f9e\n-0de7fd36de57a68e543b4c1f184fba192c398c73\n-e662d281b837c25b2b70525aa8fe8af894339823\n-44adf683ad232db8ce0cb89b3e236a1f5944cfb0\n-cb2ed300a89ebf9f0654da869ced665ed8b2abe7\n-0a6d48d9ed60b0b02177059ab116f8f46d2cbed3\n-b42291334651fff46dbfe5947a726f65cb9d7dfe\n-e5364991daecb73aca3bb5ac37f2619d7a89211b\n-4a2b170c075ce703cbdc82519a48016a9ee3f99c\n-924de0bd75a7f75df65d7d15f9d1587a2e794abf\n-1253f8692fc3a11be9430685cd405236a68df6c3\n-2b799ae9e1e0a540f9a5971ddf27d83254668279\n-c9bdf9a75f9fde8cd011e4aa94be4ed4347078a3\n-3d69ecb4edeb80003a1a41442e320898a30dbd9c\n-f08222e882b18c1f279308636e03beceece2dbf1\n-23e03f8d26d7bd03273a5dcbdcfe3905dfb49ffb\n-03dd707dc027fbf6f24120213f8eb66571600374\n-d0754799698de2c032abcb8198ee5d5401063213\n-072116fceb2294b97d1c40f79305f2e3ff71812b\n-e66cc1d58e16bf1650dd6479fed64ecaca8c6098\n-f137753a2dcd8229f89d1d1ac28039364e5850b4\n-61d191fbf953700ba8aeadc9c8cf4c195efbd10c\n-76f3c02fb01a6df98fbd8c16ac21d159d4649d37\n-6013c73b3312e11b447ed387426749014716f820\n-6faffb8a83db3f209a303a4464dbdd597faad5a4\n-cc9e8aca5f950c78dcfeff63c441ba993c1fe12f\n-8ca69a2a88a77eb06149fa049ab1a7e6de38b321\n-2f71490d21796594ca6f55e375558944de9db5a0\n-08cc5fd666456cb476467473ed1880c90c92dedb\n-e31a43c725ebe641d7c219c3886eee18eebf0bb8\n-52b5a8785de760a204b2b0aab19dfaf79c2c3ff0\n-483e8e4f4875a1a621ec9e9df2880d3037d95ed7\n-1e5799c52535a3fc20e885916f1e7ed33ecc7f46\n-a82e5d8220bbc8b5d786bed99b0876f530b9b7cc\n-7fe6c5c993706e8395cdaf7977bee793c06f48f3\n-2a0836f6d5e7c1d7e97bedb0e0ea33dcaf981f77\n-ddc308068d69c6c9aa629ee3c4ce75e1d1cf08b5\n-ec139a5621a9c9f03e1988391a3c7c6c5d849776\n-c01a6c48b982d625fd9f4f69005878781d3d56fa\n-95a983d56dbda457e3bf8766d59bac74c7aa5699\n-760741a00833876976389ed7a6b73f36ee5b4c13\n-6e5e5abba6f8bbbe61c22795df440dfafcfdc378\n-cf2cecb18779ce83de9adebf382dff1c19b12840\n-af9b7a9f2f73b1a2f9728106774dd13e8d1cdd8d\n-115735d547fdeade822f547eb3e8c8f9961a9b07\n-c2c69edf37b5c02aafa01d0407dadbf5ef8751b5\n-a072d1a83787e786d074a4b5871b0b961781f7c6\n-ed2cd59e258f756b2eaed7909a60956ade6ef7ee\n-ae5575ba41c8a782805afb1c08730343cfc22397\n-6ff2c8d29f6b5a5c2ce63f0a16f3bb0dbd049451\n-a80de15113166354cdf208e3d8b6e25f4511a591\n-06bd4f637f15e769f088d9051a5af94bbb0217a3\n-6700cc993cc07fb0f5b8b577ff8c4afcf0b18274\n-37f9a1f627c0995d89b62923e75cd092600894f9\n-8844ef15ded02d5ed86fb95aaf251235fcef2396\n-1b87e5b5b184a0a6c683eda23b36393822b57f03\n-e2bf830bb6c1bfa038c943dd6f5d92a406bd723f\n-423ca302a3ee87000530da3c105f269b8fabece7\n-4e14afe42fdd468d5de11df8cc13defdcb8e83f8\n-3e90fe6534206412ea22beaa445cf20d28fbe718\n-88b77c7da0a672c89e24df37ea6e9085b4e2a05c\n-0ad104190465d8d65c2344bbe10dcf3df025d86c\n-5c7df7022bcd360e6af00b9458b1a3fd54e1cc9a\n-59ad56851a342d2c62f6b38bf15002b23ab439e1"
      },
      {
        "sha": "8f3e4b8063288e451c97ac166dd1cb2853d2463b",
        "filename": "contrib/verify-commits/gpg.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 64,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/verify-commits/gpg.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/verify-commits/gpg.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/gpg.sh?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,64 +0,0 @@\n-#!/bin/sh\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-INPUT=$(cat /dev/stdin)\n-VALID=false\n-REVSIG=false\n-IFS='\n-'\n-if [ \"$BITCOIN_VERIFY_COMMITS_ALLOW_SHA1\" = 1 ]; then\n-\tGPG_RES=\"$(printf '%s\\n' \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null)\"\n-else\n-\t# Note how we've disabled SHA1 with the --weak-digest option, disabling\n-\t# signatures - including selfsigs - that use SHA1. While you might think that\n-\t# collision attacks shouldn't be an issue as they'd be an attack on yourself,\n-\t# in fact because what's being signed is a commit object that's\n-\t# semi-deterministically generated by untrusted input (the pull-req) in theory\n-\t# an attacker could construct a pull-req that results in a commit object that\n-\t# they've created a collision for. Not the most likely attack, but preventing\n-\t# it is pretty easy so we do so as a \"belt-and-suspenders\" measure.\n-\tGPG_RES=\"\"\n-\tfor LINE in \"$(gpg --version)\"; do\n-\t\tcase \"$LINE\" in\n-\t\t\t\"gpg (GnuPG) 1.4.1\"*|\"gpg (GnuPG) 2.0.\"*)\n-\t\t\t\techo \"Please upgrade to at least gpg 2.1.10 to check for weak signatures\" > /dev/stderr\n-\t\t\t\tGPG_RES=\"$(printf '%s\\n' \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null)\"\n-\t\t\t\t;;\n-\t\t\t# We assume if you're running 2.1+, you're probably running 2.1.10+\n-\t\t\t# gpg will fail otherwise\n-\t\t\t# We assume if you're running 1.X, it is either 1.4.1X or 1.4.20+\n-\t\t\t# gpg will fail otherwise\n-\t\tesac\n-\tdone\n-\t[ \"$GPG_RES\" = \"\" ] && GPG_RES=\"$(printf '%s\\n' \"$INPUT\" | gpg --trust-model always --weak-digest sha1 \"$@\" 2>/dev/null)\"\n-fi\n-for LINE in $(echo \"$GPG_RES\"); do\n-\tcase \"$LINE\" in\n-\t\"[GNUPG:] VALIDSIG \"*)\n-\t\twhile read KEY; do\n-\t\t\t[ \"${LINE#?GNUPG:? VALIDSIG * * * * * * * * * }\" = \"$KEY\" ] && VALID=true\n-\t\tdone < ./contrib/verify-commits/trusted-keys\n-\t\t;;\n-\t\"[GNUPG:] REVKEYSIG \"*)\n-\t\t[ \"$BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG\" != 1 ] && exit 1\n-\t\tREVSIG=true\n-\t\tGOODREVSIG=\"[GNUPG:] GOODSIG ${LINE#* * *}\"\n-\t\t;;\n-\t\"[GNUPG:] EXPKEYSIG \"*)\n-\t\t[ \"$BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG\" != 1 ] && exit 1\n-\t\tREVSIG=true\n-\t\tGOODREVSIG=\"[GNUPG:] GOODSIG ${LINE#* * *}\"\n-\t\t;;\n-\tesac\n-done\n-if ! $VALID; then\n-\texit 1\n-fi\n-if $VALID && $REVSIG; then\n-\tprintf '%s\\n' \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null | grep \"\\[GNUPG:\\] \\(NEWSIG\\|SIG_ID\\|VALIDSIG\\)\"\n-\techo \"$GOODREVSIG\"\n-else\n-\tprintf '%s\\n' \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null\n-fi"
      },
      {
        "sha": "c21febb9e9249958fa72ba240e6040a61d927565",
        "filename": "contrib/verify-commits/pre-push-hook.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/verify-commits/pre-push-hook.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/verify-commits/pre-push-hook.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/pre-push-hook.sh?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,20 +0,0 @@\n-#!/bin/bash\n-# Copyright (c) 2014-2015 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-if ! [[ \"$2\" =~ ^(git@)?(www.)?github.com(:|/)bitcoin/bitcoin(.git)?$ ]]; then\n-    exit 0\n-fi\n-\n-while read LINE; do\n-    set -- A $LINE\n-    if [ \"$4\" != \"refs/heads/master\" ]; then\n-        continue\n-    fi\n-    if ! ./contrib/verify-commits/verify-commits.sh $3 > /dev/null 2>&1; then\n-        echo \"ERROR: A commit is not signed, can't push\"\n-        ./contrib/verify-commits/verify-commits.sh\n-        exit 1\n-    fi\n-done < /dev/stdin"
      },
      {
        "sha": "c60f8ab695e9c0fb01feafb1c28074cb98ab122d",
        "filename": "contrib/verify-commits/trusted-git-root",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/verify-commits/trusted-git-root",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/verify-commits/trusted-git-root",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-git-root?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1 +0,0 @@\n-82bcf405f6db1d55b684a1f63a4aabad376cdad7"
      },
      {
        "sha": "5610692616e1dd228252f4abc58f3d1a66cefaa0",
        "filename": "contrib/verify-commits/trusted-keys",
        "status": "removed",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/verify-commits/trusted-keys",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/verify-commits/trusted-keys",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-keys?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,4 +0,0 @@\n-71A3B16735405025D447E8F274810B012346C9A6\n-133EAC179436F14A5CF1B794860FEB804E669320\n-32EE5C4C3FA15CCADB46ABE529D4BCB6416F53EC\n-B8B3F1C0E58C15DB6A81D30C3648A882F4316B9B"
      },
      {
        "sha": "7d41f90ad70ef87caa0ce40bee269ff9d61d9c05",
        "filename": "contrib/verify-commits/trusted-sha512-root-commit",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/verify-commits/trusted-sha512-root-commit",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/verify-commits/trusted-sha512-root-commit",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-sha512-root-commit?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1 +0,0 @@\n-309bf16257b2395ce502017be627186b749ee749"
      },
      {
        "sha": "6415eea4d53fe805367f1cf7ed06d5e7339f55db",
        "filename": "contrib/verify-commits/verify-commits.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 153,
        "changes": 153,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/verify-commits/verify-commits.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/verify-commits/verify-commits.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/verify-commits.sh?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,153 +0,0 @@\n-#!/bin/sh\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-DIR=$(dirname \"$0\")\n-[ \"/${DIR#/}\" != \"$DIR\" ] && DIR=$(dirname \"$(pwd)/$0\")\n-\n-echo \"Using verify-commits data from ${DIR}\"\n-\n-VERIFIED_ROOT=$(cat \"${DIR}/trusted-git-root\")\n-VERIFIED_SHA512_ROOT=$(cat \"${DIR}/trusted-sha512-root-commit\")\n-REVSIG_ALLOWED=$(cat \"${DIR}/allow-revsig-commits\")\n-\n-HAVE_GNU_SHA512=1\n-[ ! -x \"$(which sha512sum)\" ] && HAVE_GNU_SHA512=0\n-\n-if [ x\"$1\" = \"x\" ]; then\n-\tCURRENT_COMMIT=\"HEAD\"\n-else\n-\tCURRENT_COMMIT=\"$1\"\n-fi\n-\n-if [ \"${CURRENT_COMMIT#* }\" != \"$CURRENT_COMMIT\" ]; then\n-\techo \"Commit must not contain spaces?\" > /dev/stderr\n-\texit 1\n-fi\n-\n-VERIFY_TREE=0\n-if [ x\"$2\" = \"x--tree-checks\" ]; then\n-\tVERIFY_TREE=1\n-fi\n-\n-NO_SHA1=1\n-PREV_COMMIT=\"\"\n-INITIAL_COMMIT=\"${CURRENT_COMMIT}\"\n-\n-BRANCH=\"$(git rev-parse --abbrev-ref HEAD)\"\n-\n-while true; do\n-\tif [ \"$CURRENT_COMMIT\" = $VERIFIED_ROOT ]; then\n-\t\techo \"There is a valid path from \\\"$INITIAL_COMMIT\\\" to $VERIFIED_ROOT where all commits are signed!\"\n-\t\texit 0\n-\tfi\n-\n-\tif [ \"$CURRENT_COMMIT\" = $VERIFIED_SHA512_ROOT ]; then\n-\t\tif [ \"$VERIFY_TREE\" = \"1\" ]; then\n-\t\t\techo \"All Tree-SHA512s matched up to $VERIFIED_SHA512_ROOT\" > /dev/stderr\n-\t\tfi\n-\t\tVERIFY_TREE=0\n-\t\tNO_SHA1=0\n-\tfi\n-\n-\tif [ \"$NO_SHA1\" = \"1\" ]; then\n-\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_SHA1=0\n-\telse\n-\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_SHA1=1\n-\tfi\n-\n-\tif [ \"${REVSIG_ALLOWED#*$CURRENT_COMMIT}\" != \"$REVSIG_ALLOWED\" ]; then\n-\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=1\n-\telse\n-\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=0\n-\tfi\n-\n-\tif ! git -c \"gpg.program=${DIR}/gpg.sh\" verify-commit \"$CURRENT_COMMIT\" > /dev/null; then\n-\t\tif [ \"$PREV_COMMIT\" != \"\" ]; then\n-\t\t\techo \"No parent of $PREV_COMMIT was signed with a trusted key!\" > /dev/stderr\n-\t\t\techo \"Parents are:\" > /dev/stderr\n-\t\t\tPARENTS=$(git show -s --format=format:%P $PREV_COMMIT)\n-\t\t\tfor PARENT in $PARENTS; do\n-\t\t\t\tgit show -s $PARENT > /dev/stderr\n-\t\t\tdone\n-\t\telse\n-\t\t\techo \"$CURRENT_COMMIT was not signed with a trusted key!\" > /dev/stderr\n-\t\tfi\n-\t\texit 1\n-\tfi\n-\n-\t# We always verify the top of the tree\n-\tif [ \"$VERIFY_TREE\" = 1 -o \"$PREV_COMMIT\" = \"\" ]; then\n-\t\tIFS_CACHE=\"$IFS\"\n-\t\tIFS='\n-'\n-\t\tfor LINE in $(git ls-tree --full-tree -r \"$CURRENT_COMMIT\"); do\n-\t\t\tcase \"$LINE\" in\n-\t\t\t\t\"12\"*)\n-\t\t\t\t\techo \"Repo contains symlinks\" > /dev/stderr\n-\t\t\t\t\tIFS=\"$IFS_CACHE\"\n-\t\t\t\t\texit 1\n-\t\t\t\t\t;;\n-\t\t\tesac\n-\t\tdone\n-\t\tIFS=\"$IFS_CACHE\"\n-\n-\t\tFILE_HASHES=\"\"\n-\t\tfor FILE in $(git ls-tree --full-tree -r --name-only \"$CURRENT_COMMIT\" | LC_ALL=C sort); do\n-\t\t\tif [ \"$HAVE_GNU_SHA512\" = 1 ]; then\n-\t\t\t\tHASH=$(git cat-file blob \"$CURRENT_COMMIT\":\"$FILE\" | sha512sum | { read FIRST _; echo $FIRST; } )\n-\t\t\telse\n-\t\t\t\tHASH=$(git cat-file blob \"$CURRENT_COMMIT\":\"$FILE\" | shasum -a 512 | { read FIRST _; echo $FIRST; } )\n-\t\t\tfi\n-\t\t\t[ \"$FILE_HASHES\" != \"\" ] && FILE_HASHES=\"$FILE_HASHES\"'\n-'\n-\t\t\tFILE_HASHES=\"$FILE_HASHES$HASH  $FILE\"\n-\t\tdone\n-\n-\t\tif [ \"$HAVE_GNU_SHA512\" = 1 ]; then\n-\t\t\tTREE_HASH=\"$(echo \"$FILE_HASHES\" | sha512sum)\"\n-\t\telse\n-\t\t\tTREE_HASH=\"$(echo \"$FILE_HASHES\" | shasum -a 512)\"\n-\t\tfi\n-\t\tHASH_MATCHES=0\n-\t\tMSG=\"$(git show -s --format=format:%B \"$CURRENT_COMMIT\" | tail -n1)\"\n-\n-\t\tcase \"$MSG  -\" in\n-\t\t\t\"Tree-SHA512: $TREE_HASH\")\n-\t\t\t\tHASH_MATCHES=1;;\n-\t\tesac\n-\n-\t\tif [ \"$HASH_MATCHES\" = \"0\" ]; then\n-\t\t\techo \"Tree-SHA512 did not match for commit $CURRENT_COMMIT\" > /dev/stderr\n-\t\t\texit 1\n-\t\tfi\n-\tfi\n-\n-\tPARENTS=$(git show -s --format=format:%P \"$CURRENT_COMMIT\")\n-\tPARENT1=${PARENTS%% *}\n-\tPARENT2=\"\"\n-\tif [ \"x$PARENT1\" != \"x$PARENTS\" ]; then\n-\t\tPARENTX=${PARENTS#* }\n-\t\tPARENT2=${PARENTX%% *}\n-\t\tif [ \"x$PARENT2\" != \"x$PARENTX\" ]; then\n-\t\t\techo \"Commit $CURRENT_COMMIT is an octopus merge\" > /dev/stderr\n-\t\t\texit 1\n-\t\tfi\n-\tfi\n-\tif [ \"x$PARENT2\" != \"x\" ]; then\n-\t\tCURRENT_TREE=\"$(git show --format=\"%T\" \"$CURRENT_COMMIT\")\"\n-\t\tgit checkout --force --quiet \"$PARENT1\"\n-\t\tgit merge --no-ff --quiet \"$PARENT2\" >/dev/null\n-\t\tRECREATED_TREE=\"$(git show --format=\"%T\" HEAD)\"\n-\t\tif [ \"$CURRENT_TREE\" != \"$RECREATED_TREE\" ]; then\n-\t\t\techo \"Merge commit $CURRENT_COMMIT is not clean\" > /dev/stderr\n-\t\t\tgit diff \"$CURRENT_COMMIT\"\n-\t\t\tgit checkout --force --quiet \"$BRANCH\"\n-\t\t\texit 1\n-\t\tfi\n-\t\tgit checkout --force --quiet \"$BRANCH\"\n-\tfi\n-\tPREV_COMMIT=\"$CURRENT_COMMIT\"\n-\tCURRENT_COMMIT=\"$PARENT1\"\n-done"
      },
      {
        "sha": "3ffe0a2f289556d40fab4f5ed82ddefaab645ea9",
        "filename": "contrib/verifybinaries/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 41,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/verifybinaries/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/verifybinaries/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/README.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,41 +0,0 @@\n-### Verify Binaries\n-\n-#### Preparation:\n-\n-Make sure you obtain the proper release signing key and verify the fingerprint with several independent sources.\n-\n-```sh\n-$ gpg --fingerprint \"Bitcoin Core binary release signing key\"\n-pub   4096R/36C2E964 2015-06-24 [expires: 2017-02-13]\n-      Key fingerprint = 01EA 5486 DE18 A882 D4C2  6845 90C8 019E 36C2 E964\n-uid                  Wladimir J. van der Laan (Bitcoin Core binary release signing key) <laanwj@gmail.com>\n-```\n-\n-#### Usage:\n-\n-This script attempts to download the signature file `SHA256SUMS.asc` from https://bitcoin.org.\n-\n-It first checks if the signature passes, and then downloads the files specified in the file, and checks if the hashes of these files match those that are specified in the signature file.\n-\n-The script returns 0 if everything passes the checks. It returns 1 if either the signature check or the hash check doesn't pass. If an error occurs the return value is 2.\n-\n-\n-```sh\n-./verify.sh bitcoin-core-0.11.2\n-./verify.sh bitcoin-core-0.12.0\n-./verify.sh bitcoin-core-0.13.0-rc3\n-```\n-\n-If you only want to download the binaries of certain platform, add the corresponding suffix, e.g.:\n-\n-```sh\n-./verify.sh bitcoin-core-0.11.2-osx\n-./verify.sh 0.12.0-linux\n-./verify.sh bitcoin-core-0.13.0-rc3-win64\n-```\n-\n-If you do not want to keep the downloaded binaries, specify anything as the second parameter.\n-\n-```sh\n-./verify.sh bitcoin-core-0.13.0 delete\n-```"
      },
      {
        "sha": "e0266bf08afb64401212a8f553a386a456e81adb",
        "filename": "contrib/verifybinaries/verify.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 177,
        "changes": 177,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/verifybinaries/verify.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/verifybinaries/verify.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/verify.sh?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,177 +0,0 @@\n-#!/bin/bash\n-# Copyright (c) 2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-###   This script attempts to download the signature file SHA256SUMS.asc from\n-###   bitcoincore.org and bitcoin.org and compares them.\n-###   It first checks if the signature passes, and then downloads the files specified in\n-###   the file, and checks if the hashes of these files match those that are specified\n-###   in the signature file.\n-###   The script returns 0 if everything passes the checks. It returns 1 if either the\n-###   signature check or the hash check doesn't pass. If an error occurs the return value is 2\n-\n-function clean_up {\n-   for file in $*\n-   do\n-      rm \"$file\" 2> /dev/null\n-   done\n-}\n-\n-WORKINGDIR=\"/tmp/bitcoin_verify_binaries\"\n-TMPFILE=\"hashes.tmp\"\n-\n-SIGNATUREFILENAME=\"SHA256SUMS.asc\"\n-RCSUBDIR=\"test\"\n-HOST1=\"https://bitcoincore.org\"\n-HOST2=\"https://bitcoin.org\"\n-BASEDIR=\"/bin/\"\n-VERSIONPREFIX=\"bitcoin-core-\"\n-RCVERSIONSTRING=\"rc\"\n-\n-if [ ! -d \"$WORKINGDIR\" ]; then\n-   mkdir \"$WORKINGDIR\"\n-fi\n-\n-cd \"$WORKINGDIR\" || exit 1\n-\n-#test if a version number has been passed as an argument\n-if [ -n \"$1\" ]; then\n-   #let's also check if the version number includes the prefix 'bitcoin-',\n-   #  and add this prefix if it doesn't\n-   if [[ $1 == \"$VERSIONPREFIX\"* ]]; then\n-      VERSION=\"$1\"\n-   else\n-      VERSION=\"$VERSIONPREFIX$1\"\n-   fi\n-\n-   STRIPPEDLAST=\"${VERSION%-*}\"\n-\n-   #now let's see if the version string contains \"rc\" or a platform name (e.g. \"osx\")\n-   if [[ \"$STRIPPEDLAST-\" == \"$VERSIONPREFIX\" ]]; then\n-      BASEDIR=\"$BASEDIR$VERSION/\"\n-   else\n-      # let's examine the last part to see if it's rc and/or platform name\n-      STRIPPEDNEXTTOLAST=\"${STRIPPEDLAST%-*}\"\n-      if [[ \"$STRIPPEDNEXTTOLAST-\" == \"$VERSIONPREFIX\" ]]; then\n-\n-         LASTSUFFIX=\"${VERSION##*-}\"\n-         VERSION=\"$STRIPPEDLAST\"\n-\n-         if [[ $LASTSUFFIX == *\"$RCVERSIONSTRING\"* ]]; then\n-            RCVERSION=\"$LASTSUFFIX\"\n-         else\n-            PLATFORM=\"$LASTSUFFIX\"\n-         fi\n-\n-      else\n-         RCVERSION=\"${STRIPPEDLAST##*-}\"\n-         PLATFORM=\"${VERSION##*-}\"\n-\n-         VERSION=\"$STRIPPEDNEXTTOLAST\"\n-      fi\n-\n-      BASEDIR=\"$BASEDIR$VERSION/\"\n-      if [[ $RCVERSION == *\"$RCVERSIONSTRING\"* ]]; then\n-         BASEDIR=\"$BASEDIR$RCSUBDIR.$RCVERSION/\"\n-      fi\n-   fi\n-else\n-   echo \"Error: need to specify a version on the command line\"\n-   exit 2\n-fi\n-\n-#first we fetch the file containing the signature\n-WGETOUT=$(wget -N \"$HOST1$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n-\n-#and then see if wget completed successfully\n-if [ $? -ne 0 ]; then\n-   echo \"Error: couldn't fetch signature file. Have you specified the version number in the following format?\"\n-   echo \"[$VERSIONPREFIX]<version>-[$RCVERSIONSTRING[0-9]] (example: ${VERSIONPREFIX}0.10.4-${RCVERSIONSTRING}1)\"\n-   echo \"wget output:\"\n-   echo \"$WGETOUT\"|sed 's/^/\\t/g'\n-   exit 2\n-fi\n-\n-WGETOUT=$(wget -N -O \"$SIGNATUREFILENAME.2\" \"$HOST2$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n-if [ $? -ne 0 ]; then\n-   echo \"bitcoin.org failed to provide signature file, but bitcoincore.org did?\"\n-   echo \"wget output:\"\n-   echo \"$WGETOUT\"|sed 's/^/\\t/g'\n-   clean_up $SIGNATUREFILENAME\n-   exit 3\n-fi\n-\n-SIGFILEDIFFS=\"$(diff $SIGNATUREFILENAME $SIGNATUREFILENAME.2)\"\n-if [ \"$SIGFILEDIFFS\" != \"\" ]; then\n-   echo \"bitcoin.org and bitcoincore.org signature files were not equal?\"\n-   clean_up $SIGNATUREFILENAME $SIGNATUREFILENAME.2\n-   exit 4\n-fi\n-\n-#then we check it\n-GPGOUT=$(gpg --yes --decrypt --output \"$TMPFILE\" \"$SIGNATUREFILENAME\" 2>&1)\n-\n-#return value 0: good signature\n-#return value 1: bad signature\n-#return value 2: gpg error\n-\n-RET=\"$?\"\n-if [ $RET -ne 0 ]; then\n-   if [ $RET -eq 1 ]; then\n-      #and notify the user if it's bad\n-      echo \"Bad signature.\"\n-   elif [ $RET -eq 2 ]; then\n-      #or if a gpg error has occurred\n-      echo \"gpg error. Do you have the Bitcoin Core binary release signing key installed?\"\n-   fi\n-\n-   echo \"gpg output:\"\n-   echo \"$GPGOUT\"|sed 's/^/\\t/g'\n-   clean_up $SIGNATUREFILENAME $SIGNATUREFILENAME.2 $TMPFILE\n-   exit \"$RET\"\n-fi\n-\n-if [ -n \"$PLATFORM\" ]; then\n-   grep $PLATFORM $TMPFILE > \"$TMPFILE-plat\"\n-   TMPFILESIZE=$(stat -c%s \"$TMPFILE-plat\")\n-   if [ $TMPFILESIZE -eq 0 ]; then\n-      echo \"error: no files matched the platform specified\" && exit 3\n-   fi\n-   mv \"$TMPFILE-plat\" $TMPFILE\n-fi\n-\n-#here we extract the filenames from the signature file\n-FILES=$(awk '{print $2}' \"$TMPFILE\")\n-\n-#and download these one by one\n-for file in $FILES\n-do\n-   echo \"Downloading $file\"\n-   wget --quiet -N \"$HOST1$BASEDIR$file\"\n-done\n-\n-#check hashes\n-DIFF=$(diff <(sha256sum $FILES) \"$TMPFILE\")\n-\n-if [ $? -eq 1 ]; then\n-   echo \"Hashes don't match.\"\n-   echo \"Offending files:\"\n-   echo \"$DIFF\"|grep \"^<\"|awk '{print \"\\t\"$3}'\n-   exit 1\n-elif [ $? -gt 1 ]; then\n-   echo \"Error executing 'diff'\"\n-   exit 2\n-fi\n-\n-if [ -n \"$2\" ]; then\n-   echo \"Clean up the binaries\"\n-   clean_up $FILES $SIGNATUREFILENAME $SIGNATUREFILENAME.2 $TMPFILE\n-else\n-   echo \"Keep the binaries in $WORKINGDIR\"\n-   clean_up $TMPFILE\n-fi\n-\n-echo -e \"Verified hashes of \\n$FILES\"\n-\n-exit 0"
      },
      {
        "sha": "30f3f5b26a14a4bcee3ec79d958fd58d8ed00fff",
        "filename": "contrib/wallettools/walletchangepass.py",
        "status": "added",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/wallettools/walletchangepass.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/wallettools/walletchangepass.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/wallettools/walletchangepass.py?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,5 @@\n+from jsonrpc import ServiceProxy\n+access = ServiceProxy(\"http://127.0.0.1:8332\")\n+pwd = raw_input(\"Enter old wallet passphrase: \")\n+pwd2 = raw_input(\"Enter new wallet passphrase: \")\n+access.walletpassphrasechange(pwd, pwd2)\n\\ No newline at end of file"
      },
      {
        "sha": "f847c6fe61a931d6a3a1cf2c36d8a37080957317",
        "filename": "contrib/wallettools/walletunlock.py",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/wallettools/walletunlock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/contrib/wallettools/walletunlock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/wallettools/walletunlock.py?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "patch": "@@ -0,0 +1,4 @@\n+from jsonrpc import ServiceProxy\n+access = ServiceProxy(\"http://127.0.0.1:8332\")\n+pwd = raw_input(\"Enter wallet passphrase: \")\n+access.walletpassphrase(pwd, 60)\n\\ No newline at end of file"
      },
      {
        "sha": "bf4978d1430149b4ed3572a484c01e6bb40f22c0",
        "filename": "contrib/windeploy/detached-sig-create.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 34,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/windeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/windeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/windeploy/detached-sig-create.sh?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,34 +0,0 @@\n-#!/bin/sh\n-# Copyright (c) 2014-2015 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-if [ -z \"$OSSLSIGNCODE\" ]; then\n-  OSSLSIGNCODE=osslsigncode\n-fi\n-\n-if [ ! -n \"$1\" ]; then\n-  echo \"usage: $0 <osslcodesign args>\"\n-  echo \"example: $0 -key codesign.key\"\n-  exit 1\n-fi\n-\n-OUT=signature-win.tar.gz\n-SRCDIR=unsigned\n-WORKDIR=./.tmp\n-OUTDIR=\"${WORKDIR}/out\"\n-OUTSUBDIR=\"${OUTDIR}/win\"\n-TIMESERVER=http://timestamp.comodoca.com\n-CERTFILE=\"win-codesign.cert\"\n-\n-mkdir -p \"${OUTSUBDIR}\"\n-basename -a `ls -1 \"${SRCDIR}\"/*-unsigned.exe` | while read UNSIGNED; do\n-  echo Signing \"${UNSIGNED}\"\n-  \"${OSSLSIGNCODE}\" sign -certs \"${CERTFILE}\" -t \"${TIMESERVER}\" -in \"${SRCDIR}/${UNSIGNED}\" -out \"${WORKDIR}/${UNSIGNED}\" \"$@\"\n-  \"${OSSLSIGNCODE}\" extract-signature -pem -in \"${WORKDIR}/${UNSIGNED}\" -out \"${OUTSUBDIR}/${UNSIGNED}.pem\" && rm \"${WORKDIR}/${UNSIGNED}\"\n-done\n-\n-rm -f \"${OUT}\"\n-tar -C \"${OUTDIR}\" -czf \"${OUT}\" .\n-rm -rf \"${WORKDIR}\"\n-echo \"Created ${OUT}\""
      },
      {
        "sha": "200b30a3f0d2fd4c537d97baac79f22e81dd8a65",
        "filename": "contrib/windeploy/win-codesign.cert",
        "status": "removed",
        "additions": 0,
        "deletions": 99,
        "changes": 99,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/windeploy/win-codesign.cert",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/windeploy/win-codesign.cert",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/windeploy/win-codesign.cert?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,99 +0,0 @@\n------BEGIN CERTIFICATE-----\n-MIIFTTCCBDWgAwIBAgIRALlW05RLwG2hMQMX5d/o5J8wDQYJKoZIhvcNAQELBQAw\n-fTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G\n-A1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxIzAhBgNV\n-BAMTGkNPTU9ETyBSU0EgQ29kZSBTaWduaW5nIENBMB4XDTE2MDIwMzAwMDAwMFoX\n-DTE5MDMwNTIzNTk1OVowgbUxCzAJBgNVBAYTAlVTMQ4wDAYDVQQRDAU5ODEwNDEL\n-MAkGA1UECAwCV0ExEDAOBgNVBAcMB1NlYXR0bGUxEDAOBgNVBAkMB1N0ZSAzMDAx\n-FzAVBgNVBAkMDjcxIENvbHVtYmlhIFN0MSUwIwYDVQQKDBxUaGUgQml0Y29pbiBG\n-b3VuZGF0aW9uLCBJbmMuMSUwIwYDVQQDDBxUaGUgQml0Y29pbiBGb3VuZGF0aW9u\n-LCBJbmMuMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAw37Vrv9Gbku0\n-+kuV0t89TuyxtAcmT7QE4GcwESKKjmkxfzD9a0qlhqk8GfQ+fw4DHNN+nLKNv7xB\n-bk6aS7J2v2DcXkOjrP99P9jqgTkp7MC04VtG3OqVRGB+gum0pptRovYZUQXIdkY7\n-GJOok/NDagwKiiUe2V2meZ7UctsZNvYeilQdTgKIIhrMB9NowCOhT8ocVL4Ki55/\n-l7hukJn3fueCM3fHTwY2/1gaGsOHoCkFRsD7vokjAVpiY+8rUgvHjb0gxgojiVGd\n-6a6/F5XJwKJacvUyN4Hfc2K5lRMQjTTmo4aWNWIa0iJ3TK9BHpdSLJBqerMPvmnM\n-kkapS+ZTNQIDAQABo4IBjTCCAYkwHwYDVR0jBBgwFoAUKZFg/4pN+uv5pmq4z/nm\n-S71JzhIwHQYDVR0OBBYEFONpQ+cV82URVe+V8G57377KxxexMA4GA1UdDwEB/wQE\n-AwIHgDAMBgNVHRMBAf8EAjAAMBMGA1UdJQQMMAoGCCsGAQUFBwMDMBEGCWCGSAGG\n-+EIBAQQEAwIEEDBGBgNVHSAEPzA9MDsGDCsGAQQBsjEBAgEDAjArMCkGCCsGAQUF\n-BwIBFh1odHRwczovL3NlY3VyZS5jb21vZG8ubmV0L0NQUzBDBgNVHR8EPDA6MDig\n-NqA0hjJodHRwOi8vY3JsLmNvbW9kb2NhLmNvbS9DT01PRE9SU0FDb2RlU2lnbmlu\n-Z0NBLmNybDB0BggrBgEFBQcBAQRoMGYwPgYIKwYBBQUHMAKGMmh0dHA6Ly9jcnQu\n-Y29tb2RvY2EuY29tL0NPTU9ET1JTQUNvZGVTaWduaW5nQ0EuY3J0MCQGCCsGAQUF\n-BzABhhhodHRwOi8vb2NzcC5jb21vZG9jYS5jb20wDQYJKoZIhvcNAQELBQADggEB\n-AGnBSi9K/9rgTAyKFKrfGWSfNOwAghmsnsvpZSQ7QyoGWBFKSgCs/70kErl18oHA\n-g7Y8loQB1yukZmJaCa3OvGud7smn45TCh0TMf4EpP20Wxf4rMQTxwAatasHL3+vi\n-I+Nl5bsRZ09kWjvayqLII5upjS/yq0JfpmyGl5k2C/fIpztq0iOLvqWlXcL4+51r\n-cMUAfX6E6EaZQm//ikp+w2+7MEXTKguOuV3gwsrTy0DsvkZl4YDgx/FA4ImzXopv\n-d+3KJPLvO+OSBqUD3JPwXHnuJqGAbLBFyyCa/feGUjLlR8cxcNWLWdp4qxtoIUPG\n-3wTsC9YgrglS0F7FKMXlNRY=\n------END CERTIFICATE-----\n------BEGIN CERTIFICATE-----\n-MIIF4DCCA8igAwIBAgIQLnyHzA6TSlL+lP0ct800rzANBgkqhkiG9w0BAQwFADCB\n-hTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G\n-A1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxKzApBgNV\n-BAMTIkNPTU9ETyBSU0EgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTMwNTA5\n-MDAwMDAwWhcNMjgwNTA4MjM1OTU5WjB9MQswCQYDVQQGEwJHQjEbMBkGA1UECBMS\n-R3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHEwdTYWxmb3JkMRowGAYDVQQKExFD\n-T01PRE8gQ0EgTGltaXRlZDEjMCEGA1UEAxMaQ09NT0RPIFJTQSBDb2RlIFNpZ25p\n-bmcgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCmmJBjd5E0f4rR\n-3elnMRHrzB79MR2zuWJXP5O8W+OfHiQyESdrvFGRp8+eniWzX4GoGA8dHiAwDvth\n-e4YJs+P9omidHCydv3Lj5HWg5TUjjsmK7hoMZMfYQqF7tVIDSzqwjiNLS2PgIpQ3\n-e9V5kAoUGFEs5v7BEvAcP2FhCoyi3PbDMKrNKBh1SMF5WgjNu4xVjPfUdpA6M0ZQ\n-c5hc9IVKaw+A3V7Wvf2pL8Al9fl4141fEMJEVTyQPDFGy3CuB6kK46/BAW+QGiPi\n-XzjbxghdR7ODQfAuADcUuRKqeZJSzYcPe9hiKaR+ML0btYxytEjy4+gh+V5MYnmL\n-Agaff9ULAgMBAAGjggFRMIIBTTAfBgNVHSMEGDAWgBS7r34CPfqm8TyEjq3uOJjs\n-2TIy1DAdBgNVHQ4EFgQUKZFg/4pN+uv5pmq4z/nmS71JzhIwDgYDVR0PAQH/BAQD\n-AgGGMBIGA1UdEwEB/wQIMAYBAf8CAQAwEwYDVR0lBAwwCgYIKwYBBQUHAwMwEQYD\n-VR0gBAowCDAGBgRVHSAAMEwGA1UdHwRFMEMwQaA/oD2GO2h0dHA6Ly9jcmwuY29t\n-b2RvY2EuY29tL0NPTU9ET1JTQUNlcnRpZmljYXRpb25BdXRob3JpdHkuY3JsMHEG\n-CCsGAQUFBwEBBGUwYzA7BggrBgEFBQcwAoYvaHR0cDovL2NydC5jb21vZG9jYS5j\n-b20vQ09NT0RPUlNBQWRkVHJ1c3RDQS5jcnQwJAYIKwYBBQUHMAGGGGh0dHA6Ly9v\n-Y3NwLmNvbW9kb2NhLmNvbTANBgkqhkiG9w0BAQwFAAOCAgEAAj8COcPu+Mo7id4M\n-bU2x8U6ST6/COCwEzMVjEasJY6+rotcCP8xvGcM91hoIlP8l2KmIpysQGuCbsQci\n-GlEcOtTh6Qm/5iR0rx57FjFuI+9UUS1SAuJ1CAVM8bdR4VEAxof2bO4QRHZXavHf\n-WGshqknUfDdOvf+2dVRAGDZXZxHNTwLk/vPa/HUX2+y392UJI0kfQ1eD6n4gd2HI\n-TfK7ZU2o94VFB696aSdlkClAi997OlE5jKgfcHmtbUIgos8MbAOMTM1zB5TnWo46\n-BLqioXwfy2M6FafUFRunUkcyqfS/ZEfRqh9TTjIwc8Jvt3iCnVz/RrtrIh2IC/gb\n-qjSm/Iz13X9ljIwxVzHQNuxHoc/Li6jvHBhYxQZ3ykubUa9MCEp6j+KjUuKOjswm\n-5LLY5TjCqO3GgZw1a6lYYUoKl7RLQrZVnb6Z53BtWfhtKgx/GWBfDJqIbDCsUgmQ\n-Fhv/K53b0CDKieoofjKOGd97SDMe12X4rsn4gxSTdn1k0I7OvjV9/3IxTZ+evR5s\n-L6iPDAZQ+4wns3bJ9ObXwzTijIchhmH+v1V04SF3AwpobLvkyanmz1kl63zsRQ55\n-ZmjoIs2475iFTZYRPAmK0H+8KCgT+2rKVI2SXM3CZZgGns5IW9S1N5NGQXwH3c/6\n-Q++6Z2H/fUnguzB9XIDj5hY5S6c=\n------END CERTIFICATE-----\n------BEGIN CERTIFICATE-----\n-MIIF2DCCA8CgAwIBAgIQTKr5yttjb+Af907YWwOGnTANBgkqhkiG9w0BAQwFADCB\n-hTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G\n-A1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxKzApBgNV\n-BAMTIkNPTU9ETyBSU0EgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTAwMTE5\n-MDAwMDAwWhcNMzgwMTE4MjM1OTU5WjCBhTELMAkGA1UEBhMCR0IxGzAZBgNVBAgT\n-EkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEaMBgGA1UEChMR\n-Q09NT0RPIENBIExpbWl0ZWQxKzApBgNVBAMTIkNPTU9ETyBSU0EgQ2VydGlmaWNh\n-dGlvbiBBdXRob3JpdHkwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCR\n-6FSS0gpWsawNJN3Fz0RndJkrN6N9I3AAcbxT38T6KhKPS38QVr2fcHK3YX/JSw8X\n-pz3jsARh7v8Rl8f0hj4K+j5c+ZPmNHrZFGvnnLOFoIJ6dq9xkNfs/Q36nGz637CC\n-9BR++b7Epi9Pf5l/tfxnQ3K9DADWietrLNPtj5gcFKt+5eNu/Nio5JIk2kNrYrhV\n-/erBvGy2i/MOjZrkm2xpmfh4SDBF1a3hDTxFYPwyllEnvGfDyi62a+pGx8cgoLEf\n-Zd5ICLqkTqnyg0Y3hOvozIFIQ2dOciqbXL1MGyiKXCJ7tKuY2e7gUYPDCUZObT6Z\n-+pUX2nwzV0E8jVHtC7ZcryxjGt9XyD+86V3Em69FmeKjWiS0uqlWPc9vqv9JWL7w\n-qP/0uK3pN/u6uPQLOvnoQ0IeidiEyxPx2bvhiWC4jChWrBQdnArncevPDt09qZah\n-SL0896+1DSJMwBGB7FY79tOi4lu3sgQiUpWAk2nojkxl8ZEDLXB0AuqLZxUpaVIC\n-u9ffUGpVRr+goyhhf3DQw6KqLCGqR84onAZFdr+CGCe01a60y1Dma/RMhnEw6abf\n-Fobg2P9A3fvQQoh/ozM6LlweQRGBY84YcWsr7KaKtzFcOmpH4MN5WdYgGq/yapiq\n-crxXStJLnbsQ/LBMQeXtHT1eKJ2czL+zUdqnR+WEUwIDAQABo0IwQDAdBgNVHQ4E\n-FgQUu69+Aj36pvE8hI6t7jiY7NkyMtQwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB\n-/wQFMAMBAf8wDQYJKoZIhvcNAQEMBQADggIBAArx1UaEt65Ru2yyTUEUAJNMnMvl\n-wFTPoCWOAvn9sKIN9SCYPBMtrFaisNZ+EZLpLrqeLppysb0ZRGxhNaKatBYSaVqM\n-4dc+pBroLwP0rmEdEBsqpIt6xf4FpuHA1sj+nq6PK7o9mfjYcwlYRm6mnPTXJ9OV\n-2jeDchzTc+CiR5kDOF3VSXkAKRzH7JsgHAckaVd4sjn8OoSgtZx8jb8uk2Intzna\n-FxiuvTwJaP+EmzzV1gsD41eeFPfR60/IvYcjt7ZJQ3mFXLrrkguhxuhoqEwWsRqZ\n-CuhTLJK7oQkYdQxlqHvLI7cawiiFwxv/0Cti76R7CZGYZ4wUAc1oBmpjIXUDgIiK\n-boHGhfKppC3n9KUkEEeDys30jXlYsQab5xoq2Z0B15R97QNKyvDb6KkBPvVWmcke\n-jkk9u+UJueBPSZI9FoJAzMxZxuY67RIuaTxslbH9qh17f4a+Hg4yRvv7E491f0yL\n-S0Zj/gA0QHDBw7mh3aZw4gSzQbzpgJHqZJx64SIDqZxubw5lT2yHh17zbqD5daWb\n-QOhTsiedSrnAdyGN/4fy3ryM7xfft0kL0fJuMAsaDk527RH89elWsn2/x20Kk4yl\n-0MC2Hb46TpSi125sC8KKfPog88Tk5c0NqMuRkrF8hey1FGlmDoLnzc7ILaZRfyHB\n-NVOFBkpdn627G190\n------END CERTIFICATE-----"
      },
      {
        "sha": "60768dc59a962934d85092c8b67b282ee0db1d6b",
        "filename": "contrib/zmq/zmq_sub.py",
        "status": "removed",
        "additions": 0,
        "deletions": 84,
        "changes": 84,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/zmq/zmq_sub.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/zmq/zmq_sub.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub.py?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,84 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2014-2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-\"\"\"\n-    ZMQ example using python3's asyncio\n-\n-    Bitcoin should be started with the command line arguments:\n-        bitcoind -testnet -daemon \\\n-                -zmqpubrawtx=tcp://127.0.0.1:28332 \\\n-                -zmqpubrawblock=tcp://127.0.0.1:28332 \\\n-                -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n-                -zmqpubhashblock=tcp://127.0.0.1:28332\n-\n-    We use the asyncio library here.  `self.handle()` installs itself as a\n-    future at the end of the function.  Since it never returns with the event\n-    loop having an empty stack of futures, this creates an infinite loop.  An\n-    alternative is to wrap the contents of `handle` inside `while True`.\n-\n-    A blocking example using python 2.7 can be obtained from the git history:\n-    https://github.com/bitcoin/bitcoin/blob/37a7fe9e440b83e2364d5498931253937abe9294/contrib/zmq/zmq_sub.py\n-\"\"\"\n-\n-import binascii\n-import asyncio\n-import zmq\n-import zmq.asyncio\n-import signal\n-import struct\n-import sys\n-\n-if not (sys.version_info.major >= 3 and sys.version_info.minor >= 5):\n-    print(\"This example only works with Python 3.5 and greater\")\n-    sys.exit(1)\n-\n-port = 28332\n-\n-class ZMQHandler():\n-    def __init__(self):\n-        self.loop = asyncio.get_event_loop()\n-        self.zmqContext = zmq.asyncio.Context()\n-\n-        self.zmqSubSocket = self.zmqContext.socket(zmq.SUB)\n-        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"hashblock\")\n-        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"hashtx\")\n-        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"rawblock\")\n-        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"rawtx\")\n-        self.zmqSubSocket.connect(\"tcp://127.0.0.1:%i\" % port)\n-\n-    async def handle(self) :\n-        msg = await self.zmqSubSocket.recv_multipart()\n-        topic = msg[0]\n-        body = msg[1]\n-        sequence = \"Unknown\"\n-        if len(msg[-1]) == 4:\n-          msgSequence = struct.unpack('<I', msg[-1])[-1]\n-          sequence = str(msgSequence)\n-        if topic == b\"hashblock\":\n-            print('- HASH BLOCK ('+sequence+') -')\n-            print(binascii.hexlify(body))\n-        elif topic == b\"hashtx\":\n-            print('- HASH TX  ('+sequence+') -')\n-            print(binascii.hexlify(body))\n-        elif topic == b\"rawblock\":\n-            print('- RAW BLOCK HEADER ('+sequence+') -')\n-            print(binascii.hexlify(body[:80]))\n-        elif topic == b\"rawtx\":\n-            print('- RAW TX ('+sequence+') -')\n-            print(binascii.hexlify(body))\n-        # schedule ourselves to receive the next message\n-        asyncio.ensure_future(self.handle())\n-\n-    def start(self):\n-        self.loop.add_signal_handler(signal.SIGINT, self.stop)\n-        self.loop.create_task(self.handle())\n-        self.loop.run_forever()\n-\n-    def stop(self):\n-        self.loop.stop()\n-        self.zmqContext.destroy()\n-\n-daemon = ZMQHandler()\n-daemon.start()"
      },
      {
        "sha": "0df843c9a3f46c6ae146bc0d9975e79da0370537",
        "filename": "contrib/zmq/zmq_sub3.4.py",
        "status": "removed",
        "additions": 0,
        "deletions": 89,
        "changes": 89,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/zmq/zmq_sub3.4.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/contrib/zmq/zmq_sub3.4.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub3.4.py?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,89 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2014-2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-\"\"\"\n-    ZMQ example using python3's asyncio\n-\n-    Bitcoin should be started with the command line arguments:\n-        bitcoind -testnet -daemon \\\n-                -zmqpubrawtx=tcp://127.0.0.1:28332 \\\n-                -zmqpubrawblock=tcp://127.0.0.1:28332 \\\n-                -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n-                -zmqpubhashblock=tcp://127.0.0.1:28332\n-\n-    We use the asyncio library here.  `self.handle()` installs itself as a\n-    future at the end of the function.  Since it never returns with the event\n-    loop having an empty stack of futures, this creates an infinite loop.  An\n-    alternative is to wrap the contents of `handle` inside `while True`.\n-\n-    The `@asyncio.coroutine` decorator and the `yield from` syntax found here\n-    was introduced in python 3.4 and has been deprecated in favor of the `async`\n-    and `await` keywords respectively.\n-\n-    A blocking example using python 2.7 can be obtained from the git history:\n-    https://github.com/bitcoin/bitcoin/blob/37a7fe9e440b83e2364d5498931253937abe9294/contrib/zmq/zmq_sub.py\n-\"\"\"\n-\n-import binascii\n-import asyncio\n-import zmq\n-import zmq.asyncio\n-import signal\n-import struct\n-import sys\n-\n-if not (sys.version_info.major >= 3 and sys.version_info.minor >= 4):\n-    print(\"This example only works with Python 3.4 and greater\")\n-    sys.exit(1)\n-\n-port = 28332\n-\n-class ZMQHandler():\n-    def __init__(self):\n-        self.loop = asyncio.get_event_loop()\n-        self.zmqContext = zmq.asyncio.Context()\n-\n-        self.zmqSubSocket = self.zmqContext.socket(zmq.SUB)\n-        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"hashblock\")\n-        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"hashtx\")\n-        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"rawblock\")\n-        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"rawtx\")\n-        self.zmqSubSocket.connect(\"tcp://127.0.0.1:%i\" % port)\n-\n-    @asyncio.coroutine\n-    def handle(self) :\n-        msg = yield from self.zmqSubSocket.recv_multipart()\n-        topic = msg[0]\n-        body = msg[1]\n-        sequence = \"Unknown\"\n-        if len(msg[-1]) == 4:\n-          msgSequence = struct.unpack('<I', msg[-1])[-1]\n-          sequence = str(msgSequence)\n-        if topic == b\"hashblock\":\n-            print('- HASH BLOCK ('+sequence+') -')\n-            print(binascii.hexlify(body))\n-        elif topic == b\"hashtx\":\n-            print('- HASH TX  ('+sequence+') -')\n-            print(binascii.hexlify(body))\n-        elif topic == b\"rawblock\":\n-            print('- RAW BLOCK HEADER ('+sequence+') -')\n-            print(binascii.hexlify(body[:80]))\n-        elif topic == b\"rawtx\":\n-            print('- RAW TX ('+sequence+') -')\n-            print(binascii.hexlify(body))\n-        # schedule ourselves to receive the next message\n-        asyncio.ensure_future(self.handle())\n-\n-    def start(self):\n-        self.loop.add_signal_handler(signal.SIGINT, self.stop)\n-        self.loop.create_task(self.handle())\n-        self.loop.run_forever()\n-\n-    def stop(self):\n-        self.loop.stop()\n-        self.zmqContext.destroy()\n-\n-daemon = ZMQHandler()\n-daemon.start()"
      },
      {
        "sha": "3cb4b9ac15557906446b56ab75eb2d23ec0187e9",
        "filename": "depends/.gitignore",
        "status": "removed",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/.gitignore?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,10 +0,0 @@\n-SDKs/\n-work/\n-built/\n-sources/\n-config.site\n-x86_64*\n-i686*\n-mips*\n-arm*\n-aarch64*"
      },
      {
        "sha": "8b67bce9d8468a83b6d3d236d3ee1390b9fc8591",
        "filename": "depends/Makefile",
        "status": "removed",
        "additions": 0,
        "deletions": 188,
        "changes": 188,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,188 +0,0 @@\n-.NOTPARALLEL :\n-\n-SOURCES_PATH ?= $(BASEDIR)/sources\n-WORK_PATH = $(BASEDIR)/work\n-BASE_CACHE ?= $(BASEDIR)/built\n-SDK_PATH ?= $(BASEDIR)/SDKs\n-NO_QT ?=\n-NO_WALLET ?=\n-NO_UPNP ?=\n-FALLBACK_DOWNLOAD_PATH ?= https://bitcoincore.org/depends-sources\n-\n-BUILD = $(shell ./config.guess)\n-HOST ?= $(BUILD)\n-PATCHES_PATH = $(BASEDIR)/patches\n-BASEDIR = $(CURDIR)\n-HASH_LENGTH:=11\n-DOWNLOAD_CONNECT_TIMEOUT:=10\n-DOWNLOAD_RETRIES:=3\n-HOST_ID_SALT ?= salt\n-BUILD_ID_SALT ?= salt\n-\n-host:=$(BUILD)\n-ifneq ($(HOST),)\n-host:=$(HOST)\n-endif\n-\n-ifneq ($(DEBUG),)\n-release_type=debug\n-else\n-release_type=release\n-endif\n-\n-base_build_dir=$(WORK_PATH)/build\n-base_staging_dir=$(WORK_PATH)/staging\n-base_download_dir=$(WORK_PATH)/download\n-canonical_host:=$(shell ./config.sub $(HOST))\n-build:=$(shell ./config.sub $(BUILD))\n-\n-build_arch =$(firstword $(subst -, ,$(build)))\n-build_vendor=$(word 2,$(subst -, ,$(build)))\n-full_build_os:=$(subst $(build_arch)-$(build_vendor)-,,$(build))\n-build_os:=$(findstring linux,$(full_build_os))\n-build_os+=$(findstring darwin,$(full_build_os))\n-build_os:=$(strip $(build_os))\n-ifeq ($(build_os),)\n-build_os=$(full_build_os)\n-endif\n-\n-host_arch=$(firstword $(subst -, ,$(canonical_host)))\n-host_vendor=$(word 2,$(subst -, ,$(canonical_host)))\n-full_host_os:=$(subst $(host_arch)-$(host_vendor)-,,$(canonical_host))\n-host_os:=$(findstring linux,$(full_host_os))\n-host_os+=$(findstring darwin,$(full_host_os))\n-host_os+=$(findstring mingw32,$(full_host_os))\n-host_os:=$(strip $(host_os))\n-ifeq ($(host_os),)\n-host_os=$(full_host_os)\n-endif\n-\n-$(host_arch)_$(host_os)_prefix=$(BASEDIR)/$(host)\n-$(host_arch)_$(host_os)_host=$(host)\n-host_prefix=$($(host_arch)_$(host_os)_prefix)\n-build_prefix=$(host_prefix)/native\n-build_host=$(build)\n-\n-AT_$(V):=\n-AT_:=@\n-AT:=$(AT_$(V))\n-\n-all: install\n-\n-include hosts/$(host_os).mk\n-include hosts/default.mk\n-include builders/$(build_os).mk\n-include builders/default.mk\n-include packages/packages.mk\n-\n-build_id_string:=$(BUILD_ID_SALT)\n-build_id_string+=$(shell $(build_CC) --version 2>/dev/null)\n-build_id_string+=$(shell $(build_AR) --version 2>/dev/null)\n-build_id_string+=$(shell $(build_CXX) --version 2>/dev/null)\n-build_id_string+=$(shell $(build_RANLIB) --version 2>/dev/null)\n-build_id_string+=$(shell $(build_STRIP) --version 2>/dev/null)\n-\n-$(host_arch)_$(host_os)_id_string:=$(HOST_ID_SALT)\n-$(host_arch)_$(host_os)_id_string+=$(shell $(host_CC) --version 2>/dev/null)\n-$(host_arch)_$(host_os)_id_string+=$(shell $(host_AR) --version 2>/dev/null)\n-$(host_arch)_$(host_os)_id_string+=$(shell $(host_CXX) --version 2>/dev/null)\n-$(host_arch)_$(host_os)_id_string+=$(shell $(host_RANLIB) --version 2>/dev/null)\n-$(host_arch)_$(host_os)_id_string+=$(shell $(host_STRIP) --version 2>/dev/null)\n-\n-qt_packages_$(NO_QT) = $(qt_packages) $(qt_$(host_os)_packages) $(qt_$(host_arch)_$(host_os)_packages)\n-wallet_packages_$(NO_WALLET) = $(wallet_packages)\n-upnp_packages_$(NO_UPNP) = $(upnp_packages)\n-\n-packages += $($(host_arch)_$(host_os)_packages) $($(host_os)_packages) $(qt_packages_) $(wallet_packages_) $(upnp_packages_)\n-native_packages += $($(host_arch)_$(host_os)_native_packages) $($(host_os)_native_packages)\n-\n-ifneq ($(qt_packages_),)\n-native_packages += $(qt_native_packages)\n-endif\n-\n-all_packages = $(packages) $(native_packages)\n-\n-meta_depends = Makefile funcs.mk builders/default.mk hosts/default.mk hosts/$(host_os).mk builders/$(build_os).mk\n-\n-$(host_arch)_$(host_os)_native_toolchain?=$($(host_os)_native_toolchain)\n-\n-include funcs.mk\n-\n-toolchain_path=$($($(host_arch)_$(host_os)_native_toolchain)_prefixbin)\n-final_build_id_long+=$(shell $(build_SHA256SUM) config.site.in)\n-final_build_id+=$(shell echo -n \"$(final_build_id_long)\" | $(build_SHA256SUM) | cut -c-$(HASH_LENGTH))\n-$(host_prefix)/.stamp_$(final_build_id): $(native_packages) $(packages)\n-\t$(AT)rm -rf $(@D)\n-\t$(AT)mkdir -p $(@D)\n-\t$(AT)echo copying packages: $^\n-\t$(AT)echo to: $(@D)\n-\t$(AT)cd $(@D); $(foreach package,$^, tar xf $($(package)_cached); )\n-\t$(AT)touch $@\n-\n-$(host_prefix)/share/config.site : config.site.in $(host_prefix)/.stamp_$(final_build_id)\n-\t$(AT)@mkdir -p $(@D)\n-\t$(AT)sed -e 's|@HOST@|$(host)|' \\\n-            -e 's|@CC@|$(toolchain_path)$(host_CC)|' \\\n-            -e 's|@CXX@|$(toolchain_path)$(host_CXX)|' \\\n-            -e 's|@AR@|$(toolchain_path)$(host_AR)|' \\\n-            -e 's|@RANLIB@|$(toolchain_path)$(host_RANLIB)|' \\\n-            -e 's|@NM@|$(toolchain_path)$(host_NM)|' \\\n-            -e 's|@STRIP@|$(toolchain_path)$(host_STRIP)|' \\\n-            -e 's|@build_os@|$(build_os)|' \\\n-            -e 's|@host_os@|$(host_os)|' \\\n-            -e 's|@CFLAGS@|$(strip $(host_CFLAGS) $(host_$(release_type)_CFLAGS))|' \\\n-            -e 's|@CXXFLAGS@|$(strip $(host_CXXFLAGS) $(host_$(release_type)_CXXFLAGS))|' \\\n-            -e 's|@CPPFLAGS@|$(strip $(host_CPPFLAGS) $(host_$(release_type)_CPPFLAGS))|' \\\n-            -e 's|@LDFLAGS@|$(strip $(host_LDFLAGS) $(host_$(release_type)_LDFLAGS))|' \\\n-            -e 's|@allow_host_packages@|$(ALLOW_HOST_PACKAGES)|' \\\n-            -e 's|@no_qt@|$(NO_QT)|' \\\n-            -e 's|@no_wallet@|$(NO_WALLET)|' \\\n-            -e 's|@no_upnp@|$(NO_UPNP)|' \\\n-            -e 's|@debug@|$(DEBUG)|' \\\n-            $< > $@\n-\t$(AT)touch $@\n-\n-\n-define check_or_remove_cached\n-  mkdir -p $(BASE_CACHE)/$(host)/$(package) && cd $(BASE_CACHE)/$(host)/$(package); \\\n-  $(build_SHA256SUM) -c $($(package)_cached_checksum) >/dev/null 2>/dev/null || \\\n-  ( rm -f $($(package)_cached_checksum); \\\n-    if test -f \"$($(package)_cached)\"; then echo \"Checksum mismatch for $(package). Forcing rebuild..\"; rm -f $($(package)_cached_checksum) $($(package)_cached); fi )\n-endef\n-\n-define check_or_remove_sources\n-  mkdir -p $($(package)_source_dir); cd $($(package)_source_dir); \\\n-  test -f $($(package)_fetched) && ( $(build_SHA256SUM) -c $($(package)_fetched) >/dev/null 2>/dev/null || \\\n-    ( echo \"Checksum missing or mismatched for $(package) source. Forcing re-download.\"; \\\n-      rm -f $($(package)_all_sources) $($(1)_fetched))) || true\n-endef\n-\n-check-packages:\n-\t@$(foreach package,$(all_packages),$(call check_or_remove_cached,$(package));)\n-check-sources:\n-\t@$(foreach package,$(all_packages),$(call check_or_remove_sources,$(package));)\n-\n-$(host_prefix)/share/config.site: check-packages\n-\n-check-packages: check-sources\n-\n-clean-all: clean\n-\t@rm -rf $(SOURCES_PATH) x86_64* i686* mips* arm* aarch64*\n-\n-clean:\n-\t@rm -rf $(WORK_PATH) $(BASE_CACHE) $(BUILD)\n-\n-install: check-packages $(host_prefix)/share/config.site\n-\n-\n-download-one: check-sources $(all_sources)\n-\n-download-osx:\n-\t@$(MAKE) -s HOST=x86_64-apple-darwin11 download-one\n-download-linux:\n-\t@$(MAKE) -s HOST=x86_64-unknown-linux-gnu download-one\n-download-win:\n-\t@$(MAKE) -s HOST=x86_64-w64-mingw32 download-one\n-download: download-osx download-linux download-win\n-\n-.PHONY: install cached clean clean-all download-one download-osx download-linux download-win download check-packages check-sources"
      },
      {
        "sha": "99eef1952c6d896f6b2215141c3e7b05cbdfa0e9",
        "filename": "depends/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 75,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,75 +0,0 @@\n-### Usage\n-\n-To build dependencies for the current arch+OS:\n-\n-    make\n-\n-To build for another arch/OS:\n-\n-    make HOST=host-platform-triplet\n-\n-For example:\n-\n-    make HOST=x86_64-w64-mingw32 -j4\n-\n-A prefix will be generated that's suitable for plugging into Bitcoin's\n-configure. In the above example, a dir named x86_64-w64-mingw32 will be\n-created. To use it for Bitcoin:\n-\n-    ./configure --prefix=`pwd`/depends/x86_64-w64-mingw32\n-\n-Common `host-platform-triplets` for cross compilation are:\n-\n-- `i686-w64-mingw32` for Win32\n-- `x86_64-w64-mingw32` for Win64\n-- `x86_64-apple-darwin11` for MacOSX\n-- `arm-linux-gnueabihf` for Linux ARM 32 bit\n-- `aarch64-linux-gnu` for Linux ARM 64 bit\n-\n-No other options are needed, the paths are automatically configured.\n-\n-Install the required dependencies: Ubuntu & Debian\n---------------------------------------------------\n-\n-For macOS cross compilation:\n-\n-    sudo apt-get install curl librsvg2-bin libtiff-tools bsdmainutils cmake imagemagick libcap-dev libz-dev libbz2-dev python-setuptools\n-\n-For Win32/Win64 cross compilation:\n-\n-- see [build-windows.md](../doc/build-windows.md#cross-compilation-for-ubuntu-and-windows-subsystem-for-linux)\n-\n-For linux (including i386, ARM) cross compilation:\n-\n-    sudo apt-get install curl g++-aarch64-linux-gnu g++-4.8-aarch64-linux-gnu gcc-4.8-aarch64-linux-gnu binutils-aarch64-linux-gnu g++-arm-linux-gnueabihf g++-4.8-arm-linux-gnueabihf gcc-4.8-arm-linux-gnueabihf binutils-arm-linux-gnueabihf g++-4.8-multilib gcc-4.8-multilib binutils-gold bsdmainutils\n-\n-\n-Dependency Options:\n-The following can be set when running make: make FOO=bar\n-\n-    SOURCES_PATH: downloaded sources will be placed here\n-    BASE_CACHE: built packages will be placed here\n-    SDK_PATH: Path where sdk's can be found (used by OSX)\n-    FALLBACK_DOWNLOAD_PATH: If a source file can't be fetched, try here before giving up\n-    NO_QT: Don't download/build/cache qt and its dependencies\n-    NO_WALLET: Don't download/build/cache libs needed to enable the wallet\n-    NO_UPNP: Don't download/build/cache packages needed for enabling upnp\n-    DEBUG: disable some optimizations and enable more runtime checking\n-    HOST_ID_SALT: Optional salt to use when generating host package ids\n-    BUILD_ID_SALT: Optional salt to use when generating build package ids\n-\n-If some packages are not built, for example `make NO_WALLET=1`, the appropriate\n-options will be passed to bitcoin's configure. In this case, `--disable-wallet`.\n-\n-Additional targets:\n-\n-    download: run 'make download' to fetch all sources without building them\n-    download-osx: run 'make download-osx' to fetch all sources needed for osx builds\n-    download-win: run 'make download-win' to fetch all sources needed for win builds\n-    download-linux: run 'make download-linux' to fetch all sources needed for linux builds\n-\n-### Other documentation\n-\n-- [description.md](description.md): General description of the depends system\n-- [packages.md](packages.md): Steps for adding packages\n-"
      },
      {
        "sha": "27f550ab036aeea9ced0a003d40aceaff5e3dc9c",
        "filename": "depends/builders/darwin.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/builders/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/builders/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/darwin.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,22 +0,0 @@\n-build_darwin_CC: = $(shell xcrun -f clang)\n-build_darwin_CXX: = $(shell xcrun -f clang++)\n-build_darwin_AR: = $(shell xcrun -f ar)\n-build_darwin_RANLIB: = $(shell xcrun -f ranlib)\n-build_darwin_STRIP: = $(shell xcrun -f strip)\n-build_darwin_OTOOL: = $(shell xcrun -f otool)\n-build_darwin_NM: = $(shell xcrun -f nm)\n-build_darwin_INSTALL_NAME_TOOL:=$(shell xcrun -f install_name_tool)\n-build_darwin_SHA256SUM = shasum -a 256\n-build_darwin_DOWNLOAD = curl --location --fail --connect-timeout $(DOWNLOAD_CONNECT_TIMEOUT) --retry $(DOWNLOAD_RETRIES) -o\n-\n-#darwin host on darwin builder. overrides darwin host preferences.\n-darwin_CC=$(shell xcrun -f clang) -mmacosx-version-min=$(OSX_MIN_VERSION)\n-darwin_CXX:=$(shell xcrun -f clang++) -mmacosx-version-min=$(OSX_MIN_VERSION) -stdlib=libc++\n-darwin_AR:=$(shell xcrun -f ar)\n-darwin_RANLIB:=$(shell xcrun -f ranlib)\n-darwin_STRIP:=$(shell xcrun -f strip)\n-darwin_LIBTOOL:=$(shell xcrun -f libtool)\n-darwin_OTOOL:=$(shell xcrun -f otool)\n-darwin_NM:=$(shell xcrun -f nm)\n-darwin_INSTALL_NAME_TOOL:=$(shell xcrun -f install_name_tool)\n-darwin_native_toolchain="
      },
      {
        "sha": "f097db65d603d596c5ceabeadfe32fa3a296a91d",
        "filename": "depends/builders/default.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/builders/default.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/builders/default.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/default.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,20 +0,0 @@\n-default_build_CC = gcc\n-default_build_CXX = g++\n-default_build_AR = ar\n-default_build_RANLIB = ranlib\n-default_build_STRIP = strip\n-default_build_NM = nm\n-default_build_OTOOL = otool\n-default_build_INSTALL_NAME_TOOL = install_name_tool\n-\n-define add_build_tool_func\n-build_$(build_os)_$1 ?= $$(default_build_$1)\n-build_$(build_arch)_$(build_os)_$1 ?= $$(build_$(build_os)_$1)\n-build_$1=$$(build_$(build_arch)_$(build_os)_$1)\n-endef\n-$(foreach var,CC CXX AR RANLIB NM STRIP SHA256SUM DOWNLOAD OTOOL INSTALL_NAME_TOOL,$(eval $(call add_build_tool_func,$(var))))\n-define add_build_flags_func\n-build_$(build_arch)_$(build_os)_$1 += $(build_$(build_os)_$1)\n-build_$1=$$(build_$(build_arch)_$(build_os)_$1)\n-endef\n-$(foreach flags, CFLAGS CXXFLAGS LDFLAGS, $(eval $(call add_build_flags_func,$(flags))))"
      },
      {
        "sha": "b03f42401047adf98bc997a7eece42c2c79a2c2c",
        "filename": "depends/builders/linux.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/builders/linux.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/builders/linux.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/linux.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490",
        "patch": "@@ -1,2 +0,0 @@\n-build_linux_SHA256SUM = sha256sum\n-build_linux_DOWNLOAD = curl --location --fail --connect-timeout $(DOWNLOAD_CONNECT_TIMEOUT) --retry $(DOWNLOAD_RETRIES) -o"
      },
      {
        "sha": "9baaa270bfc7f08d6c6eb85b84f9742318a58d84",
        "filename": "depends/config.guess",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/config.guess",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/config.guess",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.guess?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "8444dc26f27b26dd1cd489f276be2b31e4c1886e",
        "filename": "depends/config.site.in",
        "status": "removed",
        "additions": 0,
        "deletions": 99,
        "changes": 99,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "818892c1c31fdbe97b7a9515662a01da0371e09f",
        "filename": "depends/config.sub",
        "status": "removed",
        "additions": 0,
        "deletions": 1800,
        "changes": 1800,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/config.sub",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/config.sub",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.sub?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "74f9ef3f205ec0e12f6ac9e75f03da81dd7d96e7",
        "filename": "depends/description.md",
        "status": "removed",
        "additions": 0,
        "deletions": 53,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/description.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/description.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/description.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "15e404e42dcf372e8d75f9c3945cf4bad9a21837",
        "filename": "depends/funcs.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 245,
        "changes": 245,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/funcs.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/funcs.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/funcs.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "4e58bec74e395b108c965843d05dd957bf7d5f60",
        "filename": "depends/hosts/darwin.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 17,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/hosts/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/hosts/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/darwin.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "144e5f88b7820ae9d920f1d0e5ad850c44ca67d2",
        "filename": "depends/hosts/default.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 30,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/hosts/default.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/hosts/default.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/default.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "b13a0f1ad714ae19ec7fc4b68d162095b9c62255",
        "filename": "depends/hosts/linux.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 31,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/hosts/linux.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/hosts/linux.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/linux.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "dbfb62fdcf98695d515e56897ee488703e002054",
        "filename": "depends/hosts/mingw32.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/hosts/mingw32.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/hosts/mingw32.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/mingw32.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "7c80362509e989e975e499e0242009e7e098ddf4",
        "filename": "depends/packages.md",
        "status": "removed",
        "additions": 0,
        "deletions": 147,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "6c9876c2c7c7c0d884f49dd00de58b5a12d42a31",
        "filename": "depends/packages/bdb.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 31,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/bdb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/bdb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/bdb.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "bf773ccd147d43228815200029dbddd9920fa09d",
        "filename": "depends/packages/boost.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 41,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/boost.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/boost.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/boost.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "bbe03754099f53b6fe404876af8cbc68722fc216",
        "filename": "depends/packages/dbus.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/dbus.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/dbus.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/dbus.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "acbc60eea3e8ace144fbfd2ea13cd16772eb8134",
        "filename": "depends/packages/expat.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/expat.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/expat.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/expat.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "12695db4b9f781c9ce8aa9a62dab0ae36a0a1ce4",
        "filename": "depends/packages/fontconfig.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/fontconfig.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/fontconfig.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/fontconfig.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "76b025c463189870a0865d7b22a3ede02d839b79",
        "filename": "depends/packages/freetype.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/freetype.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/freetype.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/freetype.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "fc60323b1c918a8229f8ba4b04d63310b4d98ec5",
        "filename": "depends/packages/libICE.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/libICE.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/libICE.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libICE.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "0f9307ca76acb8edb8dc892cefc046627f111654",
        "filename": "depends/packages/libSM.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/libSM.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/libSM.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libSM.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "178d592ee63ff9d0f74de6029b4c7becdc850367",
        "filename": "depends/packages/libX11.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/libX11.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/libX11.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libX11.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "e87df2e4de6760ace30d169b24c83ee0b7cfc7dd",
        "filename": "depends/packages/libXau.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/libXau.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/libXau.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libXau.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "4db836066f96e37cf7834fcf10de4da331b1fbe1",
        "filename": "depends/packages/libXext.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/libXext.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/libXext.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libXext.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "5f622f8e6e80694386fef45917b84b97ee1d2223",
        "filename": "depends/packages/libevent.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 30,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/libevent.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/libevent.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libevent.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "28f2bd6f25343de809c9b2c568bd88b778bb26ec",
        "filename": "depends/packages/libxcb.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 35,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/libxcb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/libxcb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libxcb.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "5ad2b580d2ea9706e8ebcc72d2bc59d6197056ed",
        "filename": "depends/packages/miniupnpc.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/miniupnpc.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/miniupnpc.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/miniupnpc.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "5f247e9bf34877ed5b37ee526e2737654b2b5ef7",
        "filename": "depends/packages/native_biplist.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/native_biplist.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/native_biplist.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_biplist.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "44d238cc4c2a686231c167942c63ae4ec08154c1",
        "filename": "depends/packages/native_cctools.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 65,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/native_cctools.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/native_cctools.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cctools.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "cf694edb30e92ecf7a54a4ccdfba172a3eed44b6",
        "filename": "depends/packages/native_cdrkit.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/native_cdrkit.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/native_cdrkit.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cdrkit.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "116fa25d38197b8add2c601ab7cd7b91c384f268",
        "filename": "depends/packages/native_ds_store.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/native_ds_store.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/native_ds_store.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ds_store.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "a4ffb6046ccc4b50d7bded21207337a718ba70df",
        "filename": "depends/packages/native_libdmg-hfsplus.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/native_libdmg-hfsplus.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/native_libdmg-hfsplus.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_libdmg-hfsplus.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "306c8356567bcef2100ab5c265d3713d793913b4",
        "filename": "depends/packages/native_mac_alias.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/native_mac_alias.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/native_mac_alias.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_mac_alias.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "ce50b366fa74f3fbed838624f9d7ec58396ace02",
        "filename": "depends/packages/native_protobuf.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 25,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/native_protobuf.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/native_protobuf.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_protobuf.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "37f0c28a529ca1930263c1cdf06a64cf5ccaf7d0",
        "filename": "depends/packages/openssl.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 79,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/openssl.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/openssl.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/openssl.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "551c9fa70b6668f526067925ee1eee7de0e382d5",
        "filename": "depends/packages/packages.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "54d3fd924519be2ed612830e24c3baf25629c7fa",
        "filename": "depends/packages/protobuf.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 29,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/protobuf.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/protobuf.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/protobuf.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "44fdf1c2952b6188b25ddfe56d2b4f1c71d1c07f",
        "filename": "depends/packages/qrencode.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/qrencode.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/qrencode.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qrencode.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "745c9e11570e46c9cc56ae7b1e5644f4a4f4f2e4",
        "filename": "depends/packages/qt.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 186,
        "changes": 186,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "0c7c958d62d42e52fa5cb694a026ea9f36ccabfa",
        "filename": "depends/packages/xcb_proto.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/xcb_proto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/xcb_proto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xcb_proto.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "98a11eb4974f8b25bf0f8c75ca1b0f0de4d5d1b9",
        "filename": "depends/packages/xextproto.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/xextproto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/xextproto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xextproto.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "50a90b26850ac87de0c74d2822a6590d9a9b9e8e",
        "filename": "depends/packages/xproto.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/xproto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/xproto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xproto.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "99eefa6d5ea24b2d2f4e5ecf38b07390432a8549",
        "filename": "depends/packages/xtrans.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/xtrans.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/xtrans.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xtrans.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "cde523370f0e4ca32e91b327e8d6b12f5b96dfd5",
        "filename": "depends/packages/zeromq.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 34,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/zeromq.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/zeromq.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zeromq.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "589490800f8bd894538aef4ce19366d0bf78d2ca",
        "filename": "depends/packages/zlib.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/zlib.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/packages/zlib.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zlib.mk?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "8ab0993dc4de142ab7766a500640be92540fe80f",
        "filename": "depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 86,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_cdrkit/cdrkit-deterministic.patch?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "1b43a9eff8fe924961b3962ee0d892ae5553c75c",
        "filename": "depends/patches/qt/fix-cocoahelpers-macos.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 70,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/patches/qt/fix-cocoahelpers-macos.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/patches/qt/fix-cocoahelpers-macos.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix-cocoahelpers-macos.patch?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "ec2bc17d9bd9e032acfec9e34ea6afbbbb7e79f2",
        "filename": "depends/patches/qt/fix-xcb-include-order.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 49,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/patches/qt/fix-xcb-include-order.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/patches/qt/fix-xcb-include-order.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix-xcb-include-order.patch?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "34302a9f2d2eb61117a274a53c8cfe1877c61246",
        "filename": "depends/patches/qt/fix_qt_pkgconfig.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/patches/qt/fix_qt_pkgconfig.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/patches/qt/fix_qt_pkgconfig.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_qt_pkgconfig.patch?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "ca70d30b15e9c4115f1e7c2ac885858244fd123b",
        "filename": "depends/patches/qt/mac-qmake.conf",
        "status": "removed",
        "additions": 0,
        "deletions": 25,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/patches/qt/mac-qmake.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/patches/qt/mac-qmake.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/mac-qmake.conf?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "fb21923c8c36b60c337c20a9e8002fc593f5716d",
        "filename": "depends/patches/qt/mingw-uuidof.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 44,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/patches/qt/mingw-uuidof.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/patches/qt/mingw-uuidof.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/mingw-uuidof.patch?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "c792824179056473fe97fa8f876f36ca950a6c80",
        "filename": "depends/patches/qt/pidlist_absolute.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/patches/qt/pidlist_absolute.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/patches/qt/pidlist_absolute.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/pidlist_absolute.patch?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "aa56f1e1de51acdcef0da8c12ec46d4b4c80a8c7",
        "filename": "depends/patches/qt/qfixed-coretext.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 34,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/patches/qt/qfixed-coretext.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/patches/qt/qfixed-coretext.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/qfixed-coretext.patch?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "a6c508fb8a1e6c14e61c28ac2299fdcf7823d181",
        "filename": "depends/patches/zeromq/0001-fix-build-with-older-mingw64.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 30,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/patches/zeromq/0001-fix-build-with-older-mingw64.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/patches/zeromq/0001-fix-build-with-older-mingw64.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/zeromq/0001-fix-build-with-older-mingw64.patch?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "d220b54f3ecdbae3605be72dbcd0c6b2c5ee85f7",
        "filename": "depends/patches/zeromq/0002-disable-pthread_set_name_np.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 35,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/patches/zeromq/0002-disable-pthread_set_name_np.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/depends/patches/zeromq/0002-disable-pthread_set_name_np.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/zeromq/0002-disable-pthread_set_name_np.patch?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "38498103bb1704a3f13979c1359649a786d50aef",
        "filename": "doc/.gitignore",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/.gitignore?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "08d4f8c37fe649b87413c3cbd89013252c26f259",
        "filename": "doc/Doxyfile",
        "status": "added",
        "additions": 1752,
        "deletions": 0,
        "changes": 1752,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/doc/Doxyfile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/doc/Doxyfile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec"
      },
      {
        "sha": "58c65fb7e25514043bef4caad82a668aabca4914",
        "filename": "doc/Doxyfile.in",
        "status": "removed",
        "additions": 0,
        "deletions": 2460,
        "changes": 2460,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/Doxyfile.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/Doxyfile.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile.in?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "f6e6e80274b0baa2bdf68ebae5d15c5d5a148511",
        "filename": "doc/README",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/doc/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/doc/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec"
      },
      {
        "sha": "ddb239f60c44408bde74dcae901a8e33bdd151f7",
        "filename": "doc/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 83,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "975be4be9ed63d2c203b79ccf5a02ce82ceb8ad0",
        "filename": "doc/README_osx.md",
        "status": "removed",
        "additions": 0,
        "deletions": 97,
        "changes": 97,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/README_osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/README_osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_osx.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "1195b8f32fdf2b74b2fb64fad1202cf27b26dfc8",
        "filename": "doc/README_windows.txt",
        "status": "modified",
        "additions": 13,
        "deletions": 18,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec"
      },
      {
        "sha": "7010edfcd38f2fa1eff002c0f952e6702515195d",
        "filename": "doc/REST-interface.md",
        "status": "removed",
        "additions": 0,
        "deletions": 103,
        "changes": 103,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "2dd930d6a4f97debef6dba19040f471f75250b6a",
        "filename": "doc/assets-attribution.md",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/assets-attribution.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/assets-attribution.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "a682741691762fa770759b51602771b744ea0a67",
        "filename": "doc/assets-attribution.txt",
        "status": "added",
        "additions": 59,
        "deletions": 0,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/doc/assets-attribution.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/doc/assets-attribution.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.txt?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec"
      },
      {
        "sha": "99d36cb22614aa30d947d87cd25fd2bc0d47340f",
        "filename": "doc/benchmarking.md",
        "status": "removed",
        "additions": 0,
        "deletions": 55,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/benchmarking.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/benchmarking.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/benchmarking.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "5b8eabd6dfa36acd13ca320ed545b87258ba18b0",
        "filename": "doc/bips.md",
        "status": "removed",
        "additions": 0,
        "deletions": 38,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "5b41b02e18e57e42ba6ee790ca69e88439ea09c0",
        "filename": "doc/bitcoin_logo_doxygen.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/doc/bitcoin_logo_doxygen.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/doc/bitcoin_logo_doxygen.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bitcoin_logo_doxygen.png?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec"
      },
      {
        "sha": "ab8669cd46b1a00b84ee67330da1ff89801ad42d",
        "filename": "doc/build-msw.txt",
        "status": "added",
        "additions": 84,
        "deletions": 0,
        "changes": 84,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/doc/build-msw.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/doc/build-msw.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-msw.txt?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec"
      },
      {
        "sha": "5bf2d6b59b870fb5678e55936ab2b47300a4682b",
        "filename": "doc/build-netbsd.md",
        "status": "removed",
        "additions": 0,
        "deletions": 49,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/build-netbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/build-netbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-netbsd.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "0817821221d3a5079a9c39d4cbe3b402e27781b5",
        "filename": "doc/build-openbsd.md",
        "status": "removed",
        "additions": 0,
        "deletions": 100,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "e52a770cedb68df51523681742dfaed8108d12fe",
        "filename": "doc/build-osx.md",
        "status": "removed",
        "additions": 0,
        "deletions": 98,
        "changes": 98,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "cbd0c791d7d00b91ac3593012eb950c621c922db",
        "filename": "doc/build-osx.txt",
        "status": "added",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/doc/build-osx.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/doc/build-osx.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.txt?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec"
      },
      {
        "sha": "2d10484a6516c69b7e74a8a174c65453ae8b48af",
        "filename": "doc/build-unix.md",
        "status": "removed",
        "additions": 0,
        "deletions": 335,
        "changes": 335,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "e28869e61919cb436b417c01bf4d22e2a31aa856",
        "filename": "doc/build-unix.txt",
        "status": "added",
        "additions": 153,
        "deletions": 0,
        "changes": 153,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/doc/build-unix.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/doc/build-unix.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.txt?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec"
      },
      {
        "sha": "07bb0c096ab245a92f1592cb5eb4120f4fb354a0",
        "filename": "doc/build-windows.md",
        "status": "removed",
        "additions": 0,
        "deletions": 177,
        "changes": 177,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/build-windows.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/build-windows.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-windows.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "59409859f93e2a09547ab200087254358b648dbb",
        "filename": "doc/coding.txt",
        "status": "added",
        "additions": 99,
        "deletions": 0,
        "changes": 99,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/doc/coding.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/doc/coding.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/coding.txt?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec"
      },
      {
        "sha": "7aa96c4c9b0715a87922893274659c8cc938c6cb",
        "filename": "doc/dependencies.md",
        "status": "removed",
        "additions": 0,
        "deletions": 30,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/dependencies.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/dependencies.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dependencies.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "1f237b750eaeec5ee6816e3b00dec0efa19bba20",
        "filename": "doc/developer-notes.md",
        "status": "removed",
        "additions": 0,
        "deletions": 883,
        "changes": 883,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "55a5c28258c67704fb926e0ad71d448440babdaa",
        "filename": "doc/dnsseed-policy.md",
        "status": "removed",
        "additions": 0,
        "deletions": 54,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/dnsseed-policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/dnsseed-policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dnsseed-policy.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "5657b1e6cbebb7d3424836b56bff78036017e7b2",
        "filename": "doc/files.md",
        "status": "removed",
        "additions": 0,
        "deletions": 36,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "5dedcb51c895e612c6953b99ca3bb532899cb4aa",
        "filename": "doc/fuzzing.md",
        "status": "removed",
        "additions": 0,
        "deletions": 72,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/fuzzing.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/fuzzing.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/fuzzing.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "3a48f4a0b397770e44f51477df854f8298ce1b75",
        "filename": "doc/gitian-building.md",
        "status": "removed",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "ffd13ae1f9e93d017b234a718fb31b66b39b8b06",
        "filename": "doc/init.md",
        "status": "removed",
        "additions": 0,
        "deletions": 129,
        "changes": 129,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/init.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/init.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/init.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "08ff4d6ac1d5cc1135ee6c38d54d17fcfd7252eb",
        "filename": "doc/man/Makefile.am",
        "status": "removed",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/man/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/man/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/Makefile.am?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "168a68cb30f57902b4d2ffdb360548d2c97c35cc",
        "filename": "doc/man/bitcoin-cli.1",
        "status": "removed",
        "additions": 0,
        "deletions": 111,
        "changes": 111,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/man/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/man/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-cli.1?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "a8c55fb0b35e312214b37a85557508baec041518",
        "filename": "doc/man/bitcoin-qt.1",
        "status": "removed",
        "additions": 0,
        "deletions": 581,
        "changes": 581,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/man/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/man/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-qt.1?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "8e6994ac07c8efb98d884c966ac43c6199d24cc5",
        "filename": "doc/man/bitcoin-tx.1",
        "status": "removed",
        "additions": 0,
        "deletions": 127,
        "changes": 127,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/man/bitcoin-tx.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/man/bitcoin-tx.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-tx.1?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "8728965b2a8eb5cea627769647ea361f0fb2c7d1",
        "filename": "doc/man/bitcoind.1",
        "status": "removed",
        "additions": 0,
        "deletions": 560,
        "changes": 560,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/man/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/man/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoind.1?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "02b4e363eed97323db4828538a3779db327acc96",
        "filename": "doc/readme-qt.rst",
        "status": "added",
        "additions": 147,
        "deletions": 0,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/247d308afc25e38f87e856f8b4b9cb746f8e08ec/doc/readme-qt.rst",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/247d308afc25e38f87e856f8b4b9cb746f8e08ec/doc/readme-qt.rst",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/readme-qt.rst?ref=247d308afc25e38f87e856f8b4b9cb746f8e08ec"
      },
      {
        "sha": "697099beabe96ee7eb15032e557fea652fe98901",
        "filename": "doc/reduce-traffic.md",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/reduce-traffic.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/reduce-traffic.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reduce-traffic.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "b493908716c9cbc9f8db932961873b5d0e0a29dc",
        "filename": "doc/release-notes-pr12823.md",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes-pr12823.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes-pr12823.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-pr12823.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "8105eca5c0894a7a73ad2ce7e6c20b8d7f5a0c63",
        "filename": "doc/release-notes-pr12892.md",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes-pr12892.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes-pr12892.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-pr12892.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "3ab4a984dbad651184ba3e9ea19bc9894d4d80b3",
        "filename": "doc/release-notes-pr13033.md",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes-pr13033.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes-pr13033.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-pr13033.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "1554272195163b441b6f60d3a086ee320a6a0570",
        "filename": "doc/release-notes.md",
        "status": "removed",
        "additions": 0,
        "deletions": 141,
        "changes": 141,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "986b8832ec1893a5cc061ea14ac609e7836fbb4f",
        "filename": "doc/release-notes/release-notes-0.10.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 762,
        "changes": 762,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.10.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.10.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.0.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "8f59f1f68c6905f9435b04bd029d3beef2a1f1e8",
        "filename": "doc/release-notes/release-notes-0.10.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 143,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.10.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.10.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.1.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "192ed69d299811b8b662f28905f73479266be820",
        "filename": "doc/release-notes/release-notes-0.10.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 86,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.10.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.10.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.2.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "8a110e562c45376daea69efcb0837dc879ada66a",
        "filename": "doc/release-notes/release-notes-0.10.3.md",
        "status": "removed",
        "additions": 0,
        "deletions": 165,
        "changes": 165,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.10.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.10.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.3.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "38a2c1347d0b8afbfe0c0481cd90b9db06854328",
        "filename": "doc/release-notes/release-notes-0.10.4.md",
        "status": "removed",
        "additions": 0,
        "deletions": 172,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.10.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.10.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.4.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "28e49fb7ea64838f81a72424217e755a62e865c8",
        "filename": "doc/release-notes/release-notes-0.11.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 505,
        "changes": 505,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.11.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.11.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.0.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "799205691ed0f26322923693c2cbf523f0b6751e",
        "filename": "doc/release-notes/release-notes-0.11.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 172,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.11.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.11.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.1.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "2351b80656542c3eee9b27c1f3fae5d3a46179d3",
        "filename": "doc/release-notes/release-notes-0.11.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 217,
        "changes": 217,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.11.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.11.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.2.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "cf74a1797520713b405da0ac47e54fb978e344da",
        "filename": "doc/release-notes/release-notes-0.12.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 894,
        "changes": 894,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.12.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.12.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.12.0.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "610cd481de4855f3d0d05e5d7d089f9c41ee9f06",
        "filename": "doc/release-notes/release-notes-0.12.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 198,
        "changes": 198,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.12.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.12.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.12.1.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "4c3cb97df34cf5e13939e538bd8af50759cc92f6",
        "filename": "doc/release-notes/release-notes-0.13.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 868,
        "changes": 868,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.13.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.13.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.13.0.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "75c2d61be8d3c1b3c85bf9a89df1821b39d42e56",
        "filename": "doc/release-notes/release-notes-0.13.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 410,
        "changes": 410,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.13.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.13.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.13.1.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "45fff5c8bbdc1bb2834e204412164f8b34140bde",
        "filename": "doc/release-notes/release-notes-0.13.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 178,
        "changes": 178,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.13.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.13.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.13.2.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "c41f22979b581f3ba6af58b73b578c8d138fa966",
        "filename": "doc/release-notes/release-notes-0.14.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 873,
        "changes": 873,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.14.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.14.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.14.0.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "ef072afd4d7fb94d29007038e587eacb40358a98",
        "filename": "doc/release-notes/release-notes-0.14.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 143,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.14.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.14.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.14.1.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "0ad554b7738c17a4017b57234fce1132f9a9ed45",
        "filename": "doc/release-notes/release-notes-0.14.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 102,
        "changes": 102,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.14.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.14.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.14.2.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "53ab02cbb0242957ba3697655d848a9461ab7455",
        "filename": "doc/release-notes/release-notes-0.15.0.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 87,
        "changes": 87,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.15.0.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.15.0.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.15.0.1.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "3d000e94d59c98b1dc43fbcf5795627a95457e0c",
        "filename": "doc/release-notes/release-notes-0.15.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 878,
        "changes": 878,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.15.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.15.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.15.0.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "75d2e097142499137a07a65bd35c2a4b91d9cd33",
        "filename": "doc/release-notes/release-notes-0.15.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 277,
        "changes": 277,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.15.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.15.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.15.1.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "8f158b3481cfa033cf05400581cb0319fb8e3c45",
        "filename": "doc/release-notes/release-notes-0.16.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 720,
        "changes": 720,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.16.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.16.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.16.0.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "38715bc75fe27a48c253ee43474f926df7065593",
        "filename": "doc/release-notes/release-notes-0.3.12.md",
        "status": "removed",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.3.12.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.3.12.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.12.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "2b95ff233d4c2810f9a2fd58b63d528ba65bd108",
        "filename": "doc/release-notes/release-notes-0.3.13.md",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.3.13.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.3.13.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.13.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "e73052ed9bf0ba3b9dc59f8218d2eb69ea950cac",
        "filename": "doc/release-notes/release-notes-0.3.14.md",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.3.14.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.3.14.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.14.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      },
      {
        "sha": "b98052ef5934de489f2f527d50abb51be95244d6",
        "filename": "doc/release-notes/release-notes-0.3.15.md",
        "status": "removed",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.3.15.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/487dcbe80c20b53dadcc3e3265786d3d2f1f9490/doc/release-notes/release-notes-0.3.15.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.15.md?ref=487dcbe80c20b53dadcc3e3265786d3d2f1f9490"
      }
    ]
  },
  {
    "sha": "bd7d753283668930efc75ddb17eecc3ed62fe61f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZDdkNzUzMjgzNjY4OTMwZWZjNzVkZGIxN2VlY2MzZWQ2MmZlNjFm",
    "commit": {
      "author": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-04-27T09:08:16Z"
      },
      "committer": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-04-27T09:08:16Z"
      },
      "message": "fix missing `obj` when compile ubuntu",
      "tree": {
        "sha": "a16a9967cfe0f9242fd558e38cc304ab4a6a0a08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a16a9967cfe0f9242fd558e38cc304ab4a6a0a08"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bd7d753283668930efc75ddb17eecc3ed62fe61f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd7d753283668930efc75ddb17eecc3ed62fe61f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bd7d753283668930efc75ddb17eecc3ed62fe61f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd7d753283668930efc75ddb17eecc3ed62fe61f/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/247d308afc25e38f87e856f8b4b9cb746f8e08ec",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/247d308afc25e38f87e856f8b4b9cb746f8e08ec"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1907c01ad76c9e647b4f568b23a48707fc0f77cf",
        "filename": "src/obj/.gitignore",
        "status": "added",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd7d753283668930efc75ddb17eecc3ed62fe61f/src/obj/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd7d753283668930efc75ddb17eecc3ed62fe61f/src/obj/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/obj/.gitignore?ref=bd7d753283668930efc75ddb17eecc3ed62fe61f",
        "patch": "@@ -0,0 +1,3 @@\n+# Created by .ignore support plugin (hsz.mobi)\n+!.gitignore\n+*\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "f09745220eb787e15a1ba13d08d799f07eb5859f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMDk3NDUyMjBlYjc4N2UxNWExYmExM2QwOGQ3OTlmMDdlYjU4NTlm",
    "commit": {
      "author": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-04-27T10:46:32Z"
      },
      "committer": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-04-27T10:46:32Z"
      },
      "message": "change dns seed",
      "tree": {
        "sha": "c785fec0f50bbda6c7df5cfd71947e739b33ac95",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c785fec0f50bbda6c7df5cfd71947e739b33ac95"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f09745220eb787e15a1ba13d08d799f07eb5859f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f09745220eb787e15a1ba13d08d799f07eb5859f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f09745220eb787e15a1ba13d08d799f07eb5859f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f09745220eb787e15a1ba13d08d799f07eb5859f/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "bd7d753283668930efc75ddb17eecc3ed62fe61f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd7d753283668930efc75ddb17eecc3ed62fe61f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bd7d753283668930efc75ddb17eecc3ed62fe61f"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 6,
      "deletions": 2
    },
    "files": [
      {
        "sha": "edfef6b52680395a0346cc83d54a3d954817dd6f",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f09745220eb787e15a1ba13d08d799f07eb5859f/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f09745220eb787e15a1ba13d08d799f07eb5859f/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=f09745220eb787e15a1ba13d08d799f07eb5859f",
        "patch": "@@ -1233,7 +1233,7 @@ void MapPort()\n // The first name is used as information source for addrman.\n // The second name should resolve to a list of seed addresses.\n static const char *strDNSSeed[][2] = {\n-    {\"aithercoin.com\", \"node.aithercoin.com\"},\n+    {\"dnsseed.aithercoin.com\", \"dnsseed.aithercoin.com\"},\n };\n \n void ThreadDNSAddressSeed(void* parg)"
      },
      {
        "sha": "bf941e46ce489fbb5f2862aeae337940d55629f6",
        "filename": "src/obj/.gitignore",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f09745220eb787e15a1ba13d08d799f07eb5859f/src/obj/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f09745220eb787e15a1ba13d08d799f07eb5859f/src/obj/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/obj/.gitignore?ref=f09745220eb787e15a1ba13d08d799f07eb5859f",
        "patch": "@@ -1,3 +1,7 @@\n # Created by .ignore support plugin (hsz.mobi)\n !.gitignore\n-*\n\\ No newline at end of file\n+!zerocoin/.gitignore\n+*.o\n+*.P\n+*.h\n+*.d\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "bc129edb0171efe06aa0adbb4bef348df17510f6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYzEyOWVkYjAxNzFlZmUwNmFhMGFkYmI0YmVmMzQ4ZGYxNzUxMGY2",
    "commit": {
      "author": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-04-30T09:24:58Z"
      },
      "committer": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-04-30T09:24:58Z"
      },
      "message": "guild to build",
      "tree": {
        "sha": "a0cfb6d06044ace3f809d2482371a5b35c7e6624",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a0cfb6d06044ace3f809d2482371a5b35c7e6624"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bc129edb0171efe06aa0adbb4bef348df17510f6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc129edb0171efe06aa0adbb4bef348df17510f6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bc129edb0171efe06aa0adbb4bef348df17510f6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc129edb0171efe06aa0adbb4bef348df17510f6/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "f09745220eb787e15a1ba13d08d799f07eb5859f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f09745220eb787e15a1ba13d08d799f07eb5859f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f09745220eb787e15a1ba13d08d799f07eb5859f"
      }
    ],
    "stats": {
      "total": 160,
      "additions": 134,
      "deletions": 26
    },
    "files": [
      {
        "sha": "7258943165f01965127980c34f3c21078fb14212",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc129edb0171efe06aa0adbb4bef348df17510f6/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc129edb0171efe06aa0adbb4bef348df17510f6/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=bc129edb0171efe06aa0adbb4bef348df17510f6",
        "patch": "@@ -120,3 +120,6 @@ contrib/devtools/split-debug.sh\n Aithercoin-qt.pro.user\n src/aithercoind\n src/main.h.autosave\n+.qmake.stash\n+Makefile.*\n+object_script.*\n\\ No newline at end of file"
      },
      {
        "sha": "e71024821df6a122c83a3675edea623670a1bd98",
        "filename": "doc/README_windows.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc129edb0171efe06aa0adbb4bef348df17510f6/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc129edb0171efe06aa0adbb4bef348df17510f6/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=bc129edb0171efe06aa0adbb4bef348df17510f6",
        "patch": "@@ -1,4 +1,4 @@\n-Aithercoin 0.4.4 BETA\r\n+Aithercoin 0.1.1b\r\n \r\n Copyright (c) 2013 NovaCoin Developers\r\n Copyright (c) 2011-2013 PPCoin Developers\r"
      },
      {
        "sha": "a682741691762fa770759b51602771b744ea0a67",
        "filename": "doc/assets-attribution.md",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc129edb0171efe06aa0adbb4bef348df17510f6/doc/assets-attribution.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc129edb0171efe06aa0adbb4bef348df17510f6/doc/assets-attribution.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.md?ref=bc129edb0171efe06aa0adbb4bef348df17510f6",
        "previous_filename": "doc/assets-attribution.txt"
      },
      {
        "sha": "21d7f73f7632c10858b8b139a8d8fbf54392c586",
        "filename": "doc/build-msw.md",
        "status": "renamed",
        "additions": 40,
        "deletions": 25,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc129edb0171efe06aa0adbb4bef348df17510f6/doc/build-msw.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc129edb0171efe06aa0adbb4bef348df17510f6/doc/build-msw.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-msw.md?ref=bc129edb0171efe06aa0adbb4bef348df17510f6",
        "patch": "@@ -1,4 +1,5 @@\n-Copyright (c) 2009-2012 Bitcoin Developers\n+Copyright (c) 2018 Aithercoin Developers    \n+Copyright (c) 2009-2012 Bitcoin Developers    \n Distributed under the MIT/X11 software license, see the accompanying\n file license.txt or http://www.opensource.org/licenses/mit-license.php.\n This product includes software developed by the OpenSSL Project for use in\n@@ -13,69 +14,83 @@ graphical user interface.\n WINDOWS BUILD NOTES\n ===================\n \n-Compilers Supported\n+Required software\n -------------------\n-TODO: What works?\n-Note: releases are cross-compiled using mingw running on Linux.\n+####Perl 5: \n+http://www.activestate.com/activeperl/downloads    \n+####Python: \n+https://www.python.org/downloads/windows/    \n+####Msys 2: \n+Download from https://www.msys2.org/    \n+Then run on msys2 environment:\n+```\n+pacman -S --needed base-devel mingw-w64-i686-toolchain mingw-w64-x86_64-toolchain git subversion mercurial mingw-w64-i686-cmake mingw-w64-x86_64-cmake\n+```\n \n \n Dependencies\n ------------\n Libraries you need to download separately and build:\n-\n-                default path               download\n-OpenSSL         \\openssl-1.0.1b-mgw        http://www.openssl.org/source/\n-Berkeley DB     \\db-4.8.30.NC-mgw          http://www.oracle.com/technology/software/products/berkeley-db/index.html\n-Boost           \\boost-1.47.0-mgw          http://www.boost.org/users/download/\n-miniupnpc       \\miniupnpc-1.6-mgw         http://miniupnp.tuxfamily.org/files/\n-\n+````\n+                default path                download\n+OpenSSL         C:\\openssl-1.0.2o           http://www.openssl.org/source/\n+Berkeley DB     C:\\db-4.8.30                http://www.oracle.com/technology/software/products/berkeley-db/index.html\n+Boost           C:\\boost_1_67_0             http://www.boost.org/users/download/\n+miniupnpc       C:\\miniupnpc-1.6            http://miniupnp.tuxfamily.org/files/\n+````\n Their licenses:\n OpenSSL        Old BSD license with the problematic advertising requirement\n Berkeley DB    New BSD license with additional requirement that linked software must be free open source\n Boost          MIT-like license\n miniupnpc      New (3-clause) BSD license\n \n Versions used in this release:\n-OpenSSL      1.0.1b\n-Berkeley DB  4.8.30.NC\n-Boost        1.47.0\n+OpenSSL      l-1.0.2o\n+Berkeley DB  4.8.30\n+Boost        1.67.0\n miniupnpc    1.6\n \n \n OpenSSL\n -------\n-MSYS shell:\n+MSYS2 shell:\n un-tar sources with MSYS 'tar xfz' to avoid issue with symlinks (OpenSSL ticket 2377)\n change 'MAKE' env. variable from 'C:\\MinGW32\\bin\\mingw32-make.exe' to '/c/MinGW32/bin/mingw32-make.exe'\n-\n-cd /c/openssl-1.0.1b-mgw\n+```\n+cd /c/openssl-1.0.2o\n ./config\n make\n-\n+```\n Berkeley DB\n -----------\n-MSYS shell:\n+MSYS2 shell:\n+```\n cd /c/db-4.8.30.NC-mgw/build_unix\n sh ../dist/configure --enable-mingw --enable-cxx\n make\n-\n+```\n Boost\n -----\n DOS prompt:\n-downloaded boost jam 3.1.18\n-cd \\boost-1.47.0-mgw\n+```\n+cd C:\\boost_1_67_0\\tools\\build\\src\\engine\n+PATH=C:\\msys32\\mingw32\\bin;%PATH%\n+build.bat gcc\n+copy bin.ntx86\\*.exe ..\\..\\..\\..\n+cd ..\\..\\..\\..\n bjam toolset=gcc --build-type=complete stage\n-\n+```\n MiniUPnPc\n ---------\n UPnP support is optional, make with USE_UPNP= to disable it.\n \n-MSYS shell:\n+MSYS2 shell:\n+```\n cd /c/miniupnpc-1.6-mgw\n make -f Makefile.mingw\n mkdir miniupnpc\n cp *.h miniupnpc/\n-\n+```\n Aithercoin\n -------\n DOS prompt:",
        "previous_filename": "doc/build-msw.txt"
      },
      {
        "sha": "cbd0c791d7d00b91ac3593012eb950c621c922db",
        "filename": "doc/build-osx.md",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc129edb0171efe06aa0adbb4bef348df17510f6/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc129edb0171efe06aa0adbb4bef348df17510f6/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=bc129edb0171efe06aa0adbb4bef348df17510f6",
        "previous_filename": "doc/build-osx.txt"
      },
      {
        "sha": "e28869e61919cb436b417c01bf4d22e2a31aa856",
        "filename": "doc/build-unix.md",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc129edb0171efe06aa0adbb4bef348df17510f6/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc129edb0171efe06aa0adbb4bef348df17510f6/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=bc129edb0171efe06aa0adbb4bef348df17510f6",
        "previous_filename": "doc/build-unix.txt"
      },
      {
        "sha": "02b4e363eed97323db4828538a3779db327acc96",
        "filename": "doc/readme-qt.md",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc129edb0171efe06aa0adbb4bef348df17510f6/doc/readme-qt.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc129edb0171efe06aa0adbb4bef348df17510f6/doc/readme-qt.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/readme-qt.md?ref=bc129edb0171efe06aa0adbb4bef348df17510f6",
        "previous_filename": "doc/readme-qt.rst"
      },
      {
        "sha": "a3b5beadf1ad7c5f82daeee731ee729c297e8a7c",
        "filename": "doc/readme-windows-qt.md",
        "status": "added",
        "additions": 90,
        "deletions": 0,
        "changes": 90,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc129edb0171efe06aa0adbb4bef348df17510f6/doc/readme-windows-qt.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc129edb0171efe06aa0adbb4bef348df17510f6/doc/readme-windows-qt.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/readme-windows-qt.md?ref=bc129edb0171efe06aa0adbb4bef348df17510f6",
        "patch": "@@ -0,0 +1,90 @@\n+## Dependencies  \n+### 7-zip\n+https://www.7-zip.org/\n+### Perl 5: \n+http://www.activestate.com/activeperl/downloads    \n+### Python: \n+https://www.python.org/downloads/windows/    \n+### Mingw: \n+Download from `mingw-get-inst-20120426.exe`\n+Download `mingw32-gcc-4.6.2-release-c,c++,objc,objc++,fortran-sjlj.7z` extract to somewhere, rename it from `mingw` to `mingw32`, then copy it to `C:/MingW`     \n+### QT SDK\n+http://qt-project.org/downloads\n+### OpenSSL\n+```\n+wget https://www.openssl.org/source/openssl-1.0.1j.tar.gz\n+tar xvfz openssl-1.0.1j.tar.gz\n+cd openssl-1.0.1j\n+./Configure no-zlib no-dso no-krb5 no-camellia no-capieng no-cast no-dtls1 no-gost no-gmp no-heartbeats no-idea no-jpake no-md2 no-mdc2 no-rc5 no-rdrand no-rfc3779 no-rsax no-sctp no-seed no-whirlpool mingw\n+make depend\n+make\n+cd ..\n+```\n+### Berkeley DB\n+```\n+wget http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz\n+tar xvfz db-4.8.30.NC.tar.gz\n+cd db-4.8.30.NC/build_unix \n+../dist/configure --enable-mingw --enable-cxx --disable-shared --disable-replication --disable-pthread_api\n+make\n+cd ..\n+```\n+### Boost\n+```\n+wget -O boost_1_55_0.7z http://sourceforge.net/projects/boost/files/boost/1.55.0/boost_1_55_0.7z/download\n+7z x boost_1_55_0.7z\n+```\n+(From windows CMD shell)\n+```\n+cd C:\\deps\\boost_1_55_0\\tools\\build\\src\\engine\n+PATH=C:\\MinGW\\mingw32\\bin;%PATH%\n+bootstrap.bat mingw\n+b2 --build-type=complete --with-chrono --with-filesystem --with-program_options --with-system --with-thread toolset=gcc variant=release link=static threading=multi runtime-link=static stage\n+```\n+### MiniUPNP\n+```\n+wget -O miniupnpc-1.9.tar.gz http://miniupnp.free.fr/files/download.php?file=miniupnpc-1.9.tar.gz\n+tar xvfz miniupnpc-1.9.tar.gz\n+cd miniupnpc-1.9\n+vim Makefile.mingw\n+\tchange: wingenminiupnpcstrings $< $@  \n+\tto: ./wingenminiupnpcstrings.exe $< $@  \n+make -f Makefile.mingw\n+mkdir -p include/miniupnpc\n+cp *.h include/miniupnpc\n+cd ..\n+```\n+\n+### QREncode\n+```\n+wget http://fukuchi.org/works/qrencode/qrencode-3.4.4.tar.gz\n+tar xvzf qrencode-3.4.4.tar.gz\n+cd qrencode-3.4.4\n+./configure --enable-static --enable-shared --without-tools\n+make  \n+cd ..\n+```\n+### Build Binaries\n+```\n+cd $HOME\n+git clone https://github.com/aithercoin/aithercoin.git\n+cd aithercoin\n+qmake aithercoin-qt-windows.pro -r -spec win32-g++ \"CONFIG+=release\" USE_UPNP=0 USE_QRCODE=1 USE_IPV6=1\n+make clean\n+cd src/leveldb\n+make TARGET_OS=OS_WINDOWS_CROSSCOMPILE clean\n+make TARGET_OS=OS_WINDOWS_CROSSCOMPILE libleveldb.a libmemenv.a\n+cd ../..\n+make release\n+```\n+\n+### Create deployment\n+```\n+cd release\n+rm qrc_bitcoin.cpp\n+windeployqt aithercoin-qt.exe\n+cp ../contrib/release/opengl32sw.dll ../contrib/release/qt.conf .\n+cp /usr/src/deps32/boost_1_67_0/stage/lib/libboost*.dll .\n+cp /mingw32/bin/libpcre16-0.dll /mingw32/bin/zlib1.dll /mingw32/bin/libharfbuzz-0.dll /mingw32/bin/libpng16-16.dll /mingw32/bin/libicudt56.dll /mingw32/bin/libfreetype-6.dll .\n+cp /mingw32/bin/libglib-2.0-0.dll /mingw32/bin/libbz2-1.dll /mingw32/bin/libintl-8.dll /mingw32/bin/libpcre-1.dll /mingw32/bin/libiconv-2.dll .\n+```\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "6f49425971071015506c1b8a5bc7b52e6b8c9bb2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZjQ5NDI1OTcxMDcxMDE1NTA2YzFiOGE1YmM3YjUyZTZiOGM5YmIy",
    "commit": {
      "author": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-03T07:54:01Z"
      },
      "committer": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-03T07:54:01Z"
      },
      "message": "fix path in qt",
      "tree": {
        "sha": "0c8e79cfa0d935dfea7f39abb2b740b3f06fa190",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0c8e79cfa0d935dfea7f39abb2b740b3f06fa190"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6f49425971071015506c1b8a5bc7b52e6b8c9bb2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f49425971071015506c1b8a5bc7b52e6b8c9bb2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6f49425971071015506c1b8a5bc7b52e6b8c9bb2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f49425971071015506c1b8a5bc7b52e6b8c9bb2/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "bc129edb0171efe06aa0adbb4bef348df17510f6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc129edb0171efe06aa0adbb4bef348df17510f6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bc129edb0171efe06aa0adbb4bef348df17510f6"
      }
    ],
    "stats": {
      "total": 274,
      "additions": 219,
      "deletions": 55
    },
    "files": [
      {
        "sha": "a4b700cf03d617f46049c0b5ab5acc617bd13249",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f49425971071015506c1b8a5bc7b52e6b8c9bb2/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f49425971071015506c1b8a5bc7b52e6b8c9bb2/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=6f49425971071015506c1b8a5bc7b52e6b8c9bb2",
        "patch": "@@ -79,7 +79,6 @@ src/qt/bitcoin-qt.includes\n \n # Compilation and Qt preprocessor part\n *.qm\n-Makefile\n bitcoin-qt\n Bitcoin-Qt.app\n background.tiff*\n@@ -121,5 +120,6 @@ Aithercoin-qt.pro.user\n src/aithercoind\n src/main.h.autosave\n .qmake.stash\n-Makefile.*\n+Makefile.Debug\n+Makefile.Release\n object_script.*\n\\ No newline at end of file"
      },
      {
        "sha": "34db690898536488e135833733549cd0d816fd0e",
        "filename": "Aithercoin-qt.pro",
        "status": "modified",
        "additions": 21,
        "deletions": 5,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f49425971071015506c1b8a5bc7b52e6b8c9bb2/Aithercoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f49425971071015506c1b8a5bc7b52e6b8c9bb2/Aithercoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Aithercoin-qt.pro?ref=6f49425971071015506c1b8a5bc7b52e6b8c9bb2",
        "patch": "@@ -2,7 +2,8 @@ TEMPLATE = app\n TARGET = aithercoin-qt\n VERSION = 1.0.7\n INCLUDEPATH += src src/json src/qt\n-DEFINES += QT_GUI BOOST_THREAD_USE_LIB BOOST_SPIRIT_THREADSAFE\n+#DEFINES += QT_GUI BOOST_THREAD_USE_LIB BOOST_SPIRIT_THREADSAFE\n+DEFINES += QT_GUI BOOST_THREAD_USE_LIB BOOST_SPIRIT_THREADSAFE BOOST_THREAD_PROVIDES_GENERIC_SHARED_MUTEX_ON_WIN __NO_SYSTEM_INCLUDES\n CONFIG += no_include_pwd\n CONFIG += thread\n \n@@ -24,6 +25,21 @@ greaterThan(QT_MAJOR_VERSION, 4) {\n OBJECTS_DIR = build\n MOC_DIR = build\n UI_DIR = build\n+win32 {\n+#change to suffix\n+    BOOST_LIB_SUFFIX=-mgw46-mt-s-1_55\n+    BOOST_INCLUDE_PATH=C:/deps/boost_1_55_0\n+    BOOST_LIB_PATH=C:/deps/boost_1_55_0/stage/lib\n+    BDB_INCLUDE_PATH=C:/deps/db-4.8.30.NC/build_unix\n+    BDB_LIB_PATH=C:/deps/db-4.8.30.NC/build_unix\n+    OPENSSL_INCLUDE_PATH=C:/deps/openssl-1.0.2o/include\n+    OPENSSL_LIB_PATH=C:/deps/openssl-1.0.2o\n+    #MINIUPNPC_LIB_SUFFIX=-miniupnpc\n+    MINIUPNPC_INCLUDE_PATH=C:/deps/miniupnpc-1.6/include\n+    MINIUPNPC_LIB_PATH=C:/deps/miniupnpc-1.6/include\n+    QRENCODE_INCLUDE_PATH=C:/deps/qrencode-3.4.4\n+    QRENCODE_LIB_PATH=C:/deps/qrencode-3.4.4/.libs\n+}\n \n # use: qmake \"RELEASE=1\"\n contains(RELEASE, 1) {\n@@ -68,7 +84,7 @@ contains(USE_UPNP, -) {\n     }\n     DEFINES += USE_UPNP=$$USE_UPNP STATICLIB\n     INCLUDEPATH += $$MINIUPNPC_INCLUDE_PATH\n-    LIBS += $$join(MINIUPNPC_LIB_PATH,,-L,) -lminiupnpc\n+    LIBS += $$join(MINIUPNPC_LIB_PATH,,-L,)\n     win32:LIBS += -liphlpapi\n }\n \n@@ -362,7 +378,7 @@ isEmpty(BOOST_LIB_SUFFIX) {\n }\n \n isEmpty(BOOST_THREAD_LIB_SUFFIX) {\n-    win32:BOOST_THREAD_LIB_SUFFIX = _win32$$BOOST_LIB_SUFFIX\n+    win32:BOOST_THREAD_LIB_SUFFIX = $$BOOST_LIB_SUFFIX\n     else:BOOST_THREAD_LIB_SUFFIX = $$BOOST_LIB_SUFFIX\n }\n \n@@ -412,8 +428,8 @@ macx:QMAKE_LFLAGS_THREAD += -pthread\n macx:QMAKE_CXXFLAGS_THREAD += -pthread\n \n # Set libraries and includes at end, to use platform-defined defaults if not overridden\n-INCLUDEPATH += $$BOOST_INCLUDE_PATH $$BDB_INCLUDE_PATH $$OPENSSL_INCLUDE_PATH $$QRENCODE_INCLUDE_PATH\n-LIBS += $$join(BOOST_LIB_PATH,,-L,) $$join(BDB_LIB_PATH,,-L,) $$join(OPENSSL_LIB_PATH,,-L,) $$join(QRENCODE_LIB_PATH,,-L,)\n+INCLUDEPATH += $$BOOST_INCLUDE_PATH $$BDB_INCLUDE_PATH $$OPENSSL_INCLUDE_PATH $$QRENCODE_INCLUDE_PATH $$MINIUPNPC_INCLUDE_PATH\n+LIBS += $$join(BOOST_LIB_PATH,,-L,) $$join(BDB_LIB_PATH,,-L,) $$join(OPENSSL_LIB_PATH,,-L,) $$join(QRENCODE_LIB_PATH,,-L,) $$join(MINIUPNPC_INCLUDE_PATH,,-L,)\n LIBS += -lssl -lcrypto -ldb_cxx$$BDB_LIB_SUFFIX\n # -lgdi32 has to happen after -lcrypto (see  #681)\n windows:LIBS += -lws2_32 -lshlwapi -lmswsock -lole32 -loleaut32 -luuid -lgdi32"
      },
      {
        "sha": "2dbbb05ec6228a9c1a914d38930f97052cd79b6e",
        "filename": "Makefile",
        "status": "added",
        "additions": 158,
        "deletions": 0,
        "changes": 158,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f49425971071015506c1b8a5bc7b52e6b8c9bb2/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f49425971071015506c1b8a5bc7b52e6b8c9bb2/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile?ref=6f49425971071015506c1b8a5bc7b52e6b8c9bb2",
        "patch": "@@ -0,0 +1,158 @@\n+#############################################################################\n+# Makefile for building: aithercoin-qt\n+# Generated by qmake (2.01a) (Qt 4.8.5) on: Thu May 3 13:45:44 2018\n+# Project:  Aithercoin-qt.pro\n+# Template: app\n+# Command: c:/Qt/4.8.5-everywhere/bin/qmake.exe -spec c:/Qt/4.8.5-everywhere/mkspecs/win32-g++ CONFIG+=release USE_UPNP=- USE_QRCODE=1 USE_IPV6=1 -o Makefile Aithercoin-qt.pro\n+#############################################################################\n+\n+first: release\n+install: release-install\n+uninstall: release-uninstall\n+MAKEFILE      = Makefile\n+QMAKE         = c:/Qt/4.8.5-everywhere/bin/qmake.exe\n+DEL_FILE      = rm\n+CHK_DIR_EXISTS= test -d\n+MKDIR         = mkdir -p\n+COPY          = cp\n+COPY_FILE     = $(COPY)\n+COPY_DIR      = cp -r\n+INSTALL_FILE  = $(COPY_FILE)\n+INSTALL_PROGRAM = $(COPY_FILE)\n+INSTALL_DIR   = $(COPY_DIR)\n+DEL_FILE      = rm\n+SYMLINK       = \n+DEL_DIR       = rmdir\n+MOVE          = mv\n+CHK_DIR_EXISTS= test -d\n+MKDIR         = mkdir -p\n+SUBTARGETS    =  \\\n+\t\trelease \\\n+\t\tdebug\n+\n+release: $(MAKEFILE).Release FORCE\n+\t$(MAKE) -f $(MAKEFILE).Release\n+release-make_default: $(MAKEFILE).Release FORCE\n+\t$(MAKE) -f $(MAKEFILE).Release \n+release-make_first: $(MAKEFILE).Release FORCE\n+\t$(MAKE) -f $(MAKEFILE).Release first\n+release-all: $(MAKEFILE).Release FORCE\n+\t$(MAKE) -f $(MAKEFILE).Release all\n+release-clean: $(MAKEFILE).Release FORCE\n+\t$(MAKE) -f $(MAKEFILE).Release clean\n+release-distclean: $(MAKEFILE).Release FORCE\n+\t$(MAKE) -f $(MAKEFILE).Release distclean\n+release-install: $(MAKEFILE).Release FORCE\n+\t$(MAKE) -f $(MAKEFILE).Release install\n+release-uninstall: $(MAKEFILE).Release FORCE\n+\t$(MAKE) -f $(MAKEFILE).Release uninstall\n+debug: $(MAKEFILE).Debug FORCE\n+\t$(MAKE) -f $(MAKEFILE).Debug\n+debug-make_default: $(MAKEFILE).Debug FORCE\n+\t$(MAKE) -f $(MAKEFILE).Debug \n+debug-make_first: $(MAKEFILE).Debug FORCE\n+\t$(MAKE) -f $(MAKEFILE).Debug first\n+debug-all: $(MAKEFILE).Debug FORCE\n+\t$(MAKE) -f $(MAKEFILE).Debug all\n+debug-clean: $(MAKEFILE).Debug FORCE\n+\t$(MAKE) -f $(MAKEFILE).Debug clean\n+debug-distclean: $(MAKEFILE).Debug FORCE\n+\t$(MAKE) -f $(MAKEFILE).Debug distclean\n+debug-install: $(MAKEFILE).Debug FORCE\n+\t$(MAKE) -f $(MAKEFILE).Debug install\n+debug-uninstall: $(MAKEFILE).Debug FORCE\n+\t$(MAKE) -f $(MAKEFILE).Debug uninstall\n+\n+Makefile: Aithercoin-qt.pro  c:/Qt/4.8.5-everywhere/mkspecs/win32-g++/qmake.conf c:/Qt/4.8.5-everywhere/mkspecs/features/device_config.prf \\\n+\t\tc:/Qt/4.8.5-everywhere/mkspecs/qconfig.pri \\\n+\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/qt_functions.prf \\\n+\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/qt_config.prf \\\n+\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/exclusive_builds.prf \\\n+\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/default_pre.prf \\\n+\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/win32/default_pre.prf \\\n+\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/release.prf \\\n+\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/debug_and_release.prf \\\n+\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/default_post.prf \\\n+\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/win32/default_post.prf \\\n+\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/win32/thread.prf \\\n+\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/win32/rtti.prf \\\n+\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/win32/exceptions.prf \\\n+\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/win32/stl.prf \\\n+\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/static.prf \\\n+\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/warn_on.prf \\\n+\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/qt.prf \\\n+\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/moc.prf \\\n+\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/win32/windows.prf \\\n+\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/resources.prf \\\n+\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/uic.prf \\\n+\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/yacc.prf \\\n+\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/lex.prf \\\n+\t\tc:/Qt/4.8.5-everywhere/lib/qtmain.prl \\\n+\t\tc:/Qt/4.8.5-everywhere/lib/QtGui.prl \\\n+\t\tc:/Qt/4.8.5-everywhere/lib/QtCore.prl\n+\t$(QMAKE) -spec c:/Qt/4.8.5-everywhere/mkspecs/win32-g++ CONFIG+=release USE_UPNP=- USE_QRCODE=1 USE_IPV6=1 -o Makefile Aithercoin-qt.pro\n+c:/Qt/4.8.5-everywhere/mkspecs/features/device_config.prf:\n+c:/Qt/4.8.5-everywhere/mkspecs/qconfig.pri:\n+c:/Qt/4.8.5-everywhere/mkspecs/features/qt_functions.prf:\n+c:/Qt/4.8.5-everywhere/mkspecs/features/qt_config.prf:\n+c:/Qt/4.8.5-everywhere/mkspecs/features/exclusive_builds.prf:\n+c:/Qt/4.8.5-everywhere/mkspecs/features/default_pre.prf:\n+c:/Qt/4.8.5-everywhere/mkspecs/features/win32/default_pre.prf:\n+c:/Qt/4.8.5-everywhere/mkspecs/features/release.prf:\n+c:/Qt/4.8.5-everywhere/mkspecs/features/debug_and_release.prf:\n+c:/Qt/4.8.5-everywhere/mkspecs/features/default_post.prf:\n+c:/Qt/4.8.5-everywhere/mkspecs/features/win32/default_post.prf:\n+c:/Qt/4.8.5-everywhere/mkspecs/features/win32/thread.prf:\n+c:/Qt/4.8.5-everywhere/mkspecs/features/win32/rtti.prf:\n+c:/Qt/4.8.5-everywhere/mkspecs/features/win32/exceptions.prf:\n+c:/Qt/4.8.5-everywhere/mkspecs/features/win32/stl.prf:\n+c:/Qt/4.8.5-everywhere/mkspecs/features/static.prf:\n+c:/Qt/4.8.5-everywhere/mkspecs/features/warn_on.prf:\n+c:/Qt/4.8.5-everywhere/mkspecs/features/qt.prf:\n+c:/Qt/4.8.5-everywhere/mkspecs/features/moc.prf:\n+c:/Qt/4.8.5-everywhere/mkspecs/features/win32/windows.prf:\n+c:/Qt/4.8.5-everywhere/mkspecs/features/resources.prf:\n+c:/Qt/4.8.5-everywhere/mkspecs/features/uic.prf:\n+c:/Qt/4.8.5-everywhere/mkspecs/features/yacc.prf:\n+c:/Qt/4.8.5-everywhere/mkspecs/features/lex.prf:\n+c:\\Qt\\4.8.5-everywhere\\lib\\qtmain.prl:\n+c:\\Qt\\4.8.5-everywhere\\lib\\QtGui.prl:\n+c:\\Qt\\4.8.5-everywhere\\lib\\QtCore.prl:\n+qmake: qmake_all FORCE\n+\t@$(QMAKE) -spec c:/Qt/4.8.5-everywhere/mkspecs/win32-g++ CONFIG+=release USE_UPNP=- USE_QRCODE=1 USE_IPV6=1 -o Makefile Aithercoin-qt.pro\n+\n+qmake_all: FORCE\n+\n+make_default: release-make_default debug-make_default FORCE\n+make_first: release-make_first debug-make_first FORCE\n+all: release-all debug-all FORCE\n+clean: release-clean debug-clean FORCE\n+\t-$(DEL_FILE) D:/C++/aithercoin/src/leveldb/libleveldb.a;\n+\t-$(DEL_FILE) cd\n+\t-$(DEL_FILE) D:/C++/aithercoin/src/leveldb\n+\t-$(DEL_FILE) ;\n+\t-$(DEL_FILE) $(MAKE)\n+\t-$(DEL_FILE) clean\n+distclean: release-distclean debug-distclean FORCE\n+\t-$(DEL_FILE) Makefile\n+\n+D:/C++/aithercoin/src/leveldb/libleveldb.a: FORCE\n+\tcd D:/C++/aithercoin/src/leveldb && CC=gcc CXX=g++ TARGET_OS=OS_WINDOWS_CROSSCOMPILE $(MAKE) OPT=\"-pipe -O2\" libleveldb.a libmemenv.a && ranlib D:/C++/aithercoin/src/leveldb/libleveldb.a && ranlib D:/C++/aithercoin/src/leveldb/libmemenv.a\n+\n+check: first\n+\n+release-mocclean: $(MAKEFILE).Release\n+\t$(MAKE) -f $(MAKEFILE).Release mocclean\n+debug-mocclean: $(MAKEFILE).Debug\n+\t$(MAKE) -f $(MAKEFILE).Debug mocclean\n+mocclean: release-mocclean debug-mocclean\n+\n+release-mocables: $(MAKEFILE).Release\n+\t$(MAKE) -f $(MAKEFILE).Release mocables\n+debug-mocables: $(MAKEFILE).Debug\n+\t$(MAKE) -f $(MAKEFILE).Debug mocables\n+mocables: release-mocables debug-mocables\n+FORCE:\n+\n+$(MAKEFILE).Release: Makefile\n+$(MAKEFILE).Debug: Makefile"
      },
      {
        "sha": "d37c6c299fa41a662add27e1f03b4cf523c34441",
        "filename": "doc/build-msw.md",
        "status": "modified",
        "additions": 24,
        "deletions": 35,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f49425971071015506c1b8a5bc7b52e6b8c9bb2/doc/build-msw.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f49425971071015506c1b8a5bc7b52e6b8c9bb2/doc/build-msw.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-msw.md?ref=6f49425971071015506c1b8a5bc7b52e6b8c9bb2",
        "patch": "@@ -1,5 +1,4 @@\n-Copyright (c) 2018 Aithercoin Developers    \n-Copyright (c) 2009-2012 Bitcoin Developers    \n+Copyright (c) 2009-2012 Bitcoin Developers\n Distributed under the MIT/X11 software license, see the accompanying\n file license.txt or http://www.opensource.org/licenses/mit-license.php.\n This product includes software developed by the OpenSSL Project for use in\n@@ -14,66 +13,57 @@ graphical user interface.\n WINDOWS BUILD NOTES\n ===================\n \n-Required software\n+Compilers Supported\n -------------------\n-####Perl 5: \n-http://www.activestate.com/activeperl/downloads    \n-####Python: \n-https://www.python.org/downloads/windows/    \n-####Msys 2: \n-Download from https://www.msys2.org/    \n-Then run on msys2 environment:\n-```\n-pacman -S --needed base-devel mingw-w64-i686-toolchain mingw-w64-x86_64-toolchain git subversion mercurial mingw-w64-i686-cmake mingw-w64-x86_64-cmake\n-```\n+TODO: What works?\n+Note: releases are cross-compiled using mingw running on Linux.\n \n \n Dependencies\n ------------\n Libraries you need to download separately and build:\n-````\n-                default path                download\n-OpenSSL         C:\\openssl-1.0.2o           http://www.openssl.org/source/\n-Berkeley DB     C:\\db-4.8.30                http://www.oracle.com/technology/software/products/berkeley-db/index.html\n-Boost           C:\\boost_1_67_0             http://www.boost.org/users/download/\n-miniupnpc       C:\\miniupnpc-1.6            http://miniupnp.tuxfamily.org/files/\n-````\n+```\n+                default path               download\n+OpenSSL         \\openssl-1.0.1b-mgw        http://www.openssl.org/source/\n+Berkeley DB     \\db-4.8.30.NC-mgw          http://www.oracle.com/technology/software/products/berkeley-db/index.html\n+Boost           \\boost-1.47.0-mgw          http://www.boost.org/users/download/\n+miniupnpc       \\miniupnpc-1.6-mgw         http://miniupnp.tuxfamily.org/files/\n+```\n Their licenses:\n OpenSSL        Old BSD license with the problematic advertising requirement\n Berkeley DB    New BSD license with additional requirement that linked software must be free open source\n Boost          MIT-like license\n miniupnpc      New (3-clause) BSD license\n \n Versions used in this release:\n-OpenSSL      l-1.0.2o\n-Berkeley DB  4.8.30\n-Boost        1.67.0\n+OpenSSL      1.0.1b\n+Berkeley DB  4.8.30.NC\n+Boost        1.47.0\n miniupnpc    1.6\n \n \n OpenSSL\n -------\n-MSYS2 shell:\n+MSYS shell:\n un-tar sources with MSYS 'tar xfz' to avoid issue with symlinks (OpenSSL ticket 2377)\n change 'MAKE' env. variable from 'C:\\MinGW32\\bin\\mingw32-make.exe' to '/c/MinGW32/bin/mingw32-make.exe'\n-```\n-cd /c/openssl-1.0.2o\n+\n+cd /c/openssl-1.0.1b-mgw\n ./config\n make\n-```\n+\n Berkeley DB\n -----------\n-MSYS2 shell:\n-```\n+MSYS shell:\n cd /c/db-4.8.30.NC-mgw/build_unix\n-sh ../dist/configure --enable-mingw --enable-cxx\n+sh ../dist/configure --enable-mingw --enable-cxx --disable-shared --disable-replication\n make\n-```\n+\n Boost\n -----\n DOS prompt:\n ```\n-cd C:\\boost_1_67_0\\tools\\build\\src\\engine\n+cd C:\\deps\\boost_1_67_0\\tools\\build\\src\\engine\n PATH=C:\\msys32\\mingw32\\bin;%PATH%\n build.bat gcc\n copy bin.ntx86\\*.exe ..\\..\\..\\..\n@@ -84,13 +74,12 @@ MiniUPnPc\n ---------\n UPnP support is optional, make with USE_UPNP= to disable it.\n \n-MSYS2 shell:\n-```\n+MSYS shell:\n cd /c/miniupnpc-1.6-mgw\n make -f Makefile.mingw\n mkdir miniupnpc\n cp *.h miniupnpc/\n-```\n+\n Aithercoin\n -------\n DOS prompt:"
      },
      {
        "sha": "8316ee4c0929eec6df73a789887cef9c5d12c9ac",
        "filename": "doc/readme-windows-qt.md",
        "status": "modified",
        "additions": 14,
        "deletions": 13,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f49425971071015506c1b8a5bc7b52e6b8c9bb2/doc/readme-windows-qt.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f49425971071015506c1b8a5bc7b52e6b8c9bb2/doc/readme-windows-qt.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/readme-windows-qt.md?ref=6f49425971071015506c1b8a5bc7b52e6b8c9bb2",
        "patch": "@@ -11,32 +11,33 @@ Download `mingw32-gcc-4.6.2-release-c,c++,objc,objc++,fortran-sjlj.7z` extract t\n ### QT SDK\n http://qt-project.org/downloads\n ### OpenSSL\n+https://www.openssl.org/source/openssl-1.0.1b.tar.gz   \n+and put it in `C:/deps`    \n+then run `MSYS`\n ```\n-wget https://www.openssl.org/source/openssl-1.0.1j.tar.gz\n-tar xvfz openssl-1.0.1j.tar.gz\n-cd openssl-1.0.1j\n-./Configure no-zlib no-dso no-krb5 no-camellia no-capieng no-cast no-dtls1 no-gost no-gmp no-heartbeats no-idea no-jpake no-md2 no-mdc2 no-rc5 no-rdrand no-rfc3779 no-rsax no-sctp no-seed no-whirlpool mingw\n-make depend\n+tar xvfz openssl-1.0.1b.tar.gz\n+cd openssl-1.0.1b\n+./config\n make\n-cd ..\n ```\n ### Berkeley DB\n-```\n-wget http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz\n+http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz   \n+and put it in `C:/deps`   \n+then run `MSYS`\n+````\n tar xvfz db-4.8.30.NC.tar.gz\n cd db-4.8.30.NC/build_unix \n-../dist/configure --enable-mingw --enable-cxx --disable-shared --disable-replication --disable-pthread_api\n+sh ../dist/configure --enable-mingw --enable-cxx --disable-shared --disable-replication\n make\n-cd ..\n-```\n+````\n ### Boost\n ```\n wget -O boost_1_55_0.7z http://sourceforge.net/projects/boost/files/boost/1.55.0/boost_1_55_0.7z/download\n 7z x boost_1_55_0.7z\n ```\n (From windows CMD shell)\n ```\n-cd C:\\deps\\boost_1_55_0\\tools\\build\\src\\engine\n+cd C:\\deps\\boost_1_55_0\n PATH=C:\\MinGW\\mingw32\\bin;%PATH%\n bootstrap.bat mingw\n b2 --build-type=complete --with-chrono --with-filesystem --with-program_options --with-system --with-thread toolset=gcc variant=release link=static threading=multi runtime-link=static stage\n@@ -69,7 +70,7 @@ cd ..\n cd $HOME\n git clone https://github.com/aithercoin/aithercoin.git\n cd aithercoin\n-qmake aithercoin-qt-windows.pro -r -spec win32-g++ \"CONFIG+=release\" USE_UPNP=0 USE_QRCODE=1 USE_IPV6=1\n+qmake Aithercoin-qt.pro -r -spec win32-g++ \"CONFIG+=release\" USE_UPNP=- USE_QRCODE=1 USE_IPV6=1\n make clean\n cd src/leveldb\n make TARGET_OS=OS_WINDOWS_CROSSCOMPILE clean"
      }
    ]
  },
  {
    "sha": "578a5a416b97e3481e2f332ca7a4319e75199af9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NzhhNWE0MTZiOTdlMzQ4MWUyZjMzMmNhN2E0MzE5ZTc1MTk5YWY5",
    "commit": {
      "author": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-04T10:16:13Z"
      },
      "committer": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-04T10:16:13Z"
      },
      "message": "revert to old path",
      "tree": {
        "sha": "7e30b1dc33179a5f50d020d2cf40bfe939d544f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7e30b1dc33179a5f50d020d2cf40bfe939d544f7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/578a5a416b97e3481e2f332ca7a4319e75199af9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/578a5a416b97e3481e2f332ca7a4319e75199af9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/578a5a416b97e3481e2f332ca7a4319e75199af9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/578a5a416b97e3481e2f332ca7a4319e75199af9/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "6f49425971071015506c1b8a5bc7b52e6b8c9bb2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f49425971071015506c1b8a5bc7b52e6b8c9bb2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6f49425971071015506c1b8a5bc7b52e6b8c9bb2"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 5,
      "deletions": 21
    },
    "files": [
      {
        "sha": "a608c61354c1c531625a26fc0d71a49244a63a31",
        "filename": "Aithercoin-qt.pro",
        "status": "modified",
        "additions": 5,
        "deletions": 21,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/Aithercoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/Aithercoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Aithercoin-qt.pro?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -2,8 +2,7 @@ TEMPLATE = app\n TARGET = aithercoin-qt\n VERSION = 1.0.7\n INCLUDEPATH += src src/json src/qt\n-#DEFINES += QT_GUI BOOST_THREAD_USE_LIB BOOST_SPIRIT_THREADSAFE\n-DEFINES += QT_GUI BOOST_THREAD_USE_LIB BOOST_SPIRIT_THREADSAFE BOOST_THREAD_PROVIDES_GENERIC_SHARED_MUTEX_ON_WIN __NO_SYSTEM_INCLUDES\n+DEFINES += QT_GUI BOOST_THREAD_USE_LIB BOOST_SPIRIT_THREADSAFE\n CONFIG += no_include_pwd\n CONFIG += thread\n \n@@ -25,21 +24,6 @@ greaterThan(QT_MAJOR_VERSION, 4) {\n OBJECTS_DIR = build\n MOC_DIR = build\n UI_DIR = build\n-win32 {\n-#change to suffix\n-    BOOST_LIB_SUFFIX=-mgw46-mt-s-1_55\n-    BOOST_INCLUDE_PATH=C:/deps/boost_1_55_0\n-    BOOST_LIB_PATH=C:/deps/boost_1_55_0/stage/lib\n-    BDB_INCLUDE_PATH=C:/deps/db-4.8.30.NC/build_unix\n-    BDB_LIB_PATH=C:/deps/db-4.8.30.NC/build_unix\n-    OPENSSL_INCLUDE_PATH=C:/deps/openssl-1.0.2o/include\n-    OPENSSL_LIB_PATH=C:/deps/openssl-1.0.2o\n-    #MINIUPNPC_LIB_SUFFIX=-miniupnpc\n-    MINIUPNPC_INCLUDE_PATH=C:/deps/miniupnpc-1.6/include\n-    MINIUPNPC_LIB_PATH=C:/deps/miniupnpc-1.6/include\n-    QRENCODE_INCLUDE_PATH=C:/deps/qrencode-3.4.4\n-    QRENCODE_LIB_PATH=C:/deps/qrencode-3.4.4/.libs\n-}\n \n # use: qmake \"RELEASE=1\"\n contains(RELEASE, 1) {\n@@ -84,7 +68,7 @@ contains(USE_UPNP, -) {\n     }\n     DEFINES += USE_UPNP=$$USE_UPNP STATICLIB\n     INCLUDEPATH += $$MINIUPNPC_INCLUDE_PATH\n-    LIBS += $$join(MINIUPNPC_LIB_PATH,,-L,)\n+    LIBS += $$join(MINIUPNPC_LIB_PATH,,-L,) -lminiupnpc\n     win32:LIBS += -liphlpapi\n }\n \n@@ -378,7 +362,7 @@ isEmpty(BOOST_LIB_SUFFIX) {\n }\n \n isEmpty(BOOST_THREAD_LIB_SUFFIX) {\n-    win32:BOOST_THREAD_LIB_SUFFIX = $$BOOST_LIB_SUFFIX\n+    win32:BOOST_THREAD_LIB_SUFFIX = _win32$$BOOST_LIB_SUFFIX\n     else:BOOST_THREAD_LIB_SUFFIX = $$BOOST_LIB_SUFFIX\n }\n \n@@ -428,8 +412,8 @@ macx:QMAKE_LFLAGS_THREAD += -pthread\n macx:QMAKE_CXXFLAGS_THREAD += -pthread\n \n # Set libraries and includes at end, to use platform-defined defaults if not overridden\n-INCLUDEPATH += $$BOOST_INCLUDE_PATH $$BDB_INCLUDE_PATH $$OPENSSL_INCLUDE_PATH $$QRENCODE_INCLUDE_PATH $$MINIUPNPC_INCLUDE_PATH\n-LIBS += $$join(BOOST_LIB_PATH,,-L,) $$join(BDB_LIB_PATH,,-L,) $$join(OPENSSL_LIB_PATH,,-L,) $$join(QRENCODE_LIB_PATH,,-L,) $$join(MINIUPNPC_INCLUDE_PATH,,-L,)\n+INCLUDEPATH += $$BOOST_INCLUDE_PATH $$BDB_INCLUDE_PATH $$OPENSSL_INCLUDE_PATH $$QRENCODE_INCLUDE_PATH\n+LIBS += $$join(BOOST_LIB_PATH,,-L,) $$join(BDB_LIB_PATH,,-L,) $$join(OPENSSL_LIB_PATH,,-L,) $$join(QRENCODE_LIB_PATH,,-L,)\n LIBS += -lssl -lcrypto -ldb_cxx$$BDB_LIB_SUFFIX\n # -lgdi32 has to happen after -lcrypto (see  #681)\n windows:LIBS += -lws2_32 -lshlwapi -lmswsock -lole32 -loleaut32 -luuid -lgdi32"
      }
    ]
  },
  {
    "sha": "5aa9b44f725aa8724f9fc2507b1656af449a8466",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YWE5YjQ0ZjcyNWFhODcyNGY5ZmMyNTA3YjE2NTZhZjQ0OWE4NDY2",
    "commit": {
      "author": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-18T03:09:27Z"
      },
      "committer": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-18T03:09:27Z"
      },
      "message": "based on dash",
      "tree": {
        "sha": "22d74f765994235020df2947804242bc8efb6929",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/22d74f765994235020df2947804242bc8efb6929"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5aa9b44f725aa8724f9fc2507b1656af449a8466",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5aa9b44f725aa8724f9fc2507b1656af449a8466",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5aa9b44f725aa8724f9fc2507b1656af449a8466",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5aa9b44f725aa8724f9fc2507b1656af449a8466/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "578a5a416b97e3481e2f332ca7a4319e75199af9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/578a5a416b97e3481e2f332ca7a4319e75199af9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/578a5a416b97e3481e2f332ca7a4319e75199af9"
      }
    ],
    "stats": {
      "total": 562165,
      "additions": 296850,
      "deletions": 265315
    },
    "files": [
      {
        "sha": "c9cf4a7d9cd03ed588ba9882d26bfd1dd6800fe7",
        "filename": ".gitattributes",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/.gitattributes",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/.gitattributes",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitattributes?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1 +0,0 @@\n-src/clientversion.cpp export-subst"
      },
      {
        "sha": "55cebc008f5aa761847f4b701bc35abcc3956c48",
        "filename": ".github/ISSUE_TEMPLATE.md",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/.github/ISSUE_TEMPLATE.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/.github/ISSUE_TEMPLATE.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE.md?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,21 +0,0 @@\n-<!-- This issue tracker is only for technical issues related to Bitcoin Core.\n-\n-General bitcoin questions and/or support requests are best directed to the Bitcoin StackExchange at https://bitcoin.stackexchange.com.\n-\n-For reporting security issues, please read instructions at https://bitcoincore.org/en/contact/.\n-\n-If the node is \"stuck\" during sync or giving \"block checksum mismatch\" errors, please ensure your hardware is stable by running memtest and observe CPU temperature with a load-test tool such as linpack before creating an issue! -->\n-\n-<!-- Describe the issue -->\n-<!--- What behavior did you expect? -->\n-\n-<!--- What was the actual behavior (provide screenshots if the issue is GUI-related)? -->\n-\n-<!--- How reliably can you reproduce the issue, what are the steps to do so? -->\n-\n-<!-- What version of Bitcoin Core are you using, where did you get it (website, self-compiled, etc)? -->\n-\n-<!-- What type of machine are you observing the error on (OS/CPU and disk type)? -->\n-\n-<!-- Any extra information that might be useful in the debugging process. -->\n-<!--- This is normally the contents of a `debug.log` or `config.log` file. Raw text or a link to a pastebin type site are preferred. -->"
      },
      {
        "sha": "08f9394bd27a7c831971ccba9019d0740a44e23a",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 34,
        "deletions": 68,
        "changes": 102,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -1,54 +1,18 @@\n+*.sublime-project\n+*.sublime-workspace\n+todo.txt\n+reset-files.bash\n+\n *.tar.gz\n \n *.exe\n-src/bitcoin\n-src/bitcoind\n-src/bitcoin-cli\n-src/bitcoin-tx\n-src/test/test_bitcoin\n-src/test/test_bitcoin_fuzzy\n-src/qt/test/test_bitcoin-qt\n-\n-# autoreconf\n-Makefile.in\n-aclocal.m4\n-autom4te.cache/\n-build-aux/config.guess\n-build-aux/config.sub\n-build-aux/depcomp\n-build-aux/install-sh\n-build-aux/ltmain.sh\n-build-aux/m4/libtool.m4\n-build-aux/m4/lt~obsolete.m4\n-build-aux/m4/ltoptions.m4\n-build-aux/m4/ltsugar.m4\n-build-aux/m4/ltversion.m4\n-build-aux/missing\n-build-aux/compile\n-build-aux/test-driver\n-config.log\n-config.status\n-configure\n-libtool\n-src/config/bitcoin-config.h\n-src/config/bitcoin-config.h.in\n-src/config/stamp-h1\n-share/setup.nsi\n-share/qt/Info.plist\n-\n-src/univalue/gen\n-\n-src/qt/*.moc\n-src/qt/moc_*.cpp\n-src/qt/forms/ui_*.h\n-\n-src/qt/test/moc*.cpp\n-\n-src/qt/bitcoin-qt.config\n-src/qt/bitcoin-qt.creator\n-src/qt/bitcoin-qt.creator.user\n-src/qt/bitcoin-qt.files\n-src/qt/bitcoin-qt.includes\n+src/aither\n+src/aitherd\n+src/aither-cli\n+src/aither-tx\n+src/test/test_aither\n+src/qt/test/test_aither-qt\n+src/bench/bench_aither\n \n .deps\n .dirstamp\n@@ -61,7 +25,7 @@ src/qt/bitcoin-qt.includes\n *.pyc\n *.o\n *.o-*\n-*.patch\n+.aither\n *.a\n *.pb.cc\n *.pb.h\n@@ -77,15 +41,10 @@ src/qt/bitcoin-qt.includes\n *.lo\n *.la\n \n-# Compilation and Qt preprocessor part\n-*.qm\n-bitcoin-qt\n-Bitcoin-Qt.app\n-background.tiff*\n-\n # Unit-tests\n Makefile.test\n-bitcoin-qt_test\n+aither-qt_test\n+src/test/buildenv.py\n \n # Resources cpp\n qrc_*.cpp\n@@ -98,28 +57,35 @@ build\n *.gcno\n *.gcda\n /*.info\n-test_bitcoin.coverage/\n+test_aither.coverage/\n total.coverage/\n coverage_percent.txt\n \n #build tests\n linux-coverage-build\n linux-build\n win32-build\n-test/config.ini\n-test/cache/*\n+qa/pull-tester/run-bitcoind-for-test.sh\n+qa/pull-tester/tests_config.py\n+qa/pull-tester/cache/*\n+qa/pull-tester/test.*/*\n+qa/tmp\n+cache/\n+share/BitcoindComparisonTool.jar\n \n !src/leveldb*/Makefile\n \n+.cproject\n+.project\n+.autotools\n /doc/doxygen/\n \n libbitcoinconsensus.pc\n-contrib/devtools/split-debug.sh\n-.idea\n-Aithercoin-qt.pro.user\n-src/aithercoind\n-src/main.h.autosave\n-.qmake.stash\n-Makefile.Debug\n-Makefile.Release\n-object_script.*\n\\ No newline at end of file\n+src/qt/aither-qt.bash\n+qa/pull-tester/tests-config.sh\n+\n+#development symlinks\n+aither-cli\n+aitherd\n+aither-qt\n+.idea\n\\ No newline at end of file"
      },
      {
        "sha": "40961cc6293b4722936b780bbc135b295269369b",
        "filename": ".travis.yml",
        "status": "added",
        "additions": 88,
        "deletions": 0,
        "changes": 88,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,88 @@\n+# errata:\n+# - A travis bug causes caches to trample eachother when using the same\n+#   compiler key (which we don't use anyway). This is worked around for now by\n+#   replacing the \"compilers\" with a build name prefixed by the no-op \":\"\n+#   command. See: https://github.com/travis-ci/travis-ci/issues/4393\n+# - sudo/dist/group are set so as to get Blue Box VMs, necessary for [loopback]\n+#   IPv6 support\n+\n+sudo: required\n+dist: trusty\n+group: deprecated-2017Q3\n+\n+os: linux\n+language: generic\n+\n+cache:\n+  apt: true\n+  ccache: true\n+  directories:\n+    - depends/built\n+    - depends/sdk-sources\n+    - $HOME/.ccache\n+\n+env:\n+  global:\n+    - MAKEJOBS=-j5\n+    - RUN_TESTS=false\n+    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID\n+    - CCACHE_SIZE=400M\n+    - CCACHE_TEMPDIR=/tmp/.ccache-temp\n+    - CCACHE_COMPRESS=1\n+    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out\n+    - SDK_URL=https://bitcoincore.org/depends-sources/sdks\n+    - PYTHON_DEBUG=1\n+    - WINEDEBUG=fixme-all\n+\n+  matrix:\n+# ARM\n+    - HOST=arm-linux-gnueabihf PPA=\"ppa:bitcoin/bitcoin\" PACKAGES=\"g++-arm-linux-gnueabihf\" DEP_OPTS=\"NO_QT=1\" CHECK_DOC=1 GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n+# Win32\n+    - HOST=i686-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PPA=\"ppa:bitcoin/bitcoin\" PACKAGES=\"python3 nsis g++-mingw-w64-i686 wine1.7 bc\" RUN_TESTS=false GOAL=\"install\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" MAKEJOBS=\"-j4\" WINE=true\n+# 32-bit + aither\n+    - HOST=i686-pc-linux-gnu PPA=\"ppa:bitcoin/bitcoin\" PACKAGES=\"g++-multilib bc python3-zmq\" DEP_OPTS=\"NO_QT=1\" RUN_TESTS=false GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\" PYZMQ=true\n+# Win64\n+    - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PPA=\"ppa:bitcoin/bitcoin\" PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine1.7 bc\" RUN_TESTS=false GOAL=\"install\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" MAKEJOBS=\"-j4\" WINE=true\n+# aitherd\n+    - HOST=x86_64-unknown-linux-gnu PPA=\"ppa:bitcoin/bitcoin\" PACKAGES=\"bc python3-zmq\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=false GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports\" CPPFLAGS=\"-DDEBUG_LOCKORDER -DENABLE_AITHER_DEBUG\" PYZMQ=true\n+# No wallet\n+#    - HOST=x86_64-unknown-linux-gnu PPA=\"ppa:bitcoin/bitcoin\" PACKAGES=\"python3\" DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n+# Cross-Mac\n+    - HOST=x86_64-apple-darwin11 PPA=\"ppa:bitcoin/bitcoin\" PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" OSX_SDK=10.9 GOAL=\"deploy\"\n+\n+before_install:\n+    - git clone https://github.com/aithercoin/aither_hash\n+    - travis_retry sudo apt-get install python-dev\n+    - travis_retry sudo add-apt-repository ppa:ubuntu-wine/ppa -y\n+    - export PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/python/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\n+install:\n+    - if [ \"$PYZMQ\" = \"true\" ]; then pip install pyzmq --user ; fi\n+    - if [ -n \"$PPA\" ]; then travis_retry sudo add-apt-repository \"$PPA\" -y; fi\n+    - if [ -n \"$DPKG_ADD_ARCH\" ]; then sudo dpkg --add-architecture \"$DPKG_ADD_ARCH\" ; fi\n+    - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get update; fi\n+    - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi\n+    - cd aither_hash && python setup.py install --user && cd ..\n+before_script:\n+    - unset CC; unset CXX\n+    - unset DISPLAY\n+    - mkdir -p depends/SDKs depends/sdk-sources\n+    - if [ -n \"$OSX_SDK\" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n+    - if [ -n \"$OSX_SDK\" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n+    - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS\n+script:\n+    - if [ -n \"$USE_SHELL\" ]; then export CONFIG_SHELL=\"$USE_SHELL\"; fi\n+    - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n+    - BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n+    - depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE\n+    - test -n \"$USE_SHELL\" && eval '\"$USE_SHELL\" -c \"./autogen.sh\"' || ./autogen.sh\n+    - ./configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n+    - make distdir PACKAGE=aither VERSION=$HOST\n+    - cd aither-$HOST\n+    - ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n+    - make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && make $GOAL V=1 ; false )\n+    - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib\n+    - if [ \"$RUN_TESTS\" = \"true\" -a \"$WINE\" != \"true\" ]; then make $MAKEJOBS check VERBOSE=1; fi\n+    - if [ \"$RUN_TESTS\" = \"true\" -a \"$WINE\" = \"true\" ]; then wine  src/test/test_aither.exe; fi\n+    #- if [ \"$RUN_TESTS\" = \"true\" ]; then qa/pull-tester/rpc-tests.py --coverage; fi\n+after_script:\n+    - if [ \"$TRAVIS_PULL_REQUEST\" != \"false\" ]; then (echo \"Upload goes here. Something like: scp -r $BASE_OUTDIR server\" || echo \"upload failed\"); fi"
      },
      {
        "sha": "5b300b19b079f9e7dc5fd8df36f6a7e61dde0508",
        "filename": ".tx/config",
        "status": "added",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/.tx/config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/.tx/config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.tx/config?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,7 @@\n+[main]\n+host = https://www.transifex.com\n+\n+[aither.qt-translation-012x]\n+file_filter = src/qt/locale/aither_<lang>.ts\n+source_file = src/qt/locale/aither_en.ts\n+source_lang = en"
      },
      {
        "sha": "a608c61354c1c531625a26fc0d71a49244a63a31",
        "filename": "Aithercoin-qt.pro",
        "status": "removed",
        "additions": 0,
        "deletions": 435,
        "changes": 435,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/Aithercoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/Aithercoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Aithercoin-qt.pro?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,435 +0,0 @@\n-TEMPLATE = app\n-TARGET = aithercoin-qt\n-VERSION = 1.0.7\n-INCLUDEPATH += src src/json src/qt\n-DEFINES += QT_GUI BOOST_THREAD_USE_LIB BOOST_SPIRIT_THREADSAFE\n-CONFIG += no_include_pwd\n-CONFIG += thread\n-\n-greaterThan(QT_MAJOR_VERSION, 4) {\n-    QT += widgets\n-    DEFINES += QT_DISABLE_DEPRECATED_BEFORE=0\n-}\n-\n-# for boost 1.37, add -mt to the boost libraries\n-# use: qmake BOOST_LIB_SUFFIX=-mt\n-# for boost thread win32 with _win32 sufix\n-# use: BOOST_THREAD_LIB_SUFFIX=_win32-...\n-# or when linking against a specific BerkelyDB version: BDB_LIB_SUFFIX=-4.8\n-\n-# Dependency library locations can be customized with:\n-#    BOOST_INCLUDE_PATH, BOOST_LIB_PATH, BDB_INCLUDE_PATH,\n-#    BDB_LIB_PATH, OPENSSL_INCLUDE_PATH and OPENSSL_LIB_PATH respectively\n-\n-OBJECTS_DIR = build\n-MOC_DIR = build\n-UI_DIR = build\n-\n-# use: qmake \"RELEASE=1\"\n-contains(RELEASE, 1) {\n-    # Mac: compile for maximum compatibility (10.5, 32-bit)\n-    macx:QMAKE_CXXFLAGS += -mmacosx-version-min=10.5 -arch x86_64 -isysroot /Developer/SDKs/MacOSX10.5.sdk\n-\n-    !windows:!macx {\n-        # Linux: static link\n-        LIBS += -Wl,-Bstatic\n-    }\n-}\n-\n-!win32 {\n-# for extra security against potential buffer overflows: enable GCCs Stack Smashing Protection\n-QMAKE_CXXFLAGS *= -fstack-protector-all --param ssp-buffer-size=1\n-QMAKE_LFLAGS *= -fstack-protector-all --param ssp-buffer-size=1\n-# We need to exclude this for Windows cross compile with MinGW 4.2.x, as it will result in a non-working executable!\n-# This can be enabled for Windows, when we switch to MinGW >= 4.4.x.\n-}\n-# for extra security on Windows: enable ASLR and DEP via GCC linker flags\n-win32:QMAKE_LFLAGS *= -Wl,--dynamicbase -Wl,--nxcompat\n-win32:QMAKE_LFLAGS += -static-libgcc -static-libstdc++\n-\n-# use: qmake \"USE_QRCODE=1\"\n-# libqrencode (http://fukuchi.org/works/qrencode/index.en.html) must be installed for support\n-contains(USE_QRCODE, 1) {\n-    message(Building with QRCode support)\n-    DEFINES += USE_QRCODE\n-    LIBS += -lqrencode\n-}\n-\n-# use: qmake \"USE_UPNP=1\" ( enabled by default; default)\n-#  or: qmake \"USE_UPNP=0\" (disabled by default)\n-#  or: qmake \"USE_UPNP=-\" (not supported)\n-# miniupnpc (http://miniupnp.free.fr/files/) must be installed for support\n-contains(USE_UPNP, -) {\n-    message(Building without UPNP support)\n-} else {\n-    message(Building with UPNP support)\n-    count(USE_UPNP, 0) {\n-        USE_UPNP=1\n-    }\n-    DEFINES += USE_UPNP=$$USE_UPNP STATICLIB\n-    INCLUDEPATH += $$MINIUPNPC_INCLUDE_PATH\n-    LIBS += $$join(MINIUPNPC_LIB_PATH,,-L,) -lminiupnpc\n-    win32:LIBS += -liphlpapi\n-}\n-\n-# use: qmake \"USE_DBUS=1\" or qmake \"USE_DBUS=0\"\n-linux:count(USE_DBUS, 0) {\n-    USE_DBUS=1\n-}\n-contains(USE_DBUS, 1) {\n-    message(Building with DBUS (Freedesktop notifications) support)\n-    DEFINES += USE_DBUS\n-    QT += dbus\n-}\n-\n-contains(BITCOIN_NEED_QT_PLUGINS, 1) {\n-    DEFINES += BITCOIN_NEED_QT_PLUGINS\n-    QTPLUGIN += qcncodecs qjpcodecs qtwcodecs qkrcodecs qtaccessiblewidgets\n-}\n-\n-INCLUDEPATH += src/leveldb/include src/leveldb/helpers\n-LIBS += $$PWD/src/leveldb/libleveldb.a $$PWD/src/leveldb/libmemenv.a\n-SOURCES += src/txdb-leveldb.cpp\n-!win32 {\n-    # we use QMAKE_CXXFLAGS_RELEASE even without RELEASE=1 because we use RELEASE to indicate linking preferences not -O preferences\n-    genleveldb.commands = cd $$PWD/src/leveldb && CC=$$QMAKE_CC CXX=$$QMAKE_CXX $(MAKE) OPT=\\\"$$QMAKE_CXXFLAGS $$QMAKE_CXXFLAGS_RELEASE\\\" libleveldb.a libmemenv.a\n-} else {\n-    # make an educated guess about what the ranlib command is called\n-    isEmpty(QMAKE_RANLIB) {\n-        QMAKE_RANLIB = $$replace(QMAKE_STRIP, strip, ranlib)\n-    }\n-    LIBS += -lshlwapi\n-    genleveldb.commands = cd $$PWD/src/leveldb && CC=$$QMAKE_CC CXX=$$QMAKE_CXX TARGET_OS=OS_WINDOWS_CROSSCOMPILE $(MAKE) OPT=\\\"$$QMAKE_CXXFLAGS $$QMAKE_CXXFLAGS_RELEASE\\\" libleveldb.a libmemenv.a && $$QMAKE_RANLIB $$PWD/src/leveldb/libleveldb.a && $$QMAKE_RANLIB $$PWD/src/leveldb/libmemenv.a\n-}\n-genleveldb.target = $$PWD/src/leveldb/libleveldb.a\n-genleveldb.depends = FORCE\n-PRE_TARGETDEPS += $$PWD/src/leveldb/libleveldb.a\n-QMAKE_EXTRA_TARGETS += genleveldb\n-# Gross ugly hack that depends on qmake internals, unfortunately there is no other way to do it.\n-QMAKE_CLEAN += $$PWD/src/leveldb/libleveldb.a; cd $$PWD/src/leveldb ; $(MAKE) clean\n-\n-# regenerate src/build.h\n-!windows|contains(USE_BUILD_INFO, 1) {\n-    genbuild.depends = FORCE\n-    genbuild.commands = cd $$PWD; /bin/sh share/genbuild.sh $$OUT_PWD/build/build.h\n-    genbuild.target = $$OUT_PWD/build/build.h\n-    PRE_TARGETDEPS += $$OUT_PWD/build/build.h\n-    QMAKE_EXTRA_TARGETS += genbuild\n-    DEFINES += HAVE_BUILD_INFO\n-}\n-\n-contains(USE_O3, 1) {\n-    message(Building O3 optimization flag)\n-    QMAKE_CXXFLAGS_RELEASE -= -O2\n-    QMAKE_CFLAGS_RELEASE -= -O2\n-    QMAKE_CXXFLAGS += -O3\n-    QMAKE_CFLAGS += -O3\n-}\n-\n-*-g++-32 {\n-    message(\"32 platform, adding -msse2 flag\")\n-\n-    QMAKE_CXXFLAGS += -msse2\n-    QMAKE_CFLAGS += -msse2\n-}\n-\n-QMAKE_CXXFLAGS_WARN_ON = -fdiagnostics-show-option -Wall -Wextra -Wno-ignored-qualifiers -Wformat -Wformat-security -Wno-unused-parameter -Wstack-protector\n-\n-# Input\n-DEPENDPATH += src src/json src/qt\n-HEADERS += src/qt/bitcoingui.h \\\n-    src/qt/transactiontablemodel.h \\\n-    src/qt/addresstablemodel.h \\\n-    src/qt/optionsdialog.h \\\n-    src/qt/coincontroldialog.h \\\n-    src/qt/coincontroltreewidget.h \\\n-    src/qt/sendcoinsdialog.h \\\n-    src/qt/addressbookpage.h \\\n-    src/qt/signverifymessagedialog.h \\\n-    src/qt/aboutdialog.h \\\n-    src/qt/editaddressdialog.h \\\n-    src/qt/bitcoinaddressvalidator.h \\\n-    src/alert.h \\\n-    src/addrman.h \\\n-    src/base58.h \\\n-    src/bignum.h \\\n-    src/checkpoints.h \\\n-    src/compat.h \\\n-    src/coincontrol.h \\\n-    src/sync.h \\\n-    src/util.h \\\n-    src/uint256.h \\\n-    src/kernel.h \\\n-    src/scrypt.h \\\n-    src/pbkdf2.h \\\n-    src/zerocoin/Accumulator.h \\\n-    src/zerocoin/AccumulatorProofOfKnowledge.h \\\n-    src/zerocoin/Coin.h \\\n-    src/zerocoin/CoinSpend.h \\\n-    src/zerocoin/Commitment.h \\\n-    src/zerocoin/ParamGeneration.h \\\n-    src/zerocoin/Params.h \\\n-    src/zerocoin/SerialNumberSignatureOfKnowledge.h \\\n-    src/zerocoin/SpendMetaData.h \\\n-    src/zerocoin/ZeroTest.h \\\n-    src/zerocoin/Zerocoin.h \\\n-    src/serialize.h \\\n-    src/strlcpy.h \\\n-    src/main.h \\\n-    src/miner.h \\\n-    src/net.h \\\n-    src/key.h \\\n-    src/db.h \\\n-    src/txdb.h \\\n-    src/walletdb.h \\\n-    src/script.h \\\n-    src/init.h \\\n-    src/irc.h \\\n-    src/mruset.h \\\n-    src/json/json_spirit_writer_template.h \\\n-    src/json/json_spirit_writer.h \\\n-    src/json/json_spirit_value.h \\\n-    src/json/json_spirit_utils.h \\\n-    src/json/json_spirit_stream_reader.h \\\n-    src/json/json_spirit_reader_template.h \\\n-    src/json/json_spirit_reader.h \\\n-    src/json/json_spirit_error_position.h \\\n-    src/json/json_spirit.h \\\n-    src/qt/clientmodel.h \\\n-    src/qt/guiutil.h \\\n-    src/qt/transactionrecord.h \\\n-    src/qt/guiconstants.h \\\n-    src/qt/optionsmodel.h \\\n-    src/qt/monitoreddatamapper.h \\\n-    src/qt/transactiondesc.h \\\n-    src/qt/transactiondescdialog.h \\\n-    src/qt/bitcoinamountfield.h \\\n-    src/wallet.h \\\n-    src/keystore.h \\\n-    src/qt/transactionfilterproxy.h \\\n-    src/qt/transactionview.h \\\n-    src/qt/walletmodel.h \\\n-    src/bitcoinrpc.h \\\n-    src/qt/overviewpage.h \\\n-    src/qt/csvmodelwriter.h \\\n-    src/crypter.h \\\n-    src/qt/sendcoinsentry.h \\\n-    src/qt/qvalidatedlineedit.h \\\n-    src/qt/bitcoinunits.h \\\n-    src/qt/qvaluecombobox.h \\\n-    src/qt/askpassphrasedialog.h \\\n-    src/protocol.h \\\n-    src/qt/notificator.h \\\n-    src/qt/qtipcserver.h \\\n-    src/allocators.h \\\n-    src/ui_interface.h \\\n-    src/qt/rpcconsole.h \\\n-    src/version.h \\\n-    src/netbase.h \\\n-    src/clientversion.h \\\n-    src/threadsafety.h \\\n-    src/qt/macnotificationhandler.h\n-\n-SOURCES += src/qt/bitcoin.cpp src/qt/bitcoingui.cpp \\\n-    src/qt/transactiontablemodel.cpp \\\n-    src/qt/addresstablemodel.cpp \\\n-    src/qt/optionsdialog.cpp \\\n-    src/qt/sendcoinsdialog.cpp \\\n-    src/qt/coincontroldialog.cpp \\\n-    src/qt/coincontroltreewidget.cpp \\\n-    src/qt/addressbookpage.cpp \\\n-    src/qt/signverifymessagedialog.cpp \\\n-    src/qt/aboutdialog.cpp \\\n-    src/qt/editaddressdialog.cpp \\\n-    src/qt/bitcoinaddressvalidator.cpp \\\n-    src/alert.cpp \\\n-    src/version.cpp \\\n-    src/sync.cpp \\\n-    src/util.cpp \\\n-    src/netbase.cpp \\\n-    src/key.cpp \\\n-    src/script.cpp \\\n-    src/main.cpp \\\n-    src/miner.cpp \\\n-    src/init.cpp \\\n-    src/net.cpp \\\n-    src/irc.cpp \\\n-    src/checkpoints.cpp \\\n-    src/addrman.cpp \\\n-    src/db.cpp \\\n-    src/walletdb.cpp \\\n-    src/qt/clientmodel.cpp \\\n-    src/qt/guiutil.cpp \\\n-    src/qt/transactionrecord.cpp \\\n-    src/qt/optionsmodel.cpp \\\n-    src/qt/monitoreddatamapper.cpp \\\n-    src/qt/transactiondesc.cpp \\\n-    src/qt/transactiondescdialog.cpp \\\n-    src/qt/bitcoinstrings.cpp \\\n-    src/qt/bitcoinamountfield.cpp \\\n-    src/wallet.cpp \\\n-    src/keystore.cpp \\\n-    src/qt/transactionfilterproxy.cpp \\\n-    src/qt/transactionview.cpp \\\n-    src/qt/walletmodel.cpp \\\n-    src/bitcoinrpc.cpp \\\n-    src/rpcdump.cpp \\\n-    src/rpcnet.cpp \\\n-    src/rpcmining.cpp \\\n-    src/rpcwallet.cpp \\\n-    src/rpcblockchain.cpp \\\n-    src/rpcrawtransaction.cpp \\\n-    src/qt/overviewpage.cpp \\\n-    src/qt/csvmodelwriter.cpp \\\n-    src/crypter.cpp \\\n-    src/qt/sendcoinsentry.cpp \\\n-    src/qt/qvalidatedlineedit.cpp \\\n-    src/qt/bitcoinunits.cpp \\\n-    src/qt/qvaluecombobox.cpp \\\n-    src/qt/askpassphrasedialog.cpp \\\n-    src/protocol.cpp \\\n-    src/qt/notificator.cpp \\\n-    src/qt/qtipcserver.cpp \\\n-    src/qt/rpcconsole.cpp \\\n-    src/noui.cpp \\\n-    src/kernel.cpp \\\n-    src/scrypt-arm.S \\\n-    src/scrypt-x86.S \\\n-    src/scrypt-x86_64.S \\\n-    src/scrypt.cpp \\\n-    src/pbkdf2.cpp \\\n-    src/zerocoin/Accumulator.cpp \\\n-    src/zerocoin/AccumulatorProofOfKnowledge.cpp \\\n-    src/zerocoin/Coin.cpp \\\n-    src/zerocoin/CoinSpend.cpp \\\n-    src/zerocoin/Commitment.cpp \\\n-    src/zerocoin/ParamGeneration.cpp \\\n-    src/zerocoin/Params.cpp \\\n-    src/zerocoin/SerialNumberSignatureOfKnowledge.cpp \\\n-    src/zerocoin/SpendMetaData.cpp \\\n-    src/zerocoin/ZeroTest.cpp\n-\n-RESOURCES += \\\n-    src/qt/bitcoin.qrc\n-\n-FORMS += \\\n-    src/qt/forms/coincontroldialog.ui \\\n-    src/qt/forms/sendcoinsdialog.ui \\\n-    src/qt/forms/addressbookpage.ui \\\n-    src/qt/forms/signverifymessagedialog.ui \\\n-    src/qt/forms/aboutdialog.ui \\\n-    src/qt/forms/editaddressdialog.ui \\\n-    src/qt/forms/transactiondescdialog.ui \\\n-    src/qt/forms/overviewpage.ui \\\n-    src/qt/forms/sendcoinsentry.ui \\\n-    src/qt/forms/askpassphrasedialog.ui \\\n-    src/qt/forms/rpcconsole.ui \\\n-    src/qt/forms/optionsdialog.ui\n-\n-contains(USE_QRCODE, 1) {\n-HEADERS += src/qt/qrcodedialog.h\n-SOURCES += src/qt/qrcodedialog.cpp\n-FORMS += src/qt/forms/qrcodedialog.ui\n-}\n-\n-CODECFORTR = UTF-8\n-\n-# for lrelease/lupdate\n-# also add new translations to src/qt/bitcoin.qrc under translations/\n-TRANSLATIONS = $$files(src/qt/locale/bitcoin_*.ts)\n-\n-isEmpty(QMAKE_LRELEASE) {\n-    win32:QMAKE_LRELEASE = $$[QT_INSTALL_BINS]\\\\lrelease.exe\n-    else:QMAKE_LRELEASE = $$[QT_INSTALL_BINS]/lrelease\n-}\n-isEmpty(QM_DIR):QM_DIR = $$PWD/src/qt/locale\n-# automatically build translations, so they can be included in resource file\n-TSQM.name = lrelease ${QMAKE_FILE_IN}\n-TSQM.input = TRANSLATIONS\n-TSQM.output = $$QM_DIR/${QMAKE_FILE_BASE}.qm\n-TSQM.commands = $$QMAKE_LRELEASE ${QMAKE_FILE_IN} -qm ${QMAKE_FILE_OUT}\n-TSQM.CONFIG = no_link\n-QMAKE_EXTRA_COMPILERS += TSQM\n-\n-# \"Other files\" to show in Qt Creator\n-OTHER_FILES += \\\n-    doc/*.rst doc/*.txt doc/README README.md res/bitcoin-qt.rc\n-\n-# platform specific defaults, if not overridden on command line\n-isEmpty(BOOST_LIB_SUFFIX) {\n-    macx:BOOST_LIB_SUFFIX = -mt\n-    windows:BOOST_LIB_SUFFIX = -mt\n-}\n-\n-isEmpty(BOOST_THREAD_LIB_SUFFIX) {\n-    win32:BOOST_THREAD_LIB_SUFFIX = _win32$$BOOST_LIB_SUFFIX\n-    else:BOOST_THREAD_LIB_SUFFIX = $$BOOST_LIB_SUFFIX\n-}\n-\n-isEmpty(BDB_LIB_PATH) {\n-    macx:BDB_LIB_PATH = /opt/local/lib/db48\n-}\n-\n-isEmpty(BDB_LIB_SUFFIX) {\n-    macx:BDB_LIB_SUFFIX = -4.8\n-}\n-\n-isEmpty(BDB_INCLUDE_PATH) {\n-    macx:BDB_INCLUDE_PATH = /opt/local/include/db48\n-}\n-\n-isEmpty(BOOST_LIB_PATH) {\n-    macx:BOOST_LIB_PATH = /opt/local/lib\n-}\n-\n-isEmpty(BOOST_INCLUDE_PATH) {\n-    macx:BOOST_INCLUDE_PATH = /opt/local/include\n-}\n-\n-windows:DEFINES += WIN32\n-windows:RC_FILE = src/qt/res/bitcoin-qt.rc\n-\n-windows:!contains(MINGW_THREAD_BUGFIX, 0) {\n-    # At least qmake's win32-g++-cross profile is missing the -lmingwthrd\n-    # thread-safety flag. GCC has -mthreads to enable this, but it doesn't\n-    # work with static linking. -lmingwthrd must come BEFORE -lmingw, so\n-    # it is prepended to QMAKE_LIBS_QT_ENTRY.\n-    # It can be turned off with MINGW_THREAD_BUGFIX=0, just in case it causes\n-    # any problems on some untested qmake profile now or in the future.\n-    DEFINES += _MT BOOST_THREAD_PROVIDES_GENERIC_SHARED_MUTEX_ON_WIN\n-    QMAKE_LIBS_QT_ENTRY = -lmingwthrd $$QMAKE_LIBS_QT_ENTRY\n-}\n-\n-macx:HEADERS += src/qt/macdockiconhandler.h\n-macx:OBJECTIVE_SOURCES += src/qt/macdockiconhandler.mm\n-macx:OBJECTIVE_SOURCES += src/qt/macnotificationhandler.mm\n-macx:LIBS += -framework Foundation -framework ApplicationServices -framework AppKit\n-macx:DEFINES += MAC_OSX MSG_NOSIGNAL=0\n-macx:ICON = src/qt/res/icons/bitcoin.icns\n-macx:TARGET = \"Aithercoin-Qt\"\n-macx:QMAKE_CFLAGS_THREAD += -pthread\n-macx:QMAKE_LFLAGS_THREAD += -pthread\n-macx:QMAKE_CXXFLAGS_THREAD += -pthread\n-\n-# Set libraries and includes at end, to use platform-defined defaults if not overridden\n-INCLUDEPATH += $$BOOST_INCLUDE_PATH $$BDB_INCLUDE_PATH $$OPENSSL_INCLUDE_PATH $$QRENCODE_INCLUDE_PATH\n-LIBS += $$join(BOOST_LIB_PATH,,-L,) $$join(BDB_LIB_PATH,,-L,) $$join(OPENSSL_LIB_PATH,,-L,) $$join(QRENCODE_LIB_PATH,,-L,)\n-LIBS += -lssl -lcrypto -ldb_cxx$$BDB_LIB_SUFFIX\n-# -lgdi32 has to happen after -lcrypto (see  #681)\n-windows:LIBS += -lws2_32 -lshlwapi -lmswsock -lole32 -loleaut32 -luuid -lgdi32\n-LIBS += -lboost_system$$BOOST_LIB_SUFFIX -lboost_filesystem$$BOOST_LIB_SUFFIX -lboost_program_options$$BOOST_LIB_SUFFIX -lboost_thread$$BOOST_THREAD_LIB_SUFFIX\n-windows:LIBS += -lboost_chrono$$BOOST_LIB_SUFFIX\n-\n-contains(RELEASE, 1) {\n-    !windows:!macx {\n-        # Linux: turn dynamic linking back on for c/c++ runtime libraries\n-        LIBS += -Wl,-Bdynamic\n-    }\n-}\n-\n-!windows:!macx {\n-    DEFINES += LINUX\n-    LIBS += -lrt -ldl\n-}\n-\n-system($$QMAKE_LRELEASE -silent $$_PRO_FILE_)"
      },
      {
        "sha": "9fb7a757d2b3109e8e5401d52928315020baf176",
        "filename": "CONTRIBUTING.md",
        "status": "added",
        "additions": 110,
        "deletions": 0,
        "changes": 110,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,110 @@\n+Contributing to Aither Core\n+============================\n+\n+The Aither Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of \u201cCore developers\u201d in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repository \u201cmaintainers\u201d who are responsible for merging pull requests as well as a \u201clead maintainer\u201d who is responsible for the release cycle, overall merging, moderation and appointment of maintainers.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the \u201ccontributor workflow\u201d where everyone without exception contributes patch proposals using \u201cpull requests\u201d. This facilitates social contribution, easy testing and peer review.\n+\n+To contribute a patch, the workflow is as follows:\n+\n+  - Fork repository\n+  - Create topic branch\n+  - Commit patches\n+\n+The project coding conventions in [doc/developer-notes.md](doc/developer-notes.md) must be adhered to.\n+\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diffs should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n+\n+Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"Corrected typo in main.cpp\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n+\n+If a particular commit references another issue, please add the reference, for example \"refs #1234\", or \"fixes #4321\". Using \"fixes or closes\" keywords will cause the corresponding issue to be closed when the pull request is merged.\n+\n+Please refer to the [Git manual](https://git-scm.com/doc) for more information about Git.\n+\n+  - Push changes to your fork\n+  - Create pull request\n+\n+The title of the pull request should be prefixed by the component or area that the pull request affects. Examples:\n+\n+    Consensus: Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n+    Net: Automatically create hidden service, listen on Tor\n+    Qt: Add feed bump button\n+    Trivial: fix typo\n+\n+If a pull request is specifically not to be considered for merging (yet) please prefix the title with [WIP] or use [Tasks Lists](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments) in the body of the pull request to indicate tasks are pending.\n+\n+The body of the pull request should contain enough description about what the patch does together with any justification/reasoning. You should include references to any discussions (for example other tickets or mailing list discussions).\n+\n+At this stage one should expect comments and review from other contributors. You can add more commits to your pull request by committing them locally and pushing to your fork until you have satisfied all feedback. If your pull request is accepted for merging, you may be asked by a maintainer to squash and or rebase your commits before it will be merged. The length of time required for peer review is unpredictable and will vary from patch to patch.\n+\n+\n+Pull Request Philosophy\n+-----------------------\n+\n+Patchsets should always be focused. For example, a pull request could add a feature, fix a bug, or refactor code; but not a mixture. Please also avoid super pull requests which attempt to do too much, are overly large, or overly complex as this makes review difficult.\n+\n+\n+###Features\n+\n+When adding a new feature, thought must be given to the long term technical debt and maintenance that feature may require after inclusion. Before proposing a new feature that will require maintenance, please consider if you are willing to maintain it (including bug fixing). If features get orphaned with no maintainer in the future, they may be removed by the Repository Maintainer.\n+\n+\n+###Refactoring\n+\n+Refactoring is a necessary part of any software project's evolution. The following guidelines cover refactoring pull requests for the project.\n+\n+There are three categories of refactoring, code only moves, code style fixes, code refactoring. In general refactoring pull requests should not mix these three kinds of activity in order to make refactoring pull requests easy to review and uncontroversial. In all cases, refactoring PRs must not change the behaviour of code within the pull request (bugs must be preserved as is).\n+\n+Project maintainers aim for a quick turnaround on refactoring pull requests, so where possible keep them short, uncomplex and easy to verify. \n+\n+\n+\"Decision Making\" Process\n+-------------------------\n+\n+The following applies to code changes to the Aither Core project (and related projects such as libsecp256k1), and is not to be confused with overall Aither Network Protocol consensus changes.\n+\n+Whether a pull request is merged into Aither Core rests with the project merge maintainers and ultimately the project lead.\n+\n+Maintainers will take into consideration if a patch is in line with the general principles of the project; meets the minimum standards for inclusion; and will judge the general consensus of contributors.\n+\n+In general, all pull requests must:\n+\n+  - have a clear use case, fix a demonstrable bug or serve the greater good of the project (for example refactoring for modularisation);\n+  - be well peer reviewed;\n+  - have unit tests and functional tests where appropriate;\n+  - follow code style guidelines;\n+  - not break the existing test suite;\n+  - where bugs are fixed, where possible, there should be unit tests demonstrating the bug and also proving the fix. This helps prevent regression.\n+\n+Patches that change Aither consensus rules are considerably more involved than normal because they affect the entire ecosystem and so must be preceded by extensive mailing list discussions and have a numbered BIP. While each case will be different, one should be prepared to expend more time and effort than for other kinds of patches because of increased peer review and consensus building requirements.\n+\n+\n+###Peer Review\n+\n+Anyone may participate in peer review which is expressed by comments in the pull request. Typically reviewers will review the code for obvious errors, as well as test out the patch set and opine on the technical merits of the patch. Project maintainers take into account the peer review when determining if there is consensus to merge a pull request (remember that discussions may have been spread out over github, mailing list and IRC discussions). The following language is used within pull-request comments:\n+\n+  - ACK means \"I have tested the code and I agree it should be merged\";\n+  - NACK means \"I disagree this should be merged\", and must be accompanied by sound technical justification. NACKs without accompanying reasoning may be disregarded;\n+  - utACK means \"I have not tested the code, but I have reviewed it and it looks OK, I agree it can be merged\";\n+  - Concept ACK means \"I agree in the general principle of this pull request\";\n+  - Nit refers to trivial, often non-blocking issues.\n+\n+Reviewers should include the commit hash which they reviewed in their comments.\n+\n+Project maintainers reserve the right to weigh the opinions of peer reviewers using common sense judgement and also may weight based on meritocracy: Those that have demonstrated a deeper commitment and understanding towards the project (over time) or have clear domain expertise may naturally have more weight, as one would expect in all walks of life.\n+\n+Where a patch set affects consensus critical code, the bar will be set much higher in terms of discussion and peer review requirements, keeping in mind that mistakes could be very costly to the wider community. This includes refactoring of consensus critical code.\n+\n+Where a patch set proposes to change the Aither consensus, it must have been discussed extensively on the mailing list and IRC, be accompanied by a widely discussed BIP and have a generally widely perceived technical consensus of being a worthwhile change based on the judgement of the maintainers.\n+\n+\n+Release Policy\n+--------------\n+\n+The project leader is the release manager for each Aither Core release."
      },
      {
        "sha": "7247e31d9761e8d2bbb092b21537217b06fcadd5",
        "filename": "COPYING",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -1,7 +1,9 @@\n-Copyright (c) 2018 Aithercoin Developers\n-Copyright (c) 2013-2018 NovaCoin Developers\n-Copyright (c) 2011-2018 PPCoin Developers\n-Copyright (c) 2009-2018 Bitcoin Developers\n+The MIT License (MIT)\n+\n+Copyright (c) 2009-2016 The Bitcoin Core developers\n+Copyright (c) 2014-2017 The Dash Core developers\n+Copyright (c) 2017-2018 The GoByte Core developers\n+Copyright (c) 2018      The Aither Core developers\n \n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal"
      },
      {
        "sha": "2b7cb6250a29b714203568eca14424fdb45ae8cb",
        "filename": "INSTALL",
        "status": "modified",
        "additions": 13,
        "deletions": 6,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/INSTALL",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/INSTALL",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/INSTALL?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -1,9 +1,16 @@\n-Building Aithercoin\n+Building Aither Core\n \n-See doc/readme-qt.rst for instructions on building Aithercoin QT,\n-the intended-for-end-users, nice-graphical-interface, reference\n-implementation of Aithercoin.\n+Use the autogen script to prepare the build environment.\n \n-See doc/build-*.txt for instructions on building aithercoind,\n+    ./autogen.sh\n+    ./configure\n+    make\n+\n+Precompiled binaries are available at github, see\n+https://github.com/aithercoin/aither-binaries\n+\n+Always verify the signatures and checksums.\n+\n+See doc/build-*.md for instructions on building aitherd,\n the intended-for-services, no-graphical-interface, reference\n-implementation of Aithercoin.\n+implementation of Aither."
      },
      {
        "sha": "2dbbb05ec6228a9c1a914d38930f97052cd79b6e",
        "filename": "Makefile",
        "status": "removed",
        "additions": 0,
        "deletions": 158,
        "changes": 158,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,158 +0,0 @@\n-#############################################################################\n-# Makefile for building: aithercoin-qt\n-# Generated by qmake (2.01a) (Qt 4.8.5) on: Thu May 3 13:45:44 2018\n-# Project:  Aithercoin-qt.pro\n-# Template: app\n-# Command: c:/Qt/4.8.5-everywhere/bin/qmake.exe -spec c:/Qt/4.8.5-everywhere/mkspecs/win32-g++ CONFIG+=release USE_UPNP=- USE_QRCODE=1 USE_IPV6=1 -o Makefile Aithercoin-qt.pro\n-#############################################################################\n-\n-first: release\n-install: release-install\n-uninstall: release-uninstall\n-MAKEFILE      = Makefile\n-QMAKE         = c:/Qt/4.8.5-everywhere/bin/qmake.exe\n-DEL_FILE      = rm\n-CHK_DIR_EXISTS= test -d\n-MKDIR         = mkdir -p\n-COPY          = cp\n-COPY_FILE     = $(COPY)\n-COPY_DIR      = cp -r\n-INSTALL_FILE  = $(COPY_FILE)\n-INSTALL_PROGRAM = $(COPY_FILE)\n-INSTALL_DIR   = $(COPY_DIR)\n-DEL_FILE      = rm\n-SYMLINK       = \n-DEL_DIR       = rmdir\n-MOVE          = mv\n-CHK_DIR_EXISTS= test -d\n-MKDIR         = mkdir -p\n-SUBTARGETS    =  \\\n-\t\trelease \\\n-\t\tdebug\n-\n-release: $(MAKEFILE).Release FORCE\n-\t$(MAKE) -f $(MAKEFILE).Release\n-release-make_default: $(MAKEFILE).Release FORCE\n-\t$(MAKE) -f $(MAKEFILE).Release \n-release-make_first: $(MAKEFILE).Release FORCE\n-\t$(MAKE) -f $(MAKEFILE).Release first\n-release-all: $(MAKEFILE).Release FORCE\n-\t$(MAKE) -f $(MAKEFILE).Release all\n-release-clean: $(MAKEFILE).Release FORCE\n-\t$(MAKE) -f $(MAKEFILE).Release clean\n-release-distclean: $(MAKEFILE).Release FORCE\n-\t$(MAKE) -f $(MAKEFILE).Release distclean\n-release-install: $(MAKEFILE).Release FORCE\n-\t$(MAKE) -f $(MAKEFILE).Release install\n-release-uninstall: $(MAKEFILE).Release FORCE\n-\t$(MAKE) -f $(MAKEFILE).Release uninstall\n-debug: $(MAKEFILE).Debug FORCE\n-\t$(MAKE) -f $(MAKEFILE).Debug\n-debug-make_default: $(MAKEFILE).Debug FORCE\n-\t$(MAKE) -f $(MAKEFILE).Debug \n-debug-make_first: $(MAKEFILE).Debug FORCE\n-\t$(MAKE) -f $(MAKEFILE).Debug first\n-debug-all: $(MAKEFILE).Debug FORCE\n-\t$(MAKE) -f $(MAKEFILE).Debug all\n-debug-clean: $(MAKEFILE).Debug FORCE\n-\t$(MAKE) -f $(MAKEFILE).Debug clean\n-debug-distclean: $(MAKEFILE).Debug FORCE\n-\t$(MAKE) -f $(MAKEFILE).Debug distclean\n-debug-install: $(MAKEFILE).Debug FORCE\n-\t$(MAKE) -f $(MAKEFILE).Debug install\n-debug-uninstall: $(MAKEFILE).Debug FORCE\n-\t$(MAKE) -f $(MAKEFILE).Debug uninstall\n-\n-Makefile: Aithercoin-qt.pro  c:/Qt/4.8.5-everywhere/mkspecs/win32-g++/qmake.conf c:/Qt/4.8.5-everywhere/mkspecs/features/device_config.prf \\\n-\t\tc:/Qt/4.8.5-everywhere/mkspecs/qconfig.pri \\\n-\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/qt_functions.prf \\\n-\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/qt_config.prf \\\n-\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/exclusive_builds.prf \\\n-\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/default_pre.prf \\\n-\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/win32/default_pre.prf \\\n-\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/release.prf \\\n-\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/debug_and_release.prf \\\n-\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/default_post.prf \\\n-\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/win32/default_post.prf \\\n-\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/win32/thread.prf \\\n-\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/win32/rtti.prf \\\n-\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/win32/exceptions.prf \\\n-\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/win32/stl.prf \\\n-\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/static.prf \\\n-\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/warn_on.prf \\\n-\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/qt.prf \\\n-\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/moc.prf \\\n-\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/win32/windows.prf \\\n-\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/resources.prf \\\n-\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/uic.prf \\\n-\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/yacc.prf \\\n-\t\tc:/Qt/4.8.5-everywhere/mkspecs/features/lex.prf \\\n-\t\tc:/Qt/4.8.5-everywhere/lib/qtmain.prl \\\n-\t\tc:/Qt/4.8.5-everywhere/lib/QtGui.prl \\\n-\t\tc:/Qt/4.8.5-everywhere/lib/QtCore.prl\n-\t$(QMAKE) -spec c:/Qt/4.8.5-everywhere/mkspecs/win32-g++ CONFIG+=release USE_UPNP=- USE_QRCODE=1 USE_IPV6=1 -o Makefile Aithercoin-qt.pro\n-c:/Qt/4.8.5-everywhere/mkspecs/features/device_config.prf:\n-c:/Qt/4.8.5-everywhere/mkspecs/qconfig.pri:\n-c:/Qt/4.8.5-everywhere/mkspecs/features/qt_functions.prf:\n-c:/Qt/4.8.5-everywhere/mkspecs/features/qt_config.prf:\n-c:/Qt/4.8.5-everywhere/mkspecs/features/exclusive_builds.prf:\n-c:/Qt/4.8.5-everywhere/mkspecs/features/default_pre.prf:\n-c:/Qt/4.8.5-everywhere/mkspecs/features/win32/default_pre.prf:\n-c:/Qt/4.8.5-everywhere/mkspecs/features/release.prf:\n-c:/Qt/4.8.5-everywhere/mkspecs/features/debug_and_release.prf:\n-c:/Qt/4.8.5-everywhere/mkspecs/features/default_post.prf:\n-c:/Qt/4.8.5-everywhere/mkspecs/features/win32/default_post.prf:\n-c:/Qt/4.8.5-everywhere/mkspecs/features/win32/thread.prf:\n-c:/Qt/4.8.5-everywhere/mkspecs/features/win32/rtti.prf:\n-c:/Qt/4.8.5-everywhere/mkspecs/features/win32/exceptions.prf:\n-c:/Qt/4.8.5-everywhere/mkspecs/features/win32/stl.prf:\n-c:/Qt/4.8.5-everywhere/mkspecs/features/static.prf:\n-c:/Qt/4.8.5-everywhere/mkspecs/features/warn_on.prf:\n-c:/Qt/4.8.5-everywhere/mkspecs/features/qt.prf:\n-c:/Qt/4.8.5-everywhere/mkspecs/features/moc.prf:\n-c:/Qt/4.8.5-everywhere/mkspecs/features/win32/windows.prf:\n-c:/Qt/4.8.5-everywhere/mkspecs/features/resources.prf:\n-c:/Qt/4.8.5-everywhere/mkspecs/features/uic.prf:\n-c:/Qt/4.8.5-everywhere/mkspecs/features/yacc.prf:\n-c:/Qt/4.8.5-everywhere/mkspecs/features/lex.prf:\n-c:\\Qt\\4.8.5-everywhere\\lib\\qtmain.prl:\n-c:\\Qt\\4.8.5-everywhere\\lib\\QtGui.prl:\n-c:\\Qt\\4.8.5-everywhere\\lib\\QtCore.prl:\n-qmake: qmake_all FORCE\n-\t@$(QMAKE) -spec c:/Qt/4.8.5-everywhere/mkspecs/win32-g++ CONFIG+=release USE_UPNP=- USE_QRCODE=1 USE_IPV6=1 -o Makefile Aithercoin-qt.pro\n-\n-qmake_all: FORCE\n-\n-make_default: release-make_default debug-make_default FORCE\n-make_first: release-make_first debug-make_first FORCE\n-all: release-all debug-all FORCE\n-clean: release-clean debug-clean FORCE\n-\t-$(DEL_FILE) D:/C++/aithercoin/src/leveldb/libleveldb.a;\n-\t-$(DEL_FILE) cd\n-\t-$(DEL_FILE) D:/C++/aithercoin/src/leveldb\n-\t-$(DEL_FILE) ;\n-\t-$(DEL_FILE) $(MAKE)\n-\t-$(DEL_FILE) clean\n-distclean: release-distclean debug-distclean FORCE\n-\t-$(DEL_FILE) Makefile\n-\n-D:/C++/aithercoin/src/leveldb/libleveldb.a: FORCE\n-\tcd D:/C++/aithercoin/src/leveldb && CC=gcc CXX=g++ TARGET_OS=OS_WINDOWS_CROSSCOMPILE $(MAKE) OPT=\"-pipe -O2\" libleveldb.a libmemenv.a && ranlib D:/C++/aithercoin/src/leveldb/libleveldb.a && ranlib D:/C++/aithercoin/src/leveldb/libmemenv.a\n-\n-check: first\n-\n-release-mocclean: $(MAKEFILE).Release\n-\t$(MAKE) -f $(MAKEFILE).Release mocclean\n-debug-mocclean: $(MAKEFILE).Debug\n-\t$(MAKE) -f $(MAKEFILE).Debug mocclean\n-mocclean: release-mocclean debug-mocclean\n-\n-release-mocables: $(MAKEFILE).Release\n-\t$(MAKE) -f $(MAKEFILE).Release mocables\n-debug-mocables: $(MAKEFILE).Debug\n-\t$(MAKE) -f $(MAKEFILE).Debug mocables\n-mocables: release-mocables debug-mocables\n-FORCE:\n-\n-$(MAKEFILE).Release: Makefile\n-$(MAKEFILE).Debug: Makefile"
      },
      {
        "sha": "654a127ba98e84bd10ae1daf263a833bae3850cb",
        "filename": "Makefile.am",
        "status": "added",
        "additions": 228,
        "deletions": 0,
        "changes": 228,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,228 @@\n+ACLOCAL_AMFLAGS = -I build-aux/m4\n+SUBDIRS = src\n+.PHONY: deploy FORCE\n+\n+GZIP_ENV=\"-9n\"\n+\n+if BUILD_BITCOIN_LIBS\n+pkgconfigdir = $(libdir)/pkgconfig\n+pkgconfig_DATA = libbitcoinconsensus.pc\n+endif\n+\n+BITCOIND_BIN=$(top_builddir)/src/aitherd$(EXEEXT)\n+BITCOIN_QT_BIN=$(top_builddir)/src/qt/aither-qt$(EXEEXT)\n+BITCOIN_CLI_BIN=$(top_builddir)/src/aither-cli$(EXEEXT)\n+BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win$(WINDOWS_BITS)-setup$(EXEEXT)\n+\n+OSX_APP=Aither-Qt.app\n+OSX_DMG=Aither-Core.dmg\n+OSX_BACKGROUND_IMAGE=background.tiff\n+OSX_DEPLOY_SCRIPT=$(top_srcdir)/contrib/macdeploy/macdeployqtplus\n+OSX_FANCY_PLIST=$(top_srcdir)/contrib/macdeploy/fancy.plist\n+OSX_BASE_LPROJ_DIR=$(top_srcdir)/contrib/macdeploy/Base.lproj/InfoPlist.strings\n+OSX_INSTALLER_ICONS=$(top_srcdir)/src/qt/res/icons/bitcoin.icns\n+OSX_PLIST=$(top_srcdir)/share/qt/Info.plist #not installed\n+OSX_QT_TRANSLATIONS = da,de,es,hu,ru,uk,zh_CN,zh_TW\n+\n+DIST_DOCS = $(wildcard doc/*.md) $(wildcard doc/release-notes/*.md)\n+\n+BIN_CHECKS=$(top_srcdir)/contrib/devtools/symbol-check.py \\\n+           $(top_srcdir)/contrib/devtools/security-check.py\n+\n+WINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/bitcoin.ico \\\n+  $(top_srcdir)/share/pixmaps/nsis-header.bmp \\\n+  $(top_srcdir)/share/pixmaps/nsis-wizard.bmp \\\n+  $(top_srcdir)/doc/README_windows.txt\n+\n+OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) $(OSX_BASE_LPROJ_DIR) \\\n+  $(top_srcdir)/contrib/macdeploy/$(OSX_BACKGROUND_IMAGE) \\\n+  $(top_srcdir)/contrib/macdeploy/DS_Store \\\n+  $(top_srcdir)/contrib/macdeploy/detached-sig-apply.sh \\\n+  $(top_srcdir)/contrib/macdeploy/detached-sig-create.sh\n+\n+COVERAGE_INFO = baseline_filtered_combined.info baseline.info block_test.info \\\n+  leveldb_baseline.info test_aither_filtered.info total_coverage.info \\\n+  baseline_filtered.info block_test_filtered.info rpc_test.info rpc_test_filtered.info \\\n+  leveldb_baseline_filtered.info test_aither_coverage.info test_aither.info\n+\n+dist-hook:\n+\t-$(MAKE) -C $(top_distdir)/src/leveldb clean\n+\t-$(MAKE) -C $(top_distdir)/src/secp256k1 distclean\n+\t-$(GIT) archive --format=tar HEAD -- src/clientversion.cpp | $(AMTAR) -C $(top_distdir) -xf -\n+\n+distcheck-hook:\n+\t$(MKDIR_P) $(top_distdir)/_build/src/leveldb\n+\tcp -rf $(top_srcdir)/src/leveldb/* $(top_distdir)/_build/src/leveldb/\n+\t-$(MAKE) -C $(top_distdir)/_build/src/leveldb clean\n+\n+distcleancheck:\n+\t@:\n+\n+$(BITCOIN_WIN_INSTALLER): all-recursive\n+\t$(MKDIR_P) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIND_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_QT_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_CLI_BIN) $(top_builddir)/release\n+\t@test -f $(MAKENSIS) && $(MAKENSIS) -V2 $(top_builddir)/share/setup.nsi || \\\n+\t  echo error: could not build $@\n+\t@echo built $@\n+\n+$(if $(findstring src/,$(MAKECMDGOALS)),$(MAKECMDGOALS), none): FORCE\n+\t$(MAKE) -C src $(patsubst src/%,%,$@)\n+\n+$(OSX_APP)/Contents/PkgInfo:\n+\t$(MKDIR_P) $(@D)\n+\t@echo \"APPL????\" > $@\n+\n+$(OSX_APP)/Contents/Resources/empty.lproj:\n+\t$(MKDIR_P) $(@D)\n+\t@touch $@ \n+\n+$(OSX_APP)/Contents/Info.plist: $(OSX_PLIST)\n+\t$(MKDIR_P) $(@D)\n+\t$(INSTALL_DATA) $< $@\n+\n+$(OSX_APP)/Contents/Resources/bitcoin.icns: $(OSX_INSTALLER_ICONS)\n+\t$(MKDIR_P) $(@D)\n+\t$(INSTALL_DATA) $< $@\n+\n+$(OSX_APP)/Contents/MacOS/Aither-Qt: $(BITCOIN_QT_BIN)\n+\t$(MKDIR_P) $(@D)\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM)  $< $@\n+\n+$(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings: $(OSX_BASE_LPROJ_DIR)\n+\t$(MKDIR_P) $(@D)\n+\t$(INSTALL_DATA) $< $@\n+\n+OSX_APP_BUILT=$(OSX_APP)/Contents/PkgInfo $(OSX_APP)/Contents/Resources/empty.lproj \\\n+  $(OSX_APP)/Contents/Resources/bitcoin.icns $(OSX_APP)/Contents/Info.plist \\\n+  $(OSX_APP)/Contents/MacOS/Aither-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings\n+\n+if BUILD_DARWIN\n+$(OSX_DMG): $(OSX_APP_BUILT) $(OSX_PACKAGING)\n+\t$(OSX_DEPLOY_SCRIPT) $(OSX_APP) -add-qt-tr $(OSX_QT_TRANSLATIONS) -translations-dir=$(QT_TRANSLATION_DIR) -dmg -fancy $(OSX_FANCY_PLIST) -verbose 2\n+\n+deploydir: $(OSX_DMG)\n+else\n+APP_DIST_DIR=$(top_builddir)/dist\n+APP_DIST_EXTRAS=$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE) $(APP_DIST_DIR)/.DS_Store $(APP_DIST_DIR)/Applications\n+\n+$(APP_DIST_DIR)/Applications:\n+\t@rm -f $@\n+\t@cd $(@D); $(LN_S) /Applications $(@F)\n+\n+$(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Aither-Qt\n+\n+$(OSX_DMG): $(APP_DIST_EXTRAS)\n+\t$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V \"Aither-Core\" -no-pad -r -dir-mode 0755 -apple -o $@ dist\n+\n+$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE): contrib/macdeploy/$(OSX_BACKGROUND_IMAGE)\n+\t$(MKDIR_P) $(@D)\n+\t$(INSTALL) $< $@\n+$(APP_DIST_DIR)/.DS_Store: contrib/macdeploy/DS_Store\n+\t$(INSTALL) $< $@\n+\n+$(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Aither-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)\n+\tINSTALLNAMETOOL=$(INSTALLNAMETOOL)  OTOOL=$(OTOOL) STRIP=$(STRIP) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -translations-dir=$(QT_TRANSLATION_DIR) -add-qt-tr $(OSX_QT_TRANSLATIONS) -verbose 2\n+\n+deploydir: $(APP_DIST_EXTRAS)\n+endif\n+\n+if TARGET_DARWIN\n+appbundle: $(OSX_APP_BUILT)\n+deploy: $(OSX_DMG)\n+endif\n+if TARGET_WINDOWS\n+deploy: $(BITCOIN_WIN_INSTALLER)\n+endif\n+\n+$(BITCOIN_QT_BIN): FORCE\n+\t$(MAKE) -C src qt/$(@F)\n+\n+$(BITCOIND_BIN): FORCE\n+\t$(MAKE) -C src $(@F)\n+\n+$(BITCOIN_CLI_BIN): FORCE\n+\t$(MAKE) -C src $(@F)\n+\n+if USE_LCOV\n+\n+baseline.info:\n+\t$(LCOV) -c -i -d $(abs_builddir)/src -o $@\n+\n+baseline_filtered.info: baseline.info\n+\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\n+leveldb_baseline.info: baseline_filtered.info\n+\t$(LCOV) -c -i -d $(abs_builddir)/src/leveldb -b $(abs_builddir)/src/leveldb -o $@\n+\n+leveldb_baseline_filtered.info: leveldb_baseline.info\n+\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\n+baseline_filtered_combined.info: leveldb_baseline_filtered.info baseline_filtered.info\n+\t$(LCOV) -a leveldb_baseline_filtered.info -a baseline_filtered.info -o $@\n+\n+test_aither.info: baseline_filtered_combined.info\n+\t$(MAKE) -C src/ check\n+\t$(LCOV) -c -d $(abs_builddir)/src -t test_aither -o $@\n+\t$(LCOV) -z -d $(abs_builddir)/src\n+\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n+\n+test_aither_filtered.info: test_aither.info\n+\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\n+block_test.info: test_aither_filtered.info\n+\t$(MKDIR_P) qa/tmp\n+\t-@TIMEOUT=15 qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS)\n+\t$(LCOV) -c -d $(abs_builddir)/src --t BitcoinJBlockTest -o $@\n+\t$(LCOV) -z -d $(abs_builddir)/src\n+\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n+\n+block_test_filtered.info: block_test.info\n+\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\n+rpc_test.info: test_aither_filtered.info\n+\t-@TIMEOUT=15 python qa/pull-tester/rpc-tests.py $(EXTENDED_RPC_TESTS)\n+\t$(LCOV) -c -d $(abs_builddir)/src --t rpc-tests -o $@\n+\t$(LCOV) -z -d $(abs_builddir)/src\n+\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n+\n+rpc_test_filtered.info: rpc_test.info\n+\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\n+test_aither_coverage.info: baseline_filtered_combined.info test_aither_filtered.info\n+\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_aither_filtered.info -o $@\n+\n+total_coverage.info: baseline_filtered_combined.info test_aither_filtered.info block_test_filtered.info rpc_test_filtered.info\n+\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_aither_filtered.info -a block_test_filtered.info -a rpc_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n+\n+test_aither.coverage/.dirstamp:  test_aither_coverage.info\n+\t$(GENHTML) -s $< -o $(@D)\n+\t@touch $@\n+\n+total.coverage/.dirstamp: total_coverage.info\n+\t$(GENHTML) -s $< -o $(@D)\n+\t@touch $@\n+\n+cov: test_aither.coverage/.dirstamp total.coverage/.dirstamp\n+\n+endif\n+\n+# Aither: disable the test until upstream switches from convoluted comparison tool\n+# Ref https://github.com/bitcoin/bitcoin/issues/4545\n+if USE_COMPARISON_TOOL\n+check-local:\n+\t## $(MKDIR_P) qa/tmp\n+\t## @qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS) 2>&1\n+endif\n+\n+dist_noinst_SCRIPTS = autogen.sh\n+\n+EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.py qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS)\n+\n+CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n+\n+.INTERMEDIATE: $(COVERAGE_INFO)\n+\n+clean-local:\n+\trm -rf coverage_percent.txt test_aither.coverage/ total.coverage/ qa/tmp/ cache/ $(OSX_APP)"
      },
      {
        "sha": "42061c01a1c70097d1e4579f29a5adf40abdec95",
        "filename": "README",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1 +0,0 @@\n-README.md\n\\ No newline at end of file"
      },
      {
        "sha": "b1d5c071135c2b68b868e66ffd60eda3cbff7f1e",
        "filename": "README.md",
        "status": "modified",
        "additions": 50,
        "deletions": 23,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -1,32 +1,59 @@\n+Aither Core staging tree 0.12.1\n+===============================\n \n-Aithercoin development tree\n+`master:` [![Build Status](https://travis-ci.org/aithercoin/aither.svg?branch=master)](https://travis-ci.org/aithercoin/aither) `develop:` [![Build Status](https://travis-ci.org/aithercoin/aither.svg?branch=develop)](https://travis-ci.org/aithercoin/aither/branches)\n \n-Aithercoin is a PoS-based cryptocurrency.\n+https://www.aithercoin.com\n \n-Development process\n-===========================\n \n-Developers work in their own trees, then submit pull requests when\n-they think their feature or bug fix is ready.\n+What is Aither?\n+----------------\n \n-The patch will be accepted if there is broad consensus that it is a\n-good thing.  Developers should expect to rework and resubmit patches\n-if they don't match the project's coding conventions (see coding.txt)\n-or are controversial.\n+Aither (AIT) is an innovative cryptocurrency. A form of digital currency secured by cryptography and issued through a decentralized and advanced mining market. Based on Dash, it's an enhanced and further developed version, featuring the masternode technology with 50% Reward, near-instant and secure payments as well as anonymous transactions. Aither has great potential for rapid growth and expansion. Based on a total Proof of Work and Masternode system, it is accesible to everyone, it ensures a fair and stable return of investment for the Graphics Processing Units (GPUs) miners and the Masternode holders.\n \n-The master branch is regularly built and tested, but is not guaranteed\n-to be completely stable. Tags are regularly created to indicate new\n-stable release versions of Aithercoin.\n+Additional information, wallets, specifications & roadmap: https://bitcointalk.org/index.php?topic=2442185.0\n \n-Feature branches are created when there are major new features being\n-worked on by several people.\n \n-From time to time a pull request will become outdated. If this occurs, and\n-the pull is no longer automatically mergeable; a comment on the pull will\n-be used to issue a warning of closure. The pull will be closed 15 days\n-after the warning if action is not taken by the author. Pull requests closed\n-in this manner will have their corresponding issue labeled 'stagnant'.\n+License\n+-------\n+\n+Aither Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n+information or see https://opensource.org/licenses/MIT.\n+\n+Development Process\n+-------------------\n+\n+The `master` branch is meant to be stable. Development is normally done in separate branches.\n+[Tags](https://github.com/aithercoin/aithercoin/tags) are created to indicate new official,\n+stable release versions of Aither Core.\n+\n+The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).\n+\n+Testing\n+-------\n+\n+Testing and code review is the bottleneck for development; we get more pull\n+requests than we can review and test on short notice. Please be patient and help out by testing\n+other people's pull requests, and remember this is a security-critical project where any mistake might cost people\n+lots of money.\n+\n+### Automated Testing\n+\n+Developers are strongly encouraged to write [unit tests](/doc/unit-tests.md) for new code, and to\n+submit new unit tests for old code. Unit tests can be compiled and run\n+(assuming they weren't disabled in configure) with: `make check`\n+\n+There are also [regression and integration tests](/qa) of the RPC interface, written\n+in Python, that are run automatically on the build server.\n+These tests can be run (if the [test dependencies](/qa) are installed) with: `qa/pull-tester/rpc-tests.py`\n+\n+The Travis CI system makes sure that every pull request is built for Windows\n+and Linux, OS X, and that unit and sanity tests are automatically run.\n+\n+### Manual Quality Assurance (QA) Testing\n+\n+Changes should be tested by somebody other than the developer who wrote the\n+code. This is especially important for large or high-risk changes. It is useful\n+to add a test plan to the pull request description if testing the changes is\n+not straightforward.\n \n-Issues with no commits will be given a similar warning, and closed after\n-15 days from their last activity. Issues closed in this manner will be \n-labeled 'stale'."
      },
      {
        "sha": "25360ebf3877d58d83cdd4301756c5b462b6018e",
        "filename": "aither-docs/protocol-documentation.md",
        "status": "added",
        "additions": 217,
        "deletions": 0,
        "changes": 217,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/aither-docs/protocol-documentation.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/aither-docs/protocol-documentation.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/aither-docs/protocol-documentation.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,217 @@\n+Protocol Documentation - 0.12.1\n+=====================================\n+\n+This document describes the protocol extensions for all additional functionality build into the Aither protocol. This doesn't include any of the Bitcoin procotol, which has been left in tact in the Aither project. For more information about the core protocol, please see https://en.bitcoin.it/w/index.php?title#Protocol_documentation&action#edit\n+\n+## Common Structures\n+\n+### Simple types\n+\n+uint256  => char[32]\n+\n+CScript => uchar[]\n+\n+### COutPoint\n+\n+Bitcoin Outpoint https://bitcoin.org/en/glossary/outpoint\n+\n+| Field Size | Field Name | Data type | Description |\n+| ---------- | ----------- | --------- | -------- |\n+| 32 | hash | uint256 | Hash of transactional output which is being referenced\n+| 4 | n | uint32_t | Index of transaction which is being referenced\n+\n+\n+### CTxIn\n+\n+Bitcoin Input https://bitcoin.org/en/glossary/input\n+\n+| Field Size | Field Name | Data type | Description |\n+| ---------- | ----------- | --------- | -------- |\n+| 36 | prevout | COutPoint | The previous output from an existing transaction, in the form of an unspent output\n+| 1+ | script length | var_int | The length of the signature script\n+| ? | script | CScript | The script which is validated for this input to be spent\n+| 4 | nSequence | uint_32t | Transaction version as defined by the sender. Intended for \"replacement\" of transactions when information is updated before inclusion into a block.\n+\n+### CTxOut\n+\n+Bitcoin Output https://bitcoin.org/en/glossary/output\n+\n+| Field Size | Field Name | Data type | Description |\n+| ---------- | ----------- | --------- | -------- |\n+| 8 | nValue | int64_t | Transfered value\n+| ? | scriptPubKey | CScript | The script for indicating what conditions must be fulfilled for this output to be further spent\n+\n+### CPubKey\n+\n+Bitcoin Public Key https://bitcoin.org/en/glossary/public-key\n+\n+| Field Size | Field Name | Data type | Description |\n+| ---------- | ----------- | --------- | -------- |\n+| 33-65 | vch | char[] | The public portion of a keypair which can be used to verify signatures made with the private portion of the keypair.\n+\n+## Message Types\n+\n+### MNANNOUNCE - \"mnb\"\n+\n+CMasternodeBroadcast\n+\n+Whenever a masternode comes online or a client is syncing, they will send this message which describes the masternode entry and how to validate messages from it.\n+\n+| Field Size | Field Name | Data type | Description |\n+| ---------- | ----------- | --------- | -------- |\n+| 41 | vin | CTxIn | The unspent output which is holding 1000 AIT\n+| # | addr | CService | Address of the main 1000 AIT unspent output\n+| 33-65 | pubKeyCollateralAddress | CPubKey | CPubKey of the main 1000 AIT unspent output\n+| 33-65 | pubKeyMasternode | CPubKey | CPubKey of the secondary signing key (For all other messaging other than announce message)\n+| 71-73 | sig | char[] | Signature of this message\n+| 8 | sigTime | int64_t | Time which the signature was created\n+| 4 | nProtocolVersion | int | The protocol version of the masternode\n+| # | lastPing | CMasternodePing | The last known ping of the masternode\n+| 8 | nLastDsq | int64_t | The last time the masternode sent a DSQ message (for mixing) (DEPRECATED)\n+\n+### MNPING - \"mnp\"\n+\n+CMasternodePing\n+\n+Every few minutes, masternodes ping the network with a message that propagates the whole network.\n+\n+| Field Size | Field Name | Data type | Description |\n+| ---------- | ----------- | --------- | -------- |\n+| 41 | vin | CTxIn | The unspent output of the masternode which is signing the message\n+| 32 | blockHash | uint256 | Current chaintip blockhash minus 12\n+| 8 | sigTime | int64_t | Signature time for this ping\n+| 71-73 | vchSig | char[] | Signature of this message by masternode (verifiable via pubKeyMasternode)\n+\n+### MASTERNODEPAYMENTVOTE - \"mnw\"\n+\n+CMasternodePaymentVote\n+\n+When a new block is found on the network, a masternode quorum will be determined and those 10 selected masternodes will issue a masternode payment vote message to pick the next winning node.\n+\n+| Field Size | Field Name | Data type | Description |\n+| ---------- | ----------- | --------- | -------- |\n+| 41 | vinMasternode | CTxIn | The unspent output of the masternode which is signing the message\n+| 4 | nBlockHeight | int | The blockheight which the payee should be paid\n+| ? | payeeAddress | CScript | The address to pay to\n+| 71-73 | sig | char[] | Signature of the masternode which is signing the message\n+\n+### DSTX - \"dstx\"\n+\n+CDarksendBroadcastTx\n+\n+Masternodes can broadcast subsidised transactions without fees for the sake of security in mixing. This is done via the DSTX message.\n+\n+| Field Size | Field Name | Data type | Description |\n+| ---------- | ----------- | --------- | -------- |\n+| # | tx | CTransaction | The transaction\n+| 41 | vin | CTxIn | Masternode unspent output\n+| 71-73 | vchSig | char[] | Signature of this message by masternode (verifiable via pubKeyMasternode)\n+| 8 | sigTime | int64_t | Time this message was signed\n+\n+### DSSTATUSUPDATE - \"dssu\"\n+\n+Mixing pool status update\n+\n+| Field Size | Field Name | Data type | Description |\n+| ---------- | ----------- | --------- | -------- |\n+| 4 | nMsgSessionID | int | Session ID\n+| 4 | nMsgState | int | Current state of mixing process\n+| 4 | nMsgEntriesCount | int | Number of entries in the mixing pool\n+| 4 | nMsgStatusUpdate | int | Update state and/or signal if entry was accepted or not\n+| 4 | nMsgMessageID | int | ID of the typical masternode reply message\n+\n+### DSQUEUE - \"dsq\"\n+\n+CDarksendQueue\n+\n+Asks users to sign final mixing tx message.\n+\n+| Field Size | Field Name | Data type | Description |\n+| ---------- | ----------- | --------- | -------- |\n+| 4 | nDenom | int | Which denomination is allowed in this mixing session\n+| 41 | vin | CTxIn | unspend output from masternode which is hosting this session\n+| 4 | nTime | int | the time this DSQ was created\n+| 4 | fReady | int | if the mixing pool is ready to be executed\n+| 71-73 | vchSig | char[] | Signature of this message by masternode (verifiable via pubKeyMasternode)\n+\n+### DSACCEPT - \"dsa\"\n+\n+Response to DSQ message which allows the user to join a mixing pool\n+\n+| Field Size | Field Name | Data type | Description |\n+| ---------- | ----------- | --------- | -------- |\n+| 4 | nDenom | int | denomination that will be exclusively used when submitting inputs into the pool\n+| 41+ | txCollateral | int | collateral tx that will be charged if this client acts maliciousely\n+\n+### DSVIN - \"dsi\"\n+\n+CDarkSendEntry\n+\n+When queue is ready user is expected to send his entry to start actual mixing\n+\n+| Field Size | Field Name | Data type | Description |\n+| ---------- | ----------- | --------- | -------- |\n+| ? | vecTxDSIn | CTxDSIn[] | vector of users inputs (CTxDSIn serialization is equal to CTxIn serialization)\n+| 8 | nAmount | int64_t | depreciated since 12.1, it's used for backwards compatibility only and can be removed with future protocol bump\n+| ? | txCollateral | CTransaction | Collateral transaction which is used to prevent misbehavior and also to charge fees randomly\n+| ? | vecTxDSOut | CTxDSOut[] | vector of user outputs (CTxDSOut serialization is equal to CTxOut serialization)\n+\n+### DSSIGNFINALTX - \"dss\"\n+\n+User's signed inputs for a group transaction in a mixing session\n+\n+| Field Size | Field Name | Data type | Description |\n+| ---------- | ----------- | --------- | -------- |\n+| # | inputs | CTxIn[] | signed inputs for mixing session\n+\n+\n+### TXLOCKREQUEST - \"ix\"\n+\n+CTxLockRequest\n+\n+Transaction Lock Request, serialization is the same as for CTransaction.\n+\n+### TXLOCKVOTE - \"txlvote\"\n+\n+CTxLockVote\n+\n+Transaction Lock Vote\n+\n+| Field Size | Field Name | Data type | Description |\n+| ---------- | ----------- | --------- | -------- |\n+| 32 | txHash | uint256 | txid of the transaction to lock\n+| 36 | outpoint | COutPoint | The utxo to lock in this transaction\n+| 36 | outpointMasternode | COutPoint | The utxo of the masternode which is signing the vote\n+| 71-73 | vchMasternodeSignature | char[] | Signature of this message by masternode (verifiable via pubKeyMasternode)\n+\n+### MNGOVERNANCEOBJECT - \"govobj\"\n+\n+Governance Object\n+\n+A proposal, contract or setting.\n+\n+| Field Size | Field Name | Data type | Description |\n+| ---------- | ----------- | --------- | -------- |\n+| 32 | nHashParent | uint256 | Parent object, 0 is root\n+| 4 | nRevision | int | Object revision in the system\n+| 8 | nTime | int64_t | Time which this object was created\n+| 32 | nCollateralHash | uint256 | Hash of the collateral fee transaction\n+| 0-16384 | strData | string | Data field - can be used for anything\n+| 4 | nObjectType | int | ????\n+| 41 | vinMasternode | CTxIn | Unspent output for the masternode which is signing this object\n+| 71-73 | vchSig | char[] | Signature of the masternode\n+\n+### MNGOVERNANCEOBJECTVOTE - \"govobjvote\"\n+\n+Governance Vote\n+\n+Masternodes use governance voting in response to new proposals, contracts, settings or finalized budgets.\n+\n+| Field Size | Field Name | Data type | Description |\n+| ---------- | ----------- | --------- | -------- |\n+| 41+ | vinMasternode | CTxIn | Unspent output for the masternode which is voting\n+| 32 | nParentHash | uint256 | Object which we're voting on (proposal, contract, setting or final budget)\n+| 4 | nVoteOutcome | int | ???\n+| 4 | nVoteSignal | int | ???\n+| 8 | nTime | int64_t | Time which the vote was created\n+| 71-73 | vchSig | char[] | Signature of the masternode"
      },
      {
        "sha": "3e26a183059c059277632e0cca9d11c3b1836f31",
        "filename": "autogen.sh",
        "status": "added",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/autogen.sh?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,9 @@\n+#!/bin/sh\n+set -e\n+srcdir=\"$(dirname $0)\"\n+cd \"$srcdir\"\n+if [ -z ${LIBTOOLIZE} ] && GLIBTOOLIZE=\"`which glibtoolize 2>/dev/null`\"; then\n+  LIBTOOLIZE=\"${GLIBTOOLIZE}\"\n+  export LIBTOOLIZE\n+fi\n+autoreconf --install --force --warnings=all"
      },
      {
        "sha": "3f24d5ddc617b769904edb52095084ad36480dd5",
        "filename": "build-aux/m4/ax_boost_base.m4",
        "status": "added",
        "additions": 281,
        "deletions": 0,
        "changes": 281,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/ax_boost_base.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/ax_boost_base.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_base.m4?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,281 @@\n+# ===========================================================================\n+#       http://www.gnu.org/software/autoconf-archive/ax_boost_base.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_BASE([MINIMUM-VERSION], [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n+#\n+# DESCRIPTION\n+#\n+#   Test for the Boost C++ libraries of a particular version (or newer)\n+#\n+#   If no path to the installed boost library is given the macro searchs\n+#   under /usr, /usr/local, /opt and /opt/local and evaluates the\n+#   $BOOST_ROOT environment variable. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_CPPFLAGS) / AC_SUBST(BOOST_LDFLAGS)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2009 Peter Adolphs\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 23\n+\n+AC_DEFUN([AX_BOOST_BASE],\n+[\n+AC_ARG_WITH([boost],\n+  [AS_HELP_STRING([--with-boost@<:@=ARG@:>@],\n+    [use Boost library from a standard location (ARG=yes),\n+     from the specified location (ARG=<path>),\n+     or disable it (ARG=no)\n+     @<:@ARG=yes@:>@ ])],\n+    [\n+    if test \"$withval\" = \"no\"; then\n+        want_boost=\"no\"\n+    elif test \"$withval\" = \"yes\"; then\n+        want_boost=\"yes\"\n+        ac_boost_path=\"\"\n+    else\n+        want_boost=\"yes\"\n+        ac_boost_path=\"$withval\"\n+    fi\n+    ],\n+    [want_boost=\"yes\"])\n+\n+\n+AC_ARG_WITH([boost-libdir],\n+        AS_HELP_STRING([--with-boost-libdir=LIB_DIR],\n+        [Force given directory for boost libraries. Note that this will override library path detection, so use this parameter only if default library detection fails and you know exactly where your boost libraries are located.]),\n+        [\n+        if test -d \"$withval\"\n+        then\n+                ac_boost_lib_path=\"$withval\"\n+        else\n+                AC_MSG_ERROR(--with-boost-libdir expected directory name)\n+        fi\n+        ],\n+        [ac_boost_lib_path=\"\"]\n+)\n+\n+if test \"x$want_boost\" = \"xyes\"; then\n+    boost_lib_version_req=ifelse([$1], ,1.20.0,$1)\n+    boost_lib_version_req_shorten=`expr $boost_lib_version_req : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n+    boost_lib_version_req_major=`expr $boost_lib_version_req : '\\([[0-9]]*\\)'`\n+    boost_lib_version_req_minor=`expr $boost_lib_version_req : '[[0-9]]*\\.\\([[0-9]]*\\)'`\n+    boost_lib_version_req_sub_minor=`expr $boost_lib_version_req : '[[0-9]]*\\.[[0-9]]*\\.\\([[0-9]]*\\)'`\n+    if test \"x$boost_lib_version_req_sub_minor\" = \"x\" ; then\n+        boost_lib_version_req_sub_minor=\"0\"\n+        fi\n+    WANT_BOOST_VERSION=`expr $boost_lib_version_req_major \\* 100000 \\+  $boost_lib_version_req_minor \\* 100 \\+ $boost_lib_version_req_sub_minor`\n+    AC_MSG_CHECKING(for boostlib >= $boost_lib_version_req)\n+    succeeded=no\n+\n+    dnl On 64-bit systems check for system libraries in both lib64 and lib.\n+    dnl The former is specified by FHS, but e.g. Debian does not adhere to\n+    dnl this (as it rises problems for generic multi-arch support).\n+    dnl The last entry in the list is chosen by default when no libraries\n+    dnl are found, e.g. when only header-only libraries are installed!\n+    libsubdirs=\"lib\"\n+    ax_arch=`uname -m`\n+    case $ax_arch in\n+      x86_64)\n+        libsubdirs=\"lib64 libx32 lib lib64\"\n+        ;;\n+      ppc64|s390x|sparc64|aarch64)\n+        libsubdirs=\"lib64 lib lib64\"\n+        ;;\n+    esac\n+\n+    dnl allow for real multi-arch paths e.g. /usr/lib/x86_64-linux-gnu. Give\n+    dnl them priority over the other paths since, if libs are found there, they\n+    dnl are almost assuredly the ones desired.\n+    AC_REQUIRE([AC_CANONICAL_HOST])\n+    libsubdirs=\"lib/${host_cpu}-${host_os} $libsubdirs\"\n+\n+    case ${host_cpu} in\n+      i?86)\n+        libsubdirs=\"lib/i386-${host_os} $libsubdirs\"\n+        ;;\n+    esac\n+\n+    dnl some arches may advertise a cpu type that doesn't line up with their\n+    dnl prefix's cpu type. For example, uname may report armv7l while libs are\n+    dnl installed to /usr/lib/arm-linux-gnueabihf. Try getting the compiler's\n+    dnl value for an extra chance of finding the correct path.\n+    libsubdirs=\"lib/`$CXX -dumpmachine 2>/dev/null` $libsubdirs\"\n+\n+    dnl first we check the system location for boost libraries\n+    dnl this location ist chosen if boost libraries are installed with the --layout=system option\n+    dnl or if you install boost with RPM\n+    if test \"$ac_boost_path\" != \"\"; then\n+        BOOST_CPPFLAGS=\"-I$ac_boost_path/include\"\n+        for ac_boost_path_tmp in $libsubdirs; do\n+                if test -d \"$ac_boost_path\"/\"$ac_boost_path_tmp\" ; then\n+                        BOOST_LDFLAGS=\"-L$ac_boost_path/$ac_boost_path_tmp\"\n+                        break\n+                fi\n+        done\n+    elif test \"$cross_compiling\" != yes; then\n+        for ac_boost_path_tmp in /usr /usr/local /opt /opt/local ; do\n+            if test -d \"$ac_boost_path_tmp/include/boost\" && test -r \"$ac_boost_path_tmp/include/boost\"; then\n+                for libsubdir in $libsubdirs ; do\n+                    if ls \"$ac_boost_path_tmp/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+                done\n+                BOOST_LDFLAGS=\"-L$ac_boost_path_tmp/$libsubdir\"\n+                BOOST_CPPFLAGS=\"-I$ac_boost_path_tmp/include\"\n+                break;\n+            fi\n+        done\n+    fi\n+\n+    dnl overwrite ld flags if we have required special directory with\n+    dnl --with-boost-libdir parameter\n+    if test \"$ac_boost_lib_path\" != \"\"; then\n+       BOOST_LDFLAGS=\"-L$ac_boost_lib_path\"\n+    fi\n+\n+    CPPFLAGS_SAVED=\"$CPPFLAGS\"\n+    CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+    export CPPFLAGS\n+\n+    LDFLAGS_SAVED=\"$LDFLAGS\"\n+    LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+    export LDFLAGS\n+\n+    AC_REQUIRE([AC_PROG_CXX])\n+    AC_LANG_PUSH(C++)\n+        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    @%:@include <boost/version.hpp>\n+    ]], [[\n+    #if BOOST_VERSION >= $WANT_BOOST_VERSION\n+    // Everything is okay\n+    #else\n+    #  error Boost version is too old\n+    #endif\n+    ]])],[\n+        AC_MSG_RESULT(yes)\n+    succeeded=yes\n+    found_system=yes\n+        ],[:\n+        ])\n+    AC_LANG_POP([C++])\n+\n+\n+\n+    dnl if we found no boost with system layout we search for boost libraries\n+    dnl built and installed without the --layout=system option or for a staged(not installed) version\n+    if test \"x$succeeded\" != \"xyes\"; then\n+        _version=0\n+        if test \"$ac_boost_path\" != \"\"; then\n+            if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n+                for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do\n+                    _version_tmp=`echo $i | sed \"s#$ac_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n+                    V_CHECK=`expr $_version_tmp \\> $_version`\n+                    if test \"$V_CHECK\" = \"1\" ; then\n+                        _version=$_version_tmp\n+                    fi\n+                    VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n+                    BOOST_CPPFLAGS=\"-I$ac_boost_path/include/boost-$VERSION_UNDERSCORE\"\n+                done\n+            fi\n+        else\n+            if test \"$cross_compiling\" != yes; then\n+                for ac_boost_path in /usr /usr/local /opt /opt/local ; do\n+                    if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n+                        for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do\n+                            _version_tmp=`echo $i | sed \"s#$ac_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n+                            V_CHECK=`expr $_version_tmp \\> $_version`\n+                            if test \"$V_CHECK\" = \"1\" ; then\n+                                _version=$_version_tmp\n+                                best_path=$ac_boost_path\n+                            fi\n+                        done\n+                    fi\n+                done\n+\n+                VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n+                BOOST_CPPFLAGS=\"-I$best_path/include/boost-$VERSION_UNDERSCORE\"\n+                if test \"$ac_boost_lib_path\" = \"\"; then\n+                    for libsubdir in $libsubdirs ; do\n+                        if ls \"$best_path/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+                    done\n+                    BOOST_LDFLAGS=\"-L$best_path/$libsubdir\"\n+                fi\n+            fi\n+\n+            if test \"x$BOOST_ROOT\" != \"x\"; then\n+                for libsubdir in $libsubdirs ; do\n+                    if ls \"$BOOST_ROOT/stage/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+                done\n+                if test -d \"$BOOST_ROOT\" && test -r \"$BOOST_ROOT\" && test -d \"$BOOST_ROOT/stage/$libsubdir\" && test -r \"$BOOST_ROOT/stage/$libsubdir\"; then\n+                    version_dir=`expr //$BOOST_ROOT : '.*/\\(.*\\)'`\n+                    stage_version=`echo $version_dir | sed 's/boost_//' | sed 's/_/./g'`\n+                        stage_version_shorten=`expr $stage_version : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n+                    V_CHECK=`expr $stage_version_shorten \\>\\= $_version`\n+                    if test \"$V_CHECK\" = \"1\" -a \"$ac_boost_lib_path\" = \"\" ; then\n+                        AC_MSG_NOTICE(We will use a staged boost library from $BOOST_ROOT)\n+                        BOOST_CPPFLAGS=\"-I$BOOST_ROOT\"\n+                        BOOST_LDFLAGS=\"-L$BOOST_ROOT/stage/$libsubdir\"\n+                    fi\n+                fi\n+            fi\n+        fi\n+\n+        CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+        export CPPFLAGS\n+        LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+        export LDFLAGS\n+\n+        AC_LANG_PUSH(C++)\n+            AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        @%:@include <boost/version.hpp>\n+        ]], [[\n+        #if BOOST_VERSION >= $WANT_BOOST_VERSION\n+        // Everything is okay\n+        #else\n+        #  error Boost version is too old\n+        #endif\n+        ]])],[\n+            AC_MSG_RESULT(yes)\n+        succeeded=yes\n+        found_system=yes\n+            ],[:\n+            ])\n+        AC_LANG_POP([C++])\n+    fi\n+\n+    if test \"$succeeded\" != \"yes\" ; then\n+        if test \"$_version\" = \"0\" ; then\n+            AC_MSG_NOTICE([[We could not detect the boost libraries (version $boost_lib_version_req_shorten or higher). If you have a staged boost library (still not installed) please specify \\$BOOST_ROOT in your environment and do not give a PATH to --with-boost option.  If you are sure you have boost installed, then check your version number looking in <boost/version.hpp>. See http://randspringer.de/boost for more documentation.]])\n+        else\n+            AC_MSG_NOTICE([Your boost libraries seems to old (version $_version).])\n+        fi\n+        # execute ACTION-IF-NOT-FOUND (if present):\n+        ifelse([$3], , :, [$3])\n+    else\n+        AC_SUBST(BOOST_CPPFLAGS)\n+        AC_SUBST(BOOST_LDFLAGS)\n+        AC_DEFINE(HAVE_BOOST,,[define if the Boost library is available])\n+        # execute ACTION-IF-FOUND (if present):\n+        ifelse([$2], , :, [$2])\n+    fi\n+\n+    CPPFLAGS=\"$CPPFLAGS_SAVED\"\n+    LDFLAGS=\"$LDFLAGS_SAVED\"\n+fi\n+\n+])"
      },
      {
        "sha": "318ecea17fab84b7bbc24ded70bcb27be749d603",
        "filename": "build-aux/m4/ax_boost_chrono.m4",
        "status": "added",
        "additions": 119,
        "deletions": 0,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/ax_boost_chrono.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/ax_boost_chrono.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_chrono.m4?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,119 @@\n+# ===========================================================================\n+#      http://www.gnu.org/software/autoconf-archive/ax_boost_chrono.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_CHRONO\n+#\n+# DESCRIPTION\n+#\n+#   Test for System library from the Boost C++ libraries. The macro requires\n+#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_CHRONO_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_CHRONO\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2012 Xiyue Deng <manphiz@gmail.com>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 1\n+\n+AC_DEFUN([AX_BOOST_CHRONO],\n+[\n+\tAC_ARG_WITH([boost-chrono],\n+\tAS_HELP_STRING([--with-boost-chrono@<:@=special-lib@:>@],\n+                   [use the Chrono library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-chrono=boost_chrono-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_chrono_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_chrono_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+        AC_REQUIRE([AC_CANONICAL_BUILD])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::Chrono library is available,\n+\t\t\t\t\t   ax_cv_boost_chrono,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+\n+\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/chrono.hpp>]],\n+                                   [[boost::chrono::system_clock::time_point time;]])],\n+                   ax_cv_boost_chrono=yes, ax_cv_boost_chrono=no)\n+\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n+             AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_chrono\" = \"xyes\"; then\n+\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n+\n+\t\t\tAC_DEFINE(HAVE_BOOST_CHRONO,,[define if the Boost::Chrono library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+\t\t\tLDFLAGS_SAVE=$LDFLAGS\n+            if test \"x$ax_boost_user_chrono_lib\" = \"x\"; then\n+                ax_lib=\n+                for libextension in `ls $BOOSTLIBDIR/libboost_chrono*.so* $BOOSTLIBDIR/libboost_chrono*.dylib* $BOOSTLIBDIR/libboost_chrono*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_chrono.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.a.*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n+                                 [link_chrono=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_chrono\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_chrono*.dll* $BOOSTLIBDIR/boost_chrono*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_chrono.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_chrono.*\\)\\.a.*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n+                                 [link_chrono=\"no\"])\n+\t\t\t\tdone\n+                fi\n+\n+            else\n+               for ax_lib in $ax_boost_user_chrono_lib boost_chrono-$ax_boost_user_chrono_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n+                                   [link_chrono=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the boost_chrono library!)\n+            fi\n+\t\t\tif test \"x$link_chrono\" = \"xno\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "f5c9d56470bf9659b2c38c677c946d37c32be206",
        "filename": "build-aux/m4/ax_boost_filesystem.m4",
        "status": "added",
        "additions": 119,
        "deletions": 0,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/ax_boost_filesystem.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/ax_boost_filesystem.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_filesystem.m4?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,119 @@\n+# ===========================================================================\n+#    http://www.gnu.org/software/autoconf-archive/ax_boost_filesystem.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_FILESYSTEM\n+#\n+# DESCRIPTION\n+#\n+#   Test for Filesystem library from the Boost C++ libraries. The macro\n+#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n+#   available at <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_FILESYSTEM_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_FILESYSTEM\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2009 Michael Tindal\n+#   Copyright (c) 2009 Roman Rybalko <libtorrent@romanr.info>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 26\n+\n+AC_DEFUN([AX_BOOST_FILESYSTEM],\n+[\n+\tAC_ARG_WITH([boost-filesystem],\n+\tAS_HELP_STRING([--with-boost-filesystem@<:@=special-lib@:>@],\n+                   [use the Filesystem library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-filesystem=boost_filesystem-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_filesystem_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_filesystem_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+\t\tLIBS_SAVED=$LIBS\n+\t\tLIBS=\"$LIBS $BOOST_SYSTEM_LIB\"\n+\t\texport LIBS\n+\n+        AC_CACHE_CHECK(whether the Boost::Filesystem library is available,\n+\t\t\t\t\t   ax_cv_boost_filesystem,\n+        [AC_LANG_PUSH([C++])\n+         AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/filesystem/path.hpp>]],\n+                                   [[using namespace boost::filesystem;\n+                                   path my_path( \"foo/bar/data.txt\" );\n+                                   return 0;]])],\n+\t\t\t\t\t       ax_cv_boost_filesystem=yes, ax_cv_boost_filesystem=no)\n+         AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_filesystem\" = \"xyes\"; then\n+\t\t\tAC_DEFINE(HAVE_BOOST_FILESYSTEM,,[define if the Boost::Filesystem library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+            ax_lib=\n+            if test \"x$ax_boost_user_filesystem_lib\" = \"x\"; then\n+                for libextension in `ls -r $BOOSTLIBDIR/libboost_filesystem* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n+                                 [link_filesystem=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_filesystem\" != \"xyes\"; then\n+                for libextension in `ls -r $BOOSTLIBDIR/boost_filesystem* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\\..*,,'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n+                                 [link_filesystem=\"no\"])\n+\t\t\t\tdone\n+\t\t    fi\n+            else\n+               for ax_lib in $ax_boost_user_filesystem_lib boost_filesystem-$ax_boost_user_filesystem_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n+                                   [link_filesystem=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the boost_filesystem library!)\n+            fi\n+\t\t\tif test \"x$link_filesystem\" != \"xyes\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\t\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\t\tLIBS=\"$LIBS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "f591441854f59863049a28feb0b89b991ec32ef3",
        "filename": "build-aux/m4/ax_boost_program_options.m4",
        "status": "added",
        "additions": 109,
        "deletions": 0,
        "changes": 109,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/ax_boost_program_options.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/ax_boost_program_options.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_program_options.m4?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,109 @@\n+# ============================================================================\n+#  http://www.gnu.org/software/autoconf-archive/ax_boost_program_options.html\n+# ============================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_PROGRAM_OPTIONS\n+#\n+# DESCRIPTION\n+#\n+#   Test for program options library from the Boost C++ libraries. The macro\n+#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n+#   available at <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_PROGRAM_OPTIONS\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 22\n+\n+AC_DEFUN([AX_BOOST_PROGRAM_OPTIONS],\n+[\n+\tAC_ARG_WITH([boost-program-options],\n+\t\tAS_HELP_STRING([--with-boost-program-options@<:@=special-lib@:>@],\n+                       [use the program options library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-program-options=boost_program_options-gcc-mt-1_33_1 ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_program_options_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_program_options_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+\t    export want_boost\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\t\tAC_CACHE_CHECK([whether the Boost::Program_Options library is available],\n+\t\t\t\t\t   ax_cv_boost_program_options,\n+\t\t\t\t\t   [AC_LANG_PUSH(C++)\n+\t\t\t\tAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/program_options.hpp>\n+                                                          ]],\n+                                  [[boost::program_options::options_description generic(\"Generic options\");\n+                                   return 0;]])],\n+                           ax_cv_boost_program_options=yes, ax_cv_boost_program_options=no)\n+\t\t\t\t\tAC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"$ax_cv_boost_program_options\" = yes; then\n+\t\t\t\tAC_DEFINE(HAVE_BOOST_PROGRAM_OPTIONS,,[define if the Boost::PROGRAM_OPTIONS library is available])\n+                  BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+                if test \"x$ax_boost_user_program_options_lib\" = \"x\"; then\n+                ax_lib=\n+                for libextension in `ls $BOOSTLIBDIR/libboost_program_options*.so* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.so.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_program_options*.dylib* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.dylib.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_program_options*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.a.*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n+                                 [link_program_options=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_program_options\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_program_options*.dll* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_program_options.*\\)\\.dll.*$;\\1;'` `ls $BOOSTLIBDIR/boost_program_options*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_program_options.*\\)\\.a.*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n+                                 [link_program_options=\"no\"])\n+\t\t\t\tdone\n+                fi\n+                else\n+                  for ax_lib in $ax_boost_user_program_options_lib boost_program_options-$ax_boost_user_program_options_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, main,\n+                                   [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n+                                   [link_program_options=\"no\"])\n+                  done\n+                fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the boost_program_options library!)\n+            fi\n+\t\t\t\tif test \"x$link_program_options\" != \"xyes\"; then\n+\t\t\t\t\tAC_MSG_ERROR([Could not link against [$ax_lib] !])\n+\t\t\t\tfi\n+\t\tfi\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "9c78280fcae472e022bc2c45afa11ceb70167681",
        "filename": "build-aux/m4/ax_boost_system.m4",
        "status": "added",
        "additions": 121,
        "deletions": 0,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/ax_boost_system.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/ax_boost_system.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_system.m4?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,121 @@\n+# ===========================================================================\n+#      http://www.gnu.org/software/autoconf-archive/ax_boost_system.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_SYSTEM\n+#\n+# DESCRIPTION\n+#\n+#   Test for System library from the Boost C++ libraries. The macro requires\n+#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_SYSTEM_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_SYSTEM\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2008 Michael Tindal\n+#   Copyright (c) 2008 Daniel Casimiro <dan.casimiro@gmail.com>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 17\n+\n+AC_DEFUN([AX_BOOST_SYSTEM],\n+[\n+\tAC_ARG_WITH([boost-system],\n+\tAS_HELP_STRING([--with-boost-system@<:@=special-lib@:>@],\n+                   [use the System library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-system=boost_system-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_system_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_system_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+        AC_REQUIRE([AC_CANONICAL_BUILD])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::System library is available,\n+\t\t\t\t\t   ax_cv_boost_system,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+\n+\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/system/error_code.hpp>]],\n+                                   [[boost::system::system_category]])],\n+                   ax_cv_boost_system=yes, ax_cv_boost_system=no)\n+\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n+             AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_system\" = \"xyes\"; then\n+\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n+\n+\t\t\tAC_DEFINE(HAVE_BOOST_SYSTEM,,[define if the Boost::System library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+\t\t\tLDFLAGS_SAVE=$LDFLAGS\n+            if test \"x$ax_boost_user_system_lib\" = \"x\"; then\n+                ax_lib=\n+                for libextension in `ls -r $BOOSTLIBDIR/libboost_system* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n+                                 [link_system=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_system\" != \"xyes\"; then\n+                for libextension in `ls -r $BOOSTLIBDIR/boost_system* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\\..*,,'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n+                                 [link_system=\"no\"])\n+\t\t\t\tdone\n+                fi\n+\n+            else\n+               for ax_lib in $ax_boost_user_system_lib boost_system-$ax_boost_user_system_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n+                                   [link_system=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the boost_system library!)\n+            fi\n+\t\t\tif test \"x$link_system\" = \"xno\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "9f0bd0b23c9b0caba987ba96080f7696643a8d5d",
        "filename": "build-aux/m4/ax_boost_thread.m4",
        "status": "added",
        "additions": 150,
        "deletions": 0,
        "changes": 150,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/ax_boost_thread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/ax_boost_thread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_thread.m4?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,150 @@\n+# ===========================================================================\n+#      http://www.gnu.org/software/autoconf-archive/ax_boost_thread.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_THREAD\n+#\n+# DESCRIPTION\n+#\n+#   Test for Thread library from the Boost C++ libraries. The macro requires\n+#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_THREAD_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_THREAD\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2009 Michael Tindal\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 27\n+\n+AC_DEFUN([AX_BOOST_THREAD],\n+[\n+\tAC_ARG_WITH([boost-thread],\n+\tAS_HELP_STRING([--with-boost-thread@<:@=special-lib@:>@],\n+                   [use the Thread library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-thread=boost_thread-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_thread_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_thread_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+        AC_REQUIRE([AC_CANONICAL_BUILD])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::Thread library is available,\n+\t\t\t\t\t   ax_cv_boost_thread,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+\n+\t\t\t if test \"x$host_os\" = \"xsolaris\" ; then\n+\t\t\t\t CXXFLAGS=\"-pthreads $CXXFLAGS\"\n+\t\t\t elif test \"x$host_os\" = \"xmingw32\" ; then\n+\t\t\t\t CXXFLAGS=\"-mthreads $CXXFLAGS\"\n+\t\t\t else\n+\t\t\t\tCXXFLAGS=\"-pthread $CXXFLAGS\"\n+\t\t\t fi\n+\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/thread/thread.hpp>]],\n+                                   [[boost::thread_group thrds;\n+                                   return 0;]])],\n+                   ax_cv_boost_thread=yes, ax_cv_boost_thread=no)\n+\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n+             AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_thread\" = \"xyes\"; then\n+           if test \"x$host_os\" = \"xsolaris\" ; then\n+\t\t\t  BOOST_CPPFLAGS=\"-pthreads $BOOST_CPPFLAGS\"\n+\t\t   elif test \"x$host_os\" = \"xmingw32\" ; then\n+\t\t\t  BOOST_CPPFLAGS=\"-mthreads $BOOST_CPPFLAGS\"\n+\t\t   else\n+\t\t\t  BOOST_CPPFLAGS=\"-pthread $BOOST_CPPFLAGS\"\n+\t\t   fi\n+\n+\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n+\n+\t\t\tAC_DEFINE(HAVE_BOOST_THREAD,,[define if the Boost::Thread library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+\t\t\tLDFLAGS_SAVE=$LDFLAGS\n+                        case \"x$host_os\" in\n+                          *bsd* )\n+                               LDFLAGS=\"-pthread $LDFLAGS\"\n+                          break;\n+                          ;;\n+                        esac\n+            if test \"x$ax_boost_user_thread_lib\" = \"x\"; then\n+                ax_lib=\n+                for libextension in `ls -r $BOOSTLIBDIR/libboost_thread* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'`; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                                 [link_thread=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_thread\" != \"xyes\"; then\n+                for libextension in `ls -r $BOOSTLIBDIR/boost_thread* 2>/dev/null | sed 's,.*/,,' | sed 's,\\..*,,'`; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                                 [link_thread=\"no\"])\n+\t\t\t\tdone\n+                fi\n+\n+            else\n+               for ax_lib in $ax_boost_user_thread_lib boost_thread-$ax_boost_user_thread_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                                   [link_thread=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the boost_thread library!)\n+            fi\n+\t\t\tif test \"x$link_thread\" = \"xno\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+                        else\n+                           case \"x$host_os\" in\n+                              *bsd* )\n+\t\t\t\tBOOST_LDFLAGS=\"-pthread $BOOST_LDFLAGS\"\n+                              break;\n+                              ;;\n+                           esac\n+\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "4efd1e2f18be12e19176f772ad41f07a823a0c85",
        "filename": "build-aux/m4/ax_boost_unit_test_framework.m4",
        "status": "added",
        "additions": 138,
        "deletions": 0,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/ax_boost_unit_test_framework.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/ax_boost_unit_test_framework.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_unit_test_framework.m4?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,138 @@\n+# ================================================================================\n+#  http://www.gnu.org/software/autoconf-archive/ax_boost_unit_test_framework.html\n+# ================================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_UNIT_TEST_FRAMEWORK\n+#\n+# DESCRIPTION\n+#\n+#   Test for Unit_Test_Framework library from the Boost C++ libraries. The\n+#   macro requires a preceding call to AX_BOOST_BASE. Further documentation\n+#   is available at <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_UNIT_TEST_FRAMEWORK\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 19\n+\n+AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n+[\n+\tAC_ARG_WITH([boost-unit-test-framework],\n+\tAS_HELP_STRING([--with-boost-unit-test-framework@<:@=special-lib@:>@],\n+                   [use the Unit_Test_Framework library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-unit-test-framework=boost_unit_test_framework-gcc ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_unit_test_framework_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_unit_test_framework_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::Unit_Test_Framework library is available,\n+\t\t\t\t\t   ax_cv_boost_unit_test_framework,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/test/unit_test.hpp>]],\n+                                    [[using boost::unit_test::test_suite;\n+\t\t\t\t\t\t\t test_suite* test= BOOST_TEST_SUITE( \"Unit test example 1\" ); return 0;]])],\n+                   ax_cv_boost_unit_test_framework=yes, ax_cv_boost_unit_test_framework=no)\n+         AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_unit_test_framework\" = \"xyes\"; then\n+\t\t\tAC_DEFINE(HAVE_BOOST_UNIT_TEST_FRAMEWORK,,[define if the Boost::Unit_Test_Framework library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+            if test \"x$ax_boost_user_unit_test_framework_lib\" = \"x\"; then\n+\t\t\tsaved_ldflags=\"${LDFLAGS}\"\n+                ax_lib=\n+                for monitor_library in `ls $BOOSTLIBDIR/libboost_unit_test_framework*.so* $BOOSTLIBDIR/libboost_unit_test_framework*.dylib* $BOOSTLIBDIR/libboost_unit_test_framework*.a* 2>/dev/null` ; do\n+                    if test -r $monitor_library ; then\n+                       libextension=`echo $monitor_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'`\n+                       ax_lib=${libextension}\n+                       link_unit_test_framework=\"yes\"\n+                    else\n+                       link_unit_test_framework=\"no\"\n+                    fi\n+\n+\t\t\t    if test \"x$link_unit_test_framework\" = \"xyes\"; then\n+                      BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"\n+                      AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n+\t\t\t\t\t  break\n+\t\t\t\t    fi\n+                done\n+                if test \"x$link_unit_test_framework\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_unit_test_framework*.dll* $BOOSTLIBDIR/boost_unit_test_framework*.a* 2>/dev/null  | sed 's,.*/,,' | sed -e 's;^\\(boost_unit_test_framework.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB) link_unit_test_framework=\"yes\"; break],\n+                                 [link_unit_test_framework=\"no\"])\n+\t\t\t\tdone\n+                fi\n+            else\n+                link_unit_test_framework=\"no\"\n+\t\t\tsaved_ldflags=\"${LDFLAGS}\"\n+                for ax_lib in boost_unit_test_framework-$ax_boost_user_unit_test_framework_lib $ax_boost_user_unit_test_framework_lib ; do\n+                   if test \"x$link_unit_test_framework\" = \"xyes\"; then\n+                      break;\n+                   fi\n+                   for unittest_library in `ls $BOOSTLIBDIR/lib${ax_lib}.so* $BOOSTLIBDIR/lib${ax_lib}.a* 2>/dev/null` ; do\n+                   if test -r $unittest_library ; then\n+                       libextension=`echo $unittest_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a*$;\\1;'`\n+                       ax_lib=${libextension}\n+                       link_unit_test_framework=\"yes\"\n+                    else\n+                       link_unit_test_framework=\"no\"\n+                    fi\n+\n+\t\t\t\tif test \"x$link_unit_test_framework\" = \"xyes\"; then\n+                        BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"\n+                        AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n+\t\t\t\t\t    break\n+\t\t\t\t    fi\n+                  done\n+               done\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the boost_unit_test_framework library!)\n+            fi\n+\t\t\tif test \"x$link_unit_test_framework\" != \"xyes\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "c3a8d695a1bcda95fd91cb6d8c03a94cdcb5b9c7",
        "filename": "build-aux/m4/ax_check_compile_flag.m4",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/ax_check_compile_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/ax_check_compile_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_compile_flag.m4?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,72 @@\n+# ===========================================================================\n+#   http://www.gnu.org/software/autoconf-archive/ax_check_compile_flag.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_CHECK_COMPILE_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n+#\n+# DESCRIPTION\n+#\n+#   Check whether the given FLAG works with the current language's compiler\n+#   or gives an error.  (Warnings, however, are ignored)\n+#\n+#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n+#   success/failure.\n+#\n+#   If EXTRA-FLAGS is defined, it is added to the current language's default\n+#   flags (e.g. CFLAGS) when the check is done.  The check is thus made with\n+#   the flags: \"CFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to\n+#   force the compiler to issue an error when a bad flag is given.\n+#\n+#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n+#   macro in sync with AX_CHECK_{PREPROC,LINK}_FLAG.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n+#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 2\n+\n+AC_DEFUN([AX_CHECK_COMPILE_FLAG],\n+[AC_PREREQ(2.59)dnl for _AC_LANG_PREFIX\n+AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]flags_$4_$1])dnl\n+AC_CACHE_CHECK([whether _AC_LANG compiler accepts $1], CACHEVAR, [\n+  ax_check_save_flags=$[]_AC_LANG_PREFIX[]FLAGS\n+  _AC_LANG_PREFIX[]FLAGS=\"$[]_AC_LANG_PREFIX[]FLAGS $4 $1\"\n+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM()],\n+    [AS_VAR_SET(CACHEVAR,[yes])],\n+    [AS_VAR_SET(CACHEVAR,[no])])\n+  _AC_LANG_PREFIX[]FLAGS=$ax_check_save_flags])\n+AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n+  [m4_default([$2], :)],\n+  [m4_default([$3], :)])\n+AS_VAR_POPDEF([CACHEVAR])dnl\n+])dnl AX_CHECK_COMPILE_FLAGS"
      },
      {
        "sha": "e2d0d363e4c4ac672d36a2c964973136d007be73",
        "filename": "build-aux/m4/ax_check_link_flag.m4",
        "status": "added",
        "additions": 71,
        "deletions": 0,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/ax_check_link_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/ax_check_link_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_link_flag.m4?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,71 @@\n+# ===========================================================================\n+#    http://www.gnu.org/software/autoconf-archive/ax_check_link_flag.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_CHECK_LINK_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n+#\n+# DESCRIPTION\n+#\n+#   Check whether the given FLAG works with the linker or gives an error.\n+#   (Warnings, however, are ignored)\n+#\n+#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n+#   success/failure.\n+#\n+#   If EXTRA-FLAGS is defined, it is added to the linker's default flags\n+#   when the check is done.  The check is thus made with the flags: \"LDFLAGS\n+#   EXTRA-FLAGS FLAG\".  This can for example be used to force the linker to\n+#   issue an error when a bad flag is given.\n+#\n+#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n+#   macro in sync with AX_CHECK_{PREPROC,COMPILE}_FLAG.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n+#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 2\n+\n+AC_DEFUN([AX_CHECK_LINK_FLAG],\n+[AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_ldflags_$4_$1])dnl\n+AC_CACHE_CHECK([whether the linker accepts $1], CACHEVAR, [\n+  ax_check_save_flags=$LDFLAGS\n+  LDFLAGS=\"$LDFLAGS $4 $1\"\n+  AC_LINK_IFELSE([AC_LANG_PROGRAM()],\n+    [AS_VAR_SET(CACHEVAR,[yes])],\n+    [AS_VAR_SET(CACHEVAR,[no])])\n+  LDFLAGS=$ax_check_save_flags])\n+AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n+  [m4_default([$2], :)],\n+  [m4_default([$3], :)])\n+AS_VAR_POPDEF([CACHEVAR])dnl\n+])dnl AX_CHECK_LINK_FLAGS"
      },
      {
        "sha": "b1cfef6b86dd6ed3321fe2b92e215a06cfbdbcdd",
        "filename": "build-aux/m4/ax_check_preproc_flag.m4",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/ax_check_preproc_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/ax_check_preproc_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_preproc_flag.m4?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,72 @@\n+# ===========================================================================\n+#   http://www.gnu.org/software/autoconf-archive/ax_check_preproc_flag.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_CHECK_PREPROC_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n+#\n+# DESCRIPTION\n+#\n+#   Check whether the given FLAG works with the current language's\n+#   preprocessor or gives an error.  (Warnings, however, are ignored)\n+#\n+#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n+#   success/failure.\n+#\n+#   If EXTRA-FLAGS is defined, it is added to the preprocessor's default\n+#   flags when the check is done.  The check is thus made with the flags:\n+#   \"CPPFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to force the\n+#   preprocessor to issue an error when a bad flag is given.\n+#\n+#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n+#   macro in sync with AX_CHECK_{COMPILE,LINK}_FLAG.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n+#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 2\n+\n+AC_DEFUN([AX_CHECK_PREPROC_FLAG],\n+[AC_PREREQ(2.59)dnl for _AC_LANG_PREFIX\n+AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]cppflags_$4_$1])dnl\n+AC_CACHE_CHECK([whether _AC_LANG preprocessor accepts $1], CACHEVAR, [\n+  ax_check_save_flags=$CPPFLAGS\n+  CPPFLAGS=\"$CPPFLAGS $4 $1\"\n+  AC_PREPROC_IFELSE([AC_LANG_PROGRAM()],\n+    [AS_VAR_SET(CACHEVAR,[yes])],\n+    [AS_VAR_SET(CACHEVAR,[no])])\n+  CPPFLAGS=$ax_check_save_flags])\n+AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n+  [m4_default([$2], :)],\n+  [m4_default([$3], :)])\n+AS_VAR_POPDEF([CACHEVAR])dnl\n+])dnl AX_CHECK_PREPROC_FLAGS"
      },
      {
        "sha": "275ca63a2c217cb584e26824e45b96b3d575e2f8",
        "filename": "build-aux/m4/ax_gcc_func_attribute.m4",
        "status": "added",
        "additions": 217,
        "deletions": 0,
        "changes": 217,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/ax_gcc_func_attribute.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/ax_gcc_func_attribute.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_gcc_func_attribute.m4?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,217 @@\n+# ===========================================================================\n+#   http://www.gnu.org/software/autoconf-archive/ax_gcc_func_attribute.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_GCC_FUNC_ATTRIBUTE(ATTRIBUTE)\n+#\n+# DESCRIPTION\n+#\n+#   This macro checks if the compiler supports one of GCC's function\n+#   attributes; many other compilers also provide function attributes with\n+#   the same syntax. Compiler warnings are used to detect supported\n+#   attributes as unsupported ones are ignored by default so quieting\n+#   warnings when using this macro will yield false positives.\n+#\n+#   The ATTRIBUTE parameter holds the name of the attribute to be checked.\n+#\n+#   If ATTRIBUTE is supported define HAVE_FUNC_ATTRIBUTE_<ATTRIBUTE>.\n+#\n+#   The macro caches its result in the ax_cv_have_func_attribute_<attribute>\n+#   variable.\n+#\n+#   The macro currently supports the following function attributes:\n+#\n+#    alias\n+#    aligned\n+#    alloc_size\n+#    always_inline\n+#    artificial\n+#    cold\n+#    const\n+#    constructor\n+#    deprecated\n+#    destructor\n+#    dllexport\n+#    dllimport\n+#    error\n+#    externally_visible\n+#    flatten\n+#    format\n+#    format_arg\n+#    gnu_inline\n+#    hot\n+#    ifunc\n+#    leaf\n+#    malloc\n+#    noclone\n+#    noinline\n+#    nonnull\n+#    noreturn\n+#    nothrow\n+#    optimize\n+#    pure\n+#    unused\n+#    used\n+#    visibility\n+#    warning\n+#    warn_unused_result\n+#    weak\n+#    weakref\n+#\n+#   Unsuppored function attributes will be tested with a prototype returning\n+#   an int and not accepting any arguments and the result of the check might\n+#   be wrong or meaningless so use with care.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2013 Gabriele Svelto <gabriele.svelto@gmail.com>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved.  This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 2\n+\n+AC_DEFUN([AX_GCC_FUNC_ATTRIBUTE], [\n+    AS_VAR_PUSHDEF([ac_var], [ax_cv_have_func_attribute_$1])\n+\n+    AC_CACHE_CHECK([for __attribute__(($1))], [ac_var], [\n+        AC_LINK_IFELSE([AC_LANG_PROGRAM([\n+            m4_case([$1],\n+                [alias], [\n+                    int foo( void ) { return 0; }\n+                    int bar( void ) __attribute__(($1(\"foo\")));\n+                ],\n+                [aligned], [\n+                    int foo( void ) __attribute__(($1(32)));\n+                ],\n+                [alloc_size], [\n+                    void *foo(int a) __attribute__(($1(1)));\n+                ],\n+                [always_inline], [\n+                    inline __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [artificial], [\n+                    inline __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [cold], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [const], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [constructor], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [deprecated], [\n+                    int foo( void ) __attribute__(($1(\"\")));\n+                ],\n+                [destructor], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [dllexport], [\n+                    __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [dllimport], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [error], [\n+                    int foo( void ) __attribute__(($1(\"\")));\n+                ],\n+                [externally_visible], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [flatten], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [format], [\n+                    int foo(const char *p, ...) __attribute__(($1(printf, 1, 2)));\n+                ],\n+                [format_arg], [\n+                    char *foo(const char *p) __attribute__(($1(1)));\n+                ],\n+                [gnu_inline], [\n+                    inline __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [hot], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [ifunc], [\n+                    int my_foo( void ) { return 0; }\n+                    static int (*resolve_foo(void))(void) { return my_foo; }\n+                    int foo( void ) __attribute__(($1(\"resolve_foo\")));\n+                ],\n+                [leaf], [\n+                    __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [malloc], [\n+                    void *foo( void ) __attribute__(($1));\n+                ],\n+                [noclone], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [noinline], [\n+                    __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [nonnull], [\n+                    int foo(char *p) __attribute__(($1(1)));\n+                ],\n+                [noreturn], [\n+                    void foo( void ) __attribute__(($1));\n+                ],\n+                [nothrow], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [optimize], [\n+                    __attribute__(($1(3))) int foo( void ) { return 0; }\n+                ],\n+                [pure], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [unused], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [used], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [visibility], [\n+                    int foo_def( void ) __attribute__(($1(\"default\")));\n+                    int foo_hid( void ) __attribute__(($1(\"hidden\")));\n+                ],\n+                [warning], [\n+                    int foo( void ) __attribute__(($1(\"\")));\n+                ],\n+                [warn_unused_result], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [weak], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [weakref], [\n+                    static int foo( void ) { return 0; }\n+                    static int bar( void ) __attribute__(($1(\"foo\")));\n+                ],\n+                [\n+                 m4_warn([syntax], [Unsupported attribute $1, the test may fail])\n+                 int foo( void ) __attribute__(($1));\n+                ]\n+            )], [])\n+            ],\n+            dnl GCC doesn't exit with an error if an unknown attribute is\n+            dnl provided but only outputs a warning, so accept the attribute\n+            dnl only if no warning were issued.\n+            [AS_IF([test -s conftest.err],\n+                [AS_VAR_SET([ac_var], [no])],\n+                [AS_VAR_SET([ac_var], [yes])])],\n+            [AS_VAR_SET([ac_var], [no])])\n+    ])\n+\n+    AS_IF([test yes = AS_VAR_GET([ac_var])],\n+        [AC_DEFINE_UNQUOTED(AS_TR_CPP(HAVE_FUNC_ATTRIBUTE_$1), 1,\n+            [Define to 1 if the system has the `$1' function attribute])], [])\n+\n+    AS_VAR_POPDEF([ac_var])\n+])"
      },
      {
        "sha": "d383ad5c6d6a5061370800bb1dc89b7a334c0638",
        "filename": "build-aux/m4/ax_pthread.m4",
        "status": "added",
        "additions": 332,
        "deletions": 0,
        "changes": 332,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/ax_pthread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/ax_pthread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_pthread.m4?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,332 @@\n+# ===========================================================================\n+#        http://www.gnu.org/software/autoconf-archive/ax_pthread.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_PTHREAD([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])\n+#\n+# DESCRIPTION\n+#\n+#   This macro figures out how to build C programs using POSIX threads. It\n+#   sets the PTHREAD_LIBS output variable to the threads library and linker\n+#   flags, and the PTHREAD_CFLAGS output variable to any special C compiler\n+#   flags that are needed. (The user can also force certain compiler\n+#   flags/libs to be tested by setting these environment variables.)\n+#\n+#   Also sets PTHREAD_CC to any special C compiler that is needed for\n+#   multi-threaded programs (defaults to the value of CC otherwise). (This\n+#   is necessary on AIX to use the special cc_r compiler alias.)\n+#\n+#   NOTE: You are assumed to not only compile your program with these flags,\n+#   but also link it with them as well. e.g. you should link with\n+#   $PTHREAD_CC $CFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n+#\n+#   If you are only building threads programs, you may wish to use these\n+#   variables in your default LIBS, CFLAGS, and CC:\n+#\n+#     LIBS=\"$PTHREAD_LIBS $LIBS\"\n+#     CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+#     CC=\"$PTHREAD_CC\"\n+#\n+#   In addition, if the PTHREAD_CREATE_JOINABLE thread-attribute constant\n+#   has a nonstandard name, defines PTHREAD_CREATE_JOINABLE to that name\n+#   (e.g. PTHREAD_CREATE_UNDETACHED on AIX).\n+#\n+#   Also HAVE_PTHREAD_PRIO_INHERIT is defined if pthread is found and the\n+#   PTHREAD_PRIO_INHERIT symbol is defined when compiling with\n+#   PTHREAD_CFLAGS.\n+#\n+#   ACTION-IF-FOUND is a list of shell commands to run if a threads library\n+#   is found, and ACTION-IF-NOT-FOUND is a list of commands to run it if it\n+#   is not found. If ACTION-IF-FOUND is not specified, the default action\n+#   will define HAVE_PTHREAD.\n+#\n+#   Please let the authors know if this macro fails on any platform, or if\n+#   you have any other suggestions or comments. This macro was based on work\n+#   by SGJ on autoconf scripts for FFTW (http://www.fftw.org/) (with help\n+#   from M. Frigo), as well as ac_pthread and hb_pthread macros posted by\n+#   Alejandro Forero Cuervo to the autoconf macro repository. We are also\n+#   grateful for the helpful feedback of numerous users.\n+#\n+#   Updated for Autoconf 2.68 by Daniel Richard G.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Steven G. Johnson <stevenj@alum.mit.edu>\n+#   Copyright (c) 2011 Daniel Richard G. <skunk@iSKUNK.ORG>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 21\n+\n+AU_ALIAS([ACX_PTHREAD], [AX_PTHREAD])\n+AC_DEFUN([AX_PTHREAD], [\n+AC_REQUIRE([AC_CANONICAL_HOST])\n+AC_LANG_PUSH([C])\n+ax_pthread_ok=no\n+\n+# We used to check for pthread.h first, but this fails if pthread.h\n+# requires special compiler flags (e.g. on True64 or Sequent).\n+# It gets checked for in the link test anyway.\n+\n+# First of all, check if the user has set any of the PTHREAD_LIBS,\n+# etcetera environment variables, and if threads linking works using\n+# them:\n+if test x\"$PTHREAD_LIBS$PTHREAD_CFLAGS\" != x; then\n+        save_CFLAGS=\"$CFLAGS\"\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+        save_LIBS=\"$LIBS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+        AC_MSG_CHECKING([for pthread_join in LIBS=$PTHREAD_LIBS with CFLAGS=$PTHREAD_CFLAGS])\n+        AC_TRY_LINK_FUNC([pthread_join], [ax_pthread_ok=yes])\n+        AC_MSG_RESULT([$ax_pthread_ok])\n+        if test x\"$ax_pthread_ok\" = xno; then\n+                PTHREAD_LIBS=\"\"\n+                PTHREAD_CFLAGS=\"\"\n+        fi\n+        LIBS=\"$save_LIBS\"\n+        CFLAGS=\"$save_CFLAGS\"\n+fi\n+\n+# We must check for the threads library under a number of different\n+# names; the ordering is very important because some systems\n+# (e.g. DEC) have both -lpthread and -lpthreads, where one of the\n+# libraries is broken (non-POSIX).\n+\n+# Create a list of thread flags to try.  Items starting with a \"-\" are\n+# C compiler flags, and other items are library names, except for \"none\"\n+# which indicates that we try without any flags at all, and \"pthread-config\"\n+# which is a program returning the flags for the Pth emulation library.\n+\n+ax_pthread_flags=\"pthreads none -Kthread -kthread lthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n+\n+# The ordering *is* (sometimes) important.  Some notes on the\n+# individual items follow:\n+\n+# pthreads: AIX (must check this before -lpthread)\n+# none: in case threads are in libc; should be tried before -Kthread and\n+#       other compiler flags to prevent continual compiler warnings\n+# -Kthread: Sequent (threads in libc, but -Kthread needed for pthread.h)\n+# -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)\n+# lthread: LinuxThreads port on FreeBSD (also preferred to -pthread)\n+# -pthread: Linux/gcc (kernel threads), BSD/gcc (userland threads)\n+# -pthreads: Solaris/gcc\n+# -mthreads: Mingw32/gcc, Lynx/gcc\n+# -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it\n+#      doesn't hurt to check since this sometimes defines pthreads too;\n+#      also defines -D_REENTRANT)\n+#      ... -mt is also the pthreads flag for HP/aCC\n+# pthread: Linux, etcetera\n+# --thread-safe: KAI C++\n+# pthread-config: use pthread-config program (for GNU Pth library)\n+\n+case ${host_os} in\n+        solaris*)\n+\n+        # On Solaris (at least, for some versions), libc contains stubbed\n+        # (non-functional) versions of the pthreads routines, so link-based\n+        # tests will erroneously succeed.  (We need to link with -pthreads/-mt/\n+        # -lpthread.)  (The stubs are missing pthread_cleanup_push, or rather\n+        # a function called by this macro, so we could check for that, but\n+        # who knows whether they'll stub that too in a future libc.)  So,\n+        # we'll just look for -pthreads and -lpthread first:\n+\n+        ax_pthread_flags=\"-pthreads pthread -mt -pthread $ax_pthread_flags\"\n+        ;;\n+\n+        darwin*)\n+        ax_pthread_flags=\"-pthread $ax_pthread_flags\"\n+        ;;\n+esac\n+\n+# Clang doesn't consider unrecognized options an error unless we specify\n+# -Werror. We throw in some extra Clang-specific options to ensure that\n+# this doesn't happen for GCC, which also accepts -Werror.\n+\n+AC_MSG_CHECKING([if compiler needs -Werror to reject unknown flags])\n+save_CFLAGS=\"$CFLAGS\"\n+ax_pthread_extra_flags=\"-Werror\"\n+CFLAGS=\"$CFLAGS $ax_pthread_extra_flags -Wunknown-warning-option -Wsizeof-array-argument\"\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([int foo(void);],[foo()])],\n+                  [AC_MSG_RESULT([yes])],\n+                  [ax_pthread_extra_flags=\n+                   AC_MSG_RESULT([no])])\n+CFLAGS=\"$save_CFLAGS\"\n+\n+if test x\"$ax_pthread_ok\" = xno; then\n+for flag in $ax_pthread_flags; do\n+\n+        case $flag in\n+                none)\n+                AC_MSG_CHECKING([whether pthreads work without any flags])\n+                ;;\n+\n+                -*)\n+                AC_MSG_CHECKING([whether pthreads work with $flag])\n+                PTHREAD_CFLAGS=\"$flag\"\n+                ;;\n+\n+                pthread-config)\n+                AC_CHECK_PROG([ax_pthread_config], [pthread-config], [yes], [no])\n+                if test x\"$ax_pthread_config\" = xno; then continue; fi\n+                PTHREAD_CFLAGS=\"`pthread-config --cflags`\"\n+                PTHREAD_LIBS=\"`pthread-config --ldflags` `pthread-config --libs`\"\n+                ;;\n+\n+                *)\n+                AC_MSG_CHECKING([for the pthreads library -l$flag])\n+                PTHREAD_LIBS=\"-l$flag\"\n+                ;;\n+        esac\n+\n+        save_LIBS=\"$LIBS\"\n+        save_CFLAGS=\"$CFLAGS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS $ax_pthread_extra_flags\"\n+\n+        # Check for various functions.  We must include pthread.h,\n+        # since some functions may be macros.  (On the Sequent, we\n+        # need a special flag -Kthread to make this header compile.)\n+        # We check for pthread_join because it is in -lpthread on IRIX\n+        # while pthread_create is in libc.  We check for pthread_attr_init\n+        # due to DEC craziness with -lpthreads.  We check for\n+        # pthread_cleanup_push because it is one of the few pthread\n+        # functions on Solaris that doesn't have a non-functional libc stub.\n+        # We try pthread_create on general principles.\n+        AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>\n+                        static void routine(void *a) { a = 0; }\n+                        static void *start_routine(void *a) { return a; }],\n+                       [pthread_t th; pthread_attr_t attr;\n+                        pthread_create(&th, 0, start_routine, 0);\n+                        pthread_join(th, 0);\n+                        pthread_attr_init(&attr);\n+                        pthread_cleanup_push(routine, 0);\n+                        pthread_cleanup_pop(0) /* ; */])],\n+                [ax_pthread_ok=yes],\n+                [])\n+\n+        LIBS=\"$save_LIBS\"\n+        CFLAGS=\"$save_CFLAGS\"\n+\n+        AC_MSG_RESULT([$ax_pthread_ok])\n+        if test \"x$ax_pthread_ok\" = xyes; then\n+                break;\n+        fi\n+\n+        PTHREAD_LIBS=\"\"\n+        PTHREAD_CFLAGS=\"\"\n+done\n+fi\n+\n+# Various other checks:\n+if test \"x$ax_pthread_ok\" = xyes; then\n+        save_LIBS=\"$LIBS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+        save_CFLAGS=\"$CFLAGS\"\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+\n+        # Detect AIX lossage: JOINABLE attribute is called UNDETACHED.\n+        AC_MSG_CHECKING([for joinable pthread attribute])\n+        attr_name=unknown\n+        for attr in PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_UNDETACHED; do\n+            AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>],\n+                           [int attr = $attr; return attr /* ; */])],\n+                [attr_name=$attr; break],\n+                [])\n+        done\n+        AC_MSG_RESULT([$attr_name])\n+        if test \"$attr_name\" != PTHREAD_CREATE_JOINABLE; then\n+            AC_DEFINE_UNQUOTED([PTHREAD_CREATE_JOINABLE], [$attr_name],\n+                               [Define to necessary symbol if this constant\n+                                uses a non-standard name on your system.])\n+        fi\n+\n+        AC_MSG_CHECKING([if more special flags are required for pthreads])\n+        flag=no\n+        case ${host_os} in\n+            aix* | freebsd* | darwin*) flag=\"-D_THREAD_SAFE\";;\n+            osf* | hpux*) flag=\"-D_REENTRANT\";;\n+            solaris*)\n+            if test \"$GCC\" = \"yes\"; then\n+                flag=\"-D_REENTRANT\"\n+            else\n+                # TODO: What about Clang on Solaris?\n+                flag=\"-mt -D_REENTRANT\"\n+            fi\n+            ;;\n+        esac\n+        AC_MSG_RESULT([$flag])\n+        if test \"x$flag\" != xno; then\n+            PTHREAD_CFLAGS=\"$flag $PTHREAD_CFLAGS\"\n+        fi\n+\n+        AC_CACHE_CHECK([for PTHREAD_PRIO_INHERIT],\n+            [ax_cv_PTHREAD_PRIO_INHERIT], [\n+                AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <pthread.h>]],\n+                                                [[int i = PTHREAD_PRIO_INHERIT;]])],\n+                    [ax_cv_PTHREAD_PRIO_INHERIT=yes],\n+                    [ax_cv_PTHREAD_PRIO_INHERIT=no])\n+            ])\n+        AS_IF([test \"x$ax_cv_PTHREAD_PRIO_INHERIT\" = \"xyes\"],\n+            [AC_DEFINE([HAVE_PTHREAD_PRIO_INHERIT], [1], [Have PTHREAD_PRIO_INHERIT.])])\n+\n+        LIBS=\"$save_LIBS\"\n+        CFLAGS=\"$save_CFLAGS\"\n+\n+        # More AIX lossage: compile with *_r variant\n+        if test \"x$GCC\" != xyes; then\n+            case $host_os in\n+                aix*)\n+                AS_CASE([\"x/$CC\"],\n+                  [x*/c89|x*/c89_128|x*/c99|x*/c99_128|x*/cc|x*/cc128|x*/xlc|x*/xlc_v6|x*/xlc128|x*/xlc128_v6],\n+                  [#handle absolute path differently from PATH based program lookup\n+                   AS_CASE([\"x$CC\"],\n+                     [x/*],\n+                     [AS_IF([AS_EXECUTABLE_P([${CC}_r])],[PTHREAD_CC=\"${CC}_r\"])],\n+                     [AC_CHECK_PROGS([PTHREAD_CC],[${CC}_r],[$CC])])])\n+                ;;\n+            esac\n+        fi\n+fi\n+\n+test -n \"$PTHREAD_CC\" || PTHREAD_CC=\"$CC\"\n+\n+AC_SUBST([PTHREAD_LIBS])\n+AC_SUBST([PTHREAD_CFLAGS])\n+AC_SUBST([PTHREAD_CC])\n+\n+# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:\n+if test x\"$ax_pthread_ok\" = xyes; then\n+        ifelse([$1],,[AC_DEFINE([HAVE_PTHREAD],[1],[Define if you have POSIX threads libraries and header files.])],[$1])\n+        :\n+else\n+        ax_pthread_ok=no\n+        $2\n+fi\n+AC_LANG_POP\n+])dnl AX_PTHREAD"
      },
      {
        "sha": "f352d922f02aa386a71a33772bf27794352fdf04",
        "filename": "build-aux/m4/bitcoin_find_bdb48.m4",
        "status": "added",
        "additions": 66,
        "deletions": 0,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/bitcoin_find_bdb48.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/bitcoin_find_bdb48.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_find_bdb48.m4?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,66 @@\n+AC_DEFUN([BITCOIN_FIND_BDB48],[\n+  AC_MSG_CHECKING([for Berkeley DB C++ headers])\n+  BDB_CPPFLAGS=\n+  BDB_LIBS=\n+  bdbpath=X\n+  bdb48path=X\n+  bdbdirlist=\n+  for _vn in 4.8 48 4 5 ''; do\n+    for _pfx in b lib ''; do\n+      bdbdirlist=\"$bdbdirlist ${_pfx}db${_vn}\"\n+    done\n+  done\n+  for searchpath in $bdbdirlist ''; do\n+    test -n \"${searchpath}\" && searchpath=\"${searchpath}/\"\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+      #include <${searchpath}db_cxx.h>\n+    ]],[[\n+      #if !((DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR >= 8) || DB_VERSION_MAJOR > 4)\n+        #error \"failed to find bdb 4.8+\"\n+      #endif\n+    ]])],[\n+      if test \"x$bdbpath\" = \"xX\"; then\n+        bdbpath=\"${searchpath}\"\n+      fi\n+    ],[\n+      continue\n+    ])\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+      #include <${searchpath}db_cxx.h>\n+    ]],[[\n+      #if !(DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR == 8)\n+        #error \"failed to find bdb 4.8\"\n+      #endif\n+    ]])],[\n+      bdb48path=\"${searchpath}\"\n+      break\n+    ],[])\n+  done\n+  if test \"x$bdbpath\" = \"xX\"; then\n+    AC_MSG_RESULT([no])\n+    AC_MSG_ERROR([libdb_cxx headers missing, Aither Core requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n+  elif test \"x$bdb48path\" = \"xX\"; then\n+    BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n+    AC_ARG_WITH([incompatible-bdb],[AS_HELP_STRING([--with-incompatible-bdb], [allow using a bdb version other than 4.8])],[\n+      AC_MSG_WARN([Found Berkeley DB other than 4.8; wallets opened by this build will not be portable!])\n+    ],[\n+      AC_MSG_ERROR([Found Berkeley DB other than 4.8, required for portable wallets (--with-incompatible-bdb to ignore or --disable-wallet to disable wallet functionality)])\n+    ])\n+  else\n+    BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdb48path}],db_cxx)\n+    bdbpath=\"${bdb48path}\"\n+  fi\n+  AC_SUBST(BDB_CPPFLAGS)\n+  \n+  # TODO: Ideally this could find the library version and make sure it matches the headers being used\n+  for searchlib in db_cxx-4.8 db_cxx; do\n+    AC_CHECK_LIB([$searchlib],[main],[\n+      BDB_LIBS=\"-l${searchlib}\"\n+      break\n+    ])\n+  done\n+  if test \"x$BDB_LIBS\" = \"x\"; then\n+      AC_MSG_ERROR([libdb_cxx missing, Aither Core requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n+  fi\n+  AC_SUBST(BDB_LIBS)\n+])"
      },
      {
        "sha": "478b5627032d204df809ed727f65676e60769309",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "added",
        "additions": 491,
        "deletions": 0,
        "changes": 491,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,491 @@\n+dnl Helper for cases where a qt dependency is not met.\n+dnl Output: If qt version is auto, set bitcoin_enable_qt to false. Else, exit.\n+AC_DEFUN([BITCOIN_QT_FAIL],[\n+  if test \"x$bitcoin_qt_want_version\" = \"xauto\" && test x$bitcoin_qt_force != xyes; then\n+    if test x$bitcoin_enable_qt != xno; then\n+      AC_MSG_WARN([$1; aither-qt frontend will not be built])\n+    fi\n+    bitcoin_enable_qt=no\n+    bitcoin_enable_qt_test=no\n+  else\n+    AC_MSG_ERROR([$1])\n+  fi\n+])\n+\n+AC_DEFUN([BITCOIN_QT_CHECK],[\n+  if test \"x$bitcoin_enable_qt\" != \"xno\" && test x$bitcoin_qt_want_version != xno; then\n+    true\n+    $1\n+  else\n+    true\n+    $2\n+  fi\n+])\n+\n+dnl BITCOIN_QT_PATH_PROGS([FOO], [foo foo2], [/path/to/search/first], [continue if missing])\n+dnl Helper for finding the path of programs needed for Qt.\n+dnl Inputs: $1: Variable to be set\n+dnl Inputs: $2: List of programs to search for\n+dnl Inputs: $3: Look for $2 here before $PATH\n+dnl Inputs: $4: If \"yes\", don't fail if $2 is not found.\n+dnl Output: $1 is set to the path of $2 if found. $2 are searched in order.\n+AC_DEFUN([BITCOIN_QT_PATH_PROGS],[\n+  BITCOIN_QT_CHECK([\n+    if test \"x$3\" != \"x\"; then\n+      AC_PATH_PROGS($1,$2,,$3)\n+    else\n+      AC_PATH_PROGS($1,$2)\n+    fi\n+    if test \"x$$1\" = \"x\" && test \"x$4\" != \"xyes\"; then\n+      BITCOIN_QT_FAIL([$1 not found])\n+    fi\n+  ])\n+])\n+\n+dnl Initialize qt input.\n+dnl This must be called before any other BITCOIN_QT* macros to ensure that\n+dnl input variables are set correctly.\n+dnl CAUTION: Do not use this inside of a conditional.\n+AC_DEFUN([BITCOIN_QT_INIT],[\n+  dnl enable qt support\n+  AC_ARG_WITH([gui],\n+    [AS_HELP_STRING([--with-gui@<:@=no|qt4|qt5|auto@:>@],\n+    [build aither-qt GUI (default=auto, qt5 tried first)])],\n+    [\n+     bitcoin_qt_want_version=$withval\n+     if test x$bitcoin_qt_want_version = xyes; then\n+       bitcoin_qt_force=yes\n+       bitcoin_qt_want_version=auto\n+     fi\n+    ],\n+    [bitcoin_qt_want_version=auto])\n+\n+  AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [])\n+  AC_ARG_WITH([qt-libdir],[AS_HELP_STRING([--with-qt-libdir=LIB_DIR],[specify qt lib path (overridden by pkgconfig)])], [qt_lib_path=$withval], [])\n+  AC_ARG_WITH([qt-plugindir],[AS_HELP_STRING([--with-qt-plugindir=PLUGIN_DIR],[specify qt plugin path (overridden by pkgconfig)])], [qt_plugin_path=$withval], [])\n+  AC_ARG_WITH([qt-translationdir],[AS_HELP_STRING([--with-qt-translationdir=PLUGIN_DIR],[specify qt translation path (overridden by pkgconfig)])], [qt_translation_path=$withval], [])\n+  AC_ARG_WITH([qt-bindir],[AS_HELP_STRING([--with-qt-bindir=BIN_DIR],[specify qt bin path])], [qt_bin_path=$withval], [])\n+\n+  AC_ARG_WITH([qtdbus],\n+    [AS_HELP_STRING([--with-qtdbus],\n+    [enable DBus support (default is yes if qt is enabled and QtDBus is found)])],\n+    [use_dbus=$withval],\n+    [use_dbus=auto])\n+\n+  AC_SUBST(QT_TRANSLATION_DIR,$qt_translation_path)\n+])\n+\n+dnl Find the appropriate version of Qt libraries and includes.\n+dnl Inputs: $1: Whether or not pkg-config should be used. yes|no. Default: yes.\n+dnl Inputs: $2: If $1 is \"yes\" and --with-gui=auto, which qt version should be\n+dnl         tried first.\n+dnl Outputs: See _BITCOIN_QT_FIND_LIBS_*\n+dnl Outputs: Sets variables for all qt-related tools.\n+dnl Outputs: bitcoin_enable_qt, bitcoin_enable_qt_dbus, bitcoin_enable_qt_test\n+AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n+  use_pkgconfig=$1\n+\n+  if test x$use_pkgconfig = x; then\n+    use_pkgconfig=yes\n+  fi\n+\n+  if test x$use_pkgconfig = xyes; then\n+    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG([$2])])\n+  else\n+    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG])\n+  fi\n+\n+  dnl This is ugly and complicated. Yuck. Works as follows:\n+  dnl We can't discern whether Qt4 builds are static or not. For Qt5, we can\n+  dnl check a header to find out. When Qt is built statically, some plugins must\n+  dnl be linked into the final binary as well. These plugins have changed between\n+  dnl Qt4 and Qt5. With Qt5, languages moved into core and the WindowsIntegration\n+  dnl plugin was added. Since we can't tell if Qt4 is static or not, it is\n+  dnl assumed for windows builds.\n+  dnl _BITCOIN_QT_CHECK_STATIC_PLUGINS does a quick link-check and appends the\n+  dnl results to QT_LIBS.\n+  BITCOIN_QT_CHECK([\n+  TEMP_CPPFLAGS=$CPPFLAGS\n+  TEMP_CXXFLAGS=$CXXFLAGS\n+  CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n+  CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n+  if test x$bitcoin_qt_got_major_vers = x5; then\n+    _BITCOIN_QT_IS_STATIC\n+    if test x$bitcoin_cv_static_qt = xyes; then\n+      _BITCOIN_QT_FIND_STATIC_PLUGINS\n+      AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n+      AC_CACHE_CHECK(for Qt < 5.4, bitcoin_cv_need_acc_widget,[AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n+          [[#include <QtCore>]],[[\n+          #if QT_VERSION >= 0x050400\n+          choke;\n+          #endif\n+          ]])],\n+        [bitcoin_cv_need_acc_widget=yes],\n+        [bitcoin_cv_need_acc_widget=no])\n+      ])\n+      if test \"x$bitcoin_cv_need_acc_widget\" = \"xyes\"; then\n+        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n+      fi\n+      if test x$TARGET_OS = xwindows; then\n+        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n+        AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n+      elif test x$TARGET_OS = xlinux; then\n+        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])\n+        AC_DEFINE(QT_QPA_PLATFORM_XCB, 1, [Define this symbol if the qt platform is xcb])\n+      elif test x$TARGET_OS = xdarwin; then\n+        AX_CHECK_LINK_FLAG([[-framework IOKit]],[QT_LIBS=\"$QT_LIBS -framework IOKit\"],[AC_MSG_ERROR(could not iokit framework)])\n+        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n+        AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])\n+      fi\n+    fi\n+  else\n+    if test x$TARGET_OS = xwindows; then\n+      AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([\n+         Q_IMPORT_PLUGIN(qcncodecs)\n+         Q_IMPORT_PLUGIN(qjpcodecs)\n+         Q_IMPORT_PLUGIN(qtwcodecs)\n+         Q_IMPORT_PLUGIN(qkrcodecs)\n+         Q_IMPORT_PLUGIN(AccessibleFactory)],\n+         [-lqcncodecs -lqjpcodecs -lqtwcodecs -lqkrcodecs -lqtaccessiblewidgets])\n+    fi\n+  fi\n+  CPPFLAGS=$TEMP_CPPFLAGS\n+  CXXFLAGS=$TEMP_CXXFLAGS\n+  ])\n+\n+  if test x$use_pkgconfig$qt_bin_path = xyes; then\n+    if test x$bitcoin_qt_got_major_vers = x5; then\n+      qt_bin_path=\"`$PKG_CONFIG --variable=host_bins Qt5Core 2>/dev/null`\"\n+    fi\n+  fi\n+\n+  if test x$use_hardening != xno; then\n+    BITCOIN_QT_CHECK([\n+    AC_MSG_CHECKING(whether -fPIE can be used with this Qt config)\n+    TEMP_CPPFLAGS=$CPPFLAGS\n+    TEMP_CXXFLAGS=$CXXFLAGS\n+    CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n+    CXXFLAGS=\"$PIE_FLAGS $CXXFLAGS\"\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <QtCore/qconfig.h>]],\n+      [[\n+          #if defined(QT_REDUCE_RELOCATIONS)\n+              choke;\n+          #endif\n+      ]])],\n+      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIE_FLAGS ],\n+      [ AC_MSG_RESULT(no); QT_PIE_FLAGS=$PIC_FLAGS]\n+    )\n+    CPPFLAGS=$TEMP_CPPFLAGS\n+    CXXFLAGS=$TEMP_CXXFLAGS\n+    ])\n+  else\n+    BITCOIN_QT_CHECK([\n+    AC_MSG_CHECKING(whether -fPIC is needed with this Qt config)\n+    TEMP_CPPFLAGS=$CPPFLAGS\n+    CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <QtCore/qconfig.h>]],\n+      [[\n+          #if defined(QT_REDUCE_RELOCATIONS)\n+              choke;\n+          #endif\n+      ]])],\n+      [ AC_MSG_RESULT(no)],\n+      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIC_FLAGS]\n+    )\n+    CPPFLAGS=$TEMP_CPPFLAGS\n+    ])\n+  fi\n+\n+  BITCOIN_QT_PATH_PROGS([MOC], [moc-qt${bitcoin_qt_got_major_vers} moc${bitcoin_qt_got_major_vers} moc], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([UIC], [uic-qt${bitcoin_qt_got_major_vers} uic${bitcoin_qt_got_major_vers} uic], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt${bitcoin_qt_got_major_vers} rcc${bitcoin_qt_got_major_vers} rcc], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt${bitcoin_qt_got_major_vers} lrelease${bitcoin_qt_got_major_vers} lrelease], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt${bitcoin_qt_got_major_vers} lupdate${bitcoin_qt_got_major_vers} lupdate],$qt_bin_path, yes)\n+\n+  MOC_DEFS='-DHAVE_CONFIG_H -I$(srcdir)'\n+  case $host in\n+    *darwin*)\n+     BITCOIN_QT_CHECK([\n+       MOC_DEFS=\"${MOC_DEFS} -DQ_OS_MAC\"\n+       base_frameworks=\"-framework Foundation -framework ApplicationServices -framework AppKit\"\n+       AX_CHECK_LINK_FLAG([[$base_frameworks]],[QT_LIBS=\"$QT_LIBS $base_frameworks\"],[AC_MSG_ERROR(could not find base frameworks)])\n+     ])\n+    ;;\n+    *mingw*)\n+       BITCOIN_QT_CHECK([\n+         AX_CHECK_LINK_FLAG([[-mwindows]],[QT_LDFLAGS=\"$QT_LDFLAGS -mwindows\"],[AC_MSG_WARN(-mwindows linker support not detected)])\n+       ])\n+  esac\n+\n+\n+  dnl enable qt support\n+  AC_MSG_CHECKING(whether to build Aither Core GUI)\n+  BITCOIN_QT_CHECK([\n+    bitcoin_enable_qt=yes\n+    bitcoin_enable_qt_test=yes\n+    if test x$have_qt_test = xno; then\n+      bitcoin_enable_qt_test=no\n+    fi\n+    bitcoin_enable_qt_dbus=no\n+    if test x$use_dbus != xno && test x$have_qt_dbus = xyes; then\n+      bitcoin_enable_qt_dbus=yes\n+    fi\n+    if test x$use_dbus = xyes && test x$have_qt_dbus = xno; then\n+      AC_MSG_ERROR(\"libQtDBus not found. Install libQtDBus or remove --with-qtdbus.\")\n+    fi\n+    if test x$LUPDATE = x; then\n+      AC_MSG_WARN(\"lupdate is required to update qt translations\")\n+    fi\n+  ],[\n+    bitcoin_enable_qt=no\n+  ])\n+  AC_MSG_RESULT([$bitcoin_enable_qt (Qt${bitcoin_qt_got_major_vers})])\n+\n+  AC_SUBST(QT_PIE_FLAGS)\n+  AC_SUBST(QT_INCLUDES)\n+  AC_SUBST(QT_LIBS)\n+  AC_SUBST(QT_LDFLAGS)\n+  AC_SUBST(QT_DBUS_INCLUDES)\n+  AC_SUBST(QT_DBUS_LIBS)\n+  AC_SUBST(QT_TEST_INCLUDES)\n+  AC_SUBST(QT_TEST_LIBS)\n+  AC_SUBST(QT_SELECT, qt${bitcoin_qt_got_major_vers})\n+  AC_SUBST(MOC_DEFS)\n+])\n+\n+dnl All macros below are internal and should _not_ be used from the main\n+dnl configure.ac.\n+dnl ----\n+\n+dnl Internal. Check if the included version of Qt is Qt5.\n+dnl Requires: INCLUDES must be populated as necessary.\n+dnl Output: bitcoin_cv_qt5=yes|no\n+AC_DEFUN([_BITCOIN_QT_CHECK_QT5],[\n+  AC_CACHE_CHECK(for Qt 5, bitcoin_cv_qt5,[\n+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n+    [[#include <QtCore>]],\n+    [[\n+      #if QT_VERSION < 0x050000\n+      choke me\n+      #else\n+      return 0;\n+      #endif\n+    ]])],\n+    [bitcoin_cv_qt5=yes],\n+    [bitcoin_cv_qt5=no])\n+])])\n+\n+dnl Internal. Check if the linked version of Qt was built as static libs.\n+dnl Requires: Qt5. This check cannot determine if Qt4 is static.\n+dnl Requires: INCLUDES and LIBS must be populated as necessary.\n+dnl Output: bitcoin_cv_static_qt=yes|no\n+dnl Output: Defines QT_STATICPLUGIN if plugins are static.\n+AC_DEFUN([_BITCOIN_QT_IS_STATIC],[\n+  AC_CACHE_CHECK(for static Qt, bitcoin_cv_static_qt,[\n+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n+    [[#include <QtCore>]],\n+    [[\n+      #if defined(QT_STATIC)\n+      return 0;\n+      #else\n+      choke me\n+      #endif\n+    ]])],\n+    [bitcoin_cv_static_qt=yes],\n+    [bitcoin_cv_static_qt=no])\n+  ])\n+  if test xbitcoin_cv_static_qt = xyes; then\n+    AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol for static Qt plugins])\n+  fi\n+])\n+\n+dnl Internal. Check if the link-requirements for static plugins are met.\n+dnl Requires: INCLUDES and LIBS must be populated as necessary.\n+dnl Inputs: $1: A series of Q_IMPORT_PLUGIN().\n+dnl Inputs: $2: The libraries that resolve $1.\n+dnl Output: QT_LIBS is prepended or configure exits.\n+AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGINS],[\n+  AC_MSG_CHECKING(for static Qt plugins: $2)\n+  CHECK_STATIC_PLUGINS_TEMP_LIBS=\"$LIBS\"\n+  LIBS=\"$2 $QT_LIBS $LIBS\"\n+  AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n+    #define QT_STATICPLUGIN\n+    #include <QtPlugin>\n+    $1]],\n+    [[return 0;]])],\n+    [AC_MSG_RESULT(yes); QT_LIBS=\"$2 $QT_LIBS\"],\n+    [AC_MSG_RESULT(no); BITCOIN_QT_FAIL(Could not resolve: $2)])\n+  LIBS=\"$CHECK_STATIC_PLUGINS_TEMP_LIBS\"\n+])\n+\n+dnl Internal. Find paths necessary for linking qt static plugins\n+dnl Inputs: bitcoin_qt_got_major_vers. 4 or 5.\n+dnl Inputs: qt_plugin_path. optional.\n+dnl Outputs: QT_LIBS is appended\n+AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n+  if test x$bitcoin_qt_got_major_vers = x5; then\n+      if test x$qt_plugin_path != x; then\n+        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n+        if test -d \"$qt_plugin_path/accessible\"; then\n+          QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n+        fi\n+      fi\n+     m4_ifdef([PKG_CHECK_MODULES],[\n+     if test x$use_pkgconfig = xyes; then\n+       PKG_CHECK_MODULES([QTPLATFORM], [Qt5PlatformSupport], [QT_LIBS=\"$QTPLATFORM_LIBS $QT_LIBS\"])\n+       if test x$TARGET_OS = xlinux; then\n+         PKG_CHECK_MODULES([X11XCB], [x11-xcb], [QT_LIBS=\"$X11XCB_LIBS $QT_LIBS\"])\n+         if ${PKG_CONFIG} --exists \"Qt5Core >= 5.5\" 2>/dev/null; then\n+           PKG_CHECK_MODULES([QTXCBQPA], [Qt5XcbQpa], [QT_LIBS=\"$QTXCBQPA_LIBS $QT_LIBS\"])\n+         fi\n+       elif test x$TARGET_OS = xdarwin; then\n+         PKG_CHECK_MODULES([QTPRINT], [Qt5PrintSupport], [QT_LIBS=\"$QTPRINT_LIBS $QT_LIBS\"])\n+       fi\n+     fi\n+     ])\n+  else\n+    if test x$qt_plugin_path != x; then\n+      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n+      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/codecs\"\n+    fi\n+  fi\n+])\n+\n+dnl Internal. Find Qt libraries using pkg-config.\n+dnl Inputs: bitcoin_qt_want_version (from --with-gui=). The version to check\n+dnl         first.\n+dnl Inputs: $1: If bitcoin_qt_want_version is \"auto\", check for this version\n+dnl         first.\n+dnl Outputs: All necessary QT_* variables are set.\n+dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n+dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n+AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n+  m4_ifdef([PKG_CHECK_MODULES],[\n+  auto_priority_version=$1\n+  if test x$auto_priority_version = x; then\n+    auto_priority_version=qt5\n+  fi\n+    if test x$bitcoin_qt_want_version = xqt5 ||  ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n+      QT_LIB_PREFIX=Qt5\n+      bitcoin_qt_got_major_vers=5\n+    else\n+      QT_LIB_PREFIX=Qt\n+      bitcoin_qt_got_major_vers=4\n+    fi\n+    qt5_modules=\"Qt5Core Qt5Gui Qt5Network Qt5Widgets\"\n+    qt4_modules=\"QtCore QtGui QtNetwork\"\n+    BITCOIN_QT_CHECK([\n+      if test x$bitcoin_qt_want_version = xqt5 || ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n+        PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes],[have_qt=no])\n+      elif test x$bitcoin_qt_want_version = xqt4 || ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt4 ); then\n+        PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes], [have_qt=no])\n+      fi\n+\n+      dnl qt version is set to 'auto' and the preferred version wasn't found. Now try the other.\n+      if test x$have_qt = xno && test x$bitcoin_qt_want_version = xauto; then\n+        if test x$auto_priority_version = xqt5; then\n+          PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt; bitcoin_qt_got_major_vers=4], [have_qt=no])\n+        else\n+          PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt5; bitcoin_qt_got_major_vers=5], [have_qt=no])\n+        fi\n+      fi\n+      if test x$have_qt != xyes; then\n+        have_qt=no\n+        BITCOIN_QT_FAIL([Qt dependencies not found])\n+      fi\n+    ])\n+    BITCOIN_QT_CHECK([\n+      PKG_CHECK_MODULES([QT_TEST], [${QT_LIB_PREFIX}Test], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n+      if test x$use_dbus != xno; then\n+        PKG_CHECK_MODULES([QT_DBUS], [${QT_LIB_PREFIX}DBus], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n+      fi\n+    ])\n+  ])\n+  true; dnl\n+])\n+\n+dnl Internal. Find Qt libraries without using pkg-config. Version is deduced\n+dnl from the discovered headers.\n+dnl Inputs: bitcoin_qt_want_version (from --with-gui=). The version to use.\n+dnl         If \"auto\", the version will be discovered by _BITCOIN_QT_CHECK_QT5.\n+dnl Outputs: All necessary QT_* variables are set.\n+dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n+dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n+AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n+  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+  TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+  CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n+  TEMP_LIBS=\"$LIBS\"\n+  BITCOIN_QT_CHECK([\n+    if test x$qt_include_path != x; then\n+      QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtWidgets -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n+      CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n+    fi\n+  ])\n+\n+  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QtPlugin],,BITCOIN_QT_FAIL(QtCore headers missing))])\n+  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QApplication],, BITCOIN_QT_FAIL(QtGui headers missing))])\n+  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QLocalSocket],, BITCOIN_QT_FAIL(QtNetwork headers missing))])\n+\n+  BITCOIN_QT_CHECK([\n+    if test x$bitcoin_qt_want_version = xauto; then\n+      _BITCOIN_QT_CHECK_QT5\n+    fi\n+    if test x$bitcoin_cv_qt5 = xyes || test x$bitcoin_qt_want_version = xqt5; then\n+      QT_LIB_PREFIX=Qt5\n+      bitcoin_qt_got_major_vers=5\n+    else\n+      QT_LIB_PREFIX=Qt\n+      bitcoin_qt_got_major_vers=4\n+    fi\n+  ])\n+\n+  BITCOIN_QT_CHECK([\n+    LIBS=\n+    if test x$qt_lib_path != x; then\n+      LIBS=\"$LIBS -L$qt_lib_path\"\n+    fi\n+\n+    if test x$TARGET_OS = xwindows; then\n+      AC_CHECK_LIB([imm32],      [main],, BITCOIN_QT_FAIL(libimm32 not found))\n+    fi\n+  ])\n+\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([z] ,[main],,AC_MSG_WARN([zlib not found. Assuming qt has it built-in])))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([png] ,[main],,AC_MSG_WARN([libpng not found. Assuming qt has it built-in])))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([jpeg] ,[main],,AC_MSG_WARN([libjpeg not found. Assuming qt has it built-in])))\n+  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([pcre16_exec], [qtpcre pcre16],,AC_MSG_WARN([libpcre16 not found. Assuming qt has it built-in])))\n+  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([hb_ot_tags_from_script] ,[qtharfbuzzng harfbuzz],,AC_MSG_WARN([libharfbuzz not found. Assuming qt has it built-in or support is disabled])))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXCore not found)))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXGui not found)))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXNetwork not found)))\n+  if test x$bitcoin_qt_got_major_vers = x5; then\n+    BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Widgets],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXWidgets not found)))\n+  fi\n+  QT_LIBS=\"$LIBS\"\n+  LIBS=\"$TEMP_LIBS\"\n+\n+  BITCOIN_QT_CHECK([\n+    LIBS=\n+    if test x$qt_lib_path != x; then\n+      LIBS=\"-L$qt_lib_path\"\n+    fi\n+    AC_CHECK_LIB([${QT_LIB_PREFIX}Test],      [main],, have_qt_test=no)\n+    AC_CHECK_HEADER([QTest],, have_qt_test=no)\n+    QT_TEST_LIBS=\"$LIBS\"\n+    if test x$use_dbus != xno; then\n+      LIBS=\n+      if test x$qt_lib_path != x; then\n+        LIBS=\"-L$qt_lib_path\"\n+      fi\n+      AC_CHECK_LIB([${QT_LIB_PREFIX}DBus],      [main],, have_qt_dbus=no)\n+      AC_CHECK_HEADER([QtDBus],, have_qt_dbus=no)\n+      QT_DBUS_LIBS=\"$LIBS\"\n+    fi\n+  ])\n+  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+  CXXFLAGS=\"$TEMP_CXXFLAGS\"\n+  LIBS=\"$TEMP_LIBS\"\n+])\n+"
      },
      {
        "sha": "66f106c7d47b9121576197c56f6a330e3972d188",
        "filename": "build-aux/m4/bitcoin_subdir_to_include.m4",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/bitcoin_subdir_to_include.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/build-aux/m4/bitcoin_subdir_to_include.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_subdir_to_include.m4?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,14 @@\n+dnl BITCOIN_SUBDIR_TO_INCLUDE([CPPFLAGS-VARIABLE-NAME],[SUBDIRECTORY-NAME],[HEADER-FILE])\n+dnl SUBDIRECTORY-NAME must end with a path separator\n+AC_DEFUN([BITCOIN_SUBDIR_TO_INCLUDE],[\n+  if test \"x$2\" = \"x\"; then\n+    AC_MSG_RESULT([default])\n+  else\n+    echo \"#include <$2$3.h>\" >conftest.cpp\n+    newinclpath=`${CXXCPP} ${CPPFLAGS} -M conftest.cpp 2>/dev/null | [ tr -d '\\\\n\\\\r\\\\\\\\' | sed -e 's/^.*[[:space:]:]\\(\\/[^[:space:]]*\\)]$3[\\.h[[:space:]].*$/\\1/' -e t -e d`]\n+    AC_MSG_RESULT([${newinclpath}])\n+    if test \"x${newinclpath}\" != \"x\"; then\n+      eval \"$1=\\\"\\$$1\\\"' -I${newinclpath}'\"\n+    fi\n+  fi\n+])"
      },
      {
        "sha": "6f21e7156d4d5ff0ec7099ea6e890b6f493ca7b3",
        "filename": "configure.ac",
        "status": "added",
        "additions": 1009,
        "deletions": 0,
        "changes": 1009,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,1009 @@\n+dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\n+AC_PREREQ([2.60])\n+define(_CLIENT_VERSION_MAJOR, 0)\n+define(_CLIENT_VERSION_MINOR, 12)\n+define(_CLIENT_VERSION_REVISION, 1)\n+define(_CLIENT_VERSION_BUILD, 3)\n+define(_CLIENT_VERSION_IS_RELEASE, true)\n+define(_COPYRIGHT_YEAR, 2018)\n+AC_INIT([Aither Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/aithercoin/aithercoin/issues],[aithercore])\n+AC_CONFIG_SRCDIR([src/main.cpp])\n+AC_CONFIG_HEADERS([src/config/aither-config.h])\n+AC_CONFIG_AUX_DIR([build-aux])\n+AC_CONFIG_MACRO_DIR([build-aux/m4])\n+\n+AC_CANONICAL_HOST\n+\n+AH_TOP([#ifndef AITHER_CONFIG_H])\n+AH_TOP([#define AITHER_CONFIG_H])\n+AH_BOTTOM([#endif //AITHER_CONFIG_H])\n+\n+dnl faketime breaks configure and is only needed for make. Disable it here.\n+unset FAKETIME\n+\n+dnl Automake init set-up and checks\n+AM_INIT_AUTOMAKE([no-define subdir-objects foreign])\n+\n+dnl faketime messes with timestamps and causes configure to be re-run.\n+dnl --disable-maintainer-mode can be used to bypass this.\n+AM_MAINTAINER_MODE([enable])\n+\n+dnl make the compilation flags quiet unless V=1 is used\n+m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n+\n+dnl Compiler checks (here before libtool).\n+if test \"x${CXXFLAGS+set}\" = \"xset\"; then\n+  CXXFLAGS_overridden=yes\n+else\n+  CXXFLAGS_overridden=no\n+fi\n+AC_PROG_CXX\n+m4_ifdef([AC_PROG_OBJCXX],[AC_PROG_OBJCXX])\n+\n+dnl By default, libtool for mingw refuses to link static libs into a dll for\n+dnl fear of mixing pic/non-pic objects, and import/export complications. Since\n+dnl we have those under control, re-enable that functionality.\n+case $host in\n+  *mingw*)\n+     lt_cv_deplibs_check_method=\"pass_all\"\n+  ;;\n+esac\n+dnl Libtool init checks.\n+LT_INIT([pic-only])\n+\n+dnl Check/return PATH for base programs.\n+AC_PATH_TOOL(AR, ar)\n+AC_PATH_TOOL(RANLIB, ranlib)\n+AC_PATH_TOOL(STRIP, strip)\n+AC_PATH_TOOL(GCOV, gcov)\n+AC_PATH_PROG(LCOV, lcov)\n+AC_PATH_PROG(JAVA, java)\n+AC_PATH_PROG(PYTHON, python)\n+AC_PATH_PROG(GENHTML, genhtml)\n+AC_PATH_PROG([GIT], [git])\n+AC_PATH_PROG(CCACHE,ccache)\n+AC_PATH_PROG(XGETTEXT,xgettext)\n+AC_PATH_PROG(HEXDUMP,hexdump)\n+AC_PATH_TOOL(READELF, readelf)\n+AC_PATH_TOOL(CPPFILT, c++filt)\n+\n+dnl pkg-config check.\n+PKG_PROG_PKG_CONFIG\n+\n+# Enable wallet\n+AC_ARG_ENABLE([wallet],\n+  [AS_HELP_STRING([--disable-wallet],\n+  [disable wallet (enabled by default)])],\n+  [enable_wallet=$enableval],\n+  [enable_wallet=yes])\n+\n+AC_ARG_WITH([miniupnpc],\n+  [AS_HELP_STRING([--with-miniupnpc],\n+  [enable UPNP (default is yes if libminiupnpc is found)])],\n+  [use_upnp=$withval],\n+  [use_upnp=auto])\n+\n+AC_ARG_ENABLE([upnp-default],\n+  [AS_HELP_STRING([--enable-upnp-default],\n+  [if UPNP is enabled, turn it on at startup (default is no)])],\n+  [use_upnp_default=$enableval],\n+  [use_upnp_default=no])\n+\n+AC_ARG_ENABLE(tests,\n+    AS_HELP_STRING([--disable-tests],[do not compile tests (default is to compile)]),\n+    [use_tests=$enableval],\n+    [use_tests=yes])\n+\n+AC_ARG_ENABLE(gui-tests,\n+    AS_HELP_STRING([--disable-gui-tests],[do not compile GUI tests (default is to compile if GUI and tests enabled)]),\n+    [use_gui_tests=$enableval],\n+    [use_gui_tests=$use_tests])\n+\n+AC_ARG_ENABLE(bench,\n+    AS_HELP_STRING([--disable-bench],[do not compile benchmarks (default is to compile)]),\n+    [use_bench=$enableval],\n+    [use_bench=yes])\n+\n+AC_ARG_WITH([comparison-tool],\n+    AS_HELP_STRING([--with-comparison-tool],[path to java comparison tool (requires --enable-tests)]),\n+    [use_comparison_tool=$withval],\n+    [use_comparison_tool=no])\n+\n+AC_ARG_ENABLE([comparison-tool-reorg-tests],\n+    AS_HELP_STRING([--enable-comparison-tool-reorg-tests],[enable expensive reorg tests in the comparison tool (default no)]),\n+    [use_comparison_tool_reorg_tests=$enableval],\n+    [use_comparison_tool_reorg_tests=no])\n+\n+AC_ARG_ENABLE([extended-rpc-tests],\n+    AS_HELP_STRING([--enable-extended-rpc-tests],[enable expensive RPC tests when using lcov (default no)]),\n+    [use_extended_rpc_tests=$enableval],\n+    [use_extended_rpc_tests=no])\n+\n+AC_ARG_WITH([qrencode],\n+  [AS_HELP_STRING([--with-qrencode],\n+  [enable QR code support (default is yes if qt is enabled and libqrencode is found)])],\n+  [use_qr=$withval],\n+  [use_qr=auto])\n+\n+AC_ARG_ENABLE([hardening],\n+  [AS_HELP_STRING([--disable-hardening],\n+  [do not attempt to harden the resulting executables (default is to harden)])],\n+  [use_hardening=$enableval],\n+  [use_hardening=yes])\n+\n+AC_ARG_ENABLE([reduce-exports],\n+  [AS_HELP_STRING([--enable-reduce-exports],\n+  [attempt to reduce exported symbols in the resulting executables (default is no)])],\n+  [use_reduce_exports=$enableval],\n+  [use_reduce_exports=no])\n+\n+AC_ARG_ENABLE([ccache],\n+  [AS_HELP_STRING([--disable-ccache],\n+  [do not use ccache for building (default is to use if found)])],\n+  [use_ccache=$enableval],\n+  [use_ccache=auto])\n+\n+AC_ARG_ENABLE([lcov],\n+  [AS_HELP_STRING([--enable-lcov],\n+  [enable lcov testing (default is no)])],\n+  [use_lcov=yes],\n+  [use_lcov=no])\n+\n+AC_ARG_ENABLE([glibc-back-compat],\n+  [AS_HELP_STRING([--enable-glibc-back-compat],\n+  [enable backwards compatibility with glibc])],\n+  [use_glibc_compat=$enableval],\n+  [use_glibc_compat=no])\n+\n+AC_ARG_ENABLE([zmq],\n+  [AS_HELP_STRING([--disable-zmq],\n+  [disable ZMQ notifications])],\n+  [use_zmq=$enableval],\n+  [use_zmq=yes])\n+\n+AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])\n+\n+# Enable debug\n+AC_ARG_ENABLE([debug],\n+    [AS_HELP_STRING([--enable-debug],\n+                    [use debug compiler flags and macros (default is no)])],\n+    [enable_debug=$enableval],\n+    [enable_debug=no])\n+\n+if test \"x$enable_debug\" = xyes; then\n+    CPPFLAGS=\"$CPPFLAGS -DDEBUG\"\n+    if test \"x$GCC\" = xyes; then\n+        CFLAGS=\"$CFLAGS -g3 -O0\"\n+    fi\n+\n+    if test \"x$GXX\" = xyes; then\n+        CXXFLAGS=\"$CXXFLAGS -g3 -O0\"\n+    fi\n+fi\n+\n+## TODO: Remove these hard-coded paths and flags. They are here for the sake of\n+##       compatibility with the legacy buildsystem.\n+##\n+if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n+  CXXFLAGS=\"$CXXFLAGS -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wno-self-assign\"\n+fi\n+CPPFLAGS=\"$CPPFLAGS -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n+\n+AC_ARG_WITH([utils],\n+  [AS_HELP_STRING([--with-utils],\n+  [build aither-cli aither-tx (default=yes)])],\n+  [build_bitcoin_utils=$withval],\n+  [build_bitcoin_utils=yes])\n+\n+AC_ARG_WITH([libs],\n+  [AS_HELP_STRING([--with-libs],\n+  [build libraries (default=yes)])],\n+  [build_bitcoin_libs=$withval],\n+  [build_bitcoin_libs=yes])\n+\n+AC_ARG_WITH([daemon],\n+  [AS_HELP_STRING([--with-daemon],\n+  [build aitherd daemon (default=yes)])],\n+  [build_bitcoind=$withval],\n+  [build_bitcoind=yes])\n+\n+AC_LANG_PUSH([C++])\n+\n+use_pkgconfig=yes\n+case $host in\n+  *mingw*)\n+\n+     #pkgconfig does more harm than good with MinGW\n+     use_pkgconfig=no\n+\n+     TARGET_OS=windows\n+     AC_CHECK_LIB([mingwthrd],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([kernel32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([user32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([gdi32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([comdlg32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([winspool],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([winmm],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([shell32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([comctl32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([ole32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([oleaut32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([uuid],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([rpcrt4],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([advapi32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([ws2_32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([mswsock],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([shlwapi],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([iphlpapi],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([crypt32],      [main],, AC_MSG_ERROR(lib missing))\n+\n+     # -static is interpreted by libtool, where it has a different meaning.\n+     # In libtool-speak, it's -all-static.\n+     AX_CHECK_LINK_FLAG([[-static]],[LIBTOOL_APP_LDFLAGS=\"$LIBTOOL_APP_LDFLAGS -all-static\"])\n+\n+     AC_PATH_PROG([MAKENSIS], [makensis], none)\n+     if test x$MAKENSIS = xnone; then\n+       AC_MSG_WARN(\"makensis not found. Cannot create installer.\")\n+     fi\n+\n+     AC_PATH_TOOL(WINDRES, windres, none)\n+     if test x$WINDRES = xnone; then\n+       AC_MSG_ERROR(\"windres not found\")\n+     fi\n+\n+     CPPFLAGS=\"$CPPFLAGS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB\"\n+     LEVELDB_TARGET_FLAGS=\"-DOS_WINDOWS\"\n+     if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n+       CXXFLAGS=\"$CXXFLAGS -w\"\n+     fi\n+     case $host in\n+       i?86-*) WINDOWS_BITS=32 ;;\n+       x86_64-*) WINDOWS_BITS=64 ;;\n+       *) AC_MSG_ERROR(\"Could not determine win32/win64 for installer\") ;;\n+     esac\n+     AC_SUBST(WINDOWS_BITS)\n+\n+     dnl libtool insists upon adding -nostdlib and a list of objects/libs to link against.\n+     dnl That breaks our ability to build dll's with static libgcc/libstdc++/libssp. Override\n+     dnl its command here, with the predeps/postdeps removed, and -static inserted. Postdeps are\n+     dnl also overridden to prevent their insertion later.\n+     dnl This should only affect dll's.\n+     archive_cmds_CXX=\"\\$CC -shared \\$libobjs \\$deplibs \\$compiler_flags -static -o \\$output_objdir/\\$soname \\${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker \\$lib\"\n+     postdeps_CXX=\n+\n+     ;;\n+  *darwin*)\n+     TARGET_OS=darwin\n+     LEVELDB_TARGET_FLAGS=\"-DOS_MACOSX\"\n+     if  test x$cross_compiling != xyes; then\n+       BUILD_OS=darwin\n+       AC_CHECK_PROG([PORT],port, port)\n+       if test x$PORT = xport; then\n+         dnl add default macports paths\n+         CPPFLAGS=\"$CPPFLAGS -isystem /opt/local/include\"\n+         LIBS=\"$LIBS -L/opt/local/lib\"\n+         if test -d /opt/local/include/db48; then\n+           CPPFLAGS=\"$CPPFLAGS -I/opt/local/include/db48\"\n+           LIBS=\"$LIBS -L/opt/local/lib/db48\"\n+         fi\n+       fi\n+\n+       AC_CHECK_PROG([BREW],brew, brew)\n+       if test x$BREW = xbrew; then\n+         dnl These Homebrew packages may be keg-only, meaning that they won't be found\n+         dnl in expected paths because they may conflict with system files. Ask\n+         dnl Homebrew where each one is located, then adjust paths accordingly.\n+         dnl It's safe to add these paths even if the functionality is disabled by\n+         dnl the user (--without-wallet or --without-gui for example).\n+\n+         openssl_prefix=`$BREW --prefix openssl 2>/dev/null`\n+         bdb_prefix=`$BREW --prefix berkeley-db4 2>/dev/null`\n+         qt5_prefix=`$BREW --prefix qt5 2>/dev/null`\n+         if test x$openssl_prefix != x; then\n+           PKG_CONFIG_PATH=\"$openssl_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\n+           export PKG_CONFIG_PATH\n+         fi\n+         if test x$bdb_prefix != x; then\n+           CPPFLAGS=\"$CPPFLAGS -I$bdb_prefix/include\"\n+           LIBS=\"$LIBS -L$bdb_prefix/lib\"\n+         fi\n+         if test x$qt5_prefix != x; then\n+           PKG_CONFIG_PATH=\"$qt5_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\n+           export PKG_CONFIG_PATH\n+         fi\n+       fi\n+     else\n+       case $build_os in\n+         *darwin*)\n+           BUILD_OS=darwin\n+           ;;\n+         *)\n+           AC_PATH_TOOL([INSTALLNAMETOOL], [install_name_tool], install_name_tool)\n+           AC_PATH_TOOL([OTOOL], [otool], otool)\n+           AC_PATH_PROGS([GENISOIMAGE], [genisoimage mkisofs],genisoimage)\n+\n+           dnl libtool will try to strip the static lib, which is a problem for\n+           dnl cross-builds because strip attempts to call a hard-coded ld,\n+           dnl which may not exist in the path. Stripping the .a is not\n+           dnl necessary, so just disable it.\n+           old_striplib=\n+           ;;\n+       esac\n+     fi\n+\n+     AX_CHECK_LINK_FLAG([[-Wl,-headerpad_max_install_names]], [LDFLAGS=\"$LDFLAGS -Wl,-headerpad_max_install_names\"])\n+     CPPFLAGS=\"$CPPFLAGS -DMAC_OSX\"\n+     OBJCXXFLAGS=\"$CXXFLAGS\"\n+     ;;\n+   *linux*)\n+     TARGET_OS=linux\n+     LEVELDB_TARGET_FLAGS=\"-DOS_LINUX\"\n+     ;;\n+   *)\n+     OTHER_OS=`echo ${host_os} | awk '{print toupper($0)}'`\n+     LEVELDB_TARGET_FLAGS=\"-DOS_${OTHER_OS}\"\n+     ;;\n+esac\n+\n+if test x$use_comparison_tool != xno; then\n+  AC_SUBST(JAVA_COMPARISON_TOOL, $use_comparison_tool)\n+fi\n+\n+if test x$use_comparison_tool_reorg_tests != xno; then\n+  if test x$use_comparison_tool = x; then\n+    AC_MSG_ERROR(\"comparison tool reorg tests but comparison tool was not specified\")\n+  fi\n+  AC_SUBST(COMPARISON_TOOL_REORG_TESTS, 1)\n+else\n+  AC_SUBST(COMPARISON_TOOL_REORG_TESTS, 0)\n+fi\n+\n+if test x$use_extended_rpc_tests != xno; then\n+  AC_SUBST(EXTENDED_RPC_TESTS, -extended)\n+fi\n+\n+if test x$use_lcov = xyes; then\n+  if test x$LCOV = x; then\n+    AC_MSG_ERROR(\"lcov testing requested but lcov not found\")\n+  fi\n+  if test x$GCOV = x; then\n+    AC_MSG_ERROR(\"lcov testing requested but gcov not found\")\n+  fi\n+  if test x$JAVA = x; then\n+    AC_MSG_ERROR(\"lcov testing requested but java not found\")\n+  fi\n+  if test x$PYTHON = x; then\n+    AC_MSG_ERROR(\"lcov testing requested but python not found\")\n+  fi\n+  if test x$GENHTML = x; then\n+    AC_MSG_ERROR(\"lcov testing requested but genhtml not found\")\n+  fi\n+  if test x$use_comparison_tool = x; then\n+    AC_MSG_ERROR(\"lcov testing requested but comparison tool was not specified\")\n+  fi\n+  LCOV=\"$LCOV --gcov-tool=$GCOV\"\n+  AX_CHECK_COMPILE_FLAG([--coverage],[CXXFLAGS=\"$CXXFLAGS --coverage\"],\n+    [AC_MSG_ERROR(\"lcov testing requested but --coverage flag does not work\")])\n+fi\n+\n+dnl Check for endianness\n+AC_C_BIGENDIAN\n+\n+dnl Check for pthread compile/link requirements\n+AX_PTHREAD\n+\n+# The following macro will add the necessary defines to aither-config.h, but\n+# they also need to be passed down to any subprojects. Pull the results out of\n+# the cache and add them to CPPFLAGS.\n+AC_SYS_LARGEFILE\n+# detect POSIX or GNU variant of strerror_r\n+AC_FUNC_STRERROR_R\n+\n+if test x$ac_cv_sys_file_offset_bits != x &&\n+   test x$ac_cv_sys_file_offset_bits != xno &&\n+   test x$ac_cv_sys_file_offset_bits != xunknown; then\n+  CPPFLAGS=\"$CPPFLAGS -D_FILE_OFFSET_BITS=$ac_cv_sys_file_offset_bits\"\n+fi\n+\n+if test x$ac_cv_sys_large_files != x &&\n+   test x$ac_cv_sys_large_files != xno &&\n+   test x$ac_cv_sys_large_files != xunknown; then\n+  CPPFLAGS=\"$CPPFLAGS -D_LARGE_FILES=$ac_cv_sys_large_files\"\n+fi\n+\n+AX_CHECK_LINK_FLAG([[-Wl,--large-address-aware]], [LDFLAGS=\"$LDFLAGS -Wl,--large-address-aware\"])\n+\n+AX_GCC_FUNC_ATTRIBUTE([visibility])\n+AX_GCC_FUNC_ATTRIBUTE([dllexport])\n+AX_GCC_FUNC_ATTRIBUTE([dllimport])\n+\n+if test x$use_glibc_compat != xno; then\n+\n+  #glibc absorbed clock_gettime in 2.17. librt (its previous location) is safe to link\n+  #in anyway for back-compat.\n+  AC_CHECK_LIB([rt],[clock_gettime],, AC_MSG_ERROR(lib missing))\n+\n+  #__fdelt_chk's params and return type have changed from long unsigned int to long int.\n+  # See which one is present here.\n+  AC_MSG_CHECKING(__fdelt_chk type)\n+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#ifdef _FORTIFY_SOURCE\n+                    #undef _FORTIFY_SOURCE\n+                  #endif\n+                  #define _FORTIFY_SOURCE 2\n+                  #include <sys/select.h>\n+     extern \"C\" long unsigned int __fdelt_warn(long unsigned int);]],[[]])],\n+    [ fdelt_type=\"long unsigned int\"],\n+    [ fdelt_type=\"long int\"])\n+  AC_MSG_RESULT($fdelt_type)\n+  AC_DEFINE_UNQUOTED(FDELT_TYPE, $fdelt_type,[parameter and return value type for __fdelt_chk])\n+else\n+  AC_SEARCH_LIBS([clock_gettime],[rt])\n+fi\n+\n+if test x$TARGET_OS != xwindows; then\n+  # All windows code is PIC, forcing it on just adds useless compile warnings\n+  AX_CHECK_COMPILE_FLAG([-fPIC],[PIC_FLAGS=\"-fPIC\"])\n+fi\n+\n+if test x$use_hardening != xno; then\n+  AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\n+  AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n+\n+  AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[\n+    AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[\n+      HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE\"\n+    ])\n+    HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2\"\n+  ])\n+\n+  AX_CHECK_LINK_FLAG([[-Wl,--dynamicbase]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--dynamicbase\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,--nxcompat]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--nxcompat\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,-z,relro]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,relro\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,now\"])\n+\n+  if test x$TARGET_OS != xwindows; then\n+    AX_CHECK_COMPILE_FLAG([-fPIE],[PIE_FLAGS=\"-fPIE\"])\n+    AX_CHECK_LINK_FLAG([[-pie]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -pie\"])\n+  fi\n+\n+  case $host in\n+    *mingw*)\n+       AC_CHECK_LIB([ssp],      [main],, AC_MSG_ERROR(lib missing))\n+    ;;\n+  esac\n+fi\n+\n+dnl this flag screws up non-darwin gcc even when the check fails. special-case it.\n+if test x$TARGET_OS = xdarwin; then\n+  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip\"])\n+fi\n+\n+AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h])\n+AC_SEARCH_LIBS([getaddrinfo_a], [anl], [AC_DEFINE(HAVE_GETADDRINFO_A, 1, [Define this symbol if you have getaddrinfo_a])])\n+AC_SEARCH_LIBS([inet_pton], [nsl resolv], [AC_DEFINE(HAVE_INET_PTON, 1, [Define this symbol if you have inet_pton])])\n+\n+AC_CHECK_DECLS([strnlen])\n+\n+AC_CHECK_DECLS([le16toh, le32toh, le64toh, htole16, htole32, htole64, be16toh, be32toh, be64toh, htobe16, htobe32, htobe64],,,\n+\t\t[#if HAVE_ENDIAN_H\n+                 #include <endian.h>\n+                 #elif HAVE_SYS_ENDIAN_H\n+                 #include <sys/endian.h>\n+                 #endif])\n+\n+AC_CHECK_DECLS([bswap_16, bswap_32, bswap_64],,,\n+\t\t[#if HAVE_BYTESWAP_H\n+                 #include <byteswap.h>\n+                 #endif])\n+\n+dnl Check for MSG_NOSIGNAL\n+AC_MSG_CHECKING(for MSG_NOSIGNAL)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]],\n+ [[ int f = MSG_NOSIGNAL; ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MSG_NOSIGNAL, 1,[Define this symbol if you have MSG_NOSIGNAL]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_MSG_CHECKING([for visibility attribute])\n+AC_LINK_IFELSE([AC_LANG_SOURCE([\n+  int foo_def( void ) __attribute__((visibility(\"default\")));\n+  int main(){}\n+  ])],\n+  [\n+    AC_DEFINE(HAVE_VISIBILITY_ATTRIBUTE,1,[Define if the visibility attribute is supported.])\n+    AC_MSG_RESULT(yes)\n+  ],\n+  [\n+    AC_MSG_RESULT(no)\n+    if test x$use_reduce_exports = xyes; then\n+      AC_MSG_ERROR([Cannot find a working visibility attribute. Use --disable-reduce-exports.])\n+    fi\n+  ]\n+)\n+\n+if test x$use_reduce_exports = xyes; then\n+  AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[RE_CXXFLAGS=\"-fvisibility=hidden\"],\n+  [AC_MSG_ERROR([Cannot set default symbol visibility. Use --disable-reduce-exports.])])\n+fi\n+\n+dnl This can go away when we require c++11\n+TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS -std=c++0x\"\n+AC_MSG_CHECKING(for c++11 atomics)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+  #include <atomic>\n+  ]],[[]])],\n+  [ AC_MSG_RESULT(yes); LEVELDB_ATOMIC_CPPFLAGS=\"-DLEVELDB_ATOMIC_PRESENT\"; LEVELDB_ATOMIC_CXXFLAGS=\"-std=c++0x\"],\n+  [ AC_MSG_RESULT(no)]\n+)\n+CXXFLAGS=\"$TEMP_CXXFLAGS\"\n+\n+LEVELDB_CPPFLAGS=\n+LIBLEVELDB=\n+LIBMEMENV=\n+AM_CONDITIONAL([EMBEDDED_LEVELDB],[true])\n+AC_SUBST(LEVELDB_CPPFLAGS)\n+AC_SUBST(LIBLEVELDB)\n+AC_SUBST(LIBMEMENV)\n+\n+if test x$enable_wallet != xno; then\n+    dnl Check for libdb_cxx only if wallet enabled\n+    BITCOIN_FIND_BDB48\n+fi\n+\n+dnl Check for libminiupnpc (optional)\n+if test x$use_upnp != xno; then\n+  AC_CHECK_HEADERS(\n+    [miniupnpc/miniwget.h miniupnpc/miniupnpc.h miniupnpc/upnpcommands.h miniupnpc/upnperrors.h],\n+    [AC_CHECK_LIB([miniupnpc], [main],[MINIUPNPC_LIBS=-lminiupnpc], [have_miniupnpc=no])],\n+    [have_miniupnpc=no]\n+  )\n+fi\n+\n+BITCOIN_QT_INIT\n+\n+dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n+BITCOIN_QT_CONFIGURE([$use_pkgconfig], [qt5])\n+\n+if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests = xnononono; then\n+    use_boost=no\n+else\n+    use_boost=yes\n+fi\n+\n+if test x$use_boost = xyes; then\n+\n+dnl Check for boost libs\n+AX_BOOST_BASE\n+AX_BOOST_SYSTEM\n+AX_BOOST_FILESYSTEM\n+AX_BOOST_PROGRAM_OPTIONS\n+AX_BOOST_THREAD\n+AX_BOOST_CHRONO\n+\n+\n+if test x$use_reduce_exports = xyes; then\n+  AC_MSG_CHECKING([for working boost reduced exports])\n+  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+  CPPFLAGS=\"$BOOST_CPPFLAGS $CPPFLAGS\"\n+  AC_PREPROC_IFELSE([AC_LANG_PROGRAM([[\n+      @%:@include <boost/version.hpp>\n+    ]], [[\n+      #if BOOST_VERSION >= 104900\n+      // Everything is okay\n+      #else\n+      #  error Boost version is too old\n+      #endif\n+    ]])],[\n+      AC_MSG_RESULT(yes)\n+    ],[\n+    AC_MSG_ERROR([boost versions < 1.49 are known to be broken with reduced exports. Use --disable-reduce-exports.])\n+  ])\n+  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+fi\n+fi\n+\n+if test x$use_reduce_exports = xyes; then\n+    CXXFLAGS=\"$CXXFLAGS $RE_CXXFLAGS\"\n+    AX_CHECK_LINK_FLAG([[-Wl,--exclude-libs,ALL]], [RELDFLAGS=\"-Wl,--exclude-libs,ALL\"])\n+fi\n+\n+if test x$use_tests = xyes; then\n+\n+  if test x$HEXDUMP = x; then\n+    AC_MSG_ERROR(hexdump is required for tests)\n+  fi\n+\n+\n+  if test x$use_boost = xyes; then\n+\n+  AX_BOOST_UNIT_TEST_FRAMEWORK\n+\n+  dnl Determine if -DBOOST_TEST_DYN_LINK is needed\n+  AC_MSG_CHECKING([for dynamic linked boost test])\n+  TEMP_LIBS=\"$LIBS\"\n+  LIBS=\"$LIBS $BOOST_LDFLAGS $BOOST_UNIT_TEST_FRAMEWORK_LIB\"\n+  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+  CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+  AC_LINK_IFELSE([AC_LANG_SOURCE([\n+       #define BOOST_TEST_DYN_LINK\n+       #define BOOST_TEST_MAIN\n+        #include <boost/test/unit_test.hpp>\n+\n+       ])],\n+    [AC_MSG_RESULT(yes)]\n+    [TESTDEFS=\"$TESTDEFS -DBOOST_TEST_DYN_LINK\"],\n+    [AC_MSG_RESULT(no)])\n+  LIBS=\"$TEMP_LIBS\"\n+  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+\n+  fi\n+fi\n+\n+if test x$use_boost = xyes; then\n+\n+BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_PROGRAM_OPTIONS_LIB $BOOST_THREAD_LIB $BOOST_CHRONO_LIB\"\n+\n+dnl Boost >= 1.50 uses sleep_for rather than the now-deprecated sleep, however\n+dnl it was broken from 1.50 to 1.52 when backed by nanosleep. Use sleep_for if\n+dnl a working version is available, else fall back to sleep. sleep was removed\n+dnl after 1.56.\n+dnl If neither is available, abort.\n+TEMP_LIBS=\"$LIBS\"\n+LIBS=\"$BOOST_LIBS $LIBS\"\n+TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n+  #include <boost/thread/thread.hpp>\n+  #include <boost/version.hpp>\n+  ]],[[\n+  #if BOOST_VERSION >= 105000 && (!defined(BOOST_HAS_NANOSLEEP) || BOOST_VERSION >= 105200)\n+      boost::this_thread::sleep_for(boost::chrono::milliseconds(0));\n+  #else\n+   choke me\n+  #endif\n+  ]])],\n+  [boost_sleep=yes;\n+     AC_DEFINE(HAVE_WORKING_BOOST_SLEEP_FOR, 1, [Define this symbol if boost sleep_for works])],\n+  [boost_sleep=no])\n+LIBS=\"$TEMP_LIBS\"\n+CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+\n+if test x$boost_sleep != xyes; then\n+TEMP_LIBS=\"$LIBS\"\n+LIBS=\"$BOOST_LIBS $LIBS\"\n+TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n+  #include <boost/version.hpp>\n+  #include <boost/thread.hpp>\n+  #include <boost/date_time/posix_time/posix_time_types.hpp>\n+  ]],[[\n+  #if BOOST_VERSION <= 105600\n+      boost::this_thread::sleep(boost::posix_time::milliseconds(0));\n+  #else\n+   choke me\n+  #endif\n+  ]])],\n+  [boost_sleep=yes; AC_DEFINE(HAVE_WORKING_BOOST_SLEEP, 1, [Define this symbol if boost sleep works])],\n+  [boost_sleep=no])\n+LIBS=\"$TEMP_LIBS\"\n+CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+fi\n+\n+if test x$boost_sleep != xyes; then\n+  AC_MSG_ERROR(No working boost sleep implementation found.)\n+fi\n+\n+fi\n+\n+if test x$use_pkgconfig = xyes; then\n+\n+  if test x\"$PKG_CONFIG\" = \"x\"; then\n+    AC_MSG_ERROR(pkg-config not found.)\n+  fi\n+\n+  : #NOP\n+  m4_ifdef(\n+    [PKG_CHECK_MODULES],\n+    [\n+      PKG_CHECK_MODULES([SSL], [libssl],, [AC_MSG_ERROR(openssl  not found.)])\n+      PKG_CHECK_MODULES([CRYPTO], [libcrypto],,[AC_MSG_ERROR(libcrypto  not found.)])\n+      BITCOIN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [BITCOIN_QT_FAIL(libprotobuf not found)])])\n+      if test x$use_qr != xno; then\n+        BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n+      fi\n+      if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n+        PKG_CHECK_MODULES([EVENT], [libevent],, [AC_MSG_ERROR(libevent not found.)])\n+        if test x$TARGET_OS != xwindows; then\n+          PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads],, [AC_MSG_ERROR(libevent_pthreads not found.)])\n+        fi\n+      fi\n+\n+      if test \"x$use_zmq\" = \"xyes\"; then\n+        PKG_CHECK_MODULES([ZMQ],[libzmq >= 4],\n+          [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],\n+          [AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n+           AC_MSG_WARN([libzmq version 4.x or greater not found, disabling])\n+           use_zmq=no])\n+      else\n+          AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n+      fi\n+    ]\n+  )\n+else\n+  AC_CHECK_HEADER([openssl/crypto.h],,AC_MSG_ERROR(libcrypto headers missing))\n+  AC_CHECK_LIB([crypto],      [main],CRYPTO_LIBS=-lcrypto, AC_MSG_ERROR(libcrypto missing))\n+\n+  AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)\n+  AC_CHECK_LIB([ssl],         [main],SSL_LIBS=-lssl, AC_MSG_ERROR(libssl missing))\n+\n+  if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n+    AC_CHECK_HEADER([event2/event.h],, AC_MSG_ERROR(libevent headers missing),)\n+    AC_CHECK_LIB([event],[main],EVENT_LIBS=-levent,AC_MSG_ERROR(libevent missing))\n+    if test x$TARGET_OS != xwindows; then\n+      AC_CHECK_LIB([event_pthreads],[main],EVENT_PTHREADS_LIBS=-levent_pthreads,AC_MSG_ERROR(libevent_pthreads missing))\n+    fi\n+  fi\n+\n+  if test \"x$use_zmq\" = \"xyes\"; then\n+     AC_CHECK_HEADER([zmq.h],\n+       [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],\n+       [AC_MSG_WARN([zmq.h not found, disabling zmq support])\n+        use_zmq=no\n+        AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])])\n+     AC_CHECK_LIB([zmq],[zmq_ctx_shutdown],ZMQ_LIBS=-lzmq,\n+       [AC_MSG_WARN([libzmq >= 4.0 not found, disabling zmq support])\n+        use_zmq=no\n+        AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])])\n+  else\n+    AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n+  fi\n+\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], BITCOIN_QT_FAIL(libprotobuf not found)))\n+  if test x$use_qr != xno; then\n+    BITCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])\n+    BITCOIN_QT_CHECK([AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)])\n+  fi\n+fi\n+\n+CXXFLAGS_TEMP=\"$CXXFLAGS\"\n+LIBS_TEMP=\"$LIBS\"\n+CXXFLAGS=\"$CXXFLAGS $SSL_CFLAGS $CRYPTO_CFLAGS\"\n+LIBS=\"$LIBS $SSL_LIBS $CRYPTO_LIBS\"\n+AC_CHECK_HEADER([openssl/ec.h],, AC_MSG_ERROR(OpenSSL ec header missing),)\n+CXXFLAGS=\"$CXXFLAGS_TEMP\"\n+LIBS=\"$LIBS_TEMP\"\n+\n+BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)\n+\n+AC_MSG_CHECKING([whether to build aitherd])\n+AM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])\n+AC_MSG_RESULT($build_bitcoind)\n+\n+AC_MSG_CHECKING([whether to build utils (aither-cli aither-tx)])\n+AM_CONDITIONAL([BUILD_BITCOIN_UTILS], [test x$build_bitcoin_utils = xyes])\n+AC_MSG_RESULT($build_bitcoin_utils)\n+\n+AC_MSG_CHECKING([whether to build libraries])\n+AM_CONDITIONAL([BUILD_BITCOIN_LIBS], [test x$build_bitcoin_libs = xyes])\n+if test x$build_bitcoin_libs = xyes; then\n+  AC_DEFINE(HAVE_CONSENSUS_LIB, 1, [Define this symbol if the consensus lib has been built])\n+  AC_CONFIG_FILES([libbitcoinconsensus.pc:libbitcoinconsensus.pc.in])\n+fi\n+AC_MSG_RESULT($build_bitcoin_libs)\n+\n+AC_LANG_POP\n+\n+if test \"x$use_ccache\" != \"xno\"; then\n+  AC_MSG_CHECKING(if ccache should be used)\n+  if test x$CCACHE = x; then\n+    if test \"x$use_ccache\" = \"xyes\"; then\n+      AC_MSG_ERROR([ccache not found.]);\n+    else\n+      use_ccache=no\n+    fi\n+  else\n+    use_ccache=yes\n+    CC=\"$ac_cv_path_CCACHE $CC\"\n+    CXX=\"$ac_cv_path_CCACHE $CXX\"\n+  fi\n+  AC_MSG_RESULT($use_ccache)\n+fi\n+if test \"x$use_ccache\" = \"xyes\"; then\n+    AX_CHECK_PREPROC_FLAG([-Qunused-arguments],[CPPFLAGS=\"-Qunused-arguments $CPPFLAGS\"])\n+fi\n+\n+dnl enable wallet\n+AC_MSG_CHECKING([if wallet should be enabled])\n+if test x$enable_wallet != xno; then\n+  AC_MSG_RESULT(yes)\n+  AC_DEFINE_UNQUOTED([ENABLE_WALLET],[1],[Define to 1 to enable wallet functions])\n+\n+else\n+  AC_MSG_RESULT(no)\n+fi\n+\n+dnl enable upnp support\n+AC_MSG_CHECKING([whether to build with support for UPnP])\n+if test x$have_miniupnpc = xno; then\n+  if test x$use_upnp = xyes; then\n+     AC_MSG_ERROR(\"UPnP requested but cannot be built. use --without-miniupnpc\")\n+  fi\n+  AC_MSG_RESULT(no)\n+else\n+  if test x$use_upnp != xno; then\n+    AC_MSG_RESULT(yes)\n+    AC_MSG_CHECKING([whether to build with UPnP enabled by default])\n+    use_upnp=yes\n+    upnp_setting=0\n+    if test x$use_upnp_default != xno; then\n+      use_upnp_default=yes\n+      upnp_setting=1\n+    fi\n+    AC_MSG_RESULT($use_upnp_default)\n+    AC_DEFINE_UNQUOTED([USE_UPNP],[$upnp_setting],[UPnP support not compiled if undefined, otherwise value (0 or 1) determines default state])\n+    if test x$TARGET_OS = xwindows; then\n+      MINIUPNPC_CPPFLAGS=\"-DSTATICLIB -DMINIUPNP_STATICLIB\"\n+    fi\n+  else\n+    AC_MSG_RESULT(no)\n+  fi\n+fi\n+\n+dnl these are only used when qt is enabled\n+BUILD_TEST_QT=\"\"\n+if test x$bitcoin_enable_qt != xno; then\n+  dnl enable dbus support\n+  AC_MSG_CHECKING([whether to build GUI with support for D-Bus])\n+  if test x$bitcoin_enable_qt_dbus != xno; then\n+    AC_DEFINE([USE_DBUS],[1],[Define if dbus support should be compiled in])\n+  fi\n+  AC_MSG_RESULT($bitcoin_enable_qt_dbus)\n+\n+  dnl enable qr support\n+  AC_MSG_CHECKING([whether to build GUI with support for QR codes])\n+  if test x$have_qrencode = xno; then\n+    if test x$use_qr = xyes; then\n+     AC_MSG_ERROR(\"QR support requested but cannot be built. use --without-qrencode\")\n+    fi\n+    AC_MSG_RESULT(no)\n+  else\n+    if test x$use_qr != xno; then\n+      AC_MSG_RESULT(yes)\n+      AC_DEFINE([USE_QRCODE],[1],[Define if QR support should be compiled in])\n+      use_qr=yes\n+    else\n+      AC_MSG_RESULT(no)\n+    fi\n+  fi\n+\n+  if test x$XGETTEXT = x; then\n+    AC_MSG_WARN(\"xgettext is required to update qt translations\")\n+  fi\n+\n+  AC_MSG_CHECKING([whether to build test_aither-qt])\n+  if test x$use_gui_tests$bitcoin_enable_qt_test = xyesyes; then\n+    AC_MSG_RESULT([yes])\n+    BUILD_TEST_QT=\"yes\"\n+  else\n+    AC_MSG_RESULT([no])\n+  fi\n+fi\n+\n+AM_CONDITIONAL([ENABLE_ZMQ], [test \"x$use_zmq\" = \"xyes\"])\n+\n+AC_MSG_CHECKING([whether to build test_aither])\n+if test x$use_tests = xyes; then\n+  AC_MSG_RESULT([yes])\n+  BUILD_TEST=\"yes\"\n+else\n+  AC_MSG_RESULT([no])\n+  BUILD_TEST=\"\"\n+fi\n+\n+AC_MSG_CHECKING([whether to reduce exports])\n+if test x$use_reduce_exports = xyes; then\n+  AC_MSG_RESULT([yes])\n+else\n+  AC_MSG_RESULT([no])\n+fi\n+\n+if test x$build_bitcoin_utils$build_bitcoin_libs$build_bitcoind$bitcoin_enable_qt$use_tests = xnonononono; then\n+  AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-libs --with-daemon --with-gui or --enable-tests])\n+fi\n+\n+AM_CONDITIONAL([TARGET_DARWIN], [test x$TARGET_OS = xdarwin])\n+AM_CONDITIONAL([BUILD_DARWIN], [test x$BUILD_OS = xdarwin])\n+AM_CONDITIONAL([TARGET_WINDOWS], [test x$TARGET_OS = xwindows])\n+AM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet = xyes])\n+AM_CONDITIONAL([ENABLE_TESTS],[test x$BUILD_TEST = xyes])\n+AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])\n+AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$BUILD_TEST_QT = xyes])\n+AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])\n+AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n+AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\n+AM_CONDITIONAL([USE_COMPARISON_TOOL],[test x$use_comparison_tool != xno])\n+AM_CONDITIONAL([USE_COMPARISON_TOOL_REORG_TESTS],[test x$use_comparison_tool_reorg_test != xno])\n+AM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])\n+AM_CONDITIONAL([HARDEN],[test x$use_hardening = xyes])\n+\n+AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\n+AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])\n+AC_DEFINE(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION, [Build revision])\n+AC_DEFINE(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD, [Version Build])\n+AC_DEFINE(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE, [Version is release])\n+AC_DEFINE(COPYRIGHT_YEAR, _COPYRIGHT_YEAR, [Version is release])\n+AC_SUBST(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR)\n+AC_SUBST(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR)\n+AC_SUBST(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION)\n+AC_SUBST(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD)\n+AC_SUBST(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE)\n+AC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)\n+\n+AC_SUBST(RELDFLAGS)\n+AC_SUBST(HARDENED_CXXFLAGS)\n+AC_SUBST(HARDENED_CPPFLAGS)\n+AC_SUBST(HARDENED_LDFLAGS)\n+AC_SUBST(PIC_FLAGS)\n+AC_SUBST(PIE_FLAGS)\n+AC_SUBST(LIBTOOL_APP_LDFLAGS)\n+AC_SUBST(USE_UPNP)\n+AC_SUBST(USE_QRCODE)\n+AC_SUBST(BOOST_LIBS)\n+AC_SUBST(TESTDEFS)\n+AC_SUBST(LEVELDB_TARGET_FLAGS)\n+AC_SUBST(MINIUPNPC_CPPFLAGS)\n+AC_SUBST(MINIUPNPC_LIBS)\n+AC_SUBST(LEVELDB_ATOMIC_CPPFLAGS)\n+AC_SUBST(LEVELDB_ATOMIC_CXXFLAGS)\n+AC_CONFIG_FILES([Makefile src/Makefile share/setup.nsi share/qt/Info.plist src/test/buildenv.py])\n+AC_CONFIG_FILES([qa/pull-tester/run-bitcoind-for-test.sh],[chmod +x qa/pull-tester/run-bitcoind-for-test.sh])\n+AC_CONFIG_FILES([qa/pull-tester/tests_config.py],[chmod +x qa/pull-tester/tests_config.py])\n+\n+dnl boost's m4 checks do something really nasty: they export these vars. As a\n+dnl result, they leak into secp256k1's configure and crazy things happen.\n+dnl Until this is fixed upstream and we've synced, we'll just un-export them.\n+CPPFLAGS_TEMP=\"$CPPFLAGS\"\n+unset CPPFLAGS\n+CPPFLAGS=\"$CPPFLAGS_TEMP\"\n+\n+LDFLAGS_TEMP=\"$LDFLAGS\"\n+unset LDFLAGS\n+LDFLAGS=\"$LDFLAGS_TEMP\"\n+\n+LIBS_TEMP=\"$LIBS\"\n+unset LIBS\n+LIBS=\"$LIBS_TEMP\"\n+\n+PKGCONFIG_PATH_TEMP=\"$PKG_CONFIG_PATH\"\n+unset PKG_CONFIG_PATH\n+PKG_CONFIG_PATH=\"$PKGCONFIG_PATH_TEMP\"\n+\n+PKGCONFIG_LIBDIR_TEMP=\"$PKG_CONFIG_LIBDIR\"\n+unset PKG_CONFIG_LIBDIR\n+PKG_CONFIG_LIBDIR=\"$PKGCONFIG_LIBDIR_TEMP\"\n+\n+ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --with-bignum=no --enable-module-recovery\"\n+AC_CONFIG_SUBDIRS([src/secp256k1 src/univalue])\n+\n+AC_OUTPUT\n+\n+dnl Taken from https://wiki.debian.org/RpathIssue\n+case $host in\n+   *-*-linux-gnu)\n+     AC_MSG_RESULT([Fixing libtool for -rpath problems.])\n+     sed < libtool > libtool-2 \\\n+     's/^hardcode_libdir_flag_spec.*$'/'hardcode_libdir_flag_spec=\" -D__LIBTOOL_IS_A_FOOL__ \"/'\n+     mv libtool-2 libtool\n+     chmod 755 libtool\n+   ;;\n+esac\n+\n+dnl Replace the BUILDDIR path with the correct Windows path if compiling on Native Windows\n+case ${OS} in\n+   *Windows*)\n+     sed  's/BUILDDIR=\"\\/\\([[a-z]]\\)/BUILDDIR=\"\\1:/'  qa/pull-tester/tests_config.py > qa/pull-tester/tests_config-2.py\n+     mv qa/pull-tester/tests_config-2.py qa/pull-tester/tests_config.py\n+   ;;\n+esac"
      },
      {
        "sha": "a49f8d48f901d2925567dcb1fb95c67ad0f73f22",
        "filename": "contrib/README.md",
        "status": "added",
        "additions": 56,
        "deletions": 0,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/README.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,56 @@\n+Wallet Tools\n+---------------------\n+\n+### [SpendFrom](/contrib/spendfrom) ###\n+\n+Use the raw transactions API to send coins received on a particular\n+address (or addresses).\n+\n+Repository Tools\n+---------------------\n+\n+### [Developer tools](/contrib/devtools) ###\n+Specific tools for developers working on this repository.\n+Contains the script `github-merge.sh` for merging github pull requests securely and signing them using GPG.\n+\n+### [Verify-Commits](/contrib/verify-commits) ###\n+Tool to verify that every merge commit was signed by a developer using the above `github-merge.sh` script.\n+\n+### [Linearize](/contrib/linearize) ###\n+Construct a linear, no-fork, best version of the blockchain.\n+\n+### [Qos](/contrib/qos) ###\n+\n+A Linux bash script that will set up traffic control (tc) to limit the outgoing bandwidth for connections to the Aither network. This means one can have an always-on aitherd instance running, and another local aitherd/aither-qt instance which connects to this node and receives blocks from it.\n+\n+### [Seeds](/contrib/seeds) ###\n+Utility to generate the pnSeed[] array that is compiled into the client.\n+\n+Build Tools and Keys\n+---------------------\n+\n+### [Debian](/contrib/debian) ###\n+Contains files used to package aitherd/aither-qt\n+for Debian-based Linux systems. If you compile aitherd/aither-qt yourself, there are some useful files here.\n+\n+### [Gitian-descriptors](/contrib/gitian-descriptors) ###\n+Gavin's notes on getting gitian builds up and running using KVM.\n+\n+### [Gitian-downloader](/contrib/gitian-downloader)\n+Various PGP files of core developers. \n+\n+### [MacDeploy](/contrib/macdeploy) ###\n+Scripts and notes for Mac builds. \n+\n+Test and Verify Tools \n+---------------------\n+\n+### [TestGen](/contrib/testgen) ###\n+Utilities to generate test vectors for the data-driven Aither tests.\n+\n+### [Test Patches](/contrib/test-patches) ###\n+These patches are applied when the automated pull-tester\n+tests each pull and when master is tested using jenkins.\n+\n+### [Verify SF Binaries](/contrib/verifysfbinaries) ###\n+This script attempts to download and verify the signature file SHA256SUMS.asc from SourceForge."
      },
      {
        "sha": "548ea7dc428f32bccae5eb879e80f632947de431",
        "filename": "contrib/aither-qt.pro",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/aither-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/aither-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/aither-qt.pro?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,22 @@\n+FORMS += \\\n+    ../src/qt/forms/aboutdialog.ui \\\n+    ../src/qt/forms/addressbookpage.ui \\\n+    ../src/qt/forms/askpassphrasedialog.ui \\\n+    ../src/qt/forms/coincontroldialog.ui \\\n+    ../src/qt/forms/darksendconfig.ui \\\n+    ../src/qt/forms/debugwindow.ui \\\n+    ../src/qt/forms/editaddressdialog.ui \\\n+    ../src/qt/forms/helpmessagedialog.ui \\\n+    ../src/qt/forms/intro.ui \\\n+    ../src/qt/forms/openuridialog.ui \\\n+    ../src/qt/forms/optionsdialog.ui \\\n+    ../src/qt/forms/overviewpage.ui \\\n+    ../src/qt/forms/receivecoinsdialog.ui \\\n+    ../src/qt/forms/receiverequestdialog.ui \\\n+    ../src/qt/forms/sendcoinsdialog.ui \\\n+    ../src/qt/forms/sendcoinsentry.ui \\\n+    ../src/qt/forms/signverifymessagedialog.ui \\\n+    ../src/qt/forms/transactiondescdialog.ui\n+\n+RESOURCES += \\\n+    ../src/qt/aither.qrc"
      },
      {
        "sha": "356cfe77d4a49cab3736caab47121e4c5106d34f",
        "filename": "contrib/aitherd.bash-completion",
        "status": "added",
        "additions": 145,
        "deletions": 0,
        "changes": 145,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/aitherd.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/aitherd.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/aitherd.bash-completion?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,145 @@\n+# bash programmable completion for aitherd(1) and aither-cli(1)\n+# Copyright (c) 2012,2014 Christian von Roques <roques@mti.ag>\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+have aitherd && {\n+\n+# call $aitherd for RPC\n+_aither_rpc() {\n+    # determine already specified args necessary for RPC\n+    local rpcargs=()\n+    for i in ${COMP_LINE}; do\n+        case \"$i\" in\n+            -conf=*|-proxy*|-rpc*)\n+                rpcargs=( \"${rpcargs[@]}\" \"$i\" )\n+                ;;\n+        esac\n+    done\n+    $aitherd \"${rpcargs[@]}\" \"$@\"\n+}\n+\n+# Add aither accounts to COMPREPLY\n+_aither_accounts() {\n+    local accounts\n+    accounts=$(_aither_rpc listaccounts | awk '/\".*\"/ { a=$1; gsub(/\"/, \"\", a); print a}')\n+    COMPREPLY=( \"${COMPREPLY[@]}\" $( compgen -W \"$accounts\" -- \"$cur\" ) )\n+}\n+\n+_aitherd() {\n+    local cur prev words=() cword\n+    local aitherd\n+\n+    # save and use original argument to invoke aitherd\n+    # aitherd might not be in $PATH\n+    aitherd=\"$1\"\n+\n+    COMPREPLY=()\n+    _get_comp_words_by_ref -n = cur prev words cword\n+\n+    if ((cword > 4)); then\n+        case ${words[cword-4]} in\n+            listtransactions)\n+                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+            signrawtransaction)\n+                COMPREPLY=( $( compgen -W \"ALL NONE SINGLE ALL|ANYONECANPAY NONE|ANYONECANPAY SINGLE|ANYONECANPAY\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+        esac\n+    fi\n+\n+    if ((cword > 3)); then\n+        case ${words[cword-3]} in\n+            addmultisigaddress)\n+                _aither_accounts\n+                return 0\n+                ;;\n+            getbalance|gettxout|importaddress|importprivkey|listreceivedbyaccount|listreceivedbyaddress|listsinceblock)\n+                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+        esac\n+    fi\n+\n+    if ((cword > 2)); then\n+        case ${words[cword-2]} in\n+            addnode)\n+                COMPREPLY=( $( compgen -W \"add remove onetry\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+            getblock|getrawtransaction|gettransaction|listaccounts|listreceivedbyaccount|listreceivedbyaddress|sendrawtransaction)\n+                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+            move|setaccount)\n+                _aither_accounts\n+                return 0\n+                ;;\n+        esac\n+    fi\n+\n+    case \"$prev\" in\n+        backupwallet|dumpwallet|importwallet)\n+            _filedir\n+            return 0\n+            ;;\n+        getmempool|lockunspent|setgenerate)\n+            COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+            return 0\n+            ;;\n+        getaccountaddress|getaddressesbyaccount|getbalance|getnewaddress|getreceivedbyaccount|listtransactions|move|sendfrom|sendmany)\n+            _aither_accounts\n+            return 0\n+            ;;\n+    esac\n+\n+    case \"$cur\" in\n+        -conf=*|-pid=*|-loadblock=*|-wallet=*)\n+            cur=\"${cur#*=}\"\n+            _filedir\n+            return 0\n+            ;;\n+        -datadir=*)\n+            cur=\"${cur#*=}\"\n+            _filedir -d\n+            return 0\n+            ;;\n+        -*=*)\t# prevent nonsense completions\n+            return 0\n+            ;;\n+        *)\n+            local helpopts commands\n+\n+            # only parse --help if senseful\n+            if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n+                helpopts=$($aitherd --help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n+            fi\n+\n+            # only parse help if senseful\n+            if [[ -z \"$cur\" || \"$cur\" =~ ^[a-z] ]]; then\n+                commands=$(_aither_rpc help 2>/dev/null | awk '$1 ~ /^[a-z]/ { print $1; }')\n+            fi\n+\n+            COMPREPLY=( $( compgen -W \"$helpopts $commands\" -- \"$cur\" ) )\n+\n+            # Prevent space if an argument is desired\n+            if [[ $COMPREPLY == *= ]]; then\n+                compopt -o nospace\n+            fi\n+            return 0\n+            ;;\n+    esac\n+}\n+\n+complete -F _aitherd aitherd aither-cli\n+}\n+\n+# Local variables:\n+# mode: shell-script\n+# sh-basic-offset: 4\n+# sh-indent-comment: t\n+# indent-tabs-mode: nil\n+# End:\n+# ex: ts=4 sw=4 et filetype=sh"
      },
      {
        "sha": "b02b2991772e6e6ca73e9767317ea69bc34dbf75",
        "filename": "contrib/bitrpc/bitrpc.py",
        "status": "removed",
        "additions": 0,
        "deletions": 324,
        "changes": 324,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/bitrpc/bitrpc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/bitrpc/bitrpc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitrpc/bitrpc.py?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,324 +0,0 @@\n-from jsonrpc import ServiceProxy\n-import sys\n-import string\n-\n-# ===== BEGIN USER SETTINGS =====\n-# if you do not set these you will be prompted for a password for every command\n-rpcuser = \"\"\n-rpcpass = \"\"\n-# ====== END USER SETTINGS ======\n-\n-\n-if rpcpass == \"\":\n-\taccess = ServiceProxy(\"http://127.0.0.1:8332\")\n-else:\n-\taccess = ServiceProxy(\"http://\"+rpcuser+\":\"+rpcpass+\"@127.0.0.1:8332\")\n-cmd = sys.argv[1].lower()\n-\n-if cmd == \"backupwallet\":\n-\ttry:\n-\t\tpath = raw_input(\"Enter destination path/filename: \")\n-\t\tprint access.backupwallet(path)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getaccount\":\n-\ttry:\n-\t\taddr = raw_input(\"Enter a Bitcoin address: \")\n-\t\tprint access.getaccount(addr)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getaccountaddress\":\n-\ttry:\n-\t\tacct = raw_input(\"Enter an account name: \")\n-\t\tprint access.getaccountaddress(acct)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getaddressesbyaccount\":\n-\ttry:\n-\t\tacct = raw_input(\"Enter an account name: \")\n-\t\tprint access.getaddressesbyaccount(acct)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getbalance\":\n-\ttry:\n-\t\tacct = raw_input(\"Enter an account (optional): \")\n-\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n-\t\ttry:\n-\t\t\tprint access.getbalance(acct, mc)\n-\t\texcept:\n-\t\t\tprint access.getbalance()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getblockbycount\":\n-\ttry:\n-\t\theight = raw_input(\"Height: \")\n-\t\tprint access.getblockbycount(height)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getblockcount\":\n-\ttry:\n-\t\tprint access.getblockcount()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getblocknumber\":\n-\ttry:\n-\t\tprint access.getblocknumber()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getconnectioncount\":\n-\ttry:\n-\t\tprint access.getconnectioncount()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getdifficulty\":\n-\ttry:\n-\t\tprint access.getdifficulty()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getgenerate\":\n-\ttry:\n-\t\tprint access.getgenerate()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"gethashespersec\":\n-\ttry:\n-\t\tprint access.gethashespersec()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getinfo\":\n-\ttry:\n-\t\tprint access.getinfo()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getnewaddress\":\n-\ttry:\n-\t\tacct = raw_input(\"Enter an account name: \")\n-\t\ttry:\n-\t\t\tprint access.getnewaddress(acct)\n-\t\texcept:\n-\t\t\tprint access.getnewaddress()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getreceivedbyaccount\":\n-\ttry:\n-\t\tacct = raw_input(\"Enter an account (optional): \")\n-\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n-\t\ttry:\n-\t\t\tprint access.getreceivedbyaccount(acct, mc)\n-\t\texcept:\n-\t\t\tprint access.getreceivedbyaccount()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getreceivedbyaddress\":\n-\ttry:\n-\t\taddr = raw_input(\"Enter a Bitcoin address (optional): \")\n-\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n-\t\ttry:\n-\t\t\tprint access.getreceivedbyaddress(addr, mc)\n-\t\texcept:\n-\t\t\tprint access.getreceivedbyaddress()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"gettransaction\":\n-\ttry:\n-\t\ttxid = raw_input(\"Enter a transaction ID: \")\n-\t\tprint access.gettransaction(txid)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getwork\":\n-\ttry:\n-\t\tdata = raw_input(\"Data (optional): \")\n-\t\ttry:\n-\t\t\tprint access.gettransaction(data)\n-\t\texcept:\n-\t\t\tprint access.gettransaction()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"help\":\n-\ttry:\n-\t\tcmd = raw_input(\"Command (optional): \")\n-\t\ttry:\n-\t\t\tprint access.help(cmd)\n-\t\texcept:\n-\t\t\tprint access.help()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"listaccounts\":\n-\ttry:\n-\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n-\t\ttry:\n-\t\t\tprint access.listaccounts(mc)\n-\t\texcept:\n-\t\t\tprint access.listaccounts()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"listreceivedbyaccount\":\n-\ttry:\n-\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n-\t\tincemp = raw_input(\"Include empty? (true/false, optional): \")\n-\t\ttry:\n-\t\t\tprint access.listreceivedbyaccount(mc, incemp)\n-\t\texcept:\n-\t\t\tprint access.listreceivedbyaccount()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"listreceivedbyaddress\":\n-\ttry:\n-\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n-\t\tincemp = raw_input(\"Include empty? (true/false, optional): \")\n-\t\ttry:\n-\t\t\tprint access.listreceivedbyaddress(mc, incemp)\n-\t\texcept:\n-\t\t\tprint access.listreceivedbyaddress()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"listtransactions\":\n-\ttry:\n-\t\tacct = raw_input(\"Account (optional): \")\n-\t\tcount = raw_input(\"Number of transactions (optional): \")\n-\t\tfrm = raw_input(\"Skip (optional):\")\n-\t\ttry:\n-\t\t\tprint access.listtransactions(acct, count, frm)\n-\t\texcept:\n-\t\t\tprint access.listtransactions()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"move\":\n-\ttry:\n-\t\tfrm = raw_input(\"From: \")\n-\t\tto = raw_input(\"To: \")\n-\t\tamt = raw_input(\"Amount:\")\n-\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n-\t\tcomment = raw_input(\"Comment (optional): \")\n-\t\ttry:\n-\t\t\tprint access.move(frm, to, amt, mc, comment)\n-\t\texcept:\n-\t\t\tprint access.move(frm, to, amt)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"sendfrom\":\n-\ttry:\n-\t\tfrm = raw_input(\"From: \")\n-\t\tto = raw_input(\"To: \")\n-\t\tamt = raw_input(\"Amount:\")\n-\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n-\t\tcomment = raw_input(\"Comment (optional): \")\n-\t\tcommentto = raw_input(\"Comment-to (optional): \")\n-\t\ttry:\n-\t\t\tprint access.sendfrom(frm, to, amt, mc, comment, commentto)\n-\t\texcept:\n-\t\t\tprint access.sendfrom(frm, to, amt)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"sendmany\":\n-\ttry:\n-\t\tfrm = raw_input(\"From: \")\n-\t\tto = raw_input(\"To (in format address1:amount1,address2:amount2,...): \")\n-\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n-\t\tcomment = raw_input(\"Comment (optional): \")\n-\t\ttry:\n-\t\t\tprint access.sendmany(frm,to,mc,comment)\n-\t\texcept:\n-\t\t\tprint access.sendmany(frm,to)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"sendtoaddress\":\n-\ttry:\n-\t\tto = raw_input(\"To (in format address1:amount1,address2:amount2,...): \")\n-\t\tamt = raw_input(\"Amount:\")\n-\t\tcomment = raw_input(\"Comment (optional): \")\n-\t\tcommentto = raw_input(\"Comment-to (optional): \")\n-\t\ttry:\n-\t\t\tprint access.sendtoaddress(to,amt,comment,commentto)\n-\t\texcept:\n-\t\t\tprint access.sendtoaddress(to,amt)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"setaccount\":\n-\ttry:\n-\t\taddr = raw_input(\"Address: \")\n-\t\tacct = raw_input(\"Account:\")\n-\t\tprint access.setaccount(addr,acct)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"setgenerate\":\n-\ttry:\n-\t\tgen= raw_input(\"Generate? (true/false): \")\n-\t\tcpus = raw_input(\"Max processors/cores (-1 for unlimited, optional):\")\n-\t\ttry:\n-\t\t\tprint access.setgenerate(gen, cpus)\n-\t\texcept:\n-\t\t\tprint access.setgenerate(gen)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"settxfee\":\n-\ttry:\n-\t\tamt = raw_input(\"Amount:\")\n-\t\tprint access.settxfee(amt)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"stop\":\n-\ttry:\n-\t\tprint access.stop()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"validateaddress\":\n-\ttry:\n-\t\taddr = raw_input(\"Address: \")\n-\t\tprint access.validateaddress(addr)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"walletpassphrase\":\n-\ttry:\n-\t\tpwd = raw_input(\"Enter wallet passphrase: \")\n-\t\taccess.walletpassphrase(pwd, 60)\n-\t\tprint \"\\n---Wallet unlocked---\\n\"\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"walletpassphrasechange\":\n-\ttry:\n-\t\tpwd = raw_input(\"Enter old wallet passphrase: \")\n-\t\tpwd2 = raw_input(\"Enter new wallet passphrase: \")\n-\t\taccess.walletpassphrasechange(pwd, pwd2)\n-\t\tprint\n-\t\tprint \"\\n---Passphrase changed---\\n\"\n-\texcept:\n-\t\tprint\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\t\tprint\n-\n-else:\n-\tprint \"Command not found or not supported\"\n\\ No newline at end of file"
      },
      {
        "sha": "09fa6bdda3a49951cf3fb7aa68796ee7d5c71310",
        "filename": "contrib/debian/._.DS_Store",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/._.DS_Store",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/._.DS_Store",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/._.DS_Store?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "029e02ff20d8266731d343990a72b8f003fb062c",
        "filename": "contrib/debian/README.md",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/README.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,21 @@\n+\n+Debian\n+====================\n+This directory contains files used to package aitherd/aither-qt\n+for Debian-based Linux systems. If you compile aitherd/aither-qt yourself, there are some useful files here.\n+\n+## aither: URI support ##\n+\n+\n+aither-qt.desktop  (Gnome / Open Desktop)\n+To install:\n+\n+\tsudo desktop-file-install aither-qt.desktop\n+\tsudo update-desktop-database\n+\n+If you build yourself, you will either need to modify the paths in\n+the .desktop file or copy or symlink your aither-qt binary to `/usr/bin`\n+and the `../../share/pixmaps/aither128.png` to `/usr/share/pixmaps`\n+\n+aither-qt.protocol (KDE)\n+"
      },
      {
        "sha": "cbe166413b41cc0b3bcc4293caaa85396fe63c24",
        "filename": "contrib/debian/aither-qt.desktop.desktop",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/aither-qt.desktop.desktop",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/aither-qt.desktop.desktop",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/aither-qt.desktop.desktop?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,11 @@\n+[Desktop Entry]\n+Encoding=UTF-8\n+Name=Aither\n+Comment=Aither P2P Cryptocurrency\n+Exec=aither-qt %u\n+Terminal=false\n+Type=Application\n+Icon=aither128\n+MimeType=x-scheme-handler/aither;\n+Categories=Office;Finance;\n+Name[en_US]=aither-qt.desktop"
      },
      {
        "sha": "f009aaf01292c68db47b0e2345c14560e5fe7fba",
        "filename": "contrib/debian/aither-qt.install",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/aither-qt.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/aither-qt.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/aither-qt.install?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,6 @@\n+usr/local/bin/aither-qt usr/bin\n+share/pixmaps/aither32.xpm usr/share/pixmaps\n+share/pixmaps/aither16.xpm usr/share/pixmaps\n+share/pixmaps/aither128.png usr/share/pixmaps\n+debian/aither-qt.desktop usr/share/applications\n+debian/aither-qt.protocol usr/share/kde4/services/"
      },
      {
        "sha": "12827b5eb5f0d01a927a813a035d443912177931",
        "filename": "contrib/debian/aither-qt.lintian-overrides",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/aither-qt.lintian-overrides",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/aither-qt.lintian-overrides",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/aither-qt.lintian-overrides?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,2 @@\n+# Linked code is Expat - only Debian packaging is GPL-2+\n+aither-qt: possible-gpl-code-linked-with-openssl"
      },
      {
        "sha": "b3fb08406a82c2250aa03d9b8774ffb70370edc5",
        "filename": "contrib/debian/aither-qt.protocol",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/aither-qt.protocol",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/aither-qt.protocol",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/aither-qt.protocol?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,11 @@\n+[Protocol]\n+exec=aither-qt '%u'\n+protocol=aither\n+input=none\n+output=none\n+helper=true\n+listing=\n+reading=false\n+writing=false\n+makedir=false\n+deleting=false"
      },
      {
        "sha": "40eca57466793ea132212949fba12db6c93b0378",
        "filename": "contrib/debian/aither-tx.install",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/aither-tx.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/aither-tx.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/aither-tx.install?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1 @@\n+usr/local/bin/aither-tx usr/bin"
      },
      {
        "sha": "87daafada58e56a2df4dd561b5d7f6c416b62aa2",
        "filename": "contrib/debian/aitherd.bash-completion",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/aitherd.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/aitherd.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/aitherd.bash-completion?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1 @@\n+contrib/aitherd.bash-completion\taitherd"
      },
      {
        "sha": "1f21508057680e2bb59f0b684b67b0aed99caa2b",
        "filename": "contrib/debian/aitherd.examples",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/aitherd.examples",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/aitherd.examples",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/aitherd.examples?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1 @@\n+debian/examples/aither.conf"
      },
      {
        "sha": "ed14af897c9e4c4c94a43ea07443fa0ce7bddd80",
        "filename": "contrib/debian/aitherd.install",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/aitherd.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/aitherd.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/aitherd.install?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,2 @@\n+usr/local/bin/aitherd usr/bin\n+usr/local/bin/aither-cli usr/bin"
      },
      {
        "sha": "2a7bbcb3b849077f975d8e3594b9475de49adb92",
        "filename": "contrib/debian/aitherd.lintian-overrides",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/aitherd.lintian-overrides",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/aitherd.lintian-overrides",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/aitherd.lintian-overrides?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,2 @@\n+# Linked code is Expat - only Debian packaging is GPL-2+\n+aitherd: possible-gpl-code-linked-with-openssl"
      },
      {
        "sha": "09a345d9b515d0a3011c1f9c15144187b1ce1bf9",
        "filename": "contrib/debian/aitherd.manpages",
        "status": "added",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/aitherd.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/aitherd.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/aitherd.manpages?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,3 @@\n+debian/manpages/aitherd.1\n+debian/manpages/aither.conf.5\n+debian/manpages/aither-cli.1"
      },
      {
        "sha": "b3bc973501f09844a64f2988e8ee8a776eefe581",
        "filename": "contrib/debian/bin/novacoin-qt",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/debian/bin/novacoin-qt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/debian/bin/novacoin-qt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bin/novacoin-qt?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,16 +0,0 @@\n-#!/bin/sh\n-\n-set -e\n-\n-umask 077\n-\n-basedir=~/.novacoin\n-dbfile=\"$basedir/DB_CONFIG\"\n-cfgfile=\"$basedir/novacoin.conf\"\n-\n-[ -e \"$basedir\" ] || mkdir \"$basedir\"\n-\n-# Novacoin does not clean up DB log files by default\n-[ -e \"$dbfile\" ] || echo 'set_flags DB_LOG_AUTOREMOVE' > \"$dbfile\"\n-\n-exec /usr/lib/novacoin/novacoin-qt \"$@\""
      },
      {
        "sha": "a4f3fb808b8e19379c1cfd82c6a3c2d41ec88a82",
        "filename": "contrib/debian/bin/novacoind",
        "status": "removed",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/debian/bin/novacoind",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/debian/bin/novacoind",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bin/novacoind?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,14 +0,0 @@\n-#!/bin/sh\n-\n-set -e\n-\n-umask 077\n-\n-basedir=~/.novacoin\n-cfgfile=\"$basedir/novacoin.conf\"\n-\n-[ -e \"$basedir\" ] || mkdir \"$basedir\"\n-\n-[ -e \"$cfgfile\" ] || perl -le 'print\"rpcpassword=\",map{(a..z,A..Z,0..9)[rand 62]}0..9' > \"$cfgfile\"\n-\n-exec /usr/lib/novacoin/novacoind \"$@\""
      },
      {
        "sha": "9bb0dcfeab1c3668ccfcc58e5585d619ac637335",
        "filename": "contrib/debian/changelog",
        "status": "modified",
        "additions": 518,
        "deletions": 3,
        "changes": 521,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/changelog",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/changelog",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/changelog?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -1,6 +1,521 @@\n-novacoin (0.4.0~dfsg-1) unstable; urgency=low\n+bitcoin (0.12.1-trusty1) trusty; urgency=medium\n \n-  [ Balthazar ]\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 18 Apr 2016 14:26:00 -0700\n+\n+bitcoin (0.12.0-trusty6) trusty; urgency=medium\n+\n+  * Fix program-options dep.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 25 Mar 2016 21:41:00 -0700\n+\n+bitcoin (0.12.0-trusty5) trusty; urgency=medium\n+\n+  * Test explicit --with-gui\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 23:25:00 -0800\n+\n+bitcoin (0.12.0-trusty4) trusty; urgency=medium\n+\n+  * Fix libevent-dev dep.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 23:25:00 -0800\n+\n+bitcoin (0.12.0-trusty3) trusty; urgency=medium\n+\n+  * Fix precise boost dep.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 19:55:00 -0800\n+\n+bitcoin (0.12.0-trusty2) trusty; urgency=medium\n+\n+  * Fix libevent dep.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 19:53:00 -0800\n+\n+bitcoin (0.12.0-trusty1) trusty; urgency=medium\n+\n+  * New upstream release\n+  * Various updates to contrib/debian were merged, a few were not\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 19:29:00 -0800\n+\n+bitcoin (0.11.2-trusty1) trusty; urgency=low\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 13 Nov 2015 18:39:00 -0800\n+\n+bitcoin (0.11.1-trusty2) trusty; urgency=low\n+\n+  * Remove minupnpc builddep.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 14 Oct 2015 23:06:00 -1000\n+\n+bitcoin (0.11.1-trusty1) trusty; urgency=high\n+\n+  * New upstream release.\n+  * Disable all UPnP support.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 14 Oct 2015 13:57:00 -1000\n+\n+bitcoin (0.11.0-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 14 Jul 2015 14:39:00 -1000\n+\n+bitcoin (0.10.2-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 29 Jun 2015 17:33:00 -1000\n+\n+bitcoin (0.10.1-precise3) precise; urgency=medium\n+\n+  * Fix build dep (include python).\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 09:28:00 -1000\n+\n+bitcoin (0.10.1-precise2) precise; urgency=medium\n+\n+  * Fix miniupnpc dep.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 00:33:00 -1000\n+\n+bitcoin (0.10.1-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 00:07:00 -1000\n+\n+bitcoin (0.10.0-precise1) precise; urgency=medium\n+\n+  * New upstream releases.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 18 Feb 2015 13:22:00 -1000\n+\n+bitcoin (0.9.4-precise1) precise; urgency=high\n+\n+  * New upstream releases.\n+\n+ -- Matt Corallo (laptop - only while traveling) <matt@mattcorallo.com>  Mon, 12 Jan 2015 23:30:00 -1000\n+\n+bitcoin (0.9.3-precise1) precise; urgency=medium\n+\n+  * New upstream releases.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 26 Sep 2014 12:01:00 -0700\n+\n+bitcoin (0.9.1-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+  * Backport pull #4019\n+\n+ -- Matt Corallo <matt@bluematt.me>  Sat, 19 Apr 2014 17:29:00 -0400\n+\n+bitcoin (0.9.0-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Thu, 20 Mar 2014 13:10:00 -0400\n+\n+bitcoin (0.8.6-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+  * Make .desktop paths non-fixed (suggested by prusnak@github)\n+\n+ -- Matt Corallo <matt@bluematt.me>  Fri, 13 Dec 2013 13:31:00 -0400\n+\n+bitcoin (0.8.5-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Sun, 15 Sep 2013 14:02:00 -0400\n+\n+bitcoin (0.8.4-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Wed, 4 Sep 2013 10:25:00 -0400\n+\n+bitcoin (0.8.3-natty1) natty; urgency=low\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Wed, 26 Jun 2013 00:18:00 +0100\n+\n+bitcoin (0.8.2-natty1) natty; urgency=low\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Wed, 29 Mar 2013 23:23:00 +0100\n+\n+bitcoin (0.8.1-natty3) natty; urgency=low\n+\n+  * New pixmaps\n+\n+ -- Jonas Schnelli <jonas.schnelli@include7.ch>  Mon, 13 May 2013 16:14:00 +0100\n+\n+bitcoin (0.8.1-natty2) natty; urgency=low\n+\n+  * Remove dumb broken launcher script\n+\n+ -- Matt Corallo <matt@bluematt.me>  Sun, 24 Mar 2013 20:01:00 -0400\n+\n+bitcoin (0.8.1-natty1) natty; urgency=low\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Tue, 19 Mar 2013 13:03:00 -0400\n+\n+bitcoin (0.8.0-natty1) natty; urgency=low\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Sat, 23 Feb 2013 16:01:00 -0500\n+\n+bitcoin (0.7.2-natty1) natty; urgency=low\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Sat, 15 Dec 2012 10:59:00 -0400\n+\n+bitcoin (0.7.1-natty1) natty; urgency=low\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Wed, 24 Oct 2012 15:06:00 -0400\n+\n+bitcoin (0.7.0-natty1) natty; urgency=low\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Mon, 17 Sep 2012 13:45:00 +0200\n+\n+bitcoin (0.6.3-natty1) natty; urgency=low\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Mon, 25 Jun 2012 23:47:00 +0200\n+\n+bitcoin (0.6.2-natty1) natty; urgency=low\n+\n+  * Update package description and launch scripts.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Sat, 2 Jun 2012 16:41:00 +0200\n+\n+bitcoin (0.6.2-natty0) natty; urgency=low\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Tue, 8 May 2012 16:27:00 -0500\n+\n+bitcoin (0.6.1-natty0) natty; urgency=low\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Sun, 6 May 2012 20:09:00 -0500\n+\n+bitcoin (0.6.0-natty0) natty; urgency=low\n+\n+  * New upstream release.\n+  * Add GNOME/KDE support for bitcoin-qt's bitcoin: URI support.\n+    Thanks to luke-jr for the KDE .protocol file.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Sat, 31 Mar 2012 15:35:00 -0500\n+\n+bitcoin (0.5.3-natty1) natty; urgency=low\n+\n+  * Mark for upload to PPA.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Wed, 14 Mar 2012 23:06:00 -0400\n+\n+bitcoin (0.5.3-natty0) natty; urgency=low\n+\n+  * New upstream release.\n+\n+ -- Luke Aitherjr <luke+bitcoin+deb@aitherjr.org>  Tue, 10 Jan 2012 15:57:00 -0500\n+\n+bitcoin (0.5.2-natty1) natty; urgency=low\n+\n+  * Remove mentions on anonymity in package descriptions and manpage.\n+    These should never have been there, bitcoin isnt anonymous without\n+    a ton of work that virtually no users will ever be willing and\n+    capable of doing\n+\n+ -- Matt Corallo <matt@bluematt.me>  Sat, 7 Jan 2012 13:37:00 -0500\n+\n+bitcoin (0.5.2-natty0) natty; urgency=low\n+\n+  * New upstream release.\n+\n+ -- Luke Aitherjr <luke+bitcoin+deb@aitherjr.org>  Fri, 16 Dec 2011 17:57:00 -0500\n+\n+bitcoin (0.5.1-natty0) natty; urgency=low\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Fri, 16 Dec 2011 13:27:00 -0500\n+\n+bitcoin (0.5.0-natty0) natty; urgency=low\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Mon, 21 Nov 2011 11:32:00 -0500\n+\n+bitcoin (0.5.0~rc7-natty0) natty; urgency=low\n+\n+  * New upstream release candidate.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Sun, 20 Nov 2011 17:08:00 -0500\n+\n+bitcoin (0.5.0~rc3-natty0) natty; urgency=low\n+\n+  * New upstream release candidate.\n+  * Don't set rpcpassword for bitcoin-qt.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Tue, 8 Nov 2011 11:56:00 -0400\n+\n+bitcoin (0.5.0~rc1-natty1) natty; urgency=low\n+\n+  * Add test_bitcoin to build test\n+  * Fix clean\n+  * Remove uneccessary build-dependancies\n+\n+ -- Matt Corallo <matt@bluematt.me>  Wed, 26 Oct 2011 14:37:18 -0400\n+\n+bitcoin (0.5.0~rc1-natty0) natty; urgency=low\n+\n+  * Mark for natty\n+  * Fix broken build\n+  * Fix copyright listing\n+  * Remove bitcoin: URL handler until bitcoin actually has support for it (Oops)\n+\n+ -- Matt Corallo <matt@bluematt.me>  Wed, 26 Oct 2011 14:37:18 -0400\n+\n+bitcoin (0.5.0~rc1-2) experimental; urgency=low\n+\n+  * Add bitcoin-qt\n+\n+ -- Matt Corallo <matt@bluematt.me>  Tue, 25 Oct 2011 15:24:18 -0400\n+\n+bitcoin (0.5.0~rc1-1) experimental; urgency=low\n+\n+  * New upstream prerelease.\n+  * Add Github as alternate upstream source in watch file.\n+  * Stop build-depending on libcrypto++-dev, and drop patch 1000:\n+    Upstream no longer use crypto++.\n+  * Drop patch 1003: Upstream builds dynamic by default now.\n+  * Update copyright file: Drop notes on longer included sources.\n+\n+ -- Jonas Smedegaard <dr@jones.dk>  Fri, 14 Oct 2011 00:16:18 +0200\n+\n+bitcoin (0.4.0-1) unstable; urgency=low\n+\n+  * New upstream release.\n+  * Stop repackaging source tarballs: No DFSG-violating stripping left.\n+  * Update copyright file:\n+    + Add Github URL to Source.\n+  * Drop dpkg-source local-options hint: Declared options are default\n+    since dpkg-source 1.16.1.\n+    + Add irc URL to Upstream-Contact.\n+    + Add comment on Bitcoin Developers to catch-all Files section.\n+    + Add Files sections for newly readded src/cryptopp/* (new custom\n+      BSD-like license), and newly added doc/build-osx.txt and\n+      src/makefile.osx (Expat).\n+  * Bump debhelper compatibility level to 7.\n+  * Suppress binary icns and gpg files.\n+  * Enable regression tests:\n+    + Build-depend on libboost-test-dev.\n+    + Extend patch 1003 to also dynamically link test binary.\n+    + Build and invoke test binary unless tests are disabled.\n+  * Tighten build-dependency on cdbs: Recent version needed to support\n+    debhelper 7.\n+  * Relax build-depend unversioned on debhelper: needed version\n+    satisfied even in oldstable.\n+  * Stop suppress optional build-dependencies: Satisfied in stable.\n+    Build-depend on devscripts (enabling copyright-check).\n+\n+ -- Jonas Smedegaard <dr@jones.dk>  Wed, 05 Oct 2011 01:48:53 +0200\n+\n+bitcoin (0.3.24~dfsg-1) unstable; urgency=low\n+\n+  * New upstream release.\n+\n+  [ Jonas Smedegaard ]\n+  * Improve various usage hints:\n+    + Explicitly mention in long description that bitcoind contains\n+      daemon and command-line interface.\n+    + Extend README.Debian with section on lack of GUI, and add primary\n+      headline.\n+    + Avoid installing upstream README: contains no parts relevant for\n+      Debian usage.\n+    Thanks to richard for suggestions (see bug#629443).\n+  * Favor final releases over prereleases in rules and watch file.\n+    Thanks to Jan Dittberner.\n+  * Track -src (not -linux) tarballs in rules and watch file.\n+    Thanks to Jan Dittberner.\n+  * Drop patches 1004 and 1005 (integrated upstream) and simplify\n+    CXXFLAGS in rules file.\n+  * Stop stripping no longer included source-less binaries from upstream\n+    tarballs.\n+\n+  [ Jan Dittberner ]\n+  * refresh debian/patches/1000_use_system_crypto++.patch\n+\n+ -- Jonas Smedegaard <dr@jones.dk>  Tue, 19 Jul 2011 15:08:54 +0200\n+\n+bitcoin (0.3.21~dfsg-2) unstable; urgency=low\n+\n+  * Enable UPNP support:\n+    + Drop patch 1006.\n+    + Build-depend on libminiupnpc-dev.\n+    Thanks to Matt Corallo.\n+\n+ -- Jonas Smedegaard <dr@jones.dk>  Sat, 28 May 2011 15:52:44 +0200\n+\n+bitcoin (0.3.21~dfsg-1) unstable; urgency=low\n+\n+  * New upstream release.\n+  * Refresh patches.\n+  * Drop patch 1002: no longer needed, as upstream use pkgconfig now.\n+  * Add patch 1006 to really unset USE_UPNP as aparently intended.\n+  * Adjust cleanup rule to preserve .gitignore files.\n+  * Update copyright file:\n+    + Bump format to draft 174 of DEP-5.\n+    + Shorten comments.\n+  * Bump policy compliance to standards-version 3.9.2.\n+  * Shorten Vcs-Browser paragraph in control file.\n+  * Fix mention daemon (not CLI tools) in short description.\n+  * Stop conflicting with or replace bitcoin-cli: Only transitional, no\n+    longer needed.\n+  * Link against unversioned berkeleydb. Update NEWS and README.Debian\n+    accordingly (and improve wording while at it).\n+    Closes: Bug#621425. Thanks to Ond\u0159ej Sur\u00fd.\n+  * This release also implicitly updates linkage against libcrypto++,\n+    which closes: bug#626953, #627024.\n+  * Disable linkage against not yet Debian packaged MiniUPnP.\n+  * Silence seemingly harmless noise about unused variables.\n+\n+ -- Jonas Smedegaard <dr@jones.dk>  Tue, 17 May 2011 15:31:24 +0200\n+\n+bitcoin (0.3.20.2~dfsg-2) unstable; urgency=medium\n+\n+  * Fix have wrapper script execute real binary (not loop executing\n+    itself).\n+    Closes: bug#617290. Thanks to Philippe Gauthier and Etienne Laurin.\n+  * Set urgency=medium as the only (user-exposed) binary is useless\n+    without this fix and has been for some time.\n+\n+ -- Jonas Smedegaard <dr@jones.dk>  Wed, 16 Mar 2011 09:11:06 +0100\n+\n+bitcoin (0.3.20.2~dfsg-1) unstable; urgency=low\n+\n+  * New upstream release.\n+  * Fix provide and replace former package name bitcoin-cli.\n+    Closes: bug#618439. Thanks to Shane Wegner.\n+\n+ -- Jonas Smedegaard <dr@jones.dk>  Tue, 15 Mar 2011 11:41:43 +0100\n+\n+bitcoin (0.3.20.01~dfsg-1) unstable; urgency=low\n+\n+  * New upstream release.\n+\n+  [ Micah Anderson ]\n+  * Add myself as uploader.\n+\n+  [ Jonas Smedegaard ]\n+  * Add wrapper for bitcoind to ease initial startup.\n+  * Update patches:\n+    + Drop patch 2002: Applied upstream.\n+    + Add patch 1005 to add phtread linker option.\n+      Closes: bug#615619. Thanks to Shane Wegner.\n+    + Refresh patches.\n+  * Extend copyright years in rules file header.\n+  * Rewrite copyright file using draft svn166 of DEP5 format.\n+  * Rename binary package to bitcoind (from bincoin-cli).\n+    Closes: bug#614025. Thanks to Luke-Jr.\n+\n+ -- Jonas Smedegaard <dr@jones.dk>  Tue, 01 Mar 2011 15:55:04 +0100\n+\n+bitcoin (0.3.19~dfsg-6) unstable; urgency=low\n+\n+  * Fix override agressive optimizations.\n+  * Fix tighten build-dependencies to really fit backporting to Lenny:\n+    + Add fallback build-dependency on libdb4.6++-dev.\n+    + Tighten unversioned Boost build-dependencies to recent versions,\n+      To force use of versioned Boost when backporting to Lenny.\n+    ...needs more love, though: actual build fails.\n+\n+ -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 19:48:35 +0100\n+\n+bitcoin (0.3.19~dfsg-5) unstable; urgency=low\n+\n+  * Fix lower Boost fallback-build-dependencies to 1.35, really\n+    available in Lenny.\n+  * Correct comment in rules file regarding reason for versioned Boost\n+    fallback-build-dependency.\n+  * Add patch 2002 adding -mt decoration to Boost flags, to ease\n+    backporting to Lenny.\n+  * Respect DEB_BUILD_OPTIONS, and suppress arch-specific optimizations:\n+    + Add patch 1004 to allow overriding optimization flags.\n+    + Set optimization flags conditionally at build time.\n+    + Drop patch 2002 unconditionally suppressing arch-optimizations.\n+\n+ -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 16:04:48 +0100\n+\n+bitcoin (0.3.19~dfsg-4) unstable; urgency=low\n+\n+  [ Micah Anderson ]\n+  * Provide example bitcoin.conf.\n+  * Add bitcoind(1) and bitcoin.conf(5) man pages.\n+\n+  [ Jonas Smedegaard ]\n+  * Ease backporting:\n+    + Suppress optional build-dependencies.\n+    + Add fallback build-dependencies on the most recent Boost libs\n+    available in Lenny (where unversioned Boost libs are missing).\n+  * Add Micah as copyright holder for manpages, licensed as GPL-3+.\n+  * Bump copyright format to Subversion candidate draft 162 of DEP5.\n+\n+ -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 14:00:48 +0100\n+\n+bitcoin (0.3.19~dfsg-3) unstable; urgency=low\n+\n+  * Document in copyright file files excluded from repackaged source.\n+  * Update copyright file:\n+    + Bump DEP5 format hint to Subversion draft rev. 153.\n+    + Consistently wrap at 72 chars.\n+    + Refer to GPL-2 file (not GPL symlink).\n+  * Link against Berkeley DB 4.8 (not 4.7):\n+    + Build-depend on libdb4.8++-dev (and on on libdb4.7++-dev).\n+    + Suggest libdb4.8-util and db4.7-util.\n+    + Add README.Debian note on (untested) upgrade routine.\n+    + Add NEWS entry on changed db version, referring to README.Debian.\n+\n+ -- Jonas Smedegaard <dr@jones.dk>  Fri, 07 Jan 2011 22:50:57 +0100\n+\n+bitcoin (0.3.19~dfsg-2) unstable; urgency=low\n+\n+  * Adjust build options to use optimized miner only for amd64. Fixes\n+    FTBFS on i386 (and other archs, if compiling anywhere else at all).\n+  * Avoid static linking.\n+  * Adjust patch 2001 to avoid only arch-specific optimizations (keep\n+    -O3).\n+  * Extend long description to mention disk consumption and initial use\n+    of IRC.\n+  All of above changes thanks to Helmuth Grohne.\n+  * Add lintian override regarding OpenSSL and GPL: Linked code is Expat\n+    - only Debian packaging is GPL-2+.\n+\n+ -- Jonas Smedegaard <dr@jones.dk>  Wed, 29 Dec 2010 00:27:54 +0100\n+\n+bitcoin (0.3.19~dfsg-1) unstable; urgency=low\n+\n+  [ Jonas Smedegaard ]\n   * Initial release.\n+    Closes: bug#578157.\n \n- -- Balthazar <balthazar@yandex.ru>  Mon, 15 Apr 2013 22:15:22 +0100\n+ -- Jonas Smedegaard <dr@jones.dk>  Tue, 28 Dec 2010 15:49:22 +0100"
      },
      {
        "sha": "3de27dc660f3bc2d92806a0f0e1c1e9eb6020fec",
        "filename": "contrib/debian/control",
        "status": "modified",
        "additions": 46,
        "deletions": 37,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/control",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/control",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/control?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -1,59 +1,68 @@\n-Source: novacoin\n+Source: aither\n Section: utils\n Priority: optional\n-Maintainer: Jonas Smedegaard <dr@jones.dk>\n-Uploaders: Micah Anderson <micah@debian.org>\n+Maintainer: Holger Schinzel <holger@aither.org>\n+Uploaders: Holger Schinzel <holger@aither.org>\n Build-Depends: debhelper,\n  devscripts,\n+ automake,\n+ libtool,\n  bash-completion,\n- libboost-system-dev (>> 1.35) | libboost-system1.35-dev,\n  libdb4.8++-dev,\n  libssl-dev,\n  pkg-config,\n- libminiupnpc8-dev,\n- libboost-filesystem-dev (>> 1.35) | libboost-filesystem1.35-dev,\n- libboost-program-options-dev (>> 1.35) | libboost-program-options1.35-dev,\n- libboost-thread-dev (>> 1.35) | libboost-thread1.35-dev,\n- libboost-test-dev (>> 1.35) | libboost-test1.35-dev,\n+ libevent-dev,\n+ libboost-system1.48-dev | libboost-system-dev (>> 1.35),\n+ libboost-filesystem1.48-dev | libboost-filesystem-dev (>> 1.35),\n+ libboost-program-options1.48-dev | libboost-program-options-dev (>> 1.35),\n+ libboost-thread1.48-dev | libboost-thread-dev (>> 1.35),\n+ libboost-test1.48-dev | libboost-test-dev (>> 1.35),\n+ libboost-chrono1.48-dev | libboost-chrono-dev (>> 1.35),\n  qt4-qmake,\n  libqt4-dev,\n- libqrencode-dev\n+ libqrencode-dev,\n+ libprotobuf-dev, protobuf-compiler,\n+ python\n Standards-Version: 3.9.2\n-Homepage: http://www.novacoin.su/\n-Vcs-Git: git://github.com/CryptoManiac/novacoin.git\n-Vcs-Browser: http://github.com/CryptoManiac/novacoin\n+Homepage: https://www.aither.org/\n+Vcs-Git: git://github.com/aithercoin/aither.git\n+Vcs-Browser: https://github.com/aithercoin/aither\n \n-Package: novacoind\n+Package: aitherd\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer network based digital currency - daemon\n- Novacoin is a free open source peer-to-peer electronic cash system that\n- is completely decentralized, without the need for a central server or\n- trusted parties.  Users hold the crypto keys to their own money and\n- transact directly with each other, with the help of a P2P network to\n- check for double-spending.\n+ Aither is an experimental new digital currency that enables anonymous, instant\n+ payments to anyone, anywhere in the world. Aither uses peer-to-peer\n+ technology to operate with no central authority: managing transactions\n+ and issuing money are carried out collectively by the network. Aither Core\n+ is the name of the open source software which enables the use of this currency.\n  .\n- By default connects to an IRC network to discover other peers.\n- .\n- Full transaction history is stored locally at each client.  This\n- requires 2+ GB of space, slowly growing.\n- .\n- This package provides novacoind, a combined daemon and CLI tool to\n- interact with the daemon.\n+ This package provides the daemon, aitherd, and the CLI tool\n+ aither-cli to interact with the daemon.\n \n-Package: novacoin-qt\n+Package: aither-qt\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer network based digital currency - Qt GUI\n- Novacoin is a free open source peer-to-peer electronic cash system that\n- is completely decentralized, without the need for a central server or\n- trusted parties.  Users hold the crypto keys to their own money and\n- transact directly with each other, with the help of a P2P network to\n- check for double-spending.\n- .\n- By default connects to an IRC network to discover other peers.\n+ Aither is an experimental new digital currency that enables anonymous, instant\n+ payments to anyone, anywhere in the world. Aither uses peer-to-peer\n+ technology to operate with no central authority: managing transactions\n+ and issuing money are carried out collectively by the network. Aither Core\n+ is the name of the open source software which enables the use of this currency.\n  .\n- Full transaction history is stored locally at each client.  This\n- requires 2+ GB of space, slowly growing.\n+ This package provides Aither-Qt, a GUI for Aither based on Qt.\n+\n+Package: aither-tx\n+Architecture: any\n+Depends: ${shlibs:Depends}, ${misc:Depends}\n+Description: peer-to-peer digital currency - standalone transaction tool\n+ Aither is an experimental new digital currency that enables anonymous, instant\n+ payments to anyone, anywhere in the world. Aither uses peer-to-peer\n+ technology to operate with no central authority: managing transactions\n+ and issuing money are carried out collectively by the network. Aither Core\n+ is the name of the open source software which enables the use of this currency.\n  .\n- This package provides Novacoin-Qt, a GUI for Novacoin based on Qt.\n+ This package provides aither-tx, a command-line transaction creation\n+ tool which can be used without a aither daemon.  Some means of\n+ exchanging minimal transaction data with peers is still required."
      },
      {
        "sha": "bbaa5b16366982de4dcae5d324d99f72a9d9c8d3",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 57,
        "deletions": 91,
        "changes": 148,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -1,24 +1,15 @@\n-Format: http://svn.debian.org/wsvn/dep/web/deps/dep5.mdwn?rev=174\n+Format: http://www.debian.org/doc/packaging-manuals/copyright-format/1.0/\n Upstream-Name: Bitcoin\n Upstream-Contact: Satoshi Nakamoto <satoshin@gmx.com>\n  irc://#bitcoin@freenode.net\n-Source: http://sourceforge.net/projects/bitcoin/files/\n- https://github.com/bitcoin/bitcoin\n+Source: https://github.com/bitcoin/bitcoin\n \n Files: *\n-Copyright: 2009-2012, Bitcoin Developers\n+Copyright: 2009-2016, Bitcoin Core Developers\n License: Expat\n-Comment: The Bitcoin Developers encompasses the current developers listed on bitcoin.org,\n+Comment: The Bitcoin Core Developers encompasses the current developers listed on bitcoin.org,\n          as well as the numerous contributors to the project.\n \n-Files: src/json/*\n-Copyright: 2007-2009, John W. Wilkinson\n-License: Expat\n-\n-Files: src/strlcpy.h\n-Copyright: 1998, Todd C. Miller <Todd.Miller@courtesan.com>\n-License: ISC\n-\n Files: debian/*\n Copyright: 2010-2011, Jonas Smedegaard <dr@jones.dk>\n            2011, Matt Corallo <matt@bluematt.me>\n@@ -28,60 +19,66 @@ Files: debian/manpages/*\n Copyright: Micah Anderson <micah@debian.org>\n License: GPL-3+\n \n-Files: src/qt/res/icons/clock*.png, src/qt/res/icons/tx*.png,\n-       src/qt/res/src/*.svg\n-Copyright: Wladimir van der Laan\n+Files: src/qt/res/icons/add.png\n+       src/qt/res/icons/address-book.png\n+       src/qt/res/icons/configure.png\n+       src/qt/res/icons/debugwindow.png\n+       src/qt/res/icons/edit.png\n+       src/qt/res/icons/editcopy.png\n+       src/qt/res/icons/editpaste.png\n+       src/qt/res/icons/export.png\n+       src/qt/res/icons/eye.png\n+       src/qt/res/icons/filesave.png\n+       src/qt/res/icons/history.png\n+       src/qt/res/icons/info.png\n+       src/qt/res/icons/key.png\n+       src/qt/res/icons/lock_*.png\n+       src/qt/res/icons/open.png\n+       src/qt/res/icons/overview.png\n+       src/qt/res/icons/quit.png\n+       src/qt/res/icons/receive.png\n+       src/qt/res/icons/remove.png\n+       src/qt/res/icons/send.png\n+       src/qt/res/icons/synced.png\n+       src/qt/res/icons/transaction*.png\n+       src/qt/res/icons/tx_output.png\n+       src/qt/res/icons/warning.png\n+Copyright: Stephen Hutchings (and more)\n+           http://typicons.com\n License: Expat\n-\n-Files: src/qt/res/icons/address-book.png, src/qt/res/icons/export.png,\n-       src/qt/res/icons/history.png, src/qt/res/icons/key.png,\n-       src/qt/res/icons/lock_*.png, src/qt/res/icons/overview.png,\n-       src/qt/res/icons/receive.png, src/qt/res/icons/send.png,\n-       src/qt/res/icons/synced.png, src/qt/res/icons/filesave.png\n-Copyright: David Vignoni (david@icon-king.com)\n-           ICON KING - www.icon-king.com\n-License: LGPL\n-Comment: NUVOLA ICON THEME for KDE 3.x\n-         Original icons: kaddressbook, klipper_dock, view-list-text,\n-                         key-password, encrypted/decrypted, go-home, go-down,\n-                         go-next, dialog-ok\n-         Site: http://www.icon-king.com/projects/nuvola/\n+Comment: Site: https://github.com/stephenhutchings/typicons.font\n \n Files: src/qt/res/icons/connect*.png\n-Copyright: schollidesign\n-License: GPL-3+\n-Comment: Icon Pack: Human-O2\n-         Site: http://findicons.com/icon/93743/blocks_gnome_netstatus_0\n-\n-Files: src/qt/res/icons/transaction*.png\n-Copyright: md2k7\n+       src/qt/res/src/connect-*.svg\n+Copyright: Marco Falke\n License: Expat\n-Comment: Site: https://bitcointalk.org/index.php?topic=15276.0\n+Comment: Inspired by Stephan Hutchings Typicons\n \n-Files: src/qt/res/icons/configure.png, src/qt/res/icons/quit.png,\n-      src/qt/res/icons/editcopy.png, src/qt/res/icons/editpaste.png,\n-      src/qt/res/icons/add.png, src/qt/res/icons/edit.png,\n-      src/qt/res/icons/remove.png\n-Copyright: http://www.everaldo.com\n-License: LGPL\n-Comment: Icon Pack: Crystal SVG\n+Files: src/qt/res/icons/tx_mined.png\n+       src/qt/res/src/mine.svg\n+Copyright: Jonas Schnelli\n+License: Expat\n+Comment:\n \n-Files: src/qt/res/icons/bitcoin.png, src/qt/res/icons/toolbar.png\n-Copyright: Bitboy (optimized for 16x16 by Wladimir van der Laan)\n-License: PUB-DOM\n+Files: src/qt/res/icons/clock*.png\n+       src/qt/res/icons/eye_*.png\n+       src/qt/res/icons/verify.png\n+       src/qt/res/icons/tx_in*.png\n+       src/qt/res/src/clock_*.svg\n+       src/qt/res/src/tx_*.svg\n+       src/qt/res/src/verify.svg\n+Copyright: Stephan Hutching, Jonas Schnelli\n+License: Expat\n+Comment: Modifications of Stephan Hutchings Typicons\n+\n+Files: src/qt/res/icons/about.png\n+       src/qt/res/icons/bitcoin.*\n+       share/pixmaps/bitcoin*\n+       src/qt/res/src/bitcoin.svg\n+Copyright: Bitboy, Jonas Schnelli\n+License: public-domain\n Comment: Site: https://bitcointalk.org/?topic=1756.0\n \n-Files:  scripts/img/reload.xcf, src/qt/res/movies/update_spinner.mng\n-Copyright: Everaldo (Everaldo Coelho)\n-License: GPL-3+\n-Comment: Icon Pack: Kids\n-         Site: http://findicons.com/icon/17102/reload?id=17102\n-\n-Files: src/qt/res/images/splash2.jpg\n-License: PUB-DOM\n-Copyright: Crobbo (forum)\n-Comment: Site: https://bitcointalk.org/index.php?topic=32273.0\n-\n \n License: Expat\n  Permission is hereby granted, free of charge, to any person obtaining a\n@@ -103,20 +100,6 @@ License: Expat\n  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n \n-License: ISC\n- Permission to use, copy, modify, and distribute this software for any\n- purpose with or without fee is hereby granted, provided that the above\n- copyright notice and this permission notice appear in all copies.\n- .\n- THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL\n- WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED\n- WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR\n- BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES\n- OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n- WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,\n- ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS\n- SOFTWARE.\n-\n License: GPL-2+\n  This program is free software; you can redistribute it and/or modify it\n  under the terms of the GNU General Public License as published by the\n@@ -145,22 +128,5 @@ Comment:\n  You should have received a copy of the GNU General Public License along\n  with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n-License: LGPL\n- This program is free software: you can redistribute it and/or modify\n- it under the terms of the GNU General Public License as published by\n- the Free Software Foundation, either version 3 of the License, or\n- (at your option) any later version.\n- .\n- This program is distributed in the hope that it will be useful,\n- but WITHOUT ANY WARRANTY; without even the implied warranty of\n- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n- GNU General Public License for more details.\n-Comment:\n- On Debian systems the GNU Lesser General Public License (LGPL) is\n- located in '/usr/share/common-licenses/LGPL'.\n- .\n- You should have received a copy of the GNU General Public License\n- along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-\n-License: PUB-DOM\n+License: public-domain\n  This work is in the public domain."
      },
      {
        "sha": "941c21f9b1e3ae31a376e5f8b23ce91e66aef82b",
        "filename": "contrib/debian/examples/aither.conf",
        "status": "added",
        "additions": 124,
        "deletions": 0,
        "changes": 124,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/examples/aither.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/examples/aither.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/aither.conf?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,124 @@\n+##\n+## aither.conf configuration file. Lines beginning with # are comments.\n+##\n+ \n+# Network-related settings:\n+\n+# Run on the test network instead of the real aither network.\n+#testnet=0\n+\n+# Run a regression test network\n+#regtest=0\n+\n+# Connect via a SOCKS5 proxy\n+#proxy=127.0.0.1:9050\n+\n+# Bind to given address and always listen on it. Use [host]:port notation for IPv6\n+#bind=<addr>\n+\n+# Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6\n+#whitebind=<addr>\n+\n+##############################################################\n+##            Quick Primer on addnode vs connect            ##\n+##  Let's say for instance you use addnode=4.2.2.4          ##\n+##  addnode will connect you to and tell you about the      ##\n+##    nodes connected to 4.2.2.4.  In addition it will tell ##\n+##    the other nodes connected to it that you exist so     ##\n+##    they can connect to you.                              ##\n+##  connect will not do the above when you 'connect' to it. ##\n+##    It will *only* connect you to 4.2.2.4 and no one else.##\n+##                                                          ##\n+##  So if you're behind a firewall, or have other problems  ##\n+##  finding nodes, add some using 'addnode'.                ##\n+##                                                          ##\n+##  If you want to stay private, use 'connect' to only      ##\n+##  connect to \"trusted\" nodes.                             ##\n+##                                                          ##\n+##  If you run multiple nodes on a LAN, there's no need for ##\n+##  all of them to open lots of connections.  Instead       ##\n+##  'connect' them all to one node that is port forwarded   ##\n+##  and has lots of connections.                            ##\n+##       Thanks goes to [Noodle] on Freenode.               ##\n+##############################################################\n+\n+# Use as many addnode= settings as you like to connect to specific peers\n+#addnode=69.164.218.197\n+#addnode=10.0.0.2:9999\n+\n+# Alternatively use as many connect= settings as you like to connect ONLY to specific peers\n+#connect=69.164.218.197\n+#connect=10.0.0.1:9999\n+\n+# Listening mode, enabled by default except when 'connect' is being used\n+#listen=1\n+\n+# Maximum number of inbound+outbound connections.\n+#maxconnections=\n+\n+#\n+# JSON-RPC options (for controlling a running Aither/aitherd process)\n+#\n+\n+# server=1 tells Aither-Qt and aitherd to accept JSON-RPC commands\n+#server=0\n+\n+# Bind to given address to listen for JSON-RPC connections. Use [host]:port notation for IPv6.\n+# This option can be specified multiple times (default: bind to all interfaces)\n+#rpcbind=<addr>\n+\n+# You must set rpcuser and rpcpassword to secure the JSON-RPC api\n+#rpcuser=Ulysseys\n+#rpcpassword=YourSuperGreatPasswordNumber_DO_NOT_USE_THIS_OR_YOU_WILL_GET_ROBBED_385593\n+\n+# How many seconds Aither Core will wait for a complete RPC HTTP request.\n+# after the HTTP connection is established. \n+#rpcclienttimeout=30\n+\n+# By default, only RPC connections from localhost are allowed.\n+# Specify as many rpcallowip= settings as you like to allow connections from other hosts,\n+# either as a single IPv4/IPv6 or with a subnet specification.\n+\n+# NOTE: opening up the RPC port to hosts outside your local trusted network is NOT RECOMMENDED,\n+# because the rpcpassword is transmitted over the network unencrypted.\n+\n+# server=1 tells Aither-Qt to accept JSON-RPC commands.\n+# it is also read by aitherd to determine if RPC should be enabled\n+#rpcallowip=10.1.1.34/255.255.255.0\n+#rpcallowip=1.2.3.4/24\n+#rpcallowip=2001:db8:85a3:0:0:8a2e:370:7334/96\n+\n+# Listen for RPC connections on this TCP port:\n+#rpcport=9998\n+\n+# You can use Aither or aitherd to send commands to Aither/aitherd\n+# running on another host using this option:\n+#rpcconnect=127.0.0.1\n+\n+# Transaction Fee Changes in 0.12.0\n+\n+# Send transactions as zero-fee transactions if possible (default: 0)\n+#sendfreetransactions=0\n+\n+# Create transactions that have enough fees (or priority) so they are likely to begin confirmation within n blocks (default: 1).\n+# This setting is over-ridden by the -paytxfee option.\n+#txconfirmtarget=n\n+\n+# Miscellaneous options\n+\n+# Pre-generate this many public/private key pairs, so wallet backups will be valid for\n+# both prior transactions and several dozen future transactions.\n+#keypool=100\n+\n+# Pay an optional transaction fee every time you send aithers.  Transactions with fees\n+# are more likely than free transactions to be included in generated blocks, so may\n+# be validated sooner.\n+#paytxfee=0.00\n+\n+# User interface options\n+\n+# Start Aither minimized\n+#min=1\n+\n+# Minimize to the system tray\n+#minimizetotray=1"
      },
      {
        "sha": "bbd29e3ed089e6a2d32616befe1a531fbc2d0d85",
        "filename": "contrib/debian/examples/novacoin.conf",
        "status": "removed",
        "additions": 0,
        "deletions": 81,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/debian/examples/novacoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/debian/examples/novacoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/novacoin.conf?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,81 +0,0 @@\n-# novacoin.conf configuration file. Lines beginning with # are comments.\n-\n-\n-# Network-related settings:\n-\n-# Run on the test network instead of the real novacoin network.\n-#testnet=1\n-\n-# Connect via a socks4 proxy\n-#proxy=127.0.0.1:9050\n-\n-# Use as many addnode= settings as you like to connect to specific peers\n-#addnode=188.120.246.137:36939\n-\n-# ... or use as many connect= settings as you like to connect ONLY\n-# to specific peers:\n-#connect=188.120.246.137:36939\n-\n-# Do not use Internet Relay Chat (irc.lfnet.org #novacoin channel) to\n-# find other peers.\n-#noirc=1\n-\n-# Maximum number of inbound+outbound connections.\n-#maxconnections=\n-\n-\n-# JSON-RPC options (for controlling a running process)\n-\n-# server=1 tells NovaCoin to accept JSON-RPC commands.\n-#server=1\n-\n-# You must set rpcuser and rpcpassword to secure the JSON-RPC api\n-#rpcuser=Ulysseys\n-#rpcpassword=YourSuperGreatPasswordNumber_385593\n-\n-# By default, only RPC connections from localhost are allowed.  Specify\n-# as many rpcallowip= settings as you like to allow connections from\n-# other hosts (and you may use * as a wildcard character):\n-#rpcallowip=10.1.1.34\n-#rpcallowip=192.168.1.*\n-\n-# Listen for RPC connections on this TCP port:\n-rpcport=8332\n-\n-# You can use NovaCoin or novacoind to send commands to Bitcoin/bitcoindNovaCoin/novacoind\n-# running on another host using this option:\n-rpcconnect=127.0.0.1\n-\n-# Use Secure Sockets Layer (also known as TLS or HTTPS) to communicate\n-# with NovaCoin -server or novacoind\n-#rpcssl=1\n-\n-# OpenSSL settings used when rpcssl=1\n-rpcsslciphers=TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH\n-rpcsslcertificatechainfile=server.cert\n-rpcsslprivatekeyfile=server.pem\n-\n-\n-# Miscellaneous options\n-\n-# Set gen=1 to attempt to generate novacoins\n-gen=0\n-\n-# Pre-generate this many public/private key pairs, so wallet backups will be valid for\n-# both prior transactions and several dozen future transactions.\n-keypool=100\n-\n-# Pay an optional transaction fee every time you send novacoins.  \n-paytxfee=0.01\n-\n-# Allow direct connections for the 'pay via IP address' feature.\n-#allowreceivebyip=1\n-\n-\n-# User interface options\n-\n-# Start NovaCoin minimized\n-#min=1\n-\n-# Minimize to the system tray\n-#minimizetotray=1"
      },
      {
        "sha": "e654dcd8127904675da80eb05d106b6409622bea",
        "filename": "contrib/debian/manpages/aither-cli.1",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/manpages/aither-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/manpages/aither-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/aither-cli.1?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,21 @@\n+.TH AITHER-CLI \"1\" \"June 2016\" \"aither-cli 0.12\"\n+.SH NAME\n+aither-cli \\- a remote procedure call client for Aither Core.\n+.SH SYNOPSIS\n+aither-cli [options] <command> [params] \\- Send command to Aither Core.\n+.TP\n+aither-cli [options] help \\- Asks Aither Core for a list of supported commands.\n+.SH DESCRIPTION\n+This manual page documents the aither-cli program. aither-cli is an RPC client used to send commands to Aither Core.\n+\n+.SH OPTIONS\n+.TP\n+\\fB\\-?\\fR\n+Show possible options.\n+\n+.SH \"SEE ALSO\"\n+\\fBaitherd\\fP, \\fBaither.conf\\fP\n+.SH AUTHOR\n+This manual page was written by Ciemon Dunville <ciemon@gmail.com>. Permission is granted to copy, distribute and/or modify this document under the terms of the MIT License.\n+\n+The complete text of the MIT License can be found on the web at \\fIhttp://opensource.org/licenses/MIT\\fP."
      },
      {
        "sha": "e4bae47bd1d938d5d8cce960ec4fccda6001db99",
        "filename": "contrib/debian/manpages/aither-qt.1",
        "status": "added",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/manpages/aither-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/manpages/aither-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/aither-qt.1?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,13 @@\n+.TH AITHER-QT \"1\" \"June 2016\" \"aither-qt 0.12\"\n+.SH NAME\n+aither-qt \\- peer-to-peer network based digital currency\n+.SH DESCRIPTION\n+.SS \"Usage:\"\n+.IP\n+aither\\-qt [command\\-line options]\n+.SH OPTIONS\n+.TP\n+\\-?\n+List options.\n+.SH \"SEE ALSO\"\n+aitherd(1)"
      },
      {
        "sha": "0c348cd91c6f85f17760091a536e54657a043e31",
        "filename": "contrib/debian/manpages/aither.conf.5",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/manpages/aither.conf.5",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/manpages/aither.conf.5",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/aither.conf.5?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,19 @@\n+.TH AITHER.CONF \"5\" \"June 2016\" \"aither.conf 0.12\"\n+.SH NAME\n+aither.conf \\- Aither Core configuration file\n+.SH SYNOPSIS\n+All command-line options (except for '\\-conf') may be specified in a configuration file, and all configuration file options may also be specified on the command line. Command-line options override values set in the configuration file.\n+.TP\n+The configuration file is a list of 'setting=value' pairs, one per line, with optional comments starting with the '#' character. Please refer to aitherd(1) for a up to date list of valid options.\n+.TP\n+The configuration file is not automatically created; you can create it using your favorite plain-text editor. By default, aitherd(1) will look for a file named aither.conf(5) in the Aither Core data directory, but both the data directory and the configuration file path may be changed using the '\\-datadir' and '\\-conf' command-line arguments.\n+.SH LOCATION\n+aither.conf should be located in $HOME/.aithercore\n+\n+.SH \"SEE ALSO\"\n+aitherd(1)\n+.SH AUTHOR\n+This manual page was written by Micah Anderson <micah@debian.org> for the Debian system (but may be used by others). Permission is granted to copy, distribute and/or modify this document under the terms of the GNU General Public License, Version 3 or any later version published by the Free Software Foundation.\n+\n+On Debian systems, the complete text of the GNU General Public License can be found in /usr/share/common-licenses/GPL.\n+"
      },
      {
        "sha": "f468de1a18347af2cb3aeced7d0358cac7f10327",
        "filename": "contrib/debian/manpages/aitherd.1",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/manpages/aitherd.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/manpages/aitherd.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/aitherd.1?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,30 @@\n+.TH AITHERD \"1\" \"June 2016\" \"aitherd 0.12\"\n+.SH NAME\n+aitherd \\- peer-to-peer network based digital currency\n+.SH SYNOPSIS\n+aitherd [options] <command> [params]\n+.TP\n+aitherd [options] help <command> \\- Get help for a command\n+.SH DESCRIPTION\n+This  manual page documents the aitherd program. Aither is an experimental new digital currency that enables anonymous, instant payments to anyone, anywhere in the world. Aither uses peer-to-peer technology to operate with no central authority: managing transactions and issuing money are carried out collectively by the network. Aither Core is the name of the open source software which enables the use of this currency.\n+\n+.SH OPTIONS\n+.TP\n+\\-?\n+List of possible options.\n+.SH COMMANDS\n+.TP\n+\\fBhelp\\fR\n+List commands.\n+\n+.TP\n+\\fBhelp 'command'\\fR\n+Get help for a command.\n+\n+.SH \"SEE ALSO\"\n+aither.conf(5)\n+.SH AUTHOR\n+This manual page was written by Micah Anderson <micah@debian.org> for the Debian system (but may be used by others). Permission is granted to copy, distribute and/or modify this document under the terms of the GNU General Public License, Version 3 or any later version published by the Free Software Foundation.\n+\n+On Debian systems, the complete text of the GNU General Public License can be found in /usr/share/common-licenses/GPL.\n+"
      },
      {
        "sha": "1901e16ee544f4d59aae245f240840aa0dda424e",
        "filename": "contrib/debian/manpages/novacoin.conf.5",
        "status": "removed",
        "additions": 0,
        "deletions": 91,
        "changes": 91,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/debian/manpages/novacoin.conf.5",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/debian/manpages/novacoin.conf.5",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/novacoin.conf.5?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,91 +0,0 @@\n-.TH NOVACOIN.CONF \"8\" \"April 2013\" \"novacoin.conf 3.19\"\n-.SH NAME\n-novacoin.conf \\- novacoin configuration file\n-.SH SYNOPSIS\n-All command-line options (except for '-datadir' and '-conf') may be specified in a configuration file, and all configuration file options may also be specified on the command line. Command-line options override values set in the configuration file.\n-.TP\n-The configuration file is a list of 'setting=value' pairs, one per line, with optional comments starting with the '#' character.\n-.TP\n-The configuration file is not automatically created; you can create it using your favorite plain-text editor. By default, novacoind(1) will look for a file named novacoin.conf(5) in the novacoin data directory, but both the data directory and the configuration file path may be changed using the '-datadir' and '-conf' command-line arguments.\n-.SH LOCATION\n-novacoin.conf should be located in $HOME/.novacoin\n-.SH NETWORK-RELATED SETTINGS\n-.TP\n-.TP\n-\\fBtestnet=\\fR[\\fI'1'\\fR|\\fI'0'\\fR]\n-Enable or disable run on the test network instead of the real *novacoin* network.\n-.TP\n-\\fBproxy=\\fR\\fI'127.0.0.1:9050'\\fR\n-Connect via a socks4 proxy.\n-.TP\n-\\fBaddnode=\\fR\\fI'10.0.0.2:8333'\\fR\n-Use as many *addnode=* settings as you like to connect to specific peers.\n-.TP\n-\\fBconnect=\\fR\\fI'10.0.0.1:8333'\\fR\n-Use as many *connect=* settings as you like to connect ONLY to specific peers.\n-.TP\n-\\fBnoirc=\\fR[\\fI'1'\\fR|\\fI'0'\\fR]\n-Use or Do not use Internet Relay Chat (irc.lfnet.org #novacoin channel) to find other peers.\n-.TP\n-\\fRmaxconnections=\\fR\\fI'value'\\fR\n-Maximum number of inbound+outbound connections.\n-.SH JSON-RPC OPTIONS\n-.TP\n-\\fBserver=\\fR[\\fI'1'\\fR|\\fI'0'\\fR]\n-Tells *novacoin* to accept or not accept JSON-RPC commands.\n-.TP\n-\\fBrpcuser=\\fR\\fI'username'\\fR\n-You must set *rpcuser* to secure the JSON-RPC api.\n-.TP\n-\\fBrpcpassword=\\fR\\fI'password'\\fR\n-You must set *rpcpassword* to secure the JSON-RPC api.\n-.TP\n-\\fBrpctimeout=\\fR\\fI'30'\\fR\n-How many seconds *novacoin* will wait for a complete RPC HTTP request, after the HTTP connection is established.\n-.TP\n-\\fBrpcallowip=\\fR\\fI'192.168.1.*'\\fR\n-By default, only RPC connections from localhost are allowed. Specify as many *rpcallowip=* settings as you like to allow connections from other hosts (and you may use * as a wildcard character).\n-.TP\n-\\fBrpcport=\\fR\\fI'8332'\\fR\n-Listen for RPC connections on this TCP port.\n-.TP\n-\\fBrpcconnect=\\fR\\fI'127.0.0.1'\\fR\n-You can use *novacoin* or *novacoind(1)* to send commands to *novacoin*/*novacoind(1)* running on another host using this option.\n-.TP\n-\\fBrpcssl=\\fR\\fI'1'\\fR\n-Use Secure Sockets Layer (also known as TLS or HTTPS) to communicate with *novacoin* '-server' or *novacoind(1)*. Example of OpenSSL settings used when *rpcssl*='1':\n-.TP\n-\\fBrpcsslciphers=\\fR\\fI'TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH'\\fR\n-.TP\n-\\fBrpcsslcertificatechainfile=\\fR\\fI'server.cert'\\fR\n-.TP\n-\\fBrpcsslprivatekeyfile=\\fR\\fI'server.pem'\\fR\n-.TP\n-.SH MISCELLANEOUS OPTIONS\n-.TP\n-\\fBgen=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n-Enable or disable attempt to generate novacoins.\n-.TP\n-\\fBkeypool=\\fR\\fI'100'\\fR\n-Pre-generate this many public/private key pairs, so wallet backups will be valid for both prior transactions and several dozen future transactions.\n-.TP\n-\\fBpaytxfee=\\fR\\fI'0.00'\\fR\n-Pay an optional transaction fee every time you send novacoins. Transactions with fees are more likely than free transactions to be included in generated blocks, so may be validated sooner.\n-.TP\n-\\fBallowreceivebyip=\\fR\\fI'1'\\fR\n-Allow direct connections for the 'pay via IP address' feature.\n-.TP\n-.SH USER INTERFACE OPTIONS\n-.TP\n-\\fBmin=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n-Enable or disable start novacoind minimized.\n-.TP\n-\\fBminimizetotray=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n-Enable or disable minimize to the system tray.\n-.SH \"SEE ALSO\"\n-novacoind(1)\n-.SH AUTHOR\n-This manual page was written by Micah Anderson <micah@debian.org> for the Debian system (but may be used by others). Permission is granted to copy, distribute and/or modify this document under the terms of the GNU General Public License, Version 3 or any later version published by the Free Software Foundation.\n-\n-On Debian systems, the complete text of the GNU General Public License can be found in /usr/share/common-licenses/GPL.\n-"
      },
      {
        "sha": "b8199c21022f531265ca8f2ad2106554ef3a33e2",
        "filename": "contrib/debian/manpages/novacoind.1",
        "status": "removed",
        "additions": 0,
        "deletions": 206,
        "changes": 206,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/debian/manpages/novacoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/debian/manpages/novacoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/novacoind.1?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,206 +0,0 @@\n-.TH NOVACOIND \"7\" \"April 2013\" \"novacoind 3.19\" \n-.SH NAME\n-novacoind \\- peer-to-peer network based digital currency\n-.SH SYNOPSIS\n-novacoin [options] <command> [params]  \n-.TP\n-novacoin [options] help <command> - Get help for a command\n-.SH DESCRIPTION\n-This  manual page documents the novacoind program. Novacoin is a peer-to-peer digital currency. Peer-to-peer (P2P) means that there is no central authority to issue new money or keep track of transactions. Instead, these tasks are managed collectively by the nodes of the network. Advantages:\n-\n-Novacoins can be sent easily through the Internet, without having to trust middlemen. Transactions are designed to be irreversible. Be safe from instability caused by fractional reserve banking and central banks. The limited inflation of the Novacoin system\u2019s money supply is distributed evenly (by CPU power) throughout the network, not monopolized by banks.\n-\n-.SH OPTIONS\n-.TP\n-\\fB\\-conf=\\fR<file>\n-Specify configuration file (default: novacoin.conf)\n-.TP\n-\\fB\\-gen\\fR\n-Generate coins\n-.TP\n-\\fB\\-gen\\fR=\\fI0\\fR\n-Don't generate coins\n-.TP\n-\\fB\\-min\\fR\n-Start minimized\n-.TP\n-\\fB\\-datadir=\\fR<dir>\n-Specify data directory\n-.TP\n-\\fB\\-proxy=\\fR<ip:port>\n-Connect through socks4 proxy\n-.TP\n-\\fB\\-addnode=\\fR<ip>\n-Add a node to connect to\n-.TP\n-\\fB\\-connect=\\fR<ip>\n-Connect only to the specified node\n-.TP\n-\\fB\\-paytxfee=\\fR<amt>\n-Fee per KB to add to transactions you send\n-.TP\n-\\fB\\-server\\fR\n-Accept command line and JSON\\-RPC commands\n-.TP\n-\\fB\\-daemon\\fR\n-Run in the background as a daemon and accept commands\n-.TP\n-\\fB\\-testnet\\fR\n-Use the test network\n-.TP\n-\\fB\\-rpcuser=\\fR<user>\n-Username for JSON\\-RPC connections\n-.TP\n-\\fB\\-rpcpassword=\\fR<pw>\n-Password for JSON\\-RPC connections\n-.TP\n-\\fB\\-rpcport=\\fR<port>\n-Listen for JSON\\-RPC connections on <port>\n-.TP\n-\\fB\\-rpcallowip=\\fR<ip>\n-Allow JSON\\-RPC connections from specified IP address\n-.TP\n-\\fB\\-rpcconnect=\\fR<ip>\n-Send commands to node running on <ip>\n-.PP\n-SSL options: (see the Bitcoin Wiki for SSL setup instructions)\n-.TP\n-\\fB\\-rpcssl\\fR=\\fI1\\fR\n-Use OpenSSL (https) for JSON\\-RPC connections\n-.TP\n-\\fB\\-rpcsslcertificatchainfile=\\fR<file.cert>\n-Server certificate file (default: server.cert)\n-.TP\n-\\fB\\-rpcsslprivatekeyfile=\\fR<file.pem>\n-Server private key (default: server.pem)\n-.TP\n-\\fB\\-rpcsslciphers=\\fR<ciphers>\n-Acceptable ciphers (default: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)\n-.TP\n-\\-?\n-This help message\n-.SH COMMANDS\n-.TP\n-\\fBbackupwallet 'destination'\\fR\n-Safely copies *wallet.dat* to 'destination', which can be a directory or a path with filename.\n-.TP\n-\\fBgetaccount 'novacoinaddress'\\fR\n-Returns the account associated with the given address.\n-.TP\n-\\fBsetaccount 'novacoinaddress' ['account']\\fR\n-Sets the ['account'] associated with the given address. ['account'] may be omitted to remove an address from ['account'].\n-.TP\n-\\fBgetaccountaddress 'account'\\fR\n-Returns a new novacoin address for 'account'.\n-.TP\n-\\fBgetaddressesbyaccount 'account'\\fR\n-Returns the list of addresses associated with the given 'account'.\n-.TP\n-\\fBgetbalance 'account'\\fR\n-Returns the server's available balance, or the balance for 'account'.\n-.TP\n-\\fBgetblockcount\\fR\n-Returns the number of blocks in the longest block chain.\n-.TP\n-\\fBgetblocknumber\\fR\n-Returns the block number of the latest block in the longest block chain.\n-.TP\n-\\fBgetconnectioncount\\fR\n-Returns the number of connections to other nodes.\n-.TP\n-\\fBgetdifficulty\\fR\n-Returns the proof-of-work difficulty as a multiple of the minimum difficulty.\n-.TP\n-\\fBgetgenerate\\fR\n-Returns boolean true if server is trying to generate novacoins, false otherwise.\n-.TP\n-\\fBsetgenerate 'generate' ['genproclimit']\\fR\n-Generation is limited to ['genproclimit'] processors, -1 is unlimited.\n-.TP\n-\\fBgethashespersec\\fR\n-Returns a recent hashes per second performance measurement while generating.\n-.TP\n-\\fBgetinfo\\fR\n-Returns an object containing server information.\n-.TP\n-\\fBgetnewaddress 'account'\\fR\n-Returns a new novacoin address for receiving payments. If 'account' is specified (recommended), it is added to the address book so payments received with the address will be credited to 'account'.\n-.TP\n-\\fBgetreceivedbyaccount 'account' ['minconf=1']\\fR\n-Returns the total amount received by addresses associated with 'account' in transactions with at least ['minconf'] confirmations.\n-.TP\n-\\fBgetreceivedbyaddress 'novacoinaddress' ['minconf=1']\\fR\n-Returns the total amount received by 'novacoinaddress' in transactions with at least ['minconf'] confirmations.\n-.TP\n-\\fBgettransaction 'txid'\\fR\n-Returns information about a specific transaction, given hexadecimal transaction ID.\n-.TP\n-\\fBgetwork 'data'\\fR\n-If 'data' is specified, tries to solve the block and returns true if it was successful. If 'data' is not specified, returns formatted hash 'data' to work on:\n-\n-    \"midstate\" : precomputed hash state after hashing the first half of the data.\n-    \"data\"     : block data.\n-    \"hash1\"    : formatted hash buffer for second hash.\n-    \"target\"   : little endian hash target.\n-.TP\n-\\fBhelp 'command'\\fR\n-List commands, or get help for a command.\n-.TP\n-\\fBlistaccounts ['minconf=1']\\fR\n-List accounts and their current balances.\n-.TP\n-\\fBlistreceivedbyaccount ['minconf=1'] ['includeempty=false']\\fR\n-['minconf'] is the minimum number of confirmations before payments are included. ['includeempty'] whether to include addresses that haven't received any payments. Returns an array of objects containing:\n-\n-    \"account\"       : the account of the receiving address.\n-    \"amount\"        : total amount received by the address.\n-    \"confirmations\" : number of confirmations of the most recent transaction included.\n-.TP\n-\\fBlistreceivedbyaddress ['minconf=1'] ['includeempty=false']\\fR\n-['minconf'] is the minimum number of confirmations before payments are included. ['includeempty'] whether to include addresses that haven't received any payments. Returns an array of objects containing:\n-\n-    \"address\"       : receiving address.\n-    \"account\"       : the account of the receiving address.\n-    \"amount\"        : total amount received by the address.\n-    \"confirmations\" : number of confirmations of the most recent transaction included.\n-.TP\n-\\fBlisttransactions 'account' ['count=10']\\fR\n-Returns a list of the last ['count'] transactions for 'account' - for all accounts if 'account' is not specified or is \"*\". Each entry in the list may contain:\n-\n-    \"category\"      : will be generate, send, receive, or move.\n-    \"amount\"        : amount of transaction.\n-    \"fee\"           : Fee (if any) paid (only for send transactions).\n-    \"confirmations\" : number of confirmations (only for generate/send/receive).\n-    \"txid\"          : transaction ID (only for generate/send/receive).\n-    \"otheraccount\"  : account funds were moved to or from (only for move).\n-    \"message\"       : message associated with transaction (only for send).\n-    \"to\"            : message-to associated with transaction (only for send).\n-.TP\n-\\fBmove <'fromaccount'> <'toaccount'> <'amount'> ['minconf=1'] ['comment']\\fR\n-Moves funds between accounts.\n-.TP\n-\\fBsendfrom* <'account'> <'novacoinaddress'> <'amount'> ['minconf=1'] ['comment'] ['comment-to']\\fR\n-Sends amount from account's balance to 'novacoinaddress'. This method will fail if there is less than amount novacoins with ['minconf'] confirmations in the account's balance (unless account is the empty-string-named default account; it behaves like the *sendtoaddress* method). Returns transaction ID on success.\n-.TP     \n-\\fBsendtoaddress 'novacoinaddress' 'amount' ['comment'] ['comment-to']\\fR\n-Sends amount from the server's available balance to 'novacoinaddress'. amount is a real and is rounded to the nearest 0.01. Returns transaction id on success.\n-.TP    \n-\\fBstop\\fR\n-Stops the novacoin server.\n-.TP    \n-\\fBvalidateaddress 'novacoinaddress'\\fR\n-Checks that 'novacoinaddress' looks like a proper novacoin address. Returns an object containing:\n-\n-    \"isvalid\" : true or false.\n-    \"ismine\"  : true if the address is in the server's wallet.\n-    \"address\" : novacoinaddress.\n-\n-    *note: ismine and address are only returned if the address is valid.\n-\n-.SH \"SEE ALSO\"\n-novacoin.conf(5)\n-.SH AUTHOR\n-This manual page was written by Micah Anderson <micah@debian.org> for the Debian system (but may be used by others). Permission is granted to copy, distribute and/or modify this document under the terms of the GNU General Public License, Version 3 or any later version published by the Free Software Foundation.\n-\n-On Debian systems, the complete text of the GNU General Public License can be found in /usr/share/common-licenses/GPL.\n-"
      },
      {
        "sha": "a299232d251f968b59c3866288ae6dab5fadce3b",
        "filename": "contrib/debian/novacoin-qt.desktop",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/debian/novacoin-qt.desktop",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/debian/novacoin-qt.desktop",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoin-qt.desktop?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,12 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Name=NovaCoin\n-Comment=NovaCoin P2P Cryptocurrency\n-Comment[fr]=NovaCoin, monnaie virtuelle cryptographique pair \u00e0 pair\n-Comment[tr]=NovaCoin, e\u015ften e\u015fe kriptografik sanal para birimi\n-Exec=/usr/bin/novacoin-qt\n-Terminal=false\n-Type=Application\n-Icon=/usr/share/pixmaps/bitcoin80.xpm\n-MimeType=x-scheme-handler/novacoin;\n-Categories=Office;"
      },
      {
        "sha": "403fb4e2c44bd9a3f3acbca7d8aebba2a337bc1a",
        "filename": "contrib/debian/novacoin-qt.install",
        "status": "removed",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/debian/novacoin-qt.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/debian/novacoin-qt.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoin-qt.install?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,5 +0,0 @@\n-novacoin-qt usr/bin\n-share/pixmaps/bitcoin32.xpm usr/share/pixmaps\n-share/pixmaps/bitcoin80.xpm usr/share/pixmaps\n-debian/novacoin-qt.desktop usr/share/applications\n-debian/novacoin-qt.protocol usr/share/kde4/services/"
      },
      {
        "sha": "3e159d38fdca6ccacd45e9bc9c65a992480a9f95",
        "filename": "contrib/debian/novacoin-qt.lintian-overrides",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/debian/novacoin-qt.lintian-overrides",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/debian/novacoin-qt.lintian-overrides",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoin-qt.lintian-overrides?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,2 +0,0 @@\n-# Linked code is Expat - only Debian packaging is GPL-2+\n-novacoin-qt: possible-gpl-code-linked-with-openssl"
      },
      {
        "sha": "29a45469f4621aea1d6dcb87745f7f3cec9eb082",
        "filename": "contrib/debian/novacoin-qt.protocol",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/debian/novacoin-qt.protocol",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/debian/novacoin-qt.protocol",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoin-qt.protocol?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,11 +0,0 @@\n-[Protocol]\n-exec=novacoin-qt '%u'\n-protocol=novacoin\n-input=none\n-output=none\n-helper=true\n-listing=\n-reading=false\n-writing=false\n-makedir=false\n-deleting=false"
      },
      {
        "sha": "3728af9dd7af76b51d4fb9bad487b2a2f7f20772",
        "filename": "contrib/debian/novacoind.examples",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/debian/novacoind.examples",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/debian/novacoind.examples",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoind.examples?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1 +0,0 @@\n-debian/examples/novacoin.conf"
      },
      {
        "sha": "b44acca382276c2e3d7d16f9bb8be53a523a36ee",
        "filename": "contrib/debian/novacoind.install",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/debian/novacoind.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/debian/novacoind.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoind.install?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,2 +0,0 @@\n-debian/bin/novacoind usr/bin\n-src/novacoind usr/lib/novacoin"
      },
      {
        "sha": "e44a58f992cdbeb852bc56cc1e6d98bfafe7deab",
        "filename": "contrib/debian/novacoind.lintian-overrides",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/debian/novacoind.lintian-overrides",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/debian/novacoind.lintian-overrides",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoind.lintian-overrides?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,2 +0,0 @@\n-# Linked code is Expat - only Debian packaging is GPL-2+\n-novacoind: possible-gpl-code-linked-with-openssl"
      },
      {
        "sha": "15116c8db664397df5da16a94aeb8cc7102db9a5",
        "filename": "contrib/debian/novacoind.manpages",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/debian/novacoind.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/debian/novacoind.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoind.manpages?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,2 +0,0 @@\n-debian/manpages/novacoind.1\n-debian/manpages/novacoin.conf.5"
      },
      {
        "sha": "db0cc6dc0eff7c75b7a838b51f1fa47b5e68d316",
        "filename": "contrib/debian/rules",
        "status": "modified",
        "additions": 11,
        "deletions": 20,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/rules",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/rules",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/rules?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -1,33 +1,24 @@\n #!/usr/bin/make -f\n # -*- mode: makefile; coding: utf-8 -*-\n \n-#DEB_MAKE_CHECK_TARGET = test_bitcoin\n-#build/bitcoind::\n-#\t$(if $(filter nocheck,$(DEB_BUILD_OPTIONS)),,src/test_bitcoin)\n+#DEB_MAKE_CHECK_TARGET = test_aither\n+#build/aitherd::\n+#\t$(if $(filter nocheck,$(DEB_BUILD_OPTIONS)),,src/test_aither)\n \n-DEB_INSTALL_EXAMPLES_novacoind += debian/examples/*\n-DEB_INSTALL_MANPAGES_novacoind += debian/manpages/*\n+DEB_INSTALL_EXAMPLES_aitherd += debian/examples/*\n+DEB_INSTALL_MANPAGES_aitherd += debian/manpages/*\n \n %:\n \tdh --with bash-completion $@\n \n-override_dh_auto_build:\n-\tcd src; $(MAKE) -f makefile.unix novacoind\n-\t$(MAKE)\n-\n override_dh_auto_clean:\n-\tif [ -f Makefile ]; then $(MAKE) clean; else rm -rf build/; rm -f novacoin-qt; fi\n-\tcd src; $(MAKE) -f makefile.unix clean\n+\tif [ -f Makefile ]; then $(MAKE) distclean; fi\n+\trm -rf Makefile.in aclocal.m4 configure src/Makefile.in src/aither-config.h.in src/build-aux src/qt/Makefile.in src/qt/test/Makefile.in src/test/Makefile.in\n \n+# Yea, autogen should be run on the source archive, but I like doing git archive\n override_dh_auto_configure:\n-\tqmake novacoin-qt.pro USE_QRCODE=1\n+\t./autogen.sh\n+\t./configure --without-miniupnpc --with-gui=qt4\n \n override_dh_auto_test:\n-\tcd src; $(MAKE) -f makefile.unix test_novacoin\n-\tsrc/test_novacoin\n-\n-# Ensure wrapper is set executable\n-binary-post-install/novacoind:\n-\tchmod +x $(cdbs_curdestdir)usr/bin/novacoind\n-binary-post-install/novacoin-qt:\n-\tchmod +x $(cdbs_curdestdir)usr/bin/novacoin-qt\n+\tmake check"
      },
      {
        "sha": "e54fef6fc859c15d0c1c8b9ae4f94efee520f100",
        "filename": "contrib/debian/watch",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/watch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/debian/watch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/watch?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -1,4 +1,5 @@\n # Run the \"uscan\" command to check for upstream updates and more.\n-version=4\n+version=3\n+# use qa.debian.org redirector; see man uscan\n opts=uversionmangle=s/(\\d)(alpha|beta|rc)/$1~$2/,dversionmangle=s/~dfsg\\d*// \\\n- http://githubredir.debian.net/github/CryptoManiac/novacoin v(.*).tar.gz\n+ http://githubredir.debian.net/github/aithercoin/aither v(.*).tar.gz"
      },
      {
        "sha": "1346803b4659e2268dc92aefa17301c8394ff3a6",
        "filename": "contrib/devtools/README.md",
        "status": "added",
        "additions": 116,
        "deletions": 0,
        "changes": 116,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,116 @@\n+Contents\n+========\n+This directory contains tools for developers working on this repository.\n+\n+clang-format.py\n+===============\n+\n+A script to format cpp source code according to [.clang-format](../../src/.clang-format). This should only be applied to new files or files which are currently not actively developed on. Also, git subtrees are not subject to formatting.\n+\n+fix-copyright-headers.py\n+========================\n+\n+Every year newly updated files need to have its copyright headers updated to reflect the current year.\n+If you run this script from the root folder it will automatically update the year on the copyright header for all\n+source files if these have a git commit from the current year.\n+\n+For example a file changed in 2015 (with 2015 being the current year):\n+\n+```// Copyright (c) 2009-2013 The Bitcoin Core developers```\n+\n+would be changed to:\n+\n+```// Copyright (c) 2009-2015 The Bitcoin Core developers```\n+\n+git-subtree-check.sh\n+====================\n+\n+Run this script from the root of the repository to verify that a subtree matches the contents of\n+the commit it claims to have been updated to.\n+\n+To use, make sure that you have fetched the upstream repository branch in which the subtree is\n+maintained:\n+* for `src/secp256k1`: https://github.com/bitcoin/secp256k1.git (branch master)\n+* for `src/leveldb`: https://github.com/bitcoin/leveldb.git (branch bitcoin-fork)\n+* for `src/univalue`: https://github.com/bitcoin/univalue.git (branch master)\n+\n+Usage: `git-subtree-check.sh DIR COMMIT`\n+\n+`COMMIT` may be omitted, in which case `HEAD` is used.\n+\n+github-merge.sh\n+===============\n+\n+A small script to automate merging pull-requests securely and sign them with GPG.\n+\n+For example:\n+\n+  ./github-merge.sh bitcoin/bitcoin 3077\n+\n+(in any git repository) will help you merge pull request #3077 for the\n+bitcoin/bitcoin repository.\n+\n+What it does:\n+* Fetch master and the pull request.\n+* Locally construct a merge commit.\n+* Show the diff that merge results in.\n+* Ask you to verify the resulting source tree (so you can do a make\n+check or whatever).\n+* Ask you whether to GPG sign the merge commit.\n+* Ask you whether to push the result upstream.\n+\n+This means that there are no potential race conditions (where a\n+pullreq gets updated while you're reviewing it, but before you click\n+merge), and when using GPG signatures, that even a compromised github\n+couldn't mess with the sources.\n+\n+Setup\n+---------\n+Configuring the github-merge tool for the bitcoin repository is done in the following way:\n+\n+    git config githubmerge.repository bitcoin/bitcoin\n+    git config githubmerge.testcmd \"make -j4 check\" (adapt to whatever you want to use for testing)\n+    git config --global user.signingkey mykeyid (if you want to GPG sign)\n+\n+optimize-pngs.py\n+================\n+\n+A script to optimize png files in the bitcoin\n+repository (requires pngcrush).\n+\n+security-check.py and test-security-check.py\n+============================================\n+\n+Perform basic ELF security checks on a series of executables.\n+\n+symbol-check.py\n+===============\n+\n+A script to check that the (Linux) executables produced by gitian only contain\n+allowed gcc, glibc and libstdc++ version symbols. This makes sure they are\n+still compatible with the minimum supported Linux distribution versions.\n+\n+Example usage after a gitian build:\n+\n+    find ../gitian-builder/build -type f -executable | xargs python contrib/devtools/symbol-check.py \n+\n+If only supported symbols are used the return value will be 0 and the output will be empty.\n+\n+If there are 'unsupported' symbols, the return value will be 1 a list like this will be printed:\n+\n+    .../64/test_aither: symbol memcpy from unsupported version GLIBC_2.14\n+    .../64/test_aither: symbol __fdelt_chk from unsupported version GLIBC_2.15\n+    .../64/test_aither: symbol std::out_of_range::~out_of_range() from unsupported version GLIBCXX_3.4.15\n+    .../64/test_aither: symbol _ZNSt8__detail15_List_nod from unsupported version GLIBCXX_3.4.15\n+\n+update-translations.py\n+======================\n+\n+Run this script from the root of the repository to update all translations from transifex.\n+It will do the following automatically:\n+\n+- fetch all translations\n+- post-process them into valid and committable format\n+- add missing translations to the build system (TODO)\n+\n+See doc/translation-process.md for more information."
      },
      {
        "sha": "cee99047ac67e69fe767a910ac56811e574cfc8d",
        "filename": "contrib/devtools/clang-format.py",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/devtools/clang-format.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/devtools/clang-format.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/clang-format.py?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,62 @@\n+#!/usr/bin/env python\n+'''\n+Wrapper script for clang-format\n+\n+Copyright (c) 2015 MarcoFalke\n+Copyright (c) 2015 The Bitcoin Core developers\n+Distributed under the MIT software license, see the accompanying\n+file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+\n+import os\n+import sys\n+import subprocess\n+\n+tested_versions = ['3.6.0', '3.6.1', '3.6.2'] # A set of versions known to produce the same output\n+accepted_file_extensions = ('.h', '.cpp') # Files to format\n+\n+def check_clang_format_version(clang_format_exe):\n+    try:\n+        output = subprocess.check_output([clang_format_exe, '-version'])\n+        for ver in tested_versions:\n+            if ver in output:\n+                print \"Detected clang-format version \" + ver\n+                return\n+        raise RuntimeError(\"Untested version: \" + output)\n+    except Exception as e:\n+        print 'Could not verify version of ' + clang_format_exe + '.'\n+        raise e\n+\n+def check_command_line_args(argv):\n+    required_args = ['{clang-format-exe}', '{files}']\n+    example_args = ['clang-format-3.x', 'src/main.cpp', 'src/wallet/*']\n+\n+    if(len(argv) < len(required_args) + 1):\n+        for word in (['Usage:', argv[0]] + required_args):\n+            print word,\n+        print ''\n+        for word in (['E.g:', argv[0]] + example_args):\n+            print word,\n+        print ''\n+        sys.exit(1)\n+\n+def run_clang_format(clang_format_exe, files):\n+    for target in files:\n+        if os.path.isdir(target):\n+            for path, dirs, files in os.walk(target):\n+                run_clang_format(clang_format_exe, (os.path.join(path, f) for f in files))\n+        elif target.endswith(accepted_file_extensions):\n+            print \"Format \" + target\n+            subprocess.check_call([clang_format_exe, '-i', '-style=file', target], stdout=open(os.devnull, 'wb'), stderr=subprocess.STDOUT)\n+        else:\n+            print \"Skip \" + target\n+\n+def main(argv):\n+    check_command_line_args(argv)\n+    clang_format_exe = argv[1]\n+    files = argv[2:]\n+    check_clang_format_version(clang_format_exe)\n+    run_clang_format(clang_format_exe, files)\n+\n+if __name__ == \"__main__\":\n+    main(sys.argv)"
      },
      {
        "sha": "b6414a551f8707a032e3f310ea9d1f9badec20e2",
        "filename": "contrib/devtools/fix-copyright-headers.py",
        "status": "added",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/devtools/fix-copyright-headers.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/devtools/fix-copyright-headers.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/fix-copyright-headers.py?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,46 @@\n+#!/usr/bin/env python\n+'''\n+Run this script to update all the copyright headers of files\n+that were changed this year.\n+\n+For example:\n+\n+// Copyright (c) 2009-2012 The Bitcoin Core developers\n+\n+it will change it to\n+\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+'''\n+import os\n+import time\n+import re\n+\n+year = time.gmtime()[0]\n+CMD_GIT_DATE = 'git log --format=@%%at -1 %s | date +\"%%Y\" -u -f -'\n+CMD_REGEX= \"perl -pi -e 's/(20\\d\\d)(?:-20\\d\\d)? The Bitcoin/$1-%s The Bitcoin/' %s\"\n+REGEX_CURRENT= re.compile(\"%s The Bitcoin\" % year)\n+CMD_LIST_FILES= \"find %s | grep %s\"\n+\n+FOLDERS = [\"./qa\", \"./src\"]\n+EXTENSIONS = [\".cpp\",\".h\", \".py\"]\n+\n+def get_git_date(file_path):\n+  r = os.popen(CMD_GIT_DATE % file_path)\n+  for l in r:\n+    # Result is one line, so just return\n+    return l.replace(\"\\n\",\"\")\n+  return \"\"\n+\n+n=1\n+for folder in FOLDERS:\n+  for extension in EXTENSIONS:\n+    for file_path in os.popen(CMD_LIST_FILES % (folder, extension)):\n+      file_path = os.getcwd() + file_path[1:-1]\n+      if file_path.endswith(extension):\n+        git_date = get_git_date(file_path)\n+        if str(year) == git_date:\n+          # Only update if current year is not found\n+          if REGEX_CURRENT.search(open(file_path, \"r\").read()) is None:\n+            print n,\"Last git edit\", git_date, \"-\", file_path\n+            os.popen(CMD_REGEX % (year,file_path))\n+            n = n + 1"
      },
      {
        "sha": "1cb82fe6826c74af49cf381ecaf5381ab210bdb7",
        "filename": "contrib/devtools/git-subtree-check.sh",
        "status": "added",
        "additions": 74,
        "deletions": 0,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/devtools/git-subtree-check.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/devtools/git-subtree-check.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/git-subtree-check.sh?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,74 @@\n+#!/bin/sh\n+\n+DIR=\"$1\"\n+COMMIT=\"$2\"\n+if [ -z \"$COMMIT\" ]; then\n+    COMMIT=HEAD\n+fi\n+\n+# Taken from git-subtree (Copyright (C) 2009 Avery Pennarun <apenwarr@gmail.com>)\n+find_latest_squash()\n+{\n+\tdir=\"$1\"\n+\tsq=\n+\tmain=\n+\tsub=\n+\tgit log --grep=\"^git-subtree-dir: $dir/*\\$\" \\\n+\t\t--pretty=format:'START %H%n%s%n%n%b%nEND%n' \"$COMMIT\" |\n+\twhile read a b junk; do\n+\t\tcase \"$a\" in\n+\t\t\tSTART) sq=\"$b\" ;;\n+\t\t\tgit-subtree-mainline:) main=\"$b\" ;;\n+\t\t\tgit-subtree-split:) sub=\"$b\" ;;\n+\t\t\tEND)\n+\t\t\t\tif [ -n \"$sub\" ]; then\n+\t\t\t\t\tif [ -n \"$main\" ]; then\n+\t\t\t\t\t\t# a rejoin commit?\n+\t\t\t\t\t\t# Pretend its sub was a squash.\n+\t\t\t\t\t\tsq=\"$sub\"\n+\t\t\t\t\tfi\n+\t\t\t\t\techo \"$sq\" \"$sub\"\n+\t\t\t\t\tbreak\n+\t\t\t\tfi\n+\t\t\t\tsq=\n+\t\t\t\tmain=\n+\t\t\t\tsub=\n+\t\t\t\t;;\n+\t\tesac\n+\tdone\n+}\n+\n+latest_squash=\"$(find_latest_squash \"$DIR\")\"\n+if [ -z \"$latest_squash\" ]; then\n+    echo \"ERROR: $DIR is not a subtree\" >&2\n+    exit 2\n+fi\n+\n+set $latest_squash\n+old=$1\n+rev=$2\n+if [ \"d$(git cat-file -t $rev 2>/dev/null)\" != dcommit ]; then\n+    echo \"ERROR: subtree commit $rev unavailable. Fetch/update the subtree repository\" >&2\n+    exit 2\n+fi\n+tree_subtree=$(git show -s --format=\"%T\" $rev)\n+echo \"$DIR in $COMMIT was last updated to upstream commit $rev (tree $tree_subtree)\"\n+tree_actual=$(git ls-tree -d \"$COMMIT\" \"$DIR\" | head -n 1)\n+if [ -z \"$tree_actual\" ]; then\n+    echo \"FAIL: subtree directory $DIR not found in $COMMIT\" >&2\n+    exit 1\n+fi\n+set $tree_actual\n+tree_actual_type=$2\n+tree_actual_tree=$3\n+echo \"$DIR in $COMMIT currently refers to $tree_actual_type $tree_actual_tree\"\n+if [ \"d$tree_actual_type\" != \"dtree\" ]; then\n+    echo \"FAIL: subtree directory $DIR is not a tree in $COMMIT\" >&2\n+    exit 1\n+fi\n+if [ \"$tree_actual_tree\" != \"$tree_subtree\" ]; then\n+    git diff-tree $tree_actual_tree $tree_subtree >&2\n+    echo \"FAIL: subtree directory tree doesn't match subtree commit tree\" >&2\n+    exit 1\n+fi\n+echo \"GOOD\""
      },
      {
        "sha": "afb53f0390f0680a87cabd8c40d0034e1ba57405",
        "filename": "contrib/devtools/github-merge.sh",
        "status": "added",
        "additions": 185,
        "deletions": 0,
        "changes": 185,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/devtools/github-merge.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/devtools/github-merge.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.sh?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,185 @@\n+#!/bin/bash\n+\n+# This script will locally construct a merge commit for a pull request on a\n+# github repository, inspect it, sign it and optionally push it.\n+\n+# The following temporary branches are created/overwritten and deleted:\n+# * pull/$PULL/base (the current master we're merging onto)\n+# * pull/$PULL/head (the current state of the remote pull request)\n+# * pull/$PULL/merge (github's merge)\n+# * pull/$PULL/local-merge (our merge)\n+\n+# In case of a clean merge that is accepted by the user, the local branch with\n+# name $BRANCH is overwritten with the merged result, and optionally pushed.\n+\n+REPO=\"$(git config --get githubmerge.repository)\"\n+if [[ \"d$REPO\" == \"d\" ]]; then\n+  echo \"ERROR: No repository configured. Use this command to set:\" >&2\n+  echo \"git config githubmerge.repository <owner>/<repo>\" >&2\n+  echo \"In addition, you can set the following variables:\" >&2\n+  echo \"- githubmerge.host (default git@github.com)\" >&2\n+  echo \"- githubmerge.branch (default master)\" >&2\n+  echo \"- githubmerge.testcmd (default none)\" >&2\n+  exit 1\n+fi\n+\n+HOST=\"$(git config --get githubmerge.host)\"\n+if [[ \"d$HOST\" == \"d\" ]]; then\n+  HOST=\"git@github.com\"\n+fi\n+\n+BRANCH=\"$(git config --get githubmerge.branch)\"\n+if [[ \"d$BRANCH\" == \"d\" ]]; then\n+  BRANCH=\"master\"\n+fi\n+\n+TESTCMD=\"$(git config --get githubmerge.testcmd)\"\n+\n+PULL=\"$1\"\n+\n+if [[ \"d$PULL\" == \"d\" ]]; then\n+  echo \"Usage: $0 pullnumber [branch]\" >&2\n+  exit 2\n+fi\n+\n+if [[ \"d$2\" != \"d\" ]]; then\n+  BRANCH=\"$2\"\n+fi\n+\n+# Initialize source branches.\n+git checkout -q \"$BRANCH\"\n+if git fetch -q \"$HOST\":\"$REPO\" \"+refs/pull/$PULL/*:refs/heads/pull/$PULL/*\"; then\n+  if ! git log -q -1 \"refs/heads/pull/$PULL/head\" >/dev/null 2>&1; then\n+    echo \"ERROR: Cannot find head of pull request #$PULL on $HOST:$REPO.\" >&2\n+    exit 3\n+  fi\n+  if ! git log -q -1 \"refs/heads/pull/$PULL/merge\" >/dev/null 2>&1; then\n+    echo \"ERROR: Cannot find merge of pull request #$PULL on $HOST:$REPO.\" >&2\n+    exit 3\n+  fi\n+else\n+  echo \"ERROR: Cannot find pull request #$PULL on $HOST:$REPO.\" >&2\n+  exit 3\n+fi\n+if git fetch -q \"$HOST\":\"$REPO\" +refs/heads/\"$BRANCH\":refs/heads/pull/\"$PULL\"/base; then\n+  true\n+else\n+  echo \"ERROR: Cannot find branch $BRANCH on $HOST:$REPO.\" >&2\n+  exit 3\n+fi\n+git checkout -q pull/\"$PULL\"/base\n+git branch -q -D pull/\"$PULL\"/local-merge 2>/dev/null\n+git checkout -q -b pull/\"$PULL\"/local-merge\n+TMPDIR=\"$(mktemp -d -t ghmXXXXX)\"\n+\n+function cleanup() {\n+  git checkout -q \"$BRANCH\"\n+  git branch -q -D pull/\"$PULL\"/head 2>/dev/null\n+  git branch -q -D pull/\"$PULL\"/base 2>/dev/null\n+  git branch -q -D pull/\"$PULL\"/merge 2>/dev/null\n+  git branch -q -D pull/\"$PULL\"/local-merge 2>/dev/null\n+  rm -rf \"$TMPDIR\"\n+}\n+\n+# Create unsigned merge commit.\n+(\n+  echo \"Merge pull request #$PULL\"\n+  echo \"\"\n+  git log --no-merges --topo-order --pretty='format:%h %s (%an)' pull/\"$PULL\"/base..pull/\"$PULL\"/head\n+)>\"$TMPDIR/message\"\n+if git merge -q --commit --no-edit --no-ff -m \"$(<\"$TMPDIR/message\")\" pull/\"$PULL\"/head; then\n+  if [ \"d$(git log --pretty='format:%s' -n 1)\" != \"dMerge pull request #$PULL\" ]; then\n+    echo \"ERROR: Creating merge failed (already merged?).\" >&2\n+    cleanup\n+    exit 4\n+  fi\n+else\n+  echo \"ERROR: Cannot be merged cleanly.\" >&2\n+  git merge --abort\n+  cleanup\n+  exit 4\n+fi\n+\n+# Run test command if configured.\n+if [[ \"d$TESTCMD\" != \"d\" ]]; then\n+  # Go up to the repository's root.\n+  while [ ! -d .git ]; do cd ..; done\n+  if ! $TESTCMD; then\n+    echo \"ERROR: Running $TESTCMD failed.\" >&2\n+    cleanup\n+    exit 5\n+  fi\n+  # Show the created merge.\n+  git diff pull/\"$PULL\"/merge..pull/\"$PULL\"/local-merge >\"$TMPDIR\"/diff\n+  git diff pull/\"$PULL\"/base..pull/\"$PULL\"/local-merge\n+  if [[ \"$(<\"$TMPDIR\"/diff)\" != \"\" ]]; then\n+    echo \"WARNING: merge differs from github!\" >&2\n+    read -p \"Type 'ignore' to continue. \" -r >&2\n+    if [[ \"d$REPLY\" =~ ^d[iI][gG][nN][oO][rR][eE]$ ]]; then\n+      echo \"Difference with github ignored.\" >&2\n+    else\n+      cleanup\n+      exit 6\n+    fi\n+  fi\n+  read -p \"Press 'd' to accept the diff. \" -n 1 -r >&2\n+  echo\n+  if [[ \"d$REPLY\" =~ ^d[dD]$ ]]; then\n+    echo \"Diff accepted.\" >&2\n+  else\n+    echo \"ERROR: Diff rejected.\" >&2\n+    cleanup\n+    exit 6\n+  fi\n+else\n+  # Verify the result.\n+  echo \"Dropping you on a shell so you can try building/testing the merged source.\" >&2\n+  echo \"Run 'git diff HEAD~' to show the changes being merged.\" >&2\n+  echo \"Type 'exit' when done.\" >&2\n+  if [[ -f /etc/debian_version ]]; then # Show pull number in prompt on Debian default prompt\n+      export debian_chroot=\"$PULL\"\n+  fi\n+  bash -i\n+  read -p \"Press 'm' to accept the merge. \" -n 1 -r >&2\n+  echo\n+  if [[ \"d$REPLY\" =~ ^d[Mm]$ ]]; then\n+    echo \"Merge accepted.\" >&2\n+  else\n+    echo \"ERROR: Merge rejected.\" >&2\n+    cleanup\n+    exit 7\n+  fi\n+fi\n+\n+# Sign the merge commit.\n+read -p \"Press 's' to sign off on the merge. \" -n 1 -r >&2\n+echo\n+if [[ \"d$REPLY\" =~ ^d[Ss]$ ]]; then\n+  if [[ \"$(git config --get user.signingkey)\" == \"\" ]]; then\n+    echo \"ERROR: No GPG signing key set, not signing. Set one using:\" >&2\n+    echo \"git config --global user.signingkey <key>\" >&2\n+    cleanup\n+    exit 1\n+  else\n+    if ! git commit -q --gpg-sign --amend --no-edit; then\n+        echo \"Error signing, exiting.\"\n+        cleanup\n+        exit 1\n+    fi\n+  fi\n+else\n+  echo \"Not signing off on merge, exiting.\"\n+  cleanup\n+  exit 1\n+fi\n+\n+# Clean up temporary branches, and put the result in $BRANCH.\n+git checkout -q \"$BRANCH\"\n+git reset -q --hard pull/\"$PULL\"/local-merge\n+cleanup\n+\n+# Push the result.\n+read -p \"Type 'push' to push the result to $HOST:$REPO, branch $BRANCH. \" -r >&2\n+if [[ \"d$REPLY\" =~ ^d[Pp][Uu][Ss][Hh]$ ]]; then\n+  git push \"$HOST\":\"$REPO\" refs/heads/\"$BRANCH\"\n+fi"
      },
      {
        "sha": "799e0cc7d0fb15b6e9338c711d5ca4d813a06a32",
        "filename": "contrib/devtools/optimize-pngs.py",
        "status": "added",
        "additions": 75,
        "deletions": 0,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/devtools/optimize-pngs.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/devtools/optimize-pngs.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/optimize-pngs.py?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,75 @@\n+#!/usr/bin/env python\n+'''\n+Run this script every time you change one of the png files. Using pngcrush, it will optimize the png files, remove various color profiles, remove ancillary chunks (alla) and text chunks (text).\n+#pngcrush -brute -ow -rem gAMA -rem cHRM -rem iCCP -rem sRGB -rem alla -rem text\n+'''\n+import os\n+import sys\n+import subprocess\n+import hashlib\n+from PIL import Image\n+\n+def file_hash(filename):\n+    '''Return hash of raw file contents'''\n+    with open(filename, 'rb') as f:\n+        return hashlib.sha256(f.read()).hexdigest()\n+\n+def content_hash(filename):\n+    '''Return hash of RGBA contents of image'''\n+    i = Image.open(filename)\n+    i = i.convert('RGBA')\n+    data = i.tobytes()\n+    return hashlib.sha256(data).hexdigest()\n+\n+pngcrush = 'pngcrush'\n+git = 'git'\n+folders = [\"src/qt/res/movies\", \"src/qt/res/icons\", \"share/pixmaps\"]\n+basePath = subprocess.check_output([git, 'rev-parse', '--show-toplevel']).rstrip('\\n')\n+totalSaveBytes = 0\n+noHashChange = True\n+\n+outputArray = []\n+for folder in folders:\n+    absFolder=os.path.join(basePath, folder)\n+    for file in os.listdir(absFolder):\n+        extension = os.path.splitext(file)[1]\n+        if extension.lower() == '.png':\n+            print(\"optimizing \"+file+\"...\"),\n+            file_path = os.path.join(absFolder, file)\n+            fileMetaMap = {'file' : file, 'osize': os.path.getsize(file_path), 'sha256Old' : file_hash(file_path)};\n+            fileMetaMap['contentHashPre'] = content_hash(file_path)\n+        \n+            pngCrushOutput = \"\"\n+            try:\n+                pngCrushOutput = subprocess.check_output(\n+                        [pngcrush, \"-brute\", \"-ow\", \"-rem\", \"gAMA\", \"-rem\", \"cHRM\", \"-rem\", \"iCCP\", \"-rem\", \"sRGB\", \"-rem\", \"alla\", \"-rem\", \"text\", file_path],\n+                        stderr=subprocess.STDOUT).rstrip('\\n')\n+            except:\n+                print \"pngcrush is not installed, aborting...\"\n+                sys.exit(0)\n+        \n+            #verify\n+            if \"Not a PNG file\" in subprocess.check_output([pngcrush, \"-n\", \"-v\", file_path], stderr=subprocess.STDOUT):\n+                print \"PNG file \"+file+\" is corrupted after crushing, check out pngcursh version\"\n+                sys.exit(1)\n+            \n+            fileMetaMap['sha256New'] = file_hash(file_path)\n+            fileMetaMap['contentHashPost'] = content_hash(file_path)\n+\n+            if fileMetaMap['contentHashPre'] != fileMetaMap['contentHashPost']:\n+                print \"Image contents of PNG file \"+file+\" before and after crushing don't match\"\n+                sys.exit(1)\n+\n+            fileMetaMap['psize'] = os.path.getsize(file_path)\n+            outputArray.append(fileMetaMap)\n+            print(\"done\\n\"),\n+\n+print \"summary:\\n+++++++++++++++++\"\n+for fileDict in outputArray:\n+    oldHash = fileDict['sha256Old']\n+    newHash = fileDict['sha256New']\n+    totalSaveBytes += fileDict['osize'] - fileDict['psize']\n+    noHashChange = noHashChange and (oldHash == newHash)\n+    print fileDict['file']+\"\\n  size diff from: \"+str(fileDict['osize'])+\" to: \"+str(fileDict['psize'])+\"\\n  old sha256: \"+oldHash+\"\\n  new sha256: \"+newHash+\"\\n\"\n+    \n+print \"completed. Checksum stable: \"+str(noHashChange)+\". Total reduction: \"+str(totalSaveBytes)+\" bytes\""
      },
      {
        "sha": "01586457db475569fa3e00d6021c33059697bf66",
        "filename": "contrib/devtools/security-check.py",
        "status": "added",
        "additions": 181,
        "deletions": 0,
        "changes": 181,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/devtools/security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/devtools/security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/security-check.py?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,181 @@\n+#!/usr/bin/python2\n+'''\n+Perform basic ELF security checks on a series of executables.\n+Exit status will be 0 if succesful, and the program will be silent.\n+Otherwise the exit status will be 1 and it will log which executables failed which checks.\n+Needs `readelf` (for ELF) and `objdump` (for PE).\n+'''\n+from __future__ import division,print_function\n+import subprocess\n+import sys\n+import os\n+\n+READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n+OBJDUMP_CMD = os.getenv('OBJDUMP', '/usr/bin/objdump')\n+\n+def check_ELF_PIE(executable):\n+    '''\n+    Check for position independent executable (PIE), allowing for address space randomization.\n+    '''\n+    p = subprocess.Popen([READELF_CMD, '-h', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+\n+    ok = False\n+    for line in stdout.split('\\n'):\n+        line = line.split()\n+        if len(line)>=2 and line[0] == 'Type:' and line[1] == 'DYN':\n+            ok = True\n+    return ok\n+\n+def get_ELF_program_headers(executable):\n+    '''Return type and flags for ELF program headers'''\n+    p = subprocess.Popen([READELF_CMD, '-l', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    in_headers = False\n+    count = 0\n+    headers = []\n+    for line in stdout.split('\\n'):\n+        if line.startswith('Program Headers:'):\n+            in_headers = True\n+        if line == '':\n+            in_headers = False\n+        if in_headers:\n+            if count == 1: # header line\n+                ofs_typ = line.find('Type')\n+                ofs_offset = line.find('Offset')\n+                ofs_flags = line.find('Flg')\n+                ofs_align = line.find('Align')\n+                if ofs_typ == -1 or ofs_offset == -1 or ofs_flags == -1 or ofs_align  == -1:\n+                    raise ValueError('Cannot parse elfread -lW output')\n+            elif count > 1:\n+                typ = line[ofs_typ:ofs_offset].rstrip()\n+                flags = line[ofs_flags:ofs_align].rstrip()\n+                headers.append((typ, flags))\n+            count += 1\n+    return headers\n+\n+def check_ELF_NX(executable):\n+    '''\n+    Check that no sections are writable and executable (including the stack)\n+    '''\n+    have_wx = False\n+    have_gnu_stack = False\n+    for (typ, flags) in get_ELF_program_headers(executable):\n+        if typ == 'GNU_STACK':\n+            have_gnu_stack = True\n+        if 'W' in flags and 'E' in flags: # section is both writable and executable\n+            have_wx = True\n+    return have_gnu_stack and not have_wx\n+\n+def check_ELF_RELRO(executable):\n+    '''\n+    Check for read-only relocations.\n+    GNU_RELRO program header must exist\n+    Dynamic section must have BIND_NOW flag\n+    '''\n+    have_gnu_relro = False\n+    for (typ, flags) in get_ELF_program_headers(executable):\n+        # Note: not checking flags == 'R': here as linkers set the permission differently\n+        # This does not affect security: the permission flags of the GNU_RELRO program header are ignored, the PT_LOAD header determines the effective permissions.\n+        # However, the dynamic linker need to write to this area so these are RW.\n+        # Glibc itself takes care of mprotecting this area R after relocations are finished.\n+        # See also http://permalink.gmane.org/gmane.comp.gnu.binutils/71347\n+        if typ == 'GNU_RELRO':\n+            have_gnu_relro = True\n+\n+    have_bindnow = False\n+    p = subprocess.Popen([READELF_CMD, '-d', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    for line in stdout.split('\\n'):\n+        tokens = line.split()\n+        if len(tokens)>1 and tokens[1] == '(BIND_NOW)' or (len(tokens)>2 and tokens[1] == '(FLAGS)' and 'BIND_NOW' in tokens[2]):\n+            have_bindnow = True\n+    return have_gnu_relro and have_bindnow\n+\n+def check_ELF_Canary(executable):\n+    '''\n+    Check for use of stack canary\n+    '''\n+    p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    ok = False\n+    for line in stdout.split('\\n'):\n+        if '__stack_chk_fail' in line:\n+            ok = True\n+    return ok\n+\n+def get_PE_dll_characteristics(executable):\n+    '''\n+    Get PE DllCharacteristics bits\n+    '''\n+    p = subprocess.Popen([OBJDUMP_CMD, '-x',  executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    for line in stdout.split('\\n'):\n+        tokens = line.split()\n+        if len(tokens)>=2 and tokens[0] == 'DllCharacteristics':\n+            return int(tokens[1],16)\n+    return 0\n+\n+\n+def check_PE_PIE(executable):\n+    '''PIE: DllCharacteristics bit 0x40 signifies dynamicbase (ASLR)'''\n+    return bool(get_PE_dll_characteristics(executable) & 0x40)\n+\n+def check_PE_NX(executable):\n+    '''NX: DllCharacteristics bit 0x100 signifies nxcompat (DEP)'''\n+    return bool(get_PE_dll_characteristics(executable) & 0x100)\n+\n+CHECKS = {\n+'ELF': [\n+    ('PIE', check_ELF_PIE),\n+    ('NX', check_ELF_NX),\n+    ('RELRO', check_ELF_RELRO),\n+    ('Canary', check_ELF_Canary)\n+],\n+'PE': [\n+    ('PIE', check_PE_PIE),\n+    ('NX', check_PE_NX)\n+]\n+}\n+\n+def identify_executable(executable):\n+    with open(filename, 'rb') as f:\n+        magic = f.read(4)\n+    if magic.startswith(b'MZ'):\n+        return 'PE'\n+    elif magic.startswith(b'\\x7fELF'):\n+        return 'ELF'\n+    return None\n+\n+if __name__ == '__main__':\n+    retval = 0\n+    for filename in sys.argv[1:]:\n+        try:\n+            etype = identify_executable(filename)\n+            if etype is None:\n+                print('%s: unknown format' % filename)\n+                retval = 1\n+                continue\n+\n+            failed = []\n+            for (name, func) in CHECKS[etype]:\n+                if not func(filename):\n+                    failed.append(name)\n+            if failed:\n+                print('%s: failed %s' % (filename, ' '.join(failed)))\n+                retval = 1\n+        except IOError:\n+            print('%s: cannot open' % filename)\n+            retval = 1\n+    exit(retval)\n+"
      },
      {
        "sha": "4ad5136f79ee5310e712a85cd21c97364ce6cd2b",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "added",
        "additions": 163,
        "deletions": 0,
        "changes": 163,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,163 @@\n+#!/usr/bin/python2\n+# Copyright (c) 2014 Wladimir J. van der Laan\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+A script to check that the (Linux) executables produced by gitian only contain\n+allowed gcc, glibc and libstdc++ version symbols.  This makes sure they are\n+still compatible with the minimum supported Linux distribution versions.\n+\n+Example usage:\n+\n+    find ../gitian-builder/build -type f -executable | xargs python contrib/devtools/symbol-check.py\n+'''\n+from __future__ import division, print_function\n+import subprocess\n+import re\n+import sys\n+import os\n+\n+# Debian 6.0.9 (Squeeze) has:\n+#\n+# - g++ version 4.4.5 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=g%2B%2B)\n+# - libc version 2.11.3 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=libc6)\n+# - libstdc++ version 4.4.5 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=libstdc%2B%2B6)\n+#\n+# Ubuntu 10.04.4 (Lucid Lynx) has:\n+#\n+# - g++ version 4.4.3 (http://packages.ubuntu.com/search?keywords=g%2B%2B&searchon=names&suite=lucid&section=all)\n+# - libc version 2.11.1 (http://packages.ubuntu.com/search?keywords=libc6&searchon=names&suite=lucid&section=all)\n+# - libstdc++ version 4.4.3 (http://packages.ubuntu.com/search?suite=lucid&section=all&arch=any&keywords=libstdc%2B%2B&searchon=names)\n+#\n+# Taking the minimum of these as our target.\n+#\n+# According to GNU ABI document (http://gcc.gnu.org/onlinedocs/libstdc++/manual/abi.html) this corresponds to:\n+#   GCC 4.4.0: GCC_4.4.0\n+#   GCC 4.4.2: GLIBCXX_3.4.13, CXXABI_1.3.3\n+#   (glibc)    GLIBC_2_11\n+#\n+MAX_VERSIONS = {\n+'GCC':     (4,4,0),\n+'CXXABI':  (1,3,3),\n+'GLIBCXX': (3,4,13),\n+'GLIBC':   (2,11)\n+}\n+# See here for a description of _IO_stdin_used:\n+# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=634261#109\n+\n+# Ignore symbols that are exported as part of every executable\n+IGNORE_EXPORTS = {\n+'_edata', '_end', '_init', '__bss_start', '_fini', '_IO_stdin_used'\n+}\n+READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n+CPPFILT_CMD = os.getenv('CPPFILT', '/usr/bin/c++filt')\n+# Allowed NEEDED libraries\n+ALLOWED_LIBRARIES = {\n+# bitcoind and bitcoin-qt\n+'libgcc_s.so.1', # GCC base support\n+'libc.so.6', # C library\n+'libpthread.so.0', # threading\n+'libanl.so.1', # DNS resolve\n+'libm.so.6', # math library\n+'librt.so.1', # real-time (clock)\n+'ld-linux-x86-64.so.2', # 64-bit dynamic linker\n+'ld-linux.so.2', # 32-bit dynamic linker\n+# bitcoin-qt only\n+'libX11-xcb.so.1', # part of X11\n+'libX11.so.6', # part of X11\n+'libxcb.so.1', # part of X11\n+'libfontconfig.so.1', # font support\n+'libfreetype.so.6', # font parsing\n+'libdl.so.2' # programming interface to dynamic linker\n+}\n+\n+class CPPFilt(object):\n+    '''\n+    Demangle C++ symbol names.\n+\n+    Use a pipe to the 'c++filt' command.\n+    '''\n+    def __init__(self):\n+        self.proc = subprocess.Popen(CPPFILT_CMD, stdin=subprocess.PIPE, stdout=subprocess.PIPE)\n+\n+    def __call__(self, mangled):\n+        self.proc.stdin.write(mangled + '\\n')\n+        return self.proc.stdout.readline().rstrip()\n+\n+    def close(self):\n+        self.proc.stdin.close()\n+        self.proc.stdout.close()\n+        self.proc.wait()\n+\n+def read_symbols(executable, imports=True):\n+    '''\n+    Parse an ELF executable and return a list of (symbol,version) tuples\n+    for dynamic, imported symbols.\n+    '''\n+    p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Could not read symbols for %s: %s' % (executable, stderr.strip()))\n+    syms = []\n+    for line in stdout.split('\\n'):\n+        line = line.split()\n+        if len(line)>7 and re.match('[0-9]+:$', line[0]):\n+            (sym, _, version) = line[7].partition('@')\n+            is_import = line[6] == 'UND'\n+            if version.startswith('@'):\n+                version = version[1:]\n+            if is_import == imports:\n+                syms.append((sym, version))\n+    return syms\n+\n+def check_version(max_versions, version):\n+    if '_' in version:\n+        (lib, _, ver) = version.rpartition('_')\n+    else:\n+        lib = version\n+        ver = '0'\n+    ver = tuple([int(x) for x in ver.split('.')])\n+    if not lib in max_versions:\n+        return False\n+    return ver <= max_versions[lib]\n+\n+def read_libraries(filename):\n+    p = subprocess.Popen([READELF_CMD, '-d', '-W', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    libraries = []\n+    for line in stdout.split('\\n'):\n+        tokens = line.split()\n+        if len(tokens)>2 and tokens[1] == '(NEEDED)':\n+            match = re.match('^Shared library: \\[(.*)\\]$', ' '.join(tokens[2:]))\n+            if match:\n+                libraries.append(match.group(1))\n+            else:\n+                raise ValueError('Unparseable (NEEDED) specification')\n+    return libraries\n+\n+if __name__ == '__main__':\n+    cppfilt = CPPFilt()\n+    retval = 0\n+    for filename in sys.argv[1:]:\n+        # Check imported symbols\n+        for sym,version in read_symbols(filename, True):\n+            if version and not check_version(MAX_VERSIONS, version):\n+                print('%s: symbol %s from unsupported version %s' % (filename, cppfilt(sym), version))\n+                retval = 1\n+        # Check exported symbols\n+        for sym,version in read_symbols(filename, False):\n+            if sym in IGNORE_EXPORTS:\n+                continue\n+            print('%s: export of symbol %s not allowed' % (filename, cppfilt(sym)))\n+            retval = 1\n+        # Check dependency libraries\n+        for library_name in read_libraries(filename):\n+            if library_name not in ALLOWED_LIBRARIES:\n+                print('%s: NEEDED library %s is not allowed' % (filename, library_name))\n+                retval = 1\n+\n+    exit(retval)\n+\n+"
      },
      {
        "sha": "fed7626aabaaf34a7ab4ed1e13a7b5e47769f950",
        "filename": "contrib/devtools/test-security-check.py",
        "status": "added",
        "additions": 60,
        "deletions": 0,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/devtools/test-security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/devtools/test-security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test-security-check.py?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,60 @@\n+#!/usr/bin/python2\n+'''\n+Test script for security-check.py\n+'''\n+from __future__ import division,print_function\n+import subprocess\n+import sys\n+import unittest\n+\n+def write_testcode(filename):\n+    with open(filename, 'w') as f:\n+        f.write('''\n+    #include <stdio.h>\n+    int main()\n+    {\n+        printf(\"the quick brown fox jumps over the lazy god\\\\n\");\n+        return 0;\n+    }\n+    ''')\n+\n+def call_security_check(cc, source, executable, options):\n+    subprocess.check_call([cc,source,'-o',executable] + options)\n+    p = subprocess.Popen(['./security-check.py',executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    return (p.returncode, stdout.rstrip())\n+\n+class TestSecurityChecks(unittest.TestCase):\n+    def test_ELF(self):\n+        source = 'test1.c'\n+        executable = 'test1'\n+        cc = 'gcc'\n+        write_testcode(source)\n+\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-zexecstack','-fno-stack-protector','-Wl,-znorelro']), \n+                (1, executable+': failed PIE NX RELRO Canary'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fno-stack-protector','-Wl,-znorelro']), \n+                (1, executable+': failed PIE RELRO Canary'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro']), \n+                (1, executable+': failed PIE RELRO'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro','-pie','-fPIE']), \n+                (1, executable+': failed RELRO'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-zrelro','-Wl,-z,now','-pie','-fPIE']), \n+                (0, ''))\n+\n+    def test_PE(self):\n+        source = 'test1.c'\n+        executable = 'test1.exe'\n+        cc = 'i686-w64-mingw32-gcc'\n+        write_testcode(source)\n+\n+        self.assertEqual(call_security_check(cc, source, executable, []), \n+                (1, executable+': failed PIE NX'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat']), \n+                (1, executable+': failed PIE'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase']), \n+                (0, ''))\n+\n+if __name__ == '__main__':\n+    unittest.main()\n+"
      },
      {
        "sha": "baa921c72db2fd7ea7910b6444a7cdca85c62a14",
        "filename": "contrib/devtools/update-translations.py",
        "status": "added",
        "additions": 203,
        "deletions": 0,
        "changes": 203,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/devtools/update-translations.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/devtools/update-translations.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/update-translations.py?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,203 @@\n+#!/usr/bin/python\n+# Copyright (c) 2014 Wladimir J. van der Laan\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+Run this script from the root of the repository to update all translations from\n+transifex.\n+It will do the following automatically:\n+\n+- fetch all translations using the tx tool\n+- post-process them into valid and committable format\n+  - remove invalid control characters\n+  - remove location tags (makes diffs less noisy)\n+\n+TODO:\n+- auto-add new translations to the build system according to the translation process\n+'''\n+from __future__ import division, print_function\n+import subprocess\n+import re\n+import sys\n+import os\n+import io\n+import xml.etree.ElementTree as ET\n+\n+# Name of transifex tool\n+TX = 'tx'\n+# Name of source language file\n+SOURCE_LANG = 'aither_en.ts'\n+# Directory with locale files\n+LOCALE_DIR = 'src/qt/locale'\n+# Minimum number of messages for translation to be considered at all\n+MIN_NUM_MESSAGES = 10\n+\n+def check_at_repository_root():\n+    if not os.path.exists('.git'):\n+        print('No .git directory found')\n+        print('Execute this script at the root of the repository', file=sys.stderr)\n+        exit(1)\n+\n+def fetch_all_translations():\n+    if subprocess.call([TX, 'pull', '-f', '-a']):\n+        print('Error while fetching translations', file=sys.stderr)\n+        exit(1)\n+\n+def find_format_specifiers(s):\n+    '''Find all format specifiers in a string.'''\n+    pos = 0\n+    specifiers = []\n+    while True:\n+        percent = s.find('%', pos)\n+        if percent < 0:\n+            break\n+        try:\n+            specifiers.append(s[percent+1])\n+        except:\n+            print('Failed to get specifier')\n+        pos = percent+2\n+    return specifiers\n+\n+def split_format_specifiers(specifiers):\n+    '''Split format specifiers between numeric (Qt) and others (strprintf)'''\n+    numeric = []\n+    other = []\n+    for s in specifiers:\n+        if s in {'1','2','3','4','5','6','7','8','9'}:\n+            numeric.append(s)\n+        else:\n+            other.append(s)\n+\n+    # numeric (Qt) can be present in any order, others (strprintf) must be in specified order\n+    return set(numeric),other\n+\n+def sanitize_string(s):\n+    '''Sanitize string for printing'''\n+    return s.replace('\\n',' ')\n+\n+def check_format_specifiers(source, translation, errors, numerus):\n+    source_f = split_format_specifiers(find_format_specifiers(source))\n+    # assert that no source messages contain both Qt and strprintf format specifiers\n+    # if this fails, go change the source as this is hacky and confusing!\n+    #assert(not(source_f[0] and source_f[1]))\n+    try:\n+        translation_f = split_format_specifiers(find_format_specifiers(translation))\n+    except IndexError:\n+        errors.append(\"Parse error in translation for '%s': '%s'\" % (sanitize_string(source), sanitize_string(translation)))\n+        return False\n+    else:\n+        if source_f != translation_f:\n+            if numerus and source_f == (set(), ['n']) and translation_f == (set(), []) and translation.find('%') == -1:\n+                # Allow numerus translations to omit %n specifier (usually when it only has one possible value)\n+                return True\n+            errors.append(\"Mismatch between '%s' and '%s'\" % (sanitize_string(source), sanitize_string(translation)))\n+            return False\n+    return True\n+\n+def all_ts_files(suffix=''):\n+    for filename in os.listdir(LOCALE_DIR):\n+        # process only language files, and do not process source language\n+        if not filename.endswith('.ts'+suffix) or filename == SOURCE_LANG+suffix:\n+            continue\n+        if suffix: # remove provided suffix\n+            filename = filename[0:-len(suffix)]\n+        filepath = os.path.join(LOCALE_DIR, filename)\n+        yield(filename, filepath)\n+\n+FIX_RE = re.compile(b'[\\x00-\\x09\\x0b\\x0c\\x0e-\\x1f]')\n+def remove_invalid_characters(s):\n+    '''Remove invalid characters from translation string'''\n+    return FIX_RE.sub(b'', s)\n+\n+# Override cdata escape function to make our output match Qt's (optional, just for cleaner diffs for\n+# comparison, disable by default)\n+_orig_escape_cdata = None\n+def escape_cdata(text):\n+    text = _orig_escape_cdata(text)\n+    text = text.replace(\"'\", '&apos;')\n+    text = text.replace('\"', '&quot;')\n+    return text\n+\n+def postprocess_translations(reduce_diff_hacks=False):\n+    print('Checking and postprocessing...')\n+\n+    if reduce_diff_hacks:\n+        global _orig_escape_cdata\n+        _orig_escape_cdata = ET._escape_cdata\n+        ET._escape_cdata = escape_cdata\n+\n+    for (filename,filepath) in all_ts_files():\n+        os.rename(filepath, filepath+'.orig')\n+\n+    have_errors = False\n+    for (filename,filepath) in all_ts_files('.orig'):\n+        # pre-fixups to cope with transifex output\n+        parser = ET.XMLParser(encoding='utf-8') # need to override encoding because 'utf8' is not understood only 'utf-8'\n+        with open(filepath + '.orig', 'rb') as f:\n+            data = f.read()\n+        # remove control characters; this must be done over the entire file otherwise the XML parser will fail\n+        data = remove_invalid_characters(data)\n+        tree = ET.parse(io.BytesIO(data), parser=parser)\n+\n+        # iterate over all messages in file\n+        root = tree.getroot()\n+        for context in root.findall('context'):\n+            for message in context.findall('message'):\n+                numerus = message.get('numerus') == 'yes'\n+                source = message.find('source').text\n+                translation_node = message.find('translation')\n+                # pick all numerusforms\n+                if numerus:\n+                    translations = [i.text for i in translation_node.findall('numerusform')]\n+                else:\n+                    translations = [translation_node.text]\n+\n+                for translation in translations:\n+                    if translation is None:\n+                        continue\n+                    errors = []\n+                    valid = check_format_specifiers(source, translation, errors, numerus)\n+\n+                    for error in errors:\n+                        print('%s: %s' % (filename, error))\n+\n+                    if not valid: # set type to unfinished and clear string if invalid\n+                        translation_node.clear()\n+                        translation_node.set('type', 'unfinished')\n+                        have_errors = True\n+\n+                # Remove location tags\n+                for location in message.findall('location'):\n+                    message.remove(location)\n+\n+                # Remove entire message if it is an unfinished translation\n+                if translation_node.get('type') == 'unfinished':\n+                    context.remove(message)\n+\n+        # check if document is (virtually) empty, and remove it if so\n+        num_messages = 0\n+        for context in root.findall('context'):\n+            for message in context.findall('message'):\n+                num_messages += 1\n+        if num_messages < MIN_NUM_MESSAGES:\n+            print('Removing %s, as it contains only %i messages' % (filepath, num_messages))\n+            continue\n+\n+        # write fixed-up tree\n+        # if diff reduction requested, replace some XML to 'sanitize' to qt formatting\n+        if reduce_diff_hacks:\n+            out = io.BytesIO()\n+            tree.write(out, encoding='utf-8')\n+            out = out.getvalue()\n+            out = out.replace(b' />', b'/>')\n+            with open(filepath, 'wb') as f:\n+                f.write(out)\n+        else:\n+            tree.write(filepath, encoding='utf-8')\n+    return have_errors\n+\n+if __name__ == '__main__':\n+    check_at_repository_root()\n+    # fetch_all_translations()\n+    postprocess_translations()\n+"
      },
      {
        "sha": "a2d902e210181b78ecda5f357bc82b977bcd45ef",
        "filename": "contrib/gitian-descriptors/README",
        "status": "removed",
        "additions": 0,
        "deletions": 31,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/gitian-descriptors/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/gitian-descriptors/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/README?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,31 +0,0 @@\n-Gavin's notes on getting gitian builds up and running:\n-\n-You need the right hardware: you need a 64-bit-capable CPU with hardware virtualization support (Intel VT-x or AMD-V). Not all modern CPUs support hardware virtualization.\n-\n-You probably need to enable hardware virtualization in your machine's BIOS.\n-\n-You need to be running a recent version of 64-bit-Ubuntu, and you need to install several prerequisites:\n-  sudo apt-get install apache2 git apt-cacher-ng python-vm-builder qemu-kvm\n-\n-Sanity checks:\n-  sudo service apt-cacher-ng status   # Should return apt-cacher-ng is running\n-  ls -l /dev/kvm   # Should show a /dev/kvm device\n-\n-Once you've got the right hardware and software:\n-\n-    git clone git://github.com/bitcoin/bitcoin.git\n-    git clone git://github.com/devrandom/gitian-builder.git\n-    mkdir gitian-builder/inputs\n-    wget 'http://miniupnp.tuxfamily.org/files/download.php?file=miniupnpc-1.6.tar.gz' -O gitian-builder/inputs/miniupnpc-1.6.tar.gz\n-\n-    cd gitian-builder\n-    bin/make-base-vm --arch i386\n-    bin/make-base-vm --arch amd64\n-    cd ..\n-\n-    # To build\n-    cd bitcoin\n-    git pull\n-    cd ../gitian-builder\n-    git pull\n-    ./bin/gbuild --commit bitcoin=HEAD ../bitcoin/contrib/gitian.yml"
      },
      {
        "sha": "d0421ead86c66ddb20cc6664fa381de259af3537",
        "filename": "contrib/gitian-descriptors/README.md",
        "status": "added",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-descriptors/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-descriptors/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/README.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,65 @@\n+### Gavin's notes on getting gitian builds up and running using KVM\n+\n+These instructions distilled from\n+[https://help.ubuntu.com/community/KVM/Installation](https://help.ubuntu.com/community/KVM/Installation).\n+\n+You need the right hardware: you need a 64-bit-capable CPU with hardware virtualization support (Intel VT-x or AMD-V). Not all modern CPUs support hardware virtualization.\n+\n+You probably need to enable hardware virtualization in your machine's BIOS.\n+\n+You need to be running a recent version of 64-bit-Ubuntu, and you need to install several prerequisites:\n+\n+\tsudo apt-get install ruby apache2 git apt-cacher-ng python-vm-builder qemu-kvm\n+\n+Sanity checks:\n+\n+\tsudo service apt-cacher-ng status  # Should return apt-cacher-ng is running\n+\tls -l /dev/kvm   # Should show a /dev/kvm device\n+\n+\n+Once you've got the right hardware and software:\n+\n+    git clone git://github.com/aithercoin/aithercoin.git\n+    git clone git://github.com/devrandom/gitian-builder.git\n+    mkdir gitian-builder/inputs\n+    cd gitian-builder/inputs\n+\n+    # Create base images\n+    cd gitian-builder\n+    bin/make-base-vm --suite trusty --arch amd64\n+    cd ..\n+\n+    # Get inputs (see doc/release-process.md for exact inputs needed and where to get them)\n+    ...\n+\n+    # For further build instructions see doc/release-process.md\n+    ...\n+\n+---------------------\n+\n+`gitian-builder` now also supports building using LXC. See\n+[help.ubuntu.com](https://help.ubuntu.com/14.04/serverguide/lxc.html)\n+for how to get LXC up and running under Ubuntu.\n+\n+If your main machine is a 64-bit Mac or PC with a few gigabytes of memory\n+and at least 10 gigabytes of free disk space, you can `gitian-build` using\n+LXC running inside a virtual machine.\n+\n+Here's a description of Gavin's setup on OSX 10.6:\n+\n+1. Download and install VirtualBox from [https://www.virtualbox.org/](https://www.virtualbox.org/)\n+\n+2. Download the 64-bit Ubuntu Desktop 12.04 LTS .iso CD image from\n+   [http://www.ubuntu.com/](http://www.ubuntu.com/)\n+\n+3. Run VirtualBox and create a new virtual machine, using the Ubuntu .iso (see the [VirtualBox documentation](https://www.virtualbox.org/wiki/Documentation) for details). Create it with at least 2 gigabytes of memory and a disk that is at least 20 gigabytes big.\n+\n+4. Inside the running Ubuntu desktop, install:\n+\n+\tsudo apt-get install debootstrap lxc ruby apache2 git apt-cacher-ng python-vm-builder\n+\n+5. Still inside Ubuntu, tell gitian-builder to use LXC, then follow the \"Once you've got the right hardware and software\" instructions above:\n+\n+\texport USE_LXC=1\n+\tgit clone git://github.com/aithercoin/aithercoin.git\n+\t... etc"
      },
      {
        "sha": "61ea50e4fed266a01622cad5c6a154d40fccca02",
        "filename": "contrib/gitian-descriptors/boost-win32.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 38,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/gitian-descriptors/boost-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/gitian-descriptors/boost-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/boost-win32.yml?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,38 +0,0 @@\n----\n-name: \"boost\"\n-suites:\n-- \"lucid\"\n-architectures:\n-- \"i386\"\n-packages: \n-- \"mingw32\"\n-- \"faketime\"\n-- \"zip\"\n-reference_datetime: \"2011-01-30 00:00:00\"\n-remotes: []\n-files:\n-- \"boost_1_47_0.tar.bz2\"\n-script: |\n-  TMPDIR=\"$HOME/tmpdir\"\n-  mkdir -p $TMPDIR/bin/$GBUILD_BITS $TMPDIR/include\n-  tar xjf boost_1_47_0.tar.bz2\n-  cd boost_1_47_0\n-  echo \"using gcc : 4.4 : i586-mingw32msvc-g++\n-        :\n-        <rc>i586-mingw32msvc-windres\n-        <archiver>i586-mingw32msvc-ar\n-        <cxxflags>-frandom-seed=boost1\n-  ;\" > user-config.jam\n-  ./bootstrap.sh --without-icu\n-  ./bjam toolset=gcc target-os=windows threadapi=win32 threading=multi variant=release link=static --user-config=user-config.jam --without-mpi --without-python -sNO_BZIP2=1 -sNO_ZLIB=1 --layout=tagged --build-type=complete $MAKEOPTS stage\n-  for lib in chrono date_time exception filesystem graph iostreams math_c99f math_c99l math_c99 math_tr1f math_tr1l math_tr1 prg_exec_monitor program_options random regex serialization signals system test_exec_monitor thread_win32 unit_test_framework wave wserialization; do\n-      mkdir $lib\n-      (cd $lib ; ar xf ../stage/lib/libboost_${lib}-mt-s.a)\n-      mv $lib $TMPDIR/bin/$GBUILD_BITS\n-  done\n-  cp -a boost $TMPDIR/include\n-  cd $TMPDIR\n-  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  export FAKETIME=$REFERENCE_DATETIME\n-  zip -r boost-win32-1.47.0-gitian.zip *\n-  cp boost-win32-1.47.0-gitian.zip $OUTDIR"
      },
      {
        "sha": "62b67ee9a892a1cd67d12d4a05ab7f13c4e09912",
        "filename": "contrib/gitian-descriptors/deps-win32.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 71,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/gitian-descriptors/deps-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/gitian-descriptors/deps-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/deps-win32.yml?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,71 +0,0 @@\n----\n-name: \"bitcoin-deps\"\n-suites:\n-- \"lucid\"\n-architectures:\n-- \"i386\"\n-packages: \n-- \"mingw32\"\n-- \"git-core\"\n-- \"zip\"\n-- \"faketime\"\n-- \"wine\"\n-reference_datetime: \"2011-01-30 00:00:00\"\n-remotes: []\n-files:\n-- \"openssl-1.0.1b.tar.gz\"\n-- \"db-4.8.30.NC.tar.gz\"\n-- \"miniupnpc-1.6.tar.gz\"\n-- \"zlib-1.2.7.tar.gz\"\n-- \"libpng-1.5.12.tar.gz\"\n-- \"qrencode-3.2.0.tar.bz2\"\n-script: |\n-  #\n-  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  export FAKETIME=$REFERENCE_DATETIME\n-  export TZ=UTC\n-  #\n-  tar xzf openssl-1.0.1b.tar.gz\n-  cd openssl-1.0.1b\n-  ./Configure --cross-compile-prefix=i586-mingw32msvc- mingw\n-  make\n-  cd ..\n-  #\n-  tar xzf db-4.8.30.NC.tar.gz\n-  cd db-4.8.30.NC/build_unix\n-  ../dist/configure --enable-mingw --enable-cxx --host=i586-mingw32msvc CFLAGS=\"-I/usr/i586-mingw32msvc/include\"\n-  make $MAKEOPTS\n-  cd ../..\n-  #\n-  tar xzf miniupnpc-1.6.tar.gz\n-  cd miniupnpc-1.6\n-  sed 's/dllwrap -k --driver-name gcc/$(DLLWRAP) -k --driver-name $(CC)/' -i Makefile.mingw\n-  sed 's|wingenminiupnpcstrings $< $@|./wingenminiupnpcstrings $< $@|' -i Makefile.mingw\n-  make -f Makefile.mingw DLLWRAP=i586-mingw32msvc-dllwrap CC=i586-mingw32msvc-gcc AR=i586-mingw32msvc-ar\n-  cd ..\n-  mv miniupnpc-1.6 miniupnpc\n-  #\n-  tar xzf zlib-1.2.7.tar.gz\n-  cd zlib-1.2.7\n-  make -f win32/Makefile.gcc PREFIX=i586-mingw32msvc- $MAKEOPTS\n-  cd ..\n-  #\n-  tar xzf libpng-1.5.12.tar.gz\n-  cd libpng-1.5.12\n-  ./configure -disable-shared CC=i586-mingw32msvc-cc AR=i586-mingw32msvc-ar STRIP=i586-mingw32msvc-strip RANLIB=i586-mingw32msvc-ranlib OBJDUMP=i586-mingw32msvc-objdump LD=i586-mingw32msvc-ld LDFLAGS=\"-L../zlib-1.2.7/\" CFLAGS=\"-I../zlib-1.2.7/\"\n-  make $MAKEOPTS\n-  cd ..\n-  #\n-  tar xjf qrencode-3.2.0.tar.bz2\n-  cd qrencode-3.2.0\n-  ./configure CC=i586-mingw32msvc-cc AR=i586-mingw32msvc-ar STRIP=i586-mingw32msvc-strip RANLIB=i586-mingw32msvc-ranlib OBJDUMP=i586-mingw32msvc-objdump LD=i586-mingw32msvc-ld png_LIBS=\"../libpng-1.5.12/.libs/libpng15.a ../zlib-1.2.7/libz.a\" png_CFLAGS=\"-I../libpng-1.5.12\"\n-  make $MAKEOPTS\n-  cd ..\n-  #\n-  zip -r $OUTDIR/ppcoin-deps-0.0.1.zip \\\n-    $(ls qrencode-*/{qrencode.h,.libs/libqrencode.{,l}a} | sort) \\\n-    $(ls db-*/build_unix/{libdb_cxx.a,db.h,db_cxx.h,libdb.a,.libs/libdb_cxx-?.?.a} | sort) \\\n-    $(find openssl-* -name '*.a' -o -name '*.h' | sort) \\\n-    $(find miniupnpc -name '*.h' -o -name 'libminiupnpc.a' | sort)\n-  # Kill wine processes as gitian won't figure out we are done otherwise\n-  killall wineserver services.exe explorer.exe winedevice.exe"
      },
      {
        "sha": "be10865499bcd76d35164456a5d092cff36e7b7c",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "added",
        "additions": 123,
        "deletions": 0,
        "changes": 123,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,123 @@\n+---\n+name: \"aither-linux-0.12\"\n+enable_cache: true\n+suites:\n+- \"trusty\"\n+architectures:\n+- \"amd64\"\n+packages:\n+- \"curl\"\n+- \"g++-multilib\"\n+- \"git-core\"\n+- \"pkg-config\"\n+- \"autoconf\"\n+- \"libtool\"\n+- \"automake\"\n+- \"faketime\"\n+- \"bsdmainutils\"\n+- \"binutils-gold\"\n+- \"ca-certificates\"\n+- \"python\"\n+reference_datetime: \"2017-01-01 00:00:00\"\n+remotes:\n+- \"url\": \"https://github.com/aithercoin/aithercoin.git\"\n+  \"dir\": \"aither\"\n+files: []\n+script: |\n+  WRAP_DIR=$HOME/wrapped\n+  HOSTS=\"i686-pc-linux-gnu x86_64-unknown-linux-gnu\"\n+  CONFIGFLAGS=\"--enable-glibc-back-compat --enable-reduce-exports --disable-bench --disable-gui-tests LDFLAGS=-static-libstdc++\"\n+  FAKETIME_HOST_PROGS=\"\"\n+  FAKETIME_PROGS=\"date ar ranlib nm strip objcopy\"\n+  HOST_CFLAGS=\"-O2 -g\"\n+  HOST_CXXFLAGS=\"-O2 -g\"\n+  HOST_LDFLAGS=-static-libstdc++\n+\n+  export QT_RCC_TEST=1\n+  export GZIP=\"-9n\"\n+  export TAR_OPTIONS=\"--mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n+  export TZ=\"UTC\"\n+  export BUILD_DIR=`pwd`\n+  mkdir -p ${WRAP_DIR}\n+  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n+    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n+    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n+    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n+  fi\n+\n+  # Create global faketime wrappers\n+  for prog in ${FAKETIME_PROGS}; do\n+    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n+    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n+    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n+    echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n+    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n+    chmod +x ${WRAP_DIR}/${prog}\n+  done\n+\n+  # Create per-host faketime wrappers\n+  for i in $HOSTS; do\n+    for prog in ${FAKETIME_HOST_PROGS}; do\n+        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n+        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n+        chmod +x ${WRAP_DIR}/${i}-${prog}\n+    done\n+  done\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n+  cd aither\n+  BASEPREFIX=`pwd`/depends\n+  # Build dependencies for each host\n+  for i in $HOSTS; do\n+    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n+  done\n+\n+  # Create the release tarball using (arbitrarily) the first host\n+  ./autogen.sh\n+  CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n+  make dist\n+  SOURCEDIST=`echo aithercore-*.tar.gz`\n+  DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n+  # Correct tar file order\n+  mkdir -p temp\n+  pushd temp\n+  tar xf ../$SOURCEDIST\n+  find aithercore-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n+  popd\n+\n+  ORIGPATH=\"$PATH\"\n+  # Extract the release tarball into a dir for each host and build\n+  for i in ${HOSTS}; do\n+    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n+    mkdir -p distsrc-${i}\n+    cd distsrc-${i}\n+    INSTALLPATH=`pwd`/installed/${DISTNAME}\n+    mkdir -p ${INSTALLPATH}\n+    tar --strip-components=1 -xf ../$SOURCEDIST\n+\n+    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\" LDFLAGS=\"${HOST_LDFLAGS}\"\n+    make ${MAKEOPTS}\n+    make ${MAKEOPTS} -C src check-security\n+    make ${MAKEOPTS} -C src check-symbols\n+    make install DESTDIR=${INSTALLPATH}\n+    cd installed\n+    find . -name \"lib*.la\" -delete\n+    find . -name \"lib*.a\" -delete\n+    rm -rf ${DISTNAME}/lib/pkgconfig\n+    find ${DISTNAME}/bin -type f -executable -exec objcopy --only-keep-debug {} {}.dbg \\; -exec strip -s {} \\; -exec objcopy --add-gnu-debuglink={}.dbg {} \\;\n+    find ${DISTNAME}/lib -type f -exec objcopy --only-keep-debug {} {}.dbg \\; -exec strip -s {} \\; -exec objcopy --add-gnu-debuglink={}.dbg {} \\;\n+    find ${DISTNAME} -not -name \"*.dbg\" | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n+    find ${DISTNAME} -name \"*.dbg\" | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}-debug.tar.gz\n+    cd ../../\n+    rm -rf distsrc-${i}\n+  done\n+  mkdir -p $OUTDIR/src\n+  mv $SOURCEDIST $OUTDIR/src\n+  mv ${OUTDIR}/${DISTNAME}-x86_64-*-debug.tar.gz ${OUTDIR}/${DISTNAME}-linux64-debug.tar.gz\n+  mv ${OUTDIR}/${DISTNAME}-i686-*-debug.tar.gz ${OUTDIR}/${DISTNAME}-linux32-debug.tar.gz\n+  mv ${OUTDIR}/${DISTNAME}-x86_64-*.tar.gz ${OUTDIR}/${DISTNAME}-linux64.tar.gz\n+  mv ${OUTDIR}/${DISTNAME}-i686-*.tar.gz ${OUTDIR}/${DISTNAME}-linux32.tar.gz\n+"
      },
      {
        "sha": "7e5fe685d9150158665c0b79694b486cd42614f1",
        "filename": "contrib/gitian-descriptors/gitian-osx-signer.yml",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-signer.yml?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,37 @@\n+---\n+name: \"aither-dmg-signer\"\n+suites:\n+- \"trusty\"\n+architectures:\n+- \"amd64\"\n+packages:\n+- \"faketime\"\n+reference_datetime: \"2017-01-01 00:00:00\"\n+remotes:\n+- \"url\": \"https://github.com/aithercoin/aither-detached-sigs.git\"\n+  \"dir\": \"signature\"\n+files:\n+- \"aither-osx-unsigned.tar.gz\"\n+script: |\n+  WRAP_DIR=$HOME/wrapped\n+  mkdir -p ${WRAP_DIR}\n+  export PATH=`pwd`:$PATH\n+  FAKETIME_PROGS=\"dmg genisoimage\"\n+\n+  # Create global faketime wrappers\n+  for prog in ${FAKETIME_PROGS}; do\n+    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n+    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n+    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n+    echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n+    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n+    chmod +x ${WRAP_DIR}/${prog}\n+  done\n+\n+  UNSIGNED=aither-osx-unsigned.tar.gz\n+  SIGNED=aither-osx-signed.dmg\n+\n+  tar -xf ${UNSIGNED}\n+  ./detached-sig-apply.sh ${UNSIGNED} signature/osx\n+  ${WRAP_DIR}/genisoimage -no-cache-inodes -D -l -probe -V \"Aither-Core\" -no-pad -r -dir-mode 0755 -apple -o uncompressed.dmg signed-app\n+  ${WRAP_DIR}/dmg dmg uncompressed.dmg ${OUTDIR}/${SIGNED}"
      },
      {
        "sha": "2d58ec6dc4bf18f5778955ee7c267cae47503659",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "added",
        "additions": 137,
        "deletions": 0,
        "changes": 137,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,137 @@\n+---\n+name: \"aither-osx-0.12\"\n+enable_cache: true\n+suites:\n+- \"trusty\"\n+architectures:\n+- \"amd64\"\n+packages: \n+- \"curl\"\n+- \"g++\"\n+- \"git-core\"\n+- \"pkg-config\"\n+- \"autoconf\"\n+- \"libtool\"\n+- \"automake\"\n+- \"faketime\"\n+- \"bsdmainutils\"\n+- \"cmake\"\n+- \"libcap-dev\"\n+- \"libz-dev\"\n+- \"libbz2-dev\"\n+- \"ca-certificates\"\n+- \"python\"\n+reference_datetime: \"2017-01-01 00:00:00\"\n+remotes:\n+- \"url\": \"https://github.com/aithercoin/aithercoin.git\"\n+  \"dir\": \"aither\"\n+files:\n+- \"MacOSX10.9.sdk.tar.gz\"\n+script: |\n+  WRAP_DIR=$HOME/wrapped\n+  HOSTS=\"x86_64-apple-darwin11\"\n+  CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests GENISOIMAGE=$WRAP_DIR/genisoimage\"\n+  FAKETIME_HOST_PROGS=\"\"\n+  FAKETIME_PROGS=\"ar ranlib date dmg genisoimage\"\n+\n+  export QT_RCC_TEST=1\n+  export GZIP=\"-9n\"\n+  export TAR_OPTIONS=\"--mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n+  export TZ=\"UTC\"\n+  export BUILD_DIR=`pwd`\n+  mkdir -p ${WRAP_DIR}\n+  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n+    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n+    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n+    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n+  fi\n+\n+  export ZERO_AR_DATE=1\n+\n+  # Create global faketime wrappers\n+  for prog in ${FAKETIME_PROGS}; do\n+    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n+    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n+    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n+    echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n+    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n+    chmod +x ${WRAP_DIR}/${prog}\n+  done\n+\n+  # Create per-host faketime wrappers\n+  for i in $HOSTS; do\n+    for prog in ${FAKETIME_HOST_PROGS}; do\n+        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n+        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n+        chmod +x ${WRAP_DIR}/${i}-${prog}\n+    done\n+  done\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n+  cd aither\n+  BASEPREFIX=`pwd`/depends\n+\n+  mkdir -p ${BASEPREFIX}/SDKs\n+  tar -C ${BASEPREFIX}/SDKs -xf ${BUILD_DIR}/MacOSX10.9.sdk.tar.gz\n+\n+  # Build dependencies for each host\n+  for i in $HOSTS; do\n+    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n+  done\n+\n+  # Create the release tarball using (arbitrarily) the first host\n+  ./autogen.sh\n+  CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n+  make dist\n+  SOURCEDIST=`echo aithercore-*.tar.gz`\n+  DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n+\n+  # Correct tar file order\n+  mkdir -p temp\n+  pushd temp\n+  tar xf ../$SOURCEDIST\n+  find aithercore-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n+  popd\n+\n+  ORIGPATH=\"$PATH\"\n+  # Extract the release tarball into a dir for each host and build\n+  for i in ${HOSTS}; do\n+    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n+    mkdir -p distsrc-${i}\n+    cd distsrc-${i}\n+    INSTALLPATH=`pwd`/installed/${DISTNAME}\n+    mkdir -p ${INSTALLPATH}\n+    tar --strip-components=1 -xf ../$SOURCEDIST\n+\n+    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n+    make ${MAKEOPTS}\n+    make install-strip DESTDIR=${INSTALLPATH}\n+\n+    make deploydir\n+    mkdir -p unsigned-app-${i}\n+    cp contrib/macdeploy/detached-sig-apply.sh unsigned-app-${i}\n+    cp contrib/macdeploy/detached-sig-create.sh unsigned-app-${i}\n+    cp ${BASEPREFIX}/${i}/native/bin/dmg ${BASEPREFIX}/${i}/native/bin/genisoimage unsigned-app-${i}\n+    cp ${BASEPREFIX}/${i}/native/bin/${i}-codesign_allocate unsigned-app-${i}/codesign_allocate\n+    cp ${BASEPREFIX}/${i}/native/bin/${i}-pagestuff unsigned-app-${i}/pagestuff\n+    mv dist unsigned-app-${i}\n+    pushd unsigned-app-${i}\n+    find . | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-osx-unsigned.tar.gz\n+    popd\n+\n+    make deploy\n+    ${WRAP_DIR}/dmg dmg Aither-Core.dmg ${OUTDIR}/${DISTNAME}-osx-unsigned.dmg\n+\n+    cd installed\n+    find . -name \"lib*.la\" -delete\n+    find . -name \"lib*.a\" -delete\n+    rm -rf ${DISTNAME}/lib/pkgconfig\n+    find ${DISTNAME} | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n+    cd ../../\n+  done\n+  mkdir -p $OUTDIR/src\n+  mv $SOURCEDIST $OUTDIR/src\n+  mv ${OUTDIR}/${DISTNAME}-x86_64-*.tar.gz ${OUTDIR}/${DISTNAME}-osx64.tar.gz"
      },
      {
        "sha": "45d0bff327fca947efd917fd3b3249726832c148",
        "filename": "contrib/gitian-descriptors/gitian-rpi2.yml",
        "status": "added",
        "additions": 112,
        "deletions": 0,
        "changes": 112,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-descriptors/gitian-rpi2.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-descriptors/gitian-rpi2.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-rpi2.yml?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,112 @@\n+---\n+name: \"aither-raspberry-0.12\"\n+enable_cache: true\n+suites:\n+- \"precise\"\n+architectures:\n+- \"amd64\"\n+packages:\n+- \"g++-multilib\"\n+- \"git-core\"\n+- \"pkg-config\"\n+- \"autoconf2.13\"\n+- \"libtool\"\n+- \"automake\"\n+- \"faketime\"\n+- \"bsdmainutils\"\n+- \"binutils-gold\"\n+reference_datetime: \"2017-01-01 00:00:00\"\n+remotes:\n+- \"url\": \"https://github.com/aithercoin/aithercoin.git\"\n+  \"dir\": \"aither\"\n+files:\n+- \"raspberrypi-tools.tar.gz\"\n+script: |\n+  WRAP_DIR=$HOME/wrapped\n+  HOSTS=\"arm-linux-gnueabihf\"\n+  CONFIGFLAGS=\"--enable-upnp-default --enable-glibc-back-compat\"\n+  FAKETIME_HOST_PROGS=\"\"\n+  FAKETIME_PROGS=\"date ar ranlib nm strip\"\n+  \n+  tar --warning=no-timestamp -xzf raspberrypi-tools.tar.gz\n+  export TOOLCHAIN_BIN=$(pwd)/raspberrypi-tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin\n+  export PATH=$PATH:$TOOLCHAIN_BIN\n+\n+  export QT_RCC_TEST=1\n+  export GZIP=\"-9n\"\n+  export TAR_OPTIONS=\"--mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n+  export TZ=\"UTC\"\n+  export BUILD_DIR=`pwd`\n+  mkdir -p ${WRAP_DIR}\n+  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n+    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n+    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n+    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n+  fi\n+\n+  # Create global faketime wrappers\n+  for prog in ${FAKETIME_PROGS}; do\n+    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n+    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n+    echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n+    echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n+    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n+    chmod +x ${WRAP_DIR}/${prog}\n+  done\n+\n+  # Create per-host faketime wrappers\n+  for i in $HOSTS; do\n+    for prog in ${FAKETIME_HOST_PROGS}; do\n+        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n+        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n+        chmod +x ${WRAP_DIR}/${i}-${prog}\n+    done\n+  done\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n+  cd aither\n+  BASEPREFIX=`pwd`/depends\n+  # Build dependencies for each host\n+  for i in $HOSTS; do\n+    make ${MAKEOPTS} NO_QT=1 -C ${BASEPREFIX} HOST=\"${i}\"\n+  done\n+\n+  # Create the release tarball using (arbitrarily) the first host\n+  ./autogen.sh\n+  ./configure --prefix=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`\n+  make NO_QT=1 dist\n+  SOURCEDIST=`echo aithercore-*.tar.gz`\n+  DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n+  # Correct tar file order\n+  mkdir -p temp\n+  pushd temp\n+  tar xf ../$SOURCEDIST\n+  find aithercore-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n+  popd\n+\n+  ORIGPATH=\"$PATH\"\n+  # Extract the release tarball into a dir for each host and build\n+  for i in ${HOSTS}; do\n+    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n+    mkdir -p distsrc-${i}\n+    cd distsrc-${i}\n+    INSTALLPATH=`pwd`/installed/${DISTNAME}\n+    mkdir -p ${INSTALLPATH}\n+    tar --strip-components=1 -xf ../$SOURCEDIST\n+\n+    ./configure --prefix=${BASEPREFIX}/${i} --bindir=${INSTALLPATH}/bin --includedir=${INSTALLPATH}/include --libdir=${INSTALLPATH}/lib --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n+    make ${MAKEOPTS} NO_QT=1\n+    make NO_QT=1 install-strip\n+    cd installed\n+    find . -name \"lib*.la\" -delete\n+    find . -name \"lib*.a\" -delete\n+    rm -rf ${DISTNAME}/lib/pkgconfig\n+    find ${DISTNAME} | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n+    cd ../../\n+  done\n+  mkdir -p $OUTDIR/src\n+  mv $SOURCEDIST $OUTDIR/src\n+  mv ${OUTDIR}/${DISTNAME}-arm-*.tar.gz ${OUTDIR}/${DISTNAME}-RPi2.tar.gz"
      },
      {
        "sha": "8ee700b6d8f3f2912c70cb9e52722bfa2ad637d9",
        "filename": "contrib/gitian-descriptors/gitian-win-signer.yml",
        "status": "added",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-descriptors/gitian-win-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-descriptors/gitian-win-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win-signer.yml?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,39 @@\n+---\n+name: \"bitcoin-win-signer\"\n+suites:\n+- \"trusty\"\n+architectures:\n+- \"amd64\"\n+packages:\n+- \"libssl-dev\"\n+- \"autoconf\"\n+reference_datetime: \"2017-01-01 00:00:00\"\n+remotes:\n+- \"url\": \"https://github.com/aithercoin/aither-detached-sigs.git\"\n+  \"dir\": \"signature\"\n+files:\n+- \"osslsigncode-1.7.1.tar.gz\"\n+- \"osslsigncode-Backports-to-1.7.1.patch\"\n+- \"bitcoin-win-unsigned.tar.gz\"\n+script: |\n+  BUILD_DIR=`pwd`\n+  SIGDIR=${BUILD_DIR}/signature/win\n+  UNSIGNED_DIR=${BUILD_DIR}/unsigned\n+\n+  echo \"f9a8cdb38b9c309326764ebc937cba1523a3a751a7ab05df3ecc99d18ae466c9  osslsigncode-1.7.1.tar.gz\" | sha256sum -c\n+  echo \"a8c4e9cafba922f89de0df1f2152e7be286aba73f78505169bc351a7938dd911  osslsigncode-Backports-to-1.7.1.patch\" | sha256sum -c\n+\n+  mkdir -p ${UNSIGNED_DIR}\n+  tar -C ${UNSIGNED_DIR} -xf bitcoin-win-unsigned.tar.gz\n+\n+  tar xf osslsigncode-1.7.1.tar.gz\n+  cd osslsigncode-1.7.1\n+  patch -p1 < ${BUILD_DIR}/osslsigncode-Backports-to-1.7.1.patch\n+\n+  ./configure --without-gsf --without-curl --disable-dependency-tracking\n+  make\n+  find ${UNSIGNED_DIR} -name \"*-unsigned.exe\" | while read i; do\n+    INFILE=\"`basename \"${i}\"`\"\n+    OUTFILE=\"`echo \"${INFILE}\" | sed s/-unsigned//`\"\n+    ./osslsigncode attach-signature -in \"${i}\" -out \"${OUTDIR}/${OUTFILE}\" -sigin \"${SIGDIR}/${INFILE}.pem\"\n+  done"
      },
      {
        "sha": "4a2a7674e7a601e6e169b5122873b4664749a57d",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "added",
        "additions": 154,
        "deletions": 0,
        "changes": 154,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,154 @@\n+---\n+name: \"aither-win-0.12\"\n+enable_cache: true\n+suites:\n+- \"trusty\"\n+architectures:\n+- \"amd64\"\n+packages: \n+- \"curl\"\n+- \"g++\"\n+- \"git-core\"\n+- \"pkg-config\"\n+- \"autoconf\"\n+- \"libtool\"\n+- \"automake\"\n+- \"faketime\"\n+- \"bsdmainutils\"\n+- \"mingw-w64\"\n+- \"g++-mingw-w64\"\n+- \"nsis\"\n+- \"zip\"\n+- \"ca-certificates\"\n+- \"python\"\n+reference_datetime: \"2017-01-01 00:00:00\"\n+remotes:\n+- \"url\": \"https://github.com/aithercoin/aithercoin.git\"\n+  \"dir\": \"aither\"\n+files: []\n+script: |\n+  WRAP_DIR=$HOME/wrapped\n+  HOSTS=\"x86_64-w64-mingw32 i686-w64-mingw32\"\n+  CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests\"\n+  FAKETIME_HOST_PROGS=\"g++ ar ranlib nm windres strip objcopy\"\n+  FAKETIME_PROGS=\"date makensis zip\"\n+  HOST_CFLAGS=\"-O2 -g\"\n+  HOST_CXXFLAGS=\"-O2 -g\"\n+\n+  export QT_RCC_TEST=1\n+  export GZIP=\"-9n\"\n+  export TAR_OPTIONS=\"--mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n+  export TZ=\"UTC\"\n+  export BUILD_DIR=`pwd`\n+  mkdir -p ${WRAP_DIR}\n+  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n+    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n+    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n+    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n+  fi\n+\n+  # Create global faketime wrappers\n+  for prog in ${FAKETIME_PROGS}; do\n+    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n+    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n+    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n+    echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n+    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n+    chmod +x ${WRAP_DIR}/${prog}\n+  done\n+\n+  # Create per-host faketime wrappers\n+  for i in $HOSTS; do\n+    for prog in ${FAKETIME_HOST_PROGS}; do\n+        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n+        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n+        chmod +x ${WRAP_DIR}/${i}-${prog}\n+    done\n+  done\n+\n+  # Create per-host linker wrapper\n+  # This is only needed for trusty, as the mingw linker leaks a few bytes of\n+  # heap, causing non-determinism. See discussion in https://github.com/bitcoin/bitcoin/pull/6900\n+  for i in $HOSTS; do\n+    mkdir -p ${WRAP_DIR}/${i}\n+    for prog in collect2; do\n+        echo '#!/bin/bash' > ${WRAP_DIR}/${i}/${prog}\n+        REAL=$(${i}-gcc -print-prog-name=${prog})\n+        echo \"export MALLOC_PERTURB_=255\" >> ${WRAP_DIR}/${i}/${prog}\n+        echo \"${REAL} \\$@\" >> $WRAP_DIR/${i}/${prog}\n+        chmod +x ${WRAP_DIR}/${i}/${prog}\n+    done\n+    for prog in gcc g++; do\n+        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n+        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export COMPILER_PATH=${WRAP_DIR}/${i}\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n+        chmod +x ${WRAP_DIR}/${i}-${prog}\n+    done\n+  done\n+\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n+  cd aither\n+  BASEPREFIX=`pwd`/depends\n+  # Build dependencies for each host\n+  for i in $HOSTS; do\n+    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n+  done\n+\n+  # Create the release tarball using (arbitrarily) the first host\n+  ./autogen.sh\n+  CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n+  make dist\n+  SOURCEDIST=`echo aithercore-*.tar.gz`\n+  DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n+\n+  # Correct tar file order\n+  mkdir -p temp\n+  pushd temp\n+  tar xf ../$SOURCEDIST\n+  find aithercore-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n+  mkdir -p $OUTDIR/src\n+  cp ../$SOURCEDIST $OUTDIR/src\n+  popd\n+\n+  ORIGPATH=\"$PATH\"\n+  # Extract the release tarball into a dir for each host and build\n+  for i in ${HOSTS}; do\n+    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n+    mkdir -p distsrc-${i}\n+    cd distsrc-${i}\n+    INSTALLPATH=`pwd`/installed/${DISTNAME}\n+    mkdir -p ${INSTALLPATH}\n+    tar --strip-components=1 -xf ../$SOURCEDIST\n+\n+    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\"\n+    make ${MAKEOPTS}\n+    make ${MAKEOPTS} -C src check-security\n+    make deploy\n+    make install DESTDIR=${INSTALLPATH}\n+    cp -f aithercore-*setup*.exe $OUTDIR/\n+    cd installed\n+    mv ${DISTNAME}/bin/*.dll ${DISTNAME}/lib/\n+    find . -name \"lib*.la\" -delete\n+    find . -name \"lib*.a\" -delete\n+    rm -rf ${DISTNAME}/lib/pkgconfig\n+    find ${DISTNAME}/bin -type f -executable -exec ${i}-objcopy --only-keep-debug {} {}.dbg \\; -exec ${i}-strip -s {} \\; -exec ${i}-objcopy --add-gnu-debuglink={}.dbg {} \\;\n+    find ${DISTNAME}/lib -type f -exec ${i}-objcopy --only-keep-debug {} {}.dbg \\; -exec ${i}-strip -s {} \\; -exec ${i}-objcopy --add-gnu-debuglink={}.dbg {} \\;\n+    find ${DISTNAME} -not -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i}.zip\n+    find ${DISTNAME} -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i}-debug.zip\n+    cd ../../\n+    rm -rf distsrc-${i}\n+  done\n+  cd $OUTDIR\n+  rename 's/-setup\\.exe$/-setup-unsigned.exe/' *-setup.exe\n+  find . -name \"*-setup-unsigned.exe\" | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\n+  mv ${OUTDIR}/${DISTNAME}-x86_64-*-debug.zip ${OUTDIR}/${DISTNAME}-win64-debug.zip\n+  mv ${OUTDIR}/${DISTNAME}-i686-*-debug.zip ${OUTDIR}/${DISTNAME}-win32-debug.zip\n+  mv ${OUTDIR}/${DISTNAME}-x86_64-*.zip ${OUTDIR}/${DISTNAME}-win64.zip\n+  mv ${OUTDIR}/${DISTNAME}-i686-*.zip ${OUTDIR}/${DISTNAME}-win32.zip"
      },
      {
        "sha": "2bf3a7dc2d72084367835be2fa0615aaad20db02",
        "filename": "contrib/gitian-descriptors/gitian-win32.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 74,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/gitian-descriptors/gitian-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/gitian-descriptors/gitian-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win32.yml?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,74 +0,0 @@\n----\n-name: \"ppcoin\"\n-suites:\n-- \"lucid\"\n-architectures:\n-- \"i386\"\n-packages: \n-- \"mingw32\"\n-- \"git-core\"\n-- \"unzip\"\n-- \"nsis\"\n-- \"faketime\"\n-reference_datetime: \"2011-01-30 00:00:00\"\n-remotes:\n-- \"url\": \"https://github.com/ppcoin/ppcoin.git\"\n-  \"dir\": \"ppcoin\"\n-files:\n-- \"qt-win32-4.7.4-gitian.zip\"\n-- \"boost-win32-1.47.0-gitian.zip\"\n-- \"ppcoin-deps-0.0.1.zip\"\n-script: |\n-  #\n-  mkdir $HOME/qt\n-  cd $HOME/qt\n-  unzip ../build/qt-win32-4.7.4-gitian.zip\n-  cd $HOME/build/\n-  export PATH=$PATH:$HOME/qt/bin/\n-  #\n-  mkdir boost_1_47_0\n-  cd boost_1_47_0\n-  mkdir -p stage/lib\n-  unzip ../boost-win32-1.47.0-gitian.zip\n-  cd bin/$GBUILD_BITS\n-  for lib in *; do\n-    i586-mingw32msvc-ar rc ../../stage/lib/libboost_${lib}-mt-s.a $lib/*.o\n-    i586-mingw32msvc-ranlib ../../stage/lib/libboost_${lib}-mt-s.a\n-  done\n-  cd ../..\n-  mv include/boost .\n-  cd ..\n-  #\n-  unzip ppcoin-deps-0.0.1.zip\n-  #\n-  find -type f | xargs touch --date=\"$REFERENCE_DATETIME\"\n-  #\n-  cd ppcoin\n-  mkdir -p $OUTDIR/src\n-  git archive HEAD | tar -x -C $OUTDIR/src\n-  cp $OUTDIR/src/doc/README_windows.txt $OUTDIR/readme.txt\n-  cp $OUTDIR/src/COPYING $OUTDIR/license.txt\n-  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  export FAKETIME=$REFERENCE_DATETIME\n-  export TZ=UTC\n-  $HOME/qt/src/bin/qmake -spec unsupported/win32-g++-cross MINIUPNPC_LIB_PATH=$HOME/build/miniupnpc MINIUPNPC_INCLUDE_PATH=$HOME/build/ BDB_LIB_PATH=$HOME/build/db-4.8.30.NC/build_unix BDB_INCLUDE_PATH=$HOME/build/db-4.8.30.NC/build_unix BOOST_LIB_PATH=$HOME/build/boost_1_47_0/stage/lib BOOST_INCLUDE_PATH=$HOME/build/boost_1_47_0 BOOST_LIB_SUFFIX=-mt-s BOOST_THREAD_LIB_SUFFIX=_win32-mt-s OPENSSL_LIB_PATH=$HOME/build/openssl-1.0.1b OPENSSL_INCLUDE_PATH=$HOME/build/openssl-1.0.1b/include QRENCODE_LIB_PATH=$HOME/build/qrencode-3.2.0/.libs QRENCODE_INCLUDE_PATH=$HOME/build/qrencode-3.2.0 USE_QRCODE=1 INCLUDEPATH=$HOME/build DEFINES=BOOST_THREAD_USE_LIB BITCOIN_NEED_QT_PLUGINS=1 QMAKE_LRELEASE=lrelease QMAKE_CXXFLAGS=-frandom-seed=ppcoin QMAKE_LFLAGS=-frandom-seed=ppcoin USE_BUILD_INFO=1\n-  make $MAKEOPTS\n-  cp release/ppcoin-qt.exe $OUTDIR/\n-  #\n-  cd src\n-  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  export FAKETIME=$REFERENCE_DATETIME\n-  export TZ=UTC\n-  make -f makefile.linux-mingw $MAKEOPTS DEPSDIR=$HOME/build ppcoind.exe USE_UPNP=1 DEBUGFLAGS=\"-frandom-seed=ppcoin\"\n-  i586-mingw32msvc-strip ppcoind.exe\n-  mkdir $OUTDIR/daemon\n-  cp ppcoind.exe $OUTDIR/daemon\n-  cd ..\n-  mkdir nsis\n-  git archive HEAD | tar -x -C nsis\n-  cd nsis/src\n-  mkdir ../release\n-  cp ../../release/* ../release/\n-  cp ../../src/*.exe .\n-  makensis ../share/setup.nsi\n-  cp ../share/ppcoin-*-win32-setup.exe $OUTDIR/"
      },
      {
        "sha": "340de5e5a27ff852a00fc7faa70e741e95cda4c2",
        "filename": "contrib/gitian-descriptors/gitian.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 56,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/gitian-descriptors/gitian.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/gitian-descriptors/gitian.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian.yml?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,56 +0,0 @@\n----\n-name: \"ppcoin\"\n-suites:\n-- \"lucid\"\n-architectures:\n-- \"i386\"\n-- \"amd64\"\n-packages: \n-- \"libdb4.8++-dev\"\n-- \"qt4-qmake\"\n-- \"libqt4-dev\"\n-- \"libboost-system-dev\"\n-- \"libboost-filesystem-dev\"\n-- \"libboost-program-options-dev\"\n-- \"libboost-thread-dev\"\n-- \"libssl-dev\"\n-- \"git-core\"\n-- \"unzip\"\n-- \"pkg-config\"\n-- \"libpng12-dev\"\n-reference_datetime: \"2011-01-30 00:00:00\"\n-remotes:\n-- \"url\": \"https://github.com/ppcoin/ppcoin.git\"\n-  \"dir\": \"ppcoin\"\n-files:\n-- \"miniupnpc-1.6.tar.gz\"\n-- \"qrencode-3.2.0.tar.bz2\"\n-script: |\n-  INSTDIR=\"$HOME/install\"\n-  export LIBRARY_PATH=\"$INSTDIR/lib\"\n-  #\n-  tar xzf miniupnpc-1.6.tar.gz\n-  cd miniupnpc-1.6\n-  INSTALLPREFIX=$INSTDIR make $MAKEOPTS install\n-  cd ..\n-  #\n-  tar xjf qrencode-3.2.0.tar.bz2\n-  cd qrencode-3.2.0\n-  ./configure --prefix=$INSTDIR --enable-static --disable-shared\n-  make $MAKEOPTS install\n-  cd ..\n-  #\n-  cd ppcoin\n-  mkdir -p $OUTDIR/src\n-  git archive HEAD | tar -x -C $OUTDIR/src\n-  cp $OUTDIR/src/doc/README $OUTDIR\n-  cp $OUTDIR/src/COPYING $OUTDIR\n-  cd src\n-  make -f makefile.unix STATIC=1 OPENSSL_INCLUDE_PATH=\"$INSTDIR/include\" OPENSSL_LIB_PATH=\"$INSTDIR/lib\" $MAKEOPTS ppcoind USE_UPNP=1 DEBUGFLAGS=\n-  mkdir -p $OUTDIR/bin/$GBUILD_BITS\n-  install -s ppcoind $OUTDIR/bin/$GBUILD_BITS\n-  #\n-  cd ..\n-  qmake INCLUDEPATH=\"$INSTDIR/include\" LIBS=\"-L$INSTDIR/lib\" RELEASE=1 USE_QRCODE=1\n-  make $MAKEOPTS\n-  install ppcoin-qt $OUTDIR/bin/$GBUILD_BITS"
      },
      {
        "sha": "6eb76b217078170dfa731b8e54ef87118bc94fcb",
        "filename": "contrib/gitian-descriptors/qt-win32.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 54,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/gitian-descriptors/qt-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/gitian-descriptors/qt-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/qt-win32.yml?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,54 +0,0 @@\n----\n-name: \"qt\"\n-suites:\n-- \"lucid\"\n-architectures:\n-- \"i386\"\n-packages: \n-- \"mingw32\"\n-- \"zip\"\n-- \"faketime\"\n-reference_datetime: \"2011-01-30 00:00:00\"\n-remotes: []\n-files:\n-- \"qt-everywhere-opensource-src-4.7.4.tar.gz\"\n-script: |\n-  INSTDIR=\"$HOME/qt/\"\n-  mkdir $INSTDIR\n-  SRCDIR=\"$INSTDIR/src/\"\n-  mkdir $SRCDIR\n-  #\n-  tar xzf qt-everywhere-opensource-src-4.7.4.tar.gz\n-  cd qt-everywhere-opensource-src-4.7.4\n-  sed 's/$TODAY/2011-01-30/' -i configure\n-  sed 's/i686-pc-mingw32-/i586-mingw32msvc-/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed --posix 's|QMAKE_CFLAGS\\t\\t= -pipe|QMAKE_CFLAGS\\t\\t= -pipe -isystem /usr/i586-mingw32msvc/include/ -frandom-seed=qtbuild|' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed 's/QMAKE_CXXFLAGS_EXCEPTIONS_ON = -fexceptions -mthreads/QMAKE_CXXFLAGS_EXCEPTIONS_ON = -fexceptions/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed 's/QMAKE_LFLAGS_EXCEPTIONS_ON = -mthreads/QMAKE_LFLAGS_EXCEPTIONS_ON = -lmingwthrd/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed --posix 's/QMAKE_MOC\\t\\t= i586-mingw32msvc-moc/QMAKE_MOC\\t\\t= moc/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed --posix 's/QMAKE_RCC\\t\\t= i586-mingw32msvc-rcc/QMAKE_RCC\\t\\t= rcc/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed --posix 's/QMAKE_UIC\\t\\t= i586-mingw32msvc-uic/QMAKE_UIC\\t\\t= uic/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  # ar adds timestamps to every object file included in the static library\n-  # providing -D as ar argument is supposed to solve it, but doesn't work as qmake strips off the arguments and adds -M to pass a script...\n-  # which somehow cannot be combined with other flags.\n-  # use faketime only for ar, as it confuses make/qmake into hanging sometimes\n-  sed --posix \"s|QMAKE_LIB\\t\\t= i586-mingw32msvc-ar -ru|QMAKE_LIB\\t\\t= $HOME/ar -Dr|\" -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  echo '#!/bin/bash' > $HOME/ar\n-  echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> $HOME/ar\n-  echo 'i586-mingw32msvc-ar \"$@\"' >> $HOME/ar\n-  chmod +x $HOME/ar\n-  #export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  export FAKETIME=$REFERENCE_DATETIME\n-  export TZ=UTC\n-  ./configure -prefix $INSTDIR -confirm-license -release -opensource -static -no-qt3support -xplatform unsupported/win32-g++-cross -no-multimedia -no-audio-backend -no-phonon -no-phonon-backend -no-declarative -no-script -no-scripttools -no-javascript-jit  -no-webkit -no-svg -no-xmlpatterns -no-sql-sqlite -no-nis -no-cups -no-iconv -no-dbus -no-gif -no-libtiff -opengl no -nomake examples -nomake demos -nomake docs\n-  find . -name *.prl | xargs -l sed 's|/\\.||' -i\n-  find . -name *.prl | xargs -l sed 's|/$||' -i\n-  make $MAKEOPTS install\n-  cp -a bin $SRCDIR/\n-  cd $INSTDIR\n-  find . -name *.prl | xargs -l sed 's|/$||' -i\n-  #sed 's|QMAKE_PRL_LIBS.*|QMAKE_PRL_LIBS = -lQtDeclarative -lQtScript -lQtSvg -lQtSql -lQtXmlPatterns -lQtGui -lgdi32 -lcomdlg32 -loleaut32 -limm32 -lwinmm -lwinspool -lmsimg32 -lQtNetwork -lQtCore -lole32 -luuid -lws2_32 -ladvapi32 -lshell32 -luser32 -lkernel32|' -i imports/Qt/labs/particles/qmlparticlesplugin.prl\n-\n-  # as zip stores file timestamps, use faketime to intercept stat calls to set dates for all files to reference date\n-  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  zip -r $OUTDIR/qt-win32-4.7.4-gitian.zip *"
      },
      {
        "sha": "df06e19fa4b109286dbbb7596c86d31fe0f1052f",
        "filename": "contrib/gitian-downloader/aschildbach-key.pgp",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/aschildbach-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/aschildbach-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/aschildbach-key.pgp?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "2389d4657fb7f5f225f5d76e08841fd6e21d4be9",
        "filename": "contrib/gitian-downloader/bluematt-key.pgp",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/bluematt-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/bluematt-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/bluematt-key.pgp?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "60d76c0ec7ab86635637ee9f49948e004fadfee4",
        "filename": "contrib/gitian-downloader/btcdrak-key.pgp",
        "status": "added",
        "additions": 142,
        "deletions": 0,
        "changes": 142,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/btcdrak-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/btcdrak-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/btcdrak-key.pgp?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,142 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v2\n+\n+mQINBFWpKewBEACzsuhtkin1MdQCKCEcFypjEstg0jA0nNVOpsGDTtdwfMpWiLJH\n+bV7b3V1p5hgaPdSyZsUezvHbkVEQxmU47C9lwph3svu6v8HInBwnOa5zj4L0Ih18\n+7yfeEJOvWzULzNxtiIqvWQBFxrVBbgHMhUMg0j6KCYOWeTmTuUKgvbQB8dExCoV9\n+7l+mb0k6eOZhwGWl6KD8mVkdhfXhoCZY5g79BTJf7lAQqnVbjxdyEKD2HSSs5Jnx\n+mTeZg40ottXa1puT+x9ES7L/IOY5kcrp6lU8iyKAoUS4vOJt4nPqY59Pr9j2nUak\n+2BUY0yojH41a752OYW59R+0uTNcUAwpNFucOb4TrNqjGJaPtxvFBZPTLImfSE+Jj\n+VTT6eZixOXPlOWm/7PgR66JF70p3gDwCL19bwUeOKX3UbkjhmYG48d9y1FNFZlVM\n+Yf36xj0c2IOz34VVY6GcCfnIN6xus5qWgHWiQ6RRdlRc9TbcCsUGttXuFP/n4nX2\n+OHo6I/HBNidLScfD2sXZtYHLcqvi2CcvEmmDdwBZrZncz+cHpjz8xmONb3bEMNT0\n+euPcEC5PXUItCSk9KHSgJhAWqfB2WcZ0RUYLp5lbtIZGHqY34LJRWXVKeOQIq4Gn\n+8uCyM5oQUY9zK4x7fdRz5tOjInYg+eSqtnLVDACqmazQHZ6kuGspAvwW8QARAQAB\n+tBtCdGNEcmFrIDxidGNkcmFrQGdtYWlsLmNvbT6JAj0EEwECACgFAlWpKewCGwEF\n+CQWjmoAGCwkIBwMCBhUIAgkKCwQWAgMBAh4BAheAAAoJEOXROPXnOhryKiAP+L3B\n+4c4eZcp8OSRwtYMiNmlxqhzEe+Va8T748rP8oULBFi7b7Nw9FILtp0Vtt2Xw9Pd9\n+EMsv5ZfgPpFL58ZeaO5f4uyrxipfUE5XdhkMOtqqlTfuCGh5fvNv1sWgf5tOFS2+\n+4TCtcSSywl/OlbRmWW/rsJ+RPrE32iSn171WRUXmGGBGSTF2mxCELLIW/rnY1qUw\n+u81BN4SYQOSyd1ha4XAlVYnPcEdpD5mBhwh2mdw7nCtJ9G/lPJ+1VT5axsONbEKK\n+utoU8CRt7OBlAUe0GbAcp7FcniKaFF2nUuhNbMjFcqZ9pddb6aWHVcaXIHwjoR8T\n+Br8ygIoODNEauc0e1xbtsXByD76pcz3yzZOFCKxtjtjsln23Drko4JA2LyLxx8WY\n+BCZcf8/8QSZJOocFOoUIHEfdljo/41kF1MF1Ra2Pr5ZHx/qNcI3U+4+uBoc1AuWS\n+5gJl6xXicLByqweSGKzAfq+SGXM+8ZdJ5KuHISMq7tfkzkmIJ7fRy+cdprXYVnhK\n+CW5EWA6+xQqpt0QGaOyRPJvQqJJvO42Eg9slHkfON1499pwaIwblWuNRs/jq5xCY\n+b21m50JmPas6o5lCcF0SFiFLEJa8spWxMrsLZGUf8KfwriDrssw0XzI74E//BFb0\n+8TLeC7daL3bsCe3FD/Nlcplz0oPKOm6Zb7fNf8mJAYEEEwEIAGsFAlWtJa0FgwWf\n+nr9eFIAAAAAAFQBAYmxvY2toYXNoQGJpdGNvaW4ub3JnMDAwMDAwMDAwMDAwMDAw\n+MDEzNjM5NmE3M2YxOTBmZDRiMjRkMmNjOWM5N2UxNDgxMjcyZWI1YjE3YzU1YzVm\n+MgAKCRB/qxFCZ+T6BHGbB/9wvhZ2rgT4vOT7HENDXF+Bv9TItBF7JQ4mehCenWme\n+23qxBLttfQp3AbwA2K2FyrshGM0fmtmpO5pcXjjHMVzlIDa1fKvbQGbhok5Y+94w\n+hswGS8O0XTU6sB3JxC4vpqdS1pryA/7g3YI+EuzYCkubNxvYnAy80Rf098xZzj2r\n+Yov2c73qg8+kb+5MS2fTjOMQhJo8N70YOew9FVOeZoeepv7SWLDI5Ya/YQ+1fFKN\n+2ovfBq/fzAD4PJbPJCz0miq1T5GL2nTXLcJmj46uV3wNvppNm/w8492de5VO0JqG\n+qlRurp6Jp2k37jqRSIIXG2wxCkND0cYftjS13pHnerPyuQENBFWpKiUBCADiSsd/\n+CmoZV2/UCqAnxm5/kxF8rW5hVYsYmfGO6lY868j5GMOVhWkrjl2CNWrFwQRqyiol\n+FNvyOro2IpOGXlM87AU3MP2/Zz+zkO3zY4ZH40t/UqcO2MPpKdkmGofCt+C6IFGS\n+Y23FqdfOLxV3aczN2aLzL2C6hHdXTcs99NGSf51iHLXn9b+hT4k2AxLPnOnnjgJL\n+eC6+s2sh4loSuvCh5FjVQfhQDLyTn93r9xvEhUMUUxBLz1Iy+e+w1elSwqNT5wEI\n+V5Iontm63lN37GrkRyX90PBtKf6VYXE1yKhNLmPBOIc1vx02og6Psu5eilzKfoK/\n+tQeYr4M/6HOcNvEnABEBAAGJAiUEGAECAA8FAlWpKiUCGwwFCQHhM4AACgkQ5dE4\n+9ec6GvJmFQ/+IoBituRcR394sVPiK7apDIPzPziVT4Qu8aBuHHREhK1Vl5C5tLZ7\n+Q6wA5Xc6O2/G+37HqKX3rqD7XBdFwcPXQa6g54uVs8l2+1UIwnFqZm8bJwubkHU7\n+U6addHacbX2itqb4EiQ82mAQqPSwx36QGLtPF2htl5z1XWj6queqjVrteAl2cbz5\n+KKGklTjReaX1jmun/3nL1yJuYRpZ0L7lF3IU17FVckCL/y3CXhdWOK1fGRfsnZWe\n+XQT+00dKhW5uRfpa8hR1/HJnaczAZnjjpRJZq8hBLamTjPypwjLf+gFAPiAJRuug\n+Bh4saYoE3ciNDzB3B7RR8oqNwxaF316vurrcKqEvnpQechFudDKYz6Pd09lFM1U2\n+MlyJ/jMwwlEvwoTlKFvgYmXOHPZoyf4Vdq+RPfRy+pDI1et9fN4wsy/Foj5hb7Yw\n+/hPOAjWElc4huCwaHIbGN+gHd+AbO6dOkWC7GgsOTGopyU0NXWfud7HB1V/NQ7o1\n+EMrEEPg3eMBMpksuNJ4TaesJ3keW+9OwIMDvsIGcRvqcAVL0R0ZkMGiYG3ITna7l\n+KRcCZwWaHmE6WJTuffBu9oyRFfSH6YbI4pFuFulxghNe3gD1AFZyWPlS/M6jw87I\n+4nBWSNoyPs1UxEGtntBkWiBJq79WAUSAeiDPVzvekQfaZxSpCrZh1cy5AQ0EVapR\n+MwEIAIpPUS3x6zTo9YoFxf2CCNho62MZfoN4ZpVQyY+NLhZ0p1XQBullafZdQjF2\n+mGPXysg7SEZflkcwBGjS6B/CJUoe+zGRL0DXrpoGrqEZzDshiOQ7lM08iloZ9X7V\n+UqhZdi7CFQCO9lAPgrFnvlTVvc7z+1L01/I+9H+w7rmnVsa4NyR/3W1zpOjAO7Wh\n+telWGTcLGYM5fWE3XnUTsWHUQnvdJ9qkDQB6emAOSzBreGmxzru1VSKIPrGsYmlW\n+Q/5Z82ihJ9uCYswUmh+hXRnAXTZTw9jQ+/hw75YuKUGjxXnMGJPMWIlBgB65h1fz\n+a6cTU1ZuS/wEEWEsiDWIob+B4qUAEQEAAYkCPgQoAQoAKAUCVd+TsSEdA0xvc3Qg\n+aW4gbWFsZnVuY3Rpb25pbmcgaGFyZHdhcmUACgkQ5dE49ec6GvIMfQ//SVwsyixG\n+w77pubV8R3LHjVqjo8CNWR2CedzT2/2xfRqjiz9juxpVSunPLTCUWhJTp8bAJzVY\n+UteZ3G1ctKuA/cnUbiAduU4CNlKrZ6AjmUysPVrsyw3kUDm8LSKKiARb0hCAFbvO\n+AO3Lm0YbpBtVYOUpWLoxpkFPx4PKRSyS+mkmFCgBV3baf6YOfPimGyEkVOhF5vZ9\n+WDjnlxPHWhjrpWOpWYPOlDMfSxsvYe4JTd/QXEqx0Ki1inNM4AnLiDf/rnyliQiQ\n+RFlHNnfo/FyqO9wvY8Hu0YLUJqee3WWTVDoYnQYSdHVM8w5JYXiUG8Cc8H2kQ79f\n+sYwIQEXPdJUCeFYnWwkltAjd95AvNDv/5/4kSBBGWUY80TH8qoxuPLekPmuvS8QE\n+TP2AeEcL8Hi5GnKbl9xb3bu/cuauLp1D23qC3HMoigFEgUPQ3egB7Z66PVWo+ko9\n++niqujCFBZBmkS23fvp4EgejYkvvhH9NcWDXWhnIaghLq6ngrj+zHDTTb5dCp9aM\n+JKOyKZIjEtT+AOi8g7yQ7bDyI0eJxOhKamBcVYHcvUU3DMsRSao8cEE6ee/G9564\n+sQ15Ma7W+wqee8SbaND84A2tAQcFtd7kvRn8C3Ac/bHuL5UIihNruTzOsfIHlXmE\n+jqjNA37tatNGoAK6//UHCzX6rLZSBUJtsDWJA0QEGAECAA8FAlWqUTMCGwIFCQHh\n+M4ABKQkQ5dE49ec6GvLAXSAEGQECAAYFAlWqUTMACgkQ3qOE7dYp+kBF2AgAiI8O\n+mFVfhCSJl7ofMMO2g92JfeWevQsn+GITexaYs/FEBb4NmWAyItJ1mL0jCVOhRXwj\n+AcKbKiWhuco17EdXi3xvu5FrfsN/lOmmyhkKyHSR+LS2XPb+xG5JJrafS7m2nxMx\n+4m0yH6tUcsBnqBPFFZ+w+Fxtg8ngUbo9B/gaXr7mvHwir0P2LYpcqlwpD0Zxmu1W\n+HpKT/DQa09Zjr5l9WDGtF6U6ZuSH8sdh/tD///x7AJ6eoiYadcy3YWRLFKKpfMSI\n+tSDhOlWBFFNRwrsZRXCrETYoJNWb/kvcHOaWNzPWcePjQ5RdOkQwnidUd1iy/Uqr\n+2+cT9WWfkHAND4uHlP1wD/sF+nQWOoWcQLFqTx9qt9h7tbgNAzXfEec7fwQ+NMwS\n+bKocjb5OOdzInEMDufusOWgKBfJtPQSMUe+W2orxBWtJb7WY9Xeshjs4q42GooPz\n+e9AN5B2M1V+wmSYEMyhHSTldjj/ZUWBmzZGH7skPHFUwFB633NOA97Mrt/F1RhiO\n+kw1TTn61x1op+wF919DnKdXaFiFX02XzqjJgnuUoGN/72cnfRzIkSaq9b9uX/dQK\n+z2Uk19ENQ3ipmAqBnzOzz+kjSqh8PdHgTGSyy8Ump8+dfhXjC98wVwP6YEn7tOv0\n+iaRzOiKd2kkCvSYexiqWYtKLU8icUFmvd6SROkcAHhPr1+oPS7LJpYDuES17iN3X\n+YaYHGGyvNsh1RseJvE7saosVGQwM539W61JUS9A3TP5jaL8ka8Q5AiXyIee+CD5h\n+2wFQnvdnmnc4QVkdVdrpNRBZyGySgyrO9E+iogfMSfcdDApgiETUOuMTvuCZSPhQ\n+YZ3+rddfgyDXYN3y5oW7Piro19r6R0D7DcGSstk1+1mEjJbb7s5Gc7oGq+EgLm0K\n+VYKa4Ky12osPCHFAoYLHe2upSHFhtgPgfzHKE8Uo5hnAVmx9jAi2XxBi4y5ezPPD\n+C0cCKsRTVrbvNavTSMYdfcxWuB4vlrMZIsvV0RcyP9jPXZm3XPrMik8xRbLR9AzR\n+C7kBDQRVqlGOAQgArkX9q/xZbvceeW0vzxI1UfbZnVoO3E+lL8W40RtBoF7R/7bD\n+68/dNYa1/geUc1jVyrycdp5RkTfnHnIHDt1WZfi6Ywdw9val+BpT/X9ZkxEXgYxO\n+tzMq0zO+ipeLgiqBRck7kgsOEgv+zaqMFXXrH+Zbsg1QbDEug61iCoKzpR8b2+5Z\n+QHxklnGd1RbiMWpioTmacOQE9yTfWvastJXIvZoZ8gdaLR8hA5o/ePP+GcSgntAd\n+NlMYTqqNujAymBJvMAu+ybyFRKN/L/X+IX2elhJWM1x4d1OjM/4sk31g6pucWRcd\n+vimPWouDIWVh+sh1g/IRsO295QKzXUCDELc/QQARAQABiQI4BCgBCgAiBQJV35N0\n+Gx0Da2V5IGxvc3QgaW4gZmF1bHR5IGRvbmdsZQAKCRDl0Tj15zoa8lAJD/93voL9\n+dqZ9IViyULsWsEkQDD20HQ+mxbuJcAE526If/x9JIMR1JcuE/C7pAtNjg5VBCOeB\n+sk0JC+Z7M80ivU1xov+rmjRvVNAX22/rBLpCTmUe0gzIBnWG5+O2/sccutigvvQE\n+O1rqLTEp0dzLoYbVAwJedELZnmK04Y8uXXQ1XSHXJOJmvEBpbDF0U3FXl7Sw4C+u\n+hI8IR6l2D/BYKIZgNIkh4ppFa6RJY0DtEWR94POZYBjjjToeCTRBG9IxudDy1jm4\n+k6bF/ByOecN4B3HRcBXUM1yJEmOZlPSZu2v7XvFp2VnFJfN2UjmtpYsKamV/xUsw\n+DE0voGp15TOfb+6QzfnLSI7vXcm1CfkBS++lYKcYcJ9Kj90ZPjtKy25vKcBvG68o\n+nYgS0Jnzm6j2yE2KBc90CWS1Txgu1Rd5ZrP8pM1ZK20/dq9CjtPLE94WFIc77k0R\n+3z8DJPG8I8M2RJ1XoqENrBvG5U0B+eeGA7mY8QSRH0COhslJ7j0WjOyO8xBSGTCq\n+QKGppFmDLs440cCVUOpnPz1kYG3YFgdCsFxOQ1GBJuHFLUdA1BEbb/nG4C4+y3Ek\n+Bihhu+3ZRoaBgE7ZmVOMEV7xdslPNssiTh+CxIUtugY2mhGnANvEcWrqTgG9+EHf\n+ax2avHR4CQMn7onZAPt2sOMoPkE8R3H3Knlta4kCJQQYAQIADwUCVapRjgIbIAUJ\n+AeEzgAAKCRDl0Tj15zoa8rK4EACFfSUffkm80uzBxFDbo3+fWf2k5hnjXheZxE5w\n+gpT4Z6QGH70GjR+rbH5a6fMM4hkmqNRYWLf6n8RTYNvCLxopVg2l1QbHYFbA+pAB\n+0tM7HOng8iyvc+uUJ4hTicpePm66A4uc1/z+mr5mcLTQS6Nfix2j3hduzzCVIbuF\n+/3UUxS9hFAXOu1F1Oz6auFkeQ8R/w/49yXrq/MYYSUsWtOR66Yu4664TJKBkZGlw\n+CiGPYmpeE7To7LqdhAop+ZnZnc5agSnB9QZw1HVbMY0nwbPuiJx+6mmbh7Gf/OHu\n+2pHSAStvFUGA6ngbYVH2LlRC2XgAA/yFAy1FNFegxTXO+3DI9ykj/3WBmjbNZMIA\n+mhcvPPwwJCNdxbZJbCcot82FBGPpwmsiZJWynD4m4+aGErp/pZmKjfMwP5NAgOQd\n+77XaRlJTvW4GqAdmT0ib7tCqGwFAx5o80SszhgRCUqu8oLGAUlTfMoRgmFNRznP9\n+7xptwjNSl19YrlXdgbhOvVvNO0/J6uXnRc3v9yfaa8J7xU6GvuR5smejYNLUxccl\n+N1UmouS3Vol5z6hOmqnembN/zC3THOHqmJ1G6SdiCcn5dG5Tc+jmBKLRAnoIimWT\n+dO/UoWhm2EB40Hlj6HRFXure47oD9x28d48E0+HI9Jzlh4Wuu6kkr+ugOpdC0TbN\n+H/+RObkBDQRV35PpAQgAo1+V52e+8VFsDKyceNNEVE8NdUiPRKBZuVfCSP8nqNCj\n+hYf4lY/iygHCNZDtKaBs6BUCj0Ev1CLm+Uxvdl1trEr1FGz8E1kdUsh0LocKJgjh\n+wbuDrxM/6LNBxYTR9fEIGx+ka8o9OMLqWav+QjZtDC/nTWaJkXxvcgZPhadCmkkz\n+P0g/vnJVYbvDBBmxI9ofkxZIrwNR2Y8VO2oLVP0MpCA06cuUQWym/gQ2uqBToGqr\n+M/gc+vq0XQyFrNmH/iP8MuASrOoQfGhvZDg/x8rcFRs37itZWpUfP3pZ5zWztX3G\n+TBtc1EktSjs8fU828lPxtG80r4RB2sWVDJfoqhi7XQARAQABiQNEBBgBCgAPBQJV\n+35PpAhsCBQkB4TOAASkJEOXROPXnOhrywF0gBBkBCgAGBQJV35PpAAoJEPxkNPw6\n+MelWLCsH/R69Q2jgT2+sHVWbDsmNjTOkJIteKbz0uW8/vBJqZ2VEwKozGruCTkNI\n+orYKj52ZRcxKiAijN2XGw1TEccP0s5Trap1Z+xgjDDLByLswoVBUzAjbq77hedT+\n+ZUuQFKnm0Cc+PzB/Nz96I8AV4AxYc7RW4keGtvEv7qgdIlb6fbPpFB7Z5W573OZ7\n+G72B/T6QL43HRaN+ZbjwRJaY66tYKSl0Vd0WrO2p5xVdbTarVFn6q/A0IYEafVKY\n+QaRTh+VQbN7vNZCn1Gi6fvnjtWRsj0vMkafdAzVYqF42P+cf6iHrglE6DwR5AsaS\n+O9G+8kLpkXFRjDQJBaijWdBtaeOulCxTog/7BZwo1kpTC3ZCTxr/SHJDc1Nsxt8K\n+xnMCPxFSrHRJb/fUQDjhLv6lXXAm5SCBdFzAc9oDKUbcuGSEz2nZQjL1OADn9rVo\n+j/Y6wJ+okOCOs9AI1H+VW/rz5Z7wxvw3YOVa+dnYdV0w7FklCn+xFdZLj8Z5WjcZ\n+zoyqGlVAFGOZ4MbO+fz/+8f0Y7K/bW7E6smhnomTy2ZOk64eiO12d8quHTHMi7Xh\n+mmVYDiNn1gW9IxZwt/Ga9AvZbIAYhL2m/xBbdfMKAG7Ttjzd3Ac+8wrGm3lOesBD\n+AJUtBmURu8b1Eyj72IQcV0AJM8gvc1B0H345oX6VBgkBB0bf3nuUVftv6r529jTr\n+Jix6yrs4uf25tefzcFuqqE1s1r+pSZFIDpaNsP+jjMgYj/zn4dLOZaq4V3SHvnsU\n+v8KOUC2/qNH9U0KC6bh4mw0fVsHzhkaOjOM7SF1Doc8Lz4vZuk4BpumHpkHEG90x\n+CLg2k/R9iIDQfcGtKY++1/GitjXakPuKrJctZ1SJuW1KWyzFeF4qvuowmLGMFRVi\n++CG5JJSLCUr+cPXa8NbjZv9BwSHqWbn3grr7ZE/j6SFNhuLmByeePPNKRt0cae6a\n+3TQkQFh/yvSIkB5BrB1n2x+xNoWMME+GR0zYQCOncCe8W+a5BZ1mTiVGacHgVqSN\n+eEaG0RH54+pi4gw=\n+=fFMC\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "928a74b3155da22877d1b6ad32fa2a7cb745e0ba",
        "filename": "contrib/gitian-downloader/cdecker-key.pgp",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/cdecker-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/cdecker-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/cdecker-key.pgp?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "71a42e514881bc6383531ea2c82c93998453245e",
        "filename": "contrib/gitian-downloader/centaur1-key.pgp",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/centaur1-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/centaur1-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/centaur1-key.pgp?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,30 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1.4.12 (GNU/Linux)\n+\n+mQENBFTjy20BCAC7q/tpPQ9tdEALpDqe8kpVAT5ysOJDLDeFEE1J5O8NuDFuibiN\n+XYkb2nAt4Vdr23in9z0LAiTSgr7znndnab/rOSn6pXbXQfLTHrSnAeClTHVQVPSq\n+m5kNg1vWvNxFtIpZ/fGsc6LLmIHxdgeLn+NOpvNx7RzF/N5ctX51vMxMUeDq3daZ\n+tLneJVRj5tXHRJcjW62cyiNFasYAZ3JC8wjwzr0SOndc7kygbEVCTWNkTAGd1Lax\n+KSJW6TjhBPK7j+RljS5nfx/Tf+OG4AoA7/53593YL7Shfx8rwWVIeF4nS6efFnuf\n+eIj+aS5haGyFvNgw8DE7QUCrPiUxeA8wuXu7ABEBAAG0H2NlbnRhdXIgPGNlbnRh\n+dXJAcGhvbmVib29rLmNvbT6JATgEEwECACIFAlTjy20CGwMGCwkIBwMCBhUIAgkK\n+CwQWAgMBAh4BAheAAAoJEP+V+qlxaXQF8r4IAKnE8D9AOTdM/YvYxpCeI6ndEUUs\n+8NcotpbIBJ67vr1Dsot7Ee0PrmIYOiInA+T81lPUDecJYrnemVefhquiyJ5VJ4/d\n+z2zUKBfxjeOsj/PHgcowVxMco8fNEWQa2fZX6X8RVADIsUnIIwpRFVUcbssK/3xJ\n+k46vjWwYNQywht/ZgFBesOgywyz5GozmwrK6TixJxKk8M69GFz2fHhJjp1bxDZuk\n+Rs3YmWeOcCasoJ6GbvIboKQSPHGyEOCqIuiBL63YMa0n1FU0ooDteNZ04eRinIhc\n+fo9JC66fQrUFn8CmmRTtdZOrZ/efYjQtfLAunCkzSM3p6DE9u4Y7d8E5Ar65AQ0E\n+VOPLbQEIANhxtouZuQmw+k89toBWXw75s+csxKHKZuhw8QntaFyFYq3IOnIeV1sK\n+PRENkWsqDInjEM8k9eZ6pnS11EQ1rrFffss+mprTbL3I4S489tJETYZKHrmmox7h\n+ustRi5eXBEmGeKW0mqpb/9r4okpTaIfs+EJ4C9jj0ghWkqU0acyzanJiUY/0R46F\n+vPfGfHnhZ5TAl3eiL0H2JkF6taG8K1XOLemahdZHE9wJh0ZFWnDDkA1l6j2rtYga\n+jEi/ucOp5GkmumxbFiVgponDBqBpsscRrCV6SbZs9gz3dQNgqe5A3CKGZRuVCY6s\n+djRJelgqCF5+dV0fAT0oF3C/3E5KAgcAEQEAAYkBHwQYAQIACQUCVOPLbQIbDAAK\n+CRD/lfqpcWl0BUSxCACjEFwQSHcfZINWD+KdNMayxyHQlBwsEDX+xQkgnn+/Q3hW\n+9VI3SSSfFV3ustlUa3IaNHwuWzsrSqG6mLG47LAQ6vPAWVh723gVCpyJf42Oms/e\n+qeyn0f/PT/6RuNMXQeHbfddmRp4PFjyKOms5Bmf3oi4t4JSvOS4yABBBKzhDQYC9\n+e+qv6Y1sDYpSiCxstQLzIHKiB5bfZ8Szfk09EyyLdqLGkiB0MFhHoXWwQxKiLVc+\n+xNFj2a/jw0rQVgN5DZgHBWU5WqvS5CWIczi+2S9MFI26iBhCn3urZToaaQ/DObqC\n+qmekFrJ/GOj5vB1Mm014lWjG2X3EovLZ1XkgWI7W\n+=vtNZ\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "6b0bd240ba4cf8df485a8caa689717a12ef6b3c8",
        "filename": "contrib/gitian-downloader/cfields-key.pgp",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/cfields-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/cfields-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/cfields-key.pgp?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,52 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1.4.12 (GNU/Linux)\n+\n+mQINBFOHTh4BEADdKsRvmNhX+B+bcPsgMkp8ztwJA5g/rmrOlHQpKOOf4P2tAr6w\n+FmXCChWF9Iq3pDFQ0t0iq5rgisFPyrGVT/VToMmH+/PSLTyIdAlgkRYDMAPsMAFV\n+MaADH4yiAgJ3cdXtysjaNQV5O25ypqq6/obUjZJD5Enn6b/UgHe2+7LTmTNsskOx\n+5s/WPPht79EY1kM4JQfmDx68CsmqeSAlT6yeO3RQcLn/l46cfXiwzMO4h1hsZS1r\n+pgciRp0EHK9uAjF2rjqt8v4SDxwyTnwfpBBulzvH9mBf+HRXWzoTMR4sC/oOZext\n+hKAH/ex47BxN3HU3ftNhCK2c1xcU1UOGSjbf0RdbwuSCxxa7mktEDumvOxAk9EBB\n++PDPv7jO1FBK3rsJdscYQIL0AiRyO49VfNLARa34OqUi8pOAxKBQ9plO02W1gp7a\n+DVBPI05TZ46Y8dTR2Bc1raAgOyxnXM7jfiQG2gSULiKAJAI4HwOiodaiiHAxDaIo\n+a3mtsmfN25TZUQuA0I0BvHbJvLRlVnyZm3XVOcwReKJpZJV4qRhd3XNrERZdz6ZK\n+cAZnyC/X+Uzo4HfnVSsJk1GpIa4seYyrVCFfHMiAA6SkgAUFbV26KCOv4rNR2GlV\n+l2fVhu1RKOEUJ8nRcEqf93SehRVYdI67LepIPgmIwi0KG4HhoTbIHDAKWQARAQAB\n+tCtDb3J5IEZpZWxkcyA8Y2ZpZWxkc0BiaXRjb2luZm91bmRhdGlvbi5vcmc+iQI4\n+BBMBAgAiBQJTh04eAhsDBgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAKCRAcJJH/\n+6w73cBTiEADIGZSueBFmaOTJCgasKGguHns/n8P94EQBZr07rrgN99Rzp85WvDUN\n+Qa72wj3GNcAffN7aZlIWv4g+fjyr9AzHekjI/7iwwSYIfjfTR/xRUW7czRfKAOrK\n+iwpEzgv440i7PBvkS/AhNdUNkm+cJvaQUej/F2/O52qDLEpHuzvjAUUWlSeF9/oO\n+AjM9dfC24L5k5cVwQvH9noxk3EyuE7BuiGE5a+kKiORrtxiHeUG6GYQxuqrPucLU\n+fI67ETyXa0YSpYm5/O65BKMTMpmkMvv1JC2kqqsYTrO5p158CrKzq2xvpuG4ABsb\n+9KwICUGW31Ndr6TXwQJFa1b7VK4G1g6M1DFkVTOLJnEyOwgYxsXrV5QFpzpAOAji\n+6KcxNGeow1avAFYbqjjLgu9UNuq6b8du13hjkQxVs2NAP1Kd/u2ADwxQHMhZGVEC\n+9LIcLVSP9ShY6fR8m6fwSlJfpiV81uLNVD8KIyvp+pYTQ/FnxoPhPIwalYquBZKi\n+0u38igW75IzZ0fYvJgTumE/8ofSVkutVtrQb21eJclVrJGMNweTlJcJhAWdKkjDC\n+e6mSj8GItKV1ef+eusXSzs/wPyTaqgkELvvAOZdwUq3kobQErE5HOuPEOvcwuY96\n+DcxLexirCGW5wCUq7Db0c0dUjQwzzb5OTW2jdnPVR0qxi29TnOJ2aLkCDQRTh04e\n+ARAAuJKpI6NTCQrjEqe9AYywN8676+fPS5bqXkyb/iub6MXeQdwpH0K42lXAaYMq\n+ow/0aLlvGWCHuJJGozoOWpTzQ+VPbhpdARoLCop5fYTpy8Q17ubLeeODDtr6jtDN\n+lmg+9PBIErIVUnUS2wNZuJRVsfwlLaU3T2v8kQnQ6AEbl/QwyWW9nB8rAWBu6Hvs\n+VdtcBmtHSr9xAGBGfW6rSVhTitikR4lWJPdNJxI3pLaswpLIUIQ1rssKO4glljcp\n+C6nhMvRkDLvDFvDP9QnmwY/A4ch5S6ANPrhOjQuu9njjQ+/ImrJTjAXqHwg5KdTc\n+NKxufgvi9elOQ422o0No3yKdRoRA4kdcUmqA9gNZDyX0ZTd17aNqc42Zt3aYLJ11\n+bLZZp0qnfhkmhbsBZZtaLNkuF+RGPWysxY7KPMm+nHn6f3Wpr18E+T02wi02r4nS\n+HOQI+gppDqy3Vq3ZZNoUZynctiLZVHkqi+WYXqfD2tEn8UJKpht7jrZlNgkHFgT7\n+T0/U4+JmaQ/HltE+IexAIH0GP0Jt6hmRoZimdoy8Q8NY5t/fn9CQNJm5InrHvooN\n+aFmZMvzGTGiTqBqnA/7k9FCUEG98LK11MsIssY8YE/F6HD69R3ISyRvhUbpFvhD8\n+c6zOkEKngTWvyRevrDrDz2yoZ1+T1X350+92rbEc/8WyutcAEQEAAYkCHwQYAQIA\n+CQUCU4dOHgIbDAAKCRAcJJH/6w73cAakEACv4EUEjtFjqnGB0Lru5FKs1obWcf37\n+c4a5yYvOw58dkEZ9hsq34qWGLT128n6R24KEG+3O4CbplAD5Kt2eAPracbPHMAn8\n+TGmC+KjiGlBR5xCY9dD0fn5EbRWOa+Fdcj1DpneaqMl9vLnBbqGp7pa/MwSOc+FB\n+0Ms2rcGJJMNHgITfP22eCf6pvf/xq7kKbUJ3Kjqdc2hWlRMjC/OOeITdrgycfDk/\n+AOzLNqk5q7bYOxna6rWDLGSkCATyQKaBTVK7wRd1VrIhI4vfFqy+BWYXyXJ0pxjS\n+eaCDwbWHX/KW+0qLsmHxFMAyHJPjs8LEwK/DRbmWhe1HzPcBKmpyjqlkuxPjAdSl\n+hP4+IBvVNLf2Kh3uFHehk9A6oCYZGe3lLfQnOxIantXF7IROTmiZZsb+08w6cIXE\n++r6kWG6vP2aCVtzYNfY+2p5xfg3yMxcxENJki1WSCOq6WVf9IWFzSJu+0+eazD3L\n+3QpZoSX5VvT6x05C0Ay1ert0Q5MyF84Eh8mDqL4PhpWtQhZMp8SG4jqFVgrhM4sl\n+vWGYXGns4tbnNPiiksjBD8TTvG3+mt48sNJIpHThjdWJSZjllYG7jV8oi7HrX8M2\n+LOwWWLYxHkqi9wpmrWHSmniex6ABozcqrb+EgSMnHuSd7glmOJxHToJIudJbKG5D\n+MrD0ofsytfy1LQ==\n+=DE4h\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "9d3f060627ee9cb4143e3b8945a261e90c39ba13",
        "filename": "contrib/gitian-downloader/erkmos.pgp",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/erkmos.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/erkmos.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/erkmos.pgp?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "9c03ff45226c5629d24e5f9925da7210df0760a5",
        "filename": "contrib/gitian-downloader/fanquake-key.pgp",
        "status": "added",
        "additions": 63,
        "deletions": 0,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/fanquake-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/fanquake-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/fanquake-key.pgp?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,63 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG/MacGPG2 v2.0.26\n+\n+mQINBFFlV7oBEAC3dRAS7gSWQ1fV4JySD0HMBOtY+Y2oCX8vEuTI4atGcxbwXr4/\n+OElRYhDK6Zirk8rMoKPxmr8OVek5LNnY3gcDffco6NXmZ+wTstQm6oqUxFfgzznG\n+X/ExEVuCqiaPAwdWSKn9tC1GuOqRFcD+p2zmxw5mNH5XdsqaPSEGsKESY1IK+dMv\n+K+YUrfrtexZyb66wCtupYziEeag6iEK/i2x2wewOji6IvtI+wB5FO+YMXw+LKucw\n+PoHUOxjoz6YX3s04UxFaZo4R8x6J9XnJBSB2E5kfsSAzz3xR+zuapXY6H6mo/grq\n+nr3c6ACcbAHnMWwQLYvWzde6iwswhyl0whebsajJH7Rd3G4c1U3L/oj4RwUFmZYU\n+5Prs+Q5PepKAJfBeWCXZtUY2BNFCFj7b2H2NXYFR92Oc2GtoHAYACNeP070I9d3m\n+IeuYhOrOckkunwaijUczq4rb3n3Vaq6YrdwZIzs8fALwc9Th98jj2dCUq0fljpSh\n+UQFnPG83UsNkeWzUSgw+lBeEQqgOqUQQ293MbgRg0mJ8q677Iv+WaFqPKZzXxkwT\n+QCCXhjcBmUKgXIHLFcbfmkR8pCcCToWXBD8CU441cBsootDD7SanPHbpcwZjt74x\n+uLrVoCIyaju0T1jSrsPnm2A/8VkWLSCh1WRAlbjvMr7DwizGnRtzTiB6HQARAQAB\n+tC9NaWNoYWVsIEZvcmQgKGJpdGNvaW4tb3RjKSA8ZmFucXVha2VAZ21haWwuY29t\n+PokCNwQTAQoAIQUCUWVXugIbLwULCQgHAwUVCgkICwUWAgMBAAIeAQIXgAAKCRCU\n+TTX5rD23agJgEAC0ouDjufjCMHL4DkaVkOnFbHzP+nR2Mq7pcjdiPNIt9tj8B6cI\n+PRh/E+tt2iEJJ4lzlfj0uEqjqexmSBaMgY+pFb6ESg42EPQjRQ95oBoyZfp+uL/0\n+KC3+Hh+EgmZGIFPZy2HneVfusiBUz2/YTOoqFkzmHalJe9Yvl2+dO0SUC7i6TUdJ\n++ugSr/91hkjQC52LXgHzurH4zOz7ZjzRtZgUIG3oOx8mtEDf46eJ0IUsr+tWJqOp\n+ce5xFh6nkKfS92B7YjGJ4YrkBHC7F9vmbrtIeuWiaxGzVqhHFmLvQe+4xyOpRgHM\n+kcyD5uJNmSMO9gT3udut4hd0yUKg5rdqaUzqsvv19eNL/pZ7aBK2aDAK/yAi1T7X\n+/nrhBJAU49zg1JRS6atRnhKSyd7wRSwVPJAXfVuelHsUgenSdLmSBxRha+9mL6Lb\n+bLK/Dij/0r2fyhBJx4pV6V1n4BpHjv5ivkpgCvOupx8wx3PIxZq/rx+hK+ZBe2EQ\n+7vq8rmLfBkSavHWyNxXEKWQed+mFS3d+Qsoy90bi7gQygIYNZOIBYwsy+qjCZ3om\n+LwkzRjypH23ps7WmiaoenOaCjRYooNL4qtQwNVaDGYwvbMnXJ8Vb4/2j/Riz7+Ui\n+BBVww+Wd72Fml/OFPDFep6HG/PuwFB9m5hmfSzrA01TIdjcWljtTDneufbkCDQRR\n+ZVe6ARAAvi1IAxn9xKQCCqhsoKOiXNbpnmf6lYnoEwGtgI+0a0YQwtzm39P5T8P0\n+esZ65/Re6jCCHLc23/urFPfW9VfrKPmNJncyzlx7OopJ7G1MWdRLEUzwqSaglC6x\n+Zb4r1xR6eq2lBX6CAa5Q+AuAqkoGCEiYBpTyKij4sXE0c+Y9nIDIZhru7EnZvpL3\n+SQvxzFryQLbWCGri0x9GKXZ2ZcDM7jRi/P+iX6yX6sVvOvyKz6NW2BI5OmpI1JbJ\n+3fIXt/R6Wl2xpAFL/pxtYTYbfL6277HWtLDTqIkkRFKh64JdkH8n4G4m6VNUtGEu\n+qP3SxtyShauxY44WzR0YX4rag6tU2Hks6h1JmyF8aQTBAkdP7UrQ0oxZ8f+iG9n6\n+3GtTxgw2NyrqVMx3kBLm8DipyslbA2wCeZLrW6Co0j3pebJsDrMP/3zcmbJqRSLq\n+qnkcxA4gn5j/N0oe8t26Y2WjovndhoR0QQxw8D/BKoMXbl0lvvRAtcnWtyG0COut\n+AGB2PUbGdAX2Ky+uYKrG4uhu1edfV8JZVvB7NIQGzM2P8F9PrDRz7EtG6z7ky/pq\n+HQwRbqwLWGs4QpQmHZchFmXH7pHmLC8i29W+xYhdeUstvx7oESbunICGrPjJOShJ\n+G4191Zg0m/M6jeWV/v+piUXe3YVrgs42UWFusm5ZIduPUfgqUtkAEQEAAYkEPgQY\n+AQoACQUCUWVXugIbLgIpCRCUTTX5rD23asFdIAQZAQoABgUCUWVXugAKCRAu659c\n+wJUmwaduEACCiiRpBeKF5fSaM0cTb97hAHVQJL9Wk3xvA49YuROsSwtCzq9v+js5\n+f/fE+QV/dIQUNwifEPQk8MqUVKpe1lIXwRp23GinzDAnOhfWnECqrMdR0dP99D49\n+Zb7Dd4LDvP9c0mYtnX/78qQilxWmXhzDXcunnPsfCqsrduk9hMwkjmIrWFeSWSAg\n+BEJDuZ4WLuqjni1udth0iZtZYrDaDgX/RWcTFW8QCc5hLsCRcInAxb75AWfWq6i/\n+s3Ibg5tGm4+UfqGbFPuNyy6ow3ggqkovBp6ABMxe8dAYVXSmM2tKWZXBb3L6eho8\n+QKKzyoezqpbQ2YUaYZ8XAdLuumXCtAHKP3/DI1JBefE0mxi1CXjdLK9sE5OO5KNt\n+FXR8Dnot5C4BHrcaF6Iq2sqbhPxnhcDrEwv2mUgruD7n04LKIztAG0A35rcu6A2i\n+IUq/PsXjS/5rX/p4CeYvnTTspXkhXgkvfhWz1cISXyfcNTWBKwOsLW4lY8bi05cv\n+4Axl88tTg2dNYXIxSK7Jtu1YCEsZ8uaT3AAiTp1sKAOcRX8hIOTmPPxMxbIm8yg1\n+jl71ovsV5rAyuVTUouFnljXyuLWXLotUOkmC6DjJUuRaxzt23/eByJ45x94T/A2U\n+iT1oU+voigQGARrDkApXlgSI4oekg3Zgq57y6toV9F7o9A1PMtBq3AvDD/0as1K0\n+wCRZIXinSwW2F6tFnVV+z+vvE0i54yHaskkuJYZRSQ/yJR1VgmW/BtAr7ooXF7l+\n+9g7XOH7D8T28h+m4ABLN5ZDOxfTMZuV5Y4MnELh4dlBIfKGG2kjmW8+y/PUqMMGE\n+BYRmGOD1qtWvFYoZ2ss5yrlvfenRRhQbIYSRz/YiT8OTogaNcYNpArUwT4z+05af\n+kdxx0AaqauHqKRo/XTO5GIZQ6NbtPH6G++2Ie+oP8AyBWEpL3rvjZpzn7jxTBXMc\n+MOMmhnb0Go4hD+BSphgDTZOgMLOLcorjb1Ct2VnajxPZD0aTB13SCgZjJhs9j3on\n+EoI3gTHkRgiBjMBNtw7iaAumIRgrDwGzyuIL6bbyfDnbE02zxCqkYP6P0u48FGLs\n+E4U60GrYSlFxa1MexF+HIPgqWsTOv4D2zXEJYvm1XEu1VOGQUkw7J5RFTDxHgkbh\n+qvmkZ492iW2IC4L9hSdSqiZ5LhD2JwpgrMt8vrCzVitkjYQnXJ6WbWYfCybPsmLb\n+mfQ03i9E+a50UC2SGDf8e3oxImAbbXLP/LyI7oczCxyb0EzcQlIIOtBgl3gI6KAh\n+PTRQGeHCzIOSgUf7B0ihY7qiDeR1OshvTY0wdykdS0c+hzwuS5TZvfY4YM7Tssvt\n+XwbdK0Zpx/oDtRHpuDMGKJBV2LWAZYkEbFsmtg==\n+=3o2I\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "8a9cc58c237af8d07d81e9413eb9b50a15054efe",
        "filename": "contrib/gitian-downloader/jonasschnelli-key.pgp",
        "status": "added",
        "additions": 110,
        "deletions": 0,
        "changes": 110,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/jonasschnelli-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/jonasschnelli-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/jonasschnelli-key.pgp?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,110 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1\n+\n+mQINBFSBrDIBEACrZEqObmtlTf7fOKttE39qqisFfMg0VeEPS37uETMGYsgTEvzv\n+kfMsXCGsGFLQ78XsHqUeW4uQrtpJH3nUP/Sua1Q12K3lNKTSvVQyEpKoPJwXZahp\n+jm6GA1ApDxZ/KlmxyobR3X0urnMYNZobl5IKJXlxoKGl4OkGNeFlh42pCXZDnR9n\n+1Y17ZcDdybkWcqPbDAz8ilOQcFMhDBFg3Di3IVMAaDZP1uwWFb5vx60YB5NhkOpF\n+nZUH09NJx/7u7QdGPSHOdzW4Xo1HUYtYNDkdOvgZtxpbYEFIaBtVBURMUGwAFagA\n+3a6qaGnCBWEQftyISLiqcKqKqXudOg/cLa1CAiQFkz+IBhY9BCGDRnB8Dcae6EGI\n+Djt2lqZTuMSiheTWeNFMGBioHfPLedcwae8KflrIBC+hNS4ay6HJdIc03WMQ4JKK\n+At8Y8CRLym30/RlqZ2v8CHYqg9Ddlz3+g5JkRKaJTQwFRcX46/tAX+I2NZ8Ra1ea\n+rF5cRHuCk/oaw5ZXYhj4zJO74rjAoSewAARlrTMSM541atJU1u6aWT7rNiF9QKIj\n+i8vEufUxN0YfdmvDD3OXwbO7GnfWXS4sPklFIRACp+Y4ib+QnRY0/qGE0yh3RAG4\n+r/dyIQ1m3z7Pc9eyPKAhE4S7SxAwoR4yOqQ5NAfZXgFuqWzkW51gkQgGzQARAQAB\n+tCtKb25hcyBTY2huZWxsaSA8am9uYXMuc2NobmVsbGlAaW5jbHVkZTcuY2g+iQI+\n+BBMBAgAoBQJUgawyAhsDBQkDwmcABgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAK\n+CRAicOMMUic59iKUD/93DF04C3lptLjtrhyd4wgpBMJV8yzagGyG+Wk0UR7elQw4\n+F1MIvEtIFpuGrcnNfKcqeGGmnnKFTeBjkmgcYvej2fW9XlRA1HgIS0t0ttDv8uVX\n+vy1xVj1qISB+17EiftxJjCOl2pZFEVpLQ7sSgqnVRMsCS45ag6rioGxtq1j3ifQN\n+TENnJWhzOXvwzZhLgsyWLjeYvTDbzfAQLpZFowAMibOwu6ObCkn4dhaW+lI3AnPu\n+76pLsrOljqGvXes6o2d28vjqMrlmsz2xVEJ4bnRPUbLv3bUl6t+19XpiMj94ZCZX\n+/kvepzSNAs+aYvoldFn0/8haU5wIDXO/zgXSlm4KnhaDf1zutVq/Ng6TGb66mZKc\n+RoiGHnnuQ45e7VIXRfOmgbbUTUIg+h4YvgCTR8dMoOWpd5AL8lZ3bjYVi1yFd+p1\n+dPfrrnN9Yd5ojoZBSrV2j1wLgv7jRIeXL5dWzeAs/JBzltAHWO+9O6NsYXtRTUky\n+eQa+oBKG1OsEXf63k8PgQf6Nw+di3gy23tKEiCz8lbA2MtekxaZ9Xu9CSEEPIH7t\n+Aoki6Ey6rD1NUZQPuxQ3aCUTRE2JK4b6nPuAsOEv+cZL0VxNENpbedtGPh4aAA8U\n+9yvBykWIjRS95k4NDVKIdzhd1geJsUJZq4BKh9Atf/kI+Gb0sqq2Lrf8a1pNX7kC\n+DQRUgawyARAAwLiAxqv7PsdtJg8tBO+dAnTYtAtBHn8g5GlXtorymB9Aqy0Nzpd1\n+de27dYlBdlWdHZavMh27JieZ4rk++74SMAo0PACp6FDnfuu2PmJZTr/Bzvld+B9+\n+lOZrMWwDIVSW1npJGUjF1rjgPjvmcGo/IreVFpJ0A33J1p/qsYZsLTXTDDoz0fq8\n+3XvwTlkTOkuk6Z6LPo2feDHYydUmdG+9MrgIMpidvywRHRC8nnkix/aX0S72kZuR\n+qvWwSVs229gtfuWHfvmaQgbugZMqANla3ZYdzExhIIizu7qQPXSYfhsCoywWE2So\n+9QXZIiVJge2P/hUr2gTiRNTfmhupDeqb1E+i7x9txTrNc40gbTu3qs3/fjKIWrXw\n+Dy5tuZsviLQnEQtY4sEnHl7oL1crOuIHjZfgZfoZ5CK+jqb2b0B9uIm/SMl6Kt8S\n+m6ZtK0QTjtUSIputPEYdLycdOpWDDtAHrWkTlRzKJoLG4hsywBAgQe7n9nLf7Zmi\n+DhXyXRKyJuuuG5mt7UZhjW95loFFVcGXHIxNmxVqNb1YaG3kEa9PdQMoOc0hRZb9\n+77yaGfpLV8Vo4CB1eAuVU0UdNRyChrZK5dKXBN/0uZq5HgpI1GiK/C3YUuQI3t9p\n+zeJYD3jPGYCI9xxLaqt7whoOILPmZ1KW2UfXTvcMgBUMkFpZrqhTGscAEQEAAYkC\n+JQQYAQIADwUCVIGsMgIbDAUJA8JnAAAKCRAicOMMUic59oqeD/9SvgUx60AhyCPl\n+1G64eII9M2LU4vmHj8g6wnjh3xaWXvlQU1xnz/5I0XrlbHm31ExEHK+7Zla4AQ/P\n+OrJhMNZh9oes3iOh+pAEn/vtixddM/oiivLBxMcIzq31PS8lZWrAjqOX/FFYa8GM\n+NZI0bNWu92J7cL/bRVwsIVUXh2DkUu7wXwicNERYkKDTBaK7FE06C/hIGTwmENlR\n+b1+H7e00nzWqoHyd0fhG7d8RaF2IF95YH5+r+aS20cHVCTI/0Z32FmlnCA6QlkZx\n+JZiXKssHLpegeegAOOR3t2keB5rN4J/8KSzIEWUG5sjXkshMIM7w1a6urc/iE9PW\n+YGgbG7Wt1AcEO5cnU72DzoENrOxRKdFLZWemLbncLPTY2GERPutJgDSYvaxmwnQy\n+eGsnRIOmAMgN9+8NEs9wZnzrYpkvk/Vw1FwNcCCUYb0ZPYoRVRhP2UXYm7OxdKdk\n+zPXfS7Uqs9oto1FiD7iomhtBs+RW8ndaO9wHGoCn2/UAD9fxNIkTQvK61amyjGX3\n+gdwrOwt73I+wjgt78jmZsKfnPWYnOIUg2/12P4iB6KhWD8MIIeFLl9TFfZ8f06WV\n+WIUTcA4cgSYgGOScxB0En+B3LDCkmVabu/JzBedT9N8rXvgdywk2UR4vKqiyJT1O\n+9ArEfToN7J0gclhUoadr0im67BGyMZkCDQRVXu6kARAAwR/cg0kJja6u1YToEM+g\n+SOOPZK6Bn745y0cvf6+YFVefLcManUCyI+/DWZhO+D/im569MApbTz1qdaLE54Kh\n+z2CtOJBlWP8cjlnVZ95hBK+Z9COuk60dXI7DySRn3DVryNpYjRCe+8SBTQJSj8b0\n+JEk5VVYPYUOIc3L6g7LBL2/ycxV3LVFTQ/A9LGBev7y2emgC7lqkPPoDU1vJeO1N\n+4G0nFsIxuml81pfgi/2aMbGF8l7LVAI8qMc0c4RAjL/yTPzVX5qq5+zAaXMcyhgy\n+yqOvlXlCG9aisnmPCEiShxmLvGfGdPmi+apxZNUW3384vVcOxzl1VcU6sVZT30/a\n+Jaa8RxZqC6S5kOr7uPO8CD1wB1rXzD8SA4Adcq9SwOkVE7QfnQi6+BIgdrsLKUfg\n+2vBjcgA/IsLETlnp2792m3w01OKe2/w9Uq3N45lWVTNVx2UcbWAIz6bwWoMDJ1DN\n+B4XQHb5Ag+VI7lIGr45Ep4ohOfIcpBCMa1WVGyTYoQFc66mPZ2MotADOHtgGpm6v\n+ZyJEp2qWj0at+tDepf0bFPHmGGhVj+N4HTBWMzsu3sLCAh3QWStr+gkffUl2CsdG\n+Y3RL6kVkCCW0o/o+V0mc8ZV8kAtFPyYGllsP9HEvjeXkHg+DAvRFZhSPI1mxGkGg\n+gZlEtHqZ9Lofoco9wedCJPEAEQEAAbQlSm9uYXMgU2NobmVsbGkgPGRldkBqb25h\n+c3NjaG5lbGxpLmNoPokCPgQTAQIAKAUCVV7upAIbAwUJCWYBgAYLCQgHAwIGFQgC\n+CQoLBBYCAwECHgECF4AACgkQKdS8tkFvU+ytjhAAwQqTK7pSjSSK91QZAvsV+CgN\n+AzC8AydcdpWAnJpsE+nw76snAexMctDfae9uPSGSVM9PAgouUg2YJxNd9RzPCv7j\n+vx3bevO3ArNZxvdKSXffPVzt01j53z99/Ltmev5rpIcNQk2nqL3iZaZ5O7Vxre8k\n+H5KxncFCUxlnX/stLz9WOmnIN1X5qVq3lSzh8xvm7DuyOmi1Z94GHCW4BHN6wxtX\n+nXqYeI45jPcbuJWC8P8qtNicZ0N2XLjpAoLSvQ68VTrvvLN0X2HT9Ol9y5t7re8J\n+PEY52TvrPCLYz4hQD0fPe3w14LkcdbWTjJwQ3Y7KWd67SOn+l8VDPj2jT0yDBDG2\n+YazByLqV29SgXm9WsfYXYF4FB9NSApbrAmhTWVa4K4DFXrLvcIpaIR4Ii3JQZDag\n+2tO1VTgxF+10S66qrwXwawBbGfDVchWgSi9T1hNn2wgLypsLN1ZDy7ixPCD+SHHd\n+xgTN8yv+/WNRNZ+LtUKNCIBHQmUBesNfN+wOrvOoWPAP6XjlUIlA2RIH6zKcNbDb\n+a4jjx1ENiHAlapVxzPTQiTfj0TDRXBdjboiswXfkN76upHdgdMdeFz9hiH0PSbxA\n+TmlmA7NrsENHLp89SB/gnGT2I/lLP5/DsoN3Qv8GCoy7aUNDT7abi1AeoBVVye2c\n+AL3d+hDPgOzJHjf0eJGJAhwEEAECAAYFAlZFyF4ACgkQInDjDFInOfZtGg//f4xQ\n+PvS6gQdIosesV458LtIUnrqdPx/8PGnIbkObSzjevEoj3RQ+D7PHvF57lj6m45aB\n+Tr6huXC2RQzOIjRXM9dYi6SVZzQ1xnjMep72ylVYawQS3VBeuQbhU2BgYTeLa55+\n+0sHBA/hX9ufH7a3UvSTgvssX44SH5mGg2h4I3O+4cNQIDf/G7xkzkJKcQmATRmIR\n+10JaaBKtx4JVNVzCWTOpEqW6/QA8X94LapK8Rh/mhKyd38v3CEHI7hH0ex0o2mOF\n+kAsPY1vvfxWzGKMolJp1b/1FPcb7Fl+nCoqlfnv0cCnZYsQvYXrOs/1Kj0anv9yR\n+iutEp2DyaAnhadadrFpWjXQNUeYtFlJ1aC+6HO//uw2spKFqcQ4tTvu9HgHJO1gn\n+GTsmDskwXqHOYNvH9QjtwlhPhOWQdHgLPrWBiUBvkT9H8uoNRGWg0VGA4J51IkRh\n+0ZyoLmRgejpj7SOpwLX6gemprn0Z4fgohKyj6z4/Bop2gliXSPB37qdun6M92g8m\n+SkxaEXF2ZyIXdeVRT6Xgp+zoGDNbMG3PlhZiFFCvH3Hk8o9zAz/65de6D+14EHYj\n+WBRKfu7jaL2RSwUSRwRAAYKwu6kgRy8G7+4SihuSHT2k/90il6iwpzXdyY7qQXWG\n+VxfrmGWZLYT0u7d+EZ1pc02UKYCFptlVCIZtaQK5Ag0EVV7upAEQAKpWFoCqFFqQ\n+5xH6+TFvbUFWBb1dWy89GMXCkmqAsoy8Ss2Ru8gNuy7Xt4l1dQhVpN0QWiuVGkEO\n+f2PmXQhnLquaSz7XLZjjdO5E3kYzcwOpIbb2TCWH4QQtHEotowRslQAXAZ53jN9u\n+NIEQHCPPBNocj0CLQmZl+av1MqRJrRcYzgkPIs34mBo6iVoRrD5CkSohbz01BMWJ\n+ZLk0E+JvalML7+ttiwu+gI90uRGiKEz5xsDMtyx0mAcAm+/EjcuQbhGrD6p7dLKv\n+9nuUU/T743N2LoDTBMzvX/JXjoQ/uS1nzuiJrc/vYHqy9uucgviuYWFH/Q+LhwMr\n+6tjJYUiN4JIQ85OLvq6g71RnpWzy3ce25HL1YWbLNuzi8ZKIB/sL4LXG2iTwwSFk\n+tVjfAc4zP/VWpRC5VbxG76atRkPLatgA6b2sawgQ6L/7XB5Wd5F0bJc3ndwPBKos\n+FFXgzOBgOkI6kYERQo8h2GzWfU8LWxl0a420ZHEfUZoYmitg/evA3v+23FrCMGg6\n+2cdNzU5/mqsQ5HWktTQ5BZQZyn5UT3zpNCOVyeZc/ezzGXcWbEXOLQwDcolxjatL\n+ED3eNA1OMQD8S++FPPGCukIzCyYiPq49zJCTMCWd3qTt2Bwea9xOQnoetCTU9goX\n+/eEGj/1zQDAXCGOVgdd34VrOX4qtpmp3ABEBAAGJAiUEGAECAA8FAlVe7qQCGwwF\n+CQlmAYAACgkQKdS8tkFvU+xj8Q//VNzFYM/kyHSa0xio4e8vBZA2vmR8IEUmtOSR\n+zr487Z8W1dapGxR7OLQ52oWdRZVpG1B5rCuJtsWbjdY94Y8RpcO6FBemneGebBhu\n+UKc60qwEanYnZva9PEFNyBzpj3xk3Ms7K4O2dZTcXPGj+hlep9Tjo09sklqbKfgW\n+2fCUu2EKXWwUrnZ2LZtb/Ya8WPCrsbJFk+WbrLhWt7jIsadVl4AfblcgBGb8aN98\n+GxnYOh+TGSMJtq1NSfchQwLHrpTPYm4McAwOBBYDdA+ik3//eLbwRiX9szFk658p\n++4LErMBJAKLreSluBkqOG3AzT22Hdffvl8G2U4WhPPG33NzWomb+wKohjjzMVUlx\n+YRCO57wkURqEW9/+a4riuBWGQqqRsW1wHEMu1lYdAhLJ5f0s3vO/fVe43ktaXNjW\n+6k+mXDlIdKkQgQ736sBk3DAUc+YcmWmStPr1+TtT91eC23GLWP7gVDnNGEOBOscw\n+U+m1bEOJN2duAMJSRK7U0r2ipmRKDcwK9XmVpJcTePfB2l+T3RdHEZIOlaTELEX6\n+WJfpU4Kc1KJeKdp+l9gf2JD8eOZAlwxA4r2wxyzoCVg1Bk3XiBfoI7Gl78Wysp+/\n+ChQcErPJWEUglBfrESpqmjxH/qSy6yjyNmd4Az2ii7IzWILfuheZR4drjHQj6mCA\n+S5rowLE=\n+=ZVPf\n+-----END PGP PUBLIC KEY BLOCK-----\n\\ No newline at end of file"
      },
      {
        "sha": "aef614d0caaf85b4708fc34f8fa51e3c16c6b4cc",
        "filename": "contrib/gitian-downloader/linux-download-config",
        "status": "removed",
        "additions": 0,
        "deletions": 38,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/gitian-downloader/linux-download-config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/gitian-downloader/linux-download-config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/linux-download-config?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,38 +0,0 @@\n---- \n-name: bitcoin\n-urls:\n-- http://bitcoin.org/bitcoin-latest-linux-gitian.zip\n-rss:\n-- url: http://sourceforge.net/api/file/index/project-id/244765/mtime/desc/limit/100/rss\n-  xpath: //item/link/text()\n-  pattern: bitcoin-\\d+.\\d+.\\d+-linux-gitian.zip\n-signers:\n-  0A82509767C7D4A5D14DA2301AE1D35043E08E54:\n-    weight: 40\n-    name: BlueMatt\n-    key: bluematt\n-  BF6273FAEF7CC0BA1F562E50989F6B3048A116B5:\n-    weight: 40\n-    name: Devrandom\n-    key: devrandom\n-  E463A93F5F3117EEDE6C7316BD02942421F4889F:\n-    weight: 40\n-    name: Luke-Jr\n-    key: luke-jr\n-  D762373D24904A3E42F33B08B9A408E71DAAC974:\n-    weight: 40\n-    name: \"Pieter Wuille\"\n-    key: sipa\n-  77E72E69DA7EE0A148C06B21B34821D4944DE5F7:\n-    weight: 40\n-    name: tcatm\n-    key: tcatm\n-  01CDF4627A3B88AAE4A571C87588242FBE38D3A8:\n-    weight: 40\n-    name: \"Gavin Andresen\"\n-    key: gavinandresen\n-  71A3B16735405025D447E8F274810B012346C9A6:\n-    weight: 40\n-    name: \"Wladimir J. van der Laan\"\n-    key: laanwj\n-minimum_weight: 120"
      },
      {
        "sha": "23418e0f3cd8f671293d01cde701a435fb958453",
        "filename": "contrib/gitian-downloader/luke-jr-key.pgp",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/luke-jr-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/luke-jr-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/luke-jr-key.pgp?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "47bc404554b41866c5626384c30a9e4f9261958c",
        "filename": "contrib/gitian-downloader/michagogo-key.pgp",
        "status": "added",
        "additions": 59,
        "deletions": 0,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/michagogo-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/michagogo-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/michagogo-key.pgp?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,59 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1.4.12 (GNU/Linux)\n+\n+mQENBFGeqJ4BCADb7SI3/+q93gIvN0AGRg9Mtz73OLIOzCHeeoyn+tp7JcYNzxkQ\n+9lfeXiEfn72Sh8gHkLtLIqr7HlIMo8DxSS8JPRVjlJGkNyAW4SeEwN2wNa5OV8k0\n+N4jBa9a1csFyCyrEkPKvkUpBkQDvNXjNxyEhHwyZqPanKxy6NXIHOJji8ObOMQXI\n+T9HwJrpjRth3u4uKG968JBTEyAXAmkt0Zidl1Ykgzcedk4mJSE9uZCW8DjSv2wML\n+XcQz8+dYsoskT3KRdkowLHxAfj1BNyNc1+rKLghliM5vSQWi+Lbhi1Bxh4sY1UwA\n+lKnAGqrnAGyIvCtkwTq5QI6ufF2ZY44bvVgpABEBAAG0IU1pY2hhZ29nbyA8bWlj\n+aGFnb2dvQHNlcnZlci5mYWtlPokBOAQTAQIAIgUCUZ6ongIbAwYLCQgHAwIGFQgC\n+CQoLBBYCAwECHgECF4AACgkQgsXACWKOzwzMUAgAuqUmK10xE5C3lUym2f72z0t6\n+a2NM5Wfjr9//Y1/okC36C5XAMEtN2UwckPzzJ5p5D5y5yzwfZq5Jd8Py29VQIMsV\n+7FbC1a0H3D+bCyX+JJ6FAmUbnWOQ/+mydYc74RvD8iwjePNT6kziZNv6dMGctJTl\n+0alwjtQYgyGkeYKnIxbcyjHX/IawLUrunb/6mSKun87T8+NM/omfFCTc3l8TakpM\n+0wyNYRiUkIfUBvB8sDUU3A80qKN/hqRKvlFu3+/kMiAc9ZYQrbmsB+sYWdmM+4zw\n+8NBw3yuYzWyPuoa4PR5ZmS9F11WLMR5vTRCdLudAqYsWu3LtV6vAIvlOUa2LMLRg\n+TWljaGFnb2dvIChSZWdpc3RlcmVkIG5pY2sgbWljaGFnb2dvIG9uIGZyZWVub2Rl\n+IGFzIG9mIE9jdG9iZXIgMTIsIDIwMTMpIDxtaWNoYWdvZ29Ac2VydmVyLmZha2U+\n+iQE4BBMBAgAiBQJSWarzAhsDBgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAKCRCC\n+xcAJYo7PDA7nB/91wAiaMlU5nHLUu0anhNQbGvUdFgKK1zO90S5KzUdJcY438jcS\n+UJW1az8l9U9JBRIfPRYVhz/Z1TAJ+dCzD7D8BXHFeGEr0zNOh87ly9aB5du7dpN2\n+oSBD6wLcJpqxt4h+XjSS2CX98/2ZIJxXENE2KySaTXP39Xl3eNwvJTUBA4XlcMey\n+J8KMp/IERli4H0O7vRyLgu3yYpUArTqAonzG1g2lfB35PQJfeInrRSniQ336otnZ\n+A8qwJ63kfUtWVDRz0g1fnvtiLGPivDJaI5hyIaUeJPaXU1+sg7YNroDu60o2NGZh\n+F+0IjHlvRfzzA+F9Vw38rpSqR3BmCdjf6Sv3iQEcBBABAgAGBQJSWa9/AAoJEH+r\n+EUJn5PoE/hgH/1T2dAthVucA/hzY0nl4SMjbg+dzNlYBq00Qwx8DRKVjk5et8+kY\n+oPI3DGILcr+ELnxNekeMv9WQBBtJanUh1K5ohZ6ohoR7lG18LXf5HCdspflB5Me6\n+LMA6iMryEP6gIs9GFuoGe2YQavm58YrkqhcPu34dGN7kdurfEXLvDfVlh5ZbKCsP\n+Gyd7Pbz04SpqykgK1udiTsLVjc70Xhv+jAMqeaCugDX6TLEwjVmZH/xsyKk2Uh3V\n+Oib5FXADAtKH+vSqqhFpXrw7R/NaBzvCbas8l61DFHiUg1/bo8vsV8MtGcyZmzXJ\n+C5Gm0njtGOil/g7JF9siUrpxs9Yyt/h+T2W0W01pY2hhZ29nbyAoVXNlciBhY2Nv\n+dW50IG1pY2hhZ29nbyBvbiBHaXRodWIgYXMgb2YgT2N0b2JlciAxMiwgMjAxMykg\n+PG1pY2hhZ29nb0BzZXJ2ZXIuZmFrZT6JATcEEwECACIFAlJZqxkCGwMGCwkIBwMC\n+BhUIAgkKCwQWAgMBAh4BAheAAAoJEILFwAlijs8M+1AH+IU78ARblqTnJeSl0iWH\n+mEsg4IBK30Q6/exDAcqOEm1Yc171uw2WnGmIvPYOQqxrRTvj3LoQ816dU6jrj6vY\n+s+XX0R2hxy7ILh17D/3UKnHcddu7rmc7pNEqZeBXaMughqQaPOWkAIe52+qK5tsl\n+sWllzTYE4jo29uZ3dAtDcKEJjBo/pIXnu1GOslE1+V4X1H9WDlwrS/JXHzyDQAjt\n+maPR+3gNesDanhrRmrnT3ZXW2ZVd3vGBibhia8PWUhU1uwOH23ySWXncgsHH0Zad\n+UMjd4w3YliZP/mLn2ghAxHB70IO7lgAgN3HYZeFoufP3pcK440A+CezfQiRcjHl/\n+oIkBHAQQAQIABgUCUlmvfwAKCRB/qxFCZ+T6BOq9CACItsrUZPKGeWSTkMHknMrV\n+K5vxIXJVCBb+Tppc0Q/J5p4EkW/RFhTwIP2zw8NLDKMh5oO9md4LXhvfIZkqQJFo\n+6ZtLa3Vf+Kj7uyxezBo4QHA+G7tDsRGaMKVrEMiyLCwS1+hg9VaNzsf7zmQW7mYE\n+vTLMHp3cVaSU7Mh2Dl8rnAaM/DpTUZQwZ+32Qrb/Z4HSa4f278iqoFpjEbBE2KCr\n+vT5yEVvpCZ4lwSgA2a+uTlRTvVV6NA/kpsxU64tmhuEOjy+ToDqJ8wv4mqvWZxMv\n+C6OhfVaXBy3U9gG8aQV0ffXGs+TbCtv8ApHd6E1/AVk0oyZGJaBVrEl688bBIWd/\n+uQENBFGeqJ4BCADFmgR7oEGkFFB5qXnuNYFq1nUGDAh0dLNtAD3J6EMxUZEXdmp+\n+DQHJw6/eDRQaG9EbjNZheycbVUoI8K2Y/Z268HQueGuIEIJv6cZYXoXdWCbDD4fn\n+HMNUX2wNlpDqWxb7PNUEtfU9hI3gmHGlr5OiEh3iV06uiZg4n2rbWPbj45m5LJzv\n+wpCrUA+pLcl9Xjw2cajaSTjdXHk9gvXTCo6s2ZS3/3Q4l+xuzZp1MGNzPQHASMKs\n+wecSJKkYg6W8I5WsVlPd9a8oQCc/Nfz7BPw31MRVR/SF5FAMqaXx5uLwghVdHB2i\n+cLURsOtJlCfP8W06gB7yS+MH45Jq/oxBRiJBABEBAAGJAR8EGAECAAkFAlGeqJ4C\n+GwwACgkQgsXACWKOzwwT4wgAy6ICcnBZ9l2jSu+ldy57F6jf5kpKZgB9NV8V2mMA\n+NeY1wMQ4VTVpU4t3s4E2LYtGNJNkPQVHbt1Pf4dGPasvMPaHMamgwgyqgYixqs0x\n+D5PdKzVrfnjwTTr/ZAFdccSPmvy5/hbY0geQ/+mzdbL07+xaT58JIoG5nySDKhmC\n+VeOvhDZtXMVAhEWBDPEgh/H9sEuBgMgZrzfE1j3q802qiXeQs6WtadWlQ1RN9Iq1\n+ZzIi6u9/BifEIRI0pO/WwKOZdXLTemFUoakoe7uT3A74N96t0G9LZVihYbEoO+Pc\n+5IaHPBV5VLeR3TB1LnnjHVf/Fwi8cnGy50kNWjcbMyEDag==\n+=jyQ4\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "96f160aca6d5c1812cdb36bd21e8481dedb417a1",
        "filename": "contrib/gitian-downloader/petertodd-key.pgp",
        "status": "added",
        "additions": 1901,
        "deletions": 0,
        "changes": 1901,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/petertodd-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/petertodd-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/petertodd-key.pgp?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "0870c88b9b3608b761565063dcbdc33536250227",
        "filename": "contrib/gitian-downloader/prab-key.pgp",
        "status": "added",
        "additions": 81,
        "deletions": 0,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/prab-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/prab-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/prab-key.pgp?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,81 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v2\n+\n+mQINBFYHMLQBEADLpvMbTQZ28jaV/tEcHpt/a2YiIqBdNreh6rE2MkTTjdkZJ5Mp\n+RAFOTrRYRWyBL9jmCjvjt4TToiV4quv9ubRWdTKn0cKaqcl8kwZ5rtoX6EEhcLJO\n+CAL13kDzkBrG3OqRxM7VWn/0IGf++Eq0yT2eqBi7Ae3FvC4m64TKLI2NK7GB/MQD\n+JqcXuh/0yMsPiCNZrTDBX+3SzTuSLjWt2Le1Ap2nWXf68cWqP6nhT+f76epZyA4D\n+NI48/KeylUzPSJtqBmBM+YLg/XGcxDpbIotnr7D27ThJQIXDzut9O9f7RjdlKaeh\n+G73W/hDqTqLpkR5LMa7K3unUuvlyQqYGXfHINjJibNUTLCi7YcJtuDv/DJwQxu45\n+/UUYS2xH6HpgOTdWs6VjHRCDzeAoKzkdDB+8Mvi2lZXxY0iFQeQtRNkmN9D3M4oT\n+voG0cZWjPGeKSalGVSRS3TGhdf+IqOPhOl9yrwEArlZ8HtsTUFdx/jAsWHsycCVb\n+LjkD8Mdgit39UZCln3e0bY862wF7Gm7P3ITMnTofO9w6Pqffh9WWQBtLrxIXrgII\n+vstC8H9ajIl1FDuYs1Mf8u7iq1zHh6GNzoxkm+FEvYc3mkSfx6KJD3STWqSrJcQK\n+q/1SsjBb+RiuqeFdY8krWfm2xkuUoGLEQnr14UQz1hQTTLEgSoHBSHxuHwARAQAB\n+tB9QYXVsIFJhYmFoeSA8UFJhYmFoeUBnbWFpbC5jb20+iQI5BBMBCAAjBQJWBzC0\n+AhsDBwsJCAcDAgEGFQgCCQoLBBYCAwECHgECF4AACgkQvNBNjpzMrCp8dA//Yaob\n+cnFuzLjIeWyz996DPJvU62WmAE4GkZot/wk+dtIAnOCxO9YbhWVU/b1WG2PjGdqt\n+LiB6COG28/HzJoUh2zjG0lDcjvu060Bdw9rQ/kJWW22ylNAoKiY9jd3Abde5nBGK\n+0wwJ8+aMMDrO6euwgcJymJ+yZ6ZiWyG4TXXCbSdCDSsBtaaAugMlzZWeyEBEgUK4\n+nX3ZCoNiF3s2bYojr6VcgG2clM9gsSBW03XLW3lRLOvDFmdEAFp8KSJNSkGBlcOS\n+iba6zAKTY80W/+D3soBP6Lr2uP0AOFr+ZnfxvaH9YvXIFDq/jT3CH2RxiZLd1m59\n+ehUbU878ebOMlJCJYiUBY6H+vChytqy51o1np+KTQtpxKzigWiPbtyJ9zYoVVczI\n+Ds8APCqL729BPMhhTDm8I9jeEhjXNmmiJjGVJGVB5X/3w+7jQrEz6f1Ebi+cCrgN\n+tfN22bMs9hh5KkQ4JhRVfDM0DOXCvokXjdo9yXUf+Doc96ruCJKH0qR9L7qIASiD\n+hSEK3CNGY1G05Bb4wCS+FrexL11whAxlX7HCwbgjgHu07QJBYITdn3J4fUFYGsyS\n+G/2D5aLASiKGfq2TL1G9e/qI49/TksDQ6Xy4ue4cQYbf6JigfYjDcSDOZmkHPuXG\n+kSd60WPWJT6OqLrhq2c7exYCUGZaKrWBoie5yoGJAhwEEAEIAAYFAlYHcWAACgkQ\n+0cuiohvNiPY3BQ//TVOxm3UncyGyXOs+ss3fBSPE5q3lR71H4uo4CxE5pi9Y10tK\n+Qf0ULe0gRpnF2FMUkCCE5hu2oG+kPpqKON8/jwcnRCO9h2AndIZ3NRPAOXO2pn9f\n+bkDHMlInhPUxDk5zCHMTOdCONDvhocZ69gYHJdgt4w3Joji1YxTkHr2n8dFyNY7Q\n+LgqT1tpuXgopjKsUcYRhDCRN/iFsMa4D+XZR+rflvX5hkee19DzUIWmaHitfHZlo\n+VsJ7uVZKqUevS3rbBr3i+tpvvlrqDXAGksGWOdK7QFD6GtRgOD91IB82K0NvyX6t\n+M0TMh/aAAslxfH3YeTIGnETuBkp9QBCa1c966ipoHyzItmK9sF/ONPEfYR/ad3gB\n+Nc4G5w0UEROX0v4AWMfYc2CD+un3beH6rkWnopsIRJcQ71XvufqweWsPFALuBBzR\n+PTiugTi0SSSr/ayA543s90Ko2Fxrg20UYJZj1u/DEukpNJwjRSS/yyjk0hMWtzW8\n+rY1Br4Djbq3uQQj8EQojHgg3vlpHcbO77kXIJAlWYIzfHY69RGXCQG6Y7tavIiXm\n+vveP54CPFCs8Kl9t8Pq0IrWKnBGklE/KwfMzkzvrKFmi+nk9yRgwyN9G/geQt4Vo\n+W2mHmO1lvY8Zu2zpzLkvkYGXpL1VkIefmBYV/SWgyYGhLOJIFodJcMrrnje5AQ0E\n+Vgc1VQEIALsxaGYOnwWdgE2e7zX4uFz7jY5fZh0+RqGOe+Sk2g/QVKEDSLDgVF/V\n+tneG8AFgYukHPFCm0IZdKrewrkzdQOwxjyxiyFxOV/LYPesElVe8OWIs0lrMrWlL\n+ZLDguF63wnxWhjolfBzQAG29UTXYaJt6onEB59R2l426LBl3W9wvq19jolOECISw\n+r9z2IRUJ3poqBckT9j11p8yuPjGyht90dvg4htGPBV7nHDIijUnqLfk9mnAj8NwW\n+2Gf7TwW2uNA2rHV6riFzYVe2t1sB5Gdlx5ostJzo67yIc5Dffca901VhmpJTUPox\n+W2KmTpl3ObvaS0U0mkAyVObVHSuT6UsAEQEAAYkDRAQYAQgADwUCVgc1VQIbAgUJ\n+A8JnAAEpCRC80E2OnMysKsBdIAQZAQgABgUCVgc1VQAKCRAyXl7AXCempkrrB/9H\n+tOAstawkJ1IflUztgknEDE7MWuNR5XGqN7ROJAZvL8YfB5J7a4HJxTzCWft2QQUu\n+x3uwSfBpm+hRftBjm4aACrhDS6OOH4eFOUIdDASb2lgnhLmygKhAO9LW2z8jSrRs\n+tKNj9nyCo56mtd2awFESgpskavv/ilc9wU830C82FFdyBqgy5OBdWBurnb3SV5F7\n+23uD1t1n8b9gseIxNdF6Q//szAeHa4VRzzqykExXqHCEFCtH2gs9EjiZ3YeCyygK\n+cPbe6/+FP6UD810PBqnWaCShOIeT56JsOu2gMZ5+epWB+piUTn38N2Znu3EA3Q64\n+Gc7P8AtrNUCv56bof5NoTuwP/0rP4n1bsTy7siBuPqc9YvYkVCxNsGmg1Qs5h2Jr\n+ZmQlAnz8JXfi/TRxarUNQTZEsXVQzq+4C9eEMey440kXvDE2sd3p4MKnbtkDmahJ\n+XcMG5lsMMAQTpmyBf1EBEIFOwjZBqUqEkHl4FGRpEx/Q2p9/pVlogGW7SE5Ck6W/\n+A63ClJUJLsHaWiv9zJ23tzT+ooNy/iO1Y+GfV6MY1tBfLd4ZHHd2n1urFB362sgY\n+2x1TfvfXN0Myw7m1X0l9bYFycuuWfSo6qK+LCU/4P3jm21+i9lWBYX5l+NLz5mlC\n+V5aN57zmtGK7QMSp+6VY8mwG1TuhUt91S2fEScLax6qEASiEChB8m3YJOjKycP27\n+Sq9WactijiVTPslHjCNfyM4BbE9crAbDWGkIbzbka8ix3t4uBWt0YO0Ug9S3eZBt\n+w1OVxUI+LWjF5XlkfXn8W+pZ/C+M9Cs6QsAXEbfHXVZKwlAGZfvYE25UTr11RRnY\n+pl8JZglq0Z2Gip3YzJewC1pjjQTnnPoPT79elBuPmiGwNm5L8HsKUZ1IMf1k5mQB\n+FX0CilHMF/JAO+r8Obs1l7FHXvO0a95tStcjpFodZjHARi5B3VGghcypy2J9hWfH\n+YF23EcE4GzpqqSEO/SJoxuLNNtj5ZVJOxmeRz2CKCe1sI8xO7wY7ckjRaGmrvK+c\n+dAxeuQENBFYHOocBCACxVJwkGbqcgKTrg6APMxWO77ielcac8FOVpd0ns1h4TGZM\n+iCwwTR5WPRiIA6zuS3VTuPAntnK3VF9fQsLBORHIb4CzMeU3F/64SPt8NFajEQ+P\n+vPsZlyv29RSVmvhIRDTDry3Z/KQxnZ3rzazrBqGVuLBgsG45n97MQ8Xq0gkY42jU\n+VDldULYGMco5zHj/MFSQ6L3z0j1lL+aiX2xIdRyDNzOhRqaA1ByZvsRSsqW2JWox\n+78c6AbclWw0QLdQd4Pxk8k5hpeN/EtneVnFDX3hOq/C9fZs6f5aAKn81WXqPPPk6\n+G0b7KzlUoCWGlO7M5LzEzWmWvGPs7W8y2Uil99CVABEBAAGJAiUEGAEIAA8FAlYH\n+OocCGwwFCQPCZwAACgkQvNBNjpzMrCr50BAApY22DRYqmtALFieREu78BvjQT/DY\n+f9Smkga1YVr9/Ph9NJ5iSVeM8mrVkwZnGRK1UCjk16rsmB70IqlnJnyJGXqPMj7M\n+3ioOWY8fCL8fmLI2g0TbXXKl3e0nGByGXW4pwyLYa/hR7XJMco/PxqIGhEKcCIRP\n+dxq/6U9T9SYe2IkfXBYZAxfUTE2FkRpw1zSfZN3z32LM7ICZ26NRHRWo4Kv5sij4\n+0mYYecFmWdf6ib5pPCI0HmPGpblbmZgR1LoJNmuNxfpgEnPe8BbxtO4mueNW5A39\n+y7gLCmDZ8MaOGxvjGByBoXxXP62BiU910iZZZurjSD+3FD+NUX0m4yxVIZCkuInY\n+QzLxFACr26IYpcsPHIYGnEjDBFw9hHdP6tzKbjzgVSZESheQf2zwit0YYSjwHQN/\n+XGnBy8+p66As61jg8mcAN2Zd8vwFKZOvfEnSsaoK5ssAh8jixhPj+Ujgs0/PB8t/\n+ON20yr+YRAwU+RVnC/vfvrM83mjoz4mbmSLapFz/xWNhoS0ZczYEI5CyxE8peGPX\n+gd/7tim2OqUuZ3SlH5TZP3pdJcqxTNN7iNaWy1wAY/sb8As3Pge/Vv5hSYmHNjQy\n+h/62SSbTf6OZCuUGjy8fvVj51SclVKqGNprmAqVrIy0J+VeTKj4r7PGesPWJavRc\n+RFdDYRHByRDDL1I=\n+=dOwX\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "04d1d538bea3e61e0905f95432927ab2939de0b9",
        "filename": "contrib/gitian-downloader/richardsmith-key.gpg",
        "status": "removed",
        "additions": 0,
        "deletions": 52,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/gitian-downloader/richardsmith-key.gpg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/gitian-downloader/richardsmith-key.gpg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/richardsmith-key.gpg?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,52 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v1.4.10 (GNU/Linux)\n-\n-mQINBFAsDREBEADD88DdBoGu/rMpNYWyzXNWfHI5su/JX1tfzM/pb/iSrC4ywOtZ\n-P7wCqqAB1lhuT94j2m8kpv/VSb98Q7ZURxbwY/zEQnDuifiBCj5hO4lWTdSKgmLy\n-8xVR7WHEYCscKFl92mG6tqDewnD2oX5NyJrFeXPAM9R9jBIDc2oyUVznv5Rb2YUp\n-D4rdIHbEMoe524Ucw8ez5Kxtf0OW0Zbrraq1utbcL3B99FMnoSaXq5AiGTmcI3Xm\n-Mx8T8E6I2gd6ZLEtJbgzG7B8so/0tbpGIYExzatjWEzuDEPAgAB028nNWf8q+SE+\n-G3Zo/ZrCenGYPmDKIaSlqmdhqHe22AGtn+k6gzvLVN9MHY2exIWhu2R8uw6cGCbG\n-piw7HPDR0epgf5im50rr/k9ZgELhURqDezeHCwRBFtBZd+1sLgzMocYybq7XM9e6\n-dcHRZoXamlMibKoYMp30jfyb5mVYwnOJAQNUkFxwZOJXONOvwEyO+89ep0c7H/I5\n-h/4F7UGTpRB84HpkZCK+rxOg90UpOQEAA1OKi2od5DNBtu9JnXOD8Ki9lXHaGgL2\n-H6Q+ugntvsYmcJZ22IkymZ1DPaEPJa8Y/pwovl9rYac1A1v9PFkl2XsE2EZyipmF\n-QjTSimnmvCCIXFSG7yN4iP/H/+vP8kdV2HuPfLnq7i0uIe9q9s0ogtZEpwARAQAB\n-tCVyaWNoYXJkc21pdGggPGljZWVhdHNjcmVhbUBnbWFpbC5jb20+iQI+BBMBAgAo\n-BQJQLA0RAhsDBQkSzAMABgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAKCRCiiuz9\n-atLt+MecD/9qO/1ALT4EH5MewKG6mMT9hrbsIf07Cc0uKl4/hpbElK2iEclcXdj6\n-fXyxVF0+1Vl8Bfkj47n4sL8aOmVjZ8YpFcW59GqE9Me9Sw7bPE5x8Ly2Am+NMkhz\n-myq3aJX54bzUGvBxCNwZYV46DxKjsOLrw2I/Tzt2zjzROlCW/r4IpEuFAQY5zzNv\n-YryzWuaJF27pVZH2od9X0nEfn7qBoDYWEtvlI5jfsL4HI0bd4Ws9xMrkjHKBaFaC\n-H5sxZS7mxicTRf4qeP/XKxdEI461sg28wYewnIBqYm8OEkwFS3YB51hlA1ufi3Za\n-m5sMmiut8H5jq0QXH+LWWQAADOnCbMrr3zbkaueMvLzjUsR1EtbYlpGPHXwk9eVk\n-9XckZ1hMjUl5VCBLzquuGuJonUfb5plxEDJ2MCkkkhBJ6DR3yMpjS//ogi52fwlI\n-0yltpyXUXcgURwvQ1pwpTkjbD09KqUmxViULFMLXT3e6vRc5pH9e7mja5LxSe/No\n-Kqm0RdFlM/2CMDQ0ByNUGWjAPozuxm5PeO0ypS3+tDBiLcgZnayWelsuHzR4BCmk\n-LkXiNTrIlXSJpBWsg5D99ni8VrFGLwn9PBaDrOsztfL8iDFgVUzPbizbEEAbKiYq\n-lo/qnq2nrxR7YtChJQwhKlc0NHOWmqJOp2+AIW+L1LfDiVo3wuH6XrkCDQRQLA0R\n-ARAA0e4sHZQDTZZ9DdmML1yhL9C0DqsBaDTiKQY+s9lanrjSs7HKgv8bK+gTNvng\n-/O0M1/xhSOsgepq5lpdl7h5QqGZ1oCSF3QYxCeGe85g9SKBsUFNbYwdS2JXBwO3V\n-1euBM2pNSmNL0PYiTsWylUQPymUZ4ww2n6giVYWmsEqSF/Ld/kkfODzJAP4AwBIJ\n-f+2GY+vWcvxNKES1JT98p/dlMMMXeDKqcXIIzoZbnpk5gd21oGXbMwaf9s8bK8ob\n-BMqZCORmSnG9npRSfFXDHSa2983nGPUoL8bMzeyDu/1PViclxTWtI012gYp99pRm\n-JXzGiGdBmuLItAQW5o8DWXfiiobYd5H0+PfAX62H5oXTWH1T5jblyxcyA+fYU71t\n-wCRZ93OEHv0Q/RafH6Fr+ltZVnpPmYpJ4gyWpyoP2j91N6KaVyrfbCaN0Cyv4bQG\n-JCg8Ss8UqOnsFj88KikYwRMVxJp5E6MpM0yEuIU+vrB+58yOmeNCQ+LwBNnltCmC\n-9v0YYibMbmUv4wRvScGHPAfJ3CWndRbIObXoMlLs9nayMCqpBTEDGhTKheocQdMo\n-aLt3OJsaTmFKE7iFGKImGgUdD94kbkzb7R+ZRlI9mNNiq+Kuj19CSAVdM9vttjyt\n-whPYPR6d4GNWZFS+Gg9k2Bv7O2cDYh78Go7ywuAtPkcTMv8AEQEAAYkCJQQYAQIA\n-DwUCUCwNEQIbDAUJEswDAAAKCRCiiuz9atLt+PAXEACLd967Sz06DpjMHqgHahCr\n-m1Kt13EM/mbrnoFJWePTp1JAtlzSMXKsWo7zOCC71dyI8PEfjylsZiuC3uL54DDl\n-JlQmlXa6/qi1KnqroJEkZ+YoDnIy/jiN1L3SqMVwUeQrd5N0koPZflpnoAq1np97\n-wWDwK8NqALq5VsqXhVWvXeqjDM1q9+7fO7xDQLFZ0MNhqoMBdE4QRRkw55XWJKS9\n-RI/hxDFuCJlK04eFTU/5pUSksEZZ0vl43YkXlN54qiyOvkVL2Aq9gVgvdaqGbG8x\n-kVSEtJK9XTwlo+BA/sFCMlR4NL1XCrrvv9/1SwiFAFSV4dz6Cg9ObAonNh0mbnwj\n-IaaBzS18pqRzqZg69aZzlKp6LxBYOmZTQuPiwdF0Cn/b5VNtgLKInmOvDvpHFWE2\n-H4dU3Al/B+3o1Bm24mAgLQHGFh4GN4BV1ge+Lijiz+N0sUfPsqtHaP3RNZsm/4oL\n-zyVuoSMRL+NtkB03SID7CBzrVLGWRGgeWjLfLz+wnrDGlWz0N7dKJx76nayTvsM2\n-xd81jat8FyHFFoB5D4xn+czbkCq1k3giyKqilz2NNXX0G7kUiU0D+tvIb76qP389\n-9uiMAuC5q1Ibo+k3pOZrWWHX3c9HB1Qlry9Qw57Y4ncqjRcdMf884da5mTmCjl/d\n-EwL78xfzdw9iYRRwoeP+IQ==\n-=jMKy\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "678ec7e962fae5d91f468f8bdb79a1d01adda506",
        "filename": "contrib/gitian-downloader/scottnadal-key.gpg",
        "status": "removed",
        "additions": 0,
        "deletions": 52,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/gitian-downloader/scottnadal-key.gpg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/gitian-downloader/scottnadal-key.gpg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/scottnadal-key.gpg?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,52 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v1.4.10 (GNU/Linux)\n-\n-mQINBFAs/eYBEADJq87tlE9Lu4dtgzKcnLrY6m7Eab3fPL4aW+g1PC3O4rMn2jjT\n-vp4TU+DHBgt9r+DBpiK48v9fd3BNpg8mB25pDgdWtoBj64D1YxlU/NxbwnR4SGDD\n-nSCjp/Z+ZxTCjUHfAu384P9nsSvMFksVhhzgd9JXvxJzB61odjgPRVs5buJtLzrg\n-v7jJdBZPDC2R9kJIggdrrN4sWhE9o3VQ4kFMxEu3KGJSLZuGRdwr1Ni5jxpo1Hio\n-Xf1LDKJ5+kTb2YpHL9trxe9ELt3HLa5mryCVff1wwN+MBwsXdvxTjF2RXJUWbKlC\n-M78DjLCCyM5T1XPb4D0dp/olEhNqI6IrBhR9rEOVR5Rbsl49lfhQIUEDAVlogAoG\n-yzwQMO/NGOD0NUgQV/7ZIN1fpKPuipJsCId2UvzuxzjwtMf20VUI5OPKRk122OOv\n-9c91y9fI9H6rgHKcS96HLM840pkQmr00CpsEtCjtYxvOKCakCcbq4SHZSrB2gjcK\n-msY/DfEjO5An/LXh5IbEiSSgSXfCTSXMU7yB36yX4CniIDTEe044DlTwhSGUnw65\n-alTp4taaswjB+yhAWI5IXOGifFyOAFW0BhGpDHuWoevUHKYXMla9czB0Jn1VIX/E\n-bAPxi5sZKHjhhjZY6ngZAO2HXliWHXIeLvwjUdE0+AAP5B+eh7kyMV7mlQARAQAB\n-tCJzY290dG5hZGFsIDxzY290dC5uYWRhbEBnbWFpbC5jb20+iQI+BBMBAgAoBQJQ\n-LP3mAhsDBQkSzAMABgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAKCRAu6TbaW7w+\n-y477EAC9yNgDSSdSmqUVQdrPdEn1RyZl4sjAznuRk+CKffi83/ZwjZJkT12GapPF\n-9/wW/YXGGbb2wUK17xIz8ZcKCjZeSf8w0HNwFfy8bOOkewpJ3QMp+PO61KTa1sfn\n-hJvPKQTxKAM49tiq1O/x5hppKCrJjPzlH41+4rfrFk7+v5ZHusIDqxIzepS+MyNy\n-fhmCq1Pd2w/R3zHIDH7R8uuuJKDDkZhhJgQjjxGo4Mqo6UaJOHsmLNGmQi+at/Eu\n-BssrO2OHSShCvA6/fvKXN4XEFxm7w3WUylw3h47j1hXhQClqBJrLA08N7+iNqKKg\n-DX2ePpWIptwjJyqn/6UtEfFyeIBQITpxyrVoWCtdnNdo03AQpraPV8DICyxQY3e9\n-FFKkrod+XKeGqs7Lsk5mPUOQVl7KoCfmW+M1vcvEpK7wElSRUdy0Fw0s6BiYN1xH\n-baOsBIvc1KWN9x//ctJPcjxEONiPDKv1dyWUYIWieSTrFjP6aOLoe0uGkDXxxlEs\n-4X4ZAgLUXs4j62on9lsFH1pVAQOpbmVS06vmmHQTR3skG9D8s4jVn1dyJQ35I0ml\n-P0IH4DazTTld6laYptd4CqlohotME+yh9VqiQ0Tg1u6L4VwYsBN6AKGgOq+T8T0b\n-VPNK1+Si9Poq4J/wPPqUQRzxSgWbX5Ho/k+6t0R8dpne6oFGrbkCDQRQLP3mARAA\n-mIA7DN9DT1xN0uazTRXV4lqFTuG+86iPU35eUtReGcChYwq0V56bV+gywObo4fAP\n-QsynzCUvtk+8FSL++SLysIaD/VAu3YAqsI/shzA/KG77ZqgR3/E6pnkaN8aFVPRf\n-dFFbBYioXP2MkOMd2MqPSnUI5+dMKnJ4HBQvucG5yxdR7VKP9VxBwQcfZEcE+l8a\n-yRyaAr3NNDm69Qxb6TeiJlwSQvcY4FhnP9EpIW11DEIvCEKKr6X0UoWFTm7dSfLk\n-n2e1IsK1kk3Uy45KzrR/4dYB7PhEP0VjLZ4bueXMjvZW8YBUoC6emOU/3B+/j3GO\n-N+62XE9u0Vsh2uzRnOqjucn+i83Og7+1VaXVRh77giWTlDTAeJARRGa6ScmxI9Vk\n-MJgbe2oseDxTv9QF5guqLUNe0MlUZ/9SXXjou/D+L/S9Beo775sfn57gANDbaGRm\n-9795YyAHphl26Qp7es3uj99mlK7tGDHajb2JkJutMtaevGuVNN9QlUrhr7klPOAd\n-6jdAxsU9Sn/gnUBZJbCFoQlUveEjkSu24/tYoo6Oy7VgMxwt/CMhB5HzVOpY20Ym\n-BDTO9P9MBeD0/wSPyanHc+XVepXWwsp4EC5RVnJFLf+o3vmeQYqiF0qXuapLmLnK\n-XqSD+M+uIr15XxTLLx9vsjUVN/xkLu7DCgyVeRA3ytUAEQEAAYkCJQQYAQIADwUC\n-UCz95gIbDAUJEswDAAAKCRAu6TbaW7w+yxsEEACu+7g6trtjYQZ3FStCK8OZOAJl\n-jefUONgZX8woSSmyeVlg5Ex9cSvAgfOhiM2J2+K8aI53woOsiE3LihElaX+Qi+hE\n-GgjsFdd6lNn3i5gFydDHs6uLvtVAXxAOOOaXWT/ucsTgBRGcY4H1QYlkTGD8Xsf8\n-qyUOzP/s8RQbvIrGrQtLN3O9r8wDBzDdZZjp/IZZaY6VT1r3AvF2mX+ip8/OqxNc\n-Yd3qxf8s7Kyn0eChSq1DAp83XMWxCje2EwXXzDA7Jd0pMAppWevFks4INGyCxz+9\n-jOZ4Ris2a907ShWmIg8bw40r5L69j59qPk0fr44X6XVguN9zmKpLV5fyY88Qy9iq\n-8uy/3UVprZ0LnPbBXhbDsFkgiDOo2zCJfaVhPirMlpPJg/T5pFyAt+klrq6bD+tD\n-50Hh9gOpXXg58bELJhOtDUCV6Froc99LeqoBvlKJWqr58QguO2mn1cFJcP+nVzxz\n-DBpB/dWsmQst/NQ3YlgfVr6CcgqlCqVI4yNT91Q5Ns8/pdkcUBIVDUC+4oyKwA4n\n-XZMmydPJDdUiluwVSeIw0N/jiZhBJvMJHlOQ3xmb8In0WXcnE5JbibCITTN/T224\n-jL14ObF+aMWlFanqRDUwllEQFv0Wa9dgTaHzxl+l9Ojw+YaYt/96UTtEJaMaxmww\n-JzdBFnCP7RoNHIQ20A==\n-=CQsQ\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "a1930ddee905f688dcb3a189a88e1317e7006a0f",
        "filename": "contrib/gitian-downloader/sipa-key.pgp",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/sipa-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/sipa-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/sipa-key.pgp?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "16b2a40b3c4d7355411de311f313d76313e0ea5f",
        "filename": "contrib/gitian-downloader/sunnyking-key.gpg",
        "status": "removed",
        "additions": 0,
        "deletions": 52,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/gitian-downloader/sunnyking-key.gpg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/gitian-downloader/sunnyking-key.gpg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/sunnyking-key.gpg?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,52 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v1.4.10 (GNU/Linux)\n-\n-mQINBFAsDOMBEACysMqtJfC7ikO2o+ioQZvHSSbL2R2zdgYxPjtQvLqbNMiJyV3q\n-vwXGWh0Z3eGu/cpHvfN6mguwHqgh319AtU6wiOHX/1yGMf2MUNFhoh8RlDWhZ+ba\n-gMTv7pcZKE2Ca7JgDtLNWd+NpjYrlGDSEEFl2vTohKKd+V7hRjyMc8iLkLjVdtdd\n-OTuFQeyNB8DUMUr3GuaPr52RgidZdMbJ0QSnEQeN9/ZTYjmYfREO+mal+2G/OKMk\n-6naUcGrhwHimc02WDddkqMhe5eZsU3XG+WqrD5NkN3my72XjkqSE1++k2+XgnOon\n-pUOciWfF3R3RBlOn0MlfKvNa/GXZ7PFxke3tkxdym8BV10l8spV++tPuhxovR7Gp\n-XG8Mt66uxlFc4S9wTg5FJilk2W75LK+FjFLAk9gJ24IHUawdSpLdCM+a4/JL1Ys+\n-CQUuQA06Xdq3x8iuZSduRrnLeFEkM/F6JmyH22L8b5ptIm/wgjCaa+R/8P5ROO/E\n-FM1z7sw2RK12ZNPqwrNysePSVze2MGNdPnmb2KDcxSlxoK6Nzcef5xGkP/WwdBnd\n-WN2iA70I0S8DEywpY3hrJ4YIDg+SvCsoRIBH90PUORQ5Uhfj15QbmT2bZrqoFaDY\n-1+dWmijsPJ6+6MYjDWte/WVDSqTJEa22R/SAjGETGmUig7OqE7FFaQFLPwARAQAB\n-tCNzdW5ueWtpbmcgPHN1bm55a2luZzk5OTlAZ21haWwuY29tPokCPgQTAQIAKAUC\n-UCwM4wIbAwUJEswDAAYLCQgHAwIGFQgCCQoLBBYCAwECHgECF4AACgkQGPNEBNK5\n-Xmp4hg//f/rUs1ABrsd7ciHN0ByOH/WKdlUNNvf8jua86mHdPcHAFtZ3HC8ICVLe\n-7TAUMEgQ1Vsmk1QBILCaE50cD9iya4uCYCpBN6RZXUd09Te+ugb+VUYda4NmVbF+\n-ZYidDjLwFZ3MV4uXZLWMGnxVDYVrBDHdfvFkZvi+/thtEME+Ea84diBZcAW/ncUb\n-AMNxNsmOTlTcPuB47UZVxg2vSJWkJe9O6IpuF782+49O14hsxidPMV+BKOaYWwoj\n-wGlJ+NDkobaQ/a0lI0aGHL1KXA58mNMB0i7SoYB8YJMfL2+lx0AZsvxaqFmuMcPf\n-zo7I9UCyf/gHorQaxsbz2/LUfpFL4T7IWt9IJkVe8TT9KQV8T0l9uUaQtX3iLwqQ\n-IRJWdQZMpnENhEgkSLRSkmCV/162ksYoboSpfI3Qhz1h0yqnwHAGBKSbE/2IGVo5\n-3m/27xUFy5+7WeiON7DelYS6mx4UiAkhSWj4/u60YNnq5eTAYQFqawtSwIiO9pLH\n-C1gqOCoakESdFCQfABNsI6paIkfTylZhLd20qrr9qvBfvOgpMRXbO6xBPYp92/UK\n-9uRkFFCJORLBUl9saLfZa4Hw1CcY06IA3XXBx2/kp42aeAnWrfzqLvXwFZGtOJie\n-ajQsJUeDLFjbsYmw9FP8izK2H6plEa3PLFDz2gP+MSLZ5+13eES5Ag0EUCwM4wEQ\n-AMTFatCCzaUPwFpM9GyC7JwIWofDRpZBigXnzTC8RwHnb1ruWliFUkTEeSB8z7pC\n-3DaQ+owf0TUqj0c8Ui3SVfCcQqIJuWBycxxUnSaqWvz7wRaRN+WG4gaWgA2z7k4Q\n-CMmVhbxTaaZ67rfqtFOKM7EaIqOBE+AKg5BCCrxnja/xR0eZxRLwZKXqfakgqXy8\n-HaWOzLPU6zMheTXu4YW5S6jvZOaMRkKI5xEUdQf/UPYkwYM6PaA/o70rTSGuQ/mc\n-zwFZp7FxKqKINPBSJLu1CjhnnrZM37y26I5O+nErDTinvYg5Rkq5wV3gMNbzpOdA\n-qPdw2qkVwKWDErNrA9amKuM0/fpvu/kXkGnfkugvt3Rokc3MQO2u5HI1eO571zaV\n-GoDt1oYjpKPuu6JMe2b5D1fLhyHicGaH8V2vpJi6+01Ww09srKemox54J4Z/Xjw6\n-gyaWuPkCHO3roNjeGMtzbbJeOYEZC/AMTuqmnv3gHXENgrxKjCkkGddH8t7nZUNT\n-zmTMHrqOzhacRIp/6jpKCNXea2FaeRQECtDD2awNxUpmFFQeGpXJGsGc/GYHqvtV\n-HxWOiio1BpHhjCySHCYpqsq/GtGVdxNVz6o7H0/i4wipT7Q2dKVKbSuapaqI01jv\n-40019gtjOV7Gw8fX0MLt3ViCQVHpDxdMN/vkumw9YKA1ABEBAAGJAiUEGAECAA8F\n-AlAsDOMCGwwFCRLMAwAACgkQGPNEBNK5XmpymA//UXydFKX11RGloxzMfdgoFvjw\n-mNoZeS5Sv22hpsS2XswqAIbGdI/s2PbEzLv6nn0ck1PUFn9wL+TxB9GF2wWelpI4\n-qe1mKsedJbj9PG6Wx2Invn6IcEInMrSLspBWiJJL2eP4y1hjAGG4v1wxPXQ4/FNe\n-OvXzAwShz79nVY35MDPBpL/dlhRJAIe/T7pYiI/HB8p4bI9MbtJcfp61oRPt17UC\n-vIQFnKKkwPT99i3PsOqAa8mVa2Ae4EElHG844Hr89ptHrGjudssfBf4kOaENMQqE\n-MFlyGaT9CLrD/2Qs/rXqFz3VAQykw/Cuw0kiRJjS5xKZZjVbz3Zd9suklk6YkSpI\n-jLzcPPON8nC6wvtUus5d0gtQeGx2DaX9n2+ubKlZgTSvT41PO/2Th9o3CgptHYJT\n-59ncrZP515yd0ZMknZ9bFt9BaE3V17hblOjFXoFqmAhwXyHQD9Ffd62AO1h2JNx5\n-BAr4D7VyxJ3WX1yJFtdGsU7iD6ko4HahRepfp8UMtyVRLWVPGVmNq38Tozb4dhyh\n-fk3MxiatbEXQZbvFVr8WfGoNOIXB4Kg68NGxwZv6Jd5lobDOQjVYOykD2UpuOXmY\n-VRanFk5eIy0UWYAwUNP+XnjGHdwtX4ZYh+O4wDnWEZd4soVMXzOBuyWTSKahHhZi\n-KIjGheFAFTRFLgBmol4=\n-=Qxzm\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "0f7032e6438c9529c58837f765497629ee03b462",
        "filename": "contrib/gitian-downloader/win32-download-config",
        "status": "removed",
        "additions": 0,
        "deletions": 38,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/gitian-downloader/win32-download-config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/gitian-downloader/win32-download-config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/win32-download-config?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,38 +0,0 @@\n---- \n-name: bitcoin\n-urls:\n-- http://bitcoin.org/bitcoin-latest-win32-gitian.zip\n-rss:\n-- url: http://sourceforge.net/api/file/index/project-id/244765/mtime/desc/limit/100/rss\n-  xpath: //item/link/text()\n-  pattern: bitcoin-\\d+.\\d+.\\d+-win32-gitian.zip\n-signers:\n-  0A82509767C7D4A5D14DA2301AE1D35043E08E54:\n-    weight: 40\n-    name: BlueMatt\n-    key: bluematt\n-  BF6273FAEF7CC0BA1F562E50989F6B3048A116B5:\n-    weight: 40\n-    name: Devrandom\n-    key: devrandom\n-  E463A93F5F3117EEDE6C7316BD02942421F4889F:\n-    weight: 40\n-    name: Luke-Jr\n-    key: luke-jr\n-  D762373D24904A3E42F33B08B9A408E71DAAC974:\n-    weight: 40\n-    name: \"Pieter Wuille\"\n-    key: sipa\n-  77E72E69DA7EE0A148C06B21B34821D4944DE5F7:\n-    weight: 40\n-    name: tcatm\n-    key: tcatm\n-  01CDF4627A3B88AAE4A571C87588242FBE38D3A8:\n-    weight: 40\n-    name: \"Gavin Andresen\"\n-    key: gavinandresen\n-  71A3B16735405025D447E8F274810B012346C9A6:\n-    weight: 40\n-    name: \"Wladimir J. van der Laan\"\n-    key: laanwj\n-minimum_weight: 120"
      },
      {
        "sha": "e0f6c4c5fdf56ffbd6308d4e0a6624290feadff6",
        "filename": "contrib/gitian-downloader/wtogami-key.pgp",
        "status": "added",
        "additions": 131,
        "deletions": 0,
        "changes": 131,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/wtogami-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/gitian-downloader/wtogami-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/wtogami-key.pgp?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,131 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1.4.13 (GNU/Linux)\n+\n+mQQNBFHOzpUBIADYwJ1vC5npnYCthOtiSna/siS6tdol0OXc82QRgK4Q2YeFCkpN\n+Fw/T5YK34BLVGWDHPoafG2+r1nXIuMZnJIiGw6QVOL2sP9f7PrMmzck5KJPHD14Y\n+GRd9BPkhmt3dXzOCjhig7jI6hKEYayfJNUNs9nlZEvl4QWIBMmk+IyqQz3f1HMfl\n+/GkFDShBYF8Ny7Ktlx7AaXymajm4DCrTkbj5V2ZDqJgyQM549EoPSwXBQYrEjye3\n+g2viC8rUFRFWFjdnx7jFEb1uhx71YGuqiLxKihUW9pbSNK2cLweFazHSVmh+B/pz\n+fxHfUn+ijLSIAnprTmc/rq89un/iiPt0O/mspcCZ6hE5pFIyX+SC+9PrGz+bFSmw\n+PkMOZzG489G8k4t/uZsit6helkl0emg6JiXLTmS/oTuT7B9Z9/MeEhOXFcxUb0fr\n+2aZkEmH5d1oxSBis3D5nylmNJXOUSCpJAZ8E5Sr/5FbF9IPR+NSzosVacqCx5Dxj\n+vJ7HpZKn6pJfmwrghVXQv04NRTcxbHNmwd98cofBtWX8yBO8M2M+jZrU+BVDUbb/\n+A1oAyIbUUswBP768Oh11bELhCly774VwBqTojm2yodLGSyysx4zoa6qL7myfor0m\n+a+K29y8WH9XGmKGMdUOg+q9z+ODky9aToGvEo2eVhKIlJsk0aFAGy/8awy6qRIIj\n+UqLMq6XoFcYlE7SmnFUDDDPlBK/NkFFqySpFhKNRyt69Ea9kYXOxDnf/EnBwHn8m\n+PiFQpeZqgnmhyj8Nk1SSQBgUi07NyXdQ/WIYpWmqqqfHRVQgSE9C1920T1zg/E97\n+n5yYjI/gQQwq9wikkJmog6Ny7MSiwIU4LYV0pTUdI4//EJMId2FH8YEUfvG5ds+F\n+H/o/D4CAJ86KjspizfH8jEjhn0Rm/OtrxLz1rwA1gtF//P3TYNWw5qruL4stP3Rx\n+9Gve8Bm7oCBU73UT2ZJomEsWE3oqXinLRl3YCsjGDg/d3ySD6i0/BBROLIeXkh3M\n+M1CNCqREDGLA0vxQi1o7Zi7ZA4gWPSzvi/8KtSzY1iAQODxWUmOICRP7KQODWJmt\n+roTqhKgZ39wlR6eqkO8ZfAvRYsjvkL+EZFbbKbHxVJLhKchd2qHS+/Q3ov4SFzWY\n+/cE0ChOPDM587Jkps2bynKQAzQ6810FXmJc0ztrPeD3PEbuyY4KNJV8HGViRDJXi\n+wvs8eqfvTDGDPl4aLYVCKO9VqZ2OJvqhRhh71LQ2xRrX1LGnYLnUGCMuEQYKvMcI\n+TSssM/VAfeWAPJDklD0lVNJ7d9Z5ugvJHFc01SaaB47Aod2SPWp5DeiY4A8dcy2w\n+7f4Wx6FcdP1RXqaRZKCapBooN04vsvGllCshABEBAAG0KFdhcnJlbiBUb2dhbWkg\n+KDIwMTMpIDx3dG9nYW1pQGdtYWlsLmNvbT6JBDgEEwECACIFAlHOzpUCGwMGCwkI\n+BwMCBhUIAgkKCwQWAgMBAh4BAheAAAoJELEXnrc0fcENY4Ef/23L9iC/39ekJ8Is\n+1IZdCoDD7/DgVaZqydDcy/ha9uaDFY4MQ0h9RZYo1axVBth/Yxzh1XnvitW8HFKn\n+DXn5wJI++KWpdLMUsTrc2iWsjAGgicmN5bkQvfTnRwn2pF17EUUEhZ8YyE3qMSVD\n+rDBECLAswT4Oiq9r9yw3VCFsRaxz5bhk9AAzWjam4H7mAfaEAOUvuX221v+KGSDM\n+UsGAAe+GjMPL8KnGgEbISlSUF1Ubcw3EChcqjf3BID2gMLkAnGAoxlCZSYievytg\n+71mcHyIf9yF861QrGcrCh6/objtRdt4IDUVwo9wapunRmYCdZux4ApD0Hit8nAsm\n+QtxftSK6FWBTOCIRoOQTjwE8qj9GYTIbUFppX66Dzh00td5NKkWz0PVze7YSk2hC\n+KCVBYyUYHgkQYVlYLZw7dBrXSXv7ph95vc93RDS031cU7tPOrthqnMmhtg1WAwzH\n+xc2v3az9Gsw1RyxBAOVpkB0AFODiEiVg46xqmxaBPXfQOg/buZA2l4gK4U/pVUZH\n+72lle2CbBw6FoSx40Y3GYZWB2uEdXBTNLlhX7q2Jvo8WdeTxEv5ACZsjI7K/wrzt\n+nmvCHefOmVf4tefkXy1MyEvBt2+Ek9bHmHDL1BSk/JdJzJtam2uaP5pGum/PwIUW\n+KBatmHKZUKwgOIml9btB413C4zSK3GQmC5Y/+TxYybACIdxTDqPSczVZ5Q+jSywX\n+shdOoLXDRyrYhT2sHjZ1W29B8ebokqwousF77EA94sqfQvDDnmFpvfq9+m0WYtOh\n+PFF/yxOtlbPJYX7mnC8+dUgobSA4AR5Yrclt+levgivIyNuBwzevHRDMreMZKl2J\n+uiOT8tkuu66fAwEltIowjjV7TBRfij4QLXl/zfFo8jKU8efL3xluXoRn7g+E5FZ3\n+19KTF/DWMcttfeTUYVnv0QTnstb1RGnVj7w8JMy90mKdMQFpl7IzHd2n6LrhEw1V\n+1AaPF7EcQBOlvsvlZdIFQrFyhKozKoGi3wRrl/bNdebxjIjPzfN9GgbiufFjz2d7\n+DMR9GFXfUMVxLncaqBBy1X7MV17ZF7K4uw6DET4fRoecb4N5mJVUxvYq4iZApnNP\n+npgGdmlcyPD6o3ynx/vkw78m13Gfgw8i2OaUY7xBdOyNVEvkJZBLaC2hw+TKLaZa\n+v0RExtAO0i0QO4Y1eo78Pl9jOpz0wkJ4KG0270l1Jza4IyaIhYRDWagWOfOp/cXU\n+cvKKiuJhLOsX1Bapz+O2Aor9+EwWRdPd3BzE2ABdmKHPwrKobNp75wrCpQ5mZifn\n+DSTJRMPQQJV3wGfB2sP0NE47U8w5CCmVK8gEuqYr6wBl/CCq5tjiRc63VM+to5V4\n+tVNTCJWIRgQQEQIABgUCUc7PqwAKCRBr3f6OVKKs8cYAAKCFCLJ5wc+iAVCFRevh\n+xTcJct0fiQCePHpY37CIeP8s9BH8GqCDftUqh8SIRgQQEQIABgUCUc7YwAAKCRDd\n+f+mrhdawLOVxAJ9Tjud26LtbM2mWcPj2eT7dhqgZrQCdGyMwMMVzp40lsCK44PrV\n++mpFO7KJAhwEEAECAAYFAlHO0BkACgkQw35HI5aSdvXfLw//c2zZxXg4bI2W7gkB\n+ZQJIOWnmPZfhrXQNeFuetyGoWTm4ZWxW362AdDGiQSGNNkXqeBPOitKOkRyZP/Z3\n+h1vwkLkwdFZyWXK00BzYBKfjThWV1BAnArQLewSiLlE7qSnsPEY6FW0PNv711cbL\n+lXSUP1/lW25Nx7L76GAF6sHreoIdglE8YH5y310JuFnqPa0uaJG+qDo8Mb+WkyLy\n+Q2A3Atws1tIB9vHsq2FCt9ACyAEA3AqtHR4uMFmIWpUYy77fJAZdzLZTWf0X5XYw\n+XILNPOl/I0iZrq3LYQAvJfIwjWAC/lm6uTLlvkIJHKyhcIT+RocjMV7bY9ezrC5i\n+Cag3gaOZ7USMt0h59KdmBaHHNa32n3PSHg9XWljqoWMRjuaRdcA7ofK0BHDJbHWE\n+cldKXC09laWOXbyNmJsfug/23vNE7fS/cAKSIgEWszEwHJCahB2i/HqOQF0DUGpq\n+3s5oIXs2xIuN0yT6yIIiQnTU/FkWDDu4D1OZNrDW6QG3cde0PRak/0fr4Kv4iB3E\n+CAzlsRBlWKNu/eE4QBx6cbvLqjriijhGAF+8Y1zvRKNKPr96hSsETfVytuKDTp6F\n+u7PAarrSATGXI92Hy3ThAZla0VOYUyeWPktqUMDNq90tIBZbwKpOMMqvJmZfgdOU\n+4ldDq1f5+2WhAt1aTL1GJVCuYcCJAhwEEAECAAYFAlHO3MQACgkQnSOpPExjO3Gi\n+jxAAsD+luooqqoz3A28ZxwfCDV+ovazQ4Bw6hVU0zKKZIz/2H4jwmLtLSHtucCRM\n+xRksZmnqf1p2nn+BKBXDInx9vI9HziMu7fWkzhuovAIf9+X/l6EYV1kQx0bIM1qU\n+BxXWPgGdrgSZZHl9Qff/BOBnrI8NJmVBDzOh3BSs0BrSR7aFbkSNbjk/JcP0JEyk\n+j6wDKQsop/Ca5AboLL0uQPgTvhxCu4VROKjhu7o3s7G3xlxTpimwYklDQuYFaGKj\n+ZNIGFq2orfIMBnj7ZEQVXzhWltlHcgPVP5TDfgd4pVUbyUB6ras7odJWWIHnUFmj\n+1l5bGidIwRXGFusE4iR8pR528LG2KxNDNQYipsKRY9m+wH+N7gbSgK8DxmocvieV\n+vcILFS5VrPLbEO2oC13NMljmvua3ovDB0CEh9rybaH+/oA+VDS2L3pkgATTju+Vx\n+6+mVdlvnrA4mJ5BoLHzrleKybS4ZkbtVBh1KOYmo95NgVifRvpVPB6hKzwqcjYFV\n+fVYBxTryTBRyd9MLsqpPKnGLBENTFvKDxRCK3iioNyVhXdS0z/UyF1C2hwNTpnjY\n+pGCu+Es3SILJg2TvQcwLM0OoYBA1bcONm2XbkTrdCpTOtQcSewQSkijREunx14iu\n+pvNSWeNmbjQU7gNYhvwcBgh90tWgNCfqTtSa5xSe46tmv0SJAhwEEAECAAYFAlHQ\n+1hgACgkQZwn/QC8Dr2hT/g/+OFUYPXfWo0+ILdxyTGP/v2mSw/X3dBCEYUqefWxD\n+umcwnksey+thEGFBlxbwpyOfAoTzZLUupaG6BacVgRUvv8bTne4v2H1d22aBXyjC\n+HMtQPhupn/giamu8q8hCPFrDp6inIAeFuz1GmQaH6xWO5eYBuYXQtxlvZLWBsuMT\n+74en4e3vjczxGmJu/nvM9ugcYsexA/zcN6SRGr7t2pV4ZElPzPBRyAzhYqhP1YlB\n+Rydz60OjgcWYEoJKWhJOfmFJ3ZoNGAz4TGoBkDIq4olCF0/cxqrtHN+ZnEOLwiZ7\n+4ZX90avcjEFtM+Wb5dBHNpni4ISoHcVI1X0ye6tuAOOt7RywbET/0oIW5iSNMgJ0\n+X4XYgOIQ2+a8yjGBjo9I57k0vp1mL6Ji/eaa0dlppcCGnzvSHss+O0qO212pg5Yk\n+GGfjX1y1ZeSP3ca9C2XyOGIVw2d2Iu7OyqAv/N81xt6ZgG3qixQC0nmgOmn7Kh2B\n+20W12KpLxKS8RQdHawGau3MBGKeqbfK6/eAzm22yD4/yJAoW4hKgm84z3FbKUN8w\n+ulYMK9hS2c4egpoDAOJ/QZLLXFWiyi7/sHZz69G2AweWCjOJh28Otg0cUHoLo7jw\n+oO/L0rCsOQMbUuIumYXBPHNnDwv1xfv2lT8tVzf6GksFJBAw0DybxOMTaOg45Lhz\n+jGS5BA0EUc7OlQEgAN6t+BV705uoCsdHtQBq/HKGGD5tBiOzy7Wd4nF/c6EWzET4\n+QUnmw6bDnqjxrk9MWniPDf1O9MvuB4qIY6g9kEjZ+VSQpWUZpZ5bMXCNHrfh9J2Q\n+6oLWqDmpeZv2OI0O9wxT62QaFei2qBtimSnBudLSCnvmU3S0h1PflmJsbj+tVcko\n+w2yOh2bjH1jkVAODHvEbxqyD6fiZhbfUVbPC49SBmXv8Gv0UywNSkP+iqJdwZAb0\n+XtjRx4WjZCkTwJAnbM4CJ63+5Hd83BtWZAZbGAh76XY/cSkDirXtXC+2LNUmP5W2\n+QY+ur5Bvz8LHaqJMXLAtePdkv5kpd+jXBrZieXUtqovxZaQTinl7C3L2TZd/ivxD\n+F3Rko9BFDuXXcdZrxBY5b3146IvSPp1y0WmHRxhAPb+RuiHQMt8K92nOhPyvtWXB\n+mWz0GnW9L6+CW4LKSPRSnE057hyxYNP/DcDd+fWFH+MmhU9noqHfJXSaLVzdI5PI\n+L8N44AndPIojnlxrxRs7Ik/nW6cTV9H3agg+24yyTdFkACbfIS6wWXOHeHuBzmO6\n+VI7pXOZJ9vZT7zI7M/hVci0R3putsGqgRfByRWWQ2DNeyrwUHexZNR/NYz1uhvA6\n+dBfKcuAwqxbdSrW/BxJ+iJWdkgYGCV67VLlO6S9sO33HgOanpPr5R9V1KsFVh4dN\n+j6BjZ4ALE5FPNW+iONnuXvtZbN2cBlBzMDeFC9oZoYCs1Pkmk8xUY2sAXPUt1R0G\n+D/miIb7ig1N52j9P6vv6fPs1ghmc/hGkhaXyjS54B5T33V6M9g+yba9mIgi8ZxZa\n+G+4rlFFKA4HS7wYYRJoqMvnc/qBYvoWLaPu3Xq6AXrJyuAaN+e3L8++cWbYHBXF9\n+qt+Q2RFL0FNiYUQuwkiaerysnm1a0H7ZtJ4zjl4ZgA1Ej7QcylTIbgFW3L7FnyMH\n+/5weLLN2wdjAtzjhRPYJLbV6V/gFbbpCpr+caDUaxSNizQuhhzVI5UrJegaHCCrx\n+DCiwWRFYzN5pqhtgzcaImK76DmPIk+Yrsum5KJZQeGfzKxvF0YnwxU0bxFzcDZJD\n+X2oCJn828Aw2j0nIlVlrrao0JMkvTBeZehO/11U68M2vKGEqrsQOb/BTXyLCeZwn\n+UGow1WvYfRxEZTrhhiYw94EH06gbqmKG1xsuV4LDI5z63/6ACcQW3orMbMymJCky\n+4HiNVZ7SNeGoYe380CJCwv6GN1opKTAWp84cr2KzhAzONGqNWNpUhznAXlI+GzCc\n+D2H330L1atMqZHjgpEfrkowvJ7WBM5KFKDfylaTKhYvfZcTOZs5OmRZSW3U54wRD\n+RMP0d2+k3vRililNhHIErHbjhYFc6zubVbBhvUMAEQEAAYkEHwQYAQIACQUCUc7O\n+lQIbDAAKCRCxF563NH3BDSX2IACugAdZqX+o/+pTkSrj+NEAcP0ZMci8w5nm/yOP\n+VlGyY6PXGuQKcBtvz3LWtIDdddMc/bD/zmZPwSzTx1MMOWc+gjR0azXe2RrdMHYk\n+8pb4X4Op2Nkasoc/8hNsRKaU24WUAQMqrRREIVBEOuHGl1A52Lj+aFB04rRHrkMl\n+AqjB5bwArPorIBdM417EEl4hjEZ9BpQxbUgBhTgGTZuc1u9PsKz1YvQ79YJIRmSH\n+n72Zaf35zY55eOQeoVBzGmFPq+/UFqtRNWA7jmRhHvMz/yR33B/RSxyTJuPb79zi\n+2mIZOrViG3X/UNL4qtOc1cKXQBi+FjHAMlGrCc+D5lnyOhEvqoEuvQic7V6C8Pvk\n+9q+jngn2Gs4pdJO8FOnwaC5xp/ZNE0v7x/KtAHyBA6iKcaepgoRQPSt1ONiHyfh1\n+iGgJn+Y6IHx4YDYKEY0UIzHhCfWUl8XZWcf4wLGEbGztkRbkCFqrsja5IeaO7umB\n+i6C4f95uSGjV7SiIMJOE8xo/m2g4VCnnmk7U996JwtBMKREMMqa3ABK4trfBL3Kq\n+P6I6ZTlA/C5svkVUVwWOMZau9kLDsxv8keGrFteZtfYa1KPAROFwNuBU82UW0KtX\n+QQbZoBKt1o3LhqEu+hXU3iKocYWSbBThH8u6vPNgSnW2Qcv3gcUU3jGmYeHrGiUO\n+SuEWxwlKUxCxBNfmz1FGswlwve1LsS3RTz/XB/L6Ubhq5L7FevrXz8152kuMqnpy\n+m93sXkL1eJVo07hH+otcRnMzy4vUar9z/N12t3hfTffx29PBKUCc2PKPVpLfJX2i\n+hieHk23fhLnptjc3lm9S+bHO3rqEWHqgNgNp9bpuwiLRsIy6qTtmC8jxXkGXvQrS\n++2Hv6+jRfDcqEAK3vqi1XL7Td81KRjnheBtsKpjS2PFatK3uTo6v1oRWJCdRCxg1\n+HT6a9KvZ+DNKcxlQISKAOLX72qpziaDl4CpBdQy4Zg2pr9oYkLdlfkaDK/OH4J3M\n+wJiVf/uNPPd+yy6xZXK0SPZHf+mf5Yt+Sim93hIbdS9AMdvHKB5n3DR27H+/okPj\n+w3J9z85hxgP5KspizQR6t77AWddPRy/l3BBZeb+HiaeKGBJeSNWXpkPXHkdjLW8U\n+QStzFR8r15FWJTmamIknjJ3XNbytMCpu8cj2ZVZdyjPcHEBL3WbNYYtauSuYmyUO\n+yXBaecM/KoTdvHiERU/mMuf7f1ftftCHehZoNaP+BeIbIud9IHIdrSQBCW+RC1Y1\n+8opDLMtnIOX3OnyCN38ELYcuNLMJxBqnQgi7MVDVcT1+BN/+lFQtG44+rPUkK+T1\n+Jk1/tIJqcyc1BfY6uFHFXWWnqQnjl0XpZo+/bMDxTVy8yND2\n+=icdI\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "9e8da81669c3da8f26f2e0960b0c33cee17933d4",
        "filename": "contrib/init/README.md",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/init/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/init/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/README.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,12 @@\n+Sample configuration files for:\n+\n+SystemD: aitherd.service\n+Upstart: aitherd.conf\n+OpenRC:  aitherd.openrc\n+         aitherd.openrcconf\n+CentOS:  aitherd.init\n+OS X:    org.aither.aitherd.plist\n+\n+have been made available to assist packagers in creating node packages here.\n+\n+See doc/init.md for more information."
      },
      {
        "sha": "2073b1588965a8c6c8d01a4c35afc17174d685c8",
        "filename": "contrib/init/aitherd.conf",
        "status": "added",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/init/aitherd.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/init/aitherd.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/aitherd.conf?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,65 @@\n+description \"Aither Core Daemon\"\n+\n+start on runlevel [2345]\n+stop on starting rc RUNLEVEL=[016]\n+\n+env BITCOIND_BIN=\"/usr/bin/aitherd\"\n+env BITCOIND_USER=\"aithercore\"\n+env BITCOIND_GROUP=\"aithercore\"\n+env BITCOIND_PIDDIR=\"/var/run/aitherd\"\n+# upstart can't handle variables constructed with other variables\n+env BITCOIND_PIDFILE=\"/var/run/aitherd/aitherd.pid\"\n+env BITCOIND_CONFIGFILE=\"/etc/aithercore/aither.conf\"\n+env BITCOIND_DATADIR=\"/var/lib/aitherd\"\n+\n+expect fork\n+\n+respawn\n+respawn limit 5 120\n+kill timeout 60\n+\n+pre-start script\n+    # this will catch non-existent config files\n+    # aitherd will check and exit with this very warning, but it can do so\n+    # long after forking, leaving upstart to think everything started fine.\n+    # since this is a commonly encountered case on install, just check and\n+    # warn here.\n+    if ! grep -qs '^rpcpassword=' \"$BITCOIND_CONFIGFILE\" ; then\n+        echo \"ERROR: You must set a secure rpcpassword to run aitherd.\"\n+        echo \"The setting must appear in $BITCOIND_CONFIGFILE\"\n+        echo\n+        echo \"This password is security critical to securing wallets \"\n+        echo \"and must not be the same as the rpcuser setting.\"\n+        echo \"You can generate a suitable random password using the following\"\n+        echo \"command from the shell:\"\n+        echo\n+        echo \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n+        echo\n+        echo \"It is also recommended that you also set alertnotify so you are \"\n+        echo \"notified of problems:\"\n+        echo\n+        echo \"ie: alertnotify=echo %%s | mail -s \\\"Aither Core Alert\\\"\" \\\n+            \"admin@foo.com\"\n+        echo\n+        exit 1\n+    fi\n+\n+    mkdir -p \"$BITCOIND_PIDDIR\"\n+    chmod 0755 \"$BITCOIND_PIDDIR\"\n+    chown $BITCOIND_USER:$BITCOIND_GROUP \"$BITCOIND_PIDDIR\"\n+    chown $BITCOIND_USER:$BITCOIND_GROUP \"$BITCOIND_CONFIGFILE\"\n+    chmod 0660 \"$BITCOIND_CONFIGFILE\"\n+end script\n+\n+exec start-stop-daemon \\\n+    --start \\\n+    --pidfile \"$BITCOIND_PIDFILE\" \\\n+    --chuid $BITCOIND_USER:$BITCOIND_GROUP \\\n+    --exec \"$BITCOIND_BIN\" \\\n+    -- \\\n+    -pid=\"$BITCOIND_PIDFILE\" \\\n+    -conf=\"$BITCOIND_CONFIGFILE\" \\\n+    -datadir=\"$BITCOIND_DATADIR\" \\\n+    -disablewallet \\\n+    -daemon\n+"
      },
      {
        "sha": "ef9f382d6d761c4d68bafe4cab0f089fae704b5b",
        "filename": "contrib/init/aitherd.init",
        "status": "added",
        "additions": 67,
        "deletions": 0,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/init/aitherd.init",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/init/aitherd.init",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/aitherd.init?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,67 @@\n+#!/bin/bash\n+#\n+#  aitherd The Aither Core server.\n+#\n+#\n+# chkconfig: 345 80 20\n+# description: aitherd\n+# processname: aitherd\n+#\n+\n+# Source function library.\n+. /etc/init.d/functions\n+\n+# you can override defaults in /etc/sysconfig/aitherd, see below\n+if [ -f /etc/sysconfig/aitherd ]; then\n+        . /etc/sysconfig/aitherd\n+fi\n+\n+RETVAL=0\n+\n+prog=aitherd\n+# you can override the lockfile via BITCOIND_LOCKFILE in /etc/sysconfig/aitherd\n+lockfile=${BITCOIND_LOCKFILE-/var/lock/subsys/aitherd}\n+\n+# aitherd defaults to /usr/bin/aitherd, override with BITCOIND_BIN\n+aitherd=${BITCOIND_BIN-/usr/bin/aitherd}\n+\n+# aitherd opts default to -disablewallet, override with BITCOIND_OPTS\n+aitherd_opts=${BITCOIND_OPTS--disablewallet}\n+\n+start() {\n+    echo -n $\"Starting $prog: \"\n+    daemon $DAEMONOPTS $aitherd $aitherd_opts\n+    RETVAL=$?\n+    echo\n+    [ $RETVAL -eq 0 ] && touch $lockfile\n+    return $RETVAL\n+}\n+\n+stop() {\n+    echo -n $\"Stopping $prog: \"\n+    killproc $prog\n+    RETVAL=$?\n+    echo\n+    [ $RETVAL -eq 0 ] && rm -f $lockfile\n+    return $RETVAL\n+}\n+\n+case \"$1\" in\n+    start)\n+        start\n+        ;;\n+    stop)\n+        stop\n+        ;;\n+    status)\n+        status $prog\n+        ;;\n+    restart)\n+        stop\n+        start\n+        ;;\n+    *)\n+        echo \"Usage: service $prog {start|stop|status|restart}\"\n+        exit 1\n+        ;;\n+esac"
      },
      {
        "sha": "80b4509ccf734fa20d830209abc91f537bb23ae0",
        "filename": "contrib/init/aitherd.openrc",
        "status": "added",
        "additions": 92,
        "deletions": 0,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/init/aitherd.openrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/init/aitherd.openrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/aitherd.openrc?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,92 @@\n+#!/sbin/runscript\n+\n+# backward compatibility for existing gentoo layout \n+#\n+if [ -d \"/var/lib/aithercore/.aithercore\" ]; then\n+\tBITCOIND_DEFAULT_DATADIR=\"/var/lib/aithercore/.aithercore\"\n+else\n+\tBITCOIND_DEFAULT_DATADIR=\"/var/lib/aitherd\"\n+fi\n+\n+BITCOIND_CONFIGFILE=${BITCOIND_CONFIGFILE:-/etc/aithercore/aither.conf}\n+BITCOIND_PIDDIR=${BITCOIND_PIDDIR:-/var/run/aitherd}\n+BITCOIND_PIDFILE=${BITCOIND_PIDFILE:-${BITCOIND_PIDDIR}/aitherd.pid}\n+BITCOIND_DATADIR=${BITCOIND_DATADIR:-${BITCOIND_DEFAULT_DATADIR}}\n+BITCOIND_USER=${BITCOIND_USER:-${BITCOIN_USER:-aithercore}}\n+BITCOIND_GROUP=${BITCOIND_GROUP:-aithercore}\n+BITCOIND_BIN=${BITCOIND_BIN:-/usr/bin/aitherd}\n+BITCOIND_NICE=${BITCOIND_NICE:-${NICELEVEL:-0}}\n+BITCOIND_OPTS=\"${BITCOIND_OPTS:-${BITCOIN_OPTS}}\"\n+\n+name=\"Aither Core Daemon\"\n+description=\"Aither cryptocurrency P2P network daemon\"\n+\n+command=\"/usr/bin/aitherd\"\n+command_args=\"-pid=\\\"${BITCOIND_PIDFILE}\\\" \\\n+\t\t-conf=\\\"${BITCOIND_CONFIGFILE}\\\" \\\n+\t\t-datadir=\\\"${BITCOIND_DATADIR}\\\" \\\n+\t\t-daemon \\\n+\t\t${BITCOIND_OPTS}\"\n+\n+required_files=\"${BITCOIND_CONFIGFILE}\"\n+start_stop_daemon_args=\"-u ${BITCOIND_USER} \\\n+\t\t\t-N ${BITCOIND_NICE} -w 2000\"\n+pidfile=\"${BITCOIND_PIDFILE}\"\n+\n+# The retry schedule to use when stopping the daemon. Could be either\n+# a timeout in seconds or multiple signal/timeout pairs (like\n+# \"SIGKILL/180 SIGTERM/300\")\n+retry=\"${BITCOIND_SIGTERM_TIMEOUT}\"\n+\n+depend() {\n+\tneed localmount net\n+}\n+\n+# verify\n+# 1) that the datadir exists and is writable (or create it)\n+# 2) that a directory for the pid exists and is writable\n+# 3) ownership and permissions on the config file\n+start_pre() {\n+\tcheckpath \\\n+\t-d \\\n+\t--mode 0750 \\\n+\t--owner \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n+\t\"${BITCOIND_DATADIR}\"\n+\n+\tcheckpath \\\n+\t-d \\\n+\t--mode 0755 \\\n+\t--owner \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n+\t\"${BITCOIND_PIDDIR}\"\n+\n+\tcheckpath -f \\\n+\t-o ${BITCOIND_USER}:${BITCOIND_GROUP} \\\n+\t-m 0660 \\\n+\t${BITCOIND_CONFIGFILE}\n+\n+\tcheckconfig || return 1\n+}\n+\n+checkconfig()\n+{\n+\tif ! grep -qs '^rpcpassword=' \"${BITCOIND_CONFIGFILE}\" ; then\n+\t\teerror \"\"\n+\t\teerror \"ERROR: You must set a secure rpcpassword to run aitherd.\"\n+\t\teerror \"The setting must appear in ${BITCOIND_CONFIGFILE}\"\n+\t\teerror \"\"\n+\t\teerror \"This password is security critical to securing wallets \"\n+\t\teerror \"and must not be the same as the rpcuser setting.\"\n+\t\teerror \"You can generate a suitable random password using the following\"\n+\t\teerror \"command from the shell:\"\n+\t\teerror \"\"\n+\t\teerror \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n+\t\teerror \"\"\n+\t\teerror \"It is also recommended that you also set alertnotify so you are \"\n+\t\teerror \"notified of problems:\"\n+\t\teerror \"\"\n+\t\teerror \"ie: alertnotify=echo %%s | mail -s \\\"Aither Core Alert\\\"\" \\\n+\t\t\t\"admin@foo.com\"\n+\t\teerror \"\"\n+\t\treturn 1\n+\tfi\n+}"
      },
      {
        "sha": "5867b1bb5fec33871cc7f73e1ff2ecacd2956055",
        "filename": "contrib/init/aitherd.openrcconf",
        "status": "added",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/init/aitherd.openrcconf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/init/aitherd.openrcconf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/aitherd.openrcconf?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,33 @@\n+# /etc/conf.d/aitherd: config file for /etc/init.d/aitherd\n+\n+# Config file location\n+#BITCOIND_CONFIGFILE=\"/etc/aithercore/aither.conf\"\n+\n+# What directory to write pidfile to?  (created and owned by $BITCOIND_USER)\n+#BITCOIND_PIDDIR=\"/var/run/aitherd\"\n+\n+# What filename to give the pidfile\n+#BITCOIND_PIDFILE=\"${BITCOIND_PIDDIR}/aitherd.pid\"\n+\n+# Where to write aitherd data (be mindful that the blockchain is large)\n+#BITCOIND_DATADIR=\"/var/lib/aitherd\"\n+\n+# User and group to own aitherd process\n+#BITCOIND_USER=\"aithercore\"\n+#BITCOIND_GROUP=\"aithercore\"\n+\n+# Path to aitherd executable\n+#BITCOIND_BIN=\"/usr/bin/aitherd\"\n+\n+# Nice value to run aitherd under\n+#BITCOIND_NICE=0\n+\n+# Additional options (avoid -conf and -datadir, use flags above)\n+BITCOIND_OPTS=\"-disablewallet\"\n+\n+# The timeout in seconds OpenRC will wait for bitcoind to terminate\n+# after a SIGTERM has been raised.\n+# Note that this will be mapped as argument to start-stop-daemon's\n+# '--retry' option, which means you can specify a retry schedule\n+# here. For more information see man 8 start-stop-daemon.\n+BITCOIND_SIGTERM_TIMEOUT=60"
      },
      {
        "sha": "86208f8ff201a8e0f9f89ae40ff21244926f470e",
        "filename": "contrib/init/aitherd.service",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/init/aitherd.service",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/init/aitherd.service",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/aitherd.service?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,22 @@\n+[Unit]\n+Description=Aither's distributed currency daemon\n+After=network.target\n+\n+[Service]\n+User=aithercore\n+Group=aithercore\n+\n+Type=forking\n+PIDFile=/var/lib/aitherd/aitherd.pid\n+ExecStart=/usr/bin/aitherd -daemon -pid=/var/lib/aitherd/aitherd.pid \\\n+-conf=/etc/aithercore/aither.conf -datadir=/var/lib/aitherd -disablewallet\n+\n+Restart=always\n+PrivateTmp=true\n+TimeoutStopSec=60s\n+TimeoutStartSec=2s\n+StartLimitInterval=120s\n+StartLimitBurst=5\n+\n+[Install]\n+WantedBy=multi-user.target"
      },
      {
        "sha": "559cd554ec6c18b1b0e00382aa79bc1ea333a3b8",
        "filename": "contrib/init/org.aither.aitherd.plist",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/init/org.aither.aitherd.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/init/org.aither.aitherd.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/org.aither.aitherd.plist?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,15 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n+<plist version=\"1.0\">\n+<dict>\n+\t<key>Label</key>\n+\t<string>org.aither.aitherd</string>\n+\t<key>ProgramArguments</key>\n+\t<array>\n+\t\t<string>/usr/local/bin/aitherd</string>\n+\t\t<string>-daemon</string>\n+\t</array>\n+\t<key>RunAtLoad</key>\n+\t<true/>\n+</dict>\n+</plist>"
      },
      {
        "sha": "214146b0378b151acecfdec9a6415e6b3cbd4e93",
        "filename": "contrib/linearize/README.md",
        "status": "added",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,36 @@\n+# Linearize\n+Construct a linear, no-fork, best version of the blockchain.\n+\n+## Step 0: Install aither_hash\n+\n+https://github.com/aithercoin/aither_hash\n+\n+## Step 1: Download hash list\n+\n+    $ ./linearize-hashes.py linearize.cfg > hashlist.txt\n+\n+Required configuration file settings for linearize-hashes:\n+* RPC: rpcuser, rpcpassword\n+\n+Optional config file setting for linearize-hashes:\n+* RPC: host, port\n+* Block chain: min_height, max_height\n+\n+## Step 2: Copy local block data\n+\n+    $ ./linearize-data.py linearize.cfg\n+\n+Required configuration file settings:\n+* \"input\": bitcoind blocks/ directory containing blkNNNNN.dat\n+* \"hashlist\": text file containing list of block hashes, linearized-hashes.py\n+output.\n+* \"output_file\" for bootstrap.dat or \"output\" for output directory for linearized blocks/blkNNNNN.dat output\n+\n+Optional config file setting for linearize-data:\n+* \"netmagic\": network magic number (default is 'cee2caff', testnet)\n+* \"genesis\": genesis block hash (default is '00000bafbc94add76cb75e2ec92894837288a481e5c005f6563d91623bf8bc2c', testnet)\n+* \"max_out_sz\": maximum output file size (default 100 \\* 1000 \\* 1000)\n+* \"split_timestamp\": Split files when a new month is first seen, in addition to\n+reaching a maximum file size.\n+* \"file_timestamp\": Set each file's last-modified time to that of the\n+most recent block in that file."
      },
      {
        "sha": "9d1eaef395160e4c43bea1f88d55bfe792dede29",
        "filename": "contrib/linearize/example-linearize-testnet.cfg",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/linearize/example-linearize-testnet.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/linearize/example-linearize-testnet.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize-testnet.cfg?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,20 @@\n+\n+# bitcoind RPC settings (linearize-hashes)\n+rpcuser=someuser\n+rpcpassword=somepassword\n+host=127.0.0.1\n+port=19998\n+\n+# bootstrap.dat hashlist settings (linearize-hashes)\n+max_height=3130000\n+\n+# bootstrap.dat input/output settings (linearize-data)\n+netmagic=cee2caff\n+input=/home/example/.aithercore/testnet3/blocks\n+output_file=/home/example/Downloads/bootstrap.dat\n+hashlist=hashlist.txt\n+split_year=1\n+genesis=00000bafbc94add76cb75e2ec92894837288a481e5c005f6563d91623bf8bc2c\n+\n+# Maxmimum size in bytes of out-of-order blocks cache in memory\n+out_of_order_cache_sz = 10000000"
      },
      {
        "sha": "f6d467c39af06dac8fa88fa7d584a628a91d0bf7",
        "filename": "contrib/linearize/example-linearize.cfg",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/linearize/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/linearize/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize.cfg?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,20 @@\n+\n+# bitcoind RPC settings (linearize-hashes)\n+rpcuser=someuser\n+rpcpassword=somepassword\n+host=127.0.0.1\n+port=9998\n+\n+# bootstrap.dat hashlist settings (linearize-hashes)\n+max_height=3130000\n+\n+# bootstrap.dat input/output settings (linearize-data)\n+netmagic=bf0c6bbd\n+input=/home/example/.aithercore/blocks\n+output_file=/home/example/Downloads/bootstrap.dat\n+hashlist=hashlist.txt\n+split_year=1\n+genesis=00000ffd590b1485b3caadc19b22e6379c733355108f107a430458cdf3407ab6\n+\n+# Maxmimum size in bytes of out-of-order blocks cache in memory\n+out_of_order_cache_sz = 10000000"
      },
      {
        "sha": "93576355f2f3463dd985d05174228a411d923f8b",
        "filename": "contrib/linearize/linearize-data.py",
        "status": "added",
        "additions": 305,
        "deletions": 0,
        "changes": 305,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/linearize/linearize-data.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/linearize/linearize-data.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-data.py?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,305 @@\n+#!/usr/bin/python\n+#\n+# linearize-data.py: Construct a linear, no-fork version of the chain.\n+#\n+# Copyright (c) 2013-2014 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+\n+from __future__ import print_function, division\n+import json\n+import struct\n+import re\n+import os\n+import os.path\n+import base64\n+import httplib\n+import sys\n+import hashlib\n+import aither_hash\n+import datetime\n+import time\n+from collections import namedtuple\n+\n+settings = {}\n+\n+def uint32(x):\n+\treturn x & 0xffffffffL\n+\n+def bytereverse(x):\n+\treturn uint32(( ((x) << 24) | (((x) << 8) & 0x00ff0000) |\n+\t\t       (((x) >> 8) & 0x0000ff00) | ((x) >> 24) ))\n+\n+def bufreverse(in_buf):\n+\tout_words = []\n+\tfor i in range(0, len(in_buf), 4):\n+\t\tword = struct.unpack('@I', in_buf[i:i+4])[0]\n+\t\tout_words.append(struct.pack('@I', bytereverse(word)))\n+\treturn ''.join(out_words)\n+\n+def wordreverse(in_buf):\n+\tout_words = []\n+\tfor i in range(0, len(in_buf), 4):\n+\t\tout_words.append(in_buf[i:i+4])\n+\tout_words.reverse()\n+\treturn ''.join(out_words)\n+\n+def calc_hdr_hash(blk_hdr):\n+\t#hash1 = hashlib.sha256()\n+\t#hash1.update(blk_hdr)\n+\t#hash1_o = hash1.digest()\n+\n+\t#hash2 = hashlib.sha256()\n+\t#hash2.update(hash1_o)\n+\t#hash2_o = hash2.digest()\n+\n+\t#return hash2_o\n+        pow_hash = aither_hash.getPoWHash(blk_hdr)\n+        return pow_hash\n+\n+def calc_hash_str(blk_hdr):\n+\thash = calc_hdr_hash(blk_hdr)\n+\thash = bufreverse(hash)\n+\thash = wordreverse(hash)\n+\thash_str = hash.encode('hex')\n+\treturn hash_str\n+\n+def get_blk_dt(blk_hdr):\n+\tmembers = struct.unpack(\"<I\", blk_hdr[68:68+4])\n+\tnTime = members[0]\n+\tdt = datetime.datetime.fromtimestamp(nTime)\n+\tdt_ym = datetime.datetime(dt.year, dt.month, 1)\n+\treturn (dt_ym, nTime)\n+\n+def get_block_hashes(settings):\n+\tblkindex = []\n+\tf = open(settings['hashlist'], \"r\")\n+\tfor line in f:\n+\t\tline = line.rstrip()\n+\t\tblkindex.append(line)\n+\n+\tprint(\"Read \" + str(len(blkindex)) + \" hashes\")\n+\n+\treturn blkindex\n+\n+def mkblockmap(blkindex):\n+\tblkmap = {}\n+\tfor height,hash in enumerate(blkindex):\n+\t\tblkmap[hash] = height\n+\treturn blkmap\n+\n+# Block header and extent on disk\n+BlockExtent = namedtuple('BlockExtent', ['fn', 'offset', 'inhdr', 'blkhdr', 'size'])\n+\n+class BlockDataCopier:\n+\tdef __init__(self, settings, blkindex, blkmap):\n+\t\tself.settings = settings\n+\t\tself.blkindex = blkindex\n+\t\tself.blkmap = blkmap\n+\n+\t\tself.inFn = 0\n+\t\tself.inF = None\n+\t\tself.outFn = 0\n+\t\tself.outsz = 0\n+\t\tself.outF = None\n+\t\tself.outFname = None\n+\t\tself.blkCountIn = 0\n+\t\tself.blkCountOut = 0\n+\n+\t\tself.lastDate = datetime.datetime(2000, 1, 1)\n+\t\tself.highTS = 1408893517 - 315360000\n+\t\tself.timestampSplit = False\n+\t\tself.fileOutput = True\n+\t\tself.setFileTime = False\n+\t\tself.maxOutSz = settings['max_out_sz']\n+\t\tif 'output' in settings:\n+\t\t\tself.fileOutput = False\n+\t\tif settings['file_timestamp'] != 0:\n+\t\t\tself.setFileTime = True\n+\t\tif settings['split_timestamp'] != 0:\n+\t\t\tself.timestampSplit = True\n+\t\t# Extents and cache for out-of-order blocks\n+\t\tself.blockExtents = {}\n+\t\tself.outOfOrderData = {}\n+\t\tself.outOfOrderSize = 0 # running total size for items in outOfOrderData\n+\n+\tdef writeBlock(self, inhdr, blk_hdr, rawblock):\n+\t\tblockSizeOnDisk = len(inhdr) + len(blk_hdr) + len(rawblock)\n+\t\tif not self.fileOutput and ((self.outsz + blockSizeOnDisk) > self.maxOutSz):\n+\t\t\tself.outF.close()\n+\t\t\tif self.setFileTime:\n+\t\t\t\tos.utime(outFname, (int(time.time()), highTS))\n+\t\t\tself.outF = None\n+\t\t\tself.outFname = None\n+\t\t\tself.outFn = self.outFn + 1\n+\t\t\tself.outsz = 0\n+\n+\t\t(blkDate, blkTS) = get_blk_dt(blk_hdr)\n+\t\tif self.timestampSplit and (blkDate > self.lastDate):\n+\t\t\tprint(\"New month \" + blkDate.strftime(\"%Y-%m\") + \" @ \" + hash_str)\n+\t\t\tlastDate = blkDate\n+\t\t\tif outF:\n+\t\t\t\toutF.close()\n+\t\t\t\tif setFileTime:\n+\t\t\t\t\tos.utime(outFname, (int(time.time()), highTS))\n+\t\t\t\tself.outF = None\n+\t\t\t\tself.outFname = None\n+\t\t\t\tself.outFn = self.outFn + 1\n+\t\t\t\tself.outsz = 0\n+\n+\t\tif not self.outF:\n+\t\t\tif self.fileOutput:\n+\t\t\t\toutFname = self.settings['output_file']\n+\t\t\telse:\n+\t\t\t\toutFname = os.path.join(self.settings['output'], \"blk%05d.dat\" % self.outFn)\n+\t\t\tprint(\"Output file \" + outFname)\n+\t\t\tself.outF = open(outFname, \"wb\")\n+\n+\t\tself.outF.write(inhdr)\n+\t\tself.outF.write(blk_hdr)\n+\t\tself.outF.write(rawblock)\n+\t\tself.outsz = self.outsz + len(inhdr) + len(blk_hdr) + len(rawblock)\n+\n+\t\tself.blkCountOut = self.blkCountOut + 1\n+\t\tif blkTS > self.highTS:\n+\t\t\tself.highTS = blkTS\n+\n+\t\tif (self.blkCountOut % 1000) == 0:\n+\t\t\tprint('%i blocks scanned, %i blocks written (of %i, %.1f%% complete)' % \n+\t\t\t\t\t(self.blkCountIn, self.blkCountOut, len(self.blkindex), 100.0 * self.blkCountOut / len(self.blkindex)))\n+\n+\tdef inFileName(self, fn):\n+\t\treturn os.path.join(self.settings['input'], \"blk%05d.dat\" % fn)\n+\n+\tdef fetchBlock(self, extent):\n+\t\t'''Fetch block contents from disk given extents'''\n+\t\twith open(self.inFileName(extent.fn), \"rb\") as f:\n+\t\t\tf.seek(extent.offset)\n+\t\t\treturn f.read(extent.size)\n+\n+\tdef copyOneBlock(self):\n+\t\t'''Find the next block to be written in the input, and copy it to the output.'''\n+\t\textent = self.blockExtents.pop(self.blkCountOut)\n+\t\tif self.blkCountOut in self.outOfOrderData:\n+\t\t\t# If the data is cached, use it from memory and remove from the cache\n+\t\t\trawblock = self.outOfOrderData.pop(self.blkCountOut)\n+\t\t\tself.outOfOrderSize -= len(rawblock)\n+\t\telse: # Otherwise look up data on disk\n+\t\t\trawblock = self.fetchBlock(extent)\n+\n+\t\tself.writeBlock(extent.inhdr, extent.blkhdr, rawblock)\n+\n+\tdef run(self):\n+\t\twhile self.blkCountOut < len(self.blkindex):\n+\t\t\tif not self.inF:\n+\t\t\t\tfname = self.inFileName(self.inFn)\n+\t\t\t\tprint(\"Input file \" + fname)\n+\t\t\t\ttry:\n+\t\t\t\t\tself.inF = open(fname, \"rb\")\n+\t\t\t\texcept IOError:\n+\t\t\t\t\tprint(\"Premature end of block data\")\n+\t\t\t\t\treturn\n+\n+\t\t\tinhdr = self.inF.read(8)\n+\t\t\tif (not inhdr or (inhdr[0] == \"\\0\")):\n+\t\t\t\tself.inF.close()\n+\t\t\t\tself.inF = None\n+\t\t\t\tself.inFn = self.inFn + 1\n+\t\t\t\tcontinue\n+\n+\t\t\tinMagic = inhdr[:4]\n+\t\t\tif (inMagic != self.settings['netmagic']):\n+\t\t\t\tprint(\"Invalid magic: \" + inMagic.encode('hex'))\n+\t\t\t\treturn\n+\t\t\tinLenLE = inhdr[4:]\n+\t\t\tsu = struct.unpack(\"<I\", inLenLE)\n+\t\t\tinLen = su[0] - 80 # length without header\n+\t\t\tblk_hdr = self.inF.read(80)\n+\t\t\tinExtent = BlockExtent(self.inFn, self.inF.tell(), inhdr, blk_hdr, inLen)\n+\n+\t\t\thash_str = calc_hash_str(blk_hdr)\n+\t\t\tif not hash_str in blkmap:\n+\t\t\t\tprint(\"Skipping unknown block \" + hash_str)\n+\t\t\t\tself.inF.seek(inLen, os.SEEK_CUR)\n+\t\t\t\tcontinue\n+\n+\t\t\tblkHeight = self.blkmap[hash_str]\n+\t\t\tself.blkCountIn += 1\n+\n+\t\t\tif self.blkCountOut == blkHeight:\n+\t\t\t\t# If in-order block, just copy\n+\t\t\t\trawblock = self.inF.read(inLen)\n+\t\t\t\tself.writeBlock(inhdr, blk_hdr, rawblock)\n+\n+\t\t\t\t# See if we can catch up to prior out-of-order blocks\n+\t\t\t\twhile self.blkCountOut in self.blockExtents:\n+\t\t\t\t\tself.copyOneBlock()\n+\n+\t\t\telse: # If out-of-order, skip over block data for now\n+\t\t\t\tself.blockExtents[blkHeight] = inExtent\n+\t\t\t\tif self.outOfOrderSize < self.settings['out_of_order_cache_sz']:\n+\t\t\t\t\t# If there is space in the cache, read the data\n+\t\t\t\t\t# Reading the data in file sequence instead of seeking and fetching it later is preferred,\n+\t\t\t\t\t# but we don't want to fill up memory\n+\t\t\t\t\tself.outOfOrderData[blkHeight] = self.inF.read(inLen)\n+\t\t\t\t\tself.outOfOrderSize += inLen\n+\t\t\t\telse: # If no space in cache, seek forward\n+\t\t\t\t\tself.inF.seek(inLen, os.SEEK_CUR)\n+\n+\t\tprint(\"Done (%i blocks written)\" % (self.blkCountOut))\n+\n+if __name__ == '__main__':\n+\tif len(sys.argv) != 2:\n+\t\tprint(\"Usage: linearize-data.py CONFIG-FILE\")\n+\t\tsys.exit(1)\n+\n+\tf = open(sys.argv[1])\n+\tfor line in f:\n+\t\t# skip comment lines\n+\t\tm = re.search('^\\s*#', line)\n+\t\tif m:\n+\t\t\tcontinue\n+\n+\t\t# parse key=value lines\n+\t\tm = re.search('^(\\w+)\\s*=\\s*(\\S.*)$', line)\n+\t\tif m is None:\n+\t\t\tcontinue\n+\t\tsettings[m.group(1)] = m.group(2)\n+\tf.close()\n+\n+\tif 'netmagic' not in settings:\n+\t\tsettings['netmagic'] = 'cee2caff'\n+\tif 'genesis' not in settings:\n+\t\tsettings['genesis'] = '00000bafbc94add76cb75e2ec92894837288a481e5c005f6563d91623bf8bc2c'\n+\tif 'input' not in settings:\n+\t\tsettings['input'] = 'input'\n+\tif 'hashlist' not in settings:\n+\t\tsettings['hashlist'] = 'hashlist.txt'\n+\tif 'file_timestamp' not in settings:\n+\t\tsettings['file_timestamp'] = 0\n+\tif 'split_timestamp' not in settings:\n+\t\tsettings['split_timestamp'] = 0\n+\tif 'max_out_sz' not in settings:\n+\t\tsettings['max_out_sz'] = 1000L * 1000 * 1000\n+\tif 'out_of_order_cache_sz' not in settings:\n+\t\tsettings['out_of_order_cache_sz'] = 100 * 1000 * 1000\n+\n+\tsettings['max_out_sz'] = long(settings['max_out_sz'])\n+\tsettings['split_timestamp'] = int(settings['split_timestamp'])\n+\tsettings['file_timestamp'] = int(settings['file_timestamp'])\n+\tsettings['netmagic'] = settings['netmagic'].decode('hex')\n+\tsettings['out_of_order_cache_sz'] = int(settings['out_of_order_cache_sz'])\n+\n+\tif 'output_file' not in settings and 'output' not in settings:\n+\t\tprint(\"Missing output file / directory\")\n+\t\tsys.exit(1)\n+\n+\tblkindex = get_block_hashes(settings)\n+\tblkmap = mkblockmap(blkindex)\n+\n+\tif not settings['genesis'] in blkmap:\n+\t\tprint(\"Genesis block not found in hashlist\")\n+\telse:\n+\t\tBlockDataCopier(settings, blkindex, blkmap).run()\n+"
      },
      {
        "sha": "ee87ceafb1b4cfe3dedbf8412e7902dbf822ba72",
        "filename": "contrib/linearize/linearize-hashes.py",
        "status": "added",
        "additions": 113,
        "deletions": 0,
        "changes": 113,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/linearize/linearize-hashes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/linearize/linearize-hashes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-hashes.py?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,113 @@\n+#!/usr/bin/python\n+#\n+# linearize-hashes.py:  List blocks in a linear, no-fork version of the chain.\n+#\n+# Copyright (c) 2013-2014 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+\n+from __future__ import print_function\n+import json\n+import struct\n+import re\n+import base64\n+import httplib\n+import sys\n+\n+settings = {}\n+\n+class BitcoinRPC:\n+\tdef __init__(self, host, port, username, password):\n+\t\tauthpair = \"%s:%s\" % (username, password)\n+\t\tself.authhdr = \"Basic %s\" % (base64.b64encode(authpair))\n+\t\tself.conn = httplib.HTTPConnection(host, port, False, 30)\n+\n+\tdef execute(self, obj):\n+\t\tself.conn.request('POST', '/', json.dumps(obj),\n+\t\t\t{ 'Authorization' : self.authhdr,\n+\t\t\t  'Content-type' : 'application/json' })\n+\n+\t\tresp = self.conn.getresponse()\n+\t\tif resp is None:\n+\t\t\tprint(\"JSON-RPC: no response\", file=sys.stderr)\n+\t\t\treturn None\n+\n+\t\tbody = resp.read()\n+\t\tresp_obj = json.loads(body)\n+\t\treturn resp_obj\n+\n+\t@staticmethod\n+\tdef build_request(idx, method, params):\n+\t\tobj = { 'version' : '1.1',\n+\t\t\t'method' : method,\n+\t\t\t'id' : idx }\n+\t\tif params is None:\n+\t\t\tobj['params'] = []\n+\t\telse:\n+\t\t\tobj['params'] = params\n+\t\treturn obj\n+\n+\t@staticmethod\n+\tdef response_is_error(resp_obj):\n+\t\treturn 'error' in resp_obj and resp_obj['error'] is not None\n+\n+def get_block_hashes(settings, max_blocks_per_call=10000):\n+\trpc = BitcoinRPC(settings['host'], settings['port'],\n+\t\t\t settings['rpcuser'], settings['rpcpassword'])\n+\n+\theight = settings['min_height']\n+\twhile height < settings['max_height']+1:\n+\t\tnum_blocks = min(settings['max_height']+1-height, max_blocks_per_call)\n+\t\tbatch = []\n+\t\tfor x in range(num_blocks):\n+\t\t\tbatch.append(rpc.build_request(x, 'getblockhash', [height + x]))\n+\n+\t\treply = rpc.execute(batch)\n+\n+\t\tfor x,resp_obj in enumerate(reply):\n+\t\t\tif rpc.response_is_error(resp_obj):\n+\t\t\t\tprint('JSON-RPC: error at height', height+x, ': ', resp_obj['error'], file=sys.stderr)\n+\t\t\t\texit(1)\n+\t\t\tassert(resp_obj['id'] == x) # assume replies are in-sequence\n+\t\t\tprint(resp_obj['result'])\n+\n+\t\theight += num_blocks\n+\n+if __name__ == '__main__':\n+\tif len(sys.argv) != 2:\n+\t\tprint(\"Usage: linearize-hashes.py CONFIG-FILE\")\n+\t\tsys.exit(1)\n+\n+\tf = open(sys.argv[1])\n+\tfor line in f:\n+\t\t# skip comment lines\n+\t\tm = re.search('^\\s*#', line)\n+\t\tif m:\n+\t\t\tcontinue\n+\n+\t\t# parse key=value lines\n+\t\tm = re.search('^(\\w+)\\s*=\\s*(\\S.*)$', line)\n+\t\tif m is None:\n+\t\t\tcontinue\n+\t\tsettings[m.group(1)] = m.group(2)\n+\tf.close()\n+\n+\tif 'host' not in settings:\n+\t\tsettings['host'] = '127.0.0.1'\n+\tif 'port' not in settings:\n+\t\tsettings['port'] = 9998\n+\tif 'min_height' not in settings:\n+\t\tsettings['min_height'] = 0\n+\tif 'max_height' not in settings:\n+\t\tsettings['max_height'] = 313000\n+\tif 'rpcuser' not in settings or 'rpcpassword' not in settings:\n+\t\tprint(\"Missing username and/or password in cfg file\", file=stderr)\n+\t\tsys.exit(1)\n+\n+\tsettings['port'] = int(settings['port'])\n+\tsettings['min_height'] = int(settings['min_height'])\n+\tsettings['max_height'] = int(settings['max_height'])\n+\n+\tget_block_hashes(settings)\n+"
      },
      {
        "sha": "81b550f600a2656525c2cc7edc53fad5b3870933",
        "filename": "contrib/macdeploy/Base.lproj/InfoPlist.strings",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/macdeploy/Base.lproj/InfoPlist.strings",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/macdeploy/Base.lproj/InfoPlist.strings",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/Base.lproj/InfoPlist.strings?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1 @@\n+{\tCFBundleDisplayName = \"Aither Core\"; CFBundleName = \"Aither Core\"; }"
      },
      {
        "sha": "db9d16f1d700f18b64edafa0f8d981a680567b4d",
        "filename": "contrib/macdeploy/DS_Store",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/macdeploy/DS_Store",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/macdeploy/DS_Store",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/DS_Store?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "ec094b705e415ef54b7d77fd8a9c7179f9681d27",
        "filename": "contrib/macdeploy/README.md",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/macdeploy/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/macdeploy/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/README.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,15 @@\n+### MacDeploy ###\n+\n+For Snow Leopard (which uses [Python 2.6](http://www.python.org/download/releases/2.6/)), you will need the param_parser package:\n+\n+\tsudo easy_install argparse\n+\n+This script should not be run manually, instead, after building as usual:\n+\n+\tmake deploy\n+\n+During the process, the disk image window will pop up briefly where the fancy\n+settings are applied. This is normal, please do not interfere.\n+\n+When finished, it will produce `Aither-Core.dmg`.\n+"
      },
      {
        "sha": "a8de692e7baa7d21115c10a9167533d81654f29d",
        "filename": "contrib/macdeploy/background.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/macdeploy/background.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/macdeploy/background.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "6d66d4e642d2912ec9aa6c50e48a6f70ae6d524d",
        "filename": "contrib/macdeploy/background.psd",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/macdeploy/background.psd",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/macdeploy/background.psd",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.psd?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "f0548e8e55f353a37f4d233a303c59798d2ba5cf",
        "filename": "contrib/macdeploy/background.tiff",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/macdeploy/background.tiff",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/macdeploy/background.tiff",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.tiff?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "55d6be3e806e32a4d69e1e092e77fc6cf6a687df",
        "filename": "contrib/macdeploy/background@2x.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/macdeploy/background@2x.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/macdeploy/background@2x.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background@2x.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "781fe315edab5046fca0ce5dc59090cfe44760ae",
        "filename": "contrib/macdeploy/detached-sig-apply.sh",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/macdeploy/detached-sig-apply.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/macdeploy/detached-sig-apply.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-apply.sh?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,52 @@\n+#!/bin/sh\n+set -e\n+\n+UNSIGNED=\"$1\"\n+SIGNATURE=\"$2\"\n+ARCH=x86_64\n+ROOTDIR=dist\n+TEMPDIR=signed.temp\n+OUTDIR=signed-app\n+\n+if [ -z \"$UNSIGNED\" ]; then\n+  echo \"usage: $0 <unsigned app> <signature>\"\n+  exit 1\n+fi\n+\n+if [ -z \"$SIGNATURE\" ]; then\n+  echo \"usage: $0 <unsigned app> <signature>\"\n+  exit 1\n+fi\n+\n+rm -rf ${TEMPDIR} && mkdir -p ${TEMPDIR}\n+tar -C ${TEMPDIR} -xf ${UNSIGNED}\n+cp -rf \"${SIGNATURE}\"/* ${TEMPDIR}\n+\n+if [ -z \"${PAGESTUFF}\" ]; then\n+  PAGESTUFF=${TEMPDIR}/pagestuff\n+fi\n+\n+if [ -z \"${CODESIGN_ALLOCATE}\" ]; then\n+  CODESIGN_ALLOCATE=${TEMPDIR}/codesign_allocate\n+fi\n+\n+find ${TEMPDIR} -name \"*.sign\" | while read i; do\n+  SIZE=`stat -c %s \"${i}\"`\n+  TARGET_FILE=\"`echo \"${i}\" | sed 's/\\.sign$//'`\"\n+\n+  echo \"Allocating space for the signature of size ${SIZE} in ${TARGET_FILE}\"\n+  ${CODESIGN_ALLOCATE} -i \"${TARGET_FILE}\" -a ${ARCH} ${SIZE} -o \"${i}.tmp\"\n+\n+  OFFSET=`${PAGESTUFF} \"${i}.tmp\" -p | tail -2 | grep offset | sed 's/[^0-9]*//g'`\n+  if [ -z ${QUIET} ]; then\n+    echo \"Attaching signature at offset ${OFFSET}\"\n+  fi\n+\n+  dd if=\"$i\" of=\"${i}.tmp\" bs=1 seek=${OFFSET} count=${SIZE} 2>/dev/null\n+  mv \"${i}.tmp\" \"${TARGET_FILE}\"\n+  rm \"${i}\"\n+  echo \"Success.\"\n+done\n+mv ${TEMPDIR}/${ROOTDIR} ${OUTDIR}\n+rm -rf ${TEMPDIR}\n+echo \"Signed: ${OUTDIR}\""
      },
      {
        "sha": "d700667e7a86cc4984ac3762cf23790e88cbb07f",
        "filename": "contrib/macdeploy/detached-sig-create.sh",
        "status": "added",
        "additions": 47,
        "deletions": 0,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/macdeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/macdeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-create.sh?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,47 @@\n+#!/bin/sh\n+set -e\n+\n+ROOTDIR=dist\n+BUNDLE=\"${ROOTDIR}/Aither-Qt.app\"\n+CODESIGN=codesign\n+TEMPDIR=sign.temp\n+TEMPLIST=${TEMPDIR}/signatures.txt\n+OUT=signature.tar.gz\n+OUTROOT=osx\n+\n+if [ ! -n \"$1\" ]; then\n+  echo \"usage: $0 <codesign args>\"\n+  echo \"example: $0 -s MyIdentity\"\n+  exit 1\n+fi\n+\n+rm -rf ${TEMPDIR} ${TEMPLIST}\n+mkdir -p ${TEMPDIR}\n+\n+${CODESIGN} -f --file-list ${TEMPLIST} \"$@\" \"${BUNDLE}\"\n+\n+grep -v CodeResources < \"${TEMPLIST}\" | while read i; do\n+  TARGETFILE=\"${BUNDLE}/`echo \"${i}\" | sed \"s|.*${BUNDLE}/||\"`\"\n+  SIZE=`pagestuff \"$i\" -p | tail -2 | grep size | sed 's/[^0-9]*//g'`\n+  OFFSET=`pagestuff \"$i\" -p | tail -2 | grep offset | sed 's/[^0-9]*//g'`\n+  SIGNFILE=\"${TEMPDIR}/${OUTROOT}/${TARGETFILE}.sign\"\n+  DIRNAME=\"`dirname \"${SIGNFILE}\"`\"\n+  mkdir -p \"${DIRNAME}\"\n+  echo \"Adding detached signature for: ${TARGETFILE}. Size: ${SIZE}. Offset: ${OFFSET}\"\n+  dd if=\"$i\" of=\"${SIGNFILE}\" bs=1 skip=${OFFSET} count=${SIZE} 2>/dev/null\n+done\n+\n+grep CodeResources < \"${TEMPLIST}\" | while read i; do\n+  TARGETFILE=\"${BUNDLE}/`echo \"${i}\" | sed \"s|.*${BUNDLE}/||\"`\"\n+  RESOURCE=\"${TEMPDIR}/${OUTROOT}/${TARGETFILE}\"\n+  DIRNAME=\"`dirname \"${RESOURCE}\"`\"\n+  mkdir -p \"${DIRNAME}\"\n+  echo \"Adding resource for: \"${TARGETFILE}\"\"\n+  cp \"${i}\" \"${RESOURCE}\"\n+done\n+\n+rm ${TEMPLIST}\n+\n+tar -C \"${TEMPDIR}\" -czf \"${OUT}\" .\n+rm -rf \"${TEMPDIR}\"\n+echo \"Created ${OUT}\""
      },
      {
        "sha": "17c00c6b14cb8e3487dd22d27684fa88914e361a",
        "filename": "contrib/macdeploy/fancy.plist",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/macdeploy/fancy.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/macdeploy/fancy.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/fancy.plist?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -10,7 +10,7 @@\n \t\t<integer>620</integer>\n \t</array>\n \t<key>background_picture</key>\n-\t<string>background.png</string>\n+\t<string>background.tiff</string>\n \t<key>icon_size</key>\n \t<integer>96</integer>\n \t<key>applications_symlink</key>\n@@ -22,7 +22,7 @@\n \t\t\t<integer>370</integer>\n \t\t\t<integer>156</integer>\n \t\t</array>\n-\t\t<key>NovaCoin-Qt.app</key>\n+\t\t<key>Aither-Qt.app</key>\n \t\t<array>\n \t\t\t<integer>128</integer>\n \t\t\t<integer>156</integer>"
      },
      {
        "sha": "5a956a2b14a0cb5312374271a763a4f0020cb9b9",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "modified",
        "additions": 246,
        "deletions": 121,
        "changes": 367,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -17,9 +17,8 @@\n # along with this program.  If not, see <http://www.gnu.org/licenses/>.\n #\n \n-import subprocess, sys, re, os, shutil, stat, os.path\n+import subprocess, sys, re, os, shutil, stat, os.path, time\n from string import Template\n-from time import sleep\n from argparse import ArgumentParser\n \n # This is ported from the original macdeployqt with modifications\n@@ -38,14 +37,17 @@ class FrameworkInfo(object):\n         self.sourceFilePath = \"\"\n         self.destinationDirectory = \"\"\n         self.sourceResourcesDirectory = \"\"\n+        self.sourceVersionContentsDirectory = \"\"\n+        self.sourceContentsDirectory = \"\"\n         self.destinationResourcesDirectory = \"\"\n-    \n+        self.destinationVersionContentsDirectory = \"\"\n+\n     def __eq__(self, other):\n         if self.__class__ == other.__class__:\n             return self.__dict__ == other.__dict__\n         else:\n             return False\n-    \n+\n     def __str__(self):\n         return \"\"\" Framework name: %s\n  Framework directory: %s\n@@ -69,51 +71,51 @@ class FrameworkInfo(object):\n        self.deployedInstallName,\n        self.sourceFilePath,\n        self.destinationDirectory)\n-    \n+\n     def isDylib(self):\n         return self.frameworkName.endswith(\".dylib\")\n-    \n+\n     def isQtFramework(self):\n         if self.isDylib():\n             return self.frameworkName.startswith(\"libQt\")\n         else:\n             return self.frameworkName.startswith(\"Qt\")\n-    \n+\n     reOLine = re.compile(r'^(.+) \\(compatibility version [0-9.]+, current version [0-9.]+\\)$')\n     bundleFrameworkDirectory = \"Contents/Frameworks\"\n     bundleBinaryDirectory = \"Contents/MacOS\"\n-    \n+\n     @classmethod\n     def fromOtoolLibraryLine(cls, line):\n         # Note: line must be trimmed\n         if line == \"\":\n             return None\n-        \n+\n         # Don't deploy system libraries (exception for libQtuitools and libQtlucene).\n         if line.startswith(\"/System/Library/\") or line.startswith(\"@executable_path\") or (line.startswith(\"/usr/lib/\") and \"libQt\" not in line):\n             return None\n-        \n+\n         m = cls.reOLine.match(line)\n         if m is None:\n             raise RuntimeError(\"otool line could not be parsed: \" + line)\n-        \n+\n         path = m.group(1)\n-        \n+\n         info = cls()\n         info.sourceFilePath = path\n         info.installName = path\n-        \n+\n         if path.endswith(\".dylib\"):\n             dirname, filename = os.path.split(path)\n             info.frameworkName = filename\n             info.frameworkDirectory = dirname\n             info.frameworkPath = path\n-            \n+\n             info.binaryDirectory = dirname\n             info.binaryName = filename\n             info.binaryPath = path\n             info.version = \"-\"\n-            \n+\n             info.installName = path\n             info.deployedInstallName = \"@executable_path/../Frameworks/\" + info.binaryName\n             info.sourceFilePath = path\n@@ -128,28 +130,32 @@ class FrameworkInfo(object):\n                 i += 1\n             if i == len(parts):\n                 raise RuntimeError(\"Could not find .framework or .dylib in otool line: \" + line)\n-            \n+\n             info.frameworkName = parts[i]\n             info.frameworkDirectory = \"/\".join(parts[:i])\n             info.frameworkPath = os.path.join(info.frameworkDirectory, info.frameworkName)\n-            \n+\n             info.binaryName = parts[i+3]\n             info.binaryDirectory = \"/\".join(parts[i+1:i+3])\n             info.binaryPath = os.path.join(info.binaryDirectory, info.binaryName)\n             info.version = parts[i+2]\n-            \n+\n             info.deployedInstallName = \"@executable_path/../Frameworks/\" + os.path.join(info.frameworkName, info.binaryPath)\n             info.destinationDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, info.binaryDirectory)\n-            \n+\n             info.sourceResourcesDirectory = os.path.join(info.frameworkPath, \"Resources\")\n+            info.sourceContentsDirectory = os.path.join(info.frameworkPath, \"Contents\")\n+            info.sourceVersionContentsDirectory = os.path.join(info.frameworkPath, \"Versions\", info.version, \"Contents\")\n             info.destinationResourcesDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Resources\")\n-        \n+            info.destinationContentsDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Contents\")\n+            info.destinationVersionContentsDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Versions\", info.version, \"Contents\")\n+\n         return info\n \n class ApplicationBundleInfo(object):\n     def __init__(self, path):\n         self.path = path\n-        appName = os.path.splitext(os.path.basename(path))[0]\n+        appName = \"Aither-Qt\"\n         self.binaryPath = os.path.join(path, \"Contents\", \"MacOS\", appName)\n         if not os.path.exists(self.binaryPath):\n             raise RuntimeError(\"Could not find bundle binary for \" + path)\n@@ -161,7 +167,7 @@ class DeploymentInfo(object):\n         self.qtPath = None\n         self.pluginPath = None\n         self.deployedFrameworks = []\n-    \n+\n     def detectQtPath(self, frameworkDirectory):\n         parentDir = os.path.dirname(frameworkDirectory)\n         if os.path.exists(os.path.join(parentDir, \"translations\")):\n@@ -180,7 +186,7 @@ class DeploymentInfo(object):\n             pluginPath = os.path.join(self.qtPath, \"plugins\")\n             if os.path.exists(pluginPath):\n                 self.pluginPath = pluginPath\n-    \n+\n     def usesFramework(self, name):\n         nameDot = \"%s.\" % name\n         libNameDot = \"lib%s.\" % name\n@@ -196,32 +202,35 @@ class DeploymentInfo(object):\n def getFrameworks(binaryPath, verbose):\n     if verbose >= 3:\n         print \"Inspecting with otool: \" + binaryPath\n-    otool = subprocess.Popen([\"otool\", \"-L\", binaryPath], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n+    otoolbin=os.getenv(\"OTOOL\", \"otool\")\n+    otool = subprocess.Popen([otoolbin, \"-L\", binaryPath], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n     o_stdout, o_stderr = otool.communicate()\n     if otool.returncode != 0:\n         if verbose >= 1:\n             sys.stderr.write(o_stderr)\n             sys.stderr.flush()\n             raise RuntimeError(\"otool failed with return code %d\" % otool.returncode)\n-    \n+\n     otoolLines = o_stdout.split(\"\\n\")\n     otoolLines.pop(0) # First line is the inspected binary\n     if \".framework\" in binaryPath or binaryPath.endswith(\".dylib\"):\n         otoolLines.pop(0) # Frameworks and dylibs list themselves as a dependency.\n-    \n+\n     libraries = []\n     for line in otoolLines:\n+        line = line.replace(\"@loader_path\", os.path.dirname(binaryPath))\n         info = FrameworkInfo.fromOtoolLibraryLine(line.strip())\n         if info is not None:\n             if verbose >= 3:\n                 print \"Found framework:\"\n                 print info\n             libraries.append(info)\n-    \n+\n     return libraries\n \n def runInstallNameTool(action, *args):\n-    subprocess.check_call([\"install_name_tool\", \"-\"+action] + list(args))\n+    installnametoolbin=os.getenv(\"INSTALLNAMETOOL\", \"install_name_tool\")\n+    subprocess.check_call([installnametoolbin, \"-\"+action] + list(args))\n \n def changeInstallName(oldName, newName, binaryPath, verbose):\n     if verbose >= 3:\n@@ -239,30 +248,30 @@ def changeIdentification(id, binaryPath, verbose):\n     runInstallNameTool(\"id\", id, binaryPath)\n \n def runStrip(binaryPath, verbose):\n+    stripbin=os.getenv(\"STRIP\", \"strip\")\n     if verbose >= 3:\n         print \"Using strip:\"\n         print \" stripped\", binaryPath\n-    subprocess.check_call([\"strip\", \"-x\", binaryPath])\n+    subprocess.check_call([stripbin, \"-x\", binaryPath])\n \n def copyFramework(framework, path, verbose):\n     if framework.sourceFilePath.startswith(\"Qt\"):\n         #standard place for Nokia Qt installer's frameworks\n         fromPath = \"/Library/Frameworks/\" + framework.sourceFilePath\n     else:\n         fromPath = framework.sourceFilePath\n-\n     toDir = os.path.join(path, framework.destinationDirectory)\n     toPath = os.path.join(toDir, framework.binaryName)\n-    \n+\n     if not os.path.exists(fromPath):\n         raise RuntimeError(\"No file at \" + fromPath)\n-    \n+\n     if os.path.exists(toPath):\n         return None # Already there\n-    \n+\n     if not os.path.exists(toDir):\n         os.makedirs(toDir)\n-    \n+\n     shutil.copy2(fromPath, toPath)\n     if verbose >= 3:\n         print \"Copied:\", fromPath\n@@ -273,68 +282,85 @@ def copyFramework(framework, path, verbose):\n       os.chmod(toPath, permissions.st_mode | stat.S_IWRITE)\n \n     if not framework.isDylib(): # Copy resources for real frameworks\n+\n+        linkfrom = os.path.join(path, \"Contents\",\"Frameworks\", framework.frameworkName, \"Versions\", \"Current\")\n+        linkto = framework.version\n+        if not os.path.exists(linkfrom):\n+            os.symlink(linkto, linkfrom)\n+            if verbose >= 2:\n+                print \"Linked:\", linkfrom, \"->\", linkto\n         fromResourcesDir = framework.sourceResourcesDirectory\n         if os.path.exists(fromResourcesDir):\n             toResourcesDir = os.path.join(path, framework.destinationResourcesDirectory)\n-            shutil.copytree(fromResourcesDir, toResourcesDir)\n+            shutil.copytree(fromResourcesDir, toResourcesDir, symlinks=True)\n             if verbose >= 3:\n                 print \"Copied resources:\", fromResourcesDir\n                 print \" to:\", toResourcesDir\n+        fromContentsDir = framework.sourceVersionContentsDirectory\n+        if not os.path.exists(fromContentsDir):\n+            fromContentsDir = framework.sourceContentsDirectory\n+        if os.path.exists(fromContentsDir):\n+            toContentsDir = os.path.join(path, framework.destinationVersionContentsDirectory)\n+            shutil.copytree(fromContentsDir, toContentsDir, symlinks=True)\n+            contentslinkfrom = os.path.join(path, framework.destinationContentsDirectory)\n+            if verbose >= 3:\n+                print \"Copied Contents:\", fromContentsDir\n+                print \" to:\", toContentsDir\n     elif framework.frameworkName.startswith(\"libQtGui\"): # Copy qt_menu.nib (applies to non-framework layout)\n         qtMenuNibSourcePath = os.path.join(framework.frameworkDirectory, \"Resources\", \"qt_menu.nib\")\n         qtMenuNibDestinationPath = os.path.join(path, \"Contents\", \"Resources\", \"qt_menu.nib\")\n         if os.path.exists(qtMenuNibSourcePath) and not os.path.exists(qtMenuNibDestinationPath):\n-            shutil.copytree(qtMenuNibSourcePath, qtMenuNibDestinationPath)\n+            shutil.copytree(qtMenuNibSourcePath, qtMenuNibDestinationPath, symlinks=True)\n             if verbose >= 3:\n                 print \"Copied for libQtGui:\", qtMenuNibSourcePath\n                 print \" to:\", qtMenuNibDestinationPath\n-    \n+\n     return toPath\n \n def deployFrameworks(frameworks, bundlePath, binaryPath, strip, verbose, deploymentInfo=None):\n     if deploymentInfo is None:\n         deploymentInfo = DeploymentInfo()\n-    \n+\n     while len(frameworks) > 0:\n         framework = frameworks.pop(0)\n         deploymentInfo.deployedFrameworks.append(framework.frameworkName)\n-        \n+\n         if verbose >= 2:\n             print \"Processing\", framework.frameworkName, \"...\"\n-        \n+\n         # Get the Qt path from one of the Qt frameworks\n         if deploymentInfo.qtPath is None and framework.isQtFramework():\n             deploymentInfo.detectQtPath(framework.frameworkDirectory)\n         \n-        if framework.installName.startswith(\"@executable_path\"):\n+        if framework.installName.startswith(\"@executable_path\") or framework.installName.startswith(bundlePath):\n             if verbose >= 2:\n                 print framework.frameworkName, \"already deployed, skipping.\"\n             continue\n-        \n+\n         # install_name_tool the new id into the binary\n         changeInstallName(framework.installName, framework.deployedInstallName, binaryPath, verbose)\n-        \n+\n         # Copy farmework to app bundle.\n         deployedBinaryPath = copyFramework(framework, bundlePath, verbose)\n         # Skip the rest if already was deployed.\n         if deployedBinaryPath is None:\n             continue\n-        \n+\n         if strip:\n             runStrip(deployedBinaryPath, verbose)\n-        \n+\n         # install_name_tool it a new id.\n         changeIdentification(framework.deployedInstallName, deployedBinaryPath, verbose)\n         # Check for framework dependencies\n         dependencies = getFrameworks(deployedBinaryPath, verbose)\n-        \n+\n         for dependency in dependencies:\n             changeInstallName(dependency.installName, dependency.deployedInstallName, deployedBinaryPath, verbose)\n-            \n+\n             # Deploy framework if necessary.\n             if dependency.frameworkName not in deploymentInfo.deployedFrameworks and dependency not in frameworks:\n                 frameworks.append(dependency)\n-    \n+\n     return deploymentInfo\n \n def deployFrameworksForAppBundle(applicationBundle, strip, verbose):\n@@ -348,6 +374,8 @@ def deployFrameworksForAppBundle(applicationBundle, strip, verbose):\n def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n     # Lookup available plugins, exclude unneeded\n     plugins = []\n+    if deploymentInfo.pluginPath is None:\n+        return\n     for dirpath, dirnames, filenames in os.walk(deploymentInfo.pluginPath):\n         pluginDirectory = os.path.relpath(dirpath, deploymentInfo.pluginPath)\n         if pluginDirectory == \"designer\":\n@@ -365,15 +393,31 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n             # Deploy the script plugins only if QtScript is in use\n             if not deploymentInfo.usesFramework(\"QtScript\"):\n                 continue\n-        elif pluginDirectory == \"qmltooling\":\n+        elif pluginDirectory == \"qmltooling\" or pluginDirectory == \"qml1tooling\":\n             # Deploy the qml plugins only if QtDeclarative is in use\n             if not deploymentInfo.usesFramework(\"QtDeclarative\"):\n                 continue\n         elif pluginDirectory == \"bearer\":\n             # Deploy the bearer plugins only if QtNetwork is in use\n             if not deploymentInfo.usesFramework(\"QtNetwork\"):\n                 continue\n-        \n+        elif pluginDirectory == \"position\":\n+            # Deploy the position plugins only if QtPositioning is in use\n+            if not deploymentInfo.usesFramework(\"QtPositioning\"):\n+                continue\n+        elif pluginDirectory == \"sensors\" or pluginDirectory == \"sensorgestures\":\n+            # Deploy the sensor plugins only if QtSensors is in use\n+            if not deploymentInfo.usesFramework(\"QtSensors\"):\n+                continue\n+        elif pluginDirectory == \"audio\" or pluginDirectory == \"playlistformats\":\n+            # Deploy the audio plugins only if QtMultimedia is in use\n+            if not deploymentInfo.usesFramework(\"QtMultimedia\"):\n+                continue\n+        elif pluginDirectory == \"mediaservice\":\n+            # Deploy the mediaservice plugins only if QtMultimediaWidgets is in use\n+            if not deploymentInfo.usesFramework(\"QtMultimediaWidgets\"):\n+                continue\n+\n         for pluginName in filenames:\n             pluginPath = os.path.join(pluginDirectory, pluginName)\n             if pluginName.endswith(\"_debug.dylib\"):\n@@ -391,55 +435,65 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n                 # Deploy the opengl graphicssystem plugin only if QtOpenGL is in use\n                 if not deploymentInfo.usesFramework(\"QtOpenGL\"):\n                     continue\n-            \n+            elif pluginPath == \"accessible/libqtaccessiblequick.dylib\":\n+                # Deploy the accessible qtquick plugin only if QtQuick is in use\n+                if not deploymentInfo.usesFramework(\"QtQuick\"):\n+                    continue\n+\n             plugins.append((pluginDirectory, pluginName))\n-    \n+\n     for pluginDirectory, pluginName in plugins:\n         if verbose >= 2:\n             print \"Processing plugin\", os.path.join(pluginDirectory, pluginName), \"...\"\n-        \n+\n         sourcePath = os.path.join(deploymentInfo.pluginPath, pluginDirectory, pluginName)\n         destinationDirectory = os.path.join(appBundleInfo.pluginPath, pluginDirectory)\n         if not os.path.exists(destinationDirectory):\n             os.makedirs(destinationDirectory)\n-        \n+\n         destinationPath = os.path.join(destinationDirectory, pluginName)\n         shutil.copy2(sourcePath, destinationPath)\n         if verbose >= 3:\n             print \"Copied:\", sourcePath\n             print \" to:\", destinationPath\n-        \n+\n         if strip:\n             runStrip(destinationPath, verbose)\n-        \n+\n         dependencies = getFrameworks(destinationPath, verbose)\n-        \n+\n         for dependency in dependencies:\n             changeInstallName(dependency.installName, dependency.deployedInstallName, destinationPath, verbose)\n-            \n+\n             # Deploy framework if necessary.\n             if dependency.frameworkName not in deploymentInfo.deployedFrameworks:\n                 deployFrameworks([dependency], appBundleInfo.path, destinationPath, strip, verbose, deploymentInfo)\n \n qt_conf=\"\"\"[Paths]\n-translations=Resources\n-plugins=PlugIns\n+Translations=Resources\n+Plugins=PlugIns\n \"\"\"\n \n ap = ArgumentParser(description=\"\"\"Improved version of macdeployqt.\n \n Outputs a ready-to-deploy app in a folder \"dist\" and optionally wraps it in a .dmg file.\n Note, that the \"dist\" folder will be deleted before deploying on each run.\n \n-Optionally, Qt translation files (.qm) and additional resources can be added to the bundle.\"\"\")\n+Optionally, Qt translation files (.qm) and additional resources can be added to the bundle.\n+\n+Also optionally signs the .app bundle; set the CODESIGNARGS environment variable to pass arguments\n+to the codesign tool.\n+E.g. CODESIGNARGS='--sign \"Developer ID Application: ...\" --keychain /encrypted/foo.keychain'\"\"\")\n \n ap.add_argument(\"app_bundle\", nargs=1, metavar=\"app-bundle\", help=\"application bundle to be deployed\")\n ap.add_argument(\"-verbose\", type=int, nargs=1, default=[1], metavar=\"<0-3>\", help=\"0 = no output, 1 = error/warning (default), 2 = normal, 3 = debug\")\n ap.add_argument(\"-no-plugins\", dest=\"plugins\", action=\"store_false\", default=True, help=\"skip plugin deployment\")\n ap.add_argument(\"-no-strip\", dest=\"strip\", action=\"store_false\", default=True, help=\"don't run 'strip' on the binaries\")\n+ap.add_argument(\"-sign\", dest=\"sign\", action=\"store_true\", default=False, help=\"sign .app bundle with codesign tool\")\n ap.add_argument(\"-dmg\", nargs=\"?\", const=\"\", metavar=\"basename\", help=\"create a .dmg disk image; if basename is not specified, a camel-cased version of the app name is used\")\n ap.add_argument(\"-fancy\", nargs=1, metavar=\"plist\", default=[], help=\"make a fancy looking disk image using the given plist file with instructions; requires -dmg to work\")\n ap.add_argument(\"-add-qt-tr\", nargs=1, metavar=\"languages\", default=[], help=\"add Qt translation files to the bundle's ressources; the language list must be separated with commas, not with whitespace\")\n+ap.add_argument(\"-translations-dir\", nargs=1, metavar=\"path\", default=None, help=\"Path to Qt's translation files\")\n ap.add_argument(\"-add-resources\", nargs=\"+\", metavar=\"path\", default=[], help=\"list of additional files or folders to be copied into the bundle's resources; must be the last argument\")\n \n config = ap.parse_args()\n@@ -458,6 +512,15 @@ if not os.path.exists(app_bundle):\n app_bundle_name = os.path.splitext(os.path.basename(app_bundle))[0]\n \n # ------------------------------------------------\n+translations_dir = None\n+if config.translations_dir and config.translations_dir[0]:\n+    if os.path.exists(config.translations_dir[0]):\n+        translations_dir = config.translations_dir[0]\n+    else:\n+        if verbose >= 1:\n+            sys.stderr.write(\"Error: Could not find translation dir \\\"%s\\\"\\n\" % (translations_dir))\n+        sys.exit(1)\n+# ------------------------------------------------\n \n for p in config.add_resources:\n     if verbose >= 3:\n@@ -479,31 +542,21 @@ if len(config.fancy) == 1:\n             sys.stderr.write(\"Error: Could not import plistlib which is required for fancy disk images.\\n\")\n         sys.exit(1)\n     \n-    if verbose >= 3:\n-        print \"Fancy: Importing appscript...\"\n-    try:\n-        import appscript\n-    except ImportError:\n-        if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not import appscript which is required for fancy disk images.\\n\")\n-            sys.stderr.write(\"Please install it e.g. with \\\"sudo easy_install appscript\\\".\\n\")\n-        sys.exit(1)\n-    \n     p = config.fancy[0]\n     if verbose >= 3:\n         print \"Fancy: Loading \\\"%s\\\"...\" % p\n     if not os.path.exists(p):\n         if verbose >= 1:\n             sys.stderr.write(\"Error: Could not find fancy disk image plist at \\\"%s\\\"\\n\" % (p))\n         sys.exit(1)\n-    \n+\n     try:\n         fancy = plistlib.readPlist(p)\n     except:\n         if verbose >= 1:\n             sys.stderr.write(\"Error: Could not parse fancy disk image plist at \\\"%s\\\"\\n\" % (p))\n         sys.exit(1)\n-    \n+\n     try:\n         assert not fancy.has_key(\"window_bounds\") or (isinstance(fancy[\"window_bounds\"], list) and len(fancy[\"window_bounds\"]) == 4)\n         assert not fancy.has_key(\"background_picture\") or isinstance(fancy[\"background_picture\"], str)\n@@ -517,7 +570,7 @@ if len(config.fancy) == 1:\n         if verbose >= 1:\n             sys.stderr.write(\"Error: Bad format of fancy disk image plist at \\\"%s\\\"\\n\" % (p))\n         sys.exit(1)\n-    \n+\n     if fancy.has_key(\"background_picture\"):\n         bp = fancy[\"background_picture\"]\n         if verbose >= 3:\n@@ -538,20 +591,20 @@ else:\n if os.path.exists(\"dist\"):\n     if verbose >= 2:\n         print \"+ Removing old dist folder +\"\n-    \n+\n     shutil.rmtree(\"dist\")\n \n # ------------------------------------------------\n \n-target = os.path.join(\"dist\", app_bundle)\n+target = os.path.join(\"dist\", \"Aither-Qt.app\")\n \n if verbose >= 2:\n     print \"+ Copying source bundle +\"\n if verbose >= 3:\n     print app_bundle, \"->\", target\n \n os.mkdir(\"dist\")\n-shutil.copytree(app_bundle, target)\n+shutil.copytree(app_bundle, target, symlinks=True)\n \n applicationBundle = ApplicationBundleInfo(target)\n \n@@ -571,27 +624,34 @@ try:\n except RuntimeError as e:\n     if verbose >= 1:\n         sys.stderr.write(\"Error: %s\\n\" % str(e))\n-    sys.exit(ret)\n+    sys.exit(1)\n \n # ------------------------------------------------\n \n if config.plugins:\n     if verbose >= 2:\n         print \"+ Deploying plugins +\"\n-    \n+\n     try:\n         deployPlugins(applicationBundle, deploymentInfo, config.strip, verbose)\n     except RuntimeError as e:\n         if verbose >= 1:\n             sys.stderr.write(\"Error: %s\\n\" % str(e))\n-        sys.exit(ret)\n+        sys.exit(1)\n \n # ------------------------------------------------\n \n if len(config.add_qt_tr) == 0:\n     add_qt_tr = []\n else:\n-    qt_tr_dir = os.path.join(deploymentInfo.qtPath, \"translations\")\n+    if translations_dir is not None:\n+        qt_tr_dir = translations_dir\n+    else:\n+        if deploymentInfo.qtPath is not None:\n+            qt_tr_dir = os.path.join(deploymentInfo.qtPath, \"translations\")\n+        else:\n+            sys.stderr.write(\"Error: Could not find Qt translation path\\n\")\n+            sys.exit(1)\n     add_qt_tr = [\"qt_%s.qm\" % lng for lng in config.add_qt_tr[0].split(\",\")]\n     for lng_file in add_qt_tr:\n         p = os.path.join(qt_tr_dir, lng_file)\n@@ -631,13 +691,39 @@ for p in config.add_resources:\n     if verbose >= 3:\n         print p, \"->\", t\n     if os.path.isdir(p):\n-        shutil.copytree(p, t)\n+        shutil.copytree(p, t, symlinks=True)\n     else:\n         shutil.copy2(p, t)\n \n # ------------------------------------------------\n \n+if config.sign and 'CODESIGNARGS' not in os.environ:\n+    print \"You must set the CODESIGNARGS environment variable. Skipping signing.\"\n+elif config.sign:\n+    if verbose >= 1:\n+        print \"Code-signing app bundle %s\"%(target,)\n+    subprocess.check_call(\"codesign --force %s %s\"%(os.environ['CODESIGNARGS'], target), shell=True)\n+\n+# ------------------------------------------------\n+\n if config.dmg is not None:\n+\n+    #Patch in check_output for Python 2.6\n+    if \"check_output\" not in dir( subprocess ):\n+        def f(*popenargs, **kwargs):\n+            if 'stdout' in kwargs:\n+                raise ValueError('stdout argument not allowed, it will be overridden.')\n+            process = subprocess.Popen(stdout=subprocess.PIPE, *popenargs, **kwargs)\n+            output, unused_err = process.communicate()\n+            retcode = process.poll()\n+            if retcode:\n+                cmd = kwargs.get(\"args\")\n+                if cmd is None:\n+                    cmd = popenargs[0]\n+                raise CalledProcessError(retcode, cmd)\n+            return output\n+        subprocess.check_output = f\n+\n     def runHDIUtil(verb, image_basename, **kwargs):\n         hdiutil_args = [\"hdiutil\", verb, image_basename + \".dmg\"]\n         if kwargs.has_key(\"capture_stdout\"):\n@@ -649,29 +735,29 @@ if config.dmg is not None:\n             elif verbose >= 3:\n                 hdiutil_args.append(\"-verbose\")\n             run = subprocess.check_call\n-        \n+\n         for key, value in kwargs.iteritems():\n             hdiutil_args.append(\"-\" + key)\n             if not value is True:\n                 hdiutil_args.append(str(value))\n-        \n+\n         return run(hdiutil_args)\n-    \n+\n     if verbose >= 2:\n         if fancy is None:\n             print \"+ Creating .dmg disk image +\"\n         else:\n             print \"+ Preparing .dmg disk image +\"\n-    \n+\n     if config.dmg != \"\":\n         dmg_name = config.dmg\n     else:\n         spl = app_bundle_name.split(\" \")\n         dmg_name = spl[0] + \"\".join(p.capitalize() for p in spl[1:])\n-    \n+\n     if fancy is None:\n         try:\n-            runHDIUtil(\"create\", dmg_name, srcfolder=\"dist\", format=\"UDBZ\", volname=app_bundle_name, ov=True)\n+            runHDIUtil(\"create\", dmg_name, srcfolder=\"dist\", format=\"UDBZ\", volname=\"Aither-Core\", ov=True)\n         except subprocess.CalledProcessError as e:\n             sys.exit(e.returncode)\n     else:\n@@ -681,73 +767,112 @@ if config.dmg is not None:\n         for path, dirs, files in os.walk(\"dist\"):\n             for file in files:\n                 size += os.path.getsize(os.path.join(path, file))\n-        size += int(size * 0.1)\n-        \n+        size += int(size * 0.15)\n+\n         if verbose >= 3:\n             print \"Creating temp image for modification...\"\n         try:\n-            runHDIUtil(\"create\", dmg_name + \".temp\", srcfolder=\"dist\", format=\"UDRW\", size=size, volname=app_bundle_name, ov=True)\n+            runHDIUtil(\"create\", dmg_name + \".temp\", srcfolder=\"dist\", format=\"UDRW\", size=size, volname=\"Aither-Core\", ov=True)\n         except subprocess.CalledProcessError as e:\n             sys.exit(e.returncode)\n-        \n+\n         if verbose >= 3:\n             print \"Attaching temp image...\"\n         try:\n             output = runHDIUtil(\"attach\", dmg_name + \".temp\", readwrite=True, noverify=True, noautoopen=True, capture_stdout=True)\n         except subprocess.CalledProcessError as e:\n             sys.exit(e.returncode)\n-        \n+\n         m = re.search(\"/Volumes/(.+$)\", output)\n         disk_root = m.group(0)\n         disk_name = m.group(1)\n-        \n+\n         if verbose >= 2:\n             print \"+ Applying fancy settings +\"\n-        \n+\n         if fancy.has_key(\"background_picture\"):\n-            bg_path = os.path.join(disk_root, os.path.basename(fancy[\"background_picture\"]))\n+            bg_path = os.path.join(disk_root, \".background\", os.path.basename(fancy[\"background_picture\"]))\n+            os.mkdir(os.path.dirname(bg_path))\n             if verbose >= 3:\n                 print fancy[\"background_picture\"], \"->\", bg_path\n             shutil.copy2(fancy[\"background_picture\"], bg_path)\n         else:\n             bg_path = None\n-        \n+\n         if fancy.get(\"applications_symlink\", False):\n             os.symlink(\"/Applications\", os.path.join(disk_root, \"Applications\"))\n-        \n-        finder = appscript.app(\"Finder\")\n-        disk = finder.disks[disk_name]\n-        disk.open()\n-        window = disk.container_window\n-        window.current_view.set(appscript.k.icon_view)\n-        window.toolbar_visible.set(False)\n-        window.statusbar_visible.set(False)\n-        if fancy.has_key(\"window_bounds\"):\n-            window.bounds.set(fancy[\"window_bounds\"])\n-        view_options = window.icon_view_options\n-        view_options.arrangement.set(appscript.k.not_arranged)\n-        if fancy.has_key(\"icon_size\"):\n-            view_options.icon_size.set(fancy[\"icon_size\"])\n-        if bg_path is not None:\n-            view_options.background_picture.set(disk.files[os.path.basename(bg_path)])\n+\n+        # The Python appscript package broke with OSX 10.8 and isn't being fixed.\n+        # So we now build up an AppleScript string and use the osascript command\n+        # to make the .dmg file pretty:\n+        appscript = Template( \"\"\"\n+        on run argv\n+           tell application \"Finder\"\n+             tell disk \"$disk\"\n+                   open\n+                   set current view of container window to icon view\n+                   set toolbar visible of container window to false\n+                   set statusbar visible of container window to false\n+                   set the bounds of container window to {$window_bounds}\n+                   set theViewOptions to the icon view options of container window\n+                   set arrangement of theViewOptions to not arranged\n+                   set icon size of theViewOptions to $icon_size\n+                   $background_commands\n+                   $items_positions\n+                   close -- close/reopen works around a bug...\n+                   open\n+                   update without registering applications\n+                   delay 5\n+                   eject\n+             end tell\n+           end tell\n+        end run\n+        \"\"\")\n+\n+        itemscript = Template('set position of item \"${item}\" of container window to {${position}}')\n+        items_positions = []\n         if fancy.has_key(\"items_position\"):\n             for name, position in fancy[\"items_position\"].iteritems():\n-                window.items[name].position.set(position)\n-        disk.close()\n+                params = { \"item\" : name, \"position\" : \",\".join([str(p) for p in position]) }\n+                items_positions.append(itemscript.substitute(params))\n+\n+        params = {\n+            \"disk\" : \"Aither-Core\",\n+            \"window_bounds\" : \"300,300,800,620\",\n+            \"icon_size\" : \"96\",\n+            \"background_commands\" : \"\",\n+            \"items_positions\" : \"\\n                   \".join(items_positions)\n+            }\n+        if fancy.has_key(\"window_bounds\"):\n+            params[\"window.bounds\"] = \",\".join([str(p) for p in fancy[\"window_bounds\"]])\n+        if fancy.has_key(\"icon_size\"):\n+            params[\"icon_size\"] = str(fancy[\"icon_size\"])\n         if bg_path is not None:\n-            subprocess.call([\"SetFile\", \"-a\", \"V\", bg_path])\n-        disk.update(registering_applications=False)\n-        sleep(2)\n-        disk.eject()\n-        \n+            # Set background file, then call SetFile to make it invisible.\n+            # (note: making it invisible first makes set background picture fail)\n+            bgscript = Template(\"\"\"set background picture of theViewOptions to file \".background:$bgpic\"\n+                   do shell script \"SetFile -a V /Volumes/$disk/.background/$bgpic\" \"\"\")\n+            params[\"background_commands\"] = bgscript.substitute({\"bgpic\" : os.path.basename(bg_path), \"disk\" : params[\"disk\"]})\n+\n+        s = appscript.substitute(params)\n+        if verbose >= 2:\n+            print(\"Running AppleScript:\")\n+            print(s)\n+\n+        p = subprocess.Popen(['osascript', '-'], stdin=subprocess.PIPE)\n+        p.communicate(input=s)\n+        if p.returncode:\n+            print(\"Error running osascript.\")\n+\n         if verbose >= 2:\n             print \"+ Finalizing .dmg disk image +\"\n+            time.sleep(5)\n         \n         try:\n             runHDIUtil(\"convert\", dmg_name + \".temp\", format=\"UDBZ\", o=dmg_name + \".dmg\", ov=True)\n         except subprocess.CalledProcessError as e:\n             sys.exit(e.returncode)\n-        \n+\n         os.unlink(dmg_name + \".temp.dmg\")\n \n # ------------------------------------------------"
      },
      {
        "sha": "9b592fc9556dc03db62ee6a334711bde00115900",
        "filename": "contrib/macdeploy/notes.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/macdeploy/notes.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/macdeploy/notes.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/notes.txt?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,26 +0,0 @@\n-\n-macdeployqtplus works best on OS X Lion, for Snow Leopard you'd need to install\n-Python 2.7 and make it your default Python installation.\n-\n-You will need the appscript package for the fancy disk image creation to work.\n-Install it by invoking \"sudo easy_install appscript\".\n-\n-Ths script should be invoked in the target directory like this:\n-$source_dir/contrib/macdeploy/macdeployqtplus NovaCoin-Qt.app -add-qt-tr da,de,es,hu,ru,uk,zh_CN,zh_TW -dmg -fancy $source_dir/contrib/macdeploy/fancy.plist -verbose 2\n-\n-During the process, the disk image window will pop up briefly where the fancy\n-settings are applied. This is normal, please do not interfere.\n-\n-You can also set up Qt Creator for invoking the script. For this, go to the\n-\"Projects\" tab on the left side, switch to \"Run Settings\" above and add a\n-deploy configuration. Next add a deploy step choosing \"Custom Process Step\".\n-Fill in the following.\n-\n-Enable custom process step: [x]\n-Command: %{sourceDir}/contrib/macdeploy/macdeployqtplus\n-Working directory: %{buildDir}\n-Command arguments: NovaCoin-Qt.app -add-qt-tr da,de,es,hu,ru,uk,zh_CN,zh_TW -dmg -fancy %{sourceDir}/contrib/macdeploy/fancy.plist -verbose 2\n-\n-After that you can start the deployment process through the menu with\n-Build -> Deploy Project \"novacoin-qt\"\n-"
      },
      {
        "sha": "a9248d25328aa4a78b17f67778a02c63510c2d41",
        "filename": "contrib/qos/README.md",
        "status": "added",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/qos/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/qos/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/README.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,5 @@\n+### Qos ###\n+\n+This is a Linux bash script that will set up tc to limit the outgoing bandwidth for connections to the Aither network. It limits outbound TCP traffic with a source or destination port of 9999, but not if the destination IP is within a LAN (defined as 192.168.x.x).\n+\n+This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it."
      },
      {
        "sha": "dc5234d5a8400df303b78a3369d055f45adb2987",
        "filename": "contrib/qos/tc.sh",
        "status": "added",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/qos/tc.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/qos/tc.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/tc.sh?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,41 @@\n+#network interface on which to limit traffic\n+IF=\"eth0\"\n+#limit of the network interface in question\n+LINKCEIL=\"1gbit\"\n+#limit outbound Aither protocol traffic to this rate\n+LIMIT=\"160kbit\"\n+#defines the address space for which you wish to disable rate limiting\n+LOCALNET=\"192.168.0.0/16\"\n+\n+#delete existing rules\n+tc qdisc del dev ${IF} root\n+\n+#add root class\n+tc qdisc add dev ${IF} root handle 1: htb default 10\n+\n+#add parent class\n+tc class add dev ${IF} parent 1: classid 1:1 htb rate ${LINKCEIL} ceil ${LINKCEIL}\n+\n+#add our two classes. one unlimited, another limited\n+tc class add dev ${IF} parent 1:1 classid 1:10 htb rate ${LINKCEIL} ceil ${LINKCEIL} prio 0\n+tc class add dev ${IF} parent 1:1 classid 1:11 htb rate ${LIMIT} ceil ${LIMIT} prio 1\n+\n+#add handles to our classes so packets marked with <x> go into the class with \"... handle <x> fw ...\"\n+tc filter add dev ${IF} parent 1: protocol ip prio 1 handle 1 fw classid 1:10\n+tc filter add dev ${IF} parent 1: protocol ip prio 2 handle 2 fw classid 1:11\n+\n+#delete any existing rules\n+#disable for now\n+#ret=0\n+#while [ $ret -eq 0 ]; do\n+#\tiptables -t mangle -D OUTPUT 1\n+#\tret=$?\n+#done\n+\n+#limit outgoing traffic to and from port 9999. but not when dealing with a host on the local network\n+#\t(defined by $LOCALNET)\n+#\t--set-mark marks packages matching these criteria with the number \"2\"\n+#\tthese packages are filtered by the tc filter with \"handle 2\"\n+#\tthis filter sends the packages into the 1:11 class, and this class is limited to ${LIMIT}\n+iptables -t mangle -A OUTPUT -p tcp -m tcp --dport 9999 ! -d ${LOCALNET} -j MARK --set-mark 0x2\n+iptables -t mangle -A OUTPUT -p tcp -m tcp --sport 9999 ! -d ${LOCALNET} -j MARK --set-mark 0x2"
      },
      {
        "sha": "6ff3c683175e499b3b20c9f90f2a73ef1d068e17",
        "filename": "contrib/qt_translations.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/qt_translations.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/qt_translations.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qt_translations.py?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -2,7 +2,7 @@\n \n # Helpful little script that spits out a comma-separated list of\n # language codes for Qt icons that should be included\n-# in binary bitcoin distributions\n+# in binary Aither Core distributions\n \n import glob\n import os\n@@ -16,7 +16,7 @@\n d2 = sys.argv[2]\n \n l1 = set([ re.search(r'qt_(.*).qm', f).group(1) for f in glob.glob(os.path.join(d1, 'qt_*.qm')) ])\n-l2 = set([ re.search(r'bitcoin_(.*).qm', f).group(1) for f in glob.glob(os.path.join(d2, 'bitcoin_*.qm')) ])\n+l2 = set([ re.search(r'aither_(.*).qm', f).group(1) for f in glob.glob(os.path.join(d2, 'aither_*.qm')) ])\n \n print \",\".join(sorted(l1.intersection(l2)))\n "
      },
      {
        "sha": "c595f83eb95b20eea68f5f54a2ec0a715f6d75de",
        "filename": "contrib/seeds/README.md",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/seeds/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/seeds/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/README.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,11 @@\n+### Seeds ###\n+\n+Utility to generate the seeds.txt list that is compiled into the client\n+(see [src/chainparamsseeds.h](/src/chainparamsseeds.h) and other utilities in [contrib/seeds](/contrib/seeds)).\n+\n+The seeds compiled into the release are created from sipa's DNS seed data, like this:\n+\n+    curl -s http://bitcoin.sipa.be/seeds.txt > seeds_main.txt\n+    python makeseeds.py < seeds_main.txt > nodes_main.txt\n+    python generate-seeds.py . > ../../src/chainparamsseeds.h\n+"
      },
      {
        "sha": "30fd421c560f2b5bd70f096a25541f30aa67e249",
        "filename": "contrib/seeds/generate-seeds.py",
        "status": "added",
        "additions": 137,
        "deletions": 0,
        "changes": 137,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/seeds/generate-seeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/seeds/generate-seeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/generate-seeds.py?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,137 @@\n+#!/usr/bin/python\n+# Copyright (c) 2014 Wladimir J. van der Laan\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+Script to generate list of seed nodes for chainparams.cpp.\n+\n+This script expects two text files in the directory that is passed as an\n+argument:\n+\n+    nodes_main.txt\n+    nodes_test.txt\n+\n+These files must consist of lines in the format\n+\n+    <ip>\n+    <ip>:<port>\n+    [<ipv6>]\n+    [<ipv6>]:<port>\n+    <onion>.onion\n+    0xDDBBCCAA (IPv4 little-endian old pnSeeds format)\n+\n+The output will be two data structures with the peers in binary format:\n+\n+   static SeedSpec6 pnSeed6_main[]={\n+   ...\n+   }\n+   static SeedSpec6 pnSeed6_test[]={\n+   ...\n+   }\n+\n+These should be pasted into `src/chainparamsseeds.h`.\n+'''\n+from __future__ import print_function, division\n+from base64 import b32decode\n+from binascii import a2b_hex\n+import sys, os\n+import re\n+\n+# ipv4 in ipv6 prefix\n+pchIPv4 = bytearray([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff])\n+# tor-specific ipv6 prefix\n+pchOnionCat = bytearray([0xFD,0x87,0xD8,0x7E,0xEB,0x43])\n+\n+def name_to_ipv6(addr):\n+    if len(addr)>6 and addr.endswith('.onion'):\n+        vchAddr = b32decode(addr[0:-6], True)\n+        if len(vchAddr) != 16-len(pchOnionCat):\n+            raise ValueError('Invalid onion %s' % s)\n+        return pchOnionCat + vchAddr\n+    elif '.' in addr: # IPv4\n+        return pchIPv4 + bytearray((int(x) for x in addr.split('.')))\n+    elif ':' in addr: # IPv6\n+        sub = [[], []] # prefix, suffix\n+        x = 0\n+        addr = addr.split(':')\n+        for i,comp in enumerate(addr):\n+            if comp == '':\n+                if i == 0 or i == (len(addr)-1): # skip empty component at beginning or end\n+                    continue\n+                x += 1 # :: skips to suffix\n+                assert(x < 2)\n+            else: # two bytes per component\n+                val = int(comp, 16)\n+                sub[x].append(val >> 8)\n+                sub[x].append(val & 0xff)\n+        nullbytes = 16 - len(sub[0]) - len(sub[1])\n+        assert((x == 0 and nullbytes == 0) or (x == 1 and nullbytes > 0))\n+        return bytearray(sub[0] + ([0] * nullbytes) + sub[1])\n+    elif addr.startswith('0x'): # IPv4-in-little-endian\n+        return pchIPv4 + bytearray(reversed(a2b_hex(addr[2:])))\n+    else:\n+        raise ValueError('Could not parse address %s' % addr)\n+\n+def parse_spec(s, defaultport):\n+    match = re.match('\\[([0-9a-fA-F:]+)\\](?::([0-9]+))?$', s)\n+    if match: # ipv6\n+        host = match.group(1)\n+        port = match.group(2)\n+    elif s.count(':') > 1: # ipv6, no port\n+        host = s\n+        port = ''\n+    else:\n+        (host,_,port) = s.partition(':')\n+\n+    if not port:\n+        port = defaultport\n+    else:\n+        port = int(port)\n+\n+    host = name_to_ipv6(host)\n+\n+    return (host,port)\n+\n+def process_nodes(g, f, structname, defaultport):\n+    g.write('static SeedSpec6 %s[] = {\\n' % structname)\n+    first = True\n+    for line in f:\n+        comment = line.find('#')\n+        if comment != -1:\n+            line = line[0:comment]\n+        line = line.strip()\n+        if not line:\n+            continue\n+        if not first:\n+            g.write(',\\n')\n+        first = False\n+\n+        (host,port) = parse_spec(line, defaultport)\n+        hoststr = ','.join(('0x%02x' % b) for b in host)\n+        g.write('    {{%s}, %i}' % (hoststr, port))\n+    g.write('\\n};\\n')\n+\n+def main():\n+    if len(sys.argv)<2:\n+        print(('Usage: %s <path_to_nodes_txt>' % sys.argv[0]), file=sys.stderr)\n+        exit(1)\n+    g = sys.stdout\n+    indir = sys.argv[1]\n+    g.write('#ifndef BITCOIN_CHAINPARAMSSEEDS_H\\n')\n+    g.write('#define BITCOIN_CHAINPARAMSSEEDS_H\\n')\n+    g.write('/**\\n')\n+    g.write(' * List of fixed seed nodes for the aither network\\n')\n+    g.write(' * AUTOGENERATED by contrib/seeds/generate-seeds.py\\n')\n+    g.write(' *\\n')\n+    g.write(' * Each line contains a 16-byte IPv6 address and a port.\\n')\n+    g.write(' * IPv4 as well as onion addresses are wrapped inside a IPv6 address accordingly.\\n')\n+    g.write(' */\\n')\n+    with open(os.path.join(indir,'nodes_main.txt'),'r') as f:\n+        process_nodes(g, f, 'pnSeed6_main', 10888)\n+    g.write('\\n')\n+    with open(os.path.join(indir,'nodes_test.txt'),'r') as f:\n+        process_nodes(g, f, 'pnSeed6_test', 11888)\n+    g.write('#endif // BITCOIN_CHAINPARAMSSEEDS_H\\n')\n+\n+if __name__ == '__main__':\n+    main()"
      },
      {
        "sha": "c04d9f6cd8a9ee86b326a1401636f1d92e4c6ba3",
        "filename": "contrib/seeds/makeseeds.py",
        "status": "added",
        "additions": 163,
        "deletions": 0,
        "changes": 163,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/seeds/makeseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/seeds/makeseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/makeseeds.py?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,163 @@\n+#!/usr/bin/env python\n+#\n+# Generate seeds.txt from Pieter's DNS seeder\n+#\n+\n+NSEEDS=512\n+\n+MAX_SEEDS_PER_ASN=2\n+\n+MIN_BLOCKS = 46800\n+\n+# These are hosts that have been observed to be behaving strangely (e.g.\n+# aggressively connecting to every node).\n+SUSPICIOUS_HOSTS = set([])\n+\n+import re\n+import sys\n+import dns.resolver\n+import collections\n+\n+PATTERN_IPV4 = re.compile(r\"^((\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})):(\\d+)$\")\n+PATTERN_IPV6 = re.compile(r\"^\\[([0-9a-z:]+)\\]:(\\d+)$\")\n+PATTERN_ONION = re.compile(r\"^([abcdefghijklmnopqrstuvwxyz234567]{16}\\.onion):(\\d+)$\")\n+PATTERN_AGENT = re.compile(r\"^(\\/Aither:0\\.12\\.1\\/)$\")\n+\n+def parseline(line):\n+    sline = line.split()\n+    if len(sline) < 11:\n+       return None\n+    m = PATTERN_IPV4.match(sline[0])\n+    sortkey = None\n+    ip = None\n+    if m is None:\n+        m = PATTERN_IPV6.match(sline[0])\n+        if m is None:\n+            m = PATTERN_ONION.match(sline[0])\n+            if m is None:\n+                return None\n+            else:\n+                net = 'onion'\n+                ipstr = sortkey = m.group(1)\n+                port = int(m.group(2))\n+        else:\n+            net = 'ipv6'\n+            if m.group(1) in ['::']: # Not interested in localhost\n+                return None\n+            ipstr = m.group(1)\n+            sortkey = ipstr # XXX parse IPv6 into number, could use name_to_ipv6 from generate-seeds\n+            port = int(m.group(2))\n+    else:\n+        # Do IPv4 sanity check\n+        ip = 0\n+        for i in range(0,4):\n+            if int(m.group(i+2)) < 0 or int(m.group(i+2)) > 255:\n+                return None\n+            ip = ip + (int(m.group(i+2)) << (8*(3-i)))\n+        if ip == 0:\n+            return None\n+        net = 'ipv4'\n+        sortkey = ip\n+        ipstr = m.group(1)\n+        port = int(m.group(6))\n+    # Skip bad results.\n+    if sline[1] == 0:\n+        return None\n+    # Extract uptime %.\n+    uptime30 = float(sline[7][:-1])\n+    # Extract Unix timestamp of last success.\n+    lastsuccess = int(sline[2])\n+    # Extract protocol version.\n+    version = int(sline[10])\n+    # Extract user agent.\n+    agent = sline[11][1:-1]\n+    # Extract service flags.\n+    service = int(sline[9], 16)\n+    # Extract blocks.\n+    blocks = int(sline[8])\n+    # Construct result.\n+    return {\n+        'net': net,\n+        'ip': ipstr,\n+        'port': port,\n+        'ipnum': ip,\n+        'uptime': uptime30,\n+        'lastsuccess': lastsuccess,\n+        'version': version,\n+        'agent': agent,\n+        'service': service,\n+        'blocks': blocks,\n+        'sortkey': sortkey,\n+    }\n+\n+def filtermultiport(ips):\n+    '''Filter out hosts with more nodes per IP'''\n+    hist = collections.defaultdict(list)\n+    for ip in ips:\n+        hist[ip['sortkey']].append(ip)\n+    return [value[0] for (key,value) in hist.items() if len(value)==1]\n+\n+# Based on Greg Maxwell's seed_filter.py\n+def filterbyasn(ips, max_per_asn, max_total):\n+    # Sift out ips by type\n+    ips_ipv4 = [ip for ip in ips if ip['net'] == 'ipv4']\n+    ips_ipv6 = [ip for ip in ips if ip['net'] == 'ipv6']\n+    ips_onion = [ip for ip in ips if ip['net'] == 'onion']\n+\n+    # Filter IPv4 by ASN\n+    result = []\n+    asn_count = {}\n+    for ip in ips_ipv4:\n+        if len(result) == max_total:\n+            break\n+        try:\n+            asn = int([x.to_text() for x in dns.resolver.query('.'.join(reversed(ip['ip'].split('.'))) + '.origin.asn.cymru.com', 'TXT').response.answer][0].split('\\\"')[1].split(' ')[0])\n+            if asn not in asn_count:\n+                asn_count[asn] = 0\n+            if asn_count[asn] == max_per_asn:\n+                continue\n+            asn_count[asn] += 1\n+            result.append(ip)\n+        except:\n+            sys.stderr.write('ERR: Could not resolve ASN for \"' + ip['ip'] + '\"\\n')\n+\n+    # TODO: filter IPv6 by ASN\n+\n+    # Add back non-IPv4\n+    result.extend(ips_ipv6)\n+    result.extend(ips_onion)\n+    return result\n+\n+def main():\n+    lines = sys.stdin.readlines()\n+    ips = [parseline(line) for line in lines]\n+\n+    # Skip entries with valid address.\n+    ips = [ip for ip in ips if ip is not None]\n+    # Skip entries from suspicious hosts.\n+    ips = [ip for ip in ips if ip['ip'] not in SUSPICIOUS_HOSTS]\n+    # Enforce minimal number of blocks.\n+    ips = [ip for ip in ips if ip['blocks'] >= MIN_BLOCKS]\n+    # Require service bit 1.\n+    ips = [ip for ip in ips if (ip['service'] & 1) == 1]\n+    # Require at least 50% 30-day uptime.\n+    ips = [ip for ip in ips if ip['uptime'] > 50]\n+    # Require a known and recent user agent.\n+    ips = [ip for ip in ips if PATTERN_AGENT.match(ip['agent'])]\n+    # Sort by availability (and use last success as tie breaker)\n+    ips.sort(key=lambda x: (x['uptime'], x['lastsuccess'], x['ip']), reverse=True)\n+    # Filter out hosts with multiple ports, these are likely abusive\n+    ips = filtermultiport(ips)\n+    # Look up ASNs and limit results, both per ASN and globally.\n+    ips = filterbyasn(ips, MAX_SEEDS_PER_ASN, NSEEDS)\n+    # Sort the results by IP address (for deterministic output).\n+    ips.sort(key=lambda x: (x['net'], x['sortkey']))\n+\n+    for ip in ips:\n+        if ip['net'] == 'ipv6':\n+            print '[%s]:%i' % (ip['ip'], ip['port'])\n+        else:\n+            print '%s:%i' % (ip['ip'], ip['port'])\n+\n+if __name__ == '__main__':\n+    main()"
      },
      {
        "sha": "7d1468eae049aee20dd7e02d538530e1e152863a",
        "filename": "contrib/seeds/nodes_main.txt",
        "status": "added",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/seeds/nodes_main.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/seeds/nodes_main.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_main.txt?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,3 @@\n+163.172.129.21:10888\n+51.15.224.21:10888\n+51.15.252.244:10888"
      },
      {
        "sha": "32585947cca71dcc9d0c154c5925e8e169dc541e",
        "filename": "contrib/seeds/nodes_test.txt",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/seeds/nodes_test.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/seeds/nodes_test.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_test.txt?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1 @@\n+51.15.228.153:11888"
      },
      {
        "sha": "a324d90e7d742e31d9d0f88bf074b9d7c7b042d3",
        "filename": "contrib/spendfrom/README.md",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/spendfrom/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/spendfrom/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/spendfrom/README.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,35 @@\n+### SpendFrom ###\n+\n+Use the raw transactions API to send coins received on a particular\n+address (or addresses).\n+\n+### Usage: ###\n+Depends on [jsonrpc](http://json-rpc.org/).\n+\n+\tspendfrom.py --from=FROMADDRESS1[,FROMADDRESS2] --to=TOADDRESS --amount=amount \\\n+\t             --fee=fee --datadir=/path/to/.aithercore --testnet --dry_run\n+\n+With no arguments, outputs a list of amounts associated with addresses.\n+\n+With arguments, sends coins received by the `FROMADDRESS` addresses to the `TOADDRESS`.\n+\n+### Notes ###\n+\n+- You may explicitly specify how much fee to pay (a fee more than 1% of the amount\n+will fail,  though, to prevent aither-losing accidents). Spendfrom may fail if\n+it thinks the transaction would never be confirmed (if the amount being sent is\n+too small, or if the transaction is too many bytes for the fee).\n+\n+- If a change output needs to be created, the change will be sent to the last\n+`FROMADDRESS` (if you specify just one `FROMADDRESS`, change will go back to it).\n+\n+- If `--datadir` is not specified, the default datadir is used.\n+\n+- The `--dry_run` option will just create and sign the transaction and print\n+the transaction data (as hexadecimal), instead of broadcasting it.\n+\n+- If the transaction is created and broadcast successfully, a transaction id\n+is printed.\n+\n+- If this was a tool for end-users and not programmers, it would have much friendlier\n+error-handling."
      },
      {
        "sha": "01b9768a5b06a459808af61efca624239b301f1d",
        "filename": "contrib/spendfrom/setup.py",
        "status": "added",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/spendfrom/setup.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/spendfrom/setup.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/spendfrom/setup.py?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,9 @@\n+from distutils.core import setup\n+setup(name='btcspendfrom',\n+      version='1.0',\n+      description='Command-line utility for bitcoin \"coin control\"',\n+      author='Gavin Andresen',\n+      author_email='gavin@bitcoinfoundation.org',\n+      requires=['jsonrpc'],\n+      scripts=['spendfrom.py'],\n+      )"
      },
      {
        "sha": "b8861420a431641984d31fdb7afa2c63a45f0ad5",
        "filename": "contrib/spendfrom/spendfrom.py",
        "status": "added",
        "additions": 267,
        "deletions": 0,
        "changes": 267,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/spendfrom/spendfrom.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/spendfrom/spendfrom.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/spendfrom/spendfrom.py?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,267 @@\n+#!/usr/bin/env python\n+#\n+# Use the raw transactions API to spend aithers received on particular addresses,\n+# and send any change back to that same address.\n+#\n+# Example usage:\n+#  spendfrom.py  # Lists available funds\n+#  spendfrom.py --from=ADDRESS --to=ADDRESS --amount=11.00\n+#\n+# Assumes it will talk to a aitherd or Aither-Qt running\n+# on localhost.\n+#\n+# Depends on jsonrpc\n+#\n+\n+from decimal import *\n+import getpass\n+import math\n+import os\n+import os.path\n+import platform\n+import sys\n+import time\n+from jsonrpc import ServiceProxy, json\n+\n+BASE_FEE=Decimal(\"0.001\")\n+\n+def check_json_precision():\n+    \"\"\"Make sure json library being used does not lose precision converting BTC values\"\"\"\n+    n = Decimal(\"20000000.00000003\")\n+    satoshis = int(json.loads(json.dumps(float(n)))*1.0e8)\n+    if satoshis != 2000000000000003:\n+        raise RuntimeError(\"JSON encode/decode loses precision\")\n+\n+def determine_db_dir():\n+    \"\"\"Return the default location of the Aither Core data directory\"\"\"\n+    if platform.system() == \"Darwin\":\n+        return os.path.expanduser(\"~/Library/Application Support/AitherCore/\")\n+    elif platform.system() == \"Windows\":\n+        return os.path.join(os.environ['APPDATA'], \"AitherCore\")\n+    return os.path.expanduser(\"~/.aithercore\")\n+\n+def read_bitcoin_config(dbdir):\n+    \"\"\"Read the aither.conf file from dbdir, returns dictionary of settings\"\"\"\n+    from ConfigParser import SafeConfigParser\n+\n+    class FakeSecHead(object):\n+        def __init__(self, fp):\n+            self.fp = fp\n+            self.sechead = '[all]\\n'\n+        def readline(self):\n+            if self.sechead:\n+                try: return self.sechead\n+                finally: self.sechead = None\n+            else:\n+                s = self.fp.readline()\n+                if s.find('#') != -1:\n+                    s = s[0:s.find('#')].strip() +\"\\n\"\n+                return s\n+\n+    config_parser = SafeConfigParser()\n+    config_parser.readfp(FakeSecHead(open(os.path.join(dbdir, \"aither.conf\"))))\n+    return dict(config_parser.items(\"all\"))\n+\n+def connect_JSON(config):\n+    \"\"\"Connect to a Aither Core JSON-RPC server\"\"\"\n+    testnet = config.get('testnet', '0')\n+    testnet = (int(testnet) > 0)  # 0/1 in config file, convert to True/False\n+    if not 'rpcport' in config:\n+        config['rpcport'] = 19998 if testnet else 9998\n+    connect = \"http://%s:%s@127.0.0.1:%s\"%(config['rpcuser'], config['rpcpassword'], config['rpcport'])\n+    try:\n+        result = ServiceProxy(connect)\n+        # ServiceProxy is lazy-connect, so send an RPC command mostly to catch connection errors,\n+        # but also make sure the aitherd we're talking to is/isn't testnet:\n+        if result.getmininginfo()['testnet'] != testnet:\n+            sys.stderr.write(\"RPC server at \"+connect+\" testnet setting mismatch\\n\")\n+            sys.exit(1)\n+        return result\n+    except:\n+        sys.stderr.write(\"Error connecting to RPC server at \"+connect+\"\\n\")\n+        sys.exit(1)\n+\n+def unlock_wallet(aitherd):\n+    info = aitherd.getinfo()\n+    if 'unlocked_until' not in info:\n+        return True # wallet is not encrypted\n+    t = int(info['unlocked_until'])\n+    if t <= time.time():\n+        try:\n+            passphrase = getpass.getpass(\"Wallet is locked; enter passphrase: \")\n+            aitherd.walletpassphrase(passphrase, 5)\n+        except:\n+            sys.stderr.write(\"Wrong passphrase\\n\")\n+\n+    info = aitherd.getinfo()\n+    return int(info['unlocked_until']) > time.time()\n+\n+def list_available(aitherd):\n+    address_summary = dict()\n+\n+    address_to_account = dict()\n+    for info in aitherd.listreceivedbyaddress(0):\n+        address_to_account[info[\"address\"]] = info[\"account\"]\n+\n+    unspent = aitherd.listunspent(0)\n+    for output in unspent:\n+        # listunspent doesn't give addresses, so:\n+        rawtx = aitherd.getrawtransaction(output['txid'], 1)\n+        vout = rawtx[\"vout\"][output['vout']]\n+        pk = vout[\"scriptPubKey\"]\n+\n+        # This code only deals with ordinary pay-to-aither-address\n+        # or pay-to-script-hash outputs right now; anything exotic is ignored.\n+        if pk[\"type\"] != \"pubkeyhash\" and pk[\"type\"] != \"scripthash\":\n+            continue\n+\n+        address = pk[\"addresses\"][0]\n+        if address in address_summary:\n+            address_summary[address][\"total\"] += vout[\"value\"]\n+            address_summary[address][\"outputs\"].append(output)\n+        else:\n+            address_summary[address] = {\n+                \"total\" : vout[\"value\"],\n+                \"outputs\" : [output],\n+                \"account\" : address_to_account.get(address, \"\")\n+                }\n+\n+    return address_summary\n+\n+def select_coins(needed, inputs):\n+    # Feel free to improve this, this is good enough for my simple needs:\n+    outputs = []\n+    have = Decimal(\"0.0\")\n+    n = 0\n+    while have < needed and n < len(inputs):\n+        outputs.append({ \"txid\":inputs[n][\"txid\"], \"vout\":inputs[n][\"vout\"]})\n+        have += inputs[n][\"amount\"]\n+        n += 1\n+    return (outputs, have-needed)\n+\n+def create_tx(aitherd, fromaddresses, toaddress, amount, fee):\n+    all_coins = list_available(aitherd)\n+\n+    total_available = Decimal(\"0.0\")\n+    needed = amount+fee\n+    potential_inputs = []\n+    for addr in fromaddresses:\n+        if addr not in all_coins:\n+            continue\n+        potential_inputs.extend(all_coins[addr][\"outputs\"])\n+        total_available += all_coins[addr][\"total\"]\n+\n+    if total_available < needed:\n+        sys.stderr.write(\"Error, only %f BTC available, need %f\\n\"%(total_available, needed));\n+        sys.exit(1)\n+\n+    #\n+    # Note:\n+    # Python's json/jsonrpc modules have inconsistent support for Decimal numbers.\n+    # Instead of wrestling with getting json.dumps() (used by jsonrpc) to encode\n+    # Decimals, I'm casting amounts to float before sending them to aitherd.\n+    #\n+    outputs = { toaddress : float(amount) }\n+    (inputs, change_amount) = select_coins(needed, potential_inputs)\n+    if change_amount > BASE_FEE:  # don't bother with zero or tiny change\n+        change_address = fromaddresses[-1]\n+        if change_address in outputs:\n+            outputs[change_address] += float(change_amount)\n+        else:\n+            outputs[change_address] = float(change_amount)\n+\n+    rawtx = aitherd.createrawtransaction(inputs, outputs)\n+    signed_rawtx = aitherd.signrawtransaction(rawtx)\n+    if not signed_rawtx[\"complete\"]:\n+        sys.stderr.write(\"signrawtransaction failed\\n\")\n+        sys.exit(1)\n+    txdata = signed_rawtx[\"hex\"]\n+\n+    return txdata\n+\n+def compute_amount_in(aitherd, txinfo):\n+    result = Decimal(\"0.0\")\n+    for vin in txinfo['vin']:\n+        in_info = aitherd.getrawtransaction(vin['txid'], 1)\n+        vout = in_info['vout'][vin['vout']]\n+        result = result + vout['value']\n+    return result\n+\n+def compute_amount_out(txinfo):\n+    result = Decimal(\"0.0\")\n+    for vout in txinfo['vout']:\n+        result = result + vout['value']\n+    return result\n+\n+def sanity_test_fee(aitherd, txdata_hex, max_fee):\n+    class FeeError(RuntimeError):\n+        pass\n+    try:\n+        txinfo = aitherd.decoderawtransaction(txdata_hex)\n+        total_in = compute_amount_in(aitherd, txinfo)\n+        total_out = compute_amount_out(txinfo)\n+        if total_in-total_out > max_fee:\n+            raise FeeError(\"Rejecting transaction, unreasonable fee of \"+str(total_in-total_out))\n+\n+        tx_size = len(txdata_hex)/2\n+        kb = tx_size/1000  # integer division rounds down\n+        if kb > 1 and fee < BASE_FEE:\n+            raise FeeError(\"Rejecting no-fee transaction, larger than 1000 bytes\")\n+        if total_in < 0.01 and fee < BASE_FEE:\n+            raise FeeError(\"Rejecting no-fee, tiny-amount transaction\")\n+        # Exercise for the reader: compute transaction priority, and\n+        # warn if this is a very-low-priority transaction\n+\n+    except FeeError as err:\n+        sys.stderr.write((str(err)+\"\\n\"))\n+        sys.exit(1)\n+\n+def main():\n+    import optparse\n+\n+    parser = optparse.OptionParser(usage=\"%prog [options]\")\n+    parser.add_option(\"--from\", dest=\"fromaddresses\", default=None,\n+                      help=\"addresses to get aithers from\")\n+    parser.add_option(\"--to\", dest=\"to\", default=None,\n+                      help=\"address to get send aithers to\")\n+    parser.add_option(\"--amount\", dest=\"amount\", default=None,\n+                      help=\"amount to send\")\n+    parser.add_option(\"--fee\", dest=\"fee\", default=\"0.0\",\n+                      help=\"fee to include\")\n+    parser.add_option(\"--datadir\", dest=\"datadir\", default=determine_db_dir(),\n+                      help=\"location of aither.conf file with RPC username/password (default: %default)\")\n+    parser.add_option(\"--testnet\", dest=\"testnet\", default=False, action=\"store_true\",\n+                      help=\"Use the test network\")\n+    parser.add_option(\"--dry_run\", dest=\"dry_run\", default=False, action=\"store_true\",\n+                      help=\"Don't broadcast the transaction, just create and print the transaction data\")\n+\n+    (options, args) = parser.parse_args()\n+\n+    check_json_precision()\n+    config = read_bitcoin_config(options.datadir)\n+    if options.testnet: config['testnet'] = True\n+    aitherd = connect_JSON(config)\n+\n+    if options.amount is None:\n+        address_summary = list_available(aitherd)\n+        for address,info in address_summary.iteritems():\n+            n_transactions = len(info['outputs'])\n+            if n_transactions > 1:\n+                print(\"%s %.8f %s (%d transactions)\"%(address, info['total'], info['account'], n_transactions))\n+            else:\n+                print(\"%s %.8f %s\"%(address, info['total'], info['account']))\n+    else:\n+        fee = Decimal(options.fee)\n+        amount = Decimal(options.amount)\n+        while unlock_wallet(aitherd) == False:\n+            pass # Keep asking for passphrase until they get it right\n+        txdata = create_tx(aitherd, options.fromaddresses.split(\",\"), options.to, amount, fee)\n+        sanity_test_fee(aitherd, txdata, amount*Decimal(\"0.01\"))\n+        if options.dry_run:\n+            print(txdata)\n+        else:\n+            txid = aitherd.sendrawtransaction(txdata)\n+            print(txid)\n+\n+if __name__ == '__main__':\n+    main()"
      },
      {
        "sha": "256a9862fb64ddc81d147127e4283b4915fce0e6",
        "filename": "contrib/testgen/README.md",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/testgen/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/testgen/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/README.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,8 @@\n+### TestGen ###\n+\n+Utilities to generate test vectors for the data-driven Aither tests.\n+\n+Usage: \n+\n+    gen_base58_test_vectors.py valid 50 > ../../src/test/data/base58_keys_valid.json\n+    gen_base58_test_vectors.py invalid 50 > ../../src/test/data/base58_keys_invalid.json\n\\ No newline at end of file"
      },
      {
        "sha": "b716495145f7772cdea37fdd0a7cd1c8caf9dc12",
        "filename": "contrib/testgen/base58.py",
        "status": "added",
        "additions": 104,
        "deletions": 0,
        "changes": 104,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/testgen/base58.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/testgen/base58.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/base58.py?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,104 @@\n+'''\n+Bitcoin base58 encoding and decoding.\n+\n+Based on https://bitcointalk.org/index.php?topic=1026.0 (public domain)\n+'''\n+import hashlib\n+\n+# for compatibility with following code...\n+class SHA256:\n+    new = hashlib.sha256\n+\n+if str != bytes:\n+    # Python 3.x\n+    def ord(c):\n+        return c\n+    def chr(n):\n+        return bytes( (n,) )\n+\n+__b58chars = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n+__b58base = len(__b58chars)\n+b58chars = __b58chars\n+\n+def b58encode(v):\n+    \"\"\" encode v, which is a string of bytes, to base58.\n+    \"\"\"\n+    long_value = 0\n+    for (i, c) in enumerate(v[::-1]):\n+        long_value += (256**i) * ord(c)\n+\n+    result = ''\n+    while long_value >= __b58base:\n+        div, mod = divmod(long_value, __b58base)\n+        result = __b58chars[mod] + result\n+        long_value = div\n+    result = __b58chars[long_value] + result\n+\n+    # Bitcoin does a little leading-zero-compression:\n+    # leading 0-bytes in the input become leading-1s\n+    nPad = 0\n+    for c in v:\n+        if c == '\\0': nPad += 1\n+        else: break\n+\n+    return (__b58chars[0]*nPad) + result\n+\n+def b58decode(v, length = None):\n+    \"\"\" decode v into a string of len bytes\n+    \"\"\"\n+    long_value = 0\n+    for (i, c) in enumerate(v[::-1]):\n+        long_value += __b58chars.find(c) * (__b58base**i)\n+\n+    result = bytes()\n+    while long_value >= 256:\n+        div, mod = divmod(long_value, 256)\n+        result = chr(mod) + result\n+        long_value = div\n+    result = chr(long_value) + result\n+\n+    nPad = 0\n+    for c in v:\n+        if c == __b58chars[0]: nPad += 1\n+        else: break\n+\n+    result = chr(0)*nPad + result\n+    if length is not None and len(result) != length:\n+        return None\n+\n+    return result\n+\n+def checksum(v):\n+    \"\"\"Return 32-bit checksum based on SHA256\"\"\"\n+    return SHA256.new(SHA256.new(v).digest()).digest()[0:4]\n+\n+def b58encode_chk(v):\n+    \"\"\"b58encode a string, with 32-bit checksum\"\"\"\n+    return b58encode(v + checksum(v))\n+\n+def b58decode_chk(v):\n+    \"\"\"decode a base58 string, check and remove checksum\"\"\"\n+    result = b58decode(v)\n+    if result is None:\n+        return None\n+    h3 = checksum(result[:-4])\n+    if result[-4:] == checksum(result[:-4]):\n+        return result[:-4]\n+    else:\n+        return None\n+\n+def get_bcaddress_version(strAddress):\n+    \"\"\" Returns None if strAddress is invalid.  Otherwise returns integer version of address. \"\"\"\n+    addr = b58decode_chk(strAddress)\n+    if addr is None or len(addr)!=21: return None\n+    version = addr[0]\n+    return ord(version)\n+\n+if __name__ == '__main__':\n+    # Test case (from http://gitorious.org/bitcoin/python-base58.git)\n+    assert get_bcaddress_version('15VjRaDX9zpbA8LVnbrCAFzrVzN7ixHNsC') is 0\n+    _ohai = 'o hai'.encode('ascii')\n+    _tmp = b58encode(_ohai)\n+    assert _tmp == 'DYB3oMS'\n+    assert b58decode(_tmp, 5) == _ohai\n+    print(\"Tests passed\")"
      },
      {
        "sha": "2e49640e02d6bae38a8cb21637735973870073e2",
        "filename": "contrib/testgen/gen_base58_test_vectors.py",
        "status": "added",
        "additions": 126,
        "deletions": 0,
        "changes": 126,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/testgen/gen_base58_test_vectors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/testgen/gen_base58_test_vectors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/gen_base58_test_vectors.py?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,126 @@\n+#!/usr/bin/env python\n+'''\n+Generate valid and invalid base58 address and private key test vectors.\n+\n+Usage: \n+    gen_base58_test_vectors.py valid 50 > ../../src/test/data/base58_keys_valid.json\n+    gen_base58_test_vectors.py invalid 50 > ../../src/test/data/base58_keys_invalid.json\n+'''\n+# 2012 Wladimir J. van der Laan\n+# Released under MIT License\n+import os\n+from itertools import islice\n+from base58 import b58encode, b58decode, b58encode_chk, b58decode_chk, b58chars\n+import random\n+from binascii import b2a_hex\n+\n+# key types\n+PUBKEY_ADDRESS = 23\n+SCRIPT_ADDRESS = 85\n+PUBKEY_ADDRESS_TEST = 111\n+SCRIPT_ADDRESS_TEST = 196\n+PRIVKEY = 204\n+PRIVKEY_TEST = 239\n+\n+metadata_keys = ['isPrivkey', 'isTestnet', 'addrType', 'isCompressed']\n+# templates for valid sequences\n+templates = [\n+  # prefix, payload_size, suffix, metadata\n+  #                                  None = N/A\n+  ((PUBKEY_ADDRESS,),      20, (),   (False, False, 'pubkey', None)),\n+  ((SCRIPT_ADDRESS,),      20, (),   (False, False, 'script',  None)),\n+  ((PUBKEY_ADDRESS_TEST,), 20, (),   (False, True,  'pubkey', None)),\n+  ((SCRIPT_ADDRESS_TEST,), 20, (),   (False, True,  'script',  None)),\n+  ((PRIVKEY,),             32, (),   (True,  False, None,  False)),\n+  ((PRIVKEY,),             32, (1,), (True,  False, None,  True)),\n+  ((PRIVKEY_TEST,),        32, (),   (True,  True,  None,  False)),\n+  ((PRIVKEY_TEST,),        32, (1,), (True,  True,  None,  True))\n+]\n+\n+def is_valid(v):\n+    '''Check vector v for validity'''\n+    result = b58decode_chk(v)\n+    if result is None:\n+        return False\n+    valid = False\n+    for template in templates:\n+        prefix = str(bytearray(template[0]))\n+        suffix = str(bytearray(template[2]))\n+        if result.startswith(prefix) and result.endswith(suffix):\n+            if (len(result) - len(prefix) - len(suffix)) == template[1]:\n+                return True\n+    return False\n+\n+def gen_valid_vectors():\n+    '''Generate valid test vectors'''\n+    while True:\n+        for template in templates:\n+            prefix = str(bytearray(template[0]))\n+            payload = os.urandom(template[1]) \n+            suffix = str(bytearray(template[2]))\n+            rv = b58encode_chk(prefix + payload + suffix)\n+            assert is_valid(rv)\n+            metadata = dict([(x,y) for (x,y) in zip(metadata_keys,template[3]) if y is not None])\n+            yield (rv, b2a_hex(payload), metadata)\n+\n+def gen_invalid_vector(template, corrupt_prefix, randomize_payload_size, corrupt_suffix):\n+    '''Generate possibly invalid vector'''\n+    if corrupt_prefix:\n+        prefix = os.urandom(1)\n+    else:\n+        prefix = str(bytearray(template[0]))\n+    \n+    if randomize_payload_size:\n+        payload = os.urandom(max(int(random.expovariate(0.5)), 50))\n+    else:\n+        payload = os.urandom(template[1])\n+    \n+    if corrupt_suffix:\n+        suffix = os.urandom(len(template[2]))\n+    else:\n+        suffix = str(bytearray(template[2]))\n+\n+    return b58encode_chk(prefix + payload + suffix)\n+\n+def randbool(p = 0.5):\n+    '''Return True with P(p)'''\n+    return random.random() < p\n+\n+def gen_invalid_vectors():\n+    '''Generate invalid test vectors'''\n+    # start with some manual edge-cases\n+    yield \"\",\n+    yield \"x\",\n+    while True:\n+        # kinds of invalid vectors:\n+        #   invalid prefix\n+        #   invalid payload length\n+        #   invalid (randomized) suffix (add random data)\n+        #   corrupt checksum\n+        for template in templates:\n+            val = gen_invalid_vector(template, randbool(0.2), randbool(0.2), randbool(0.2))\n+            if random.randint(0,10)<1: # line corruption\n+                if randbool(): # add random character to end\n+                    val += random.choice(b58chars)\n+                else: # replace random character in the middle\n+                    n = random.randint(0, len(val))\n+                    val = val[0:n] + random.choice(b58chars) + val[n+1:]\n+            if not is_valid(val):\n+                yield val,\n+\n+if __name__ == '__main__':\n+    import sys, json\n+    iters = {'valid':gen_valid_vectors, 'invalid':gen_invalid_vectors}\n+    try:\n+        uiter = iters[sys.argv[1]]\n+    except IndexError:\n+        uiter = gen_valid_vectors\n+    try:\n+        count = int(sys.argv[2])\n+    except IndexError:\n+        count = 0\n+   \n+    data = list(islice(uiter(), count))\n+    json.dump(data, sys.stdout, sort_keys=True, indent=4)\n+    sys.stdout.write('\\n')\n+"
      },
      {
        "sha": "b06c14f3d2bc9b81a8f8e1209b4e29698a7091eb",
        "filename": "contrib/tidy_datadir.sh",
        "status": "added",
        "additions": 59,
        "deletions": 0,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/tidy_datadir.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/tidy_datadir.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/tidy_datadir.sh?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,59 @@\n+#!/bin/bash\n+\n+if [ -d \"$1\" ]; then\n+  cd \"$1\"\n+else\n+  echo \"Usage: $0 <datadir>\" >&2\n+  echo \"Removes obsolete Aither database files\" >&2\n+  exit 1\n+fi\n+\n+LEVEL=0\n+if [ -f wallet.dat -a -f addr.dat -a -f blkindex.dat -a -f blk0001.dat ]; then LEVEL=1; fi\n+if [ -f wallet.dat -a -f peers.dat -a -f blkindex.dat -a -f blk0001.dat ]; then LEVEL=2; fi\n+if [ -f wallet.dat -a -f peers.dat -a -f coins/CURRENT -a -f blktree/CURRENT -a -f blocks/blk00000.dat ]; then LEVEL=3; fi\n+if [ -f wallet.dat -a -f peers.dat -a -f chainstate/CURRENT -a -f blocks/index/CURRENT -a -f blocks/blk00000.dat ]; then LEVEL=4; fi\n+\n+case $LEVEL in\n+  0)\n+    echo \"Error: no Aither datadir detected.\"\n+    exit 1\n+    ;;\n+  1)\n+    echo \"Detected old Aither datadir (before 0.7).\"\n+    echo \"Nothing to do.\"\n+    exit 0\n+    ;;\n+  2)\n+    echo \"Detected Aither 0.7 datadir.\"\n+    ;;\n+  3)\n+    echo \"Detected Aither pre-0.8 datadir.\"\n+    ;;\n+  4)\n+    echo \"Detected Aither 0.8 datadir.\"\n+    ;;\n+esac\n+\n+FILES=\"\"\n+DIRS=\"\"\n+\n+if [ $LEVEL -ge 3 ]; then FILES=$(echo $FILES blk????.dat blkindex.dat); fi\n+if [ $LEVEL -ge 2 ]; then FILES=$(echo $FILES addr.dat); fi\n+if [ $LEVEL -ge 4 ]; then DIRS=$(echo $DIRS coins blktree); fi\n+\n+for FILE in $FILES; do\n+  if [ -f $FILE ]; then\n+    echo \"Deleting: $FILE\"\n+    rm -f $FILE\n+  fi\n+done\n+\n+for DIR in $DIRS; do\n+  if [ -d $DIR ]; then\n+    echo \"Deleting: $DIR/\"\n+    rm -rf $DIR\n+  fi\n+done\n+\n+echo \"Done.\""
      },
      {
        "sha": "31aeb8f3d38bb6004a891cea0aa04ed51a4a5973",
        "filename": "contrib/verify-commits/allow-revsig-commits",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/verify-commits/allow-revsig-commits",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/verify-commits/allow-revsig-commits",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/allow-revsig-commits?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,2 @@\n+586a29253dabec3ca0f1ccba9091daabd16b8411\n+eddaba7b5692288087a926da5733e86b47274e4e"
      },
      {
        "sha": "0218b82e11dd3bf8cc1fb8f5d24f4704c9a2cfc0",
        "filename": "contrib/verify-commits/gpg.sh",
        "status": "added",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/verify-commits/gpg.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/verify-commits/gpg.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/gpg.sh?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,33 @@\n+#!/bin/sh\n+INPUT=$(</dev/stdin)\n+VALID=false\n+REVSIG=false\n+IFS=$'\\n'\n+for LINE in $(echo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null); do\n+\tcase \"$LINE\" in\n+\t\"[GNUPG:] VALIDSIG \"*)\n+\t\twhile read KEY; do\n+\t\t\tcase \"$LINE\" in \"[GNUPG:] VALIDSIG $KEY \"*) VALID=true;; esac\n+\t\tdone < ./contrib/verify-commits/trusted-keys\n+\t\t;;\n+\t\"[GNUPG:] REVKEYSIG \"*)\n+\t\t[ \"$BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG\" != 1 ] && exit 1\n+\t\twhile read KEY; do\n+\t\t\tcase \"$LINE\" in \"[GNUPG:] REVKEYSIG ${KEY:24:40} \"*)\n+\t\t\t\tREVSIG=true\n+\t\t\t\tGOODREVSIG=\"[GNUPG:] GOODSIG ${KEY:24:40} \"\n+\t\t\t\t;;\n+\t\t\tesac\n+\t\tdone < ./contrib/verify-commits/trusted-keys\n+\t\t;;\n+\tesac\n+done\n+if ! $VALID; then\n+\texit 1\n+fi\n+if $VALID && $REVSIG; then\n+\techo \"$INPUT\" | gpg --trust-model always \"$@\" | grep \"\\[GNUPG:\\] \\(NEWSIG\\|SIG_ID\\|VALIDSIG\\)\" 2>/dev/null\n+\techo \"$GOODREVSIG\"\n+else\n+\techo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null\n+fi"
      },
      {
        "sha": "c8b84ffdd1236076d48921d87125f7c19d25a3a7",
        "filename": "contrib/verify-commits/pre-push-hook.sh",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/verify-commits/pre-push-hook.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/verify-commits/pre-push-hook.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/pre-push-hook.sh?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,16 @@\n+#!/bin/bash\n+if ! [[ \"$2\" =~ ^(git@)?(www.)?github.com(:|/)aithercoin/aithercoin(.git)?$ ]]; then\n+    exit 0\n+fi\n+\n+while read LINE; do\n+    set -- A $LINE\n+    if [ \"$4\" != \"refs/heads/master\" ]; then\n+        continue\n+    fi\n+    if ! ./contrib/verify-commits/verify-commits.sh $3 > /dev/null 2>&1; then\n+        echo \"ERROR: A commit is not signed, can't push\"\n+        ./contrib/verify-commits/verify-commits.sh\n+        exit 1\n+    fi\n+done < /dev/stdin"
      },
      {
        "sha": "838b8d1ea84bd02a1bc790d3587ed2b37a171f67",
        "filename": "contrib/verify-commits/trusted-git-root",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/verify-commits/trusted-git-root",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/verify-commits/trusted-git-root",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-git-root?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1 @@\n+165e323d851cc87213c7673c6f278e87a6f2e752"
      },
      {
        "sha": "a0d0f82db3f4343a221111c1eeef0489bbba22b9",
        "filename": "contrib/verify-commits/trusted-keys",
        "status": "added",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/verify-commits/trusted-keys",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/verify-commits/trusted-keys",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-keys?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,7 @@\n+71A3B16735405025D447E8F274810B012346C9A6\n+1F4410F6A89268CE3197A84C57896D2FF8F0B657\n+01CDF4627A3B88AAE4A571C87588242FBE38D3A8\n+AF8BE07C7049F3A26B239D5325B3083201782B2F\n+81291FA67D2C379A006A053FEAB5AF94D9E9ABE7\n+3F1888C6DCA92A6499C4911FDBA1A67379A1A931\n+32EE5C4C3FA15CCADB46ABE529D4BCB6416F53EC"
      },
      {
        "sha": "9ba781008a6585699bdf515a52e340f9c56d10a8",
        "filename": "contrib/verify-commits/verify-commits.sh",
        "status": "added",
        "additions": 63,
        "deletions": 0,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/verify-commits/verify-commits.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/verify-commits/verify-commits.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/verify-commits.sh?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,63 @@\n+#!/bin/sh\n+\n+DIR=$(dirname \"$0\")\n+\n+echo \"Please verify all commits in the following list are not evil:\"\n+git log \"$DIR\"\n+\n+VERIFIED_ROOT=$(cat \"${DIR}/trusted-git-root\")\n+\n+IS_REVSIG_ALLOWED () {\n+\twhile read LINE; do\n+\t\t[ \"$LINE\" = \"$1\" ] && return 0\n+\tdone < \"${DIR}/allow-revsig-commits\"\n+\treturn 1\n+}\n+\n+HAVE_FAILED=false\n+IS_SIGNED () {\n+\tif [ $1 = $VERIFIED_ROOT ]; then\n+\t\treturn 0;\n+\tfi\n+\tif IS_REVSIG_ALLOWED \"$1\"; then\n+\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=1\n+\telse\n+\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=0\n+\tfi\n+\tif ! git -c \"gpg.program=${DIR}/gpg.sh\" verify-commit $1 > /dev/null 2>&1; then\n+\t\treturn 1;\n+\tfi\n+\tlocal PARENTS=$(git show -s --format=format:%P $1)\n+\tfor PARENT in $PARENTS; do\n+\t\tif IS_SIGNED $PARENT > /dev/null; then\n+\t\t\treturn 0;\n+\t\tfi\n+\tdone\n+\tif ! \"$HAVE_FAILED\"; then\n+\t\techo \"No parent of $1 was signed with a trusted key!\" > /dev/stderr\n+\t\techo \"Parents are:\" > /dev/stderr\n+\t\tfor PARENT in $PARENTS; do\n+\t\t\tgit show -s $PARENT > /dev/stderr\n+\t\tdone\n+\t\tHAVE_FAILED=true\n+\tfi\n+\treturn 1;\n+}\n+\n+if [ x\"$1\" = \"x\" ]; then\n+\tTEST_COMMIT=\"HEAD\"\n+else\n+\tTEST_COMMIT=\"$1\"\n+fi\n+\n+IS_SIGNED \"$TEST_COMMIT\"\n+RES=$?\n+if [ \"$RES\" = 1 ]; then\n+\tif ! \"$HAVE_FAILED\"; then\n+\t\techo \"$TEST_COMMIT was not signed with a trusted key!\"\n+\tfi\n+else\n+\techo \"There is a valid path from $TEST_COMMIT to $VERIFIED_ROOT where all commits are signed!\"\n+fi\n+\n+exit $RES"
      },
      {
        "sha": "1db3fe52fc2c360da1fc6fd8a72758d0f4277874",
        "filename": "contrib/verifysfbinaries/README.md",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/verifysfbinaries/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/verifysfbinaries/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifysfbinaries/README.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,6 @@\n+### Verify Binaries ###\n+This script attempts to download the signature file `SHA256SUMS.asc` from https://bitcoin.org.\n+\n+It first checks if the signature passes, and then downloads the files specified in the file, and checks if the hashes of these files match those that are specified in the signature file.\n+\n+The script returns 0 if everything passes the checks. It returns 1 if either the signature check or the hash check doesn't pass. If an error occurs the return value is 2."
      },
      {
        "sha": "847c5075530571ad9e44234a82d53a52de841e1c",
        "filename": "contrib/verifysfbinaries/verify.sh",
        "status": "added",
        "additions": 121,
        "deletions": 0,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/verifysfbinaries/verify.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/verifysfbinaries/verify.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifysfbinaries/verify.sh?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,121 @@\n+#!/bin/bash\n+\n+###   This script attempts to download the signature file SHA256SUMS.asc from bitcoin.org\n+###   It first checks if the signature passes, and then downloads the files specified in\n+###   the file, and checks if the hashes of these files match those that are specified\n+###   in the signature file.\n+###   The script returns 0 if everything passes the checks. It returns 1 if either the\n+###   signature check or the hash check doesn't pass. If an error occurs the return value is 2\n+\n+function clean_up {\n+   for file in $*\n+   do\n+      rm \"$file\" 2> /dev/null\n+   done\n+}\n+\n+WORKINGDIR=\"/tmp/bitcoin\"\n+TMPFILE=\"hashes.tmp\"\n+\n+SIGNATUREFILENAME=\"SHA256SUMS.asc\"\n+RCSUBDIR=\"test/\"\n+BASEDIR=\"https://bitcoin.org/bin/\"\n+VERSIONPREFIX=\"bitcoin-core-\"\n+RCVERSIONSTRING=\"rc\"\n+\n+#this URL is used if a version number is not specified as an argument to the script\n+SIGNATUREFILE=\"$BASEDIR\"\"$VERSIONPREFIX\"\"0.10.4/\"\"$RCSUBDIR\"\"$SIGNATUREFILENAME\"\n+\n+if [ ! -d \"$WORKINGDIR\" ]; then\n+   mkdir \"$WORKINGDIR\"\n+fi\n+\n+cd \"$WORKINGDIR\"\n+\n+#test if a version number has been passed as an argument\n+if [ -n \"$1\" ]; then\n+   #let's also check if the version number includes the prefix 'bitcoin-',\n+   #  and add this prefix if it doesn't\n+   if [[ $1 == \"$VERSIONPREFIX\"* ]]; then\n+      VERSION=\"$1\"\n+   else\n+      VERSION=\"$VERSIONPREFIX$1\"\n+   fi\n+\n+   #now let's see if the version string contains \"rc\", and strip it off if it does\n+   #  and simultaneously add RCSUBDIR to BASEDIR, where we will look for SIGNATUREFILENAME\n+   if [[ $VERSION == *\"$RCVERSIONSTRING\"* ]]; then\n+      BASEDIR=\"$BASEDIR${VERSION/%-$RCVERSIONSTRING*}/\"\n+      BASEDIR=\"$BASEDIR$RCSUBDIR\"\n+   else\n+      BASEDIR=\"$BASEDIR$VERSION/\"\n+   fi\n+\n+   SIGNATUREFILE=\"$BASEDIR$SIGNATUREFILENAME\"\n+else\n+   BASEDIR=\"${SIGNATUREFILE%/*}/\"\n+fi\n+\n+#first we fetch the file containing the signature\n+WGETOUT=$(wget -N \"$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n+\n+#and then see if wget completed successfully\n+if [ $? -ne 0 ]; then\n+   echo \"Error: couldn't fetch signature file. Have you specified the version number in the following format?\"\n+   echo \"[$VERSIONPREFIX]<version>-[$RCVERSIONSTRING[0-9]] (example: \"$VERSIONPREFIX\"0.10.4-\"$RCVERSIONSTRING\"1)\"\n+   echo \"wget output:\"\n+   echo \"$WGETOUT\"|sed 's/^/\\t/g'\n+   exit 2\n+fi\n+\n+#then we check it\n+GPGOUT=$(gpg --yes --decrypt --output \"$TMPFILE\" \"$SIGNATUREFILENAME\" 2>&1)\n+\n+#return value 0: good signature\n+#return value 1: bad signature\n+#return value 2: gpg error\n+\n+RET=\"$?\"\n+if [ $RET -ne 0 ]; then\n+   if [ $RET -eq 1 ]; then\n+      #and notify the user if it's bad\n+      echo \"Bad signature.\"\n+   elif [ $RET -eq 2 ]; then\n+      #or if a gpg error has occurred\n+      echo \"gpg error. Do you have the Bitcoin Core binary release signing key installed?\"\n+   fi\n+\n+   echo \"gpg output:\"\n+   echo \"$GPGOUT\"|sed 's/^/\\t/g'\n+   clean_up $SIGNATUREFILENAME $TMPFILE\n+   exit \"$RET\"\n+fi\n+\n+#here we extract the filenames from the signature file\n+FILES=$(awk '{print $2}' \"$TMPFILE\")\n+\n+#and download these one by one\n+for file in in $FILES\n+do\n+   wget --quiet -N \"$BASEDIR$file\"\n+done\n+\n+#check hashes\n+DIFF=$(diff <(sha256sum $FILES) \"$TMPFILE\")\n+\n+if [ $? -eq 1 ]; then\n+   echo \"Hashes don't match.\"\n+   echo \"Offending files:\"\n+   echo \"$DIFF\"|grep \"^<\"|awk '{print \"\\t\"$3}'\n+   exit 1\n+elif [ $? -gt 1 ]; then\n+   echo \"Error executing 'diff'\"\n+   exit 2   \n+fi\n+\n+#everything matches! clean up the mess\n+clean_up $FILES $SIGNATUREFILENAME $TMPFILE\n+\n+echo -e \"Verified hashes of \\n$FILES\"\n+\n+exit 0"
      },
      {
        "sha": "30f3f5b26a14a4bcee3ec79d958fd58d8ed00fff",
        "filename": "contrib/wallettools/walletchangepass.py",
        "status": "removed",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/wallettools/walletchangepass.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/wallettools/walletchangepass.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/wallettools/walletchangepass.py?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,5 +0,0 @@\n-from jsonrpc import ServiceProxy\n-access = ServiceProxy(\"http://127.0.0.1:8332\")\n-pwd = raw_input(\"Enter old wallet passphrase: \")\n-pwd2 = raw_input(\"Enter new wallet passphrase: \")\n-access.walletpassphrasechange(pwd, pwd2)\n\\ No newline at end of file"
      },
      {
        "sha": "f847c6fe61a931d6a3a1cf2c36d8a37080957317",
        "filename": "contrib/wallettools/walletunlock.py",
        "status": "removed",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/wallettools/walletunlock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/contrib/wallettools/walletunlock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/wallettools/walletunlock.py?ref=578a5a416b97e3481e2f332ca7a4319e75199af9",
        "patch": "@@ -1,4 +0,0 @@\n-from jsonrpc import ServiceProxy\n-access = ServiceProxy(\"http://127.0.0.1:8332\")\n-pwd = raw_input(\"Enter wallet passphrase: \")\n-access.walletpassphrase(pwd, 60)\n\\ No newline at end of file"
      },
      {
        "sha": "62c3d34fb793566474345273654d939283df7397",
        "filename": "contrib/zmq/zmq_sub.py",
        "status": "added",
        "additions": 51,
        "deletions": 0,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/zmq/zmq_sub.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/contrib/zmq/zmq_sub.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub.py?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,51 @@\n+#!/usr/bin/env python\n+\n+import array\n+import binascii\n+import zmq\n+import struct\n+\n+port = 28332\n+\n+zmqContext = zmq.Context()\n+zmqSubSocket = zmqContext.socket(zmq.SUB)\n+zmqSubSocket.setsockopt(zmq.SUBSCRIBE, b\"hashblock\")\n+zmqSubSocket.setsockopt(zmq.SUBSCRIBE, b\"hashtx\")\n+zmqSubSocket.setsockopt(zmq.SUBSCRIBE, b\"hashtxlock\")\n+zmqSubSocket.setsockopt(zmq.SUBSCRIBE, b\"rawblock\")\n+zmqSubSocket.setsockopt(zmq.SUBSCRIBE, b\"rawtx\")\n+zmqSubSocket.setsockopt(zmq.SUBSCRIBE, b\"rawtxlock\")\n+zmqSubSocket.connect(\"tcp://127.0.0.1:%i\" % port)\n+\n+try:\n+    while True:\n+        msg = zmqSubSocket.recv_multipart()\n+        topic = str(msg[0].decode(\"utf-8\"))\n+        body = msg[1]\n+        sequence = \"Unknown\";\n+\n+        if len(msg[-1]) == 4:\n+          msgSequence = struct.unpack('<I', msg[-1])[-1]\n+          sequence = str(msgSequence)\n+\n+        if topic == \"hashblock\":\n+            print('- HASH BLOCK ('+sequence+') -')\n+            print(binascii.hexlify(body).decode(\"utf-8\"))\n+        elif topic == \"hashtx\":\n+            print ('- HASH TX ('+sequence+') -')\n+            print(binascii.hexlify(body).decode(\"utf-8\"))\n+        elif topic == \"hashtxlock\":\n+            print('- HASH TX LOCK ('+sequence+') -')\n+            print(binascii.hexlify(body).decode(\"utf-8\"))\n+        elif topic == \"rawblock\":\n+            print('- RAW BLOCK HEADER ('+sequence+') -')\n+            print(binascii.hexlify(body[:80]).decode(\"utf-8\"))\n+        elif topic == \"rawtx\":\n+            print('- RAW TX ('+sequence+') -')\n+            print(binascii.hexlify(body).decode(\"utf-8\"))\n+        elif topic == \"rawtxlock\":\n+            print('- RAW TX LOCK ('+sequence+') -')\n+            print(binascii.hexlify(body).decode(\"utf-8\"))\n+\n+except KeyboardInterrupt:\n+    zmqContext.destroy()"
      },
      {
        "sha": "1f163897b9ef70c68bef39aba3bac5092b0aedd3",
        "filename": "depends/.gitignore",
        "status": "added",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/.gitignore?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,9 @@\n+SDKs/\n+work/\n+built/\n+sources/\n+config.site\n+x86_64*\n+i686*\n+mips*\n+arm*"
      },
      {
        "sha": "ef5a20e6c36aa9c9cbb0fa9334ec8d24824a0bc2",
        "filename": "depends/Makefile",
        "status": "added",
        "additions": 161,
        "deletions": 0,
        "changes": 161,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,161 @@\n+.NOTPARALLEL :\n+\n+SOURCES_PATH ?= $(BASEDIR)/sources\n+BASE_CACHE ?= $(BASEDIR)/built\n+SDK_PATH ?= $(BASEDIR)/SDKs\n+NO_QT ?=\n+NO_WALLET ?=\n+NO_UPNP ?=\n+FALLBACK_DOWNLOAD_PATH ?= https://bitcoincore.org/depends-sources\n+\n+BUILD = $(shell ./config.guess)\n+HOST ?= $(BUILD)\n+PATCHES_PATH = $(BASEDIR)/patches\n+BASEDIR = $(CURDIR)\n+HASH_LENGTH:=11\n+DOWNLOAD_CONNECT_TIMEOUT:=10\n+DOWNLOAD_RETRIES:=3\n+\n+host:=$(BUILD)\n+ifneq ($(HOST),)\n+host:=$(HOST)\n+host_toolchain:=$(HOST)-\n+endif\n+\n+ifneq ($(DEBUG),)\n+release_type=debug\n+else\n+release_type=release\n+endif\n+\n+base_build_dir=$(BASEDIR)/work/build\n+base_staging_dir=$(BASEDIR)/work/staging\n+base_download_dir=$(BASEDIR)/work/download\n+canonical_host:=$(shell ./config.sub $(HOST))\n+build:=$(shell ./config.sub $(BUILD))\n+\n+build_arch =$(firstword $(subst -, ,$(build)))\n+build_vendor=$(word 2,$(subst -, ,$(build)))\n+full_build_os:=$(subst $(build_arch)-$(build_vendor)-,,$(build))\n+build_os:=$(findstring linux,$(full_build_os))\n+build_os+=$(findstring darwin,$(full_build_os))\n+build_os:=$(strip $(build_os))\n+ifeq ($(build_os),)\n+build_os=$(full_build_os)\n+endif\n+\n+host_arch=$(firstword $(subst -, ,$(canonical_host)))\n+host_vendor=$(word 2,$(subst -, ,$(canonical_host)))\n+full_host_os:=$(subst $(host_arch)-$(host_vendor)-,,$(canonical_host))\n+host_os:=$(findstring linux,$(full_host_os))\n+host_os+=$(findstring darwin,$(full_host_os))\n+host_os+=$(findstring mingw32,$(full_host_os))\n+host_os:=$(strip $(host_os))\n+ifeq ($(host_os),)\n+host_os=$(full_host_os)\n+endif\n+\n+$(host_arch)_$(host_os)_prefix=$(BASEDIR)/$(host)\n+$(host_arch)_$(host_os)_host=$(host)\n+host_prefix=$($(host_arch)_$(host_os)_prefix)\n+build_prefix=$(host_prefix)/native\n+build_host=$(build)\n+\n+AT_$(V):=\n+AT_:=@\n+AT:=$(AT_$(V))\n+\n+all: install\n+\n+include hosts/$(host_os).mk\n+include hosts/default.mk\n+include builders/$(build_os).mk\n+include builders/default.mk\n+include packages/packages.mk\n+\n+qt_packages_$(NO_QT) = $(qt_packages) $(qt_$(host_os)_packages)\n+qt_native_packages_$(NO_QT) = $(qt_native_packages)\n+wallet_packages_$(NO_WALLET) = $(wallet_packages)\n+upnp_packages_$(NO_UPNP) = $(upnp_packages)\n+\n+packages += $($(host_arch)_$(host_os)_packages) $($(host_os)_packages) $(qt_packages_) $(wallet_packages_) $(upnp_packages_)\n+native_packages += $($(host_arch)_$(host_os)_native_packages) $($(host_os)_native_packages) $(qt_native_packages_)\n+all_packages = $(packages) $(native_packages)\n+\n+meta_depends = Makefile funcs.mk builders/default.mk hosts/default.mk hosts/$(host_os).mk builders/$(build_os).mk\n+\n+$(host_arch)_$(host_os)_native_toolchain?=$($(host_os)_native_toolchain)\n+\n+include funcs.mk\n+\n+toolchain_path=$($($(host_arch)_$(host_os)_native_toolchain)_prefixbin)\n+final_build_id_long+=$(shell $(build_SHA256SUM) config.site.in)\n+final_build_id+=$(shell echo -n $(final_build_id_long) | $(build_SHA256SUM) | cut -c-$(HASH_LENGTH))\n+$(host_prefix)/.stamp_$(final_build_id): $(native_packages) $(packages)\n+\t$(AT)rm -rf $(@D)\n+\t$(AT)mkdir -p $(@D)\n+\t$(AT)echo copying packages: $^\n+\t$(AT)echo to: $(@D)\n+\t$(AT)cd $(@D); $(foreach package,$^, tar xf $($(package)_cached); )\n+\t$(AT)touch $@\n+\n+$(host_prefix)/share/config.site : config.site.in $(host_prefix)/.stamp_$(final_build_id)\n+\t$(AT)@mkdir -p $(@D)\n+\t$(AT)sed -e 's|@HOST@|$(host)|' \\\n+            -e 's|@CC@|$(toolchain_path)$(host_CC)|' \\\n+            -e 's|@CXX@|$(toolchain_path)$(host_CXX)|' \\\n+            -e 's|@AR@|$(toolchain_path)$(host_AR)|' \\\n+            -e 's|@RANLIB@|$(toolchain_path)$(host_RANLIB)|' \\\n+            -e 's|@NM@|$(toolchain_path)$(host_NM)|' \\\n+            -e 's|@STRIP@|$(toolchain_path)$(host_STRIP)|' \\\n+            -e 's|@build_os@|$(build_os)|' \\\n+            -e 's|@host_os@|$(host_os)|' \\\n+            -e 's|@CFLAGS@|$(strip $(host_CFLAGS) $(host_$(release_type)_CFLAGS))|' \\\n+            -e 's|@CXXFLAGS@|$(strip $(host_CXXFLAGS) $(host_$(release_type)_CXXFLAGS))|' \\\n+            -e 's|@CPPFLAGS@|$(strip $(host_CPPFLAGS) $(host_$(release_type)_CPPFLAGS))|' \\\n+            -e 's|@LDFLAGS@|$(strip $(host_LDFLAGS) $(host_$(release_type)_LDFLAGS))|' \\\n+            -e 's|@no_qt@|$(NO_QT)|' \\\n+            -e 's|@no_wallet@|$(NO_WALLET)|' \\\n+            -e 's|@no_upnp@|$(NO_UPNP)|' \\\n+            -e 's|@debug@|$(DEBUG)|' \\\n+            $< > $@\n+\t$(AT)touch $@\n+\n+\n+define check_or_remove_cached\n+  mkdir -p $(BASE_CACHE)/$(host)/$(package) && cd $(BASE_CACHE)/$(host)/$(package); \\\n+  $(build_SHA256SUM) -c $($(package)_cached_checksum) >/dev/null 2>/dev/null || \\\n+  ( rm -f $($(package)_cached_checksum); \\\n+    if test -f \"$($(package)_cached)\"; then echo \"Checksum mismatch for $(package). Forcing rebuild..\"; rm -f $($(package)_cached_checksum) $($(package)_cached); fi )\n+endef\n+\n+define check_or_remove_sources\n+  mkdir -p $($(package)_source_dir); cd $($(package)_source_dir); \\\n+  $(build_SHA256SUM) -c $($(package)_fetched) >/dev/null 2>/dev/null || \\\n+    ( if test -f $($(package)_all_sources); then echo \"Checksum missing or mismatched for $(package) source. Forcing re-download.\"; fi; \\\n+      rm -f $($(package)_all_sources) $($(1)_fetched))\n+endef\n+\n+check-packages:\n+\t@$(foreach package,$(all_packages),$(call check_or_remove_cached,$(package));)\n+check-sources:\n+\t@$(foreach package,$(all_packages),$(call check_or_remove_sources,$(package));)\n+\n+$(host_prefix)/share/config.site: check-packages\n+\n+check-packages: check-sources\n+\n+install: check-packages $(host_prefix)/share/config.site\n+\n+\n+download-one: check-sources $(all_sources)\n+\n+download-osx:\n+\t@$(MAKE) -s HOST=x86_64-apple-darwin11 download-one\n+download-linux:\n+\t@$(MAKE) -s HOST=x86_64-unknown-linux-gnu download-one\n+download-win:\n+\t@$(MAKE) -s HOST=x86_64-w64-mingw32 download-one\n+download: download-osx download-linux download-win\n+\n+.PHONY: install cached download-one download-osx download-linux download-win download check-packages check-sources"
      },
      {
        "sha": "49eff68b0b2542ae19476b24b47ed4fa7360207d",
        "filename": "depends/README.md",
        "status": "added",
        "additions": 56,
        "deletions": 0,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,56 @@\n+### Usage\n+\n+To build dependencies for the current arch+OS:\n+\n+    make\n+\n+To build for another arch/OS:\n+\n+    make HOST=host-platform-triplet\n+\n+For example:\n+\n+    make HOST=x86_64-w64-mingw32 -j4\n+\n+A prefix will be generated that's suitable for plugging into Aither's\n+configure. In the above example, a dir named x86_64-w64-mingw32 will be\n+created. To use it for Aither:\n+\n+    ./configure --prefix=`pwd`/depends/x86_64-w64-mingw32\n+\n+Common `host-platform-triplets` for cross compilation are:\n+\n+- `i686-w64-mingw32` for Win32\n+- `x86_64-w64-mingw32` for Win64\n+- `x86_64-apple-darwin11` for MacOSX\n+- `arm-linux-gnueabihf` for Linux ARM\n+\n+No other options are needed, the paths are automatically configured.\n+\n+Dependency Options:\n+The following can be set when running make: make FOO=bar\n+\n+    SOURCES_PATH: downloaded sources will be placed here\n+    BASE_CACHE: built packages will be placed here\n+    SDK_PATH: Path where sdk's can be found (used by OSX)\n+    FALLBACK_DOWNLOAD_PATH: If a source file can't be fetched, try here before giving up\n+    NO_QT: Don't download/build/cache qt and its dependencies\n+    NO_WALLET: Don't download/build/cache libs needed to enable the wallet\n+    NO_UPNP: Don't download/build/cache packages needed for enabling upnp\n+    DEBUG: disable some optimizations and enable more runtime checking\n+\n+If some packages are not built, for example `make NO_WALLET=1`, the appropriate\n+options will be passed to Aither Core's configure. In this case, `--disable-wallet`.\n+\n+Additional targets:\n+\n+    download: run 'make download' to fetch all sources without building them\n+    download-osx: run 'make download-osx' to fetch all sources needed for osx builds\n+    download-win: run 'make download-win' to fetch all sources needed for win builds\n+    download-linux: run 'make download-linux' to fetch all sources needed for linux builds\n+\n+### Other documentation\n+\n+- [description.md](description.md): General description of the depends system\n+- [packages.md](packages.md): Steps for adding packages\n+"
      },
      {
        "sha": "cedbddc57847e6e69ce251f47f6a57dc7f3e5e13",
        "filename": "depends/builders/darwin.mk",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/builders/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/builders/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/darwin.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,22 @@\n+build_darwin_CC: = $(shell xcrun -f clang)\n+build_darwin_CXX: = $(shell xcrun -f clang++)\n+build_darwin_AR: = $(shell xcrun -f ar)\n+build_darwin_RANLIB: = $(shell xcrun -f ranlib)\n+build_darwin_STRIP: = $(shell xcrun -f strip)\n+build_darwin_OTOOL: = $(shell xcrun -f otool)\n+build_darwin_NM: = $(shell xcrun -f nm)\n+build_darwin_INSTALL_NAME_TOOL:=$(shell xcrun -f install_name_tool)\n+build_darwin_SHA256SUM = shasum -a 256\n+build_darwin_DOWNLOAD = curl --location --fail --connect-timeout $(DOWNLOAD_CONNECT_TIMEOUT) --retry $(DOWNLOAD_RETRIES) -L -o\n+\n+#darwin host on darwin builder. overrides darwin host preferences.\n+darwin_CC=$(shell xcrun -f clang) -mmacosx-version-min=$(OSX_MIN_VERSION)\n+darwin_CXX:=$(shell xcrun -f clang++) -mmacosx-version-min=$(OSX_MIN_VERSION)\n+darwin_AR:=$(shell xcrun -f ar)\n+darwin_RANLIB:=$(shell xcrun -f ranlib)\n+darwin_STRIP:=$(shell xcrun -f strip)\n+darwin_LIBTOOL:=$(shell xcrun -f libtool)\n+darwin_OTOOL:=$(shell xcrun -f otool)\n+darwin_NM:=$(shell xcrun -f nm)\n+darwin_INSTALL_NAME_TOOL:=$(shell xcrun -f install_name_tool)\n+darwin_native_toolchain="
      },
      {
        "sha": "f097db65d603d596c5ceabeadfe32fa3a296a91d",
        "filename": "depends/builders/default.mk",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/builders/default.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/builders/default.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/default.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,20 @@\n+default_build_CC = gcc\n+default_build_CXX = g++\n+default_build_AR = ar\n+default_build_RANLIB = ranlib\n+default_build_STRIP = strip\n+default_build_NM = nm\n+default_build_OTOOL = otool\n+default_build_INSTALL_NAME_TOOL = install_name_tool\n+\n+define add_build_tool_func\n+build_$(build_os)_$1 ?= $$(default_build_$1)\n+build_$(build_arch)_$(build_os)_$1 ?= $$(build_$(build_os)_$1)\n+build_$1=$$(build_$(build_arch)_$(build_os)_$1)\n+endef\n+$(foreach var,CC CXX AR RANLIB NM STRIP SHA256SUM DOWNLOAD OTOOL INSTALL_NAME_TOOL,$(eval $(call add_build_tool_func,$(var))))\n+define add_build_flags_func\n+build_$(build_arch)_$(build_os)_$1 += $(build_$(build_os)_$1)\n+build_$1=$$(build_$(build_arch)_$(build_os)_$1)\n+endef\n+$(foreach flags, CFLAGS CXXFLAGS LDFLAGS, $(eval $(call add_build_flags_func,$(flags))))"
      },
      {
        "sha": "d6a304e4b4b9d08969c626ad5ed4dc09df73e985",
        "filename": "depends/builders/linux.mk",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/builders/linux.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/builders/linux.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/linux.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,2 @@\n+build_linux_SHA256SUM = sha256sum\n+build_linux_DOWNLOAD = curl --location --fail --connect-timeout $(DOWNLOAD_CONNECT_TIMEOUT) --retry $(DOWNLOAD_RETRIES) -L -o"
      },
      {
        "sha": "fba6e87a0f87a01f14d45bd3b61266c11139eef1",
        "filename": "depends/config.guess",
        "status": "added",
        "additions": 1447,
        "deletions": 0,
        "changes": 1447,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/config.guess",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/config.guess",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.guess?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,1447 @@\n+#! /bin/sh\n+# Attempt to guess a canonical system name.\n+#   Copyright 1992-2015 Free Software Foundation, Inc.\n+\n+timestamp='2015-11-19'\n+\n+# This file is free software; you can redistribute it and/or modify it\n+# under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, see <http://www.gnu.org/licenses/>.\n+#\n+# As a special exception to the GNU General Public License, if you\n+# distribute this file as part of a program that contains a\n+# configuration script generated by Autoconf, you may include it under\n+# the same distribution terms that you use for the rest of that\n+# program.  This Exception is an additional permission under section 7\n+# of the GNU General Public License, version 3 (\"GPLv3\").\n+#\n+# Originally written by Per Bothner; maintained since 2000 by Ben Elliston.\n+#\n+# You can get the latest version of this script from:\n+# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD\n+#\n+# Please send patches to <config-patches@gnu.org>.\n+\n+\n+me=`echo \"$0\" | sed -e 's,.*/,,'`\n+\n+usage=\"\\\n+Usage: $0 [OPTION]\n+\n+Output the configuration name of the system \\`$me' is run on.\n+\n+Operation modes:\n+  -h, --help         print this help, then exit\n+  -t, --time-stamp   print date of last modification, then exit\n+  -v, --version      print version number, then exit\n+\n+Report bugs and patches to <config-patches@gnu.org>.\"\n+\n+version=\"\\\n+GNU config.guess ($timestamp)\n+\n+Originally written by Per Bothner.\n+Copyright 1992-2015 Free Software Foundation, Inc.\n+\n+This is free software; see the source for copying conditions.  There is NO\n+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n+\n+help=\"\n+Try \\`$me --help' for more information.\"\n+\n+# Parse command line\n+while test $# -gt 0 ; do\n+  case $1 in\n+    --time-stamp | --time* | -t )\n+       echo \"$timestamp\" ; exit ;;\n+    --version | -v )\n+       echo \"$version\" ; exit ;;\n+    --help | --h* | -h )\n+       echo \"$usage\"; exit ;;\n+    -- )     # Stop option processing\n+       shift; break ;;\n+    - )\t# Use stdin as input.\n+       break ;;\n+    -* )\n+       echo \"$me: invalid option $1$help\" >&2\n+       exit 1 ;;\n+    * )\n+       break ;;\n+  esac\n+done\n+\n+if test $# != 0; then\n+  echo \"$me: too many arguments$help\" >&2\n+  exit 1\n+fi\n+\n+trap 'exit 1' 1 2 15\n+\n+# CC_FOR_BUILD -- compiler used by this script. Note that the use of a\n+# compiler to aid in system detection is discouraged as it requires\n+# temporary files to be created and, as you can see below, it is a\n+# headache to deal with in a portable fashion.\n+\n+# Historically, `CC_FOR_BUILD' used to be named `HOST_CC'. We still\n+# use `HOST_CC' if defined, but it is deprecated.\n+\n+# Portable tmp directory creation inspired by the Autoconf team.\n+\n+set_cc_for_build='\n+trap \"exitcode=\\$?; (rm -f \\$tmpfiles 2>/dev/null; rmdir \\$tmp 2>/dev/null) && exit \\$exitcode\" 0 ;\n+trap \"rm -f \\$tmpfiles 2>/dev/null; rmdir \\$tmp 2>/dev/null; exit 1\" 1 2 13 15 ;\n+: ${TMPDIR=/tmp} ;\n+ { tmp=`(umask 077 && mktemp -d \"$TMPDIR/cgXXXXXX\") 2>/dev/null` && test -n \"$tmp\" && test -d \"$tmp\" ; } ||\n+ { test -n \"$RANDOM\" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir $tmp) ; } ||\n+ { tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir $tmp) && echo \"Warning: creating insecure temp directory\" >&2 ; } ||\n+ { echo \"$me: cannot create a temporary directory in $TMPDIR\" >&2 ; exit 1 ; } ;\n+dummy=$tmp/dummy ;\n+tmpfiles=\"$dummy.c $dummy.o $dummy.rel $dummy\" ;\n+case $CC_FOR_BUILD,$HOST_CC,$CC in\n+ ,,)    echo \"int x;\" > $dummy.c ;\n+\tfor c in cc gcc c89 c99 ; do\n+\t  if ($c -c -o $dummy.o $dummy.c) >/dev/null 2>&1 ; then\n+\t     CC_FOR_BUILD=\"$c\"; break ;\n+\t  fi ;\n+\tdone ;\n+\tif test x\"$CC_FOR_BUILD\" = x ; then\n+\t  CC_FOR_BUILD=no_compiler_found ;\n+\tfi\n+\t;;\n+ ,,*)   CC_FOR_BUILD=$CC ;;\n+ ,*,*)  CC_FOR_BUILD=$HOST_CC ;;\n+esac ; set_cc_for_build= ;'\n+\n+# This is needed to find uname on a Pyramid OSx when run in the BSD universe.\n+# (ghazi@noc.rutgers.edu 1994-08-24)\n+if (test -f /.attbin/uname) >/dev/null 2>&1 ; then\n+\tPATH=$PATH:/.attbin ; export PATH\n+fi\n+\n+UNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown\n+UNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown\n+UNAME_SYSTEM=`(uname -s) 2>/dev/null`  || UNAME_SYSTEM=unknown\n+UNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown\n+\n+case \"${UNAME_SYSTEM}\" in\n+Linux|GNU|GNU/*)\n+\t# If the system lacks a compiler, then just pick glibc.\n+\t# We could probably try harder.\n+\tLIBC=gnu\n+\n+\teval $set_cc_for_build\n+\tcat <<-EOF > $dummy.c\n+\t#include <features.h>\n+\t#if defined(__UCLIBC__)\n+\tLIBC=uclibc\n+\t#elif defined(__dietlibc__)\n+\tLIBC=dietlibc\n+\t#else\n+\tLIBC=gnu\n+\t#endif\n+\tEOF\n+\teval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^LIBC' | sed 's, ,,g'`\n+\t;;\n+esac\n+\n+# Note: order is significant - the case branches are not exclusive.\n+\n+case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n+    *:NetBSD:*:*)\n+\t# NetBSD (nbsd) targets should (where applicable) match one or\n+\t# more of the tuples: *-*-netbsdelf*, *-*-netbsdaout*,\n+\t# *-*-netbsdecoff* and *-*-netbsd*.  For targets that recently\n+\t# switched to ELF, *-*-netbsd* would select the old\n+\t# object file format.  This provides both forward\n+\t# compatibility and a consistent mechanism for selecting the\n+\t# object file format.\n+\t#\n+\t# Note: NetBSD doesn't particularly care about the vendor\n+\t# portion of the name.  We always set it to \"unknown\".\n+\tsysctl=\"sysctl -n hw.machine_arch\"\n+\tUNAME_MACHINE_ARCH=`(uname -p 2>/dev/null || \\\n+\t    /sbin/$sysctl 2>/dev/null || \\\n+\t    /usr/sbin/$sysctl 2>/dev/null || \\\n+\t    echo unknown)`\n+\tcase \"${UNAME_MACHINE_ARCH}\" in\n+\t    armeb) machine=armeb-unknown ;;\n+\t    arm*) machine=arm-unknown ;;\n+\t    sh3el) machine=shl-unknown ;;\n+\t    sh3eb) machine=sh-unknown ;;\n+\t    sh5el) machine=sh5le-unknown ;;\n+\t    earmv*)\n+\t\tarch=`echo ${UNAME_MACHINE_ARCH} | sed -e 's,^e\\(armv[0-9]\\).*$,\\1,'`\n+\t\tendian=`echo ${UNAME_MACHINE_ARCH} | sed -ne 's,^.*\\(eb\\)$,\\1,p'`\n+\t\tmachine=${arch}${endian}-unknown\n+\t\t;;\n+\t    *) machine=${UNAME_MACHINE_ARCH}-unknown ;;\n+\tesac\n+\t# The Operating System including object format, if it has switched\n+\t# to ELF recently, or will in the future.\n+\tcase \"${UNAME_MACHINE_ARCH}\" in\n+\t    arm*|earm*|i386|m68k|ns32k|sh3*|sparc|vax)\n+\t\teval $set_cc_for_build\n+\t\tif echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n+\t\t\t| grep -q __ELF__\n+\t\tthen\n+\t\t    # Once all utilities can be ECOFF (netbsdecoff) or a.out (netbsdaout).\n+\t\t    # Return netbsd for either.  FIX?\n+\t\t    os=netbsd\n+\t\telse\n+\t\t    os=netbsdelf\n+\t\tfi\n+\t\t;;\n+\t    *)\n+\t\tos=netbsd\n+\t\t;;\n+\tesac\n+\t# Determine ABI tags.\n+\tcase \"${UNAME_MACHINE_ARCH}\" in\n+\t    earm*)\n+\t\texpr='s/^earmv[0-9]/-eabi/;s/eb$//'\n+\t\tabi=`echo ${UNAME_MACHINE_ARCH} | sed -e \"$expr\"`\n+\t\t;;\n+\tesac\n+\t# The OS release\n+\t# Debian GNU/NetBSD machines have a different userland, and\n+\t# thus, need a distinct triplet. However, they do not need\n+\t# kernel version information, so it can be replaced with a\n+\t# suitable tag, in the style of linux-gnu.\n+\tcase \"${UNAME_VERSION}\" in\n+\t    Debian*)\n+\t\trelease='-gnu'\n+\t\t;;\n+\t    *)\n+\t\trelease=`echo ${UNAME_RELEASE} | sed -e 's/[-_].*//' | cut -d. -f1,2`\n+\t\t;;\n+\tesac\n+\t# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:\n+\t# contains redundant information, the shorter form:\n+\t# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.\n+\techo \"${machine}-${os}${release}${abi}\"\n+\texit ;;\n+    *:Bitrig:*:*)\n+\tUNAME_MACHINE_ARCH=`arch | sed 's/Bitrig.//'`\n+\techo ${UNAME_MACHINE_ARCH}-unknown-bitrig${UNAME_RELEASE}\n+\texit ;;\n+    *:OpenBSD:*:*)\n+\tUNAME_MACHINE_ARCH=`arch | sed 's/OpenBSD.//'`\n+\techo ${UNAME_MACHINE_ARCH}-unknown-openbsd${UNAME_RELEASE}\n+\texit ;;\n+    *:ekkoBSD:*:*)\n+\techo ${UNAME_MACHINE}-unknown-ekkobsd${UNAME_RELEASE}\n+\texit ;;\n+    *:SolidBSD:*:*)\n+\techo ${UNAME_MACHINE}-unknown-solidbsd${UNAME_RELEASE}\n+\texit ;;\n+    macppc:MirBSD:*:*)\n+\techo powerpc-unknown-mirbsd${UNAME_RELEASE}\n+\texit ;;\n+    *:MirBSD:*:*)\n+\techo ${UNAME_MACHINE}-unknown-mirbsd${UNAME_RELEASE}\n+\texit ;;\n+    *:Sortix:*:*)\n+\techo ${UNAME_MACHINE}-unknown-sortix\n+\texit ;;\n+    alpha:OSF1:*:*)\n+\tcase $UNAME_RELEASE in\n+\t*4.0)\n+\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`\n+\t\t;;\n+\t*5.*)\n+\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $4}'`\n+\t\t;;\n+\tesac\n+\t# According to Compaq, /usr/sbin/psrinfo has been available on\n+\t# OSF/1 and Tru64 systems produced since 1995.  I hope that\n+\t# covers most systems running today.  This code pipes the CPU\n+\t# types through head -n 1, so we only detect the type of CPU 0.\n+\tALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \\(.*\\) processor.*$/\\1/p' | head -n 1`\n+\tcase \"$ALPHA_CPU_TYPE\" in\n+\t    \"EV4 (21064)\")\n+\t\tUNAME_MACHINE=\"alpha\" ;;\n+\t    \"EV4.5 (21064)\")\n+\t\tUNAME_MACHINE=\"alpha\" ;;\n+\t    \"LCA4 (21066/21068)\")\n+\t\tUNAME_MACHINE=\"alpha\" ;;\n+\t    \"EV5 (21164)\")\n+\t\tUNAME_MACHINE=\"alphaev5\" ;;\n+\t    \"EV5.6 (21164A)\")\n+\t\tUNAME_MACHINE=\"alphaev56\" ;;\n+\t    \"EV5.6 (21164PC)\")\n+\t\tUNAME_MACHINE=\"alphapca56\" ;;\n+\t    \"EV5.7 (21164PC)\")\n+\t\tUNAME_MACHINE=\"alphapca57\" ;;\n+\t    \"EV6 (21264)\")\n+\t\tUNAME_MACHINE=\"alphaev6\" ;;\n+\t    \"EV6.7 (21264A)\")\n+\t\tUNAME_MACHINE=\"alphaev67\" ;;\n+\t    \"EV6.8CB (21264C)\")\n+\t\tUNAME_MACHINE=\"alphaev68\" ;;\n+\t    \"EV6.8AL (21264B)\")\n+\t\tUNAME_MACHINE=\"alphaev68\" ;;\n+\t    \"EV6.8CX (21264D)\")\n+\t\tUNAME_MACHINE=\"alphaev68\" ;;\n+\t    \"EV6.9A (21264/EV69A)\")\n+\t\tUNAME_MACHINE=\"alphaev69\" ;;\n+\t    \"EV7 (21364)\")\n+\t\tUNAME_MACHINE=\"alphaev7\" ;;\n+\t    \"EV7.9 (21364A)\")\n+\t\tUNAME_MACHINE=\"alphaev79\" ;;\n+\tesac\n+\t# A Pn.n version is a patched version.\n+\t# A Vn.n version is a released version.\n+\t# A Tn.n version is a released field test version.\n+\t# A Xn.n version is an unreleased experimental baselevel.\n+\t# 1.2 uses \"1.2\" for uname -r.\n+\techo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[PVTX]//' | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`\n+\t# Reset EXIT trap before exiting to avoid spurious non-zero exit code.\n+\texitcode=$?\n+\ttrap '' 0\n+\texit $exitcode ;;\n+    Alpha\\ *:Windows_NT*:*)\n+\t# How do we know it's Interix rather than the generic POSIX subsystem?\n+\t# Should we change UNAME_MACHINE based on the output of uname instead\n+\t# of the specific Alpha model?\n+\techo alpha-pc-interix\n+\texit ;;\n+    21064:Windows_NT:50:3)\n+\techo alpha-dec-winnt3.5\n+\texit ;;\n+    Amiga*:UNIX_System_V:4.0:*)\n+\techo m68k-unknown-sysv4\n+\texit ;;\n+    *:[Aa]miga[Oo][Ss]:*:*)\n+\techo ${UNAME_MACHINE}-unknown-amigaos\n+\texit ;;\n+    *:[Mm]orph[Oo][Ss]:*:*)\n+\techo ${UNAME_MACHINE}-unknown-morphos\n+\texit ;;\n+    *:OS/390:*:*)\n+\techo i370-ibm-openedition\n+\texit ;;\n+    *:z/VM:*:*)\n+\techo s390-ibm-zvmoe\n+\texit ;;\n+    *:OS400:*:*)\n+\techo powerpc-ibm-os400\n+\texit ;;\n+    arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)\n+\techo arm-acorn-riscix${UNAME_RELEASE}\n+\texit ;;\n+    arm*:riscos:*:*|arm*:RISCOS:*:*)\n+\techo arm-unknown-riscos\n+\texit ;;\n+    SR2?01:HI-UX/MPP:*:* | SR8000:HI-UX/MPP:*:*)\n+\techo hppa1.1-hitachi-hiuxmpp\n+\texit ;;\n+    Pyramid*:OSx*:*:* | MIS*:OSx*:*:* | MIS*:SMP_DC-OSx*:*:*)\n+\t# akee@wpdis03.wpafb.af.mil (Earle F. Ake) contributed MIS and NILE.\n+\tif test \"`(/bin/universe) 2>/dev/null`\" = att ; then\n+\t\techo pyramid-pyramid-sysv3\n+\telse\n+\t\techo pyramid-pyramid-bsd\n+\tfi\n+\texit ;;\n+    NILE*:*:*:dcosx)\n+\techo pyramid-pyramid-svr4\n+\texit ;;\n+    DRS?6000:unix:4.0:6*)\n+\techo sparc-icl-nx6\n+\texit ;;\n+    DRS?6000:UNIX_SV:4.2*:7* | DRS?6000:isis:4.2*:7*)\n+\tcase `/usr/bin/uname -p` in\n+\t    sparc) echo sparc-icl-nx7; exit ;;\n+\tesac ;;\n+    s390x:SunOS:*:*)\n+\techo ${UNAME_MACHINE}-ibm-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\texit ;;\n+    sun4H:SunOS:5.*:*)\n+\techo sparc-hal-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\texit ;;\n+    sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)\n+\techo sparc-sun-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\texit ;;\n+    i86pc:AuroraUX:5.*:* | i86xen:AuroraUX:5.*:*)\n+\techo i386-pc-auroraux${UNAME_RELEASE}\n+\texit ;;\n+    i86pc:SunOS:5.*:* | i86xen:SunOS:5.*:*)\n+\teval $set_cc_for_build\n+\tSUN_ARCH=\"i386\"\n+\t# If there is a compiler, see if it is configured for 64-bit objects.\n+\t# Note that the Sun cc does not turn __LP64__ into 1 like gcc does.\n+\t# This test works for both compilers.\n+\tif [ \"$CC_FOR_BUILD\" != 'no_compiler_found' ]; then\n+\t    if (echo '#ifdef __amd64'; echo IS_64BIT_ARCH; echo '#endif') | \\\n+\t\t(CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) | \\\n+\t\tgrep IS_64BIT_ARCH >/dev/null\n+\t    then\n+\t\tSUN_ARCH=\"x86_64\"\n+\t    fi\n+\tfi\n+\techo ${SUN_ARCH}-pc-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\texit ;;\n+    sun4*:SunOS:6*:*)\n+\t# According to config.sub, this is the proper way to canonicalize\n+\t# SunOS6.  Hard to guess exactly what SunOS6 will be like, but\n+\t# it's likely to be more like Solaris than SunOS4.\n+\techo sparc-sun-solaris3`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\texit ;;\n+    sun4*:SunOS:*:*)\n+\tcase \"`/usr/bin/arch -k`\" in\n+\t    Series*|S4*)\n+\t\tUNAME_RELEASE=`uname -v`\n+\t\t;;\n+\tesac\n+\t# Japanese Language versions have a version number like `4.1.3-JL'.\n+\techo sparc-sun-sunos`echo ${UNAME_RELEASE}|sed -e 's/-/_/'`\n+\texit ;;\n+    sun3*:SunOS:*:*)\n+\techo m68k-sun-sunos${UNAME_RELEASE}\n+\texit ;;\n+    sun*:*:4.2BSD:*)\n+\tUNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`\n+\ttest \"x${UNAME_RELEASE}\" = \"x\" && UNAME_RELEASE=3\n+\tcase \"`/bin/arch`\" in\n+\t    sun3)\n+\t\techo m68k-sun-sunos${UNAME_RELEASE}\n+\t\t;;\n+\t    sun4)\n+\t\techo sparc-sun-sunos${UNAME_RELEASE}\n+\t\t;;\n+\tesac\n+\texit ;;\n+    aushp:SunOS:*:*)\n+\techo sparc-auspex-sunos${UNAME_RELEASE}\n+\texit ;;\n+    # The situation for MiNT is a little confusing.  The machine name\n+    # can be virtually everything (everything which is not\n+    # \"atarist\" or \"atariste\" at least should have a processor\n+    # > m68000).  The system name ranges from \"MiNT\" over \"FreeMiNT\"\n+    # to the lowercase version \"mint\" (or \"freemint\").  Finally\n+    # the system name \"TOS\" denotes a system which is actually not\n+    # MiNT.  But MiNT is downward compatible to TOS, so this should\n+    # be no problem.\n+    atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)\n+\techo m68k-atari-mint${UNAME_RELEASE}\n+\texit ;;\n+    atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)\n+\techo m68k-atari-mint${UNAME_RELEASE}\n+\texit ;;\n+    *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)\n+\techo m68k-atari-mint${UNAME_RELEASE}\n+\texit ;;\n+    milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)\n+\techo m68k-milan-mint${UNAME_RELEASE}\n+\texit ;;\n+    hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)\n+\techo m68k-hades-mint${UNAME_RELEASE}\n+\texit ;;\n+    *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)\n+\techo m68k-unknown-mint${UNAME_RELEASE}\n+\texit ;;\n+    m68k:machten:*:*)\n+\techo m68k-apple-machten${UNAME_RELEASE}\n+\texit ;;\n+    powerpc:machten:*:*)\n+\techo powerpc-apple-machten${UNAME_RELEASE}\n+\texit ;;\n+    RISC*:Mach:*:*)\n+\techo mips-dec-mach_bsd4.3\n+\texit ;;\n+    RISC*:ULTRIX:*:*)\n+\techo mips-dec-ultrix${UNAME_RELEASE}\n+\texit ;;\n+    VAX*:ULTRIX*:*:*)\n+\techo vax-dec-ultrix${UNAME_RELEASE}\n+\texit ;;\n+    2020:CLIX:*:* | 2430:CLIX:*:*)\n+\techo clipper-intergraph-clix${UNAME_RELEASE}\n+\texit ;;\n+    mips:*:*:UMIPS | mips:*:*:RISCos)\n+\teval $set_cc_for_build\n+\tsed 's/^\t//' << EOF >$dummy.c\n+#ifdef __cplusplus\n+#include <stdio.h>  /* for printf() prototype */\n+\tint main (int argc, char *argv[]) {\n+#else\n+\tint main (argc, argv) int argc; char *argv[]; {\n+#endif\n+\t#if defined (host_mips) && defined (MIPSEB)\n+\t#if defined (SYSTYPE_SYSV)\n+\t  printf (\"mips-mips-riscos%ssysv\\n\", argv[1]); exit (0);\n+\t#endif\n+\t#if defined (SYSTYPE_SVR4)\n+\t  printf (\"mips-mips-riscos%ssvr4\\n\", argv[1]); exit (0);\n+\t#endif\n+\t#if defined (SYSTYPE_BSD43) || defined(SYSTYPE_BSD)\n+\t  printf (\"mips-mips-riscos%sbsd\\n\", argv[1]); exit (0);\n+\t#endif\n+\t#endif\n+\t  exit (-1);\n+\t}\n+EOF\n+\t$CC_FOR_BUILD -o $dummy $dummy.c &&\n+\t  dummyarg=`echo \"${UNAME_RELEASE}\" | sed -n 's/\\([0-9]*\\).*/\\1/p'` &&\n+\t  SYSTEM_NAME=`$dummy $dummyarg` &&\n+\t    { echo \"$SYSTEM_NAME\"; exit; }\n+\techo mips-mips-riscos${UNAME_RELEASE}\n+\texit ;;\n+    Motorola:PowerMAX_OS:*:*)\n+\techo powerpc-motorola-powermax\n+\texit ;;\n+    Motorola:*:4.3:PL8-*)\n+\techo powerpc-harris-powermax\n+\texit ;;\n+    Night_Hawk:*:*:PowerMAX_OS | Synergy:PowerMAX_OS:*:*)\n+\techo powerpc-harris-powermax\n+\texit ;;\n+    Night_Hawk:Power_UNIX:*:*)\n+\techo powerpc-harris-powerunix\n+\texit ;;\n+    m88k:CX/UX:7*:*)\n+\techo m88k-harris-cxux7\n+\texit ;;\n+    m88k:*:4*:R4*)\n+\techo m88k-motorola-sysv4\n+\texit ;;\n+    m88k:*:3*:R3*)\n+\techo m88k-motorola-sysv3\n+\texit ;;\n+    AViiON:dgux:*:*)\n+\t# DG/UX returns AViiON for all architectures\n+\tUNAME_PROCESSOR=`/usr/bin/uname -p`\n+\tif [ $UNAME_PROCESSOR = mc88100 ] || [ $UNAME_PROCESSOR = mc88110 ]\n+\tthen\n+\t    if [ ${TARGET_BINARY_INTERFACE}x = m88kdguxelfx ] || \\\n+\t       [ ${TARGET_BINARY_INTERFACE}x = x ]\n+\t    then\n+\t\techo m88k-dg-dgux${UNAME_RELEASE}\n+\t    else\n+\t\techo m88k-dg-dguxbcs${UNAME_RELEASE}\n+\t    fi\n+\telse\n+\t    echo i586-dg-dgux${UNAME_RELEASE}\n+\tfi\n+\texit ;;\n+    M88*:DolphinOS:*:*)\t# DolphinOS (SVR3)\n+\techo m88k-dolphin-sysv3\n+\texit ;;\n+    M88*:*:R3*:*)\n+\t# Delta 88k system running SVR3\n+\techo m88k-motorola-sysv3\n+\texit ;;\n+    XD88*:*:*:*) # Tektronix XD88 system running UTekV (SVR3)\n+\techo m88k-tektronix-sysv3\n+\texit ;;\n+    Tek43[0-9][0-9]:UTek:*:*) # Tektronix 4300 system running UTek (BSD)\n+\techo m68k-tektronix-bsd\n+\texit ;;\n+    *:IRIX*:*:*)\n+\techo mips-sgi-irix`echo ${UNAME_RELEASE}|sed -e 's/-/_/g'`\n+\texit ;;\n+    ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.\n+\techo romp-ibm-aix     # uname -m gives an 8 hex-code CPU id\n+\texit ;;               # Note that: echo \"'`uname -s`'\" gives 'AIX '\n+    i*86:AIX:*:*)\n+\techo i386-ibm-aix\n+\texit ;;\n+    ia64:AIX:*:*)\n+\tif [ -x /usr/bin/oslevel ] ; then\n+\t\tIBM_REV=`/usr/bin/oslevel`\n+\telse\n+\t\tIBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}\n+\tfi\n+\techo ${UNAME_MACHINE}-ibm-aix${IBM_REV}\n+\texit ;;\n+    *:AIX:2:3)\n+\tif grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then\n+\t\teval $set_cc_for_build\n+\t\tsed 's/^\t\t//' << EOF >$dummy.c\n+\t\t#include <sys/systemcfg.h>\n+\n+\t\tmain()\n+\t\t\t{\n+\t\t\tif (!__power_pc())\n+\t\t\t\texit(1);\n+\t\t\tputs(\"powerpc-ibm-aix3.2.5\");\n+\t\t\texit(0);\n+\t\t\t}\n+EOF\n+\t\tif $CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy`\n+\t\tthen\n+\t\t\techo \"$SYSTEM_NAME\"\n+\t\telse\n+\t\t\techo rs6000-ibm-aix3.2.5\n+\t\tfi\n+\telif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then\n+\t\techo rs6000-ibm-aix3.2.4\n+\telse\n+\t\techo rs6000-ibm-aix3.2\n+\tfi\n+\texit ;;\n+    *:AIX:*:[4567])\n+\tIBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`\n+\tif /usr/sbin/lsattr -El ${IBM_CPU_ID} | grep ' POWER' >/dev/null 2>&1; then\n+\t\tIBM_ARCH=rs6000\n+\telse\n+\t\tIBM_ARCH=powerpc\n+\tfi\n+\tif [ -x /usr/bin/lslpp ] ; then\n+\t\tIBM_REV=`/usr/bin/lslpp -Lqc bos.rte.libc |\n+\t\t\t   awk -F: '{ print $3 }' | sed s/[0-9]*$/0/`\n+\telse\n+\t\tIBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}\n+\tfi\n+\techo ${IBM_ARCH}-ibm-aix${IBM_REV}\n+\texit ;;\n+    *:AIX:*:*)\n+\techo rs6000-ibm-aix\n+\texit ;;\n+    ibmrt:4.4BSD:*|romp-ibm:BSD:*)\n+\techo romp-ibm-bsd4.4\n+\texit ;;\n+    ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC BSD and\n+\techo romp-ibm-bsd${UNAME_RELEASE}   # 4.3 with uname added to\n+\texit ;;                             # report: romp-ibm BSD 4.3\n+    *:BOSX:*:*)\n+\techo rs6000-bull-bosx\n+\texit ;;\n+    DPX/2?00:B.O.S.:*:*)\n+\techo m68k-bull-sysv3\n+\texit ;;\n+    9000/[34]??:4.3bsd:1.*:*)\n+\techo m68k-hp-bsd\n+\texit ;;\n+    hp300:4.4BSD:*:* | 9000/[34]??:4.3bsd:2.*:*)\n+\techo m68k-hp-bsd4.4\n+\texit ;;\n+    9000/[34678]??:HP-UX:*:*)\n+\tHPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`\n+\tcase \"${UNAME_MACHINE}\" in\n+\t    9000/31? )            HP_ARCH=m68000 ;;\n+\t    9000/[34]?? )         HP_ARCH=m68k ;;\n+\t    9000/[678][0-9][0-9])\n+\t\tif [ -x /usr/bin/getconf ]; then\n+\t\t    sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`\n+\t\t    sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`\n+\t\t    case \"${sc_cpu_version}\" in\n+\t\t      523) HP_ARCH=\"hppa1.0\" ;; # CPU_PA_RISC1_0\n+\t\t      528) HP_ARCH=\"hppa1.1\" ;; # CPU_PA_RISC1_1\n+\t\t      532)                      # CPU_PA_RISC2_0\n+\t\t\tcase \"${sc_kernel_bits}\" in\n+\t\t\t  32) HP_ARCH=\"hppa2.0n\" ;;\n+\t\t\t  64) HP_ARCH=\"hppa2.0w\" ;;\n+\t\t\t  '') HP_ARCH=\"hppa2.0\" ;;   # HP-UX 10.20\n+\t\t\tesac ;;\n+\t\t    esac\n+\t\tfi\n+\t\tif [ \"${HP_ARCH}\" = \"\" ]; then\n+\t\t    eval $set_cc_for_build\n+\t\t    sed 's/^\t\t//' << EOF >$dummy.c\n+\n+\t\t#define _HPUX_SOURCE\n+\t\t#include <stdlib.h>\n+\t\t#include <unistd.h>\n+\n+\t\tint main ()\n+\t\t{\n+\t\t#if defined(_SC_KERNEL_BITS)\n+\t\t    long bits = sysconf(_SC_KERNEL_BITS);\n+\t\t#endif\n+\t\t    long cpu  = sysconf (_SC_CPU_VERSION);\n+\n+\t\t    switch (cpu)\n+\t\t\t{\n+\t\t\tcase CPU_PA_RISC1_0: puts (\"hppa1.0\"); break;\n+\t\t\tcase CPU_PA_RISC1_1: puts (\"hppa1.1\"); break;\n+\t\t\tcase CPU_PA_RISC2_0:\n+\t\t#if defined(_SC_KERNEL_BITS)\n+\t\t\t    switch (bits)\n+\t\t\t\t{\n+\t\t\t\tcase 64: puts (\"hppa2.0w\"); break;\n+\t\t\t\tcase 32: puts (\"hppa2.0n\"); break;\n+\t\t\t\tdefault: puts (\"hppa2.0\"); break;\n+\t\t\t\t} break;\n+\t\t#else  /* !defined(_SC_KERNEL_BITS) */\n+\t\t\t    puts (\"hppa2.0\"); break;\n+\t\t#endif\n+\t\t\tdefault: puts (\"hppa1.0\"); break;\n+\t\t\t}\n+\t\t    exit (0);\n+\t\t}\n+EOF\n+\t\t    (CCOPTS= $CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null) && HP_ARCH=`$dummy`\n+\t\t    test -z \"$HP_ARCH\" && HP_ARCH=hppa\n+\t\tfi ;;\n+\tesac\n+\tif [ ${HP_ARCH} = \"hppa2.0w\" ]\n+\tthen\n+\t    eval $set_cc_for_build\n+\n+\t    # hppa2.0w-hp-hpux* has a 64-bit kernel and a compiler generating\n+\t    # 32-bit code.  hppa64-hp-hpux* has the same kernel and a compiler\n+\t    # generating 64-bit code.  GNU and HP use different nomenclature:\n+\t    #\n+\t    # $ CC_FOR_BUILD=cc ./config.guess\n+\t    # => hppa2.0w-hp-hpux11.23\n+\t    # $ CC_FOR_BUILD=\"cc +DA2.0w\" ./config.guess\n+\t    # => hppa64-hp-hpux11.23\n+\n+\t    if echo __LP64__ | (CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) |\n+\t\tgrep -q __LP64__\n+\t    then\n+\t\tHP_ARCH=\"hppa2.0w\"\n+\t    else\n+\t\tHP_ARCH=\"hppa64\"\n+\t    fi\n+\tfi\n+\techo ${HP_ARCH}-hp-hpux${HPUX_REV}\n+\texit ;;\n+    ia64:HP-UX:*:*)\n+\tHPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`\n+\techo ia64-hp-hpux${HPUX_REV}\n+\texit ;;\n+    3050*:HI-UX:*:*)\n+\teval $set_cc_for_build\n+\tsed 's/^\t//' << EOF >$dummy.c\n+\t#include <unistd.h>\n+\tint\n+\tmain ()\n+\t{\n+\t  long cpu = sysconf (_SC_CPU_VERSION);\n+\t  /* The order matters, because CPU_IS_HP_MC68K erroneously returns\n+\t     true for CPU_PA_RISC1_0.  CPU_IS_PA_RISC returns correct\n+\t     results, however.  */\n+\t  if (CPU_IS_PA_RISC (cpu))\n+\t    {\n+\t      switch (cpu)\n+\t\t{\n+\t\t  case CPU_PA_RISC1_0: puts (\"hppa1.0-hitachi-hiuxwe2\"); break;\n+\t\t  case CPU_PA_RISC1_1: puts (\"hppa1.1-hitachi-hiuxwe2\"); break;\n+\t\t  case CPU_PA_RISC2_0: puts (\"hppa2.0-hitachi-hiuxwe2\"); break;\n+\t\t  default: puts (\"hppa-hitachi-hiuxwe2\"); break;\n+\t\t}\n+\t    }\n+\t  else if (CPU_IS_HP_MC68K (cpu))\n+\t    puts (\"m68k-hitachi-hiuxwe2\");\n+\t  else puts (\"unknown-hitachi-hiuxwe2\");\n+\t  exit (0);\n+\t}\n+EOF\n+\t$CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy` &&\n+\t\t{ echo \"$SYSTEM_NAME\"; exit; }\n+\techo unknown-hitachi-hiuxwe2\n+\texit ;;\n+    9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:* )\n+\techo hppa1.1-hp-bsd\n+\texit ;;\n+    9000/8??:4.3bsd:*:*)\n+\techo hppa1.0-hp-bsd\n+\texit ;;\n+    *9??*:MPE/iX:*:* | *3000*:MPE/iX:*:*)\n+\techo hppa1.0-hp-mpeix\n+\texit ;;\n+    hp7??:OSF1:*:* | hp8?[79]:OSF1:*:* )\n+\techo hppa1.1-hp-osf\n+\texit ;;\n+    hp8??:OSF1:*:*)\n+\techo hppa1.0-hp-osf\n+\texit ;;\n+    i*86:OSF1:*:*)\n+\tif [ -x /usr/sbin/sysversion ] ; then\n+\t    echo ${UNAME_MACHINE}-unknown-osf1mk\n+\telse\n+\t    echo ${UNAME_MACHINE}-unknown-osf1\n+\tfi\n+\texit ;;\n+    parisc*:Lites*:*:*)\n+\techo hppa1.1-hp-lites\n+\texit ;;\n+    C1*:ConvexOS:*:* | convex:ConvexOS:C1*:*)\n+\techo c1-convex-bsd\n+\texit ;;\n+    C2*:ConvexOS:*:* | convex:ConvexOS:C2*:*)\n+\tif getsysinfo -f scalar_acc\n+\tthen echo c32-convex-bsd\n+\telse echo c2-convex-bsd\n+\tfi\n+\texit ;;\n+    C34*:ConvexOS:*:* | convex:ConvexOS:C34*:*)\n+\techo c34-convex-bsd\n+\texit ;;\n+    C38*:ConvexOS:*:* | convex:ConvexOS:C38*:*)\n+\techo c38-convex-bsd\n+\texit ;;\n+    C4*:ConvexOS:*:* | convex:ConvexOS:C4*:*)\n+\techo c4-convex-bsd\n+\texit ;;\n+    CRAY*Y-MP:*:*:*)\n+\techo ymp-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n+\texit ;;\n+    CRAY*[A-Z]90:*:*:*)\n+\techo ${UNAME_MACHINE}-cray-unicos${UNAME_RELEASE} \\\n+\t| sed -e 's/CRAY.*\\([A-Z]90\\)/\\1/' \\\n+\t      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/ \\\n+\t      -e 's/\\.[^.]*$/.X/'\n+\texit ;;\n+    CRAY*TS:*:*:*)\n+\techo t90-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n+\texit ;;\n+    CRAY*T3E:*:*:*)\n+\techo alphaev5-cray-unicosmk${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n+\texit ;;\n+    CRAY*SV1:*:*:*)\n+\techo sv1-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n+\texit ;;\n+    *:UNICOS/mp:*:*)\n+\techo craynv-cray-unicosmp${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n+\texit ;;\n+    F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)\n+\tFUJITSU_PROC=`uname -m | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`\n+\tFUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\\///'`\n+\tFUJITSU_REL=`echo ${UNAME_RELEASE} | sed -e 's/ /_/'`\n+\techo \"${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n+\texit ;;\n+    5000:UNIX_System_V:4.*:*)\n+\tFUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\\///'`\n+\tFUJITSU_REL=`echo ${UNAME_RELEASE} | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/ /_/'`\n+\techo \"sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n+\texit ;;\n+    i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\\ Embedded/OS:*:*)\n+\techo ${UNAME_MACHINE}-pc-bsdi${UNAME_RELEASE}\n+\texit ;;\n+    sparc*:BSD/OS:*:*)\n+\techo sparc-unknown-bsdi${UNAME_RELEASE}\n+\texit ;;\n+    *:BSD/OS:*:*)\n+\techo ${UNAME_MACHINE}-unknown-bsdi${UNAME_RELEASE}\n+\texit ;;\n+    *:FreeBSD:*:*)\n+\tUNAME_PROCESSOR=`/usr/bin/uname -p`\n+\tcase ${UNAME_PROCESSOR} in\n+\t    amd64)\n+\t\techo x86_64-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;\n+\t    *)\n+\t\techo ${UNAME_PROCESSOR}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;\n+\tesac\n+\texit ;;\n+    i*:CYGWIN*:*)\n+\techo ${UNAME_MACHINE}-pc-cygwin\n+\texit ;;\n+    *:MINGW64*:*)\n+\techo ${UNAME_MACHINE}-pc-mingw64\n+\texit ;;\n+    *:MINGW*:*)\n+\techo ${UNAME_MACHINE}-pc-mingw32\n+\texit ;;\n+    *:MSYS*:*)\n+\techo ${UNAME_MACHINE}-pc-msys\n+\texit ;;\n+    i*:windows32*:*)\n+\t# uname -m includes \"-pc\" on this system.\n+\techo ${UNAME_MACHINE}-mingw32\n+\texit ;;\n+    i*:PW*:*)\n+\techo ${UNAME_MACHINE}-pc-pw32\n+\texit ;;\n+    *:Interix*:*)\n+\tcase ${UNAME_MACHINE} in\n+\t    x86)\n+\t\techo i586-pc-interix${UNAME_RELEASE}\n+\t\texit ;;\n+\t    authenticamd | genuineintel | EM64T)\n+\t\techo x86_64-unknown-interix${UNAME_RELEASE}\n+\t\texit ;;\n+\t    IA64)\n+\t\techo ia64-unknown-interix${UNAME_RELEASE}\n+\t\texit ;;\n+\tesac ;;\n+    [345]86:Windows_95:* | [345]86:Windows_98:* | [345]86:Windows_NT:*)\n+\techo i${UNAME_MACHINE}-pc-mks\n+\texit ;;\n+    8664:Windows_NT:*)\n+\techo x86_64-pc-mks\n+\texit ;;\n+    i*:Windows_NT*:* | Pentium*:Windows_NT*:*)\n+\t# How do we know it's Interix rather than the generic POSIX subsystem?\n+\t# It also conflicts with pre-2.0 versions of AT&T UWIN. Should we\n+\t# UNAME_MACHINE based on the output of uname instead of i386?\n+\techo i586-pc-interix\n+\texit ;;\n+    i*:UWIN*:*)\n+\techo ${UNAME_MACHINE}-pc-uwin\n+\texit ;;\n+    amd64:CYGWIN*:*:* | x86_64:CYGWIN*:*:*)\n+\techo x86_64-unknown-cygwin\n+\texit ;;\n+    p*:CYGWIN*:*)\n+\techo powerpcle-unknown-cygwin\n+\texit ;;\n+    prep*:SunOS:5.*:*)\n+\techo powerpcle-unknown-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\texit ;;\n+    *:GNU:*:*)\n+\t# the GNU system\n+\techo `echo ${UNAME_MACHINE}|sed -e 's,[-/].*$,,'`-unknown-${LIBC}`echo ${UNAME_RELEASE}|sed -e 's,/.*$,,'`\n+\texit ;;\n+    *:GNU/*:*:*)\n+\t# other systems with GNU libc and userland\n+\techo ${UNAME_MACHINE}-unknown-`echo ${UNAME_SYSTEM} | sed 's,^[^/]*/,,' | tr '[A-Z]' '[a-z]'``echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`-${LIBC}\n+\texit ;;\n+    i*86:Minix:*:*)\n+\techo ${UNAME_MACHINE}-pc-minix\n+\texit ;;\n+    aarch64:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    aarch64_be:Linux:*:*)\n+\tUNAME_MACHINE=aarch64_be\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    alpha:Linux:*:*)\n+\tcase `sed -n '/^cpu model/s/^.*: \\(.*\\)/\\1/p' < /proc/cpuinfo` in\n+\t  EV5)   UNAME_MACHINE=alphaev5 ;;\n+\t  EV56)  UNAME_MACHINE=alphaev56 ;;\n+\t  PCA56) UNAME_MACHINE=alphapca56 ;;\n+\t  PCA57) UNAME_MACHINE=alphapca56 ;;\n+\t  EV6)   UNAME_MACHINE=alphaev6 ;;\n+\t  EV67)  UNAME_MACHINE=alphaev67 ;;\n+\t  EV68*) UNAME_MACHINE=alphaev68 ;;\n+\tesac\n+\tobjdump --private-headers /bin/sh | grep -q ld.so.1\n+\tif test \"$?\" = 0 ; then LIBC=\"gnulibc1\" ; fi\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    arc:Linux:*:* | arceb:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    arm*:Linux:*:*)\n+\teval $set_cc_for_build\n+\tif echo __ARM_EABI__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n+\t    | grep -q __ARM_EABI__\n+\tthen\n+\t    echo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\telse\n+\t    if echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n+\t\t| grep -q __ARM_PCS_VFP\n+\t    then\n+\t\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}eabi\n+\t    else\n+\t\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}eabihf\n+\t    fi\n+\tfi\n+\texit ;;\n+    avr32*:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    cris:Linux:*:*)\n+\techo ${UNAME_MACHINE}-axis-linux-${LIBC}\n+\texit ;;\n+    crisv32:Linux:*:*)\n+\techo ${UNAME_MACHINE}-axis-linux-${LIBC}\n+\texit ;;\n+    e2k:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    frv:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    hexagon:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    i*86:Linux:*:*)\n+\techo ${UNAME_MACHINE}-pc-linux-${LIBC}\n+\texit ;;\n+    ia64:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    k1om:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    m32r*:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    m68*:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    mips:Linux:*:* | mips64:Linux:*:*)\n+\teval $set_cc_for_build\n+\tsed 's/^\t//' << EOF >$dummy.c\n+\t#undef CPU\n+\t#undef ${UNAME_MACHINE}\n+\t#undef ${UNAME_MACHINE}el\n+\t#if defined(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL) || defined(MIPSEL)\n+\tCPU=${UNAME_MACHINE}el\n+\t#else\n+\t#if defined(__MIPSEB__) || defined(__MIPSEB) || defined(_MIPSEB) || defined(MIPSEB)\n+\tCPU=${UNAME_MACHINE}\n+\t#else\n+\tCPU=\n+\t#endif\n+\t#endif\n+EOF\n+\teval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^CPU'`\n+\ttest x\"${CPU}\" != x && { echo \"${CPU}-unknown-linux-${LIBC}\"; exit; }\n+\t;;\n+    openrisc*:Linux:*:*)\n+\techo or1k-unknown-linux-${LIBC}\n+\texit ;;\n+    or32:Linux:*:* | or1k*:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    padre:Linux:*:*)\n+\techo sparc-unknown-linux-${LIBC}\n+\texit ;;\n+    parisc64:Linux:*:* | hppa64:Linux:*:*)\n+\techo hppa64-unknown-linux-${LIBC}\n+\texit ;;\n+    parisc:Linux:*:* | hppa:Linux:*:*)\n+\t# Look for CPU level\n+\tcase `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in\n+\t  PA7*) echo hppa1.1-unknown-linux-${LIBC} ;;\n+\t  PA8*) echo hppa2.0-unknown-linux-${LIBC} ;;\n+\t  *)    echo hppa-unknown-linux-${LIBC} ;;\n+\tesac\n+\texit ;;\n+    ppc64:Linux:*:*)\n+\techo powerpc64-unknown-linux-${LIBC}\n+\texit ;;\n+    ppc:Linux:*:*)\n+\techo powerpc-unknown-linux-${LIBC}\n+\texit ;;\n+    ppc64le:Linux:*:*)\n+\techo powerpc64le-unknown-linux-${LIBC}\n+\texit ;;\n+    ppcle:Linux:*:*)\n+\techo powerpcle-unknown-linux-${LIBC}\n+\texit ;;\n+    s390:Linux:*:* | s390x:Linux:*:*)\n+\techo ${UNAME_MACHINE}-ibm-linux-${LIBC}\n+\texit ;;\n+    sh64*:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    sh*:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    sparc:Linux:*:* | sparc64:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    tile*:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    vax:Linux:*:*)\n+\techo ${UNAME_MACHINE}-dec-linux-${LIBC}\n+\texit ;;\n+    x86_64:Linux:*:*)\n+\techo ${UNAME_MACHINE}-pc-linux-${LIBC}\n+\texit ;;\n+    xtensa*:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    i*86:DYNIX/ptx:4*:*)\n+\t# ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.\n+\t# earlier versions are messed up and put the nodename in both\n+\t# sysname and nodename.\n+\techo i386-sequent-sysv4\n+\texit ;;\n+    i*86:UNIX_SV:4.2MP:2.*)\n+\t# Unixware is an offshoot of SVR4, but it has its own version\n+\t# number series starting with 2...\n+\t# I am not positive that other SVR4 systems won't match this,\n+\t# I just have to hope.  -- rms.\n+\t# Use sysv4.2uw... so that sysv4* matches it.\n+\techo ${UNAME_MACHINE}-pc-sysv4.2uw${UNAME_VERSION}\n+\texit ;;\n+    i*86:OS/2:*:*)\n+\t# If we were able to find `uname', then EMX Unix compatibility\n+\t# is probably installed.\n+\techo ${UNAME_MACHINE}-pc-os2-emx\n+\texit ;;\n+    i*86:XTS-300:*:STOP)\n+\techo ${UNAME_MACHINE}-unknown-stop\n+\texit ;;\n+    i*86:atheos:*:*)\n+\techo ${UNAME_MACHINE}-unknown-atheos\n+\texit ;;\n+    i*86:syllable:*:*)\n+\techo ${UNAME_MACHINE}-pc-syllable\n+\texit ;;\n+    i*86:LynxOS:2.*:* | i*86:LynxOS:3.[01]*:* | i*86:LynxOS:4.[02]*:*)\n+\techo i386-unknown-lynxos${UNAME_RELEASE}\n+\texit ;;\n+    i*86:*DOS:*:*)\n+\techo ${UNAME_MACHINE}-pc-msdosdjgpp\n+\texit ;;\n+    i*86:*:4.*:* | i*86:SYSTEM_V:4.*:*)\n+\tUNAME_REL=`echo ${UNAME_RELEASE} | sed 's/\\/MP$//'`\n+\tif grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then\n+\t\techo ${UNAME_MACHINE}-univel-sysv${UNAME_REL}\n+\telse\n+\t\techo ${UNAME_MACHINE}-pc-sysv${UNAME_REL}\n+\tfi\n+\texit ;;\n+    i*86:*:5:[678]*)\n+\t# UnixWare 7.x, OpenUNIX and OpenServer 6.\n+\tcase `/bin/uname -X | grep \"^Machine\"` in\n+\t    *486*)\t     UNAME_MACHINE=i486 ;;\n+\t    *Pentium)\t     UNAME_MACHINE=i586 ;;\n+\t    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;\n+\tesac\n+\techo ${UNAME_MACHINE}-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}${UNAME_VERSION}\n+\texit ;;\n+    i*86:*:3.2:*)\n+\tif test -f /usr/options/cb.name; then\n+\t\tUNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`\n+\t\techo ${UNAME_MACHINE}-pc-isc$UNAME_REL\n+\telif /bin/uname -X 2>/dev/null >/dev/null ; then\n+\t\tUNAME_REL=`(/bin/uname -X|grep Release|sed -e 's/.*= //')`\n+\t\t(/bin/uname -X|grep i80486 >/dev/null) && UNAME_MACHINE=i486\n+\t\t(/bin/uname -X|grep '^Machine.*Pentium' >/dev/null) \\\n+\t\t\t&& UNAME_MACHINE=i586\n+\t\t(/bin/uname -X|grep '^Machine.*Pent *II' >/dev/null) \\\n+\t\t\t&& UNAME_MACHINE=i686\n+\t\t(/bin/uname -X|grep '^Machine.*Pentium Pro' >/dev/null) \\\n+\t\t\t&& UNAME_MACHINE=i686\n+\t\techo ${UNAME_MACHINE}-pc-sco$UNAME_REL\n+\telse\n+\t\techo ${UNAME_MACHINE}-pc-sysv32\n+\tfi\n+\texit ;;\n+    pc:*:*:*)\n+\t# Left here for compatibility:\n+\t# uname -m prints for DJGPP always 'pc', but it prints nothing about\n+\t# the processor, so we play safe by assuming i586.\n+\t# Note: whatever this is, it MUST be the same as what config.sub\n+\t# prints for the \"djgpp\" host, or else GDB configure will decide that\n+\t# this is a cross-build.\n+\techo i586-pc-msdosdjgpp\n+\texit ;;\n+    Intel:Mach:3*:*)\n+\techo i386-pc-mach3\n+\texit ;;\n+    paragon:*:*:*)\n+\techo i860-intel-osf1\n+\texit ;;\n+    i860:*:4.*:*) # i860-SVR4\n+\tif grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then\n+\t  echo i860-stardent-sysv${UNAME_RELEASE} # Stardent Vistra i860-SVR4\n+\telse # Add other i860-SVR4 vendors below as they are discovered.\n+\t  echo i860-unknown-sysv${UNAME_RELEASE}  # Unknown i860-SVR4\n+\tfi\n+\texit ;;\n+    mini*:CTIX:SYS*5:*)\n+\t# \"miniframe\"\n+\techo m68010-convergent-sysv\n+\texit ;;\n+    mc68k:UNIX:SYSTEM5:3.51m)\n+\techo m68k-convergent-sysv\n+\texit ;;\n+    M680?0:D-NIX:5.3:*)\n+\techo m68k-diab-dnix\n+\texit ;;\n+    M68*:*:R3V[5678]*:*)\n+\ttest -r /sysV68 && { echo 'm68k-motorola-sysv'; exit; } ;;\n+    3[345]??:*:4.0:3.0 | 3[34]??A:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 3[34]??/*:*:4.0:3.0 | 4400:*:4.0:3.0 | 4850:*:4.0:3.0 | SKA40:*:4.0:3.0 | SDS2:*:4.0:3.0 | SHG2:*:4.0:3.0 | S7501*:*:4.0:3.0)\n+\tOS_REL=''\n+\ttest -r /etc/.relid \\\n+\t&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n+\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n+\t  && { echo i486-ncr-sysv4.3${OS_REL}; exit; }\n+\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n+\t  && { echo i586-ncr-sysv4.3${OS_REL}; exit; } ;;\n+    3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)\n+\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n+\t  && { echo i486-ncr-sysv4; exit; } ;;\n+    NCR*:*:4.2:* | MPRAS*:*:4.2:*)\n+\tOS_REL='.3'\n+\ttest -r /etc/.relid \\\n+\t    && OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n+\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n+\t    && { echo i486-ncr-sysv4.3${OS_REL}; exit; }\n+\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n+\t    && { echo i586-ncr-sysv4.3${OS_REL}; exit; }\n+\t/bin/uname -p 2>/dev/null | /bin/grep pteron >/dev/null \\\n+\t    && { echo i586-ncr-sysv4.3${OS_REL}; exit; } ;;\n+    m68*:LynxOS:2.*:* | m68*:LynxOS:3.0*:*)\n+\techo m68k-unknown-lynxos${UNAME_RELEASE}\n+\texit ;;\n+    mc68030:UNIX_System_V:4.*:*)\n+\techo m68k-atari-sysv4\n+\texit ;;\n+    TSUNAMI:LynxOS:2.*:*)\n+\techo sparc-unknown-lynxos${UNAME_RELEASE}\n+\texit ;;\n+    rs6000:LynxOS:2.*:*)\n+\techo rs6000-unknown-lynxos${UNAME_RELEASE}\n+\texit ;;\n+    PowerPC:LynxOS:2.*:* | PowerPC:LynxOS:3.[01]*:* | PowerPC:LynxOS:4.[02]*:*)\n+\techo powerpc-unknown-lynxos${UNAME_RELEASE}\n+\texit ;;\n+    SM[BE]S:UNIX_SV:*:*)\n+\techo mips-dde-sysv${UNAME_RELEASE}\n+\texit ;;\n+    RM*:ReliantUNIX-*:*:*)\n+\techo mips-sni-sysv4\n+\texit ;;\n+    RM*:SINIX-*:*:*)\n+\techo mips-sni-sysv4\n+\texit ;;\n+    *:SINIX-*:*:*)\n+\tif uname -p 2>/dev/null >/dev/null ; then\n+\t\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n+\t\techo ${UNAME_MACHINE}-sni-sysv4\n+\telse\n+\t\techo ns32k-sni-sysv\n+\tfi\n+\texit ;;\n+    PENTIUM:*:4.0*:*)\t# Unisys `ClearPath HMP IX 4000' SVR4/MP effort\n+\t\t\t# says <Richard.M.Bartel@ccMail.Census.GOV>\n+\techo i586-unisys-sysv4\n+\texit ;;\n+    *:UNIX_System_V:4*:FTX*)\n+\t# From Gerald Hewes <hewes@openmarket.com>.\n+\t# How about differentiating between stratus architectures? -djm\n+\techo hppa1.1-stratus-sysv4\n+\texit ;;\n+    *:*:*:FTX*)\n+\t# From seanf@swdc.stratus.com.\n+\techo i860-stratus-sysv4\n+\texit ;;\n+    i*86:VOS:*:*)\n+\t# From Paul.Green@stratus.com.\n+\techo ${UNAME_MACHINE}-stratus-vos\n+\texit ;;\n+    *:VOS:*:*)\n+\t# From Paul.Green@stratus.com.\n+\techo hppa1.1-stratus-vos\n+\texit ;;\n+    mc68*:A/UX:*:*)\n+\techo m68k-apple-aux${UNAME_RELEASE}\n+\texit ;;\n+    news*:NEWS-OS:6*:*)\n+\techo mips-sony-newsos6\n+\texit ;;\n+    R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R*000:UNIX_SV:*:*)\n+\tif [ -d /usr/nec ]; then\n+\t\techo mips-nec-sysv${UNAME_RELEASE}\n+\telse\n+\t\techo mips-unknown-sysv${UNAME_RELEASE}\n+\tfi\n+\texit ;;\n+    BeBox:BeOS:*:*)\t# BeOS running on hardware made by Be, PPC only.\n+\techo powerpc-be-beos\n+\texit ;;\n+    BeMac:BeOS:*:*)\t# BeOS running on Mac or Mac clone, PPC only.\n+\techo powerpc-apple-beos\n+\texit ;;\n+    BePC:BeOS:*:*)\t# BeOS running on Intel PC compatible.\n+\techo i586-pc-beos\n+\texit ;;\n+    BePC:Haiku:*:*)\t# Haiku running on Intel PC compatible.\n+\techo i586-pc-haiku\n+\texit ;;\n+    x86_64:Haiku:*:*)\n+\techo x86_64-unknown-haiku\n+\texit ;;\n+    SX-4:SUPER-UX:*:*)\n+\techo sx4-nec-superux${UNAME_RELEASE}\n+\texit ;;\n+    SX-5:SUPER-UX:*:*)\n+\techo sx5-nec-superux${UNAME_RELEASE}\n+\texit ;;\n+    SX-6:SUPER-UX:*:*)\n+\techo sx6-nec-superux${UNAME_RELEASE}\n+\texit ;;\n+    SX-7:SUPER-UX:*:*)\n+\techo sx7-nec-superux${UNAME_RELEASE}\n+\texit ;;\n+    SX-8:SUPER-UX:*:*)\n+\techo sx8-nec-superux${UNAME_RELEASE}\n+\texit ;;\n+    SX-8R:SUPER-UX:*:*)\n+\techo sx8r-nec-superux${UNAME_RELEASE}\n+\texit ;;\n+    Power*:Rhapsody:*:*)\n+\techo powerpc-apple-rhapsody${UNAME_RELEASE}\n+\texit ;;\n+    *:Rhapsody:*:*)\n+\techo ${UNAME_MACHINE}-apple-rhapsody${UNAME_RELEASE}\n+\texit ;;\n+    *:Darwin:*:*)\n+\tUNAME_PROCESSOR=`uname -p` || UNAME_PROCESSOR=unknown\n+\teval $set_cc_for_build\n+\tif test \"$UNAME_PROCESSOR\" = unknown ; then\n+\t    UNAME_PROCESSOR=powerpc\n+\tfi\n+\tif test `echo \"$UNAME_RELEASE\" | sed -e 's/\\..*//'` -le 10 ; then\n+\t    if [ \"$CC_FOR_BUILD\" != 'no_compiler_found' ]; then\n+\t\tif (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \\\n+\t\t    (CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) | \\\n+\t\t    grep IS_64BIT_ARCH >/dev/null\n+\t\tthen\n+\t\t    case $UNAME_PROCESSOR in\n+\t\t\ti386) UNAME_PROCESSOR=x86_64 ;;\n+\t\t\tpowerpc) UNAME_PROCESSOR=powerpc64 ;;\n+\t\t    esac\n+\t\tfi\n+\t    fi\n+\telif test \"$UNAME_PROCESSOR\" = i386 ; then\n+\t    # Avoid executing cc on OS X 10.9, as it ships with a stub\n+\t    # that puts up a graphical alert prompting to install\n+\t    # developer tools.  Any system running Mac OS X 10.7 or\n+\t    # later (Darwin 11 and later) is required to have a 64-bit\n+\t    # processor. This is not true of the ARM version of Darwin\n+\t    # that Apple uses in portable devices.\n+\t    UNAME_PROCESSOR=x86_64\n+\tfi\n+\techo ${UNAME_PROCESSOR}-apple-darwin${UNAME_RELEASE}\n+\texit ;;\n+    *:procnto*:*:* | *:QNX:[0123456789]*:*)\n+\tUNAME_PROCESSOR=`uname -p`\n+\tif test \"$UNAME_PROCESSOR\" = \"x86\"; then\n+\t\tUNAME_PROCESSOR=i386\n+\t\tUNAME_MACHINE=pc\n+\tfi\n+\techo ${UNAME_PROCESSOR}-${UNAME_MACHINE}-nto-qnx${UNAME_RELEASE}\n+\texit ;;\n+    *:QNX:*:4*)\n+\techo i386-pc-qnx\n+\texit ;;\n+    NEO-?:NONSTOP_KERNEL:*:*)\n+\techo neo-tandem-nsk${UNAME_RELEASE}\n+\texit ;;\n+    NSE-*:NONSTOP_KERNEL:*:*)\n+\techo nse-tandem-nsk${UNAME_RELEASE}\n+\texit ;;\n+    NSR-?:NONSTOP_KERNEL:*:*)\n+\techo nsr-tandem-nsk${UNAME_RELEASE}\n+\texit ;;\n+    *:NonStop-UX:*:*)\n+\techo mips-compaq-nonstopux\n+\texit ;;\n+    BS2000:POSIX*:*:*)\n+\techo bs2000-siemens-sysv\n+\texit ;;\n+    DS/*:UNIX_System_V:*:*)\n+\techo ${UNAME_MACHINE}-${UNAME_SYSTEM}-${UNAME_RELEASE}\n+\texit ;;\n+    *:Plan9:*:*)\n+\t# \"uname -m\" is not consistent, so use $cputype instead. 386\n+\t# is converted to i386 for consistency with other x86\n+\t# operating systems.\n+\tif test \"$cputype\" = \"386\"; then\n+\t    UNAME_MACHINE=i386\n+\telse\n+\t    UNAME_MACHINE=\"$cputype\"\n+\tfi\n+\techo ${UNAME_MACHINE}-unknown-plan9\n+\texit ;;\n+    *:TOPS-10:*:*)\n+\techo pdp10-unknown-tops10\n+\texit ;;\n+    *:TENEX:*:*)\n+\techo pdp10-unknown-tenex\n+\texit ;;\n+    KS10:TOPS-20:*:* | KL10:TOPS-20:*:* | TYPE4:TOPS-20:*:*)\n+\techo pdp10-dec-tops20\n+\texit ;;\n+    XKL-1:TOPS-20:*:* | TYPE5:TOPS-20:*:*)\n+\techo pdp10-xkl-tops20\n+\texit ;;\n+    *:TOPS-20:*:*)\n+\techo pdp10-unknown-tops20\n+\texit ;;\n+    *:ITS:*:*)\n+\techo pdp10-unknown-its\n+\texit ;;\n+    SEI:*:*:SEIUX)\n+\techo mips-sei-seiux${UNAME_RELEASE}\n+\texit ;;\n+    *:DragonFly:*:*)\n+\techo ${UNAME_MACHINE}-unknown-dragonfly`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\n+\texit ;;\n+    *:*VMS:*:*)\n+\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n+\tcase \"${UNAME_MACHINE}\" in\n+\t    A*) echo alpha-dec-vms ; exit ;;\n+\t    I*) echo ia64-dec-vms ; exit ;;\n+\t    V*) echo vax-dec-vms ; exit ;;\n+\tesac ;;\n+    *:XENIX:*:SysV)\n+\techo i386-pc-xenix\n+\texit ;;\n+    i*86:skyos:*:*)\n+\techo ${UNAME_MACHINE}-pc-skyos`echo ${UNAME_RELEASE}` | sed -e 's/ .*$//'\n+\texit ;;\n+    i*86:rdos:*:*)\n+\techo ${UNAME_MACHINE}-pc-rdos\n+\texit ;;\n+    i*86:AROS:*:*)\n+\techo ${UNAME_MACHINE}-pc-aros\n+\texit ;;\n+    x86_64:VMkernel:*:*)\n+\techo ${UNAME_MACHINE}-unknown-esx\n+\texit ;;\n+    amd64:Isilon\\ OneFS:*:*)\n+        echo x86_64-unknown-onefs\n+\texit ;;\n+esac\n+\n+cat >&2 <<EOF\n+$0: unable to guess system type\n+\n+This script, last modified $timestamp, has failed to recognize\n+the operating system you are using. It is advised that you\n+download the most up to date version of the config scripts from\n+\n+  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD\n+and\n+  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD\n+\n+If the version you run ($0) is already up to date, please\n+send the following data and any information you think might be\n+pertinent to <config-patches@gnu.org> in order to provide the needed\n+information to handle your system.\n+\n+config.guess timestamp = $timestamp\n+\n+uname -m = `(uname -m) 2>/dev/null || echo unknown`\n+uname -r = `(uname -r) 2>/dev/null || echo unknown`\n+uname -s = `(uname -s) 2>/dev/null || echo unknown`\n+uname -v = `(uname -v) 2>/dev/null || echo unknown`\n+\n+/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null`\n+/bin/uname -X     = `(/bin/uname -X) 2>/dev/null`\n+\n+hostinfo               = `(hostinfo) 2>/dev/null`\n+/bin/universe          = `(/bin/universe) 2>/dev/null`\n+/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null`\n+/bin/arch              = `(/bin/arch) 2>/dev/null`\n+/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null`\n+/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null`\n+\n+UNAME_MACHINE = ${UNAME_MACHINE}\n+UNAME_RELEASE = ${UNAME_RELEASE}\n+UNAME_SYSTEM  = ${UNAME_SYSTEM}\n+UNAME_VERSION = ${UNAME_VERSION}\n+EOF\n+\n+exit 1\n+\n+# Local variables:\n+# eval: (add-hook 'write-file-hooks 'time-stamp)\n+# time-stamp-start: \"timestamp='\"\n+# time-stamp-format: \"%:y-%02m-%02d\"\n+# time-stamp-end: \"'\"\n+# End:"
      },
      {
        "sha": "9e8aee159bf7595cf9b93ad7003e7ddbea37ce2f",
        "filename": "depends/config.site.in",
        "status": "added",
        "additions": 104,
        "deletions": 0,
        "changes": 104,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,104 @@\n+depends_prefix=\"`dirname ${ac_site_file}`/..\"\n+\n+cross_compiling=maybe\n+host_alias=@HOST@\n+ac_tool_prefix=${host_alias}-\n+\n+if test -z $with_boost; then\n+  with_boost=$depends_prefix\n+fi\n+if test -z $with_qt_plugindir; then\n+  with_qt_plugindir=$depends_prefix/plugins\n+fi\n+if test -z $with_qt_translationdir; then\n+  with_qt_translationdir=$depends_prefix/translations\n+fi\n+if test -z $with_qt_bindir; then\n+  with_qt_bindir=$depends_prefix/native/bin\n+fi\n+if test -z $with_protoc_bindir; then\n+  with_protoc_bindir=$depends_prefix/native/bin\n+fi\n+if test -z $with_comparison_tool; then\n+  with_comparison_tool=$depends_prefix/native/share/BitcoindComparisonTool_jar/BitcoindComparisonTool.jar\n+fi\n+\n+\n+if test -z $enable_wallet && test -n \"@no_wallet@\"; then\n+  enable_wallet=no\n+fi\n+\n+if test -z $with_miniupnpc && test -n \"@no_upnp@\"; then\n+  with_miniupnpc=no\n+fi\n+\n+if test -z $with_gui && test -n \"@no_qt@\"; then\n+  with_gui=no\n+fi\n+\n+if test x@host_os@ = xdarwin; then\n+  BREW=no\n+  PORT=no\n+fi\n+\n+if test x@host_os@ = xmingw32; then\n+  if test -z $with_qt_incdir; then\n+    with_qt_incdir=$depends_prefix/include\n+  fi\n+  if test -z $with_qt_libdir; then\n+    with_qt_libdir=$depends_prefix/lib\n+  fi\n+fi\n+\n+PATH=$depends_prefix/native/bin:$PATH\n+PKG_CONFIG=\"`which pkg-config` --static\"\n+\n+# These two need to remain exported because pkg-config does not see them\n+# otherwise. That means they must be unexported at the end of configure.ac to\n+# avoid ruining the cache. Sigh.\n+\n+export PKG_CONFIG_LIBDIR=$depends_prefix/lib/pkgconfig\n+export PKG_CONFIG_PATH=$depends_prefix/share/pkgconfig\n+\n+CPPFLAGS=\"-I$depends_prefix/include/ $CPPFLAGS\"\n+LDFLAGS=\"-L$depends_prefix/lib $LDFLAGS\"\n+\n+CC=\"@CC@\"\n+CXX=\"@CXX@\"\n+OBJC=\"${CC}\"\n+OBJCXX=\"${CXX}\"\n+CCACHE=$prefix/native/bin/ccache\n+CCACHE=$depends_prefix/native/bin/ccache\n+PYTHONPATH=$depends_prefix/native/lib/python/dist-packages:$PYTHONPATH\n+\n+if test -n \"@AR@\"; then\n+  AR=@AR@\n+  ac_cv_path_ac_pt_AR=${AR}\n+fi\n+\n+if test -n \"@RANLIB@\"; then\n+  RANLIB=@RANLIB@\n+  ac_cv_path_ac_pt_RANLIB=${RANLIB}\n+fi\n+\n+if test -n \"@NM@\"; then\n+  NM=@NM@\n+  ac_cv_path_ac_pt_NM=${NM}\n+fi\n+\n+if test -n \"@debug@\"; then\n+  enable_reduce_exports=no\n+fi\n+\n+if test -n \"@CFLAGS@\"; then\n+  CFLAGS=\"@CFLAGS@ $CFLAGS\"\n+fi\n+if test -n \"@CXXFLAGS@\"; then\n+  CXXFLAGS=\"@CXXFLAGS@ $CXXFLAGS\"\n+fi\n+if test -n \"@CPPFLAGS@\"; then\n+  CPPFLAGS=\"@CPPFLAGS@ $CPPFLAGS\"\n+fi\n+if test -n \"@LDFLAGS@\"; then\n+  LDFLAGS=\"@LDFLAGS@ $LDFLAGS\"\n+fi"
      },
      {
        "sha": "ea8747d30fffb35e8a766b533f5a701f53f8a4dd",
        "filename": "depends/config.sub",
        "status": "added",
        "additions": 1813,
        "deletions": 0,
        "changes": 1813,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/config.sub",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/config.sub",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.sub?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,1813 @@\n+#! /bin/sh\n+# Configuration validation subroutine script.\n+#   Copyright 1992-2015 Free Software Foundation, Inc.\n+\n+timestamp='2015-11-22'\n+\n+# This file is free software; you can redistribute it and/or modify it\n+# under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, see <http://www.gnu.org/licenses/>.\n+#\n+# As a special exception to the GNU General Public License, if you\n+# distribute this file as part of a program that contains a\n+# configuration script generated by Autoconf, you may include it under\n+# the same distribution terms that you use for the rest of that\n+# program.  This Exception is an additional permission under section 7\n+# of the GNU General Public License, version 3 (\"GPLv3\").\n+\n+\n+# Please send patches to <config-patches@gnu.org>.\n+#\n+# Configuration subroutine to validate and canonicalize a configuration type.\n+# Supply the specified configuration type as an argument.\n+# If it is invalid, we print an error message on stderr and exit with code 1.\n+# Otherwise, we print the canonical config type on stdout and succeed.\n+\n+# You can get the latest version of this script from:\n+# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD\n+\n+# This file is supposed to be the same for all GNU packages\n+# and recognize all the CPU types, system types and aliases\n+# that are meaningful with *any* GNU software.\n+# Each package is responsible for reporting which valid configurations\n+# it does not support.  The user should be able to distinguish\n+# a failure to support a valid configuration from a meaningless\n+# configuration.\n+\n+# The goal of this file is to map all the various variations of a given\n+# machine specification into a single specification in the form:\n+#\tCPU_TYPE-MANUFACTURER-OPERATING_SYSTEM\n+# or in some cases, the newer four-part form:\n+#\tCPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM\n+# It is wrong to echo any other type of specification.\n+\n+me=`echo \"$0\" | sed -e 's,.*/,,'`\n+\n+usage=\"\\\n+Usage: $0 [OPTION] CPU-MFR-OPSYS or ALIAS\n+\n+Canonicalize a configuration name.\n+\n+Operation modes:\n+  -h, --help         print this help, then exit\n+  -t, --time-stamp   print date of last modification, then exit\n+  -v, --version      print version number, then exit\n+\n+Report bugs and patches to <config-patches@gnu.org>.\"\n+\n+version=\"\\\n+GNU config.sub ($timestamp)\n+\n+Copyright 1992-2015 Free Software Foundation, Inc.\n+\n+This is free software; see the source for copying conditions.  There is NO\n+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n+\n+help=\"\n+Try \\`$me --help' for more information.\"\n+\n+# Parse command line\n+while test $# -gt 0 ; do\n+  case $1 in\n+    --time-stamp | --time* | -t )\n+       echo \"$timestamp\" ; exit ;;\n+    --version | -v )\n+       echo \"$version\" ; exit ;;\n+    --help | --h* | -h )\n+       echo \"$usage\"; exit ;;\n+    -- )     # Stop option processing\n+       shift; break ;;\n+    - )\t# Use stdin as input.\n+       break ;;\n+    -* )\n+       echo \"$me: invalid option $1$help\"\n+       exit 1 ;;\n+\n+    *local*)\n+       # First pass through any local machine types.\n+       echo $1\n+       exit ;;\n+\n+    * )\n+       break ;;\n+  esac\n+done\n+\n+case $# in\n+ 0) echo \"$me: missing argument$help\" >&2\n+    exit 1;;\n+ 1) ;;\n+ *) echo \"$me: too many arguments$help\" >&2\n+    exit 1;;\n+esac\n+\n+# Separate what the user gave into CPU-COMPANY and OS or KERNEL-OS (if any).\n+# Here we must recognize all the valid KERNEL-OS combinations.\n+maybe_os=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\2/'`\n+case $maybe_os in\n+  nto-qnx* | linux-gnu* | linux-android* | linux-dietlibc | linux-newlib* | \\\n+  linux-musl* | linux-uclibc* | uclinux-uclibc* | uclinux-gnu* | kfreebsd*-gnu* | \\\n+  knetbsd*-gnu* | netbsd*-gnu* | netbsd*-eabi* | \\\n+  kopensolaris*-gnu* | \\\n+  storm-chaos* | os2-emx* | rtmk-nova*)\n+    os=-$maybe_os\n+    basic_machine=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\1/'`\n+    ;;\n+  android-linux)\n+    os=-linux-android\n+    basic_machine=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\1/'`-unknown\n+    ;;\n+  *)\n+    basic_machine=`echo $1 | sed 's/-[^-]*$//'`\n+    if [ $basic_machine != $1 ]\n+    then os=`echo $1 | sed 's/.*-/-/'`\n+    else os=; fi\n+    ;;\n+esac\n+\n+### Let's recognize common machines as not being operating systems so\n+### that things like config.sub decstation-3100 work.  We also\n+### recognize some manufacturers as not being operating systems, so we\n+### can provide default operating systems below.\n+case $os in\n+\t-sun*os*)\n+\t\t# Prevent following clause from handling this invalid input.\n+\t\t;;\n+\t-dec* | -mips* | -sequent* | -encore* | -pc532* | -sgi* | -sony* | \\\n+\t-att* | -7300* | -3300* | -delta* | -motorola* | -sun[234]* | \\\n+\t-unicom* | -ibm* | -next | -hp | -isi* | -apollo | -altos* | \\\n+\t-convergent* | -ncr* | -news | -32* | -3600* | -3100* | -hitachi* |\\\n+\t-c[123]* | -convex* | -sun | -crds | -omron* | -dg | -ultra | -tti* | \\\n+\t-harris | -dolphin | -highlevel | -gould | -cbm | -ns | -masscomp | \\\n+\t-apple | -axis | -knuth | -cray | -microblaze*)\n+\t\tos=\n+\t\tbasic_machine=$1\n+\t\t;;\n+\t-bluegene*)\n+\t\tos=-cnk\n+\t\t;;\n+\t-sim | -cisco | -oki | -wec | -winbond)\n+\t\tos=\n+\t\tbasic_machine=$1\n+\t\t;;\n+\t-scout)\n+\t\t;;\n+\t-wrs)\n+\t\tos=-vxworks\n+\t\tbasic_machine=$1\n+\t\t;;\n+\t-chorusos*)\n+\t\tos=-chorusos\n+\t\tbasic_machine=$1\n+\t\t;;\n+\t-chorusrdb)\n+\t\tos=-chorusrdb\n+\t\tbasic_machine=$1\n+\t\t;;\n+\t-hiux*)\n+\t\tos=-hiuxwe2\n+\t\t;;\n+\t-sco6)\n+\t\tos=-sco5v6\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco5)\n+\t\tos=-sco3.2v5\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco4)\n+\t\tos=-sco3.2v4\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco3.2.[4-9]*)\n+\t\tos=`echo $os | sed -e 's/sco3.2./sco3.2v/'`\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco3.2v[4-9]*)\n+\t\t# Don't forget version if it is 3.2v4 or newer.\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco5v6*)\n+\t\t# Don't forget version if it is 3.2v4 or newer.\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco*)\n+\t\tos=-sco3.2v2\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-udk*)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-isc)\n+\t\tos=-isc2.2\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-clix*)\n+\t\tbasic_machine=clipper-intergraph\n+\t\t;;\n+\t-isc*)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-lynx*178)\n+\t\tos=-lynxos178\n+\t\t;;\n+\t-lynx*5)\n+\t\tos=-lynxos5\n+\t\t;;\n+\t-lynx*)\n+\t\tos=-lynxos\n+\t\t;;\n+\t-ptx*)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-sequent/'`\n+\t\t;;\n+\t-windowsnt*)\n+\t\tos=`echo $os | sed -e 's/windowsnt/winnt/'`\n+\t\t;;\n+\t-psos*)\n+\t\tos=-psos\n+\t\t;;\n+\t-mint | -mint[0-9]*)\n+\t\tbasic_machine=m68k-atari\n+\t\tos=-mint\n+\t\t;;\n+esac\n+\n+# Decode aliases for certain CPU-COMPANY combinations.\n+case $basic_machine in\n+\t# Recognize the basic CPU types without company name.\n+\t# Some are omitted here because they have special meanings below.\n+\t1750a | 580 \\\n+\t| a29k \\\n+\t| aarch64 | aarch64_be \\\n+\t| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] | alphapca5[67] \\\n+\t| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] | alpha64pca5[67] \\\n+\t| am33_2.0 \\\n+\t| arc | arceb \\\n+\t| arm | arm[bl]e | arme[lb] | armv[2-8] | armv[3-8][lb] | armv7[arm] \\\n+\t| avr | avr32 \\\n+\t| ba \\\n+\t| be32 | be64 \\\n+\t| bfin \\\n+\t| c4x | c8051 | clipper \\\n+\t| d10v | d30v | dlx | dsp16xx \\\n+\t| e2k | epiphany \\\n+\t| fido | fr30 | frv | ft32 \\\n+\t| h8300 | h8500 | hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \\\n+\t| hexagon \\\n+\t| i370 | i860 | i960 | ia64 \\\n+\t| ip2k | iq2000 \\\n+\t| k1om \\\n+\t| le32 | le64 \\\n+\t| lm32 \\\n+\t| m32c | m32r | m32rle | m68000 | m68k | m88k \\\n+\t| maxq | mb | microblaze | microblazeel | mcore | mep | metag \\\n+\t| mips | mipsbe | mipseb | mipsel | mipsle \\\n+\t| mips16 \\\n+\t| mips64 | mips64el \\\n+\t| mips64octeon | mips64octeonel \\\n+\t| mips64orion | mips64orionel \\\n+\t| mips64r5900 | mips64r5900el \\\n+\t| mips64vr | mips64vrel \\\n+\t| mips64vr4100 | mips64vr4100el \\\n+\t| mips64vr4300 | mips64vr4300el \\\n+\t| mips64vr5000 | mips64vr5000el \\\n+\t| mips64vr5900 | mips64vr5900el \\\n+\t| mipsisa32 | mipsisa32el \\\n+\t| mipsisa32r2 | mipsisa32r2el \\\n+\t| mipsisa32r6 | mipsisa32r6el \\\n+\t| mipsisa64 | mipsisa64el \\\n+\t| mipsisa64r2 | mipsisa64r2el \\\n+\t| mipsisa64r6 | mipsisa64r6el \\\n+\t| mipsisa64sb1 | mipsisa64sb1el \\\n+\t| mipsisa64sr71k | mipsisa64sr71kel \\\n+\t| mipsr5900 | mipsr5900el \\\n+\t| mipstx39 | mipstx39el \\\n+\t| mn10200 | mn10300 \\\n+\t| moxie \\\n+\t| mt \\\n+\t| msp430 \\\n+\t| nds32 | nds32le | nds32be \\\n+\t| nios | nios2 | nios2eb | nios2el \\\n+\t| ns16k | ns32k \\\n+\t| open8 | or1k | or1knd | or32 \\\n+\t| pdp10 | pdp11 | pj | pjl \\\n+\t| powerpc | powerpc64 | powerpc64le | powerpcle \\\n+\t| pyramid \\\n+\t| riscv32 | riscv64 \\\n+\t| rl78 | rx \\\n+\t| score \\\n+\t| sh | sh[1234] | sh[24]a | sh[24]aeb | sh[23]e | sh[234]eb | sheb | shbe | shle | sh[1234]le | sh3ele \\\n+\t| sh64 | sh64le \\\n+\t| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet | sparclite \\\n+\t| sparcv8 | sparcv9 | sparcv9b | sparcv9v \\\n+\t| spu \\\n+\t| tahoe | tic4x | tic54x | tic55x | tic6x | tic80 | tron \\\n+\t| ubicom32 \\\n+\t| v850 | v850e | v850e1 | v850e2 | v850es | v850e2v3 \\\n+\t| visium \\\n+\t| we32k \\\n+\t| x86 | xc16x | xstormy16 | xtensa \\\n+\t| z8k | z80)\n+\t\tbasic_machine=$basic_machine-unknown\n+\t\t;;\n+\tc54x)\n+\t\tbasic_machine=tic54x-unknown\n+\t\t;;\n+\tc55x)\n+\t\tbasic_machine=tic55x-unknown\n+\t\t;;\n+\tc6x)\n+\t\tbasic_machine=tic6x-unknown\n+\t\t;;\n+\tleon|leon[3-9])\n+\t\tbasic_machine=sparc-$basic_machine\n+\t\t;;\n+\tm6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x | nvptx | picochip)\n+\t\tbasic_machine=$basic_machine-unknown\n+\t\tos=-none\n+\t\t;;\n+\tm88110 | m680[12346]0 | m683?2 | m68360 | m5200 | v70 | w65 | z8k)\n+\t\t;;\n+\tms1)\n+\t\tbasic_machine=mt-unknown\n+\t\t;;\n+\n+\tstrongarm | thumb | xscale)\n+\t\tbasic_machine=arm-unknown\n+\t\t;;\n+\txgate)\n+\t\tbasic_machine=$basic_machine-unknown\n+\t\tos=-none\n+\t\t;;\n+\txscaleeb)\n+\t\tbasic_machine=armeb-unknown\n+\t\t;;\n+\n+\txscaleel)\n+\t\tbasic_machine=armel-unknown\n+\t\t;;\n+\n+\t# We use `pc' rather than `unknown'\n+\t# because (1) that's what they normally are, and\n+\t# (2) the word \"unknown\" tends to confuse beginning users.\n+\ti*86 | x86_64)\n+\t  basic_machine=$basic_machine-pc\n+\t  ;;\n+\t# Object if more than one company name word.\n+\t*-*-*)\n+\t\techo Invalid configuration \\`$1\\': machine \\`$basic_machine\\' not recognized 1>&2\n+\t\texit 1\n+\t\t;;\n+\t# Recognize the basic CPU types with company name.\n+\t580-* \\\n+\t| a29k-* \\\n+\t| aarch64-* | aarch64_be-* \\\n+\t| alpha-* | alphaev[4-8]-* | alphaev56-* | alphaev6[78]-* \\\n+\t| alpha64-* | alpha64ev[4-8]-* | alpha64ev56-* | alpha64ev6[78]-* \\\n+\t| alphapca5[67]-* | alpha64pca5[67]-* | arc-* | arceb-* \\\n+\t| arm-*  | armbe-* | armle-* | armeb-* | armv*-* \\\n+\t| avr-* | avr32-* \\\n+\t| ba-* \\\n+\t| be32-* | be64-* \\\n+\t| bfin-* | bs2000-* \\\n+\t| c[123]* | c30-* | [cjt]90-* | c4x-* \\\n+\t| c8051-* | clipper-* | craynv-* | cydra-* \\\n+\t| d10v-* | d30v-* | dlx-* \\\n+\t| e2k-* | elxsi-* \\\n+\t| f30[01]-* | f700-* | fido-* | fr30-* | frv-* | fx80-* \\\n+\t| h8300-* | h8500-* \\\n+\t| hppa-* | hppa1.[01]-* | hppa2.0-* | hppa2.0[nw]-* | hppa64-* \\\n+\t| hexagon-* \\\n+\t| i*86-* | i860-* | i960-* | ia64-* \\\n+\t| ip2k-* | iq2000-* \\\n+\t| k1om-* \\\n+\t| le32-* | le64-* \\\n+\t| lm32-* \\\n+\t| m32c-* | m32r-* | m32rle-* \\\n+\t| m68000-* | m680[012346]0-* | m68360-* | m683?2-* | m68k-* \\\n+\t| m88110-* | m88k-* | maxq-* | mcore-* | metag-* \\\n+\t| microblaze-* | microblazeel-* \\\n+\t| mips-* | mipsbe-* | mipseb-* | mipsel-* | mipsle-* \\\n+\t| mips16-* \\\n+\t| mips64-* | mips64el-* \\\n+\t| mips64octeon-* | mips64octeonel-* \\\n+\t| mips64orion-* | mips64orionel-* \\\n+\t| mips64r5900-* | mips64r5900el-* \\\n+\t| mips64vr-* | mips64vrel-* \\\n+\t| mips64vr4100-* | mips64vr4100el-* \\\n+\t| mips64vr4300-* | mips64vr4300el-* \\\n+\t| mips64vr5000-* | mips64vr5000el-* \\\n+\t| mips64vr5900-* | mips64vr5900el-* \\\n+\t| mipsisa32-* | mipsisa32el-* \\\n+\t| mipsisa32r2-* | mipsisa32r2el-* \\\n+\t| mipsisa32r6-* | mipsisa32r6el-* \\\n+\t| mipsisa64-* | mipsisa64el-* \\\n+\t| mipsisa64r2-* | mipsisa64r2el-* \\\n+\t| mipsisa64r6-* | mipsisa64r6el-* \\\n+\t| mipsisa64sb1-* | mipsisa64sb1el-* \\\n+\t| mipsisa64sr71k-* | mipsisa64sr71kel-* \\\n+\t| mipsr5900-* | mipsr5900el-* \\\n+\t| mipstx39-* | mipstx39el-* \\\n+\t| mmix-* \\\n+\t| mt-* \\\n+\t| msp430-* \\\n+\t| nds32-* | nds32le-* | nds32be-* \\\n+\t| nios-* | nios2-* | nios2eb-* | nios2el-* \\\n+\t| none-* | np1-* | ns16k-* | ns32k-* \\\n+\t| open8-* \\\n+\t| or1k*-* \\\n+\t| orion-* \\\n+\t| pdp10-* | pdp11-* | pj-* | pjl-* | pn-* | power-* \\\n+\t| powerpc-* | powerpc64-* | powerpc64le-* | powerpcle-* \\\n+\t| pyramid-* \\\n+\t| riscv32-* | riscv64-* \\\n+\t| rl78-* | romp-* | rs6000-* | rx-* \\\n+\t| sh-* | sh[1234]-* | sh[24]a-* | sh[24]aeb-* | sh[23]e-* | sh[34]eb-* | sheb-* | shbe-* \\\n+\t| shle-* | sh[1234]le-* | sh3ele-* | sh64-* | sh64le-* \\\n+\t| sparc-* | sparc64-* | sparc64b-* | sparc64v-* | sparc86x-* | sparclet-* \\\n+\t| sparclite-* \\\n+\t| sparcv8-* | sparcv9-* | sparcv9b-* | sparcv9v-* | sv1-* | sx*-* \\\n+\t| tahoe-* \\\n+\t| tic30-* | tic4x-* | tic54x-* | tic55x-* | tic6x-* | tic80-* \\\n+\t| tile*-* \\\n+\t| tron-* \\\n+\t| ubicom32-* \\\n+\t| v850-* | v850e-* | v850e1-* | v850es-* | v850e2-* | v850e2v3-* \\\n+\t| vax-* \\\n+\t| visium-* \\\n+\t| we32k-* \\\n+\t| x86-* | x86_64-* | xc16x-* | xps100-* \\\n+\t| xstormy16-* | xtensa*-* \\\n+\t| ymp-* \\\n+\t| z8k-* | z80-*)\n+\t\t;;\n+\t# Recognize the basic CPU types without company name, with glob match.\n+\txtensa*)\n+\t\tbasic_machine=$basic_machine-unknown\n+\t\t;;\n+\t# Recognize the various machine names and aliases which stand\n+\t# for a CPU type and a company and sometimes even an OS.\n+\t386bsd)\n+\t\tbasic_machine=i386-unknown\n+\t\tos=-bsd\n+\t\t;;\n+\t3b1 | 7300 | 7300-att | att-7300 | pc7300 | safari | unixpc)\n+\t\tbasic_machine=m68000-att\n+\t\t;;\n+\t3b*)\n+\t\tbasic_machine=we32k-att\n+\t\t;;\n+\ta29khif)\n+\t\tbasic_machine=a29k-amd\n+\t\tos=-udi\n+\t\t;;\n+\tabacus)\n+\t\tbasic_machine=abacus-unknown\n+\t\t;;\n+\tadobe68k)\n+\t\tbasic_machine=m68010-adobe\n+\t\tos=-scout\n+\t\t;;\n+\talliant | fx80)\n+\t\tbasic_machine=fx80-alliant\n+\t\t;;\n+\taltos | altos3068)\n+\t\tbasic_machine=m68k-altos\n+\t\t;;\n+\tam29k)\n+\t\tbasic_machine=a29k-none\n+\t\tos=-bsd\n+\t\t;;\n+\tamd64)\n+\t\tbasic_machine=x86_64-pc\n+\t\t;;\n+\tamd64-*)\n+\t\tbasic_machine=x86_64-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tamdahl)\n+\t\tbasic_machine=580-amdahl\n+\t\tos=-sysv\n+\t\t;;\n+\tamiga | amiga-*)\n+\t\tbasic_machine=m68k-unknown\n+\t\t;;\n+\tamigaos | amigados)\n+\t\tbasic_machine=m68k-unknown\n+\t\tos=-amigaos\n+\t\t;;\n+\tamigaunix | amix)\n+\t\tbasic_machine=m68k-unknown\n+\t\tos=-sysv4\n+\t\t;;\n+\tapollo68)\n+\t\tbasic_machine=m68k-apollo\n+\t\tos=-sysv\n+\t\t;;\n+\tapollo68bsd)\n+\t\tbasic_machine=m68k-apollo\n+\t\tos=-bsd\n+\t\t;;\n+\taros)\n+\t\tbasic_machine=i386-pc\n+\t\tos=-aros\n+\t\t;;\n+        asmjs)\n+\t\tbasic_machine=asmjs-unknown\n+\t\t;;\n+\taux)\n+\t\tbasic_machine=m68k-apple\n+\t\tos=-aux\n+\t\t;;\n+\tbalance)\n+\t\tbasic_machine=ns32k-sequent\n+\t\tos=-dynix\n+\t\t;;\n+\tblackfin)\n+\t\tbasic_machine=bfin-unknown\n+\t\tos=-linux\n+\t\t;;\n+\tblackfin-*)\n+\t\tbasic_machine=bfin-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\tos=-linux\n+\t\t;;\n+\tbluegene*)\n+\t\tbasic_machine=powerpc-ibm\n+\t\tos=-cnk\n+\t\t;;\n+\tc54x-*)\n+\t\tbasic_machine=tic54x-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tc55x-*)\n+\t\tbasic_machine=tic55x-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tc6x-*)\n+\t\tbasic_machine=tic6x-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tc90)\n+\t\tbasic_machine=c90-cray\n+\t\tos=-unicos\n+\t\t;;\n+\tcegcc)\n+\t\tbasic_machine=arm-unknown\n+\t\tos=-cegcc\n+\t\t;;\n+\tconvex-c1)\n+\t\tbasic_machine=c1-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tconvex-c2)\n+\t\tbasic_machine=c2-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tconvex-c32)\n+\t\tbasic_machine=c32-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tconvex-c34)\n+\t\tbasic_machine=c34-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tconvex-c38)\n+\t\tbasic_machine=c38-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tcray | j90)\n+\t\tbasic_machine=j90-cray\n+\t\tos=-unicos\n+\t\t;;\n+\tcraynv)\n+\t\tbasic_machine=craynv-cray\n+\t\tos=-unicosmp\n+\t\t;;\n+\tcr16 | cr16-*)\n+\t\tbasic_machine=cr16-unknown\n+\t\tos=-elf\n+\t\t;;\n+\tcrds | unos)\n+\t\tbasic_machine=m68k-crds\n+\t\t;;\n+\tcrisv32 | crisv32-* | etraxfs*)\n+\t\tbasic_machine=crisv32-axis\n+\t\t;;\n+\tcris | cris-* | etrax*)\n+\t\tbasic_machine=cris-axis\n+\t\t;;\n+\tcrx)\n+\t\tbasic_machine=crx-unknown\n+\t\tos=-elf\n+\t\t;;\n+\tda30 | da30-*)\n+\t\tbasic_machine=m68k-da30\n+\t\t;;\n+\tdecstation | decstation-3100 | pmax | pmax-* | pmin | dec3100 | decstatn)\n+\t\tbasic_machine=mips-dec\n+\t\t;;\n+\tdecsystem10* | dec10*)\n+\t\tbasic_machine=pdp10-dec\n+\t\tos=-tops10\n+\t\t;;\n+\tdecsystem20* | dec20*)\n+\t\tbasic_machine=pdp10-dec\n+\t\tos=-tops20\n+\t\t;;\n+\tdelta | 3300 | motorola-3300 | motorola-delta \\\n+\t      | 3300-motorola | delta-motorola)\n+\t\tbasic_machine=m68k-motorola\n+\t\t;;\n+\tdelta88)\n+\t\tbasic_machine=m88k-motorola\n+\t\tos=-sysv3\n+\t\t;;\n+\tdicos)\n+\t\tbasic_machine=i686-pc\n+\t\tos=-dicos\n+\t\t;;\n+\tdjgpp)\n+\t\tbasic_machine=i586-pc\n+\t\tos=-msdosdjgpp\n+\t\t;;\n+\tdpx20 | dpx20-*)\n+\t\tbasic_machine=rs6000-bull\n+\t\tos=-bosx\n+\t\t;;\n+\tdpx2* | dpx2*-bull)\n+\t\tbasic_machine=m68k-bull\n+\t\tos=-sysv3\n+\t\t;;\n+\tebmon29k)\n+\t\tbasic_machine=a29k-amd\n+\t\tos=-ebmon\n+\t\t;;\n+\telxsi)\n+\t\tbasic_machine=elxsi-elxsi\n+\t\tos=-bsd\n+\t\t;;\n+\tencore | umax | mmax)\n+\t\tbasic_machine=ns32k-encore\n+\t\t;;\n+\tes1800 | OSE68k | ose68k | ose | OSE)\n+\t\tbasic_machine=m68k-ericsson\n+\t\tos=-ose\n+\t\t;;\n+\tfx2800)\n+\t\tbasic_machine=i860-alliant\n+\t\t;;\n+\tgenix)\n+\t\tbasic_machine=ns32k-ns\n+\t\t;;\n+\tgmicro)\n+\t\tbasic_machine=tron-gmicro\n+\t\tos=-sysv\n+\t\t;;\n+\tgo32)\n+\t\tbasic_machine=i386-pc\n+\t\tos=-go32\n+\t\t;;\n+\th3050r* | hiux*)\n+\t\tbasic_machine=hppa1.1-hitachi\n+\t\tos=-hiuxwe2\n+\t\t;;\n+\th8300hms)\n+\t\tbasic_machine=h8300-hitachi\n+\t\tos=-hms\n+\t\t;;\n+\th8300xray)\n+\t\tbasic_machine=h8300-hitachi\n+\t\tos=-xray\n+\t\t;;\n+\th8500hms)\n+\t\tbasic_machine=h8500-hitachi\n+\t\tos=-hms\n+\t\t;;\n+\tharris)\n+\t\tbasic_machine=m88k-harris\n+\t\tos=-sysv3\n+\t\t;;\n+\thp300-*)\n+\t\tbasic_machine=m68k-hp\n+\t\t;;\n+\thp300bsd)\n+\t\tbasic_machine=m68k-hp\n+\t\tos=-bsd\n+\t\t;;\n+\thp300hpux)\n+\t\tbasic_machine=m68k-hp\n+\t\tos=-hpux\n+\t\t;;\n+\thp3k9[0-9][0-9] | hp9[0-9][0-9])\n+\t\tbasic_machine=hppa1.0-hp\n+\t\t;;\n+\thp9k2[0-9][0-9] | hp9k31[0-9])\n+\t\tbasic_machine=m68000-hp\n+\t\t;;\n+\thp9k3[2-9][0-9])\n+\t\tbasic_machine=m68k-hp\n+\t\t;;\n+\thp9k6[0-9][0-9] | hp6[0-9][0-9])\n+\t\tbasic_machine=hppa1.0-hp\n+\t\t;;\n+\thp9k7[0-79][0-9] | hp7[0-79][0-9])\n+\t\tbasic_machine=hppa1.1-hp\n+\t\t;;\n+\thp9k78[0-9] | hp78[0-9])\n+\t\t# FIXME: really hppa2.0-hp\n+\t\tbasic_machine=hppa1.1-hp\n+\t\t;;\n+\thp9k8[67]1 | hp8[67]1 | hp9k80[24] | hp80[24] | hp9k8[78]9 | hp8[78]9 | hp9k893 | hp893)\n+\t\t# FIXME: really hppa2.0-hp\n+\t\tbasic_machine=hppa1.1-hp\n+\t\t;;\n+\thp9k8[0-9][13679] | hp8[0-9][13679])\n+\t\tbasic_machine=hppa1.1-hp\n+\t\t;;\n+\thp9k8[0-9][0-9] | hp8[0-9][0-9])\n+\t\tbasic_machine=hppa1.0-hp\n+\t\t;;\n+\thppa-next)\n+\t\tos=-nextstep3\n+\t\t;;\n+\thppaosf)\n+\t\tbasic_machine=hppa1.1-hp\n+\t\tos=-osf\n+\t\t;;\n+\thppro)\n+\t\tbasic_machine=hppa1.1-hp\n+\t\tos=-proelf\n+\t\t;;\n+\ti370-ibm* | ibm*)\n+\t\tbasic_machine=i370-ibm\n+\t\t;;\n+\ti*86v32)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n+\t\tos=-sysv32\n+\t\t;;\n+\ti*86v4*)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n+\t\tos=-sysv4\n+\t\t;;\n+\ti*86v)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n+\t\tos=-sysv\n+\t\t;;\n+\ti*86sol2)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n+\t\tos=-solaris2\n+\t\t;;\n+\ti386mach)\n+\t\tbasic_machine=i386-mach\n+\t\tos=-mach\n+\t\t;;\n+\ti386-vsta | vsta)\n+\t\tbasic_machine=i386-unknown\n+\t\tos=-vsta\n+\t\t;;\n+\tiris | iris4d)\n+\t\tbasic_machine=mips-sgi\n+\t\tcase $os in\n+\t\t    -irix*)\n+\t\t\t;;\n+\t\t    *)\n+\t\t\tos=-irix4\n+\t\t\t;;\n+\t\tesac\n+\t\t;;\n+\tisi68 | isi)\n+\t\tbasic_machine=m68k-isi\n+\t\tos=-sysv\n+\t\t;;\n+\tleon-*|leon[3-9]-*)\n+\t\tbasic_machine=sparc-`echo $basic_machine | sed 's/-.*//'`\n+\t\t;;\n+\tm68knommu)\n+\t\tbasic_machine=m68k-unknown\n+\t\tos=-linux\n+\t\t;;\n+\tm68knommu-*)\n+\t\tbasic_machine=m68k-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\tos=-linux\n+\t\t;;\n+\tm88k-omron*)\n+\t\tbasic_machine=m88k-omron\n+\t\t;;\n+\tmagnum | m3230)\n+\t\tbasic_machine=mips-mips\n+\t\tos=-sysv\n+\t\t;;\n+\tmerlin)\n+\t\tbasic_machine=ns32k-utek\n+\t\tos=-sysv\n+\t\t;;\n+\tmicroblaze*)\n+\t\tbasic_machine=microblaze-xilinx\n+\t\t;;\n+\tmingw64)\n+\t\tbasic_machine=x86_64-pc\n+\t\tos=-mingw64\n+\t\t;;\n+\tmingw32)\n+\t\tbasic_machine=i686-pc\n+\t\tos=-mingw32\n+\t\t;;\n+\tmingw32ce)\n+\t\tbasic_machine=arm-unknown\n+\t\tos=-mingw32ce\n+\t\t;;\n+\tminiframe)\n+\t\tbasic_machine=m68000-convergent\n+\t\t;;\n+\t*mint | -mint[0-9]* | *MiNT | *MiNT[0-9]*)\n+\t\tbasic_machine=m68k-atari\n+\t\tos=-mint\n+\t\t;;\n+\tmips3*-*)\n+\t\tbasic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`\n+\t\t;;\n+\tmips3*)\n+\t\tbasic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`-unknown\n+\t\t;;\n+\tmonitor)\n+\t\tbasic_machine=m68k-rom68k\n+\t\tos=-coff\n+\t\t;;\n+\tmorphos)\n+\t\tbasic_machine=powerpc-unknown\n+\t\tos=-morphos\n+\t\t;;\n+\tmoxiebox)\n+\t\tbasic_machine=moxie-unknown\n+\t\tos=-moxiebox\n+\t\t;;\n+\tmsdos)\n+\t\tbasic_machine=i386-pc\n+\t\tos=-msdos\n+\t\t;;\n+\tms1-*)\n+\t\tbasic_machine=`echo $basic_machine | sed -e 's/ms1-/mt-/'`\n+\t\t;;\n+\tmsys)\n+\t\tbasic_machine=i686-pc\n+\t\tos=-msys\n+\t\t;;\n+\tmvs)\n+\t\tbasic_machine=i370-ibm\n+\t\tos=-mvs\n+\t\t;;\n+\tnacl)\n+\t\tbasic_machine=le32-unknown\n+\t\tos=-nacl\n+\t\t;;\n+\tncr3000)\n+\t\tbasic_machine=i486-ncr\n+\t\tos=-sysv4\n+\t\t;;\n+\tnetbsd386)\n+\t\tbasic_machine=i386-unknown\n+\t\tos=-netbsd\n+\t\t;;\n+\tnetwinder)\n+\t\tbasic_machine=armv4l-rebel\n+\t\tos=-linux\n+\t\t;;\n+\tnews | news700 | news800 | news900)\n+\t\tbasic_machine=m68k-sony\n+\t\tos=-newsos\n+\t\t;;\n+\tnews1000)\n+\t\tbasic_machine=m68030-sony\n+\t\tos=-newsos\n+\t\t;;\n+\tnews-3600 | risc-news)\n+\t\tbasic_machine=mips-sony\n+\t\tos=-newsos\n+\t\t;;\n+\tnecv70)\n+\t\tbasic_machine=v70-nec\n+\t\tos=-sysv\n+\t\t;;\n+\tnext | m*-next )\n+\t\tbasic_machine=m68k-next\n+\t\tcase $os in\n+\t\t    -nextstep* )\n+\t\t\t;;\n+\t\t    -ns2*)\n+\t\t      os=-nextstep2\n+\t\t\t;;\n+\t\t    *)\n+\t\t      os=-nextstep3\n+\t\t\t;;\n+\t\tesac\n+\t\t;;\n+\tnh3000)\n+\t\tbasic_machine=m68k-harris\n+\t\tos=-cxux\n+\t\t;;\n+\tnh[45]000)\n+\t\tbasic_machine=m88k-harris\n+\t\tos=-cxux\n+\t\t;;\n+\tnindy960)\n+\t\tbasic_machine=i960-intel\n+\t\tos=-nindy\n+\t\t;;\n+\tmon960)\n+\t\tbasic_machine=i960-intel\n+\t\tos=-mon960\n+\t\t;;\n+\tnonstopux)\n+\t\tbasic_machine=mips-compaq\n+\t\tos=-nonstopux\n+\t\t;;\n+\tnp1)\n+\t\tbasic_machine=np1-gould\n+\t\t;;\n+\tneo-tandem)\n+\t\tbasic_machine=neo-tandem\n+\t\t;;\n+\tnse-tandem)\n+\t\tbasic_machine=nse-tandem\n+\t\t;;\n+\tnsr-tandem)\n+\t\tbasic_machine=nsr-tandem\n+\t\t;;\n+\top50n-* | op60c-*)\n+\t\tbasic_machine=hppa1.1-oki\n+\t\tos=-proelf\n+\t\t;;\n+\topenrisc | openrisc-*)\n+\t\tbasic_machine=or32-unknown\n+\t\t;;\n+\tos400)\n+\t\tbasic_machine=powerpc-ibm\n+\t\tos=-os400\n+\t\t;;\n+\tOSE68000 | ose68000)\n+\t\tbasic_machine=m68000-ericsson\n+\t\tos=-ose\n+\t\t;;\n+\tos68k)\n+\t\tbasic_machine=m68k-none\n+\t\tos=-os68k\n+\t\t;;\n+\tpa-hitachi)\n+\t\tbasic_machine=hppa1.1-hitachi\n+\t\tos=-hiuxwe2\n+\t\t;;\n+\tparagon)\n+\t\tbasic_machine=i860-intel\n+\t\tos=-osf\n+\t\t;;\n+\tparisc)\n+\t\tbasic_machine=hppa-unknown\n+\t\tos=-linux\n+\t\t;;\n+\tparisc-*)\n+\t\tbasic_machine=hppa-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\tos=-linux\n+\t\t;;\n+\tpbd)\n+\t\tbasic_machine=sparc-tti\n+\t\t;;\n+\tpbb)\n+\t\tbasic_machine=m68k-tti\n+\t\t;;\n+\tpc532 | pc532-*)\n+\t\tbasic_machine=ns32k-pc532\n+\t\t;;\n+\tpc98)\n+\t\tbasic_machine=i386-pc\n+\t\t;;\n+\tpc98-*)\n+\t\tbasic_machine=i386-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tpentium | p5 | k5 | k6 | nexgen | viac3)\n+\t\tbasic_machine=i586-pc\n+\t\t;;\n+\tpentiumpro | p6 | 6x86 | athlon | athlon_*)\n+\t\tbasic_machine=i686-pc\n+\t\t;;\n+\tpentiumii | pentium2 | pentiumiii | pentium3)\n+\t\tbasic_machine=i686-pc\n+\t\t;;\n+\tpentium4)\n+\t\tbasic_machine=i786-pc\n+\t\t;;\n+\tpentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)\n+\t\tbasic_machine=i586-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tpentiumpro-* | p6-* | 6x86-* | athlon-*)\n+\t\tbasic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tpentiumii-* | pentium2-* | pentiumiii-* | pentium3-*)\n+\t\tbasic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tpentium4-*)\n+\t\tbasic_machine=i786-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tpn)\n+\t\tbasic_machine=pn-gould\n+\t\t;;\n+\tpower)\tbasic_machine=power-ibm\n+\t\t;;\n+\tppc | ppcbe)\tbasic_machine=powerpc-unknown\n+\t\t;;\n+\tppc-* | ppcbe-*)\n+\t\tbasic_machine=powerpc-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tppcle | powerpclittle | ppc-le | powerpc-little)\n+\t\tbasic_machine=powerpcle-unknown\n+\t\t;;\n+\tppcle-* | powerpclittle-*)\n+\t\tbasic_machine=powerpcle-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tppc64)\tbasic_machine=powerpc64-unknown\n+\t\t;;\n+\tppc64-*) basic_machine=powerpc64-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tppc64le | powerpc64little | ppc64-le | powerpc64-little)\n+\t\tbasic_machine=powerpc64le-unknown\n+\t\t;;\n+\tppc64le-* | powerpc64little-*)\n+\t\tbasic_machine=powerpc64le-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tps2)\n+\t\tbasic_machine=i386-ibm\n+\t\t;;\n+\tpw32)\n+\t\tbasic_machine=i586-unknown\n+\t\tos=-pw32\n+\t\t;;\n+\trdos | rdos64)\n+\t\tbasic_machine=x86_64-pc\n+\t\tos=-rdos\n+\t\t;;\n+\trdos32)\n+\t\tbasic_machine=i386-pc\n+\t\tos=-rdos\n+\t\t;;\n+\trom68k)\n+\t\tbasic_machine=m68k-rom68k\n+\t\tos=-coff\n+\t\t;;\n+\trm[46]00)\n+\t\tbasic_machine=mips-siemens\n+\t\t;;\n+\trtpc | rtpc-*)\n+\t\tbasic_machine=romp-ibm\n+\t\t;;\n+\ts390 | s390-*)\n+\t\tbasic_machine=s390-ibm\n+\t\t;;\n+\ts390x | s390x-*)\n+\t\tbasic_machine=s390x-ibm\n+\t\t;;\n+\tsa29200)\n+\t\tbasic_machine=a29k-amd\n+\t\tos=-udi\n+\t\t;;\n+\tsb1)\n+\t\tbasic_machine=mipsisa64sb1-unknown\n+\t\t;;\n+\tsb1el)\n+\t\tbasic_machine=mipsisa64sb1el-unknown\n+\t\t;;\n+\tsde)\n+\t\tbasic_machine=mipsisa32-sde\n+\t\tos=-elf\n+\t\t;;\n+\tsei)\n+\t\tbasic_machine=mips-sei\n+\t\tos=-seiux\n+\t\t;;\n+\tsequent)\n+\t\tbasic_machine=i386-sequent\n+\t\t;;\n+\tsh)\n+\t\tbasic_machine=sh-hitachi\n+\t\tos=-hms\n+\t\t;;\n+\tsh5el)\n+\t\tbasic_machine=sh5le-unknown\n+\t\t;;\n+\tsh64)\n+\t\tbasic_machine=sh64-unknown\n+\t\t;;\n+\tsparclite-wrs | simso-wrs)\n+\t\tbasic_machine=sparclite-wrs\n+\t\tos=-vxworks\n+\t\t;;\n+\tsps7)\n+\t\tbasic_machine=m68k-bull\n+\t\tos=-sysv2\n+\t\t;;\n+\tspur)\n+\t\tbasic_machine=spur-unknown\n+\t\t;;\n+\tst2000)\n+\t\tbasic_machine=m68k-tandem\n+\t\t;;\n+\tstratus)\n+\t\tbasic_machine=i860-stratus\n+\t\tos=-sysv4\n+\t\t;;\n+\tstrongarm-* | thumb-*)\n+\t\tbasic_machine=arm-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tsun2)\n+\t\tbasic_machine=m68000-sun\n+\t\t;;\n+\tsun2os3)\n+\t\tbasic_machine=m68000-sun\n+\t\tos=-sunos3\n+\t\t;;\n+\tsun2os4)\n+\t\tbasic_machine=m68000-sun\n+\t\tos=-sunos4\n+\t\t;;\n+\tsun3os3)\n+\t\tbasic_machine=m68k-sun\n+\t\tos=-sunos3\n+\t\t;;\n+\tsun3os4)\n+\t\tbasic_machine=m68k-sun\n+\t\tos=-sunos4\n+\t\t;;\n+\tsun4os3)\n+\t\tbasic_machine=sparc-sun\n+\t\tos=-sunos3\n+\t\t;;\n+\tsun4os4)\n+\t\tbasic_machine=sparc-sun\n+\t\tos=-sunos4\n+\t\t;;\n+\tsun4sol2)\n+\t\tbasic_machine=sparc-sun\n+\t\tos=-solaris2\n+\t\t;;\n+\tsun3 | sun3-*)\n+\t\tbasic_machine=m68k-sun\n+\t\t;;\n+\tsun4)\n+\t\tbasic_machine=sparc-sun\n+\t\t;;\n+\tsun386 | sun386i | roadrunner)\n+\t\tbasic_machine=i386-sun\n+\t\t;;\n+\tsv1)\n+\t\tbasic_machine=sv1-cray\n+\t\tos=-unicos\n+\t\t;;\n+\tsymmetry)\n+\t\tbasic_machine=i386-sequent\n+\t\tos=-dynix\n+\t\t;;\n+\tt3e)\n+\t\tbasic_machine=alphaev5-cray\n+\t\tos=-unicos\n+\t\t;;\n+\tt90)\n+\t\tbasic_machine=t90-cray\n+\t\tos=-unicos\n+\t\t;;\n+\ttile*)\n+\t\tbasic_machine=$basic_machine-unknown\n+\t\tos=-linux-gnu\n+\t\t;;\n+\ttx39)\n+\t\tbasic_machine=mipstx39-unknown\n+\t\t;;\n+\ttx39el)\n+\t\tbasic_machine=mipstx39el-unknown\n+\t\t;;\n+\ttoad1)\n+\t\tbasic_machine=pdp10-xkl\n+\t\tos=-tops20\n+\t\t;;\n+\ttower | tower-32)\n+\t\tbasic_machine=m68k-ncr\n+\t\t;;\n+\ttpf)\n+\t\tbasic_machine=s390x-ibm\n+\t\tos=-tpf\n+\t\t;;\n+\tudi29k)\n+\t\tbasic_machine=a29k-amd\n+\t\tos=-udi\n+\t\t;;\n+\tultra3)\n+\t\tbasic_machine=a29k-nyu\n+\t\tos=-sym1\n+\t\t;;\n+\tv810 | necv810)\n+\t\tbasic_machine=v810-nec\n+\t\tos=-none\n+\t\t;;\n+\tvaxv)\n+\t\tbasic_machine=vax-dec\n+\t\tos=-sysv\n+\t\t;;\n+\tvms)\n+\t\tbasic_machine=vax-dec\n+\t\tos=-vms\n+\t\t;;\n+\tvpp*|vx|vx-*)\n+\t\tbasic_machine=f301-fujitsu\n+\t\t;;\n+\tvxworks960)\n+\t\tbasic_machine=i960-wrs\n+\t\tos=-vxworks\n+\t\t;;\n+\tvxworks68)\n+\t\tbasic_machine=m68k-wrs\n+\t\tos=-vxworks\n+\t\t;;\n+\tvxworks29k)\n+\t\tbasic_machine=a29k-wrs\n+\t\tos=-vxworks\n+\t\t;;\n+\tw65*)\n+\t\tbasic_machine=w65-wdc\n+\t\tos=-none\n+\t\t;;\n+\tw89k-*)\n+\t\tbasic_machine=hppa1.1-winbond\n+\t\tos=-proelf\n+\t\t;;\n+\txbox)\n+\t\tbasic_machine=i686-pc\n+\t\tos=-mingw32\n+\t\t;;\n+\txps | xps100)\n+\t\tbasic_machine=xps100-honeywell\n+\t\t;;\n+\txscale-* | xscalee[bl]-*)\n+\t\tbasic_machine=`echo $basic_machine | sed 's/^xscale/arm/'`\n+\t\t;;\n+\tymp)\n+\t\tbasic_machine=ymp-cray\n+\t\tos=-unicos\n+\t\t;;\n+\tz8k-*-coff)\n+\t\tbasic_machine=z8k-unknown\n+\t\tos=-sim\n+\t\t;;\n+\tz80-*-coff)\n+\t\tbasic_machine=z80-unknown\n+\t\tos=-sim\n+\t\t;;\n+\tnone)\n+\t\tbasic_machine=none-none\n+\t\tos=-none\n+\t\t;;\n+\n+# Here we handle the default manufacturer of certain CPU types.  It is in\n+# some cases the only manufacturer, in others, it is the most popular.\n+\tw89k)\n+\t\tbasic_machine=hppa1.1-winbond\n+\t\t;;\n+\top50n)\n+\t\tbasic_machine=hppa1.1-oki\n+\t\t;;\n+\top60c)\n+\t\tbasic_machine=hppa1.1-oki\n+\t\t;;\n+\tromp)\n+\t\tbasic_machine=romp-ibm\n+\t\t;;\n+\tmmix)\n+\t\tbasic_machine=mmix-knuth\n+\t\t;;\n+\trs6000)\n+\t\tbasic_machine=rs6000-ibm\n+\t\t;;\n+\tvax)\n+\t\tbasic_machine=vax-dec\n+\t\t;;\n+\tpdp10)\n+\t\t# there are many clones, so DEC is not a safe bet\n+\t\tbasic_machine=pdp10-unknown\n+\t\t;;\n+\tpdp11)\n+\t\tbasic_machine=pdp11-dec\n+\t\t;;\n+\twe32k)\n+\t\tbasic_machine=we32k-att\n+\t\t;;\n+\tsh[1234] | sh[24]a | sh[24]aeb | sh[34]eb | sh[1234]le | sh[23]ele)\n+\t\tbasic_machine=sh-unknown\n+\t\t;;\n+\tsparc | sparcv8 | sparcv9 | sparcv9b | sparcv9v)\n+\t\tbasic_machine=sparc-sun\n+\t\t;;\n+\tcydra)\n+\t\tbasic_machine=cydra-cydrome\n+\t\t;;\n+\torion)\n+\t\tbasic_machine=orion-highlevel\n+\t\t;;\n+\torion105)\n+\t\tbasic_machine=clipper-highlevel\n+\t\t;;\n+\tmac | mpw | mac-mpw)\n+\t\tbasic_machine=m68k-apple\n+\t\t;;\n+\tpmac | pmac-mpw)\n+\t\tbasic_machine=powerpc-apple\n+\t\t;;\n+\t*-unknown)\n+\t\t# Make sure to match an already-canonicalized machine name.\n+\t\t;;\n+\t*)\n+\t\techo Invalid configuration \\`$1\\': machine \\`$basic_machine\\' not recognized 1>&2\n+\t\texit 1\n+\t\t;;\n+esac\n+\n+# Here we canonicalize certain aliases for manufacturers.\n+case $basic_machine in\n+\t*-digital*)\n+\t\tbasic_machine=`echo $basic_machine | sed 's/digital.*/dec/'`\n+\t\t;;\n+\t*-commodore*)\n+\t\tbasic_machine=`echo $basic_machine | sed 's/commodore.*/cbm/'`\n+\t\t;;\n+\t*)\n+\t\t;;\n+esac\n+\n+# Decode manufacturer-specific aliases for certain operating systems.\n+\n+if [ x\"$os\" != x\"\" ]\n+then\n+case $os in\n+\t# First match some system type aliases\n+\t# that might get confused with valid system types.\n+\t# -solaris* is a basic system type, with this one exception.\n+\t-auroraux)\n+\t\tos=-auroraux\n+\t\t;;\n+\t-solaris1 | -solaris1.*)\n+\t\tos=`echo $os | sed -e 's|solaris1|sunos4|'`\n+\t\t;;\n+\t-solaris)\n+\t\tos=-solaris2\n+\t\t;;\n+\t-svr4*)\n+\t\tos=-sysv4\n+\t\t;;\n+\t-unixware*)\n+\t\tos=-sysv4.2uw\n+\t\t;;\n+\t-gnu/linux*)\n+\t\tos=`echo $os | sed -e 's|gnu/linux|linux-gnu|'`\n+\t\t;;\n+\t# First accept the basic system types.\n+\t# The portable systems comes first.\n+\t# Each alternative MUST END IN A *, to match a version number.\n+\t# -sysv* is not here because it comes later, after sysvr4.\n+\t-gnu* | -bsd* | -mach* | -minix* | -genix* | -ultrix* | -irix* \\\n+\t      | -*vms* | -sco* | -esix* | -isc* | -aix* | -cnk* | -sunos | -sunos[34]*\\\n+\t      | -hpux* | -unos* | -osf* | -luna* | -dgux* | -auroraux* | -solaris* \\\n+\t      | -sym* | -kopensolaris* | -plan9* \\\n+\t      | -amigaos* | -amigados* | -msdos* | -newsos* | -unicos* | -aof* \\\n+\t      | -aos* | -aros* | -cloudabi* | -sortix* \\\n+\t      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \\\n+\t      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \\\n+\t      | -hiux* | -386bsd* | -knetbsd* | -mirbsd* | -netbsd* \\\n+\t      | -bitrig* | -openbsd* | -solidbsd* \\\n+\t      | -ekkobsd* | -kfreebsd* | -freebsd* | -riscix* | -lynxos* \\\n+\t      | -bosx* | -nextstep* | -cxux* | -aout* | -elf* | -oabi* \\\n+\t      | -ptx* | -coff* | -ecoff* | -winnt* | -domain* | -vsta* \\\n+\t      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* \\\n+\t      | -chorusos* | -chorusrdb* | -cegcc* \\\n+\t      | -cygwin* | -msys* | -pe* | -psos* | -moss* | -proelf* | -rtems* \\\n+\t      | -mingw32* | -mingw64* | -linux-gnu* | -linux-android* \\\n+\t      | -linux-newlib* | -linux-musl* | -linux-uclibc* \\\n+\t      | -uxpv* | -beos* | -mpeix* | -udk* | -moxiebox* \\\n+\t      | -interix* | -uwin* | -mks* | -rhapsody* | -darwin* | -opened* \\\n+\t      | -openstep* | -oskit* | -conix* | -pw32* | -nonstopux* \\\n+\t      | -storm-chaos* | -tops10* | -tenex* | -tops20* | -its* \\\n+\t      | -os2* | -vos* | -palmos* | -uclinux* | -nucleus* \\\n+\t      | -morphos* | -superux* | -rtmk* | -rtmk-nova* | -windiss* \\\n+\t      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly* \\\n+\t      | -skyos* | -haiku* | -rdos* | -toppers* | -drops* | -es* \\\n+\t      | -onefs* | -tirtos*)\n+\t# Remember, each alternative MUST END IN *, to match a version number.\n+\t\t;;\n+\t-qnx*)\n+\t\tcase $basic_machine in\n+\t\t    x86-* | i*86-*)\n+\t\t\t;;\n+\t\t    *)\n+\t\t\tos=-nto$os\n+\t\t\t;;\n+\t\tesac\n+\t\t;;\n+\t-nto-qnx*)\n+\t\t;;\n+\t-nto*)\n+\t\tos=`echo $os | sed -e 's|nto|nto-qnx|'`\n+\t\t;;\n+\t-sim | -es1800* | -hms* | -xray | -os68k* | -none* | -v88r* \\\n+\t      | -windows* | -osx | -abug | -netware* | -os9* | -beos* | -haiku* \\\n+\t      | -macos* | -mpw* | -magic* | -mmixware* | -mon960* | -lnews*)\n+\t\t;;\n+\t-mac*)\n+\t\tos=`echo $os | sed -e 's|mac|macos|'`\n+\t\t;;\n+\t-linux-dietlibc)\n+\t\tos=-linux-dietlibc\n+\t\t;;\n+\t-linux*)\n+\t\tos=`echo $os | sed -e 's|linux|linux-gnu|'`\n+\t\t;;\n+\t-sunos5*)\n+\t\tos=`echo $os | sed -e 's|sunos5|solaris2|'`\n+\t\t;;\n+\t-sunos6*)\n+\t\tos=`echo $os | sed -e 's|sunos6|solaris3|'`\n+\t\t;;\n+\t-opened*)\n+\t\tos=-openedition\n+\t\t;;\n+\t-os400*)\n+\t\tos=-os400\n+\t\t;;\n+\t-wince*)\n+\t\tos=-wince\n+\t\t;;\n+\t-osfrose*)\n+\t\tos=-osfrose\n+\t\t;;\n+\t-osf*)\n+\t\tos=-osf\n+\t\t;;\n+\t-utek*)\n+\t\tos=-bsd\n+\t\t;;\n+\t-dynix*)\n+\t\tos=-bsd\n+\t\t;;\n+\t-acis*)\n+\t\tos=-aos\n+\t\t;;\n+\t-atheos*)\n+\t\tos=-atheos\n+\t\t;;\n+\t-syllable*)\n+\t\tos=-syllable\n+\t\t;;\n+\t-386bsd)\n+\t\tos=-bsd\n+\t\t;;\n+\t-ctix* | -uts*)\n+\t\tos=-sysv\n+\t\t;;\n+\t-nova*)\n+\t\tos=-rtmk-nova\n+\t\t;;\n+\t-ns2 )\n+\t\tos=-nextstep2\n+\t\t;;\n+\t-nsk*)\n+\t\tos=-nsk\n+\t\t;;\n+\t# Preserve the version number of sinix5.\n+\t-sinix5.*)\n+\t\tos=`echo $os | sed -e 's|sinix|sysv|'`\n+\t\t;;\n+\t-sinix*)\n+\t\tos=-sysv4\n+\t\t;;\n+\t-tpf*)\n+\t\tos=-tpf\n+\t\t;;\n+\t-triton*)\n+\t\tos=-sysv3\n+\t\t;;\n+\t-oss*)\n+\t\tos=-sysv3\n+\t\t;;\n+\t-svr4)\n+\t\tos=-sysv4\n+\t\t;;\n+\t-svr3)\n+\t\tos=-sysv3\n+\t\t;;\n+\t-sysvr4)\n+\t\tos=-sysv4\n+\t\t;;\n+\t# This must come after -sysvr4.\n+\t-sysv*)\n+\t\t;;\n+\t-ose*)\n+\t\tos=-ose\n+\t\t;;\n+\t-es1800*)\n+\t\tos=-ose\n+\t\t;;\n+\t-xenix)\n+\t\tos=-xenix\n+\t\t;;\n+\t-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)\n+\t\tos=-mint\n+\t\t;;\n+\t-aros*)\n+\t\tos=-aros\n+\t\t;;\n+\t-zvmoe)\n+\t\tos=-zvmoe\n+\t\t;;\n+\t-dicos*)\n+\t\tos=-dicos\n+\t\t;;\n+\t-nacl*)\n+\t\t;;\n+\t-none)\n+\t\t;;\n+\t*)\n+\t\t# Get rid of the `-' at the beginning of $os.\n+\t\tos=`echo $os | sed 's/[^-]*-//'`\n+\t\techo Invalid configuration \\`$1\\': system \\`$os\\' not recognized 1>&2\n+\t\texit 1\n+\t\t;;\n+esac\n+else\n+\n+# Here we handle the default operating systems that come with various machines.\n+# The value should be what the vendor currently ships out the door with their\n+# machine or put another way, the most popular os provided with the machine.\n+\n+# Note that if you're going to try to match \"-MANUFACTURER\" here (say,\n+# \"-sun\"), then you have to tell the case statement up towards the top\n+# that MANUFACTURER isn't an operating system.  Otherwise, code above\n+# will signal an error saying that MANUFACTURER isn't an operating\n+# system, and we'll never get to this point.\n+\n+case $basic_machine in\n+\tscore-*)\n+\t\tos=-elf\n+\t\t;;\n+\tspu-*)\n+\t\tos=-elf\n+\t\t;;\n+\t*-acorn)\n+\t\tos=-riscix1.2\n+\t\t;;\n+\tarm*-rebel)\n+\t\tos=-linux\n+\t\t;;\n+\tarm*-semi)\n+\t\tos=-aout\n+\t\t;;\n+\tc4x-* | tic4x-*)\n+\t\tos=-coff\n+\t\t;;\n+\tc8051-*)\n+\t\tos=-elf\n+\t\t;;\n+\thexagon-*)\n+\t\tos=-elf\n+\t\t;;\n+\ttic54x-*)\n+\t\tos=-coff\n+\t\t;;\n+\ttic55x-*)\n+\t\tos=-coff\n+\t\t;;\n+\ttic6x-*)\n+\t\tos=-coff\n+\t\t;;\n+\t# This must come before the *-dec entry.\n+\tpdp10-*)\n+\t\tos=-tops20\n+\t\t;;\n+\tpdp11-*)\n+\t\tos=-none\n+\t\t;;\n+\t*-dec | vax-*)\n+\t\tos=-ultrix4.2\n+\t\t;;\n+\tm68*-apollo)\n+\t\tos=-domain\n+\t\t;;\n+\ti386-sun)\n+\t\tos=-sunos4.0.2\n+\t\t;;\n+\tm68000-sun)\n+\t\tos=-sunos3\n+\t\t;;\n+\tm68*-cisco)\n+\t\tos=-aout\n+\t\t;;\n+\tmep-*)\n+\t\tos=-elf\n+\t\t;;\n+\tmips*-cisco)\n+\t\tos=-elf\n+\t\t;;\n+\tmips*-*)\n+\t\tos=-elf\n+\t\t;;\n+\tor32-*)\n+\t\tos=-coff\n+\t\t;;\n+\t*-tti)\t# must be before sparc entry or we get the wrong os.\n+\t\tos=-sysv3\n+\t\t;;\n+\tsparc-* | *-sun)\n+\t\tos=-sunos4.1.1\n+\t\t;;\n+\t*-be)\n+\t\tos=-beos\n+\t\t;;\n+\t*-haiku)\n+\t\tos=-haiku\n+\t\t;;\n+\t*-ibm)\n+\t\tos=-aix\n+\t\t;;\n+\t*-knuth)\n+\t\tos=-mmixware\n+\t\t;;\n+\t*-wec)\n+\t\tos=-proelf\n+\t\t;;\n+\t*-winbond)\n+\t\tos=-proelf\n+\t\t;;\n+\t*-oki)\n+\t\tos=-proelf\n+\t\t;;\n+\t*-hp)\n+\t\tos=-hpux\n+\t\t;;\n+\t*-hitachi)\n+\t\tos=-hiux\n+\t\t;;\n+\ti860-* | *-att | *-ncr | *-altos | *-motorola | *-convergent)\n+\t\tos=-sysv\n+\t\t;;\n+\t*-cbm)\n+\t\tos=-amigaos\n+\t\t;;\n+\t*-dg)\n+\t\tos=-dgux\n+\t\t;;\n+\t*-dolphin)\n+\t\tos=-sysv3\n+\t\t;;\n+\tm68k-ccur)\n+\t\tos=-rtu\n+\t\t;;\n+\tm88k-omron*)\n+\t\tos=-luna\n+\t\t;;\n+\t*-next )\n+\t\tos=-nextstep\n+\t\t;;\n+\t*-sequent)\n+\t\tos=-ptx\n+\t\t;;\n+\t*-crds)\n+\t\tos=-unos\n+\t\t;;\n+\t*-ns)\n+\t\tos=-genix\n+\t\t;;\n+\ti370-*)\n+\t\tos=-mvs\n+\t\t;;\n+\t*-next)\n+\t\tos=-nextstep3\n+\t\t;;\n+\t*-gould)\n+\t\tos=-sysv\n+\t\t;;\n+\t*-highlevel)\n+\t\tos=-bsd\n+\t\t;;\n+\t*-encore)\n+\t\tos=-bsd\n+\t\t;;\n+\t*-sgi)\n+\t\tos=-irix\n+\t\t;;\n+\t*-siemens)\n+\t\tos=-sysv4\n+\t\t;;\n+\t*-masscomp)\n+\t\tos=-rtu\n+\t\t;;\n+\tf30[01]-fujitsu | f700-fujitsu)\n+\t\tos=-uxpv\n+\t\t;;\n+\t*-rom68k)\n+\t\tos=-coff\n+\t\t;;\n+\t*-*bug)\n+\t\tos=-coff\n+\t\t;;\n+\t*-apple)\n+\t\tos=-macos\n+\t\t;;\n+\t*-atari*)\n+\t\tos=-mint\n+\t\t;;\n+\t*)\n+\t\tos=-none\n+\t\t;;\n+esac\n+fi\n+\n+# Here we handle the case where we know the os, and the CPU type, but not the\n+# manufacturer.  We pick the logical manufacturer.\n+vendor=unknown\n+case $basic_machine in\n+\t*-unknown)\n+\t\tcase $os in\n+\t\t\t-riscix*)\n+\t\t\t\tvendor=acorn\n+\t\t\t\t;;\n+\t\t\t-sunos*)\n+\t\t\t\tvendor=sun\n+\t\t\t\t;;\n+\t\t\t-cnk*|-aix*)\n+\t\t\t\tvendor=ibm\n+\t\t\t\t;;\n+\t\t\t-beos*)\n+\t\t\t\tvendor=be\n+\t\t\t\t;;\n+\t\t\t-hpux*)\n+\t\t\t\tvendor=hp\n+\t\t\t\t;;\n+\t\t\t-mpeix*)\n+\t\t\t\tvendor=hp\n+\t\t\t\t;;\n+\t\t\t-hiux*)\n+\t\t\t\tvendor=hitachi\n+\t\t\t\t;;\n+\t\t\t-unos*)\n+\t\t\t\tvendor=crds\n+\t\t\t\t;;\n+\t\t\t-dgux*)\n+\t\t\t\tvendor=dg\n+\t\t\t\t;;\n+\t\t\t-luna*)\n+\t\t\t\tvendor=omron\n+\t\t\t\t;;\n+\t\t\t-genix*)\n+\t\t\t\tvendor=ns\n+\t\t\t\t;;\n+\t\t\t-mvs* | -opened*)\n+\t\t\t\tvendor=ibm\n+\t\t\t\t;;\n+\t\t\t-os400*)\n+\t\t\t\tvendor=ibm\n+\t\t\t\t;;\n+\t\t\t-ptx*)\n+\t\t\t\tvendor=sequent\n+\t\t\t\t;;\n+\t\t\t-tpf*)\n+\t\t\t\tvendor=ibm\n+\t\t\t\t;;\n+\t\t\t-vxsim* | -vxworks* | -windiss*)\n+\t\t\t\tvendor=wrs\n+\t\t\t\t;;\n+\t\t\t-aux*)\n+\t\t\t\tvendor=apple\n+\t\t\t\t;;\n+\t\t\t-hms*)\n+\t\t\t\tvendor=hitachi\n+\t\t\t\t;;\n+\t\t\t-mpw* | -macos*)\n+\t\t\t\tvendor=apple\n+\t\t\t\t;;\n+\t\t\t-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)\n+\t\t\t\tvendor=atari\n+\t\t\t\t;;\n+\t\t\t-vos*)\n+\t\t\t\tvendor=stratus\n+\t\t\t\t;;\n+\t\tesac\n+\t\tbasic_machine=`echo $basic_machine | sed \"s/unknown/$vendor/\"`\n+\t\t;;\n+esac\n+\n+echo $basic_machine$os\n+exit\n+\n+# Local variables:\n+# eval: (add-hook 'write-file-hooks 'time-stamp)\n+# time-stamp-start: \"timestamp='\"\n+# time-stamp-format: \"%:y-%02m-%02d\"\n+# time-stamp-end: \"'\"\n+# End:"
      },
      {
        "sha": "74f9ef3f205ec0e12f6ac9e75f03da81dd7d96e7",
        "filename": "depends/description.md",
        "status": "added",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/description.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/description.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/description.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,53 @@\n+This is a system of building and caching dependencies necessary for building Bitcoin. \n+There are several features that make it different from most similar systems:\n+\n+### It is designed to be builder and host agnostic\n+\n+In theory, binaries for any target OS/architecture can be created, from a\n+builder running any OS/architecture. In practice, build-side tools must be\n+specified when the defaults don't fit, and packages must be amended to work\n+on new hosts. For now, a build architecture of x86_64 is assumed, either on\n+Linux or OSX.\n+\n+### No reliance on timestamps\n+\n+File presence is used to determine what needs to be built. This makes the\n+results distributable and easily digestable by automated builders.\n+\n+### Each build only has its specified dependencies available at build-time.\n+\n+For each build, the sysroot is wiped and the (recursive) dependencies are\n+installed. This makes each build deterministic, since there will never be any\n+unknown files available to cause side-effects.\n+\n+### Each package is cached and only rebuilt as needed.\n+\n+Before building, a unique build-id is generated for each package. This id\n+consists of a hash of all files used to build the package (Makefiles, packages,\n+etc), and as well as a hash of the same data for each recursive dependency. If\n+any portion of a package's build recipe changes, it will be rebuilt as well as\n+any other package that depends on it. If any of the main makefiles (Makefile, \n+funcs.mk, etc) are changed, all packages will be rebuilt. After building, the\n+results are cached into a tarball that can be re-used and distributed.\n+\n+### Package build results are (relatively) deterministic.\n+\n+Each package is configured and patched so that it will yield the same\n+build-results with each consequent build, within a reasonable set of\n+constraints. Some things like timestamp insertion are unavoidable, and are\n+beyond the scope of this system. Additionally, the toolchain itself must be\n+capable of deterministic results. When revisions are properly bumped, a cached\n+build should represent an exact single payload.\n+\n+### Sources are fetched and verified automatically\n+\n+Each package must define its source location and checksum. The build will fail\n+if the fetched source does not match. Sources may be pre-seeded and/or cached\n+as desired.\n+\n+### Self-cleaning\n+\n+Build and staging dirs are wiped after use, and any previous version of a\n+cached result is removed following a successful build. Automated builders\n+should be able to build each revision and store the results with no further\n+intervention."
      },
      {
        "sha": "050a9b132137e5aa0a24ff3448abadbe0733dc62",
        "filename": "depends/funcs.mk",
        "status": "added",
        "additions": 241,
        "deletions": 0,
        "changes": 241,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/funcs.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/funcs.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/funcs.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,241 @@\n+define int_vars\n+#Set defaults for vars which may be overridden per-package\n+$(1)_cc=$($($(1)_type)_CC)\n+$(1)_cxx=$($($(1)_type)_CXX)\n+$(1)_objc=$($($(1)_type)_OBJC)\n+$(1)_objcxx=$($($(1)_type)_OBJCXX)\n+$(1)_ar=$($($(1)_type)_AR)\n+$(1)_ranlib=$($($(1)_type)_RANLIB)\n+$(1)_libtool=$($($(1)_type)_LIBTOOL)\n+$(1)_nm=$($($(1)_type)_NM)\n+$(1)_cflags=$($($(1)_type)_CFLAGS) $($($(1)_type)_$(release_type)_CFLAGS)\n+$(1)_cxxflags=$($($(1)_type)_CXXFLAGS) $($($(1)_type)_$(release_type)_CXXFLAGS)\n+$(1)_ldflags=$($($(1)_type)_LDFLAGS) $($($(1)_type)_$(release_type)_LDFLAGS) -L$($($(1)_type)_prefix)/lib\n+$(1)_cppflags=$($($(1)_type)_CPPFLAGS) $($($(1)_type)_$(release_type)_CPPFLAGS) -I$($($(1)_type)_prefix)/include\n+$(1)_recipe_hash:=\n+endef\n+\n+define int_get_all_dependencies\n+$(sort $(foreach dep,$(2),$(2) $(call int_get_all_dependencies,$(1),$($(dep)_dependencies))))\n+endef\n+\n+define fetch_file\n+(test -f $$($(1)_source_dir)/$(4) || \\\n+  ( mkdir -p $$($(1)_download_dir) && echo Fetching $(1)... && \\\n+  ( $(build_DOWNLOAD) \"$$($(1)_download_dir)/$(4).temp\" \"$(2)/$(3)\" || \\\n+    $(build_DOWNLOAD) \"$$($(1)_download_dir)/$(4).temp\" \"$(FALLBACK_DOWNLOAD_PATH)/$(3)\" ) && \\\n+    echo \"$(5)  $$($(1)_download_dir)/$(4).temp\" > $$($(1)_download_dir)/.$(4).hash && \\\n+    $(build_SHA256SUM) -c $$($(1)_download_dir)/.$(4).hash && \\\n+    mv $$($(1)_download_dir)/$(4).temp $$($(1)_source_dir)/$(4) && \\\n+    rm -rf $$($(1)_download_dir) ))\n+endef\n+\n+define int_get_build_recipe_hash\n+$(eval $(1)_all_file_checksums:=$(shell $(build_SHA256SUM) $(meta_depends) packages/$(1).mk $(addprefix $(PATCHES_PATH)/$(1)/,$($(1)_patches)) | cut -d\" \" -f1))\n+$(eval $(1)_recipe_hash:=$(shell echo -n \"$($(1)_all_file_checksums)\" | $(build_SHA256SUM) | cut -d\" \" -f1))\n+endef\n+\n+define int_get_build_id\n+$(eval $(1)_dependencies += $($(1)_$(host_arch)_$(host_os)_dependencies) $($(1)_$(host_os)_dependencies))\n+$(eval $(1)_all_dependencies:=$(call int_get_all_dependencies,$(1),$($($(1)_type)_native_toolchain) $($(1)_dependencies)))\n+$(foreach dep,$($(1)_all_dependencies),$(eval $(1)_build_id_deps+=$(dep)-$($(dep)_version)-$($(dep)_recipe_hash)))\n+$(eval $(1)_build_id_long:=$(1)-$($(1)_version)-$($(1)_recipe_hash)-$(release_type) $($(1)_build_id_deps))\n+$(eval $(1)_build_id:=$(shell echo -n \"$($(1)_build_id_long)\" | $(build_SHA256SUM) | cut -c-$(HASH_LENGTH)))\n+final_build_id_long+=$($(package)_build_id_long)\n+\n+#compute package-specific paths\n+$(1)_build_subdir?=.\n+$(1)_download_file?=$($(1)_file_name)\n+$(1)_source_dir:=$(SOURCES_PATH)\n+$(1)_source:=$$($(1)_source_dir)/$($(1)_file_name)\n+$(1)_staging_dir=$(base_staging_dir)/$(host)/$(1)/$($(1)_version)-$($(1)_build_id)\n+$(1)_staging_prefix_dir:=$$($(1)_staging_dir)$($($(1)_type)_prefix)\n+$(1)_extract_dir:=$(base_build_dir)/$(host)/$(1)/$($(1)_version)-$($(1)_build_id)\n+$(1)_download_dir:=$(base_download_dir)/$(1)-$($(1)_version)\n+$(1)_build_dir:=$$($(1)_extract_dir)/$$($(1)_build_subdir)\n+$(1)_cached_checksum:=$(BASE_CACHE)/$(host)/$(1)/$(1)-$($(1)_version)-$($(1)_build_id).tar.gz.hash\n+$(1)_patch_dir:=$(base_build_dir)/$(host)/$(1)/$($(1)_version)-$($(1)_build_id)/.patches-$($(1)_build_id)\n+$(1)_prefixbin:=$($($(1)_type)_prefix)/bin/\n+$(1)_cached:=$(BASE_CACHE)/$(host)/$(1)/$(1)-$($(1)_version)-$($(1)_build_id).tar.gz\n+$(1)_all_sources=$($(1)_file_name) $($(1)_extra_sources)\n+\n+#stamps\n+$(1)_fetched=$(SOURCES_PATH)/download-stamps/.stamp_fetched-$(1)-$($(1)_file_name).hash\n+$(1)_extracted=$$($(1)_extract_dir)/.stamp_extracted\n+$(1)_preprocessed=$$($(1)_extract_dir)/.stamp_preprocessed\n+$(1)_cleaned=$$($(1)_extract_dir)/.stamp_cleaned\n+$(1)_built=$$($(1)_build_dir)/.stamp_built\n+$(1)_configured=$$($(1)_build_dir)/.stamp_configured\n+$(1)_staged=$$($(1)_staging_dir)/.stamp_staged\n+$(1)_postprocessed=$$($(1)_staging_prefix_dir)/.stamp_postprocessed\n+$(1)_download_path_fixed=$(subst :,\\:,$$($(1)_download_path))\n+\n+\n+#default commands\n+$(1)_fetch_cmds ?= $(call fetch_file,$(1),$(subst \\:,:,$$($(1)_download_path_fixed)),$$($(1)_download_file),$($(1)_file_name),$($(1)_sha256_hash))\n+$(1)_extract_cmds ?= mkdir -p $$($(1)_extract_dir) && echo \"$$($(1)_sha256_hash)  $$($(1)_source)\" > $$($(1)_extract_dir)/.$$($(1)_file_name).hash &&  $(build_SHA256SUM) -c $$($(1)_extract_dir)/.$$($(1)_file_name).hash && tar --strip-components=1 -xf $$($(1)_source)\n+$(1)_preprocess_cmds ?=\n+$(1)_build_cmds ?=\n+$(1)_config_cmds ?=\n+$(1)_stage_cmds ?=\n+$(1)_set_vars ?=\n+\n+\n+all_sources+=$$($(1)_fetched)\n+endef\n+#$(foreach dep_target,$($(1)_all_dependencies),$(eval $(1)_dependency_targets=$($(dep_target)_cached)))\n+\n+\n+define int_config_attach_build_config\n+$(eval $(call $(1)_set_vars,$(1)))\n+$(1)_cflags+=$($(1)_cflags_$(release_type))\n+$(1)_cflags+=$($(1)_cflags_$(host_arch)) $($(1)_cflags_$(host_arch)_$(release_type))\n+$(1)_cflags+=$($(1)_cflags_$(host_os)) $($(1)_cflags_$(host_os)_$(release_type))\n+$(1)_cflags+=$($(1)_cflags_$(host_arch)_$(host_os)) $($(1)_cflags_$(host_arch)_$(host_os)_$(release_type))\n+\n+$(1)_cxxflags+=$($(1)_cxxflags_$(release_type))\n+$(1)_cxxflags+=$($(1)_cxxflags_$(host_arch)) $($(1)_cxxflags_$(host_arch)_$(release_type))\n+$(1)_cxxflags+=$($(1)_cxxflags_$(host_os)) $($(1)_cxxflags_$(host_os)_$(release_type))\n+$(1)_cxxflags+=$($(1)_cxxflags_$(host_arch)_$(host_os)) $($(1)_cxxflags_$(host_arch)_$(host_os)_$(release_type))\n+\n+$(1)_cppflags+=$($(1)_cppflags_$(release_type))\n+$(1)_cppflags+=$($(1)_cppflags_$(host_arch)) $($(1)_cppflags_$(host_arch)_$(release_type))\n+$(1)_cppflags+=$($(1)_cppflags_$(host_os)) $($(1)_cppflags_$(host_os)_$(release_type))\n+$(1)_cppflags+=$($(1)_cppflags_$(host_arch)_$(host_os)) $($(1)_cppflags_$(host_arch)_$(host_os)_$(release_type))\n+\n+$(1)_ldflags+=$($(1)_ldflags_$(release_type))\n+$(1)_ldflags+=$($(1)_ldflags_$(host_arch)) $($(1)_ldflags_$(host_arch)_$(release_type))\n+$(1)_ldflags+=$($(1)_ldflags_$(host_os)) $($(1)_ldflags_$(host_os)_$(release_type))\n+$(1)_ldflags+=$($(1)_ldflags_$(host_arch)_$(host_os)) $($(1)_ldflags_$(host_arch)_$(host_os)_$(release_type))\n+\n+$(1)_build_opts+=$$($(1)_build_opts_$(release_type))\n+$(1)_build_opts+=$$($(1)_build_opts_$(host_arch)) $$($(1)_build_opts_$(host_arch)_$(release_type))\n+$(1)_build_opts+=$$($(1)_build_opts_$(host_os)) $$($(1)_build_opts_$(host_os)_$(release_type))\n+$(1)_build_opts+=$$($(1)_build_opts_$(host_arch)_$(host_os)) $$($(1)_build_opts_$(host_arch)_$(host_os)_$(release_type))\n+\n+$(1)_config_opts+=$$($(1)_config_opts_$(release_type))\n+$(1)_config_opts+=$$($(1)_config_opts_$(host_arch)) $$($(1)_config_opts_$(host_arch)_$(release_type))\n+$(1)_config_opts+=$$($(1)_config_opts_$(host_os)) $$($(1)_config_opts_$(host_os)_$(release_type))\n+$(1)_config_opts+=$$($(1)_config_opts_$(host_arch)_$(host_os)) $$($(1)_config_opts_$(host_arch)_$(host_os)_$(release_type))\n+\n+$(1)_config_env+=$$($(1)_config_env_$(release_type))\n+$(1)_config_env+=$($(1)_config_env_$(host_arch)) $($(1)_config_env_$(host_arch)_$(release_type))\n+$(1)_config_env+=$($(1)_config_env_$(host_os)) $($(1)_config_env_$(host_os)_$(release_type))\n+$(1)_config_env+=$($(1)_config_env_$(host_arch)_$(host_os)) $($(1)_config_env_$(host_arch)_$(host_os)_$(release_type))\n+\n+$(1)_config_env+=PKG_CONFIG_LIBDIR=$($($(1)_type)_prefix)/lib/pkgconfig\n+$(1)_config_env+=PKG_CONFIG_PATH=$($($(1)_type)_prefix)/share/pkgconfig\n+$(1)_config_env+=PATH=$(build_prefix)/bin:$(PATH)\n+$(1)_build_env+=PATH=$(build_prefix)/bin:$(PATH)\n+$(1)_stage_env+=PATH=$(build_prefix)/bin:$(PATH)\n+$(1)_autoconf=./configure --host=$($($(1)_type)_host) --disable-dependency-tracking --prefix=$($($(1)_type)_prefix) $$($(1)_config_opts) CC=\"$$($(1)_cc)\" CXX=\"$$($(1)_cxx)\"\n+\n+ifneq ($($(1)_nm),)\n+$(1)_autoconf += NM=\"$$($(1)_nm)\"\n+endif\n+ifneq ($($(1)_ranlib),)\n+$(1)_autoconf += RANLIB=\"$$($(1)_ranlib)\"\n+endif\n+ifneq ($($(1)_ar),)\n+$(1)_autoconf += AR=\"$$($(1)_ar)\"\n+endif\n+ifneq ($($(1)_cflags),)\n+$(1)_autoconf += CFLAGS=\"$$($(1)_cflags)\"\n+endif\n+ifneq ($($(1)_cxxflags),)\n+$(1)_autoconf += CXXFLAGS=\"$$($(1)_cxxflags)\"\n+endif\n+ifneq ($($(1)_cppflags),)\n+$(1)_autoconf += CPPFLAGS=\"$$($(1)_cppflags)\"\n+endif\n+ifneq ($($(1)_ldflags),)\n+$(1)_autoconf += LDFLAGS=\"$$($(1)_ldflags)\"\n+endif\n+endef\n+\n+define int_add_cmds\n+$($(1)_fetched):\n+\t$(AT)mkdir -p $$(@D) $(SOURCES_PATH)\n+\t$(AT)rm -f $$@\n+\t$(AT)touch $$@\n+\t$(AT)cd $$(@D); $(call $(1)_fetch_cmds,$(1))\n+\t$(AT)cd $($(1)_source_dir); $(foreach source,$($(1)_all_sources),$(build_SHA256SUM) $(source) >> $$(@);)\n+\t$(AT)touch $$@\n+$($(1)_extracted): | $($(1)_fetched)\n+\t$(AT)echo Extracting $(1)...\n+\t$(AT)mkdir -p $$(@D)\n+\t$(AT)cd $$(@D); $(call $(1)_extract_cmds,$(1))\n+\t$(AT)touch $$@\n+$($(1)_preprocessed): | $($(1)_dependencies) $($(1)_extracted)\n+\t$(AT)echo Preprocessing $(1)...\n+\t$(AT)mkdir -p $$(@D) $($(1)_patch_dir)\n+\t$(AT)$(foreach patch,$($(1)_patches),cd $(PATCHES_PATH)/$(1); cp $(patch) $($(1)_patch_dir) ;)\n+\t$(AT)cd $$(@D); $(call $(1)_preprocess_cmds, $(1))\n+\t$(AT)touch $$@\n+$($(1)_configured): | $($(1)_preprocessed)\n+\t$(AT)echo Configuring $(1)...\n+\t$(AT)rm -rf $(host_prefix); mkdir -p $(host_prefix)/lib; cd $(host_prefix); $(foreach package,$($(1)_all_dependencies), tar xf $($(package)_cached); )\n+\t$(AT)mkdir -p $$(@D)\n+\t$(AT)+cd $$(@D); $($(1)_config_env) $(call $(1)_config_cmds, $(1))\n+\t$(AT)touch $$@\n+$($(1)_built): | $($(1)_configured)\n+\t$(AT)echo Building $(1)...\n+\t$(AT)mkdir -p $$(@D)\n+\t$(AT)+cd $$(@D); $($(1)_build_env) $(call $(1)_build_cmds, $(1))\n+\t$(AT)touch $$@\n+$($(1)_staged): | $($(1)_built)\n+\t$(AT)echo Staging $(1)...\n+\t$(AT)mkdir -p $($(1)_staging_dir)/$(host_prefix)\n+\t$(AT)cd $($(1)_build_dir); $($(1)_stage_env) $(call $(1)_stage_cmds, $(1))\n+\t$(AT)rm -rf $($(1)_extract_dir)\n+\t$(AT)touch $$@\n+$($(1)_postprocessed): | $($(1)_staged)\n+\t$(AT)echo Postprocessing $(1)...\n+\t$(AT)cd $($(1)_staging_prefix_dir); $(call $(1)_postprocess_cmds)\n+\t$(AT)touch $$@\n+$($(1)_cached): | $($(1)_dependencies) $($(1)_postprocessed)\n+\t$(AT)echo Caching $(1)...\n+\t$(AT)cd $$($(1)_staging_dir)/$(host_prefix); find . | sort | tar --no-recursion -czf $$($(1)_staging_dir)/$$(@F) -T -\n+\t$(AT)mkdir -p $$(@D)\n+\t$(AT)rm -rf $$(@D) && mkdir -p $$(@D)\n+\t$(AT)mv $$($(1)_staging_dir)/$$(@F) $$(@)\n+\t$(AT)rm -rf $($(1)_staging_dir)\n+$($(1)_cached_checksum): $($(1)_cached)\n+\t$(AT)cd $$(@D); $(build_SHA256SUM) $$(<F) > $$(@)\n+\n+.PHONY: $(1)\n+$(1): | $($(1)_cached_checksum)\n+.SECONDARY: $($(1)_cached) $($(1)_postprocessed) $($(1)_staged) $($(1)_built) $($(1)_configured) $($(1)_preprocessed) $($(1)_extracted) $($(1)_fetched)\n+\n+endef\n+\n+# These functions create the build targets for each package. They must be\n+# broken down into small steps so that each part is done for all packages\n+# before moving on to the next step. Otherwise, a package's info\n+# (build-id for example) would only be available to another package if it\n+# happened to be computed already.\n+\n+#set the type for host/build packages.\n+$(foreach native_package,$(native_packages),$(eval $(native_package)_type=build))\n+$(foreach package,$(packages),$(eval $(package)_type=$(host_arch)_$(host_os)))\n+\n+#set overridable defaults\n+$(foreach package,$(all_packages),$(eval $(call int_vars,$(package))))\n+\n+#include package files\n+$(foreach package,$(all_packages),$(eval include packages/$(package).mk))\n+\n+#compute a hash of all files that comprise this package's build recipe\n+$(foreach package,$(all_packages),$(eval $(call int_get_build_recipe_hash,$(package))))\n+\n+#generate a unique id for this package, incorporating its dependencies as well\n+$(foreach package,$(all_packages),$(eval $(call int_get_build_id,$(package))))\n+\n+#compute final vars after reading package vars\n+$(foreach package,$(all_packages),$(eval $(call int_config_attach_build_config,$(package))))\n+\n+#create build targets\n+$(foreach package,$(all_packages),$(eval $(call int_add_cmds,$(package))))\n+\n+#special exception: if a toolchain package exists, all non-native packages depend on it\n+$(foreach package,$(packages),$(eval $($(package)_unpacked): |$($($(host_arch)_$(host_os)_native_toolchain)_cached) ))"
      },
      {
        "sha": "2958dc50cc8dc2995bfe81a3ab67050a63488001",
        "filename": "depends/hosts/darwin.mk",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/hosts/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/hosts/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/darwin.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,17 @@\n+OSX_MIN_VERSION=10.7\n+OSX_SDK_VERSION=10.9\n+OSX_SDK=$(SDK_PATH)/MacOSX$(OSX_SDK_VERSION).sdk\n+LD64_VERSION=241.9\n+darwin_CC=clang -target $(host) -mmacosx-version-min=$(OSX_MIN_VERSION) --sysroot $(OSX_SDK) -mlinker-version=$(LD64_VERSION)\n+darwin_CXX=clang++ -target $(host) -mmacosx-version-min=$(OSX_MIN_VERSION) --sysroot $(OSX_SDK) -mlinker-version=$(LD64_VERSION)\n+\n+darwin_CFLAGS=-pipe\n+darwin_CXXFLAGS=$(darwin_CFLAGS)\n+\n+darwin_release_CFLAGS=-O2\n+darwin_release_CXXFLAGS=$(darwin_release_CFLAGS)\n+\n+darwin_debug_CFLAGS=-O1\n+darwin_debug_CXXFLAGS=$(darwin_debug_CFLAGS)\n+\n+darwin_native_toolchain=native_cctools"
      },
      {
        "sha": "6f60d6b3fd004e9317db4717bf7dcb68b9dd43eb",
        "filename": "depends/hosts/default.mk",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/hosts/default.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/hosts/default.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/default.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,26 @@\n+default_host_CC = $(host_toolchain)gcc\n+default_host_CXX = $(host_toolchain)g++\n+default_host_AR = $(host_toolchain)ar\n+default_host_RANLIB = $(host_toolchain)ranlib\n+default_host_STRIP = $(host_toolchain)strip\n+default_host_LIBTOOL = $(host_toolchain)libtool\n+default_host_INSTALL_NAME_TOOL = $(host_toolchain)install_name_tool\n+default_host_OTOOL = $(host_toolchain)otool\n+default_host_NM = $(host_toolchain)nm\n+\n+define add_host_tool_func\n+$(host_os)_$1?=$$(default_host_$1)\n+$(host_arch)_$(host_os)_$1?=$$($(host_os)_$1)\n+$(host_arch)_$(host_os)_$(release_type)_$1?=$$($(host_os)_$1)\n+host_$1=$$($(host_arch)_$(host_os)_$1)\n+endef\n+\n+define add_host_flags_func\n+$(host_arch)_$(host_os)_$1 += $($(host_os)_$1)\n+$(host_arch)_$(host_os)_$(release_type)_$1 += $($(host_os)_$(release_type)_$1)\n+host_$1 = $$($(host_arch)_$(host_os)_$1)\n+host_$(release_type)_$1 = $$($(host_arch)_$(host_os)_$(release_type)_$1)\n+endef\n+\n+$(foreach tool,CC CXX AR RANLIB STRIP NM LIBTOOL OTOOL INSTALL_NAME_TOOL,$(eval $(call add_host_tool_func,$(tool))))\n+$(foreach flags,CFLAGS CXXFLAGS CPPFLAGS LDFLAGS, $(eval $(call add_host_flags_func,$(flags))))"
      },
      {
        "sha": "b13a0f1ad714ae19ec7fc4b68d162095b9c62255",
        "filename": "depends/hosts/linux.mk",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/hosts/linux.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/hosts/linux.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/linux.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,31 @@\n+linux_CFLAGS=-pipe\n+linux_CXXFLAGS=$(linux_CFLAGS)\n+\n+linux_release_CFLAGS=-O2\n+linux_release_CXXFLAGS=$(linux_release_CFLAGS)\n+\n+linux_debug_CFLAGS=-O1\n+linux_debug_CXXFLAGS=$(linux_debug_CFLAGS)\n+\n+linux_debug_CPPFLAGS=-D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC\n+\n+ifeq (86,$(findstring 86,$(build_arch)))\n+i686_linux_CC=gcc -m32\n+i686_linux_CXX=g++ -m32\n+i686_linux_AR=ar\n+i686_linux_RANLIB=ranlib\n+i686_linux_NM=nm\n+i686_linux_STRIP=strip\n+\n+x86_64_linux_CC=gcc -m64\n+x86_64_linux_CXX=g++ -m64\n+x86_64_linux_AR=ar\n+x86_64_linux_RANLIB=ranlib\n+x86_64_linux_NM=nm\n+x86_64_linux_STRIP=strip\n+else\n+i686_linux_CC=$(default_host_CC) -m32\n+i686_linux_CXX=$(default_host_CXX) -m32\n+x86_64_linux_CC=$(default_host_CC) -m64\n+x86_64_linux_CXX=$(default_host_CXX) -m64\n+endif"
      },
      {
        "sha": "dbfb62fdcf98695d515e56897ee488703e002054",
        "filename": "depends/hosts/mingw32.mk",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/hosts/mingw32.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/hosts/mingw32.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/mingw32.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,10 @@\n+mingw32_CFLAGS=-pipe\n+mingw32_CXXFLAGS=$(mingw32_CFLAGS)\n+\n+mingw32_release_CFLAGS=-O2\n+mingw32_release_CXXFLAGS=$(mingw32_release_CFLAGS)\n+\n+mingw32_debug_CFLAGS=-O1\n+mingw32_debug_CXXFLAGS=$(mingw32_debug_CFLAGS)\n+\n+mingw32_debug_CPPFLAGS=-D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC"
      },
      {
        "sha": "7c80362509e989e975e499e0242009e7e098ddf4",
        "filename": "depends/packages.md",
        "status": "added",
        "additions": 147,
        "deletions": 0,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,147 @@\n+Each recipe consists of 3 main parts: defining identifiers, setting build\n+variables, and defining build commands.\n+\n+The package \"mylib\" will be used here as an example\n+\n+General tips:\n+- mylib_foo is written as $(package)_foo in order to make recipes more similar.\n+\n+## Identifiers\n+Each package is required to define at least these variables:\n+\n+    $(package)_version:\n+    Version of the upstream library or program. If there is no version, a\n+    placeholder such as 1.0 can be used.\n+\n+    $(package)_download_path:\n+    Location of the upstream source, without the file-name. Usually http or\n+    ftp.\n+\n+    $(package)_file_name:\n+    The upstream source filename available at the download path.\n+\n+    $(package)_sha256_hash:\n+    The sha256 hash of the upstream file\n+\n+These variables are optional:\n+\n+    $(package)_build_subdir:\n+    cd to this dir before running configure/build/stage commands.\n+    \n+    $(package)_download_file:\n+    The file-name of the upstream source if it differs from how it should be\n+    stored locally. This can be used to avoid storing file-names with strange\n+    characters.\n+    \n+    $(package)_dependencies:\n+    Names of any other packages that this one depends on.\n+    \n+    $(package)_patches:\n+    Filenames of any patches needed to build the package\n+\n+    $(package)_extra_sources:\n+    Any extra files that will be fetched via $(package)_fetch_cmds. These are\n+    specified so that they can be fetched and verified via 'make download'.\n+\n+\n+## Build Variables:\n+After defining the main identifiers, build variables may be added or customized\n+before running the build commands. They should be added to a function called\n+$(package)_set_vars. For example:\n+\n+    define $(package)_set_vars\n+    ...\n+    endef\n+\n+Most variables can be prefixed with the host, architecture, or both, to make\n+the modifications specific to that case. For example:\n+\n+    Universal:     $(package)_cc=gcc\n+    Linux only:    $(package)_linux_cc=gcc\n+    x86_64 only:       $(package)_x86_64_cc = gcc\n+    x86_64 linux only: $(package)_x86_64_linux_cc = gcc\n+\n+These variables may be set to override or append their default values.\n+\n+    $(package)_cc\n+    $(package)_cxx\n+    $(package)_objc\n+    $(package)_objcxx\n+    $(package)_ar\n+    $(package)_ranlib\n+    $(package)_libtool\n+    $(package)_nm\n+    $(package)_cflags\n+    $(package)_cxxflags\n+    $(package)_ldflags\n+    $(package)_cppflags\n+    $(package)_config_env\n+    $(package)_build_env\n+    $(package)_stage_env\n+    $(package)_build_opts\n+    $(package)_config_opts\n+\n+The *_env variables are used to add environment variables to the respective\n+commands.\n+\n+Many variables respect a debug/release suffix as well, in order to use them for\n+only the appropriate build config. For example:\n+\n+    $(package)_cflags_release = -O3\n+    $(package)_cflags_i686_debug = -g\n+    $(package)_config_opts_release = --disable-debug\n+\n+These will be used in addition to the options that do not specify\n+debug/release. All builds are considered to be release unless DEBUG=1 is set by\n+the user. Other variables may be defined as needed.\n+\n+## Build commands:\n+\n+  For each build, a unique build dir and staging dir are created. For example,\n+  `work/build/mylib/1.0-1adac830f6e` and `work/staging/mylib/1.0-1adac830f6e`.\n+\n+  The following build commands are available for each recipe:\n+\n+    $(package)_fetch_cmds:\n+    Runs from: build dir\n+    Fetch the source file. If undefined, it will be fetched and verified\n+    against its hash.\n+\n+    $(package)_extract_cmds:\n+    Runs from: build dir\n+    Verify the source file against its hash and extract it. If undefined, the\n+    source is assumed to be a tarball.\n+\n+    $(package)_preprocess_cmds:\n+    Runs from: build dir/$(package)_build_subdir\n+    Preprocess the source as necessary. If undefined, does nothing.\n+\n+    $(package)_config_cmds:\n+    Runs from: build dir/$(package)_build_subdir\n+    Configure the source. If undefined, does nothing.\n+\n+    $(package)_build_cmds:\n+    Runs from: build dir/$(package)_build_subdir\n+    Build the source. If undefined, does nothing.\n+\n+    $(package)_stage_cmds:\n+    Runs from: build dir/$(package)_build_subdir\n+    Stage the build results. If undefined, does nothing.\n+\n+  The following variables are available for each recipe:\n+    \n+    $(1)_staging_dir: package's destination sysroot path\n+    $(1)_staging_prefix_dir: prefix path inside of the package's staging dir\n+    $(1)_extract_dir: path to the package's extracted sources\n+    $(1)_build_dir: path where configure/build/stage commands will be run\n+    $(1)_patch_dir: path where the package's patches (if any) are found\n+\n+Notes on build commands:\n+\n+For packages built with autotools, $($(package)_autoconf) can be used in the\n+configure step to (usually) correctly configure automatically. Any\n+$($(package)_config_opts) will be appended.\n+\n+Most autotools projects can be properly staged using:\n+\n+    $(MAKE) DESTDIR=$($(package)_staging_dir) install"
      },
      {
        "sha": "68841afdb84c7fe05834c60062ae393fc0962d9a",
        "filename": "depends/packages/bdb.mk",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/bdb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/bdb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/bdb.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,28 @@\n+package=bdb\n+$(package)_version=4.8.30\n+$(package)_download_path=http://download.oracle.com/berkeley-db\n+$(package)_file_name=db-$($(package)_version).NC.tar.gz\n+$(package)_sha256_hash=12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef\n+$(package)_build_subdir=build_unix\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--disable-shared --enable-cxx --disable-replication\n+$(package)_config_opts_mingw32=--enable-mingw\n+$(package)_config_opts_linux=--with-pic\n+endef\n+\n+define $(package)_preprocess_cmds\n+  sed -i.old 's/__atomic_compare_exchange/__atomic_compare_exchange_db/' dbinc/atomic.h\n+endef\n+\n+define $(package)_config_cmds\n+  ../dist/$($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) libdb_cxx-4.8.a libdb-4.8.a\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install_lib install_include\n+endef"
      },
      {
        "sha": "215c694b6b82b498abe773f8c19b34835978909e",
        "filename": "depends/packages/boost.mk",
        "status": "added",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/boost.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/boost.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/boost.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,41 @@\n+package=boost\n+$(package)_version=1_59_0\n+$(package)_download_path=http://sourceforge.net/projects/boost/files/boost/1.59.0\n+$(package)_file_name=$(package)_$($(package)_version).tar.bz2\n+$(package)_sha256_hash=727a932322d94287b62abb1bd2d41723eec4356a7728909e38adb65ca25241ca\n+\n+define $(package)_set_vars\n+$(package)_config_opts_release=variant=release\n+$(package)_config_opts_debug=variant=debug\n+$(package)_config_opts=--layout=tagged --build-type=complete --user-config=user-config.jam\n+$(package)_config_opts+=threading=multi link=static -sNO_BZIP2=1 -sNO_ZLIB=1\n+$(package)_config_opts_linux=threadapi=pthread runtime-link=shared\n+$(package)_config_opts_darwin=--toolset=darwin-4.2.1 runtime-link=shared\n+$(package)_config_opts_mingw32=binary-format=pe target-os=windows threadapi=win32 runtime-link=static\n+$(package)_config_opts_x86_64_mingw32=address-model=64\n+$(package)_config_opts_i686_mingw32=address-model=32\n+$(package)_config_opts_i686_linux=address-model=32 architecture=x86\n+$(package)_toolset_$(host_os)=gcc\n+$(package)_archiver_$(host_os)=$($(package)_ar)\n+$(package)_toolset_darwin=darwin\n+$(package)_archiver_darwin=$($(package)_libtool)\n+$(package)_config_libraries=chrono,filesystem,program_options,system,thread,test\n+$(package)_cxxflags=-fvisibility=hidden\n+$(package)_cxxflags_linux=-fPIC\n+endef\n+\n+define $(package)_preprocess_cmds\n+  echo \"using $(boost_toolset_$(host_os)) : : $($(package)_cxx) : <cxxflags>\\\"$($(package)_cxxflags) $($(package)_cppflags)\\\" <linkflags>\\\"$($(package)_ldflags)\\\" <archiver>\\\"$(boost_archiver_$(host_os))\\\" <striper>\\\"$(host_STRIP)\\\"  <ranlib>\\\"$(host_RANLIB)\\\" <rc>\\\"$(host_WINDRES)\\\" : ;\" > user-config.jam\n+endef\n+\n+define $(package)_config_cmds\n+  ./bootstrap.sh --without-icu --with-libraries=$(boost_config_libraries)\n+endef\n+\n+define $(package)_build_cmds\n+  ./b2 -d2 -j2 -d1 --prefix=$($(package)_staging_prefix_dir) $($(package)_config_opts) stage\n+endef\n+\n+define $(package)_stage_cmds\n+  ./b2 -d0 -j4 --prefix=$($(package)_staging_prefix_dir) $($(package)_config_opts) install\n+endef"
      },
      {
        "sha": "8ac9ab742bfe48ca5b57f7dde876fc817a268c65",
        "filename": "depends/packages/dbus.mk",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/dbus.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/dbus.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/dbus.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,23 @@\n+package=dbus\n+$(package)_version=1.8.6\n+$(package)_download_path=http://dbus.freedesktop.org/releases/dbus\n+$(package)_file_name=$(package)-$($(package)_version).tar.gz\n+$(package)_sha256_hash=eded83ca007b719f32761e60fd8b9ffd0f5796a4caf455b01b5a5ef740ebd23f\n+$(package)_dependencies=expat\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--disable-tests --disable-doxygen-docs --disable-xml-docs --disable-static --without-x\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) -C dbus libdbus-1.la\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) -C dbus DESTDIR=$($(package)_staging_dir) install-libLTLIBRARIES install-dbusincludeHEADERS install-nodist_dbusarchincludeHEADERS && \\\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install-pkgconfigDATA\n+endef"
      },
      {
        "sha": "1ac443537420bf29838496a17c2078b5a6ed70d0",
        "filename": "depends/packages/expat.mk",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/expat.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/expat.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/expat.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,21 @@\n+package=expat\n+$(package)_version=2.1.0\n+$(package)_download_path=http://sourceforge.net/projects/expat/files/expat/$($(package)_version)\n+$(package)_file_name=$(package)-$($(package)_version).tar.gz\n+$(package)_sha256_hash=823705472f816df21c8f6aa026dd162b280806838bb55b3432b0fb1fcca7eb86\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--disable-static\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "2cf553ed9657b4e9ec88bfcd7cf437c36200f57a",
        "filename": "depends/packages/fontconfig.mk",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/fontconfig.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/fontconfig.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/fontconfig.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,22 @@\n+package=fontconfig\n+$(package)_version=2.11.1\n+$(package)_download_path=http://www.freedesktop.org/software/fontconfig/release/\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=dc62447533bca844463a3c3fd4083b57c90f18a70506e7a9f4936b5a1e516a99\n+$(package)_dependencies=freetype expat\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--disable-docs --disable-static\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "f7d6e0f9fc58d63769369003483908f18cdca866",
        "filename": "depends/packages/freetype.mk",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/freetype.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/freetype.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/freetype.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,22 @@\n+package=freetype\n+$(package)_version=2.5.3\n+$(package)_download_path=http://downloads.sourceforge.net/$(package)\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=c0848b29d52ef3ca27ad92e08351f023c5e24ce8cea7d8fe69fc96358e65f75e\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--without-zlib --without-png --disable-static\n+  $(package)_config_opts_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "fc60323b1c918a8229f8ba4b04d63310b4d98ec5",
        "filename": "depends/packages/libICE.mk",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/libICE.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/libICE.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libICE.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,23 @@\n+package=libICE\n+$(package)_version=1.0.9\n+$(package)_download_path=http://xorg.freedesktop.org/releases/individual/lib/\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=8f7032f2c1c64352b5423f6b48a8ebdc339cc63064af34d66a6c9aa79759e202\n+$(package)_dependencies=xtrans xproto\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--disable-static --disable-docs --disable-specs --without-xsltproc\n+  $(package)_config_opts_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "0f9307ca76acb8edb8dc892cefc046627f111654",
        "filename": "depends/packages/libSM.mk",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/libSM.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/libSM.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libSM.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,23 @@\n+package=libSM\n+$(package)_version=1.2.2\n+$(package)_download_path=http://xorg.freedesktop.org/releases/individual/lib/\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=0baca8c9f5d934450a70896c4ad38d06475521255ca63b717a6510fdb6e287bd\n+$(package)_dependencies=xtrans xproto libICE\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--without-libuuid  --without-xsltproc  --disable-docs --disable-static\n+  $(package)_config_opts_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "178d592ee63ff9d0f74de6029b4c7becdc850367",
        "filename": "depends/packages/libX11.mk",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/libX11.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/libX11.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libX11.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,23 @@\n+package=libX11\n+$(package)_version=1.6.2\n+$(package)_download_path=http://xorg.freedesktop.org/releases/individual/lib/\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=2aa027e837231d2eeea90f3a4afe19948a6eb4c8b2bec0241eba7dbc8106bd16\n+$(package)_dependencies=libxcb xtrans xextproto xproto\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--disable-xkb --disable-static\n+$(package)_config_opts_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "e87df2e4de6760ace30d169b24c83ee0b7cfc7dd",
        "filename": "depends/packages/libXau.mk",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/libXau.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/libXau.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libXau.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,23 @@\n+package=libXau\n+$(package)_version=1.0.8\n+$(package)_download_path=http://xorg.freedesktop.org/releases/individual/lib/\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=fdd477320aeb5cdd67272838722d6b7d544887dfe7de46e1e7cc0c27c2bea4f2\n+$(package)_dependencies=xproto\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--disable-shared\n+  $(package)_config_opts_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "4db836066f96e37cf7834fcf10de4da331b1fbe1",
        "filename": "depends/packages/libXext.mk",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/libXext.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/libXext.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libXext.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,22 @@\n+package=libXext\n+$(package)_version=1.3.2\n+$(package)_download_path=http://xorg.freedesktop.org/releases/individual/lib/\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=f829075bc646cdc085fa25d98d5885d83b1759ceb355933127c257e8e50432e0\n+$(package)_dependencies=xproto xextproto libX11 libXau\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--disable-static\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "ed143830c52c7cdc6eb337ac3e6a5fe7b6bb981b",
        "filename": "depends/packages/libevent.mk",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/libevent.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/libevent.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libevent.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,30 @@\n+package=libevent\n+$(package)_version=2.1.8\n+$(package)_download_path=https://github.com/libevent/libevent/releases/download/release-$($(package)_version)-stable\n+$(package)_file_name=$(package)-$($(package)_version)-stable.tar.gz\n+$(package)_sha256_hash=965cc5a8bb46ce4199a47e9b2c9e1cae3b137e8356ffdad6d94d3b9069b71dc2\n+\n+define $(package)_preprocess_cmds\n+  ./autogen.sh\n+endef\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--disable-shared --disable-openssl --disable-libevent-regress\n+  $(package)_config_opts_release=--disable-debug-mode\n+  $(package)_config_opts_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef\n+\n+define $(package)_postprocess_cmds\n+endef"
      },
      {
        "sha": "28f2bd6f25343de809c9b2c568bd88b778bb26ec",
        "filename": "depends/packages/libxcb.mk",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/libxcb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/libxcb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libxcb.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,35 @@\n+package=libxcb\n+$(package)_version=1.10\n+$(package)_download_path=http://xcb.freedesktop.org/dist\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=98d9ab05b636dd088603b64229dd1ab2d2cc02ab807892e107d674f9c3f2d5b5\n+$(package)_dependencies=xcb_proto libXau xproto\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--disable-static\n+endef\n+\n+define $(package)_preprocess_cmds\n+  sed \"s/pthread-stubs//\" -i configure\n+endef\n+\n+# Don't install xcb headers to the default path in order to work around a qt\n+# build issue: https://bugreports.qt.io/browse/QTBUG-34748\n+# When using qt's internal libxcb, it may end up finding the real headers in\n+# depends staging. Use a non-default path to avoid that.\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf) --includedir=$(host_prefix)/include/xcb-shared\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm -rf share/man share/doc\n+endef"
      },
      {
        "sha": "3d5a6df974bf1f25e5aa7db4c36e4e37bd127b8e",
        "filename": "depends/packages/miniupnpc.mk",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/miniupnpc.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/miniupnpc.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/miniupnpc.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,28 @@\n+package=miniupnpc\n+$(package)_version=1.9.20151026\n+$(package)_download_path=http://miniupnp.free.fr/files\n+$(package)_file_name=$(package)-$($(package)_version).tar.gz\n+$(package)_sha256_hash=f3cf9a5a31588a917d4d9237e5bc50f84d00c5aa48e27ed50d9b88dfa6a25d47\n+\n+define $(package)_set_vars\n+$(package)_build_opts=CC=\"$($(package)_cc)\"\n+$(package)_build_opts_darwin=OS=Darwin LIBTOOL=\"$($(package)_libtool)\"\n+$(package)_build_opts_mingw32=-f Makefile.mingw\n+$(package)_build_env+=CFLAGS=\"$($(package)_cflags) $($(package)_cppflags)\" AR=\"$($(package)_ar)\"\n+endef\n+\n+define $(package)_preprocess_cmds\n+  mkdir dll && \\\n+  sed -e 's|MINIUPNPC_VERSION_STRING \\\"version\\\"|MINIUPNPC_VERSION_STRING \\\"$($(package)_version)\\\"|' -e 's|OS/version|$(host)|' miniupnpcstrings.h.in > miniupnpcstrings.h && \\\n+  sed -i.old \"s|miniupnpcstrings.h: miniupnpcstrings.h.in wingenminiupnpcstrings|miniupnpcstrings.h: miniupnpcstrings.h.in|\" Makefile.mingw\n+endef\n+\n+define $(package)_build_cmds\n+\t$(MAKE) libminiupnpc.a $($(package)_build_opts)\n+endef\n+\n+define $(package)_stage_cmds\n+\tmkdir -p $($(package)_staging_prefix_dir)/include/miniupnpc $($(package)_staging_prefix_dir)/lib &&\\\n+\tinstall *.h $($(package)_staging_prefix_dir)/include/miniupnpc &&\\\n+\tinstall libminiupnpc.a $($(package)_staging_prefix_dir)/lib\n+endef"
      },
      {
        "sha": "027174479adac628ea11c01b93bf8f41d20648ab",
        "filename": "depends/packages/native_ccache.mk",
        "status": "added",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/native_ccache.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/native_ccache.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ccache.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,25 @@\n+package=native_ccache\n+$(package)_version=3.2.4\n+$(package)_download_path=https://samba.org/ftp/ccache\n+$(package)_file_name=ccache-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=ffeb967edb549e67da0bd5f44f729a2022de9fdde65dfd80d2a7204d7f75332e\n+\n+define $(package)_set_vars\n+$(package)_config_opts=\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm -rf lib include\n+endef"
      },
      {
        "sha": "1c1bcf199a0bd20fcf3c5f0cea83cedeb9cb6d04",
        "filename": "depends/packages/native_cctools.mk",
        "status": "added",
        "additions": 58,
        "deletions": 0,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/native_cctools.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/native_cctools.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cctools.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,58 @@\n+package=native_cctools\n+$(package)_version=ee31ae567931c426136c94aad457c7b51d844beb\n+$(package)_download_path=https://github.com/theuni/cctools-port/archive\n+$(package)_file_name=$($(package)_version).tar.gz\n+$(package)_sha256_hash=ef107e6ab1b3994cb22e14f4f5c59ea0c0b5a988e6b21d42ed9616b018bbcbf9\n+$(package)_build_subdir=cctools\n+$(package)_clang_version=3.3\n+$(package)_clang_download_path=http://llvm.org/releases/$($(package)_clang_version)\n+$(package)_clang_download_file=clang+llvm-$($(package)_clang_version)-amd64-Ubuntu-12.04.2.tar.gz\n+$(package)_clang_file_name=clang-llvm-$($(package)_clang_version)-amd64-Ubuntu-12.04.2.tar.gz\n+$(package)_clang_sha256_hash=60d8f69f032d62ef61bf527857ebb933741ec3352d4d328c5516aa520662dab7\n+$(package)_extra_sources=$($(package)_clang_file_name)\n+\n+define $(package)_fetch_cmds\n+$(call fetch_file,$(package),$($(package)_download_path),$($(package)_download_file),$($(package)_file_name),$($(package)_sha256_hash)) && \\\n+$(call fetch_file,$(package),$($(package)_clang_download_path),$($(package)_clang_download_file),$($(package)_clang_file_name),$($(package)_clang_sha256_hash))\n+endef\n+\n+define $(package)_extract_cmds\n+  mkdir -p toolchain/bin toolchain/lib/clang/3.5/include && \\\n+  tar --strip-components=1 -C toolchain -xf $($(package)_source_dir)/$($(package)_clang_file_name) && \\\n+  echo \"#!/bin/sh\" > toolchain/bin/$(host)-dsymutil && \\\n+  echo \"exit 0\" >> toolchain/bin/$(host)-dsymutil && \\\n+  chmod +x toolchain/bin/$(host)-dsymutil && \\\n+  tar --strip-components=1 -xf $($(package)_source)\n+endef\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--target=$(host) --disable-libuuid\n+$(package)_ldflags+=-Wl,-rpath=\\\\$$$$$$$$\\$$$$$$$$ORIGIN/../lib\n+$(package)_cc=$($(package)_extract_dir)/toolchain/bin/clang\n+$(package)_cxx=$($(package)_extract_dir)/toolchain/bin/clang++\n+endef\n+\n+define $(package)_preprocess_cmds\n+  cd $($(package)_build_subdir); ./autogen.sh\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install && \\\n+  cd $($(package)_extract_dir)/toolchain && \\\n+  mkdir -p $($(package)_staging_prefix_dir)/lib/clang/$($(package)_clang_version)/include && \\\n+  mkdir -p $($(package)_staging_prefix_dir)/bin $($(package)_staging_prefix_dir)/include && \\\n+  cp -P bin/clang bin/clang++ $($(package)_staging_prefix_dir)/bin/ &&\\\n+  cp lib/libLTO.so $($(package)_staging_prefix_dir)/lib/ && \\\n+  cp -rf lib/clang/$($(package)_clang_version)/include/* $($(package)_staging_prefix_dir)/lib/clang/$($(package)_clang_version)/include/ && \\\n+  cp bin/$(host)-dsymutil $($(package)_staging_prefix_dir)/bin && \\\n+  if `test -d include/c++/`; then cp -rf include/c++/ $($(package)_staging_prefix_dir)/include/; fi && \\\n+  if `test -d lib/c++/`; then cp -rf lib/c++/ $($(package)_staging_prefix_dir)/lib/; fi\n+endef"
      },
      {
        "sha": "cf694edb30e92ecf7a54a4ccdfba172a3eed44b6",
        "filename": "depends/packages/native_cdrkit.mk",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/native_cdrkit.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/native_cdrkit.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cdrkit.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,26 @@\n+package=native_cdrkit\n+$(package)_version=1.1.11\n+$(package)_download_path=http://distro.ibiblio.org/fatdog/source/600/c\n+$(package)_file_name=cdrkit-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=b50d64c214a65b1a79afe3a964c691931a4233e2ba605d793eb85d0ac3652564\n+$(package)_patches=cdrkit-deterministic.patch\n+\n+define $(package)_preprocess_cmds\n+  patch -p1 < $($(package)_patch_dir)/cdrkit-deterministic.patch\n+endef\n+\n+define $(package)_config_cmds\n+  cmake -DCMAKE_INSTALL_PREFIX=$(build_prefix)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) genisoimage\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) -C genisoimage install\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm bin/isovfy bin/isoinfo bin/isodump bin/isodebug bin/devdump\n+endef"
      },
      {
        "sha": "e0ae0cec700e921cdfc6c4bdc9760467655dcb4d",
        "filename": "depends/packages/native_comparisontool.mk",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/native_comparisontool.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/native_comparisontool.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_comparisontool.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,21 @@\n+package=native_comparisontool\n+$(package)_version=8c6666f\n+$(package)_download_path=https://github.com/theuni/bitcoind-comparisontool/raw/master\n+$(package)_file_name=pull-tests-$($(package)_version).jar\n+$(package)_sha256_hash=a865332b3827abcde684ab79f5f43c083b0b6a4c97ff5508c79f29fee24f11cd\n+$(package)_install_dirname=BitcoindComparisonTool_jar\n+$(package)_install_filename=BitcoindComparisonTool.jar\n+\n+define $(package)_extract_cmds\n+endef\n+\n+define $(package)_configure_cmds\n+endef\n+\n+define $(package)_build_cmds\n+endef\n+\n+define $(package)_stage_cmds\n+  mkdir -p $($(package)_staging_prefix_dir)/share/$($(package)_install_dirname) && \\\n+  cp $($(package)_source) $($(package)_staging_prefix_dir)/share/$($(package)_install_dirname)/$($(package)_install_filename)\n+endef"
      },
      {
        "sha": "a4ffb6046ccc4b50d7bded21207337a718ba70df",
        "filename": "depends/packages/native_libdmg-hfsplus.mk",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/native_libdmg-hfsplus.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/native_libdmg-hfsplus.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_libdmg-hfsplus.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,22 @@\n+package=native_libdmg-hfsplus\n+$(package)_version=0.1\n+$(package)_download_path=https://github.com/theuni/libdmg-hfsplus/archive\n+$(package)_file_name=libdmg-hfsplus-v$($(package)_version).tar.gz\n+$(package)_sha256_hash=6569a02eb31c2827080d7d59001869ea14484c281efab0ae7f2b86af5c3120b3\n+$(package)_build_subdir=build\n+\n+define $(package)_preprocess_cmds\n+  mkdir build\n+endef\n+\n+define $(package)_config_cmds\n+  cmake -DCMAKE_INSTALL_PREFIX:PATH=$(build_prefix)/bin ..\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) -C dmg\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) -C dmg install\n+endef"
      },
      {
        "sha": "ce50b366fa74f3fbed838624f9d7ec58396ace02",
        "filename": "depends/packages/native_protobuf.mk",
        "status": "added",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/native_protobuf.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/native_protobuf.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_protobuf.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,25 @@\n+package=native_protobuf\n+$(package)_version=2.6.1\n+$(package)_download_path=https://github.com/google/protobuf/releases/download/v$($(package)_version)\n+$(package)_file_name=protobuf-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=ee445612d544d885ae240ffbcbf9267faa9f593b7b101f21d58beceb92661910\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--disable-shared\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) -C src protoc\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) -C src DESTDIR=$($(package)_staging_dir) install-strip\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm -rf lib include\n+endef"
      },
      {
        "sha": "fe6eb97dead0cc969c1298f6f82e2e0d92aa97f0",
        "filename": "depends/packages/openssl.mk",
        "status": "added",
        "additions": 45,
        "deletions": 0,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/openssl.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/openssl.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/openssl.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,45 @@\n+package=openssl\n+$(package)_version=1.0.1k\n+$(package)_download_path=https://www.openssl.org/source\n+$(package)_file_name=$(package)-$($(package)_version).tar.gz\n+$(package)_sha256_hash=8f9faeaebad088e772f4ef5e38252d472be4d878c6b3a2718c10a4fcebe7a41c\n+\n+define $(package)_set_vars\n+$(package)_config_env=AR=\"$($(package)_ar)\" RANLIB=\"$($(package)_ranlib)\" CC=\"$($(package)_cc)\"\n+$(package)_config_opts=--prefix=$(host_prefix) --openssldir=$(host_prefix)/etc/openssl no-zlib no-shared no-dso\n+$(package)_config_opts+=no-krb5 no-capieng no-dtls1 no-gost no-gmp no-heartbeats no-jpake no-md2\n+$(package)_config_opts+=no-rc5 no-rdrand no-rfc3779 no-rsax no-sctp no-sha0 no-static_engine no-ssl2 no-ssl3\n+$(package)_config_opts+=$($(package)_cflags) $($(package)_cppflags)\n+$(package)_config_opts_linux=-fPIC -Wa,--noexecstack\n+$(package)_config_opts_x86_64_linux=linux-x86_64\n+$(package)_config_opts_i686_linux=linux-generic32\n+$(package)_config_opts_arm_linux=linux-generic32\n+$(package)_config_opts_aarch64_linux=linux-generic64\n+$(package)_config_opts_mipsel_linux=linux-generic32\n+$(package)_config_opts_mips_linux=linux-generic32\n+$(package)_config_opts_powerpc_linux=linux-generic32\n+$(package)_config_opts_x86_64_darwin=darwin64-x86_64-cc\n+$(package)_config_opts_x86_64_mingw32=mingw64\n+$(package)_config_opts_i686_mingw32=mingw\n+endef\n+\n+define $(package)_preprocess_cmds\n+  sed -i.old \"/define DATE/d\" util/mkbuildinf.pl && \\\n+  sed -i.old \"s|engines apps test|engines|\" Makefile.org\n+endef\n+\n+define $(package)_config_cmds\n+  ./Configure $($(package)_config_opts)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) -j1 build_libs libcrypto.pc libssl.pc openssl.pc\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) INSTALL_PREFIX=$($(package)_staging_dir) -j1 install_sw\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm -rf share bin etc\n+endef"
      },
      {
        "sha": "02cc1884203aeebdf1b431efd4f194ac7addbf30",
        "filename": "depends/packages/packages.mk",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,20 @@\n+packages:=boost openssl libevent\n+darwin_packages:=zeromq\n+linux_packages:=zeromq\n+native_packages := native_ccache native_comparisontool\n+\n+qt_native_packages = native_protobuf\n+qt_packages = qrencode protobuf\n+\n+qt_linux_packages= qt expat dbus libxcb xcb_proto libXau xproto freetype fontconfig libX11 xextproto libXext xtrans\n+qt_darwin_packages=qt\n+qt_mingw32_packages=qt\n+\n+\n+wallet_packages=bdb\n+\n+upnp_packages=miniupnpc\n+\n+ifneq ($(build_os),darwin)\n+darwin_native_packages=native_cctools native_cdrkit native_libdmg-hfsplus\n+endif"
      },
      {
        "sha": "5affad28375a9f0c6a2a11d2c46f7f19b47a0e24",
        "filename": "depends/packages/protobuf.mk",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/protobuf.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/protobuf.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/protobuf.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,28 @@\n+package=protobuf\n+$(package)_version=$(native_$(package)_version)\n+$(package)_download_path=$(native_$(package)_download_path)\n+$(package)_file_name=$(native_$(package)_file_name)\n+$(package)_sha256_hash=$(native_$(package)_sha256_hash)\n+$(package)_dependencies=native_$(package)\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--disable-shared --with-protoc=$(build_prefix)/bin/protoc\n+  $(package)_config_opts_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) -C src libprotobuf.la\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) -C src install-libLTLIBRARIES install-nobase_includeHEADERS &&\\\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install-pkgconfigDATA\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm lib/libprotoc.a\n+endef"
      },
      {
        "sha": "7b21247133f42754d8c67ad940e2ce77357acb98",
        "filename": "depends/packages/qrencode.mk",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/qrencode.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/qrencode.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qrencode.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,22 @@\n+package=qrencode\n+$(package)_version=3.4.4\n+$(package)_download_path=https://fukuchi.org/works/qrencode/\n+$(package)_file_name=qrencode-$(qrencode_version).tar.bz2\n+$(package)_sha256_hash=efe5188b1ddbcbf98763b819b146be6a90481aac30cfc8d858ab78a19cde1fa5\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--disable-shared -without-tools --disable-sdltest\n+$(package)_config_opts_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "8aa98e58eea7136d5dbe9a5334812297b52e0bcb",
        "filename": "depends/packages/qt.mk",
        "status": "added",
        "additions": 172,
        "deletions": 0,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,172 @@\n+PACKAGE=qt\n+$(package)_version=5.5.0\n+$(package)_download_path=http://download.qt.io/archive/qt/5.5/$($(package)_version)/submodules\n+$(package)_suffix=opensource-src-$($(package)_version).tar.gz\n+$(package)_file_name=qtbase-$($(package)_suffix)\n+$(package)_sha256_hash=7e82b1318f88e56a2a9376e069aa608d4fd96b48cb0e1b880ae658b0a1af0561\n+$(package)_dependencies=openssl\n+$(package)_linux_dependencies=freetype fontconfig dbus libxcb libX11 xproto libXext\n+$(package)_build_subdir=qtbase\n+$(package)_qt_libs=corelib network widgets gui plugins testlib\n+$(package)_patches=mac-qmake.conf fix-xcb-include-order.patch mingw-uuidof.patch pidlist_absolute.patch\n+\n+$(package)_qttranslations_file_name=qttranslations-$($(package)_suffix)\n+$(package)_qttranslations_sha256_hash=c4bd6db6e426965c6f8824c54e81f68bbd61e2bae1bcadc328c6e81c45902a0d\n+\n+$(package)_qttools_file_name=qttools-$($(package)_suffix)\n+$(package)_qttools_sha256_hash=d9e06bd19ecc86afba5e95d45a906d1bc1ad579aa70001e36143c1aaf695bdd6\n+\n+$(package)_extra_sources  = $($(package)_qttranslations_file_name)\n+$(package)_extra_sources += $($(package)_qttools_file_name)\n+\n+define $(package)_set_vars\n+$(package)_config_opts_release = -release\n+$(package)_config_opts_debug   = -debug\n+$(package)_config_opts += -opensource -confirm-license\n+$(package)_config_opts += -no-audio-backend\n+$(package)_config_opts += -no-glib\n+$(package)_config_opts += -no-icu\n+$(package)_config_opts += -no-cups\n+$(package)_config_opts += -no-iconv\n+$(package)_config_opts += -no-gif\n+$(package)_config_opts += -no-freetype\n+$(package)_config_opts += -no-nis\n+$(package)_config_opts += -pch\n+$(package)_config_opts += -no-qml-debug\n+$(package)_config_opts += -nomake examples\n+$(package)_config_opts += -nomake tests\n+$(package)_config_opts += -no-feature-style-windowsmobile\n+$(package)_config_opts += -no-feature-style-windowsce\n+$(package)_config_opts += -no-sql-db2\n+$(package)_config_opts += -no-sql-ibase\n+$(package)_config_opts += -no-sql-oci\n+$(package)_config_opts += -no-sql-tds\n+$(package)_config_opts += -no-sql-mysql\n+$(package)_config_opts += -no-sql-odbc\n+$(package)_config_opts += -no-sql-psql\n+$(package)_config_opts += -no-sql-sqlite\n+$(package)_config_opts += -no-sql-sqlite2\n+$(package)_config_opts += -prefix $(host_prefix)\n+$(package)_config_opts += -hostprefix $(build_prefix)\n+$(package)_config_opts += -bindir $(build_prefix)/bin\n+$(package)_config_opts += -no-c++11\n+$(package)_config_opts += -openssl-linked\n+$(package)_config_opts += -v\n+$(package)_config_opts += -static\n+$(package)_config_opts += -silent\n+$(package)_config_opts += -pkg-config\n+$(package)_config_opts += -qt-libpng\n+$(package)_config_opts += -qt-libjpeg\n+$(package)_config_opts += -qt-zlib\n+$(package)_config_opts += -qt-pcre\n+$(package)_config_opts += -no-pulseaudio\n+$(package)_config_opts += -no-openvg\n+$(package)_config_opts += -no-xrender\n+$(package)_config_opts += -no-alsa\n+$(package)_config_opts += -no-mtdev\n+$(package)_config_opts += -no-gstreamer\n+$(package)_config_opts += -no-mitshm\n+$(package)_config_opts += -no-kms\n+$(package)_config_opts += -no-reduce-relocations\n+$(package)_config_opts += -no-egl\n+$(package)_config_opts += -no-eglfs\n+$(package)_config_opts += -no-linuxfb\n+$(package)_config_opts += -no-xinput2\n+$(package)_config_opts += -no-libudev\n+$(package)_config_opts += -no-use-gold-linker\n+$(package)_config_opts += -reduce-exports\n+$(package)_config_opts += -optimized-qmake\n+\n+ifneq ($(build_os),darwin)\n+$(package)_config_opts_darwin = -xplatform macx-clang-linux\n+$(package)_config_opts_darwin += -device-option MAC_SDK_PATH=$(OSX_SDK)\n+$(package)_config_opts_darwin += -device-option MAC_SDK_VERSION=$(OSX_SDK_VERSION)\n+$(package)_config_opts_darwin += -device-option CROSS_COMPILE=\"$(host)-\"\n+$(package)_config_opts_darwin += -device-option MAC_MIN_VERSION=$(OSX_MIN_VERSION)\n+$(package)_config_opts_darwin += -device-option MAC_TARGET=$(host)\n+$(package)_config_opts_darwin += -device-option MAC_LD64_VERSION=$(LD64_VERSION)\n+endif\n+\n+$(package)_config_opts_linux  = -qt-xkbcommon\n+$(package)_config_opts_linux += -qt-xcb\n+$(package)_config_opts_linux += -system-freetype\n+$(package)_config_opts_linux += -no-sm\n+$(package)_config_opts_linux += -fontconfig\n+$(package)_config_opts_linux += -no-opengl\n+$(package)_config_opts_arm_linux  = -platform linux-g++ -xplatform $(host)\n+$(package)_config_opts_i686_linux  = -xplatform linux-g++-32\n+$(package)_config_opts_mingw32  = -no-opengl -xplatform win32-g++ -device-option CROSS_COMPILE=\"$(host)-\"\n+$(package)_build_env  = QT_RCC_TEST=1\n+endef\n+\n+define $(package)_fetch_cmds\n+$(call fetch_file,$(package),$($(package)_download_path),$($(package)_download_file),$($(package)_file_name),$($(package)_sha256_hash)) && \\\n+$(call fetch_file,$(package),$($(package)_download_path),$($(package)_qttranslations_file_name),$($(package)_qttranslations_file_name),$($(package)_qttranslations_sha256_hash)) && \\\n+$(call fetch_file,$(package),$($(package)_download_path),$($(package)_qttools_file_name),$($(package)_qttools_file_name),$($(package)_qttools_sha256_hash))\n+endef\n+\n+define $(package)_extract_cmds\n+  mkdir -p $($(package)_extract_dir) && \\\n+  echo \"$($(package)_sha256_hash)  $($(package)_source)\" > $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n+  echo \"$($(package)_qttranslations_sha256_hash)  $($(package)_source_dir)/$($(package)_qttranslations_file_name)\" > $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n+  echo \"$($(package)_qttools_sha256_hash)  $($(package)_source_dir)/$($(package)_qttools_file_name)\" > $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n+  $(build_SHA256SUM) -c $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n+  mkdir qtbase && \\\n+  tar --strip-components=1 -xf $($(package)_source) -C qtbase && \\\n+  mkdir qttranslations && \\\n+  tar --strip-components=1 -xf $($(package)_source_dir)/$($(package)_qttranslations_file_name) -C qttranslations && \\\n+  mkdir qttools && \\\n+  tar --strip-components=1 -xf $($(package)_source_dir)/$($(package)_qttools_file_name) -C qttools\n+endef\n+\n+define $(package)_preprocess_cmds\n+  sed -i.old \"s|updateqm.commands = \\$$$$\\$$$$LRELEASE|updateqm.commands = $($(package)_extract_dir)/qttools/bin/lrelease|\" qttranslations/translations/translations.pro && \\\n+  sed -i.old \"s/src_plugins.depends = src_sql src_xml src_network/src_plugins.depends = src_xml src_network/\" qtbase/src/src.pro && \\\n+  sed -i.old \"s|X11/extensions/XIproto.h|X11/X.h|\" qtbase/src/plugins/platforms/xcb/qxcbxsettings.cpp && \\\n+  sed -i.old 's/if \\[ \"$$$$XPLATFORM_MAC\" = \"yes\" \\]; then xspecvals=$$$$(macSDKify/if \\[ \"$$$$BUILD_ON_MAC\" = \"yes\" \\]; then xspecvals=$$$$(macSDKify/' qtbase/configure && \\\n+  mkdir -p qtbase/mkspecs/macx-clang-linux &&\\\n+  cp -f qtbase/mkspecs/macx-clang/Info.plist.lib qtbase/mkspecs/macx-clang-linux/ &&\\\n+  cp -f qtbase/mkspecs/macx-clang/Info.plist.app qtbase/mkspecs/macx-clang-linux/ &&\\\n+  cp -f qtbase/mkspecs/macx-clang/qplatformdefs.h qtbase/mkspecs/macx-clang-linux/ &&\\\n+  cp -f $($(package)_patch_dir)/mac-qmake.conf qtbase/mkspecs/macx-clang-linux/qmake.conf && \\\n+  patch -p1 < $($(package)_patch_dir)/fix-xcb-include-order.patch && \\\n+  patch -p1 < $($(package)_patch_dir)/mingw-uuidof.patch && \\\n+  patch -p1 < $($(package)_patch_dir)/pidlist_absolute.patch && \\\n+  echo \"QMAKE_CFLAGS     += $($(package)_cflags) $($(package)_cppflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n+  echo \"QMAKE_CXXFLAGS   += $($(package)_cxxflags) $($(package)_cppflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n+  echo \"QMAKE_LFLAGS     += $($(package)_ldflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n+  sed -i.old \"s|QMAKE_CFLAGS            = |QMAKE_CFLAGS            = $($(package)_cflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n+  sed -i.old \"s|QMAKE_LFLAGS            = |QMAKE_LFLAGS            = $($(package)_ldflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n+  sed -i.old \"s|QMAKE_CXXFLAGS          = |QMAKE_CXXFLAGS            = $($(package)_cxxflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf\n+endef\n+\n+define $(package)_config_cmds\n+  export PKG_CONFIG_SYSROOT_DIR=/ && \\\n+  export PKG_CONFIG_LIBDIR=$(host_prefix)/lib/pkgconfig && \\\n+  export PKG_CONFIG_PATH=$(host_prefix)/share/pkgconfig  && \\\n+  ./configure $($(package)_config_opts) && \\\n+  $(MAKE) sub-src-clean && \\\n+  cd ../qttranslations && ../qtbase/bin/qmake qttranslations.pro -o Makefile && \\\n+  cd translations && ../../qtbase/bin/qmake translations.pro -o Makefile && cd ../.. &&\\\n+  cd qttools/src/linguist/lrelease/ && ../../../../qtbase/bin/qmake lrelease.pro -o Makefile\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) -C src $(addprefix sub-,$($(package)_qt_libs)) && \\\n+  $(MAKE) -C ../qttools/src/linguist/lrelease && \\\n+  $(MAKE) -C ../qttranslations\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) -C src INSTALL_ROOT=$($(package)_staging_dir) $(addsuffix -install_subtargets,$(addprefix sub-,$($(package)_qt_libs))) && cd .. &&\\\n+  $(MAKE) -C qttools/src/linguist/lrelease INSTALL_ROOT=$($(package)_staging_dir) install_target && \\\n+  $(MAKE) -C qttranslations INSTALL_ROOT=$($(package)_staging_dir) install_subtargets && \\\n+  if `test -f qtbase/src/plugins/platforms/xcb/xcb-static/libxcb-static.a`; then \\\n+    cp qtbase/src/plugins/platforms/xcb/xcb-static/libxcb-static.a $($(package)_staging_prefix_dir)/lib; \\\n+  fi\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm -rf native/mkspecs/ native/lib/ lib/cmake/ && \\\n+  rm -f lib/lib*.la lib/*.prl plugins/*/*.prl\n+endef"
      },
      {
        "sha": "8fb30a5c4471cfe1b4204c4507a103d37ba5a067",
        "filename": "depends/packages/qt46.mk",
        "status": "added",
        "additions": 66,
        "deletions": 0,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/qt46.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/qt46.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt46.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,66 @@\n+PACKAGE=qt46\n+$(package)_version=4.6.4\n+$(package)_download_path=http://download.qt-project.org/archive/qt/4.6/\n+$(package)_file_name=qt-everywhere-opensource-src-$($(package)_version).tar.gz\n+$(package)_sha256_hash=9ad4d46c721b53a429ed5a2eecfd3c239a9ab566562f183f99d3125f1a234250\n+$(package)_dependencies=openssl freetype dbus libX11 xproto libXext libICE libSM\n+$(package)_patches=stlfix.patch \n+\n+define $(package)_set_vars\n+$(package)_config_opts  = -prefix $(host_prefix) -headerdir $(host_prefix)/include/qt4 -bindir $(build_prefix)/bin\n+$(package)_config_opts += -release -no-separate-debug-info -opensource -confirm-license\n+$(package)_config_opts += -stl -qt-zlib\n+\n+$(package)_config_opts += -nomake examples -nomake tests -nomake tools -nomake translations -nomake demos -nomake docs\n+$(package)_config_opts += -no-audio-backend -no-glib -no-nis -no-cups -no-iconv -no-gif -no-pch\n+$(package)_config_opts += -no-xkb -no-xrender -no-xrandr -no-xfixes -no-xcursor -no-xinerama -no-xsync -no-xinput -no-mitshm -no-xshape\n+$(package)_config_opts += -no-libtiff -no-fontconfig -openssl-linked\n+$(package)_config_opts += -no-sql-db2 -no-sql-ibase -no-sql-oci -no-sql-tds -no-sql-mysql\n+$(package)_config_opts += -no-sql-odbc -no-sql-psql -no-sql-sqlite -no-sql-sqlite2\n+$(package)_config_opts += -no-xmlpatterns -no-multimedia -no-phonon -no-scripttools -no-declarative\n+$(package)_config_opts += -no-phonon-backend -no-webkit -no-javascript-jit -no-script\n+$(package)_config_opts += -no-svg -no-libjpeg -no-libtiff -no-libpng -no-libmng -no-qt3support -no-opengl\n+\n+$(package)_config_opts_x86_64_linux  += -platform linux-g++-64\n+$(package)_config_opts_i686_linux  = -platform linux-g++-32\n+$(package)_build_env  = QT_RCC_TEST=1\n+endef\n+\n+define $(package)_preprocess_cmds\n+   sed -i.old \"s|/include /usr/include||\" config.tests/unix/freetype/freetype.pri && \\\n+   sed -i.old \"s|src_plugins.depends = src_gui src_sql src_svg|src_plugins.depends = src_gui src_sql|\" src/src.pro && \\\n+   sed -i.old \"s|\\.lower(|\\.toLower(|g\" src/network/ssl/qsslsocket_openssl.cpp && \\\n+   sed -i.old \"s|Key_BackSpace|Key_Backspace|\" src/gui/itemviews/qabstractitemview.cpp && \\\n+   sed -i.old \"s|/usr/X11R6/lib64|$(host_prefix)/lib|\" mkspecs/*/*.conf && \\\n+   sed -i.old \"s|/usr/X11R6/lib|$(host_prefix)/lib|\" mkspecs/*/*.conf && \\\n+   sed -i.old \"s|/usr/X11R6/include|$(host_prefix)/include|\" mkspecs/*/*.conf && \\\n+   sed -i.old \"s|QMAKE_LFLAGS_SHLIB\\t+= -shared|QMAKE_LFLAGS_SHLIB\\t+= -shared -Wl,--exclude-libs,ALL|\" mkspecs/common/g++.conf && \\\n+   sed -i.old \"/SSLv2_client_method/d\" src/network/ssl/qsslsocket_openssl.cpp src/network/ssl/qsslsocket_openssl_symbols.cpp && \\\n+   sed -i.old \"/SSLv2_server_method/d\" src/network/ssl/qsslsocket_openssl.cpp src/network/ssl/qsslsocket_openssl_symbols.cpp && \\\n+   patch -p1 < $($(package)_patch_dir)/stlfix.patch \n+endef\n+\n+define $(package)_config_cmds\n+  export PKG_CONFIG_SYSROOT_DIR=/ && \\\n+  export PKG_CONFIG_LIBDIR=$(host_prefix)/lib/pkgconfig && \\\n+  export PKG_CONFIG_PATH=$(host_prefix)/share/pkgconfig  && \\\n+  export CPATH=$(host_prefix)/include && \\\n+  OPENSSL_LIBS='-L$(host_prefix)/lib -lssl -lcrypto' ./configure $($(package)_config_opts) && \\\n+  cd tools/linguist/lrelease; ../../../bin/qmake  -o Makefile lrelease.pro\n+endef\n+\n+define $(package)_build_cmds\n+  export CPATH=$(host_prefix)/include && \\\n+  $(MAKE) -C src && \\\n+  $(MAKE) -C tools/linguist/lrelease\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) -C src INSTALL_ROOT=$($(package)_staging_dir) install && \\\n+  $(MAKE) -C tools/linguist/lrelease INSTALL_ROOT=$($(package)_staging_dir) install\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm -rf mkspecs/ lib/cmake/ lib/*.prl lib/*.la && \\\n+  find native/bin -type f -exec mv {} {}-qt4 \\;\n+endef"
      },
      {
        "sha": "0c7c958d62d42e52fa5cb694a026ea9f36ccabfa",
        "filename": "depends/packages/xcb_proto.mk",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/xcb_proto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/xcb_proto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xcb_proto.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,27 @@\n+package=xcb_proto\n+$(package)_version=1.10\n+$(package)_download_path=http://xcb.freedesktop.org/dist\n+$(package)_file_name=xcb-proto-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=7ef40ddd855b750bc597d2a435da21e55e502a0fefa85b274f2c922800baaf05\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--disable-shared\n+  $(package)_config_opts_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef\n+\n+define $(package)_postprocess_cmds\n+  find -name \"*.pyc\" -delete && \\\n+  find -name \"*.pyo\" -delete\n+endef"
      },
      {
        "sha": "98a11eb4974f8b25bf0f8c75ca1b0f0de4d5d1b9",
        "filename": "depends/packages/xextproto.mk",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/xextproto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/xextproto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xextproto.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,21 @@\n+package=xextproto\n+$(package)_version=7.3.0\n+$(package)_download_path=http://xorg.freedesktop.org/releases/individual/proto\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=f3f4b23ac8db9c3a9e0d8edb591713f3d70ef9c3b175970dd8823dfc92aa5bb0\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--disable-shared\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "50a90b26850ac87de0c74d2822a6590d9a9b9e8e",
        "filename": "depends/packages/xproto.mk",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/xproto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/xproto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xproto.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,21 @@\n+package=xproto\n+$(package)_version=7.0.26\n+$(package)_download_path=http://xorg.freedesktop.org/releases/individual/proto\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=636162c1759805a5a0114a369dffdeccb8af8c859ef6e1445f26a4e6e046514f\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--disable-shared\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "99eefa6d5ea24b2d2f4e5ecf38b07390432a8549",
        "filename": "depends/packages/xtrans.mk",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/xtrans.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/xtrans.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xtrans.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,22 @@\n+package=xtrans\n+$(package)_version=1.3.4\n+$(package)_download_path=http://xorg.freedesktop.org/releases/individual/lib/\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=054d4ee3efd52508c753e9f7bc655ef185a29bd2850dd9e2fc2ccc33544f583a\n+$(package)_dependencies=\n+\n+define $(package)_set_vars\n+$(package)_config_opts_linux=--with-pic --disable-static\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "7b866e9c0f66237433d229d7c1652308dd72b5a1",
        "filename": "depends/packages/zeromq.mk",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/zeromq.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/packages/zeromq.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zeromq.mk?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,26 @@\n+package=zeromq\n+$(package)_version=4.0.7\n+$(package)_download_path=http://download.zeromq.org\n+$(package)_file_name=$(package)-$($(package)_version).tar.gz\n+$(package)_sha256_hash=e00b2967e074990d0538361cc79084a0a92892df2c6e7585da34e4c61ee47b03\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--without-documentation --disable-shared\n+  $(package)_config_opts_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) -C src\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) -C src DESTDIR=$($(package)_staging_dir) install\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm -rf bin share\n+endef"
      },
      {
        "sha": "97f59cb7e4eea0575cf684936c7087d784a39437",
        "filename": "depends/patches/boost/darwin_boost_atomic-1.patch",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/patches/boost/darwin_boost_atomic-1.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/patches/boost/darwin_boost_atomic-1.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/boost/darwin_boost_atomic-1.patch?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,35 @@\n+diff --git a/include/boost/atomic/detail/cas128strong.hpp b/include/boost/atomic/detail/cas128strong.hpp\n+index 906c13e..dcb4d7d 100644\n+--- a/include/boost/atomic/detail/cas128strong.hpp\n++++ b/include/boost/atomic/detail/cas128strong.hpp\n+@@ -196,15 +196,17 @@ class base_atomic<T, void, 16, Sign>\n+ \n+ public:\n+     BOOST_DEFAULTED_FUNCTION(base_atomic(void), {})\n+-    explicit base_atomic(value_type const& v) BOOST_NOEXCEPT : v_(0)\n++    explicit base_atomic(value_type const& v) BOOST_NOEXCEPT\n+     {\n++        memset(&v_, 0, sizeof(v_));\n+         memcpy(&v_, &v, sizeof(value_type));\n+     }\n+ \n+     void\n+     store(value_type const& value, memory_order order = memory_order_seq_cst) volatile BOOST_NOEXCEPT\n+     {\n+-        storage_type value_s = 0;\n++        storage_type value_s;\n++        memset(&value_s, 0, sizeof(value_s));\n+         memcpy(&value_s, &value, sizeof(value_type));\n+         platform_fence_before_store(order);\n+         platform_store128(value_s, &v_);\n+@@ -247,7 +249,9 @@ class base_atomic<T, void, 16, Sign>\n+         memory_order success_order,\n+         memory_order failure_order) volatile BOOST_NOEXCEPT\n+     {\n+-        storage_type expected_s = 0, desired_s = 0;\n++        storage_type expected_s, desired_s;\n++        memset(&expected_s, 0, sizeof(expected_s));\n++        memset(&desired_s, 0, sizeof(desired_s));\n+         memcpy(&expected_s, &expected, sizeof(value_type));\n+         memcpy(&desired_s, &desired, sizeof(value_type));\n+ "
      },
      {
        "sha": "ca50765200ec86d6b5591446326afc91b6d389e7",
        "filename": "depends/patches/boost/darwin_boost_atomic-2.patch",
        "status": "added",
        "additions": 55,
        "deletions": 0,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/patches/boost/darwin_boost_atomic-2.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/patches/boost/darwin_boost_atomic-2.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/boost/darwin_boost_atomic-2.patch?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,55 @@\n+diff --git a/include/boost/atomic/detail/gcc-atomic.hpp b/include/boost/atomic/detail/gcc-atomic.hpp\n+index a130590..4af99a1 100644\n+--- a/include/boost/atomic/detail/gcc-atomic.hpp\n++++ b/include/boost/atomic/detail/gcc-atomic.hpp\n+@@ -958,14 +958,16 @@ class base_atomic<T, void, 16, Sign>\n+ \n+ public:\n+     BOOST_DEFAULTED_FUNCTION(base_atomic(void), {})\n+-    explicit base_atomic(value_type const& v) BOOST_NOEXCEPT : v_(0)\n++    explicit base_atomic(value_type const& v) BOOST_NOEXCEPT\n+     {\n++        memset(&v_, 0, sizeof(v_));\n+         memcpy(&v_, &v, sizeof(value_type));\n+     }\n+ \n+     void store(value_type const& v, memory_order order = memory_order_seq_cst) volatile BOOST_NOEXCEPT\n+     {\n+-        storage_type tmp = 0;\n++        storage_type tmp;\n++        memset(&tmp, 0, sizeof(tmp));\n+         memcpy(&tmp, &v, sizeof(value_type));\n+         __atomic_store_n(&v_, tmp, atomics::detail::convert_memory_order_to_gcc(order));\n+     }\n+@@ -980,7 +982,8 @@ class base_atomic<T, void, 16, Sign>\n+ \n+     value_type exchange(value_type const& v, memory_order order = memory_order_seq_cst) volatile BOOST_NOEXCEPT\n+     {\n+-        storage_type tmp = 0;\n++        storage_type tmp;\n++        memset(&tmp, 0, sizeof(tmp));\n+         memcpy(&tmp, &v, sizeof(value_type));\n+         tmp = __atomic_exchange_n(&v_, tmp, atomics::detail::convert_memory_order_to_gcc(order));\n+         value_type res;\n+@@ -994,7 +997,9 @@ class base_atomic<T, void, 16, Sign>\n+         memory_order success_order,\n+         memory_order failure_order) volatile BOOST_NOEXCEPT\n+     {\n+-        storage_type expected_s = 0, desired_s = 0;\n++        storage_type expected_s, desired_s;\n++        memset(&expected_s, 0, sizeof(expected_s));\n++        memset(&desired_s, 0, sizeof(desired_s));\n+         memcpy(&expected_s, &expected, sizeof(value_type));\n+         memcpy(&desired_s, &desired, sizeof(value_type));\n+         const bool success = __atomic_compare_exchange_n(&v_, &expected_s, desired_s, false,\n+@@ -1010,7 +1015,9 @@ class base_atomic<T, void, 16, Sign>\n+         memory_order success_order,\n+         memory_order failure_order) volatile BOOST_NOEXCEPT\n+     {\n+-        storage_type expected_s = 0, desired_s = 0;\n++        storage_type expected_s, desired_s;\n++        memset(&expected_s, 0, sizeof(expected_s));\n++        memset(&desired_s, 0, sizeof(desired_s));\n+         memcpy(&expected_s, &expected, sizeof(value_type));\n+         memcpy(&desired_s, &desired, sizeof(value_type));\n+         const bool success = __atomic_compare_exchange_n(&v_, &expected_s, desired_s, true,"
      },
      {
        "sha": "04514c593a101078af216a67bd905b5c615ded53",
        "filename": "depends/patches/boost/gcc_5_no_cxx11.patch",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/patches/boost/gcc_5_no_cxx11.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/patches/boost/gcc_5_no_cxx11.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/boost/gcc_5_no_cxx11.patch?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,37 @@\n+From eec808554936ae068b23df07ab54d4dc6302a695 Mon Sep 17 00:00:00 2001\n+From: jzmaddock <jzmaddock@gmail.com>\n+Date: Sat, 23 Aug 2014 09:38:02 +0100\n+Subject: [PATCH] Fix BOOST_NO_CXX11_VARIADIC_TEMPLATES definition - the\n+ feature was introduced in GCC 4.4.\n+\n+---\n+ include/boost/config/compiler/gcc.hpp | 9 +--------\n+ 1 file changed, 1 insertion(+), 8 deletions(-)\n+\n+diff --git a/include/boost/config/compiler/gcc.hpp b/include/boost/config/compiler/gcc.hpp\n+index f37159d..97d8a18 100644\n+--- a/include/boost/config/compiler/gcc.hpp\n++++ b/include/boost/config/compiler/gcc.hpp\n+@@ -154,14 +154,6 @@\n+ #  define BOOST_NO_CXX11_FUNCTION_TEMPLATE_DEFAULT_ARGS\n+ #  define BOOST_NO_CXX11_RVALUE_REFERENCES\n+ #  define BOOST_NO_CXX11_STATIC_ASSERT\n+-\n+-// Variadic templates compiler:\n+-//   http://www.generic-programming.org/~dgregor/cpp/variadic-templates.html\n+-#  if defined(__VARIADIC_TEMPLATES) || (__GNUC__ > 4) || ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 4) && defined(__GXX_EXPERIMENTAL_CXX0X__))\n+-#    define BOOST_HAS_VARIADIC_TMPL\n+-#  else\n+-#    define BOOST_NO_CXX11_VARIADIC_TEMPLATES\n+-#  endif\n+ #endif\n+ \n+ // C++0x features in 4.4.n and later\n+@@ -176,6 +168,7 @@\n+ #  define BOOST_NO_CXX11_DELETED_FUNCTIONS\n+ #  define BOOST_NO_CXX11_TRAILING_RESULT_TYPES\n+ #  define BOOST_NO_CXX11_INLINE_NAMESPACES\n++#  define BOOST_NO_CXX11_VARIADIC_TEMPLATES\n+ #endif\n+ \n+ #if __GNUC__ < 4 || (__GNUC__ == 4 && __GNUC_MINOR__ < 5)"
      },
      {
        "sha": "8ab0993dc4de142ab7766a500640be92540fe80f",
        "filename": "depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "status": "added",
        "additions": 86,
        "deletions": 0,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_cdrkit/cdrkit-deterministic.patch?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,86 @@\n+--- cdrkit-1.1.11.old/genisoimage/tree.c\t2008-10-21 19:57:47.000000000 -0400\n++++ cdrkit-1.1.11/genisoimage/tree.c\t2013-12-06 00:23:18.489622668 -0500\n+@@ -1139,8 +1139,9 @@\n+ scan_directory_tree(struct directory *this_dir, char *path, \n+ \t\t\t\t\t\t  struct directory_entry *de)\n+ {\n+-\tDIR\t\t*current_dir;\n++        int             current_file;\n+ \tchar\t\twhole_path[PATH_MAX];\n++        struct dirent  **d_list;\n+ \tstruct dirent\t*d_entry;\n+ \tstruct directory *parent;\n+ \tint\t\tdflag;\n+@@ -1164,7 +1165,8 @@\n+ \tthis_dir->dir_flags |= DIR_WAS_SCANNED;\n+ \n+ \terrno = 0;\t/* Paranoia */\n+-\tcurrent_dir = opendir(path);\n++\t//current_dir = opendir(path);\n++        current_file = scandir(path, &d_list, NULL, alphasort);\n+ \td_entry = NULL;\n+ \n+ \t/*\n+@@ -1173,12 +1175,12 @@\n+ \t */\n+ \told_path = path;\n+ \n+-\tif (current_dir) {\n++\tif (current_file >= 0) {\n+ \t\terrno = 0;\n+-\t\td_entry = readdir(current_dir);\n++\t\td_entry = d_list[0];\n+ \t}\n+ \n+-\tif (!current_dir || !d_entry) {\n++\tif (current_file < 0 || !d_entry) {\n+ \t\tint\tret = 1;\n+ \n+ #ifdef\tUSE_LIBSCHILY\n+@@ -1191,8 +1193,8 @@\n+ \t\t\tde->isorec.flags[0] &= ~ISO_DIRECTORY;\n+ \t\t\tret = 0;\n+ \t\t}\n+-\t\tif (current_dir)\n+-\t\t\tclosedir(current_dir);\n++\t\tif(d_list)\n++\t\t\tfree(d_list);\n+ \t\treturn (ret);\n+ \t}\n+ #ifdef\tABORT_DEEP_ISO_ONLY\n+@@ -1208,7 +1210,7 @@\n+ \t\t\terrmsgno(EX_BAD, \"use Rock Ridge extensions via -R or -r,\\n\");\n+ \t\t\terrmsgno(EX_BAD, \"or allow deep ISO9660 directory nesting via -D.\\n\");\n+ \t\t}\n+-\t\tclosedir(current_dir);\n++\t\tfree(d_list);\n+ \t\treturn (1);\n+ \t}\n+ #endif\n+@@ -1250,13 +1252,13 @@\n+ \t\t * The first time through, skip this, since we already asked\n+ \t\t * for the first entry when we opened the directory.\n+ \t\t */\n+-\t\tif (dflag)\n+-\t\t\td_entry = readdir(current_dir);\n++\t\tif (dflag && current_file >= 0)\n++\t\t\td_entry = d_list[current_file];\n+ \t\tdflag++;\n+ \n+-\t\tif (!d_entry)\n++\t\tif (current_file < 0)\n+ \t\t\tbreak;\n+-\n++                current_file--;\n+ \t\t/* OK, got a valid entry */\n+ \n+ \t\t/* If we do not want all files, then pitch the backups. */\n+@@ -1348,7 +1350,7 @@\n+ \t\tinsert_file_entry(this_dir, whole_path, d_entry->d_name);\n+ #endif\t/* APPLE_HYB */\n+ \t}\n+-\tclosedir(current_dir);\n++\tfree(d_list);\n+ \n+ #ifdef APPLE_HYB\n+ \t/*"
      },
      {
        "sha": "ae469ea94bff0e7d3b833a836f6c56e02c12db6a",
        "filename": "depends/patches/qt/fix-xcb-include-order.patch",
        "status": "added",
        "additions": 45,
        "deletions": 0,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/patches/qt/fix-xcb-include-order.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/patches/qt/fix-xcb-include-order.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix-xcb-include-order.patch?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,45 @@\n+--- old/qtbase/src/plugins/platforms/xcb/xcb_qpa_lib.pro 2015-03-17 02:06:42.705930685 +0000\n++++ new/qtbase/src/plugins/platforms/xcb/xcb_qpa_lib.pro 2015-03-17 02:08:41.281926351 +0000\n+@@ -94,8 +94,6 @@\n+\n+ DEFINES += $$QMAKE_DEFINES_XCB\n+ LIBS += $$QMAKE_LIBS_XCB\n+-QMAKE_CXXFLAGS += $$QMAKE_CFLAGS_XCB\n+-QMAKE_CFLAGS += $$QMAKE_CFLAGS_XCB\n+\n+ CONFIG += qpa/genericunixfontdatabase\n+\n+@@ -104,7 +102,8 @@\n+ contains(QT_CONFIG, xcb-qt) {\n+     DEFINES += XCB_USE_RENDER\n+     XCB_DIR = ../../../3rdparty/xcb\n+-    INCLUDEPATH += $$XCB_DIR/include $$XCB_DIR/sysinclude\n++    QMAKE_CFLAGS += -I$$XCB_DIR/include -I$$XCB_DIR/sysinclude $$QMAKE_CFLAGS_XCB\n++    QMAKE_CXXFLAGS += -I$$XCB_DIR/include -I$$XCB_DIR/sysinclude $$QMAKE_CFLAGS_XCB\n+     LIBS += -lxcb -L$$OUT_PWD/xcb-static -lxcb-static\n+ } else {\n+     LIBS += -lxcb -lxcb-image -lxcb-icccm -lxcb-sync -lxcb-xfixes -lxcb-shm -lxcb-randr -lxcb-shape -lxcb-keysyms\n+--- old/qtbase/src/plugins/platforms/xcb/xcb-static/xcb-static.pro      2015-03-17 02:07:04.641929383 +0000\n++++ new/qtbase/src/plugins/platforms/xcb/xcb-static/xcb-static.pro      2015-03-17 02:10:15.485922059 +0000\n+@@ -8,7 +8,8 @@\n+\n+ XCB_DIR = ../../../../3rdparty/xcb\n+\n+-INCLUDEPATH += $$XCB_DIR/include $$XCB_DIR/include/xcb $$XCB_DIR/sysinclude\n++QMAKE_CFLAGS += -I$$XCB_DIR/include -I$$XCB_DIR/include/xcb -I$$XCB_DIR/sysinclude\n++QMAKE_CXXFLAGS += -I$$XCB_DIR/include -I$$XCB_DIR/include/xcb -I$$XCB_DIR/sysinclude\n+\n+ QMAKE_CXXFLAGS += $$QMAKE_CFLAGS_XCB\n+ QMAKE_CFLAGS += $$QMAKE_CFLAGS_XCB\n+--- old/qtbase/src/plugins/platforms/xcb/xcb-plugin.pro\t2015-07-24 16:02:59.530038830 -0400\n++++ new/qtbase/src/plugins/platforms/xcb/xcb-plugin.pro\t2015-07-24 16:01:22.106037459 -0400\n+@@ -11,3 +11,9 @@\n+     qxcbmain.cpp\n+ OTHER_FILES += xcb.json README\n+\n++contains(QT_CONFIG, xcb-qt) {\n++    DEFINES += XCB_USE_RENDER\n++    XCB_DIR = ../../../3rdparty/xcb\n++    QMAKE_CFLAGS += -I$$XCB_DIR/include -I$$XCB_DIR/sysinclude $$QMAKE_CFLAGS_XCB\n++    QMAKE_CXXFLAGS += -I$$XCB_DIR/include -I$$XCB_DIR/sysinclude $$QMAKE_CFLAGS_XCB\n++}"
      },
      {
        "sha": "a6d0070cca6489848394febfa8a1b6e36925ba6c",
        "filename": "depends/patches/qt/mac-qmake.conf",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/patches/qt/mac-qmake.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/patches/qt/mac-qmake.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/mac-qmake.conf?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,26 @@\n+MAKEFILE_GENERATOR = UNIX\n+CONFIG += app_bundle incremental global_init_link_order lib_version_first plugin_no_soname absolute_library_soname\n+DEFINES += QT_NO_PRINTER QT_NO_PRINTDIALOG\n+QMAKE_INCREMENTAL_STYLE = sublib\n+include(../common/macx.conf)\n+include(../common/gcc-base-mac.conf)\n+include(../common/clang.conf)\n+include(../common/clang-mac.conf)\n+QMAKE_MAC_SDK_PATH=$${MAC_SDK_PATH}\n+QMAKE_XCODE_VERSION=4.3\n+QMAKE_XCODE_DEVELOPER_PATH=/Developer\n+QMAKE_MACOSX_DEPLOYMENT_TARGET = $${MAC_MIN_VERSION}\n+QMAKE_MAC_SDK=macosx\n+QMAKE_MAC_SDK.macosx.path = $${MAC_SDK_PATH}\n+QMAKE_MAC_SDK.macosx.platform_name = macosx\n+QMAKE_MAC_SDK.macosx.version = $${MAC_SDK_VERSION}\n+QMAKE_MAC_SDK.macosx.platform_path = /phony\n+QMAKE_CFLAGS += -target $${MAC_TARGET}\n+QMAKE_OBJECTIVE_CFLAGS += $$QMAKE_CFLAGS\n+QMAKE_CXXFLAGS += $$QMAKE_CFLAGS\n+QMAKE_LFLAGS += -target $${MAC_TARGET} -mlinker-version=$${MAC_LD64_VERSION}\n+QMAKE_AR = $${CROSS_COMPILE}ar cq\n+QMAKE_RANLIB=$${CROSS_COMPILE}ranlib\n+QMAKE_LIBTOOL=$${CROSS_COMPILE}libtool\n+QMAKE_INSTALL_NAME_TOOL=$${CROSS_COMPILE}install_name_tool\n+load(qt_config)"
      },
      {
        "sha": "975366e61229c891974f60f91a74e8c9f7a62d5a",
        "filename": "depends/patches/qt/mingw-uuidof.patch",
        "status": "added",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/patches/qt/mingw-uuidof.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/patches/qt/mingw-uuidof.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/mingw-uuidof.patch?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,44 @@\n+--- old/qtbase/src/plugins/platforms/windows/qwindowscontext.cpp\t2015-06-20 17:40:20.956781548 -0400\n++++ new/qtbase/src/plugins/platforms/windows/qwindowscontext.cpp\t2015-06-20 17:29:32.052772416 -0400\n+@@ -69,7 +69,7 @@\n+ #include <stdlib.h>\n+ #include <stdio.h>\n+ #include <windowsx.h>\n+-#ifndef Q_OS_WINCE\n++#if !defined(Q_OS_WINCE) && (!defined(USE___UUIDOF) || (defined(USE___UUIDOF) && USE___UUIDOF == 1))\n+ #  include <comdef.h>\n+ #endif\n+ \n+@@ -762,7 +762,7 @@\n+                           HWND_MESSAGE, NULL, (HINSTANCE)GetModuleHandle(0), NULL);\n+ }\n+ \n+-#ifndef Q_OS_WINCE\n++#if !defined(Q_OS_WINCE) && (!defined(USE___UUIDOF) || (defined(USE___UUIDOF) && USE___UUIDOF == 1))\n+ // Re-engineered from the inline function _com_error::ErrorMessage().\n+ // We cannot use it directly since it uses swprintf_s(), which is not\n+ // present in the MSVCRT.DLL found on Windows XP (QTBUG-35617).\n+@@ -781,7 +781,7 @@\n+          return QStringLiteral(\"IDispatch error #\") + QString::number(wCode);\n+      return QStringLiteral(\"Unknown error 0x0\") + QString::number(comError.Error(), 16);\n+ }\n+-#endif // !Q_OS_WINCE\n++#endif // !defined(Q_OS_WINCE) && (!defined(USE___UUIDOF) || (defined(USE___UUIDOF) && USE___UUIDOF == 1))\n+ \n+ /*!\n+     \\brief Common COM error strings.\n+@@ -846,12 +846,12 @@\n+     default:\n+         break;\n+     }\n+-#ifndef Q_OS_WINCE\n++#if !defined(Q_OS_WINCE) && (!defined(USE___UUIDOF) || (defined(USE___UUIDOF) && USE___UUIDOF == 1))\n+     _com_error error(hr);\n+     result += QByteArrayLiteral(\" (\");\n+     result += errorMessageFromComError(error);\n+     result += ')';\n+-#endif // !Q_OS_WINCE\n++#endif // !defined(Q_OS_WINCE) && (!defined(USE___UUIDOF) || (defined(USE___UUIDOF) && USE___UUIDOF == 1))\n+     return result;\n+ }\n+ "
      },
      {
        "sha": "0b49c050dcc1f37fc86d289ecd7bf9b1c2607206",
        "filename": "depends/patches/qt/pidlist_absolute.patch",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/patches/qt/pidlist_absolute.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/patches/qt/pidlist_absolute.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/pidlist_absolute.patch?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,37 @@\n+diff -dur old/qtbase/src/plugins/platforms/windows/qwindowscontext.h new/qtbase/src/plugins/platforms/windows/qwindowscontext.h\n+--- old/qtbase/src/plugins/platforms/windows/qwindowscontext.h\t2015-06-29 22:04:40.000000000 +0200\n++++ new/qtbase/src/plugins/platforms/windows/qwindowscontext.h\t2015-11-01 12:55:59.751234846 +0100\n+@@ -124,10 +124,18 @@\n+     inline void init();\n+ \n+     typedef HRESULT (WINAPI *SHCreateItemFromParsingName)(PCWSTR, IBindCtx *, const GUID&, void **);\n++#if defined(Q_CC_MINGW) && (!defined(__MINGW64_VERSION_MAJOR) || __MINGW64_VERSION_MAJOR < 3)\n++    typedef HRESULT (WINAPI *SHGetKnownFolderIDList)(const GUID &, DWORD, HANDLE, ITEMIDLIST **);\n++#else\n+     typedef HRESULT (WINAPI *SHGetKnownFolderIDList)(const GUID &, DWORD, HANDLE, PIDLIST_ABSOLUTE *);\n++#endif\n+     typedef HRESULT (WINAPI *SHGetStockIconInfo)(int , int , _SHSTOCKICONINFO *);\n+     typedef HRESULT (WINAPI *SHGetImageList)(int, REFIID , void **);\n++#if defined(Q_CC_MINGW) && (!defined(__MINGW64_VERSION_MAJOR) || __MINGW64_VERSION_MAJOR < 3)\n++    typedef HRESULT (WINAPI *SHCreateItemFromIDList)(const ITEMIDLIST *, REFIID, void **);\n++#else\n+     typedef HRESULT (WINAPI *SHCreateItemFromIDList)(PCIDLIST_ABSOLUTE, REFIID, void **);\n++#endif\n+ \n+     SHCreateItemFromParsingName sHCreateItemFromParsingName;\n+     SHGetKnownFolderIDList sHGetKnownFolderIDList;\n+diff -dur old/qtbase/src/plugins/platforms/windows/qwindowsdialoghelpers.cpp new/qtbase/src/plugins/platforms/windows/qwindowsdialoghelpers.cpp\n+--- old/qtbase/src/plugins/platforms/windows/qwindowsdialoghelpers.cpp\t2015-06-29 22:04:40.000000000 +0200\n++++ new/qtbase/src/plugins/platforms/windows/qwindowsdialoghelpers.cpp\t2015-11-01 13:41:09.503149772 +0100\n+@@ -1008,7 +1008,11 @@\n+             qWarning() << __FUNCTION__ << \": Invalid CLSID: \" << url.path();\n+             return Q_NULLPTR;\n+         }\n++#if defined(Q_CC_MINGW) && (!defined(__MINGW64_VERSION_MAJOR) || __MINGW64_VERSION_MAJOR < 3)\n++        ITEMIDLIST *idList;\n++#else\n+         PIDLIST_ABSOLUTE idList;\n++#endif\n+         HRESULT hr = QWindowsContext::shell32dll.sHGetKnownFolderIDList(uuid, 0, 0, &idList);\n+         if (FAILED(hr)) {\n+             qErrnoWarning(\"%s: SHGetKnownFolderIDList(%s)) failed\", __FUNCTION__, qPrintable(url.toString()));"
      },
      {
        "sha": "f8f6fb04b0b70db71dc5b2c75d2a5cfb6bc48893",
        "filename": "depends/patches/qt46/stlfix.patch",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/patches/qt46/stlfix.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/depends/patches/qt46/stlfix.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt46/stlfix.patch?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "patch": "@@ -0,0 +1,10 @@\n+--- old/config.tests/unix/stl/stltest.cpp\t2011-06-23 03:45:23.000000000 -0400\n++++ new/config.tests/unix/stl/stltest.cpp\t2014-08-28 00:54:04.154837604 -0400\n+@@ -49,6 +49,7 @@\n+ #include <vector>\n+ #include <algorithm>\n+ #include <iostream>\n++#include <cstddef>\n+ \n+ // something mean to see if the compiler and C++ standard lib are good enough\n+ template<class K, class T>"
      },
      {
        "sha": "34b73a9d65776f65ac3522c807cb4b82f597f44e",
        "filename": "doc/Doxyfile",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/Doxyfile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/Doxyfile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "f6e6e80274b0baa2bdf68ebae5d15c5d5a148511",
        "filename": "doc/README",
        "status": "removed",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/doc/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/doc/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README?ref=578a5a416b97e3481e2f332ca7a4319e75199af9"
      },
      {
        "sha": "5fd3e5a3d9251ab61911bd6b0896825efbb5d4ef",
        "filename": "doc/README.md",
        "status": "added",
        "additions": 73,
        "deletions": 0,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "f589bfc676f5c313e68403cd1948915fd852f23b",
        "filename": "doc/README_osx.txt",
        "status": "added",
        "additions": 83,
        "deletions": 0,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/README_osx.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/README_osx.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_osx.txt?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "3bb289ca736e08605d6dfbafba042868b249a2b1",
        "filename": "doc/README_windows.txt",
        "status": "modified",
        "additions": 18,
        "deletions": 13,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "bf669235e38a2c97a8cce1de70f32c7baf89ba91",
        "filename": "doc/REST-interface.md",
        "status": "added",
        "additions": 96,
        "deletions": 0,
        "changes": 96,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "a8203652b145fae6de21c66a9e786036a0c94bc1",
        "filename": "doc/assets-attribution.md",
        "status": "modified",
        "additions": 1,
        "deletions": 59,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/assets-attribution.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/assets-attribution.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "e73add0130f3f1e65a3419130baeddd9d63e299f",
        "filename": "doc/bips.md",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "217301964422c235df163dd36ed95136b5bc4c26",
        "filename": "doc/bitcoin_logo_doxygen.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/bitcoin_logo_doxygen.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/bitcoin_logo_doxygen.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bitcoin_logo_doxygen.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "d37c6c299fa41a662add27e1f03b4cf523c34441",
        "filename": "doc/build-msw.md",
        "status": "removed",
        "additions": 0,
        "deletions": 88,
        "changes": 88,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/doc/build-msw.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/doc/build-msw.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-msw.md?ref=578a5a416b97e3481e2f332ca7a4319e75199af9"
      },
      {
        "sha": "eeda0235ba9005c9553cc740140a2882936bfa0b",
        "filename": "doc/build-openbsd.md",
        "status": "added",
        "additions": 162,
        "deletions": 0,
        "changes": 162,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "65757105c2d83547fb2d29be99dd6e5ff2cde035",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 102,
        "deletions": 36,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "61fa39b851aee98f530bd3d35cb11b94284e8b33",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 203,
        "deletions": 90,
        "changes": 293,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "01fc05fc3b851bdc070ba3796ef814a22fbaaaf5",
        "filename": "doc/build-windows.md",
        "status": "added",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/build-windows.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/build-windows.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-windows.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "59409859f93e2a09547ab200087254358b648dbb",
        "filename": "doc/coding.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 99,
        "changes": 99,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/doc/coding.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/doc/coding.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/coding.txt?ref=578a5a416b97e3481e2f332ca7a4319e75199af9"
      },
      {
        "sha": "f96fddc0d1ae21cc18c9955fcf1b374fa1b4b448",
        "filename": "doc/developer-notes.md",
        "status": "added",
        "additions": 376,
        "deletions": 0,
        "changes": 376,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "ae2cda8ff6b5114bc7b98f5dc323f1f2708fb0b3",
        "filename": "doc/dnsseed-policy.md",
        "status": "added",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/dnsseed-policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/dnsseed-policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dnsseed-policy.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "e1691de59e33e6f3bec437547febdf51d8a7ebb8",
        "filename": "doc/files.md",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "f4b376aa551c6479de3454c85bbef309a643c490",
        "filename": "doc/gitian-building.md",
        "status": "added",
        "additions": 481,
        "deletions": 0,
        "changes": 481,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "dd22428e176b874afb2f5b9d1b018592fb0175d0",
        "filename": "doc/gitian-building/create_new_vm.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/create_new_vm.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/create_new_vm.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_new_vm.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "14aef5abaea8d94a5d9ab6cc7e449f7efe4e9f97",
        "filename": "doc/gitian-building/create_vm_file_location_size.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/create_vm_file_location_size.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/create_vm_file_location_size.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_file_location_size.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "8e29816fab9e7c8f97338ed43f0893f655134a5f",
        "filename": "doc/gitian-building/create_vm_hard_disk.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/create_vm_hard_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/create_vm_hard_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_hard_disk.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "a157211cf5baf909149e73fddfc2556305f4b123",
        "filename": "doc/gitian-building/create_vm_hard_disk_file_type.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/create_vm_hard_disk_file_type.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/create_vm_hard_disk_file_type.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_hard_disk_file_type.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "5abfee5337058f9bd638a79416040bd6c6496194",
        "filename": "doc/gitian-building/create_vm_memsize.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/create_vm_memsize.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/create_vm_memsize.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_memsize.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "cee16a6c63b4f2dcd592ae8c9cdc02f278fbad81",
        "filename": "doc/gitian-building/create_vm_storage_physical_hard_disk.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/create_vm_storage_physical_hard_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/create_vm_storage_physical_hard_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_storage_physical_hard_disk.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "7cda038ae47f97ddfaa905478599cafc6572dd1f",
        "filename": "doc/gitian-building/debian_install_10_configure_clock.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_10_configure_clock.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_10_configure_clock.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_10_configure_clock.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "2a648c517f429fb937275d5444a58f4830e8eae4",
        "filename": "doc/gitian-building/debian_install_11_partition_disks.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_11_partition_disks.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_11_partition_disks.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_11_partition_disks.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "0f3acc498e3e9cc04692a9c557a8eecb5029dc25",
        "filename": "doc/gitian-building/debian_install_12_choose_disk.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_12_choose_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_12_choose_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_12_choose_disk.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "c8ef0b37ad6232f87593ea448beaba089b568a91",
        "filename": "doc/gitian-building/debian_install_14_finish.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_14_finish.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_14_finish.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_14_finish.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "d8de00dec68c826485034c698079e5808f7dadfd",
        "filename": "doc/gitian-building/debian_install_15_write_changes.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_15_write_changes.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_15_write_changes.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_15_write_changes.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "0bd985b38c113ed9bbbe03808ace284476680edc",
        "filename": "doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_16_choose_a_mirror.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "2c19919f64b62d89883dc8e1308f179978b95ca4",
        "filename": "doc/gitian-building/debian_install_18_proxy_settings.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_18_proxy_settings.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_18_proxy_settings.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_18_proxy_settings.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "5430456b14f098d9e3561653352b826d19a2c38a",
        "filename": "doc/gitian-building/debian_install_19_software_selection.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_19_software_selection.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_19_software_selection.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_19_software_selection.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "216502e1c6eb6930ce60c1a36e7476e6fb8781d9",
        "filename": "doc/gitian-building/debian_install_1_boot_menu.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_1_boot_menu.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_1_boot_menu.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_1_boot_menu.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "d853c1587188c5fd4ede94ab00f9d8b6731674ac",
        "filename": "doc/gitian-building/debian_install_20_install_grub.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_20_install_grub.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_20_install_grub.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_20_install_grub.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "493ab806a673f5c8ee47db0bb5de6af0d5042b03",
        "filename": "doc/gitian-building/debian_install_21_install_grub_bootloader.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_21_install_grub_bootloader.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_21_install_grub_bootloader.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_21_install_grub_bootloader.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "7c4445585bc9982a5015959dba70d73b01885e08",
        "filename": "doc/gitian-building/debian_install_22_finish_installation.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_22_finish_installation.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_22_finish_installation.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_22_finish_installation.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "0228ae2c011daeababc75b915a12b28b702456c0",
        "filename": "doc/gitian-building/debian_install_2_select_a_language.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_2_select_a_language.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_2_select_a_language.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_2_select_a_language.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "7b18fba97577b521944f909ed57fd251942a9eab",
        "filename": "doc/gitian-building/debian_install_3_select_location.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_3_select_location.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_3_select_location.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_3_select_location.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "8e46117de4879a6de8b276813bef12c219cb4e8b",
        "filename": "doc/gitian-building/debian_install_4_configure_keyboard.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_4_configure_keyboard.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_4_configure_keyboard.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_4_configure_keyboard.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "8e3720f24322a54ef33893e8eff95383158bf3d9",
        "filename": "doc/gitian-building/debian_install_5_configure_the_network.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_5_configure_the_network.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_5_configure_the_network.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_5_configure_the_network.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "7a986d92f48ca3755e37993d098053321109751d",
        "filename": "doc/gitian-building/debian_install_6_domain_name.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_6_domain_name.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_6_domain_name.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_6_domain_name.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "dcade119676ed7e0c0f92cff6d6a064929a07a07",
        "filename": "doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_6a_set_up_root_password.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "6763c6e08ade2b17f050da257a76132f916e38f5",
        "filename": "doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_7_set_up_user_fullname.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "bb04de96d23bdaa3e29fbe19891e42b881dd0a99",
        "filename": "doc/gitian-building/debian_install_8_set_up_username.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_8_set_up_username.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_8_set_up_username.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_8_set_up_username.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "981f1181d79d0d7fe2138f036d0f1bb41ec472fa",
        "filename": "doc/gitian-building/debian_install_9_user_password.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_9_user_password.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_install_9_user_password.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_9_user_password.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "14cdd5ba5b52cc32fbc0da62cf3671c3679b8d79",
        "filename": "doc/gitian-building/debian_root_login.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_root_login.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/debian_root_login.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_root_login.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "9e714fd15451837980b9d12a931c294fc962b2a2",
        "filename": "doc/gitian-building/network_settings.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/network_settings.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/network_settings.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/network_settings.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "9e1fa2af20f48d482892b722b7288600bece322a",
        "filename": "doc/gitian-building/port_forwarding_rules.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/port_forwarding_rules.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/port_forwarding_rules.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/port_forwarding_rules.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "5acdc3fe10eebce2422cdb6d6ae799a7630f0b8d",
        "filename": "doc/gitian-building/select_startup_disk.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/select_startup_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/gitian-building/select_startup_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/select_startup_disk.png?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "44b0264a79edd21ec5b8a5ac5de3f80685161bf3",
        "filename": "doc/guide-startmany.md",
        "status": "added",
        "additions": 179,
        "deletions": 0,
        "changes": 179,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/guide-startmany.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/guide-startmany.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/guide-startmany.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "a492c222e3c11f25337b96f23777413e13cb6157",
        "filename": "doc/init.md",
        "status": "added",
        "additions": 125,
        "deletions": 0,
        "changes": 125,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/init.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/init.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/init.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "6e1632d95632468efa8dea280ae9dfde5fea0201",
        "filename": "doc/instantsend.md",
        "status": "added",
        "additions": 58,
        "deletions": 0,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/instantsend.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/instantsend.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/instantsend.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "d342bd1d6eba760f4172487aea2037345cfabed9",
        "filename": "doc/keepass.md",
        "status": "added",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/keepass.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/keepass.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/keepass.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "5dc819f1d41a0464882c581e29884d444657e395",
        "filename": "doc/masternode-budget.md",
        "status": "added",
        "additions": 159,
        "deletions": 0,
        "changes": 159,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/masternode-budget.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/masternode-budget.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/masternode-budget.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "6b78359eca32a365362684a04c4265afe19b5150",
        "filename": "doc/masternode_conf.md",
        "status": "added",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/masternode_conf.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/masternode_conf.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/masternode_conf.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "3018756d3d13354b824f83efbae1090db95fd613",
        "filename": "doc/multiwallet-qt.md",
        "status": "added",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/multiwallet-qt.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/multiwallet-qt.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/multiwallet-qt.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "02b4e363eed97323db4828538a3779db327acc96",
        "filename": "doc/readme-qt.md",
        "status": "removed",
        "additions": 0,
        "deletions": 147,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/doc/readme-qt.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/doc/readme-qt.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/readme-qt.md?ref=578a5a416b97e3481e2f332ca7a4319e75199af9"
      },
      {
        "sha": "8316ee4c0929eec6df73a789887cef9c5d12c9ac",
        "filename": "doc/readme-windows-qt.md",
        "status": "removed",
        "additions": 0,
        "deletions": 91,
        "changes": 91,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/doc/readme-windows-qt.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/doc/readme-windows-qt.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/readme-windows-qt.md?ref=578a5a416b97e3481e2f332ca7a4319e75199af9"
      },
      {
        "sha": "682194ddf68c606fe599a724da9fd8e4662add33",
        "filename": "doc/reduce-traffic.md",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/reduce-traffic.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/reduce-traffic.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reduce-traffic.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "e711934d99bd6582d65ca6196f29b18297b84db2",
        "filename": "doc/release-notes.md",
        "status": "added",
        "additions": 115,
        "deletions": 0,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "246194a00f865ce8b96cfdd31efe6a48b21c566f",
        "filename": "doc/release-process.md",
        "status": "added",
        "additions": 203,
        "deletions": 0,
        "changes": 203,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "ed23ef3505492a5115af4803ce276c38ff604960",
        "filename": "doc/release-process.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 142,
        "changes": 142,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578a5a416b97e3481e2f332ca7a4319e75199af9/doc/release-process.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578a5a416b97e3481e2f332ca7a4319e75199af9/doc/release-process.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.txt?ref=578a5a416b97e3481e2f332ca7a4319e75199af9"
      },
      {
        "sha": "f4ff53d6e925948fc08eb55aff2fb7e713556dcd",
        "filename": "doc/shared-libraries.md",
        "status": "added",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/shared-libraries.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/shared-libraries.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/shared-libraries.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "2c464ffb9cd0d6e932085fe7a1abd1fc547162ac",
        "filename": "doc/tor.md",
        "status": "added",
        "additions": 133,
        "deletions": 0,
        "changes": 133,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "80fd3058ae3c37d5f4a3cbdc7246c3e93c49d208",
        "filename": "doc/translation_process.md",
        "status": "modified",
        "additions": 83,
        "deletions": 53,
        "changes": 136,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/translation_process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/translation_process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_process.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "4320920635cfc091e8d4a20c48dc63c266f78e29",
        "filename": "doc/translation_strings_policy.md",
        "status": "added",
        "additions": 109,
        "deletions": 0,
        "changes": 109,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/translation_strings_policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/translation_strings_policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_strings_policy.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "6153674b60aecc3f7332abf69d5c9c3e41b10c9d",
        "filename": "doc/travis-ci.txt",
        "status": "added",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/travis-ci.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/travis-ci.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/travis-ci.txt?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "36134194cd4ecb8cc7117cc2d6f7171a047513f6",
        "filename": "doc/unit-tests.md",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/unit-tests.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/unit-tests.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/unit-tests.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "4a7db9049dfb1f9cf9f6097ce83c84be4caaeb6d",
        "filename": "doc/zmq.md",
        "status": "added",
        "additions": 108,
        "deletions": 0,
        "changes": 108,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "3ca1696a31ce4cd7f6586afd43bc7dea390535db",
        "filename": "libbitcoinconsensus.pc.in",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/libbitcoinconsensus.pc.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/libbitcoinconsensus.pc.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/libbitcoinconsensus.pc.in?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "642e9bb89a244e67eb983e1266839e60eb7e5168",
        "filename": "qa/README.md",
        "status": "added",
        "additions": 68,
        "deletions": 0,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/qa/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/qa/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/README.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "c3f03e2e6f91156a07bc43c47e69bc11689bfbd7",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "added",
        "additions": 275,
        "deletions": 0,
        "changes": 275,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "72b8c30af940f1dbdd3bf379d5869f0d25dd009a",
        "filename": "qa/pull-tester/run-bitcoind-for-test.sh.in",
        "status": "added",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/qa/pull-tester/run-bitcoind-for-test.sh.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/qa/pull-tester/run-bitcoind-for-test.sh.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/run-bitcoind-for-test.sh.in?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "937b4231f12f82841c52d7f34133c2daf5575668",
        "filename": "qa/pull-tester/tests_config.py.in",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/qa/pull-tester/tests_config.py.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/qa/pull-tester/tests_config.py.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/tests_config.py.in?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "09fa6bdda3a49951cf3fb7aa68796ee7d5c71310",
        "filename": "qa/rpc-tests/._.DS_Store",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/qa/rpc-tests/._.DS_Store",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/qa/rpc-tests/._.DS_Store",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/._.DS_Store?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "cb41d94423e46d410462a6d1edb686a7e62a8e97",
        "filename": "qa/rpc-tests/.gitignore",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/qa/rpc-tests/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/qa/rpc-tests/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/.gitignore?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "651b01f18a4711b1dacc8b9e7408fbc896e1be48",
        "filename": "qa/rpc-tests/README.md",
        "status": "added",
        "additions": 108,
        "deletions": 0,
        "changes": 108,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/qa/rpc-tests/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/qa/rpc-tests/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/README.md?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "a83aa97fcd80632b60994510dbe1ec83a1c21ed5",
        "filename": "qa/rpc-tests/abandonconflict.py",
        "status": "added",
        "additions": 159,
        "deletions": 0,
        "changes": 159,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/qa/rpc-tests/abandonconflict.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/qa/rpc-tests/abandonconflict.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/abandonconflict.py?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "5e745d54bbcaa9daca155d99747294321ccac352",
        "filename": "qa/rpc-tests/addressindex.py",
        "status": "added",
        "additions": 330,
        "deletions": 0,
        "changes": 330,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/qa/rpc-tests/addressindex.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/qa/rpc-tests/addressindex.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/addressindex.py?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      },
      {
        "sha": "5cb78e7a404ee833d3b89bb722c021e1fff9354e",
        "filename": "qa/rpc-tests/bip65-cltv-p2p.py",
        "status": "added",
        "additions": 181,
        "deletions": 0,
        "changes": 181,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aa9b44f725aa8724f9fc2507b1656af449a8466/qa/rpc-tests/bip65-cltv-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aa9b44f725aa8724f9fc2507b1656af449a8466/qa/rpc-tests/bip65-cltv-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip65-cltv-p2p.py?ref=5aa9b44f725aa8724f9fc2507b1656af449a8466"
      }
    ]
  },
  {
    "sha": "db9b117955c2adeb2e5ecb9e9aa3eb65dc867eff",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYjliMTE3OTU1YzJhZGViMmU1ZWNiOWU5YWEzZWI2NWRjODY3ZWZm",
    "commit": {
      "author": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-18T03:14:14Z"
      },
      "committer": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-18T03:14:14Z"
      },
      "message": "change example address",
      "tree": {
        "sha": "50011cab597913b164d84ab9a9a51fc7fa924a02",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/50011cab597913b164d84ab9a9a51fc7fa924a02"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/db9b117955c2adeb2e5ecb9e9aa3eb65dc867eff",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db9b117955c2adeb2e5ecb9e9aa3eb65dc867eff",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/db9b117955c2adeb2e5ecb9e9aa3eb65dc867eff",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db9b117955c2adeb2e5ecb9e9aa3eb65dc867eff/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5aa9b44f725aa8724f9fc2507b1656af449a8466",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5aa9b44f725aa8724f9fc2507b1656af449a8466"
      }
    ],
    "stats": {
      "total": 140,
      "additions": 70,
      "deletions": 70
    },
    "files": [
      {
        "sha": "eab69a73a5a8699602d356258a900df80f36942d",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db9b117955c2adeb2e5ecb9e9aa3eb65dc867eff/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db9b117955c2adeb2e5ecb9e9aa3eb65dc867eff/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=db9b117955c2adeb2e5ecb9e9aa3eb65dc867eff",
        "patch": "@@ -118,7 +118,7 @@ void setupAddressWidget(QValidatedLineEdit *widget, QWidget *parent)\n #if QT_VERSION >= 0x040700\n     // We don't want translators to use own addresses in translations\n     // and this is the only place, where this address is supplied.\n-    widget->setPlaceholderText(QObject::tr(\"Enter a Aither address (e.g. %1)\").arg(\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\"));\n+    widget->setPlaceholderText(QObject::tr(\"Enter a Aither address (e.g. %1)\").arg(\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\"));\n #endif\n     widget->setValidator(new BitcoinAddressEntryValidator(parent));\n     widget->setCheckValidator(new BitcoinAddressCheckValidator(parent));"
      },
      {
        "sha": "77ea5db5688413143671f2fd26962846ab123a0c",
        "filename": "src/qt/test/uritests.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 25,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db9b117955c2adeb2e5ecb9e9aa3eb65dc867eff/src/qt/test/uritests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db9b117955c2adeb2e5ecb9e9aa3eb65dc867eff/src/qt/test/uritests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/uritests.cpp?ref=db9b117955c2adeb2e5ecb9e9aa3eb65dc867eff",
        "patch": "@@ -13,82 +13,82 @@ void URITests::uriTests()\n {\n     SendCoinsRecipient rv;\n     QUrl uri;\n-    uri.setUrl(QString(\"aither:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?req-dontexist=\"));\n+    uri.setUrl(QString(\"aither:AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP?req-dontexist=\"));\n     QVERIFY(!GUIUtil::parseBitcoinURI(uri, &rv));\n \n-    uri.setUrl(QString(\"aither:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?dontexist=\"));\n+    uri.setUrl(QString(\"aither:AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP?dontexist=\"));\n     QVERIFY(GUIUtil::parseBitcoinURI(uri, &rv));\n-    QVERIFY(rv.address == QString(\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\"));\n+    QVERIFY(rv.address == QString(\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\"));\n     QVERIFY(rv.label == QString());\n     QVERIFY(rv.amount == 0);\n \n-    uri.setUrl(QString(\"aither:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?label=Some Example Address\"));\n+    uri.setUrl(QString(\"aither:AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP?label=Some Example Address\"));\n     QVERIFY(GUIUtil::parseBitcoinURI(uri, &rv));\n-    QVERIFY(rv.address == QString(\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\"));\n+    QVERIFY(rv.address == QString(\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\"));\n     QVERIFY(rv.label == QString(\"Some Example Address\"));\n     QVERIFY(rv.amount == 0);\n \n-    uri.setUrl(QString(\"aither:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?amount=0.001\"));\n+    uri.setUrl(QString(\"aither:AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP?amount=0.001\"));\n     QVERIFY(GUIUtil::parseBitcoinURI(uri, &rv));\n-    QVERIFY(rv.address == QString(\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\"));\n+    QVERIFY(rv.address == QString(\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\"));\n     QVERIFY(rv.label == QString());\n     QVERIFY(rv.amount == 100000);\n \n-    uri.setUrl(QString(\"aither:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?amount=1.001\"));\n+    uri.setUrl(QString(\"aither:AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP?amount=1.001\"));\n     QVERIFY(GUIUtil::parseBitcoinURI(uri, &rv));\n-    QVERIFY(rv.address == QString(\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\"));\n+    QVERIFY(rv.address == QString(\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\"));\n     QVERIFY(rv.label == QString());\n     QVERIFY(rv.amount == 100100000);\n \n-    uri.setUrl(QString(\"aither:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?amount=100&label=Some Example\"));\n+    uri.setUrl(QString(\"aither:AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP?amount=100&label=Some Example\"));\n     QVERIFY(GUIUtil::parseBitcoinURI(uri, &rv));\n-    QVERIFY(rv.address == QString(\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\"));\n+    QVERIFY(rv.address == QString(\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\"));\n     QVERIFY(rv.amount == 10000000000LL);\n     QVERIFY(rv.label == QString(\"Some Example\"));\n \n-    uri.setUrl(QString(\"aither:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?message=Some Example Address\"));\n+    uri.setUrl(QString(\"aither:AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP?message=Some Example Address\"));\n     QVERIFY(GUIUtil::parseBitcoinURI(uri, &rv));\n-    QVERIFY(rv.address == QString(\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\"));\n+    QVERIFY(rv.address == QString(\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\"));\n     QVERIFY(rv.label == QString());\n \n-    QVERIFY(GUIUtil::parseBitcoinURI(\"aither://XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?message=Some Example Address\", &rv));\n-    QVERIFY(rv.address == QString(\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\"));\n+    QVERIFY(GUIUtil::parseBitcoinURI(\"aither://AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP?message=Some Example Address\", &rv));\n+    QVERIFY(rv.address == QString(\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\"));\n     QVERIFY(rv.label == QString());\n \n-    uri.setUrl(QString(\"aither:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?req-message=Some Example Address\"));\n+    uri.setUrl(QString(\"aither:AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP?req-message=Some Example Address\"));\n     QVERIFY(GUIUtil::parseBitcoinURI(uri, &rv));\n \n-    uri.setUrl(QString(\"aither:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?amount=1,000&label=Some Example\"));\n+    uri.setUrl(QString(\"aither:AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP?amount=1,000&label=Some Example\"));\n     QVERIFY(!GUIUtil::parseBitcoinURI(uri, &rv));\n \n-    uri.setUrl(QString(\"aither:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?amount=1,000.0&label=Some Example\"));\n+    uri.setUrl(QString(\"aither:AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP?amount=1,000.0&label=Some Example\"));\n     QVERIFY(!GUIUtil::parseBitcoinURI(uri, &rv));\n \n-    uri.setUrl(QString(\"aither:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?amount=100&label=Some Example&message=Some Example Message&IS=1\"));\n+    uri.setUrl(QString(\"aither:AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP?amount=100&label=Some Example&message=Some Example Message&IS=1\"));\n     QVERIFY(GUIUtil::parseBitcoinURI(uri, &rv));\n-    QVERIFY(rv.address == QString(\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\"));\n+    QVERIFY(rv.address == QString(\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\"));\n     QVERIFY(rv.amount == 10000000000LL);\n     QVERIFY(rv.label == QString(\"Some Example\"));\n     QVERIFY(rv.message == QString(\"Some Example Message\"));\n     QVERIFY(rv.fUseInstantSend == 1);\n \n-    uri.setUrl(QString(\"aither:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?amount=100&label=Some Example&message=Some Example Message&IS=Something Invalid\"));\n+    uri.setUrl(QString(\"aither:AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP?amount=100&label=Some Example&message=Some Example Message&IS=Something Invalid\"));\n     QVERIFY(GUIUtil::parseBitcoinURI(uri, &rv));\n-    QVERIFY(rv.address == QString(\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\"));\n+    QVERIFY(rv.address == QString(\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\"));\n     QVERIFY(rv.amount == 10000000000LL);\n     QVERIFY(rv.label == QString(\"Some Example\"));\n     QVERIFY(rv.message == QString(\"Some Example Message\"));\n     QVERIFY(rv.fUseInstantSend != 1);\n \n-    uri.setUrl(QString(\"aither:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?IS=1\"));\n+    uri.setUrl(QString(\"aither:AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP?IS=1\"));\n     QVERIFY(GUIUtil::parseBitcoinURI(uri, &rv));\n     QVERIFY(rv.fUseInstantSend == 1);\n \n-    uri.setUrl(QString(\"aither:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg?IS=0\"));\n+    uri.setUrl(QString(\"aither:AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP?IS=0\"));\n     QVERIFY(GUIUtil::parseBitcoinURI(uri, &rv));\n     QVERIFY(rv.fUseInstantSend != 1);\n \n-    uri.setUrl(QString(\"aither:XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\"));\n+    uri.setUrl(QString(\"aither:AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\"));\n     QVERIFY(GUIUtil::parseBitcoinURI(uri, &rv));\n     QVERIFY(rv.fUseInstantSend != 1);\n }"
      },
      {
        "sha": "712a3861ad51033c41cff905509fa2cfcf22b760",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 15,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db9b117955c2adeb2e5ecb9e9aa3eb65dc867eff/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db9b117955c2adeb2e5ecb9e9aa3eb65dc867eff/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=db9b117955c2adeb2e5ecb9e9aa3eb65dc867eff",
        "patch": "@@ -284,8 +284,8 @@ UniValue validateaddress(const UniValue& params, bool fHelp)\n             \"  \\\"account\\\" : \\\"account\\\"         (string) DEPRECATED. The account associated with the address, \\\"\\\" is the default account\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"validateaddress\", \"\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\"\")\n-            + HelpExampleRpc(\"validateaddress\", \"\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\"\")\n+            + HelpExampleCli(\"validateaddress\", \"\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\"\")\n+            + HelpExampleRpc(\"validateaddress\", \"\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\"\")\n         );\n \n #ifdef ENABLE_WALLET\n@@ -444,11 +444,11 @@ UniValue verifymessage(const UniValue& params, bool fHelp)\n             \"\\nUnlock the wallet for 30 seconds\\n\"\n             + HelpExampleCli(\"walletpassphrase\", \"\\\"mypassphrase\\\" 30\") +\n             \"\\nCreate the signature\\n\"\n-            + HelpExampleCli(\"signmessage\", \"\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\" \\\"my message\\\"\") +\n+            + HelpExampleCli(\"signmessage\", \"\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\" \\\"my message\\\"\") +\n             \"\\nVerify the signature\\n\"\n-            + HelpExampleCli(\"verifymessage\", \"\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\" \\\"signature\\\" \\\"my message\\\"\") +\n+            + HelpExampleCli(\"verifymessage\", \"\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\" \\\"signature\\\" \\\"my message\\\"\") +\n             \"\\nAs json rpc\\n\"\n-            + HelpExampleRpc(\"verifymessage\", \"\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\", \\\"signature\\\", \\\"my message\\\"\")\n+            + HelpExampleRpc(\"verifymessage\", \"\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\", \\\"signature\\\", \\\"my message\\\"\")\n         );\n \n     LOCK(cs_main);\n@@ -598,8 +598,8 @@ UniValue getaddressmempool(const UniValue& params, bool fHelp)\n             \"  }\\n\"\n             \"]\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"getaddressmempool\", \"'{\\\"addresses\\\": [\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\"]}'\")\n-            + HelpExampleRpc(\"getaddressmempool\", \"{\\\"addresses\\\": [\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\"]}\")\n+            + HelpExampleCli(\"getaddressmempool\", \"'{\\\"addresses\\\": [\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\"]}'\")\n+            + HelpExampleRpc(\"getaddressmempool\", \"{\\\"addresses\\\": [\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\"]}\")\n         );\n \n     std::vector<std::pair<uint160, int> > addresses;\n@@ -668,8 +668,8 @@ UniValue getaddressutxos(const UniValue& params, bool fHelp)\n             \"  }\\n\"\n             \"]\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"getaddressutxos\", \"'{\\\"addresses\\\": [\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\"]}'\")\n-            + HelpExampleRpc(\"getaddressutxos\", \"{\\\"addresses\\\": [\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\"]}\")\n+            + HelpExampleCli(\"getaddressutxos\", \"'{\\\"addresses\\\": [\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\"]}'\")\n+            + HelpExampleRpc(\"getaddressutxos\", \"{\\\"addresses\\\": [\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\"]}\")\n         );\n \n     std::vector<std::pair<uint160, int> > addresses;\n@@ -736,8 +736,8 @@ UniValue getaddressdeltas(const UniValue& params, bool fHelp)\n             \"  }\\n\"\n             \"]\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"getaddressdeltas\", \"'{\\\"addresses\\\": [\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\"]}'\")\n-            + HelpExampleRpc(\"getaddressdeltas\", \"{\\\"addresses\\\": [\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\"]}\")\n+            + HelpExampleCli(\"getaddressdeltas\", \"'{\\\"addresses\\\": [\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\"]}'\")\n+            + HelpExampleRpc(\"getaddressdeltas\", \"{\\\"addresses\\\": [\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\"]}\")\n         );\n \n \n@@ -816,8 +816,8 @@ UniValue getaddressbalance(const UniValue& params, bool fHelp)\n             \"  \\\"received\\\"  (string) The total number of satoshis received (including change)\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"getaddressbalance\", \"'{\\\"addresses\\\": [\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\"]}'\")\n-            + HelpExampleRpc(\"getaddressbalance\", \"{\\\"addresses\\\": [\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\"]}\")\n+            + HelpExampleCli(\"getaddressbalance\", \"'{\\\"addresses\\\": [\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\"]}'\")\n+            + HelpExampleRpc(\"getaddressbalance\", \"{\\\"addresses\\\": [\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\"]}\")\n         );\n \n     std::vector<std::pair<uint160, int> > addresses;\n@@ -874,8 +874,8 @@ UniValue getaddresstxids(const UniValue& params, bool fHelp)\n             \"  ,...\\n\"\n             \"]\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"getaddresstxids\", \"'{\\\"addresses\\\": [\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\"]}'\")\n-            + HelpExampleRpc(\"getaddresstxids\", \"{\\\"addresses\\\": [\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\"]}\")\n+            + HelpExampleCli(\"getaddresstxids\", \"'{\\\"addresses\\\": [\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\"]}'\")\n+            + HelpExampleRpc(\"getaddresstxids\", \"{\\\"addresses\\\": [\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\"]}\")\n         );\n \n     std::vector<std::pair<uint160, int> > addresses;"
      },
      {
        "sha": "698f51c872fa4a50efebb7ec4d29aa9efbfe4ffe",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db9b117955c2adeb2e5ecb9e9aa3eb65dc867eff/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db9b117955c2adeb2e5ecb9e9aa3eb65dc867eff/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=db9b117955c2adeb2e5ecb9e9aa3eb65dc867eff",
        "patch": "@@ -488,7 +488,7 @@ UniValue decoderawtransaction(const UniValue& params, bool fHelp)\n             \"         \\\"reqSigs\\\" : n,            (numeric) The required sigs\\n\"\n             \"         \\\"type\\\" : \\\"pubkeyhash\\\",  (string) The type, eg 'pubkeyhash'\\n\"\n             \"         \\\"addresses\\\" : [           (json array of string)\\n\"\n-            \"           \\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\"   (string) Aither address\\n\"\n+            \"           \\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\"   (string) Aither address\\n\"\n             \"           ,...\\n\"\n             \"         ]\\n\"\n             \"       }\\n\""
      },
      {
        "sha": "077f97176843b6fed6c186e22f8260267b2cd329",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 28,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db9b117955c2adeb2e5ecb9e9aa3eb65dc867eff/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db9b117955c2adeb2e5ecb9e9aa3eb65dc867eff/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=db9b117955c2adeb2e5ecb9e9aa3eb65dc867eff",
        "patch": "@@ -271,8 +271,8 @@ UniValue setaccount(const UniValue& params, bool fHelp)\n             \"1. \\\"aitheraddress\\\"  (string, required) The aither address to be associated with an account.\\n\"\n             \"2. \\\"account\\\"         (string, required) The account to assign the address to.\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"setaccount\", \"\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\" \\\"tabby\\\"\")\n-            + HelpExampleRpc(\"setaccount\", \"\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\", \\\"tabby\\\"\")\n+            + HelpExampleCli(\"setaccount\", \"\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\" \\\"tabby\\\"\")\n+            + HelpExampleRpc(\"setaccount\", \"\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\", \\\"tabby\\\"\")\n         );\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n@@ -318,8 +318,8 @@ UniValue getaccount(const UniValue& params, bool fHelp)\n             \"\\nResult:\\n\"\n             \"\\\"accountname\\\"        (string) the account address\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"getaccount\", \"\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\"\")\n-            + HelpExampleRpc(\"getaccount\", \"\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\"\")\n+            + HelpExampleCli(\"getaccount\", \"\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\"\")\n+            + HelpExampleRpc(\"getaccount\", \"\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\"\")\n         );\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n@@ -430,10 +430,10 @@ UniValue sendtoaddress(const UniValue& params, bool fHelp)\n             \"\\nResult:\\n\"\n             \"\\\"transactionid\\\"  (string) The transaction id.\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"sendtoaddress\", \"\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\" 0.1\")\n-            + HelpExampleCli(\"sendtoaddress\", \"\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\" 0.1 \\\"donation\\\" \\\"seans outpost\\\"\")\n-            + HelpExampleCli(\"sendtoaddress\", \"\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\" 0.1 \\\"\\\" \\\"\\\" true\")\n-            + HelpExampleRpc(\"sendtoaddress\", \"\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\", 0.1, \\\"donation\\\", \\\"seans outpost\\\"\")\n+            + HelpExampleCli(\"sendtoaddress\", \"\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\" 0.1\")\n+            + HelpExampleCli(\"sendtoaddress\", \"\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\" 0.1 \\\"donation\\\" \\\"seans outpost\\\"\")\n+            + HelpExampleCli(\"sendtoaddress\", \"\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\" 0.1 \\\"\\\" \\\"\\\" true\")\n+            + HelpExampleRpc(\"sendtoaddress\", \"\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\", 0.1, \\\"donation\\\", \\\"seans outpost\\\"\")\n         );\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n@@ -495,10 +495,10 @@ UniValue instantsendtoaddress(const UniValue& params, bool fHelp)\n             \"\\nResult:\\n\"\n             \"\\\"transactionid\\\"  (string) The transaction id.\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"instantsendtoaddress\", \"\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\" 0.1\")\n-            + HelpExampleCli(\"instantsendtoaddress\", \"\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\" 0.1 \\\"donation\\\" \\\"seans outpost\\\"\")\n-            + HelpExampleCli(\"instantsendtoaddress\", \"\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\" 0.1 \\\"\\\" \\\"\\\" true\")\n-            + HelpExampleRpc(\"instantsendtoaddress\", \"\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\", 0.1, \\\"donation\\\", \\\"seans outpost\\\"\")\n+            + HelpExampleCli(\"instantsendtoaddress\", \"\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\" 0.1\")\n+            + HelpExampleCli(\"instantsendtoaddress\", \"\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\" 0.1 \\\"donation\\\" \\\"seans outpost\\\"\")\n+            + HelpExampleCli(\"instantsendtoaddress\", \"\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\" 0.1 \\\"\\\" \\\"\\\" true\")\n+            + HelpExampleRpc(\"instantsendtoaddress\", \"\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\", 0.1, \\\"donation\\\", \\\"seans outpost\\\"\")\n         );\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n@@ -600,11 +600,11 @@ UniValue signmessage(const UniValue& params, bool fHelp)\n             \"\\nUnlock the wallet for 30 seconds\\n\"\n             + HelpExampleCli(\"walletpassphrase\", \"\\\"mypassphrase\\\" 30\") +\n             \"\\nCreate the signature\\n\"\n-            + HelpExampleCli(\"signmessage\", \"\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\" \\\"my message\\\"\") +\n+            + HelpExampleCli(\"signmessage\", \"\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\" \\\"my message\\\"\") +\n             \"\\nVerify the signature\\n\"\n-            + HelpExampleCli(\"verifymessage\", \"\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\" \\\"signature\\\" \\\"my message\\\"\") +\n+            + HelpExampleCli(\"verifymessage\", \"\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\" \\\"signature\\\" \\\"my message\\\"\") +\n             \"\\nAs json rpc\\n\"\n-            + HelpExampleRpc(\"signmessage\", \"\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\", \\\"my message\\\"\")\n+            + HelpExampleRpc(\"signmessage\", \"\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\", \\\"my message\\\"\")\n         );\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n@@ -653,13 +653,13 @@ UniValue getreceivedbyaddress(const UniValue& params, bool fHelp)\n             \"amount   (numeric) The total amount in \" + CURRENCY_UNIT + \" received at this address.\\n\"\n             \"\\nExamples:\\n\"\n             \"\\nThe amount from transactions with at least 1 confirmation\\n\"\n-            + HelpExampleCli(\"getreceivedbyaddress\", \"\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\"\") +\n+            + HelpExampleCli(\"getreceivedbyaddress\", \"\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\"\") +\n             \"\\nThe amount including unconfirmed transactions, zero confirmations\\n\"\n-            + HelpExampleCli(\"getreceivedbyaddress\", \"\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\" 0\") +\n+            + HelpExampleCli(\"getreceivedbyaddress\", \"\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\" 0\") +\n             \"\\nThe amount with at least 6 confirmation, very safe\\n\"\n-            + HelpExampleCli(\"getreceivedbyaddress\", \"\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\" 6\") +\n+            + HelpExampleCli(\"getreceivedbyaddress\", \"\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\" 6\") +\n             \"\\nAs a json rpc call\\n\"\n-            + HelpExampleRpc(\"getreceivedbyaddress\", \"\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\", 6\")\n+            + HelpExampleRpc(\"getreceivedbyaddress\", \"\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\", 6\")\n        );\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n@@ -972,11 +972,11 @@ UniValue sendfrom(const UniValue& params, bool fHelp)\n             \"\\\"transactionid\\\"        (string) The transaction id.\\n\"\n             \"\\nExamples:\\n\"\n             \"\\nSend 0.01 \" + CURRENCY_UNIT + \" from the default account to the address, must have at least 1 confirmation\\n\"\n-            + HelpExampleCli(\"sendfrom\", \"\\\"\\\" \\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\" 0.01\") +\n+            + HelpExampleCli(\"sendfrom\", \"\\\"\\\" \\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\" 0.01\") +\n             \"\\nSend 0.01 from the tabby account to the given address, funds must have at least 6 confirmations\\n\"\n-            + HelpExampleCli(\"sendfrom\", \"\\\"tabby\\\" \\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\" 0.01 6 \\\"donation\\\" \\\"seans outpost\\\"\") +\n+            + HelpExampleCli(\"sendfrom\", \"\\\"tabby\\\" \\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\" 0.01 6 \\\"donation\\\" \\\"seans outpost\\\"\") +\n             \"\\nAs a json rpc call\\n\"\n-            + HelpExampleRpc(\"sendfrom\", \"\\\"tabby\\\", \\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\", 0.01, 6, \\\"donation\\\", \\\"seans outpost\\\"\")\n+            + HelpExampleRpc(\"sendfrom\", \"\\\"tabby\\\", \\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\", 0.01, 6, \\\"donation\\\", \\\"seans outpost\\\"\")\n         );\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n@@ -1046,11 +1046,11 @@ UniValue sendmany(const UniValue& params, bool fHelp)\n             \"                                    the number of addresses.\\n\"\n             \"\\nExamples:\\n\"\n             \"\\nSend two amounts to two different addresses:\\n\"\n-            + HelpExampleCli(\"sendmany\", \"\\\"tabby\\\" \\\"{\\\\\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\\\\\":0.01,\\\\\\\"XuQQkwA4FYkq2XERzMY2CiAZhJTEDAbtcg\\\\\\\":0.02}\\\"\") +\n+            + HelpExampleCli(\"sendmany\", \"\\\"tabby\\\" \\\"{\\\\\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\\\\\":0.01,\\\\\\\"XuQQkwA4FYkq2XERzMY2CiAZhJTEDAbtcg\\\\\\\":0.02}\\\"\") +\n             \"\\nSend two amounts to two different addresses setting the confirmation and comment:\\n\"\n-            + HelpExampleCli(\"sendmany\", \"\\\"tabby\\\" \\\"{\\\\\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\\\\\":0.01,\\\\\\\"XuQQkwA4FYkq2XERzMY2CiAZhJTEDAbtcg\\\\\\\":0.02}\\\" 6 \\\"testing\\\"\") +\n+            + HelpExampleCli(\"sendmany\", \"\\\"tabby\\\" \\\"{\\\\\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\\\\\":0.01,\\\\\\\"XuQQkwA4FYkq2XERzMY2CiAZhJTEDAbtcg\\\\\\\":0.02}\\\" 6 \\\"testing\\\"\") +\n             \"\\nAs a json rpc call\\n\"\n-            + HelpExampleRpc(\"sendmany\", \"\\\"tabby\\\", \\\"{\\\\\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\\\\\":0.01,\\\\\\\"XuQQkwA4FYkq2XERzMY2CiAZhJTEDAbtcg\\\\\\\":0.02}\\\", 6, \\\"testing\\\"\")\n+            + HelpExampleRpc(\"sendmany\", \"\\\"tabby\\\", \\\"{\\\\\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\\\\\":0.01,\\\\\\\"XuQQkwA4FYkq2XERzMY2CiAZhJTEDAbtcg\\\\\\\":0.02}\\\", 6, \\\"testing\\\"\")\n         );\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n@@ -2121,7 +2121,7 @@ UniValue walletlock(const UniValue& params, bool fHelp)\n             \"\\nSet the passphrase for 2 minutes to perform a transaction\\n\"\n             + HelpExampleCli(\"walletpassphrase\", \"\\\"my pass phrase\\\" 120\") +\n             \"\\nPerform a send (requires passphrase set)\\n\"\n-            + HelpExampleCli(\"sendtoaddress\", \"\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\" 1.0\") +\n+            + HelpExampleCli(\"sendtoaddress\", \"\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\" 1.0\") +\n             \"\\nClear the passphrase since we are done before 2 minutes is up\\n\"\n             + HelpExampleCli(\"walletlock\", \"\") +\n             \"\\nAs json rpc call\\n\"\n@@ -2520,8 +2520,8 @@ UniValue listunspent(const UniValue& params, bool fHelp)\n \n             \"\\nExamples\\n\"\n             + HelpExampleCli(\"listunspent\", \"\")\n-            + HelpExampleCli(\"listunspent\", \"6 9999999 \\\"[\\\\\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\\\\\",\\\\\\\"XuQQkwA4FYkq2XERzMY2CiAZhJTEDAbtcg\\\\\\\"]\\\"\")\n-            + HelpExampleRpc(\"listunspent\", \"6, 9999999 \\\"[\\\\\\\"XwnLY9Tf7Zsef8gMGL2fhWA9ZmMjt4KPwg\\\\\\\",\\\\\\\"XuQQkwA4FYkq2XERzMY2CiAZhJTEDAbtcg\\\\\\\"]\\\"\")\n+            + HelpExampleCli(\"listunspent\", \"6 9999999 \\\"[\\\\\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\\\\\",\\\\\\\"XuQQkwA4FYkq2XERzMY2CiAZhJTEDAbtcg\\\\\\\"]\\\"\")\n+            + HelpExampleRpc(\"listunspent\", \"6, 9999999 \\\"[\\\\\\\"AK1wpWj5pkTc1Q4VfrTk6pUBCiyZpuJBVP\\\\\\\",\\\\\\\"XuQQkwA4FYkq2XERzMY2CiAZhJTEDAbtcg\\\\\\\"]\\\"\")\n         );\n \n     RPCTypeCheck(params, boost::assign::list_of(UniValue::VNUM)(UniValue::VNUM)(UniValue::VARR));"
      }
    ]
  },
  {
    "sha": "1cb180f90e9cffb4c35d392d1d78aac0606c4400",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxY2IxODBmOTBlOWNmZmI0YzM1ZDM5MmQxZDc4YWFjMDYwNmM0NDAw",
    "commit": {
      "author": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-18T03:44:30Z"
      },
      "committer": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-18T03:44:30Z"
      },
      "message": "change port",
      "tree": {
        "sha": "e278fb9ffe9556f4786b12d5a8d78d1d870dd009",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e278fb9ffe9556f4786b12d5a8d78d1d870dd009"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1cb180f90e9cffb4c35d392d1d78aac0606c4400",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1cb180f90e9cffb4c35d392d1d78aac0606c4400",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1cb180f90e9cffb4c35d392d1d78aac0606c4400",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1cb180f90e9cffb4c35d392d1d78aac0606c4400/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "db9b117955c2adeb2e5ecb9e9aa3eb65dc867eff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db9b117955c2adeb2e5ecb9e9aa3eb65dc867eff",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/db9b117955c2adeb2e5ecb9e9aa3eb65dc867eff"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "8b2f71b64831a4b74ec39b31e7895266899098ef",
        "filename": "contrib/seeds/generate-seeds.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1cb180f90e9cffb4c35d392d1d78aac0606c4400/contrib/seeds/generate-seeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1cb180f90e9cffb4c35d392d1d78aac0606c4400/contrib/seeds/generate-seeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/generate-seeds.py?ref=1cb180f90e9cffb4c35d392d1d78aac0606c4400",
        "patch": "@@ -127,7 +127,7 @@ def main():\n     g.write(' * IPv4 as well as onion addresses are wrapped inside a IPv6 address accordingly.\\n')\n     g.write(' */\\n')\n     with open(os.path.join(indir,'nodes_main.txt'),'r') as f:\n-        process_nodes(g, f, 'pnSeed6_main', 10888)\n+        process_nodes(g, f, 'pnSeed6_main', 40888)\n     g.write('\\n')\n     with open(os.path.join(indir,'nodes_test.txt'),'r') as f:\n         process_nodes(g, f, 'pnSeed6_test', 11888)"
      },
      {
        "sha": "5494be8a90fdb5e8af32cd4356e42406fe8aad72",
        "filename": "contrib/seeds/nodes_main.txt",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1cb180f90e9cffb4c35d392d1d78aac0606c4400/contrib/seeds/nodes_main.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1cb180f90e9cffb4c35d392d1d78aac0606c4400/contrib/seeds/nodes_main.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_main.txt?ref=1cb180f90e9cffb4c35d392d1d78aac0606c4400",
        "patch": "@@ -1,3 +1,3 @@\n-163.172.129.21:10888\n-51.15.224.21:10888\n-51.15.252.244:10888\n+163.172.129.21:40888\n+51.15.224.21:40888\n+51.15.252.244:40888"
      },
      {
        "sha": "31bf4bb70c0cb1e8dd418dc596f22c00db9e5946",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1cb180f90e9cffb4c35d392d1d78aac0606c4400/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1cb180f90e9cffb4c35d392d1d78aac0606c4400/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=1cb180f90e9cffb4c35d392d1d78aac0606c4400",
        "patch": "@@ -110,7 +110,7 @@ class CMainParams : public CChainParams {\n         pchMessageStart[2] = 0xc3;\n         pchMessageStart[3] = 0xd4;\n         vAlertPubKey = ParseHex(\"04b6a3a2911d40d214be61d573bfb1a32ef98b931d9c721f7bbbbdf2692abfd5eb235692d3ad1a81f75157fd0a9d96866b62b717d091f2481b70e3b8d87cc68fd3\");\n-        nDefaultPort = 10888;\n+        nDefaultPort = 40888;\n         nMaxTipAge = 6 * 60 * 60; // ~144 blocks behind -> 2 x fork detection time, was 24 * 60 * 60 in bitcoin\n         nPruneAfterHeight = 100000;\n "
      },
      {
        "sha": "45570d01fe920a9e4d0d6bbb001109db8be4c3e6",
        "filename": "src/chainparamsseeds.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1cb180f90e9cffb4c35d392d1d78aac0606c4400/src/chainparamsseeds.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1cb180f90e9cffb4c35d392d1d78aac0606c4400/src/chainparamsseeds.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsseeds.h?ref=1cb180f90e9cffb4c35d392d1d78aac0606c4400",
        "patch": "@@ -8,9 +8,9 @@\n  * IPv4 as well as onion addresses are wrapped inside a IPv6 address accordingly.\n  */\n static SeedSpec6 pnSeed6_main[] = {\n-        {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xa3,0xac,0x81,0x15}, 10888},\n-        {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x33,0x0f,0xe0,0x15}, 10888},\n-        {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x33,0x0f,0xfc,0xf4}, 10888}\n+        {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xa3,0xac,0x81,0x15}, 40888},\n+        {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x33,0x0f,0xe0,0x15}, 40888},\n+        {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x33,0x0f,0xfc,0xf4}, 40888}\n };\n \n static SeedSpec6 pnSeed6_test[] = {"
      }
    ]
  },
  {
    "sha": "d63f2a0d4ca516b898cd0cfbfb7e72cd6e25614e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNjNmMmEwZDRjYTUxNmI4OThjZDBjZmJmYjdlNzJjZDZlMjU2MTRl",
    "commit": {
      "author": {
        "name": "root",
        "email": "root@phuong.aithercoin.com",
        "date": "2018-05-18T04:02:23Z"
      },
      "committer": {
        "name": "root",
        "email": "root@phuong.aithercoin.com",
        "date": "2018-05-18T04:02:23Z"
      },
      "message": "build helper",
      "tree": {
        "sha": "2ac6a6f1cd9b1186255cc2d839782f87ed662755",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2ac6a6f1cd9b1186255cc2d839782f87ed662755"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d63f2a0d4ca516b898cd0cfbfb7e72cd6e25614e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d63f2a0d4ca516b898cd0cfbfb7e72cd6e25614e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d63f2a0d4ca516b898cd0cfbfb7e72cd6e25614e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d63f2a0d4ca516b898cd0cfbfb7e72cd6e25614e/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "1cb180f90e9cffb4c35d392d1d78aac0606c4400",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1cb180f90e9cffb4c35d392d1d78aac0606c4400",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1cb180f90e9cffb4c35d392d1d78aac0606c4400"
      }
    ],
    "stats": {
      "total": 63,
      "additions": 63,
      "deletions": 0
    },
    "files": [
      {
        "sha": "9424040bda7d4b73aa0cda03ea57318bb4ab16cc",
        "filename": "contrib/build-sh/build_unix.sh",
        "status": "added",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d63f2a0d4ca516b898cd0cfbfb7e72cd6e25614e/contrib/build-sh/build_unix.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d63f2a0d4ca516b898cd0cfbfb7e72cd6e25614e/contrib/build-sh/build_unix.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/build-sh/build_unix.sh?ref=d63f2a0d4ca516b898cd0cfbfb7e72cd6e25614e",
        "patch": "@@ -0,0 +1,29 @@\n+#!/bin/sh\n+echo -ne '\\n' | sudo add-apt-repository ppa:bitcoin/bitcoin\n+sudo apt-get update -y\n+sudo apt-get install -y build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev libboost-all-dev software-properties-common libdb4.8-dev libdb4.8++-dev libminiupnpc-dev libzmq3-dev libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler\n+cd ../..\n+echo '#################################################'\n+echo '# Building DB 4.8.30 NC                         #'\n+echo '#################################################'\n+AIT_ROOT=$(pwd)\n+BDB_PREFIX=\"${AIT_ROOT}/db4\"\n+mkdir -p $BDB_PREFIX\n+wget 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'\n+echo '12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz' | sha256sum -c\n+tar -xzvf db-4.8.30.NC.tar.gz\n+cd db-4.8.30.NC/build_unix/\n+../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX\n+make install\n+echo '#################################################'\n+echo '# Building Aither Core                          #'\n+echo '#################################################'\n+cd $AIT_ROOT\n+./autogen.sh\n+./configure LDFLAGS=\"-L${BDB_PREFIX}/lib/\" CPPFLAGS=\"-I${BDB_PREFIX}/include/\"\n+make\n+mkdir -p release\n+cp src/aitherd $AIT_ROOT/release\n+cp src/aither-tx $AIT_ROOT/release\n+cp src/aither-cli $AIT_ROOT/release\n+cp src/qt/aither-qt $AIT_ROOT/release"
      },
      {
        "sha": "d3c7724ded5ad1c7caa52ea62785e3c5bc453ead",
        "filename": "contrib/build-sh/build_windows_x64.sh",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d63f2a0d4ca516b898cd0cfbfb7e72cd6e25614e/contrib/build-sh/build_windows_x64.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d63f2a0d4ca516b898cd0cfbfb7e72cd6e25614e/contrib/build-sh/build_windows_x64.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/build-sh/build_windows_x64.sh?ref=d63f2a0d4ca516b898cd0cfbfb7e72cd6e25614e",
        "patch": "@@ -0,0 +1,17 @@\n+#!/bin/sh\n+echo '#################################################'\n+echo '# Building Aither Core                          #'\n+echo '#################################################'\n+cd ../..\n+AIT_ROOT = $(pwd)\n+sudo apt-get install g++-mingw-w64-i686 mingw-w64-i686-dev g++-mingw-w64-x86-64 mingw-w64-x86-64-dev\n+cd depends\n+make HOST=x86_64-w64-mingw32 -j4\n+cd ..\n+./autogen.sh\n+./configure --prefix=`pwd`/depends/x86_64-w64-mingw32\n+make\n+cp $AIT_ROOT/src/aitherd.exe $AIT_ROOT/release\n+cp $AIT_ROOT/src/aither-cli.exe $AIT_ROOT/release\n+cp $AIT_ROOT/src/aither-tx.exe $AIT_ROOT/release\n+cp $AIT_ROOT/src/qt/aither-qt.exe $AIT_ROOT/release"
      },
      {
        "sha": "b09eec90610c8d7e81e025df75de9dedf7f638b4",
        "filename": "contrib/build-sh/build_windows_x86.sh",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d63f2a0d4ca516b898cd0cfbfb7e72cd6e25614e/contrib/build-sh/build_windows_x86.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d63f2a0d4ca516b898cd0cfbfb7e72cd6e25614e/contrib/build-sh/build_windows_x86.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/build-sh/build_windows_x86.sh?ref=d63f2a0d4ca516b898cd0cfbfb7e72cd6e25614e",
        "patch": "@@ -0,0 +1,17 @@\n+#!/bin/sh\n+echo '#################################################'\n+echo '# Building Aither Core                          #'\n+echo '#################################################'\n+cd ../..\n+AIT_ROOT = $(pwd)\n+sudo apt-get install g++-mingw-w64-i686 mingw-w64-i686-dev g++-mingw-w64-x86-64 mingw-w64-x86-64-dev\n+cd depends\n+make HOST=i686-w64-mingw32 -j4\n+cd ..\n+./autogen.sh\n+./configure --prefix=`pwd`/depends/i686-w64-mingw32\n+make\n+cp $AIT_ROOT/src/aitherd.exe $AIT_ROOT/release\n+cp $AIT_ROOT/src/aither-cli.exe $AIT_ROOT/release\n+cp $AIT_ROOT/src/aither-tx.exe $AIT_ROOT/release\n+cp $AIT_ROOT/src/qt/aither-qt.exe $AIT_ROOT/release"
      }
    ]
  },
  {
    "sha": "03ea9b72156968f28db22b8ab2f278a49f4b0b1b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowM2VhOWI3MjE1Njk2OGYyOGRiMjJiOGFiMmYyNzhhNDlmNGIwYjFi",
    "commit": {
      "author": {
        "name": "Harry McKinnon",
        "email": "38744799+harrymckinnon86@users.noreply.github.com",
        "date": "2018-05-18T04:43:54Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2018-05-18T04:43:54Z"
      },
      "message": "Update build_unix.sh",
      "tree": {
        "sha": "674eecfba19908bd1a8a3c49382ae19eeccbf4ba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/674eecfba19908bd1a8a3c49382ae19eeccbf4ba"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/03ea9b72156968f28db22b8ab2f278a49f4b0b1b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa/loKCRBK7hj4Ov3rIwAAdHIIAJGofjQRY6asNgWDJ0LRwkNe\nlbLdta0P/C0ViQzbNaVHf7Wo0WceLeg8LoGkEGhbjCcwNPY1zRP2pAJ9buLBerhk\nyPFr5z49jEygZY7YZ+Wd18Ch6aB5ap2BZKkbH+j0z538aGLXBbIZ0rhCcHETh9mS\n0WLuUGleqQtbuOo3gulMWs+ZJs40ldG9mH9rByHNZKwa8GcewgEI5cysMioQokRQ\nNSvzm6GBvrWNcq8iSBt7RqPG0Lc5lBYqXdzCIUNjLSCPDkYutIfBOQ2g9r5nd8N+\nbyGLaRVOE9SlYXyJDiRuOPsrt8V7wvt9xqQyF0yuKPsHJRuvNZHLjnw5SjNqKs0=\n=JIll\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 674eecfba19908bd1a8a3c49382ae19eeccbf4ba\nparent d63f2a0d4ca516b898cd0cfbfb7e72cd6e25614e\nauthor Harry McKinnon <38744799+harrymckinnon86@users.noreply.github.com> 1526618634 +0700\ncommitter GitHub <noreply@github.com> 1526618634 +0700\n\nUpdate build_unix.sh"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/03ea9b72156968f28db22b8ab2f278a49f4b0b1b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/03ea9b72156968f28db22b8ab2f278a49f4b0b1b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/03ea9b72156968f28db22b8ab2f278a49f4b0b1b/comments",
    "author": null,
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d63f2a0d4ca516b898cd0cfbfb7e72cd6e25614e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d63f2a0d4ca516b898cd0cfbfb7e72cd6e25614e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d63f2a0d4ca516b898cd0cfbfb7e72cd6e25614e"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2acb14f879311c68a469142633740261cda80f16",
        "filename": "contrib/build-sh/build_unix.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/03ea9b72156968f28db22b8ab2f278a49f4b0b1b/contrib/build-sh/build_unix.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/03ea9b72156968f28db22b8ab2f278a49f4b0b1b/contrib/build-sh/build_unix.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/build-sh/build_unix.sh?ref=03ea9b72156968f28db22b8ab2f278a49f4b0b1b",
        "patch": "@@ -19,6 +19,7 @@ echo '#################################################'\n echo '# Building Aither Core                          #'\n echo '#################################################'\n cd $AIT_ROOT\n+chmod ugo+x autogen.sh\n ./autogen.sh\n ./configure LDFLAGS=\"-L${BDB_PREFIX}/lib/\" CPPFLAGS=\"-I${BDB_PREFIX}/include/\"\n make"
      }
    ]
  },
  {
    "sha": "5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NTE0Y2Y4MDE5ZWNmN2JlMWE1ZTI5MmRkNmNhODZiM2NmOWI4ZmM5",
    "commit": {
      "author": {
        "name": "root",
        "email": "root@phuong.aithercoin.com",
        "date": "2018-05-18T05:02:20Z"
      },
      "committer": {
        "name": "root",
        "email": "root@phuong.aithercoin.com",
        "date": "2018-05-18T05:02:20Z"
      },
      "message": "chmod",
      "tree": {
        "sha": "b28fd04f0fcb73ceb938eeec389f69a313629bd8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b28fd04f0fcb73ceb938eeec389f69a313629bd8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "03ea9b72156968f28db22b8ab2f278a49f4b0b1b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/03ea9b72156968f28db22b8ab2f278a49f4b0b1b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/03ea9b72156968f28db22b8ab2f278a49f4b0b1b"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": [
      {
        "sha": null,
        "filename": "autogen.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/autogen.sh?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "contrib/devtools/clang-format.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/devtools/clang-format.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/devtools/clang-format.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/clang-format.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "contrib/devtools/fix-copyright-headers.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/devtools/fix-copyright-headers.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/devtools/fix-copyright-headers.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/fix-copyright-headers.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "contrib/devtools/git-subtree-check.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/devtools/git-subtree-check.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/devtools/git-subtree-check.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/git-subtree-check.sh?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "contrib/devtools/github-merge.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/devtools/github-merge.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/devtools/github-merge.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.sh?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "contrib/devtools/optimize-pngs.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/devtools/optimize-pngs.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/devtools/optimize-pngs.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/optimize-pngs.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "contrib/devtools/security-check.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/devtools/security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/devtools/security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/security-check.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "contrib/devtools/symbol-check.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "contrib/devtools/test-security-check.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/devtools/test-security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/devtools/test-security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test-security-check.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "contrib/devtools/update-translations.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/devtools/update-translations.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/devtools/update-translations.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/update-translations.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "contrib/linearize/linearize-data.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/linearize/linearize-data.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/linearize/linearize-data.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-data.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "contrib/linearize/linearize-hashes.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/linearize/linearize-hashes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/linearize/linearize-hashes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-hashes.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "contrib/macdeploy/detached-sig-apply.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/macdeploy/detached-sig-apply.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/macdeploy/detached-sig-apply.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-apply.sh?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "contrib/macdeploy/detached-sig-create.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/macdeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/macdeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-create.sh?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "contrib/qos/tc.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/qos/tc.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/qos/tc.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/tc.sh?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "contrib/qt_translations.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/qt_translations.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/qt_translations.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qt_translations.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "contrib/seeds/generate-seeds.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/seeds/generate-seeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/seeds/generate-seeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/generate-seeds.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "contrib/seeds/makeseeds.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/seeds/makeseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/seeds/makeseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/makeseeds.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "contrib/spendfrom/setup.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/spendfrom/setup.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/spendfrom/setup.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/spendfrom/setup.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "contrib/spendfrom/spendfrom.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/spendfrom/spendfrom.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/spendfrom/spendfrom.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/spendfrom/spendfrom.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "contrib/testgen/base58.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/testgen/base58.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/testgen/base58.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/base58.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "contrib/testgen/gen_base58_test_vectors.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/testgen/gen_base58_test_vectors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/testgen/gen_base58_test_vectors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/gen_base58_test_vectors.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "contrib/tidy_datadir.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/tidy_datadir.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/tidy_datadir.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/tidy_datadir.sh?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "contrib/verify-commits/gpg.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/verify-commits/gpg.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/verify-commits/gpg.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/gpg.sh?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "contrib/verify-commits/pre-push-hook.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/verify-commits/pre-push-hook.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/verify-commits/pre-push-hook.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/pre-push-hook.sh?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "contrib/verify-commits/verify-commits.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/verify-commits/verify-commits.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/verify-commits/verify-commits.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/verify-commits.sh?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "contrib/verifysfbinaries/verify.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/verifysfbinaries/verify.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/verifysfbinaries/verify.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifysfbinaries/verify.sh?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "contrib/zmq/zmq_sub.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/zmq/zmq_sub.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/contrib/zmq/zmq_sub.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/abandonconflict.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/abandonconflict.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/abandonconflict.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/abandonconflict.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/addressindex.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/addressindex.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/addressindex.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/addressindex.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/bip65-cltv-p2p.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/bip65-cltv-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/bip65-cltv-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip65-cltv-p2p.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/bip65-cltv.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/bip65-cltv.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/bip65-cltv.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip65-cltv.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/bip68-112-113-p2p.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/bip68-112-113-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/bip68-112-113-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip68-112-113-p2p.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/bip68-sequence.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/bip68-sequence.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/bip68-sequence.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip68-sequence.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/bip9-softforks.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/bip9-softforks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/bip9-softforks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip9-softforks.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/bipdersig-p2p.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/bipdersig-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/bipdersig-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bipdersig-p2p.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/bipdersig.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/bipdersig.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/bipdersig.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bipdersig.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/blockchain.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/blockchain.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/blockchain.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/blockchain.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/decodescript.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/decodescript.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/decodescript.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/decodescript.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/disablewallet.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/disablewallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/disablewallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/disablewallet.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/forknotify.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/forknotify.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/forknotify.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/forknotify.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/fundrawtransaction.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/fundrawtransaction.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/getblocktemplate_longpoll.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/getblocktemplate_longpoll.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/getblocktemplate_longpoll.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getblocktemplate_longpoll.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/getblocktemplate_proposals.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/getblocktemplate_proposals.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/getblocktemplate_proposals.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getblocktemplate_proposals.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/getchaintips.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/getchaintips.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/getchaintips.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getchaintips.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/httpbasics.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/httpbasics.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/httpbasics.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/httpbasics.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/invalidateblock.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/invalidateblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/invalidateblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidateblock.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/invalidblockrequest.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/invalidblockrequest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/invalidblockrequest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidblockrequest.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/invalidtxrequest.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/invalidtxrequest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/invalidtxrequest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidtxrequest.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/keypool.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/keypool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/keypool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/keypool.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/listtransactions.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/listtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/listtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/listtransactions.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/maxblocksinflight.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/maxblocksinflight.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/maxblocksinflight.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/maxblocksinflight.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/maxuploadtarget.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/maxuploadtarget.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/maxuploadtarget.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/maxuploadtarget.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/mempool_limit.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/mempool_limit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/mempool_limit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_limit.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/mempool_packages.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_packages.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/mempool_reorg.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/mempool_reorg.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/mempool_reorg.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_reorg.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/mempool_resurrect_test.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/mempool_resurrect_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/mempool_resurrect_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_resurrect_test.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/mempool_spendcoinbase.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/mempool_spendcoinbase.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/mempool_spendcoinbase.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_spendcoinbase.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/merkle_blocks.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/merkle_blocks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/merkle_blocks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/merkle_blocks.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/multi_rpc.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/multi_rpc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/multi_rpc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/multi_rpc.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/nodehandling.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/nodehandling.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/nodehandling.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/nodehandling.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/p2p-acceptblock.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/p2p-acceptblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/p2p-acceptblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-acceptblock.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/p2p-fullblocktest.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/p2p-fullblocktest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/p2p-fullblocktest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-fullblocktest.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/p2p-versionbits-warning.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/p2p-versionbits-warning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/p2p-versionbits-warning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-versionbits-warning.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/prioritise_transaction.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/prioritise_transaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/prioritise_transaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/prioritise_transaction.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/proxy_test.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/proxy_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/proxy_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/proxy_test.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/pruning.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/pruning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/pruning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/pruning.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/rawtransactions.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/rawtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/rawtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rawtransactions.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/receivedby.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/receivedby.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/receivedby.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/receivedby.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/reindex.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/reindex.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/reindex.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/reindex.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/replace-by-fee.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/replace-by-fee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/replace-by-fee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/replace-by-fee.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/rest.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/rest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/rest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rest.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/rpcbind_test.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/rpcbind_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/rpcbind_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rpcbind_test.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/sendheaders.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/sendheaders.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/sendheaders.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/sendheaders.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/signrawtransactions.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/signrawtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/signrawtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/signrawtransactions.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/smartfees.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/smartfees.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/smartfees.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/smartfees.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/spentindex.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/spentindex.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/spentindex.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/spentindex.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/test_framework/__init__.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/test_framework/__init__.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/test_framework/__init__.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/__init__.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/test_framework/authproxy.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/test_framework/authproxy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/test_framework/authproxy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/authproxy.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/test_framework/bignum.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/test_framework/bignum.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/test_framework/bignum.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/bignum.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/test_framework/blockstore.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/test_framework/blockstore.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/test_framework/blockstore.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/blockstore.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/test_framework/blocktools.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/test_framework/blocktools.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/test_framework/blocktools.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/blocktools.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/test_framework/comptool.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/test_framework/comptool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/test_framework/comptool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/comptool.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/test_framework/coverage.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/test_framework/coverage.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/test_framework/coverage.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/coverage.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/test_framework/key.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/test_framework/key.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/test_framework/key.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/key.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/test_framework/mininode.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/test_framework/mininode.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/test_framework/mininode.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/mininode.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/test_framework/netutil.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/test_framework/netutil.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/test_framework/netutil.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/netutil.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/test_framework/script.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/test_framework/script.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/test_framework/script.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/script.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/test_framework/socks5.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/test_framework/socks5.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/test_framework/socks5.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/socks5.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/test_framework/test_framework.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/test_framework.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/timestampindex.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/timestampindex.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/timestampindex.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/timestampindex.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/txindex.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/txindex.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/txindex.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/txindex.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/txn_clone.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/txn_clone.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/txn_clone.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/txn_clone.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/txn_doublespend.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/txn_doublespend.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/txn_doublespend.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/txn_doublespend.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/wallet.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/walletbackup.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/walletbackup.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/walletbackup.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/walletbackup.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/zapwallettxes.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/zapwallettxes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/zapwallettxes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/zapwallettxes.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "qa/rpc-tests/zmq_test.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/zmq_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/qa/rpc-tests/zmq_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/zmq_test.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "share/genbuild.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/share/genbuild.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/share/genbuild.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/genbuild.sh?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "share/qt/extract_strings_qt.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/share/qt/extract_strings_qt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/share/qt/extract_strings_qt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/extract_strings_qt.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "share/rpcuser/rpcuser.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/share/rpcuser/rpcuser.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/share/rpcuser/rpcuser.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/rpcuser/rpcuser.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "src/qt/res/movies/makespinner.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/src/qt/res/movies/makespinner.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/src/qt/res/movies/makespinner.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/makespinner.sh?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "src/secp256k1/autogen.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/src/secp256k1/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/src/secp256k1/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/autogen.sh?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "src/test/bctest.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/src/test/bctest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/src/test/bctest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bctest.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "src/test/bitcoin-util-test.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/src/test/bitcoin-util-test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/src/test/bitcoin-util-test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bitcoin-util-test.py?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      },
      {
        "sha": null,
        "filename": "src/univalue/autogen.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/src/univalue/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9/src/univalue/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/autogen.sh?ref=5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      }
    ]
  },
  {
    "sha": "18492b8e18863d9cf373024e1b035caca042f7af",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxODQ5MmI4ZTE4ODYzZDljZjM3MzAyNGUxYjAzNWNhY2EwNDJmN2Fm",
    "commit": {
      "author": {
        "name": "root",
        "email": "root@phuong.aithercoin.com",
        "date": "2018-05-18T06:46:21Z"
      },
      "committer": {
        "name": "root",
        "email": "root@phuong.aithercoin.com",
        "date": "2018-05-18T06:46:21Z"
      },
      "message": "change permission",
      "tree": {
        "sha": "89c64784e40825f299a0a4a73b7237dc77710b60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/89c64784e40825f299a0a4a73b7237dc77710b60"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/18492b8e18863d9cf373024e1b035caca042f7af",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/18492b8e18863d9cf373024e1b035caca042f7af",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/18492b8e18863d9cf373024e1b035caca042f7af",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/18492b8e18863d9cf373024e1b035caca042f7af/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5514cf8019ecf7be1a5e292dd6ca86b3cf9b8fc9"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "a100203e98f0d5979ed3d9f208d6c982cea36fea",
        "filename": "contrib/build-sh/build_windows_x64.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/18492b8e18863d9cf373024e1b035caca042f7af/contrib/build-sh/build_windows_x64.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/18492b8e18863d9cf373024e1b035caca042f7af/contrib/build-sh/build_windows_x64.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/build-sh/build_windows_x64.sh?ref=18492b8e18863d9cf373024e1b035caca042f7af",
        "patch": "@@ -3,7 +3,7 @@ echo '#################################################'\n echo '# Building Aither Core                          #'\n echo '#################################################'\n cd ../..\n-AIT_ROOT = $(pwd)\n+AIT_ROOT=$(pwd)\n sudo apt-get install g++-mingw-w64-i686 mingw-w64-i686-dev g++-mingw-w64-x86-64 mingw-w64-x86-64-dev\n cd depends\n make HOST=x86_64-w64-mingw32 -j4"
      },
      {
        "sha": "c1d25f6aa3bb482ae35914810bcd0ab8d0b148cf",
        "filename": "contrib/build-sh/build_windows_x86.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/18492b8e18863d9cf373024e1b035caca042f7af/contrib/build-sh/build_windows_x86.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/18492b8e18863d9cf373024e1b035caca042f7af/contrib/build-sh/build_windows_x86.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/build-sh/build_windows_x86.sh?ref=18492b8e18863d9cf373024e1b035caca042f7af",
        "patch": "@@ -3,7 +3,7 @@ echo '#################################################'\n echo '# Building Aither Core                          #'\n echo '#################################################'\n cd ../..\n-AIT_ROOT = $(pwd)\n+AIT_ROOT=$(pwd)\n sudo apt-get install g++-mingw-w64-i686 mingw-w64-i686-dev g++-mingw-w64-x86-64 mingw-w64-x86-64-dev\n cd depends\n make HOST=i686-w64-mingw32 -j4"
      },
      {
        "sha": null,
        "filename": "depends/config.guess",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/18492b8e18863d9cf373024e1b035caca042f7af/depends/config.guess",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/18492b8e18863d9cf373024e1b035caca042f7af/depends/config.guess",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.guess?ref=18492b8e18863d9cf373024e1b035caca042f7af"
      },
      {
        "sha": null,
        "filename": "depends/config.site.in",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/18492b8e18863d9cf373024e1b035caca042f7af/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/18492b8e18863d9cf373024e1b035caca042f7af/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=18492b8e18863d9cf373024e1b035caca042f7af"
      },
      {
        "sha": null,
        "filename": "depends/config.sub",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/18492b8e18863d9cf373024e1b035caca042f7af/depends/config.sub",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/18492b8e18863d9cf373024e1b035caca042f7af/depends/config.sub",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.sub?ref=18492b8e18863d9cf373024e1b035caca042f7af"
      }
    ]
  },
  {
    "sha": "99de4b8c55b953b6b4df1ebf39afb8b64ab775a3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OWRlNGI4YzU1Yjk1M2I2YjRkZjFlYmYzOWFmYjhiNjRhYjc3NWEz",
    "commit": {
      "author": {
        "name": "Harry McKinnon",
        "email": "38744799+harrymckinnon86@users.noreply.github.com",
        "date": "2018-05-19T11:29:30Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2018-05-19T11:29:30Z"
      },
      "message": "Update build_unix.sh",
      "tree": {
        "sha": "5c6b830734c7ef5cb15ce76728807b498f051127",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5c6b830734c7ef5cb15ce76728807b498f051127"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/99de4b8c55b953b6b4df1ebf39afb8b64ab775a3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbAAqaCRBK7hj4Ov3rIwAAdHIIAHCH8GTNxaaDnq2cqjT3OjIW\nhy38Au1xErJNvGLA2eUIf2ejvX5g+X/nAU0apM6e3FXG0jGPpGCt1aC3cJtVXQSu\nYjUA4vHsw7lvO7LV4jDc/81ttXuKYV9kCya7mo9ksmNV8709LUnuvqU33PNho04y\nJM6C4e6/IptRDDyjx4McR1irxb6VRwTKFPDZBT/hyTcQqRz+8RU+dXo5NRYRNgZ9\no0RlPqB0OEEMCViox1TsPisWsoseSnjuJ9xZh0Q3fZxD8V8ozj4ObHG3aCmDv2Fs\nsQLqaMFDOIorl5msZYDtpMi+Sj+3hg3pMlTp8XwJ7AL01Ll5slTxB0z1V5Y/6MA=\n=svM2\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 5c6b830734c7ef5cb15ce76728807b498f051127\nparent 18492b8e18863d9cf373024e1b035caca042f7af\nauthor Harry McKinnon <38744799+harrymckinnon86@users.noreply.github.com> 1526729370 +0700\ncommitter GitHub <noreply@github.com> 1526729370 +0700\n\nUpdate build_unix.sh"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99de4b8c55b953b6b4df1ebf39afb8b64ab775a3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/99de4b8c55b953b6b4df1ebf39afb8b64ab775a3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99de4b8c55b953b6b4df1ebf39afb8b64ab775a3/comments",
    "author": null,
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "18492b8e18863d9cf373024e1b035caca042f7af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/18492b8e18863d9cf373024e1b035caca042f7af",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/18492b8e18863d9cf373024e1b035caca042f7af"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "17f8d82791c04faa4e5c7a64153f82080b6a54b4",
        "filename": "contrib/build-sh/build_unix.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99de4b8c55b953b6b4df1ebf39afb8b64ab775a3/contrib/build-sh/build_unix.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99de4b8c55b953b6b4df1ebf39afb8b64ab775a3/contrib/build-sh/build_unix.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/build-sh/build_unix.sh?ref=99de4b8c55b953b6b4df1ebf39afb8b64ab775a3",
        "patch": "@@ -1,7 +1,7 @@\n #!/bin/sh\n echo -ne '\\n' | sudo add-apt-repository ppa:bitcoin/bitcoin\n sudo apt-get update -y\n-sudo apt-get install -y build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev libboost-all-dev software-properties-common libdb4.8-dev libdb4.8++-dev libminiupnpc-dev libzmq3-dev libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler\n+sudo apt-get install -y build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev libboost-all-dev software-properties-common libdb4.8-dev libdb4.8++-dev libminiupnpc-dev libzmq3-dev libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler autoconf\n cd ../..\n echo '#################################################'\n echo '# Building DB 4.8.30 NC                         #'"
      }
    ]
  },
  {
    "sha": "899cf0e5af524f12054c89577e63b4e3f9a04dcf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OTljZjBlNWFmNTI0ZjEyMDU0Yzg5NTc3ZTYzYjRlM2Y5YTA0ZGNm",
    "commit": {
      "author": {
        "name": "Harry McKinnon",
        "email": "38744799+harrymckinnon86@users.noreply.github.com",
        "date": "2018-05-19T11:35:13Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2018-05-19T11:35:13Z"
      },
      "message": "Update build_unix.sh",
      "tree": {
        "sha": "871a756bd9fbc7f2e46a87a1357d2a9e0ccf5540",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/871a756bd9fbc7f2e46a87a1357d2a9e0ccf5540"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/899cf0e5af524f12054c89577e63b4e3f9a04dcf",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbAAvxCRBK7hj4Ov3rIwAAdHIIAFD5CXNQJim7rGK69RtA7j30\nMZluGpZ5b5hujW12E3YER93rY6hGONqjNTKEk8cNq76Um6e49OAH70Sbcg/Yk09q\nh9p80aaLlRGVrYfN/f5b35IMtPAePH3r9pq7pUn6RLkfJveSybp8twfe8BBG58wG\npLT0sryoyQ6tWmoevDbN+raZf19dL5wgsjBFGDVG00/eufChXWua5t3Rf4Qh6a7X\n9kzo8sV+L4uPrTOul/xD0r/YzLCkR2qWp2BMcNDWv7M0zJArrRJNlIBnef6eMH1i\nisYjgLdS4bUqgjozwmOiU/A+0ZDU9zqgXbmtIFGoXr/Kuy5JI7rL2RV9HnZZo/s=\n=iZAk\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 871a756bd9fbc7f2e46a87a1357d2a9e0ccf5540\nparent 99de4b8c55b953b6b4df1ebf39afb8b64ab775a3\nauthor Harry McKinnon <38744799+harrymckinnon86@users.noreply.github.com> 1526729713 +0700\ncommitter GitHub <noreply@github.com> 1526729713 +0700\n\nUpdate build_unix.sh"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/899cf0e5af524f12054c89577e63b4e3f9a04dcf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/899cf0e5af524f12054c89577e63b4e3f9a04dcf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/899cf0e5af524f12054c89577e63b4e3f9a04dcf/comments",
    "author": null,
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "99de4b8c55b953b6b4df1ebf39afb8b64ab775a3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99de4b8c55b953b6b4df1ebf39afb8b64ab775a3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/99de4b8c55b953b6b4df1ebf39afb8b64ab775a3"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 8,
      "deletions": 1
    },
    "files": [
      {
        "sha": "572d02fce1290c1c56a25fe3a21a01816f6fb952",
        "filename": "contrib/build-sh/build_unix.sh",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/899cf0e5af524f12054c89577e63b4e3f9a04dcf/contrib/build-sh/build_unix.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/899cf0e5af524f12054c89577e63b4e3f9a04dcf/contrib/build-sh/build_unix.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/build-sh/build_unix.sh?ref=899cf0e5af524f12054c89577e63b4e3f9a04dcf",
        "patch": "@@ -1,7 +1,14 @@\n #!/bin/sh\n echo -ne '\\n' | sudo add-apt-repository ppa:bitcoin/bitcoin\n sudo apt-get update -y\n-sudo apt-get install -y build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev libboost-all-dev software-properties-common libdb4.8-dev libdb4.8++-dev libminiupnpc-dev libzmq3-dev libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler autoconf\n+sudo apt-get install -y build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils autoconf\n+sudo apt-get install -y libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev\n+sudo apt-get install -y libboost-all-dev\n+sudo apt-get install -y libdb4.8-dev libdb4.8++-dev\n+sudo apt-get install -y libminiupnpc-dev\n+sudo apt-get install -y libzmq3-dev\n+sudo apt-get install -y libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler\n+sudo apt-get install -y libqrencode-dev\n cd ../..\n echo '#################################################'\n echo '# Building DB 4.8.30 NC                         #'"
      }
    ]
  },
  {
    "sha": "26904a82ec33a24ec6d260783b24e2f2f2f4660a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNjkwNGE4MmVjMzNhMjRlYzZkMjYwNzgzYjI0ZTJmMmYyZjQ2NjBh",
    "commit": {
      "author": {
        "name": "root",
        "email": "root@phuong.aithercoin.com",
        "date": "2018-05-23T03:40:07Z"
      },
      "committer": {
        "name": "root",
        "email": "root@phuong.aithercoin.com",
        "date": "2018-05-23T03:40:07Z"
      },
      "message": "fix path build windows",
      "tree": {
        "sha": "a8cee80643d4f450f894ada16e38a1a0607aec21",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a8cee80643d4f450f894ada16e38a1a0607aec21"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/26904a82ec33a24ec6d260783b24e2f2f2f4660a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26904a82ec33a24ec6d260783b24e2f2f2f4660a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/26904a82ec33a24ec6d260783b24e2f2f2f4660a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26904a82ec33a24ec6d260783b24e2f2f2f4660a/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "899cf0e5af524f12054c89577e63b4e3f9a04dcf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/899cf0e5af524f12054c89577e63b4e3f9a04dcf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/899cf0e5af524f12054c89577e63b4e3f9a04dcf"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 10,
      "deletions": 8
    },
    "files": [
      {
        "sha": "21e5b352ee6f3f8064156373f92fec4883940794",
        "filename": "contrib/build-sh/build_windows_x64.sh",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26904a82ec33a24ec6d260783b24e2f2f2f4660a/contrib/build-sh/build_windows_x64.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26904a82ec33a24ec6d260783b24e2f2f2f4660a/contrib/build-sh/build_windows_x64.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/build-sh/build_windows_x64.sh?ref=26904a82ec33a24ec6d260783b24e2f2f2f4660a",
        "patch": "@@ -11,7 +11,8 @@ cd ..\n ./autogen.sh\n ./configure --prefix=`pwd`/depends/x86_64-w64-mingw32\n make\n-cp $AIT_ROOT/src/aitherd.exe $AIT_ROOT/release\n-cp $AIT_ROOT/src/aither-cli.exe $AIT_ROOT/release\n-cp $AIT_ROOT/src/aither-tx.exe $AIT_ROOT/release\n-cp $AIT_ROOT/src/qt/aither-qt.exe $AIT_ROOT/release\n+mkdir -p $AIT_ROOT/release/\n+cp $AIT_ROOT/src/aitherd.exe $AIT_ROOT/release/\n+cp $AIT_ROOT/src/aither-cli.exe $AIT_ROOT/release/\n+cp $AIT_ROOT/src/aither-tx.exe $AIT_ROOT/release/\n+cp $AIT_ROOT/src/qt/aither-qt.exe $AIT_ROOT/release/"
      },
      {
        "sha": "305417e99c232b542df85781d68418c0bcc7ff69",
        "filename": "contrib/build-sh/build_windows_x86.sh",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26904a82ec33a24ec6d260783b24e2f2f2f4660a/contrib/build-sh/build_windows_x86.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26904a82ec33a24ec6d260783b24e2f2f2f4660a/contrib/build-sh/build_windows_x86.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/build-sh/build_windows_x86.sh?ref=26904a82ec33a24ec6d260783b24e2f2f2f4660a",
        "patch": "@@ -11,7 +11,8 @@ cd ..\n ./autogen.sh\n ./configure --prefix=`pwd`/depends/i686-w64-mingw32\n make\n-cp $AIT_ROOT/src/aitherd.exe $AIT_ROOT/release\n-cp $AIT_ROOT/src/aither-cli.exe $AIT_ROOT/release\n-cp $AIT_ROOT/src/aither-tx.exe $AIT_ROOT/release\n-cp $AIT_ROOT/src/qt/aither-qt.exe $AIT_ROOT/release\n+mkdir -p $AIT_ROOT/release/\n+cp $AIT_ROOT/src/aitherd.exe $AIT_ROOT/release/\n+cp $AIT_ROOT/src/aither-cli.exe $AIT_ROOT/release/\n+cp $AIT_ROOT/src/aither-tx.exe $AIT_ROOT/release/\n+cp $AIT_ROOT/src/qt/aither-qt.exe $AIT_ROOT/release/"
      }
    ]
  },
  {
    "sha": "e5b2dab678e74b1a7aff1f531300af2f32953cb0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNWIyZGFiNjc4ZTc0YjFhN2FmZjFmNTMxMzAwYWYyZjMyOTUzY2Iw",
    "commit": {
      "author": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-23T09:44:43Z"
      },
      "committer": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-23T09:44:43Z"
      },
      "message": "fix hard",
      "tree": {
        "sha": "7a8e2ebfca73a7ea17d8f3f9637f5037a929700b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7a8e2ebfca73a7ea17d8f3f9637f5037a929700b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e5b2dab678e74b1a7aff1f531300af2f32953cb0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5b2dab678e74b1a7aff1f531300af2f32953cb0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e5b2dab678e74b1a7aff1f531300af2f32953cb0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5b2dab678e74b1a7aff1f531300af2f32953cb0/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "26904a82ec33a24ec6d260783b24e2f2f2f4660a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26904a82ec33a24ec6d260783b24e2f2f2f4660a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/26904a82ec33a24ec6d260783b24e2f2f2f4660a"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 9,
      "deletions": 11
    },
    "files": [
      {
        "sha": "f118a79fcd0f8a443c80097472db9f99db51f431",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 7,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5b2dab678e74b1a7aff1f531300af2f32953cb0/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5b2dab678e74b1a7aff1f531300af2f32953cb0/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=e5b2dab678e74b1a7aff1f531300af2f32953cb0",
        "patch": "@@ -154,7 +154,7 @@ class CMainParams : public CChainParams {\n             boost::assign::map_list_of\n              (    0, uint256S(\"0x00000b0842cc38c409e404817ee8eadce259494afb87619e127b061602362851\")),\n             1522050118, // * UNIX timestamp of last checkpoint block\n-            163797,     // * total number of transactions between genesis and last checkpoint\n+            0,     // * total number of transactions between genesis and last checkpoint\n                         //   (the tx=... number in the SetBestChain debug.log lines)\n             2800        // * estimated number of transactions per day after checkpoint\n         };\n@@ -250,12 +250,10 @@ class CTestNetParams : public CChainParams {\n \n         checkpointData = (CCheckpointData) {\n             boost::assign::map_list_of\n-            (  500, uint256S(\"0x0000000a074e448fcae79552631e7e90047f55e272e85f3db93df86c4bcd4fc1\"))\n-            ( 1000, uint256S(\"0x0000000302c5f739c94680415cfed780e5f90f6ab6b62e39c8cac9dc267acffd\")),\n-            1522711101, // * UNIX timestamp of last checkpoint block\n-            1063,       // * total number of transactions between genesis and last checkpoint\n-                        //   (the tx=... number in the SetBestChain debug.log lines)\n-            500         // * estimated number of transactions per day after checkpoint\n+                    ( 0, uint256S(\"0x00000dbc9aa1686b4dfb177300185c6a3e0b13d1d4d346c5bccdd19fdf9ebc5a\")),\n+            0,\n+            0,\n+            0\n         };\n \n     }"
      },
      {
        "sha": "0ae7d07f93b994c257cb8f9fab8c72cb74606113",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5b2dab678e74b1a7aff1f531300af2f32953cb0/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5b2dab678e74b1a7aff1f531300af2f32953cb0/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=e5b2dab678e74b1a7aff1f531300af2f32953cb0",
        "patch": "@@ -1748,9 +1748,9 @@ CAmount GetBlockSubsidy(int nPrevBits, int nPrevHeight, const Consensus::Params&\n \n     CAmount nSubsidy = 15 * COIN;\n \n-    // yearly decline of production by ~8.333% per year until reached max coin ~31M.\n+    // yearly decline of production by 6.666% per year until reached max coin 18M.\n     for (int i = consensusParams.nSubsidyHalvingInterval; i <= nPrevHeight; i += consensusParams.nSubsidyHalvingInterval) {\n-        nSubsidy -= nSubsidy/12;\n+        nSubsidy -= nSubsidy/15;\n     }\n \n     return fSuperblockPartOnly ? 0 : nSubsidy;"
      },
      {
        "sha": "490d02feda944f17b53ba97deb26156bc29104af",
        "filename": "src/pow.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5b2dab678e74b1a7aff1f531300af2f32953cb0/src/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5b2dab678e74b1a7aff1f531300af2f32953cb0/src/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.cpp?ref=e5b2dab678e74b1a7aff1f531300af2f32953cb0",
        "patch": "@@ -142,11 +142,11 @@ unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHead\n \n     // mainnet/regtest share a configuration\n     if (Params().NetworkIDString() == CBaseChainParams::MAIN || Params().NetworkIDString() == CBaseChainParams::REGTEST) {\n-        if (pindexLast->nHeight + 1 >= 700) retarget = DIFF_DGW;\n+        if (pindexLast->nHeight + 1 >= 15200) retarget = DIFF_DGW;\n         else retarget = DIFF_BTC;\n     // testnet -- we want a lot of coins in existance early on\n     } else {\n-        if (pindexLast->nHeight + 1 >= 650) retarget = DIFF_DGW;\n+        if (pindexLast->nHeight + 1 >= 3000) retarget = DIFF_DGW;\n         else retarget = DIFF_BTC;\n     }\n "
      }
    ]
  },
  {
    "sha": "6414f464f30bd6a0f7f7b880f8e8fdd5671718bf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NDE0ZjQ2NGYzMGJkNmEwZjdmN2I4ODBmOGU4ZmRkNTY3MTcxOGJm",
    "commit": {
      "author": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-25T04:27:49Z"
      },
      "committer": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-25T04:27:49Z"
      },
      "message": "fix hard",
      "tree": {
        "sha": "12e5fae44528b2a5adb3b037c2367866f0dcf697",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/12e5fae44528b2a5adb3b037c2367866f0dcf697"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6414f464f30bd6a0f7f7b880f8e8fdd5671718bf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6414f464f30bd6a0f7f7b880f8e8fdd5671718bf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6414f464f30bd6a0f7f7b880f8e8fdd5671718bf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6414f464f30bd6a0f7f7b880f8e8fdd5671718bf/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "e5b2dab678e74b1a7aff1f531300af2f32953cb0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5b2dab678e74b1a7aff1f531300af2f32953cb0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e5b2dab678e74b1a7aff1f531300af2f32953cb0"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "bc66b3e2bcd67184d5b4535c264198168f044adc",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6414f464f30bd6a0f7f7b880f8e8fdd5671718bf/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6414f464f30bd6a0f7f7b880f8e8fdd5671718bf/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=6414f464f30bd6a0f7f7b880f8e8fdd5671718bf",
        "patch": "@@ -1772,6 +1772,10 @@ bool IsInitialBlockDownload()\n     const CChainParams& chainParams = Params();\n     if (fCheckpointsEnabled && chainActive.Height() < Checkpoints::GetTotalBlocksEstimate(chainParams.Checkpoints()))\n         return true;\n+    print('chainActive.Height: %s',chainActive.Height());\n+    print('pindexBestHeader->nHeight: %s',pindexBestHeader->nHeight - 24 * 6);\n+    print('std::max(chainActive.Tip()->GetBlockTime(), pindexBestHeader->GetBlockTime()): %s',std::max(chainActive.Tip()->GetBlockTime(), pindexBestHeader->GetBlockTime()));\n+    print('GetTime() - chainParams.MaxTipAge(): %s',GetTime() - chainParams.MaxTipAge());\n     bool state = (chainActive.Height() < pindexBestHeader->nHeight - 24 * 6 ||\n             std::max(chainActive.Tip()->GetBlockTime(), pindexBestHeader->GetBlockTime()) < GetTime() - chainParams.MaxTipAge());\n     if (!state)"
      }
    ]
  },
  {
    "sha": "57c109f80c2d875b4951327a903270e064bd2b94",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1N2MxMDlmODBjMmQ4NzViNDk1MTMyN2E5MDMyNzBlMDY0YmQyYjk0",
    "commit": {
      "author": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-25T09:15:24Z"
      },
      "committer": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-25T09:15:24Z"
      },
      "message": "edit gitignore",
      "tree": {
        "sha": "7b838952a18ac2b341f6a91020274b81f633679a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7b838952a18ac2b341f6a91020274b81f633679a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/57c109f80c2d875b4951327a903270e064bd2b94",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57c109f80c2d875b4951327a903270e064bd2b94",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/57c109f80c2d875b4951327a903270e064bd2b94",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57c109f80c2d875b4951327a903270e064bd2b94/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "6414f464f30bd6a0f7f7b880f8e8fdd5671718bf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6414f464f30bd6a0f7f7b880f8e8fdd5671718bf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6414f464f30bd6a0f7f7b880f8e8fdd5671718bf"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 3,
      "deletions": 1
    },
    "files": [
      {
        "sha": "1e53db848c5a253e8545921eff8dac844bc423ea",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57c109f80c2d875b4951327a903270e064bd2b94/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57c109f80c2d875b4951327a903270e064bd2b94/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=57c109f80c2d875b4951327a903270e064bd2b94",
        "patch": "@@ -88,4 +88,6 @@ qa/pull-tester/tests-config.sh\n aither-cli\n aitherd\n aither-qt\n-.idea\n\\ No newline at end of file\n+.idea\n+db-4.8.30.NC*\n+release\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "ced803159830b6492ace202acbff075560081ba7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZWQ4MDMxNTk4MzBiNjQ5MmFjZTIwMmFjYmZmMDc1NTYwMDgxYmE3",
    "commit": {
      "author": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-25T09:42:25Z"
      },
      "committer": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-25T09:42:25Z"
      },
      "message": "fix log",
      "tree": {
        "sha": "e34cee70755ba30c68c7a3181e1d1f8a8ff3f332",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e34cee70755ba30c68c7a3181e1d1f8a8ff3f332"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ced803159830b6492ace202acbff075560081ba7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ced803159830b6492ace202acbff075560081ba7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ced803159830b6492ace202acbff075560081ba7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ced803159830b6492ace202acbff075560081ba7/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "57c109f80c2d875b4951327a903270e064bd2b94",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57c109f80c2d875b4951327a903270e064bd2b94",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/57c109f80c2d875b4951327a903270e064bd2b94"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "662b4cd2bdc7a3a318632e4debd29cb66e29ae47",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ced803159830b6492ace202acbff075560081ba7/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ced803159830b6492ace202acbff075560081ba7/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=ced803159830b6492ace202acbff075560081ba7",
        "patch": "@@ -1772,10 +1772,10 @@ bool IsInitialBlockDownload()\n     const CChainParams& chainParams = Params();\n     if (fCheckpointsEnabled && chainActive.Height() < Checkpoints::GetTotalBlocksEstimate(chainParams.Checkpoints()))\n         return true;\n-    print('chainActive.Height: %s',chainActive.Height());\n-    print('pindexBestHeader->nHeight: %s',pindexBestHeader->nHeight - 24 * 6);\n-    print('std::max(chainActive.Tip()->GetBlockTime(), pindexBestHeader->GetBlockTime()): %s',std::max(chainActive.Tip()->GetBlockTime(), pindexBestHeader->GetBlockTime()));\n-    print('GetTime() - chainParams.MaxTipAge(): %s',GetTime() - chainParams.MaxTipAge());\n+    LogPrintf('chainActive.Height: %s',chainActive.Height());\n+    LogPrintf('pindexBestHeader->nHeight: %s',pindexBestHeader->nHeight - 24 * 6);\n+    LogPrintf('std::max(chainActive.Tip()->GetBlockTime(), pindexBestHeader->GetBlockTime()): %s',std::max(chainActive.Tip()->GetBlockTime(), pindexBestHeader->GetBlockTime()));\n+    LogPrintf('GetTime() - chainParams.MaxTipAge(): %s',GetTime() - chainParams.MaxTipAge());\n     bool state = (chainActive.Height() < pindexBestHeader->nHeight - 24 * 6 ||\n             std::max(chainActive.Tip()->GetBlockTime(), pindexBestHeader->GetBlockTime()) < GetTime() - chainParams.MaxTipAge());\n     if (!state)"
      }
    ]
  },
  {
    "sha": "577ca4add15f3fd15718d434cc284a50a5d82130",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NzdjYTRhZGQxNWYzZmQxNTcxOGQ0MzRjYzI4NGE1MGE1ZDgyMTMw",
    "commit": {
      "author": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-25T09:47:00Z"
      },
      "committer": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-25T09:47:00Z"
      },
      "message": "fix log",
      "tree": {
        "sha": "bef89a5de3afb5ca3207a299c3468669acd1fdf4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bef89a5de3afb5ca3207a299c3468669acd1fdf4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/577ca4add15f3fd15718d434cc284a50a5d82130",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/577ca4add15f3fd15718d434cc284a50a5d82130",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/577ca4add15f3fd15718d434cc284a50a5d82130",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/577ca4add15f3fd15718d434cc284a50a5d82130/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "ced803159830b6492ace202acbff075560081ba7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ced803159830b6492ace202acbff075560081ba7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ced803159830b6492ace202acbff075560081ba7"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "9a7a2297b81b52edd90094ba184b73451f340f82",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/577ca4add15f3fd15718d434cc284a50a5d82130/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/577ca4add15f3fd15718d434cc284a50a5d82130/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=577ca4add15f3fd15718d434cc284a50a5d82130",
        "patch": "@@ -1772,10 +1772,10 @@ bool IsInitialBlockDownload()\n     const CChainParams& chainParams = Params();\n     if (fCheckpointsEnabled && chainActive.Height() < Checkpoints::GetTotalBlocksEstimate(chainParams.Checkpoints()))\n         return true;\n-    LogPrintf('chainActive.Height: %s',chainActive.Height());\n-    LogPrintf('pindexBestHeader->nHeight: %s',pindexBestHeader->nHeight - 24 * 6);\n-    LogPrintf('std::max(chainActive.Tip()->GetBlockTime(), pindexBestHeader->GetBlockTime()): %s',std::max(chainActive.Tip()->GetBlockTime(), pindexBestHeader->GetBlockTime()));\n-    LogPrintf('GetTime() - chainParams.MaxTipAge(): %s',GetTime() - chainParams.MaxTipAge());\n+    LogPrintf(\"chainActive.Height: %s\",chainActive.Height());\n+    LogPrintf(\"pindexBestHeader->nHeight: %s\",pindexBestHeader->nHeight - 24 * 6);\n+    LogPrintf(\"std::max(chainActive.Tip()->GetBlockTime(), pindexBestHeader->GetBlockTime()): %s\",std::max(chainActive.Tip()->GetBlockTime(), pindexBestHeader->GetBlockTime()));\n+    LogPrintf(\"GetTime() - chainParams.MaxTipAge(): %s\",GetTime() - chainParams.MaxTipAge());\n     bool state = (chainActive.Height() < pindexBestHeader->nHeight - 24 * 6 ||\n             std::max(chainActive.Tip()->GetBlockTime(), pindexBestHeader->GetBlockTime()) < GetTime() - chainParams.MaxTipAge());\n     if (!state)"
      }
    ]
  },
  {
    "sha": "276721c1c712d1b80849de5344cb86308761c45f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNzY3MjFjMWM3MTJkMWI4MDg0OWRlNTM0NGNiODYzMDg3NjFjNDVm",
    "commit": {
      "author": {
        "name": "Harry McKinnon",
        "email": "38744799+harrymckinnon86@users.noreply.github.com",
        "date": "2018-05-25T10:48:03Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2018-05-25T10:48:03Z"
      },
      "message": "Update chainparams.cpp",
      "tree": {
        "sha": "3c629512962047c29a0633f9b589c3b43b6267f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3c629512962047c29a0633f9b589c3b43b6267f2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/276721c1c712d1b80849de5344cb86308761c45f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbB+njCRBK7hj4Ov3rIwAAdHIIAHKxIpXSwsPg9lpkxrWNYYeL\nSx5ktAAzQrx2+AzZmDY63hmIM3rfElkJ0uBGwBGFGeQxjk/0USYJawvO6QA15619\nSOUbzOapRtQQg14hP53F+vnC6hQQwcnmvSub0+zw7HD/6SdAfWI4NCEcWVL5rkky\nyAcWIy7OrNKyaHuIAYre0U2iXgsFHvkdHGgWs6f9dvvwfaN+e8b3PcP7P9c1C3ah\n8EJFi9WwxI+Po7+zgXsLqWLVd+JNZQMkl7cuCYrbAunTAnh3kN3DIHnPlMlyZ274\nAURp90VQEqA+7mY6xmzeW8uODSrUxLRr0C0olYG1TjKZqiFt1Fc6Ri1/P/+8U0Q=\n=0SXM\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 3c629512962047c29a0633f9b589c3b43b6267f2\nparent 577ca4add15f3fd15718d434cc284a50a5d82130\nauthor Harry McKinnon <38744799+harrymckinnon86@users.noreply.github.com> 1527245283 +0700\ncommitter GitHub <noreply@github.com> 1527245283 +0700\n\nUpdate chainparams.cpp"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/276721c1c712d1b80849de5344cb86308761c45f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/276721c1c712d1b80849de5344cb86308761c45f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/276721c1c712d1b80849de5344cb86308761c45f/comments",
    "author": null,
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "577ca4add15f3fd15718d434cc284a50a5d82130",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/577ca4add15f3fd15718d434cc284a50a5d82130",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/577ca4add15f3fd15718d434cc284a50a5d82130"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 5,
      "deletions": 4
    },
    "files": [
      {
        "sha": "66bc30d734a78714527e6be421964431f8d8d073",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/276721c1c712d1b80849de5344cb86308761c45f/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/276721c1c712d1b80849de5344cb86308761c45f/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=276721c1c712d1b80849de5344cb86308761c45f",
        "patch": "@@ -44,7 +44,8 @@ static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesi\n \n static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n {\n-    const char* pszTimestamp = \"The Times Apr 25th 2018 Americans will know stock is rising\";\n+    //python gen.py -a neoscrypt -t 1527258000 -z \"The Times May 25th 2018 Bitcoin investigation to focus on British traders\" -p \"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\" -b 0x1e0ffff0 -n 592642\n+    const char* pszTimestamp = \"The Times May 25th 2018 Bitcoin investigation to focus on British traders\";\n     const CScript genesisOutputScript = CScript() << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\") << OP_CHECKSIG;\n     return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n }\n@@ -114,10 +115,10 @@ class CMainParams : public CChainParams {\n         nMaxTipAge = 6 * 60 * 60; // ~144 blocks behind -> 2 x fork detection time, was 24 * 60 * 60 in bitcoin\n         nPruneAfterHeight = 100000;\n \n-        genesis = CreateGenesisBlock(1524654029, 1964120, 0x1e0ffff0, 1, 50 * COIN);\n+        genesis = CreateGenesisBlock(1527258000, 592642, 0x1e0ffff0, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x000001ca817e3e447d52c970c5d56c4e79b57fcfb35eac6e318ca3206d45c659\"));\n-        assert(genesis.hashMerkleRoot == uint256S(\"0xc0f1a0f95ce3b4524365c62715d26a58cbf2e1f0fbb23fca2b67dc68983e077a\"));\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000009db3a5972b08bf1192bcc526980ed03ba37f67f110cef91c61555513753\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x330a943749361a6b38937f7ab092554316d677e556e7fb505f43a5101fdd7c02\"));\n \n         vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"seed1.aithercoin.com\"));\n         vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"seed2.aithercoin.com\"));"
      }
    ]
  },
  {
    "sha": "e5184dd5c5aa93acd7a679512294c471f52df23b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNTE4NGRkNWM1YWE5M2FjZDdhNjc5NTEyMjk0YzQ3MWY1MmRmMjNi",
    "commit": {
      "author": {
        "name": "Phuong",
        "email": "phuong17889@gmail.com",
        "date": "2018-05-25T11:31:37Z"
      },
      "committer": {
        "name": "Phuong",
        "email": "phuong17889@gmail.com",
        "date": "2018-05-25T11:31:37Z"
      },
      "message": "fix testnet",
      "tree": {
        "sha": "878912fd713113fdae1d47c8f484f63e797e489f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/878912fd713113fdae1d47c8f484f63e797e489f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e5184dd5c5aa93acd7a679512294c471f52df23b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5184dd5c5aa93acd7a679512294c471f52df23b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e5184dd5c5aa93acd7a679512294c471f52df23b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5184dd5c5aa93acd7a679512294c471f52df23b/comments",
    "author": {
      "login": "phuong17889",
      "id": 7648033,
      "node_id": "MDQ6VXNlcjc2NDgwMzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7648033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phuong17889",
      "html_url": "https://github.com/phuong17889",
      "followers_url": "https://api.github.com/users/phuong17889/followers",
      "following_url": "https://api.github.com/users/phuong17889/following{/other_user}",
      "gists_url": "https://api.github.com/users/phuong17889/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phuong17889/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phuong17889/subscriptions",
      "organizations_url": "https://api.github.com/users/phuong17889/orgs",
      "repos_url": "https://api.github.com/users/phuong17889/repos",
      "events_url": "https://api.github.com/users/phuong17889/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phuong17889/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "phuong17889",
      "id": 7648033,
      "node_id": "MDQ6VXNlcjc2NDgwMzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7648033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phuong17889",
      "html_url": "https://github.com/phuong17889",
      "followers_url": "https://api.github.com/users/phuong17889/followers",
      "following_url": "https://api.github.com/users/phuong17889/following{/other_user}",
      "gists_url": "https://api.github.com/users/phuong17889/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phuong17889/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phuong17889/subscriptions",
      "organizations_url": "https://api.github.com/users/phuong17889/orgs",
      "repos_url": "https://api.github.com/users/phuong17889/repos",
      "events_url": "https://api.github.com/users/phuong17889/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phuong17889/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "276721c1c712d1b80849de5344cb86308761c45f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/276721c1c712d1b80849de5344cb86308761c45f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/276721c1c712d1b80849de5344cb86308761c45f"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "248aa00f496a5709c8b03744557375835c03b455",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5184dd5c5aa93acd7a679512294c471f52df23b/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5184dd5c5aa93acd7a679512294c471f52df23b/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=e5184dd5c5aa93acd7a679512294c471f52df23b",
        "patch": "@@ -214,10 +214,10 @@ class CTestNetParams : public CChainParams {\n         nMaxTipAge = 0x7fffffff; // allow mining on top of old blocks for testnet\n         nPruneAfterHeight = 1000;\n \n-        genesis = CreateGenesisBlock(1524654030, 595578, 0x1e0ffff0, 1, 50 * COIN);\n+        genesis = CreateGenesisBlock(1527258000, 592642, 0x1e0ffff0, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x000003527a77d0c8b9dfa09cc07c933189e9ecd6f806d4924512dcbfea5cfb29\"));\n-        assert(genesis.hashMerkleRoot == uint256S(\"0xc0f1a0f95ce3b4524365c62715d26a58cbf2e1f0fbb23fca2b67dc68983e077a\"));\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000009db3a5972b08bf1192bcc526980ed03ba37f67f110cef91c61555513753\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x330a943749361a6b38937f7ab092554316d677e556e7fb505f43a5101fdd7c02\"));\n \n         vFixedSeeds.clear();\n         vSeeds.clear();\n@@ -309,10 +309,10 @@ class CRegTestParams : public CChainParams {\n         nDefaultPort = 13565;\n         nPruneAfterHeight = 1000;\n \n-        genesis = CreateGenesisBlock(1524654031, 17962, 0x1e0ffff0, 1, 50 * COIN);\n+        genesis = CreateGenesisBlock(1527258000, 592642, 0x1e0ffff0, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x000008f1c431931c4605a14daee6340d494e9fe63cc694e9f7ac0309b17c8e7b\"));\n-        assert(genesis.hashMerkleRoot == uint256S(\"0xc0f1a0f95ce3b4524365c62715d26a58cbf2e1f0fbb23fca2b67dc68983e077a\"));\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000009db3a5972b08bf1192bcc526980ed03ba37f67f110cef91c61555513753\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x330a943749361a6b38937f7ab092554316d677e556e7fb505f43a5101fdd7c02\"));\n \n         vFixedSeeds.clear(); //! Regtest mode doesn't have any fixed seeds.\n         vSeeds.clear();  //! Regtest mode doesn't have any DNS seeds."
      }
    ]
  },
  {
    "sha": "80dbf17ab06116e364260b41ccb3301ee6e83fe9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MGRiZjE3YWIwNjExNmUzNjQyNjBiNDFjY2IzMzAxZWU2ZTgzZmU5",
    "commit": {
      "author": {
        "name": "test",
        "email": "test@gmail.com",
        "date": "2018-05-25T16:11:38Z"
      },
      "committer": {
        "name": "test",
        "email": "test@gmail.com",
        "date": "2018-05-25T16:11:38Z"
      },
      "message": "fix",
      "tree": {
        "sha": "499e3aefcbabb03d20bd4256d074b87a3d3ff034",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/499e3aefcbabb03d20bd4256d074b87a3d3ff034"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/80dbf17ab06116e364260b41ccb3301ee6e83fe9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80dbf17ab06116e364260b41ccb3301ee6e83fe9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/80dbf17ab06116e364260b41ccb3301ee6e83fe9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80dbf17ab06116e364260b41ccb3301ee6e83fe9/comments",
    "author": {
      "login": "amagri",
      "id": 31654,
      "node_id": "MDQ6VXNlcjMxNjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/31654?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amagri",
      "html_url": "https://github.com/amagri",
      "followers_url": "https://api.github.com/users/amagri/followers",
      "following_url": "https://api.github.com/users/amagri/following{/other_user}",
      "gists_url": "https://api.github.com/users/amagri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amagri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amagri/subscriptions",
      "organizations_url": "https://api.github.com/users/amagri/orgs",
      "repos_url": "https://api.github.com/users/amagri/repos",
      "events_url": "https://api.github.com/users/amagri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amagri/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amagri",
      "id": 31654,
      "node_id": "MDQ6VXNlcjMxNjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/31654?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amagri",
      "html_url": "https://github.com/amagri",
      "followers_url": "https://api.github.com/users/amagri/followers",
      "following_url": "https://api.github.com/users/amagri/following{/other_user}",
      "gists_url": "https://api.github.com/users/amagri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amagri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amagri/subscriptions",
      "organizations_url": "https://api.github.com/users/amagri/orgs",
      "repos_url": "https://api.github.com/users/amagri/repos",
      "events_url": "https://api.github.com/users/amagri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amagri/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e5184dd5c5aa93acd7a679512294c471f52df23b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5184dd5c5aa93acd7a679512294c471f52df23b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e5184dd5c5aa93acd7a679512294c471f52df23b"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 6,
      "deletions": 4
    },
    "files": [
      {
        "sha": "34a010771b783dd331506a36d4bee674edbef6de",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80dbf17ab06116e364260b41ccb3301ee6e83fe9/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80dbf17ab06116e364260b41ccb3301ee6e83fe9/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=80dbf17ab06116e364260b41ccb3301ee6e83fe9",
        "patch": "@@ -1502,6 +1502,8 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n                 // If the loaded chain has a wrong genesis, bail out immediately\n                 // (we're likely using a testnet datadir, or the other way around).\n+                LogPrint(\"init.cpp:1505 mapBlockIndex.empty(): %s\\n\", mapBlockIndex.empty());\n+                LogPrint(\"init.cpp:1506 mapBlockIndex.count(chainparams.GetConsensus().hashGenesisBlock): %s\\n\", mapBlockIndex.count(chainparams.GetConsensus().hashGenesisBlock));\n                 if (!mapBlockIndex.empty() && mapBlockIndex.count(chainparams.GetConsensus().hashGenesisBlock) == 0)\n                     return InitError(_(\"Incorrect or no genesis block found. Wrong datadir for network?\"));\n "
      },
      {
        "sha": "0bc417a415d86742eb920d1bfd799894280b8d85",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80dbf17ab06116e364260b41ccb3301ee6e83fe9/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80dbf17ab06116e364260b41ccb3301ee6e83fe9/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=80dbf17ab06116e364260b41ccb3301ee6e83fe9",
        "patch": "@@ -1772,10 +1772,10 @@ bool IsInitialBlockDownload()\n     const CChainParams& chainParams = Params();\n     if (fCheckpointsEnabled && chainActive.Height() < Checkpoints::GetTotalBlocksEstimate(chainParams.Checkpoints()))\n         return true;\n-    LogPrintf(\"chainActive.Height: %s\",chainActive.Height());\n-    LogPrintf(\"pindexBestHeader->nHeight: %s\",pindexBestHeader->nHeight - 24 * 6);\n-    LogPrintf(\"std::max(chainActive.Tip()->GetBlockTime(), pindexBestHeader->GetBlockTime()): %s\",std::max(chainActive.Tip()->GetBlockTime(), pindexBestHeader->GetBlockTime()));\n-    LogPrintf(\"GetTime() - chainParams.MaxTipAge(): %s\",GetTime() - chainParams.MaxTipAge());\n+    LogPrintf(\"main.cpp:1775 chainActive.Height: %s\\n\",chainActive.Height());\n+    LogPrintf(\"main.cpp:1776 pindexBestHeader->nHeight: %s\\n\",pindexBestHeader->nHeight - 24 * 6);\n+    LogPrintf(\"main.cpp 1777 std::max(chainActive.Tip()->GetBlockTime(), pindexBestHeader->GetBlockTime()): %s\\n\",std::max(chainActive.Tip()->GetBlockTime(), pindexBestHeader->GetBlockTime()));\n+    LogPrintf(\"main.cpp 1778 GetTime() - chainParams.MaxTipAge(): %s\\n\",GetTime() - chainParams.MaxTipAge());\n     bool state = (chainActive.Height() < pindexBestHeader->nHeight - 24 * 6 ||\n             std::max(chainActive.Tip()->GetBlockTime(), pindexBestHeader->GetBlockTime()) < GetTime() - chainParams.MaxTipAge());\n     if (!state)"
      }
    ]
  },
  {
    "sha": "ab6ae7e486d465c139039a9cb24fd67f37fdd33b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYjZhZTdlNDg2ZDQ2NWMxMzkwMzlhOWNiMjRmZDY3ZjM3ZmRkMzNi",
    "commit": {
      "author": {
        "name": "test",
        "email": "test@gmail.com",
        "date": "2018-05-25T16:16:05Z"
      },
      "committer": {
        "name": "test",
        "email": "test@gmail.com",
        "date": "2018-05-25T16:16:05Z"
      },
      "message": "fix",
      "tree": {
        "sha": "7b132a82a8950f4db6797f1d171a7a3c9324d04d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7b132a82a8950f4db6797f1d171a7a3c9324d04d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab6ae7e486d465c139039a9cb24fd67f37fdd33b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab6ae7e486d465c139039a9cb24fd67f37fdd33b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ab6ae7e486d465c139039a9cb24fd67f37fdd33b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab6ae7e486d465c139039a9cb24fd67f37fdd33b/comments",
    "author": {
      "login": "amagri",
      "id": 31654,
      "node_id": "MDQ6VXNlcjMxNjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/31654?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amagri",
      "html_url": "https://github.com/amagri",
      "followers_url": "https://api.github.com/users/amagri/followers",
      "following_url": "https://api.github.com/users/amagri/following{/other_user}",
      "gists_url": "https://api.github.com/users/amagri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amagri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amagri/subscriptions",
      "organizations_url": "https://api.github.com/users/amagri/orgs",
      "repos_url": "https://api.github.com/users/amagri/repos",
      "events_url": "https://api.github.com/users/amagri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amagri/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amagri",
      "id": 31654,
      "node_id": "MDQ6VXNlcjMxNjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/31654?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amagri",
      "html_url": "https://github.com/amagri",
      "followers_url": "https://api.github.com/users/amagri/followers",
      "following_url": "https://api.github.com/users/amagri/following{/other_user}",
      "gists_url": "https://api.github.com/users/amagri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amagri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amagri/subscriptions",
      "organizations_url": "https://api.github.com/users/amagri/orgs",
      "repos_url": "https://api.github.com/users/amagri/repos",
      "events_url": "https://api.github.com/users/amagri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amagri/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "80dbf17ab06116e364260b41ccb3301ee6e83fe9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80dbf17ab06116e364260b41ccb3301ee6e83fe9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/80dbf17ab06116e364260b41ccb3301ee6e83fe9"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "8e639078b68a3f85af26f839363031d64e662b8a",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab6ae7e486d465c139039a9cb24fd67f37fdd33b/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab6ae7e486d465c139039a9cb24fd67f37fdd33b/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=ab6ae7e486d465c139039a9cb24fd67f37fdd33b",
        "patch": "@@ -1502,8 +1502,8 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n                 // If the loaded chain has a wrong genesis, bail out immediately\n                 // (we're likely using a testnet datadir, or the other way around).\n-                LogPrint(\"init.cpp:1505 mapBlockIndex.empty(): %s\\n\", mapBlockIndex.empty());\n-                LogPrint(\"init.cpp:1506 mapBlockIndex.count(chainparams.GetConsensus().hashGenesisBlock): %s\\n\", mapBlockIndex.count(chainparams.GetConsensus().hashGenesisBlock));\n+                LogPrintf(\"init.cpp:1505 mapBlockIndex.empty(): %s\\n\", mapBlockIndex.empty());\n+                LogPrintf(\"init.cpp:1506 mapBlockIndex.count(chainparams.GetConsensus().hashGenesisBlock): %s\\n\", mapBlockIndex.count(chainparams.GetConsensus().hashGenesisBlock));\n                 if (!mapBlockIndex.empty() && mapBlockIndex.count(chainparams.GetConsensus().hashGenesisBlock) == 0)\n                     return InitError(_(\"Incorrect or no genesis block found. Wrong datadir for network?\"));\n "
      }
    ]
  },
  {
    "sha": "2da37450f35266de933e667c7569f6b86707819c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZGEzNzQ1MGYzNTI2NmRlOTMzZTY2N2M3NTY5ZjZiODY3MDc4MTlj",
    "commit": {
      "author": {
        "name": "Phuong",
        "email": "phuong17889@gmail.com",
        "date": "2018-05-26T03:37:12Z"
      },
      "committer": {
        "name": "Phuong",
        "email": "phuong17889@gmail.com",
        "date": "2018-05-26T03:37:12Z"
      },
      "message": "init",
      "tree": {
        "sha": "749f2069453e8a64126010fae8c6e431fc17f280",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/749f2069453e8a64126010fae8c6e431fc17f280"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2da37450f35266de933e667c7569f6b86707819c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2da37450f35266de933e667c7569f6b86707819c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2da37450f35266de933e667c7569f6b86707819c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2da37450f35266de933e667c7569f6b86707819c/comments",
    "author": {
      "login": "phuong17889",
      "id": 7648033,
      "node_id": "MDQ6VXNlcjc2NDgwMzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7648033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phuong17889",
      "html_url": "https://github.com/phuong17889",
      "followers_url": "https://api.github.com/users/phuong17889/followers",
      "following_url": "https://api.github.com/users/phuong17889/following{/other_user}",
      "gists_url": "https://api.github.com/users/phuong17889/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phuong17889/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phuong17889/subscriptions",
      "organizations_url": "https://api.github.com/users/phuong17889/orgs",
      "repos_url": "https://api.github.com/users/phuong17889/repos",
      "events_url": "https://api.github.com/users/phuong17889/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phuong17889/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "phuong17889",
      "id": 7648033,
      "node_id": "MDQ6VXNlcjc2NDgwMzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7648033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phuong17889",
      "html_url": "https://github.com/phuong17889",
      "followers_url": "https://api.github.com/users/phuong17889/followers",
      "following_url": "https://api.github.com/users/phuong17889/following{/other_user}",
      "gists_url": "https://api.github.com/users/phuong17889/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phuong17889/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phuong17889/subscriptions",
      "organizations_url": "https://api.github.com/users/phuong17889/orgs",
      "repos_url": "https://api.github.com/users/phuong17889/repos",
      "events_url": "https://api.github.com/users/phuong17889/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phuong17889/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ab6ae7e486d465c139039a9cb24fd67f37fdd33b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab6ae7e486d465c139039a9cb24fd67f37fdd33b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ab6ae7e486d465c139039a9cb24fd67f37fdd33b"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "25e2c13b19dbe7e38b51e5246b4bffeda8a379c9",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2da37450f35266de933e667c7569f6b86707819c/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2da37450f35266de933e667c7569f6b86707819c/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=2da37450f35266de933e667c7569f6b86707819c",
        "patch": "@@ -67,7 +67,7 @@ class CMainParams : public CChainParams {\n     CMainParams() {\n         strNetworkID = \"main\";\n         consensus.nSubsidyHalvingInterval = 262800; // one year\n-        consensus.nMasternodePaymentsStartBlock = 1152; // not true, but it's ok as long as it's less then nMasternodePaymentsIncreaseBlock\n+        consensus.nMasternodePaymentsStartBlock = 100000; // not true, but it's ok as long as it's less then nMasternodePaymentsIncreaseBlock\n         consensus.nMasternodePaymentsIncreaseBlock = 158000; // not used\n         consensus.nMasternodePaymentsIncreasePeriod = 576*30; // not used\n         consensus.nInstantSendKeepLock = 24;\n@@ -86,7 +86,7 @@ class CMainParams : public CChainParams {\n         consensus.BIP34Height = 227931; // FIX\n         consensus.BIP34Hash = uint256S(\"0x000000000000024b89b42a942fe0d9fea3bb44ab7bd1b19115dd6a759c0808b8\"); // FIX\n         consensus.powLimit = uint256S(\"00000fffff000000000000000000000000000000000000000000000000000000\");\n-        consensus.nPowTargetTimespan = 60 * 60; // Aither: 1 hour, 24 blocks\n+        consensus.nPowTargetTimespan = 24 * 60 * 60; // Aither: 1 day, 24 blocks\n         consensus.nPowTargetSpacing = 2.5 * 60; // Aither: 150 seconds\n         consensus.fPowAllowMinDifficultyBlocks = false;\n         consensus.fPowNoRetargeting = false;\n@@ -112,7 +112,7 @@ class CMainParams : public CChainParams {\n         pchMessageStart[3] = 0xd4;\n         vAlertPubKey = ParseHex(\"04b6a3a2911d40d214be61d573bfb1a32ef98b931d9c721f7bbbbdf2692abfd5eb235692d3ad1a81f75157fd0a9d96866b62b717d091f2481b70e3b8d87cc68fd3\");\n         nDefaultPort = 40888;\n-        nMaxTipAge = 6 * 60 * 60; // ~144 blocks behind -> 2 x fork detection time, was 24 * 60 * 60 in bitcoin\n+        nMaxTipAge = 60 * 60 * 60; // ~144 blocks behind -> 2 x fork detection time, was 24 * 60 * 60 in bitcoin\n         nPruneAfterHeight = 100000;\n \n         genesis = CreateGenesisBlock(1527258000, 592642, 0x1e0ffff0, 1, 50 * COIN);"
      },
      {
        "sha": "bc3ccbf4a870aed039bd7cb9f440f26130bff13f",
        "filename": "src/masternode-sync.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2da37450f35266de933e667c7569f6b86707819c/src/masternode-sync.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2da37450f35266de933e667c7569f6b86707819c/src/masternode-sync.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/masternode-sync.h?ref=2da37450f35266de933e667c7569f6b86707819c",
        "patch": "@@ -21,7 +21,7 @@ static const int MASTERNODE_SYNC_MNW             = 3;\n static const int MASTERNODE_SYNC_GOVERNANCE      = 4;\n static const int MASTERNODE_SYNC_GOVOBJ          = 10;\n static const int MASTERNODE_SYNC_GOVOBJ_VOTE     = 11;\n-static const int MASTERNODE_SYNC_FINISHED        = 999;\n+static const int MASTERNODE_SYNC_FINISHED        = 1;\n \n static const int MASTERNODE_SYNC_TICK_SECONDS    = 6;\n static const int MASTERNODE_SYNC_TIMEOUT_SECONDS = 30; // our blocks are 2.5 minutes so 30 seconds should be fine"
      }
    ]
  },
  {
    "sha": "c5de37e3c9702c344b95c3c204e62bf53cf2280c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNWRlMzdlM2M5NzAyYzM0NGI5NWMzYzIwNGU2MmJmNTNjZjIyODBj",
    "commit": {
      "author": {
        "name": "Phuong",
        "email": "phuong17889@gmail.com",
        "date": "2018-05-26T03:43:01Z"
      },
      "committer": {
        "name": "Phuong",
        "email": "phuong17889@gmail.com",
        "date": "2018-05-26T03:43:01Z"
      },
      "message": "init",
      "tree": {
        "sha": "5ac978cfed726d0682478e1ec886f14f018724d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5ac978cfed726d0682478e1ec886f14f018724d0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c5de37e3c9702c344b95c3c204e62bf53cf2280c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5de37e3c9702c344b95c3c204e62bf53cf2280c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c5de37e3c9702c344b95c3c204e62bf53cf2280c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5de37e3c9702c344b95c3c204e62bf53cf2280c/comments",
    "author": {
      "login": "phuong17889",
      "id": 7648033,
      "node_id": "MDQ6VXNlcjc2NDgwMzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7648033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phuong17889",
      "html_url": "https://github.com/phuong17889",
      "followers_url": "https://api.github.com/users/phuong17889/followers",
      "following_url": "https://api.github.com/users/phuong17889/following{/other_user}",
      "gists_url": "https://api.github.com/users/phuong17889/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phuong17889/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phuong17889/subscriptions",
      "organizations_url": "https://api.github.com/users/phuong17889/orgs",
      "repos_url": "https://api.github.com/users/phuong17889/repos",
      "events_url": "https://api.github.com/users/phuong17889/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phuong17889/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "phuong17889",
      "id": 7648033,
      "node_id": "MDQ6VXNlcjc2NDgwMzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7648033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phuong17889",
      "html_url": "https://github.com/phuong17889",
      "followers_url": "https://api.github.com/users/phuong17889/followers",
      "following_url": "https://api.github.com/users/phuong17889/following{/other_user}",
      "gists_url": "https://api.github.com/users/phuong17889/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phuong17889/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phuong17889/subscriptions",
      "organizations_url": "https://api.github.com/users/phuong17889/orgs",
      "repos_url": "https://api.github.com/users/phuong17889/repos",
      "events_url": "https://api.github.com/users/phuong17889/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phuong17889/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2da37450f35266de933e667c7569f6b86707819c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2da37450f35266de933e667c7569f6b86707819c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2da37450f35266de933e667c7569f6b86707819c"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "f3e90ae661e3a39414ca2631f57188855bc79d0d",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5de37e3c9702c344b95c3c204e62bf53cf2280c/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5de37e3c9702c344b95c3c204e62bf53cf2280c/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=c5de37e3c9702c344b95c3c204e62bf53cf2280c",
        "patch": "@@ -153,8 +153,8 @@ class CMainParams : public CChainParams {\n \n         checkpointData = (CCheckpointData) {\n             boost::assign::map_list_of\n-             (    0, uint256S(\"0x00000b0842cc38c409e404817ee8eadce259494afb87619e127b061602362851\")),\n-            1522050118, // * UNIX timestamp of last checkpoint block\n+             (    0, uint256S(\"0x000009db3a5972b08bf1192bcc526980ed03ba37f67f110cef91c61555513753\")),\n+            1527258000, // * UNIX timestamp of last checkpoint block\n             0,     // * total number of transactions between genesis and last checkpoint\n                         //   (the tx=... number in the SetBestChain debug.log lines)\n             2800        // * estimated number of transactions per day after checkpoint\n@@ -251,7 +251,7 @@ class CTestNetParams : public CChainParams {\n \n         checkpointData = (CCheckpointData) {\n             boost::assign::map_list_of\n-                    ( 0, uint256S(\"0x00000dbc9aa1686b4dfb177300185c6a3e0b13d1d4d346c5bccdd19fdf9ebc5a\")),\n+                    ( 0, uint256S(\"0x000009db3a5972b08bf1192bcc526980ed03ba37f67f110cef91c61555513753\")),\n             0,\n             0,\n             0\n@@ -327,7 +327,7 @@ class CRegTestParams : public CChainParams {\n \n         checkpointData = (CCheckpointData){\n             boost::assign::map_list_of\n-            ( 0, uint256S(\"0x00000dbc9aa1686b4dfb177300185c6a3e0b13d1d4d346c5bccdd19fdf9ebc5a\")),\n+            ( 0, uint256S(\"0x000009db3a5972b08bf1192bcc526980ed03ba37f67f110cef91c61555513753\")),\n             0,\n             0,\n             0"
      }
    ]
  },
  {
    "sha": "943c6c196927b558efad6cb15af1f3f8891fa4ad",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NDNjNmMxOTY5MjdiNTU4ZWZhZDZjYjE1YWYxZjNmODg5MWZhNGFk",
    "commit": {
      "author": {
        "name": "Phuong",
        "email": "phuong17889@gmail.com",
        "date": "2018-05-26T04:05:02Z"
      },
      "committer": {
        "name": "Phuong",
        "email": "phuong17889@gmail.com",
        "date": "2018-05-26T04:05:02Z"
      },
      "message": "init",
      "tree": {
        "sha": "ece714e1a3b97fcca236b09baf859f89fbb65fd0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ece714e1a3b97fcca236b09baf859f89fbb65fd0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/943c6c196927b558efad6cb15af1f3f8891fa4ad",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/943c6c196927b558efad6cb15af1f3f8891fa4ad",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/943c6c196927b558efad6cb15af1f3f8891fa4ad",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/943c6c196927b558efad6cb15af1f3f8891fa4ad/comments",
    "author": {
      "login": "phuong17889",
      "id": 7648033,
      "node_id": "MDQ6VXNlcjc2NDgwMzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7648033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phuong17889",
      "html_url": "https://github.com/phuong17889",
      "followers_url": "https://api.github.com/users/phuong17889/followers",
      "following_url": "https://api.github.com/users/phuong17889/following{/other_user}",
      "gists_url": "https://api.github.com/users/phuong17889/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phuong17889/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phuong17889/subscriptions",
      "organizations_url": "https://api.github.com/users/phuong17889/orgs",
      "repos_url": "https://api.github.com/users/phuong17889/repos",
      "events_url": "https://api.github.com/users/phuong17889/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phuong17889/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "phuong17889",
      "id": 7648033,
      "node_id": "MDQ6VXNlcjc2NDgwMzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7648033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phuong17889",
      "html_url": "https://github.com/phuong17889",
      "followers_url": "https://api.github.com/users/phuong17889/followers",
      "following_url": "https://api.github.com/users/phuong17889/following{/other_user}",
      "gists_url": "https://api.github.com/users/phuong17889/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phuong17889/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phuong17889/subscriptions",
      "organizations_url": "https://api.github.com/users/phuong17889/orgs",
      "repos_url": "https://api.github.com/users/phuong17889/repos",
      "events_url": "https://api.github.com/users/phuong17889/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phuong17889/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c5de37e3c9702c344b95c3c204e62bf53cf2280c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5de37e3c9702c344b95c3c204e62bf53cf2280c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c5de37e3c9702c344b95c3c204e62bf53cf2280c"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "3743b742025ea61c72f0427b66b7e0db0126cd7a",
        "filename": "src/masternode-sync.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/943c6c196927b558efad6cb15af1f3f8891fa4ad/src/masternode-sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/943c6c196927b558efad6cb15af1f3f8891fa4ad/src/masternode-sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/masternode-sync.cpp?ref=943c6c196927b558efad6cb15af1f3f8891fa4ad",
        "patch": "@@ -353,7 +353,7 @@ void CMasternodeSync::ProcessTick()\n                 netfulfilledman.AddFulfilledRequest(pnode->addr, \"spork-sync\");\n                 // get current network sporks\n                 pnode->PushMessage(NetMsgType::GETSPORKS);\n-                LogPrintf(\"CMasternodeSync::ProcessTick -- nTick %d nRequestedMasternodeAssets %d -- requesting sporks from peer %d\\n\", nTick, nRequestedMasternodeAssets, pnode->id);\n+                LogPrintf(\"CMasternodeSync::ProcessTick -- nTick %d nRequestedMasternodeAssets %d -- requesting sporks from peer %d with address %s\\n\", nTick, nRequestedMasternodeAssets, pnode->id, pnode->addr);\n                 continue; // always get sporks first, switch to the next node without waiting for the next tick\n             }\n "
      },
      {
        "sha": "254bb0aed95d4d9728049bdb35ec31e22d7a7385",
        "filename": "src/masternode-sync.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/943c6c196927b558efad6cb15af1f3f8891fa4ad/src/masternode-sync.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/943c6c196927b558efad6cb15af1f3f8891fa4ad/src/masternode-sync.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/masternode-sync.h?ref=943c6c196927b558efad6cb15af1f3f8891fa4ad",
        "patch": "@@ -21,7 +21,7 @@ static const int MASTERNODE_SYNC_MNW             = 3;\n static const int MASTERNODE_SYNC_GOVERNANCE      = 4;\n static const int MASTERNODE_SYNC_GOVOBJ          = 10;\n static const int MASTERNODE_SYNC_GOVOBJ_VOTE     = 11;\n-static const int MASTERNODE_SYNC_FINISHED        = 1;\n+static const int MASTERNODE_SYNC_FINISHED        = 999;\n \n static const int MASTERNODE_SYNC_TICK_SECONDS    = 6;\n static const int MASTERNODE_SYNC_TIMEOUT_SECONDS = 30; // our blocks are 2.5 minutes so 30 seconds should be fine"
      }
    ]
  },
  {
    "sha": "a8a43422817e3a1d1607c383b3d1db78ffa028dd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOGE0MzQyMjgxN2UzYTFkMTYwN2MzODNiM2QxZGI3OGZmYTAyOGRk",
    "commit": {
      "author": {
        "name": "Phuong",
        "email": "phuong17889@gmail.com",
        "date": "2018-05-26T04:29:34Z"
      },
      "committer": {
        "name": "Phuong",
        "email": "phuong17889@gmail.com",
        "date": "2018-05-26T04:29:34Z"
      },
      "message": "init",
      "tree": {
        "sha": "fca22726ed09b8d712b210d4bd6fc30d2dabb261",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fca22726ed09b8d712b210d4bd6fc30d2dabb261"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a8a43422817e3a1d1607c383b3d1db78ffa028dd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8a43422817e3a1d1607c383b3d1db78ffa028dd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a8a43422817e3a1d1607c383b3d1db78ffa028dd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8a43422817e3a1d1607c383b3d1db78ffa028dd/comments",
    "author": {
      "login": "phuong17889",
      "id": 7648033,
      "node_id": "MDQ6VXNlcjc2NDgwMzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7648033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phuong17889",
      "html_url": "https://github.com/phuong17889",
      "followers_url": "https://api.github.com/users/phuong17889/followers",
      "following_url": "https://api.github.com/users/phuong17889/following{/other_user}",
      "gists_url": "https://api.github.com/users/phuong17889/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phuong17889/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phuong17889/subscriptions",
      "organizations_url": "https://api.github.com/users/phuong17889/orgs",
      "repos_url": "https://api.github.com/users/phuong17889/repos",
      "events_url": "https://api.github.com/users/phuong17889/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phuong17889/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "phuong17889",
      "id": 7648033,
      "node_id": "MDQ6VXNlcjc2NDgwMzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7648033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phuong17889",
      "html_url": "https://github.com/phuong17889",
      "followers_url": "https://api.github.com/users/phuong17889/followers",
      "following_url": "https://api.github.com/users/phuong17889/following{/other_user}",
      "gists_url": "https://api.github.com/users/phuong17889/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phuong17889/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phuong17889/subscriptions",
      "organizations_url": "https://api.github.com/users/phuong17889/orgs",
      "repos_url": "https://api.github.com/users/phuong17889/repos",
      "events_url": "https://api.github.com/users/phuong17889/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phuong17889/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "943c6c196927b558efad6cb15af1f3f8891fa4ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/943c6c196927b558efad6cb15af1f3f8891fa4ad",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/943c6c196927b558efad6cb15af1f3f8891fa4ad"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "97e67a56556cd7c52a9be819d235082fe68e51cf",
        "filename": "src/masternode-sync.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8a43422817e3a1d1607c383b3d1db78ffa028dd/src/masternode-sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8a43422817e3a1d1607c383b3d1db78ffa028dd/src/masternode-sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/masternode-sync.cpp?ref=a8a43422817e3a1d1607c383b3d1db78ffa028dd",
        "patch": "@@ -353,7 +353,7 @@ void CMasternodeSync::ProcessTick()\n                 netfulfilledman.AddFulfilledRequest(pnode->addr, \"spork-sync\");\n                 // get current network sporks\n                 pnode->PushMessage(NetMsgType::GETSPORKS);\n-                LogPrintf(\"CMasternodeSync::ProcessTick -- nTick %d nRequestedMasternodeAssets %d -- requesting sporks from peer %d with address %s\\n\", nTick, nRequestedMasternodeAssets, pnode->id, pnode->addr);\n+                LogPrintf(\"CMasternodeSync::ProcessTick -- nTick %d nRequestedMasternodeAssets %d -- requesting sporks from peer %d\\n\", nTick, nRequestedMasternodeAssets, pnode->id);\n                 continue; // always get sporks first, switch to the next node without waiting for the next tick\n             }\n "
      }
    ]
  },
  {
    "sha": "e84ebf7c7793e66dbd1a2ceabb9938f0a37689b6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplODRlYmY3Yzc3OTNlNjZkYmQxYTJjZWFiYjk5MzhmMGEzNzY4OWI2",
    "commit": {
      "author": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-26T09:02:00Z"
      },
      "committer": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-26T09:02:00Z"
      },
      "message": "test to 5m",
      "tree": {
        "sha": "395ef3e3b36804daaf5e453fa31b5fb8f3ad163b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/395ef3e3b36804daaf5e453fa31b5fb8f3ad163b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e84ebf7c7793e66dbd1a2ceabb9938f0a37689b6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e84ebf7c7793e66dbd1a2ceabb9938f0a37689b6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e84ebf7c7793e66dbd1a2ceabb9938f0a37689b6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e84ebf7c7793e66dbd1a2ceabb9938f0a37689b6/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "a8a43422817e3a1d1607c383b3d1db78ffa028dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8a43422817e3a1d1607c383b3d1db78ffa028dd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a8a43422817e3a1d1607c383b3d1db78ffa028dd"
      }
    ],
    "stats": {
      "total": 152,
      "additions": 140,
      "deletions": 12
    },
    "files": [
      {
        "sha": "06f419af9fc6c8941e7583beab5619bb2852cd09",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 129,
        "deletions": 1,
        "changes": 130,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e84ebf7c7793e66dbd1a2ceabb9938f0a37689b6/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e84ebf7c7793e66dbd1a2ceabb9938f0a37689b6/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=e84ebf7c7793e66dbd1a2ceabb9938f0a37689b6",
        "patch": "@@ -90,4 +90,132 @@ aitherd\n aither-qt\n .idea\n db-4.8.30.NC*\n-release\n\\ No newline at end of file\n+release\n+Makefile\n+Makefile.in\n+aclocal.m4\n+autom4te.cache/\n+build-aux/compile\n+build-aux/config.guess\n+build-aux/config.sub\n+build-aux/depcomp\n+build-aux/install-sh\n+build-aux/ltmain.sh\n+build-aux/m4/libtool.m4\n+build-aux/m4/ltoptions.m4\n+build-aux/m4/ltsugar.m4\n+build-aux/m4/ltversion.m4\n+build-aux/m4/lt~obsolete.m4\n+build-aux/missing\n+build-aux/test-driver\n+config.status\n+configure\n+db4/\n+libtool\n+share/setup.nsi\n+src/Makefile\n+src/Makefile.in\n+src/config/aither-config.h\n+src/config/aither-config.h.in\n+src/config/stamp-h1\n+src/qt/aither.moc\n+src/qt/bitcoinamountfield.moc\n+src/qt/forms/ui_addressbookpage.h\n+src/qt/forms/ui_askpassphrasedialog.h\n+src/qt/forms/ui_coincontroldialog.h\n+src/qt/forms/ui_darksendconfig.h\n+src/qt/forms/ui_debugwindow.h\n+src/qt/forms/ui_editaddressdialog.h\n+src/qt/forms/ui_helpmessagedialog.h\n+src/qt/forms/ui_intro.h\n+src/qt/forms/ui_masternodelist.h\n+src/qt/forms/ui_openuridialog.h\n+src/qt/forms/ui_optionsdialog.h\n+src/qt/forms/ui_overviewpage.h\n+src/qt/forms/ui_receivecoinsdialog.h\n+src/qt/forms/ui_receiverequestdialog.h\n+src/qt/forms/ui_sendcoinsdialog.h\n+src/qt/forms/ui_sendcoinsentry.h\n+src/qt/forms/ui_signverifymessagedialog.h\n+src/qt/forms/ui_transactiondescdialog.h\n+src/qt/intro.moc\n+src/qt/locale/aither_bg.qm\n+src/qt/locale/aither_de.qm\n+src/qt/locale/aither_en.qm\n+src/qt/locale/aither_es.qm\n+src/qt/locale/aither_fi.qm\n+src/qt/locale/aither_fr.qm\n+src/qt/locale/aither_it.qm\n+src/qt/locale/aither_ja.qm\n+src/qt/locale/aither_pl.qm\n+src/qt/locale/aither_pt.qm\n+src/qt/locale/aither_ru.qm\n+src/qt/locale/aither_sk.qm\n+src/qt/locale/aither_sv.qm\n+src/qt/locale/aither_vi.qm\n+src/qt/locale/aither_zh_CN.qm\n+src/qt/locale/aither_zh_TW.qm\n+src/qt/moc_addressbookpage.cpp\n+src/qt/moc_addresstablemodel.cpp\n+src/qt/moc_askpassphrasedialog.cpp\n+src/qt/moc_bantablemodel.cpp\n+src/qt/moc_bitcoinaddressvalidator.cpp\n+src/qt/moc_bitcoinamountfield.cpp\n+src/qt/moc_bitcoingui.cpp\n+src/qt/moc_bitcoinunits.cpp\n+src/qt/moc_clientmodel.cpp\n+src/qt/moc_coincontroldialog.cpp\n+src/qt/moc_coincontroltreewidget.cpp\n+src/qt/moc_csvmodelwriter.cpp\n+src/qt/moc_darksendconfig.cpp\n+src/qt/moc_editaddressdialog.cpp\n+src/qt/moc_guiutil.cpp\n+src/qt/moc_intro.cpp\n+src/qt/moc_macdockiconhandler.cpp\n+src/qt/moc_macnotificationhandler.cpp\n+src/qt/moc_masternodelist.cpp\n+src/qt/moc_notificator.cpp\n+src/qt/moc_openuridialog.cpp\n+src/qt/moc_optionsdialog.cpp\n+src/qt/moc_optionsmodel.cpp\n+src/qt/moc_overviewpage.cpp\n+src/qt/moc_paymentserver.cpp\n+src/qt/moc_peertablemodel.cpp\n+src/qt/moc_qvalidatedlineedit.cpp\n+src/qt/moc_qvaluecombobox.cpp\n+src/qt/moc_receivecoinsdialog.cpp\n+src/qt/moc_receiverequestdialog.cpp\n+src/qt/moc_recentrequeststablemodel.cpp\n+src/qt/moc_rpcconsole.cpp\n+src/qt/moc_sendcoinsdialog.cpp\n+src/qt/moc_sendcoinsentry.cpp\n+src/qt/moc_signverifymessagedialog.cpp\n+src/qt/moc_splashscreen.cpp\n+src/qt/moc_trafficgraphwidget.cpp\n+src/qt/moc_transactiondesc.cpp\n+src/qt/moc_transactiondescdialog.cpp\n+src/qt/moc_transactionfilterproxy.cpp\n+src/qt/moc_transactiontablemodel.cpp\n+src/qt/moc_transactionview.cpp\n+src/qt/moc_utilitydialog.cpp\n+src/qt/moc_walletframe.cpp\n+src/qt/moc_walletmodel.cpp\n+src/qt/moc_walletview.cpp\n+src/qt/overviewpage.moc\n+src/qt/rpcconsole.moc\n+src/qt/test/moc_compattests.cpp\n+src/qt/test/moc_paymentservertests.cpp\n+src/qt/test/moc_uritests.cpp\n+src/secp256k1/build-aux/compile\n+src/secp256k1/build-aux/config.guess\n+src/secp256k1/build-aux/config.sub\n+src/secp256k1/build-aux/depcomp\n+src/secp256k1/build-aux/install-sh\n+src/secp256k1/build-aux/ltmain.sh\n+src/secp256k1/build-aux/m4/libtool.m4\n+src/secp256k1/build-aux/m4/ltoptions.m4\n+src/secp256k1/build-aux/m4/ltsugar.m4\n+src/secp256k1/build-aux/m4/ltversion.m4\n+src/secp256k1/build-aux/m4/lt~obsolete.m4\n+src/secp256k1/build-aux/missing\n+src/secp256k1/build-aux/test-driver"
      },
      {
        "sha": "3aea0ae4a4bf8bcfceb91d88654f8d306624e868",
        "filename": "share/qt/Info.plist",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e84ebf7c7793e66dbd1a2ceabb9938f0a37689b6/share/qt/Info.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e84ebf7c7793e66dbd1a2ceabb9938f0a37689b6/share/qt/Info.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/Info.plist?ref=e84ebf7c7793e66dbd1a2ceabb9938f0a37689b6",
        "patch": "@@ -17,7 +17,7 @@\n   <string>APPL</string>\n \n   <key>CFBundleGetInfoString</key>\n-  <string>0.12.1, Copyright \u00a9 2009-2017 The Bitcoin Core developers, 2014-2017 The Dash Core developers, 2017-2018 The GoByte Core developers, 2018 The Aither Core developers</string>\n+  <string>0.12.1, Copyright \u00a9 2009-2018 The Bitcoin Core developers, 2014-2018 The Dash Core developers, 2017-2018 The Aither Core developers, 2018 The Aither Core developers</string>\n \n   <key>CFBundleShortVersionString</key>\n   <string>0.12.1</string>"
      },
      {
        "sha": "6bd46857b1cd1d9b3b6ac838991a531c1d0eff92",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e84ebf7c7793e66dbd1a2ceabb9938f0a37689b6/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e84ebf7c7793e66dbd1a2ceabb9938f0a37689b6/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=e84ebf7c7793e66dbd1a2ceabb9938f0a37689b6",
        "patch": "@@ -115,7 +115,7 @@ class CMainParams : public CChainParams {\n         nMaxTipAge = 60 * 60 * 60; // ~144 blocks behind -> 2 x fork detection time, was 24 * 60 * 60 in bitcoin\n         nPruneAfterHeight = 100000;\n \n-        genesis = CreateGenesisBlock(1527258000, 592642, 0x1e0ffff0, 1, 50 * COIN);\n+        genesis = CreateGenesisBlock(1527258000, 592642, 0x1e0ffff0, 1, 25 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n         assert(consensus.hashGenesisBlock == uint256S(\"0x000009db3a5972b08bf1192bcc526980ed03ba37f67f110cef91c61555513753\"));\n         assert(genesis.hashMerkleRoot == uint256S(\"0x330a943749361a6b38937f7ab092554316d677e556e7fb505f43a5101fdd7c02\"));\n@@ -190,7 +190,7 @@ class CTestNetParams : public CChainParams {\n         consensus.BIP34Height = 21111; // FIX\n         consensus.BIP34Hash = uint256S(\"0x0000000023b3a96d3484e5abb3755c413e7d41500f8e2a5c3f0dd01299cd8ef8\"); // FIX\n         consensus.powLimit = uint256S(\"00000fffff000000000000000000000000000000000000000000000000000000\");\n-        consensus.nPowTargetTimespan = 60 * 60; // Aither: 1 hour, 24 blocks\n+        consensus.nPowTargetTimespan = 5 * 60; // Aither: 1 hour, 24 blocks\n         consensus.nPowTargetSpacing = 2.5 * 60; // Aither: 150 seconds\n         consensus.fPowAllowMinDifficultyBlocks = true;\n         consensus.fPowNoRetargeting = false;\n@@ -210,13 +210,13 @@ class CTestNetParams : public CChainParams {\n         pchMessageStart[2] = 0x37;\n         pchMessageStart[3] = 0x28;\n         vAlertPubKey = ParseHex(\"04904d236abae451f9b5c7bf476486588f503a18096d538a7d8cddd95dd0ebcfd7433d0a5969c88eb47af4090a43437776ed09ddf95970d8363e196bc1a9391ced\");\n-        nDefaultPort = 13455;\n+        nDefaultPort = 41888;\n         nMaxTipAge = 0x7fffffff; // allow mining on top of old blocks for testnet\n         nPruneAfterHeight = 1000;\n \n-        genesis = CreateGenesisBlock(1527258000, 592642, 0x1e0ffff0, 1, 50 * COIN);\n+        genesis = CreateGenesisBlock(1527250000, 1937110, 0x1e0ffff0, 1, 25 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x000009db3a5972b08bf1192bcc526980ed03ba37f67f110cef91c61555513753\"));\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000005998a81de3e7911a00654702fd51565598fa7b6be5080fc06789de8a3e8\"));\n         assert(genesis.hashMerkleRoot == uint256S(\"0x330a943749361a6b38937f7ab092554316d677e556e7fb505f43a5101fdd7c02\"));\n \n         vFixedSeeds.clear();\n@@ -251,7 +251,7 @@ class CTestNetParams : public CChainParams {\n \n         checkpointData = (CCheckpointData) {\n             boost::assign::map_list_of\n-                    ( 0, uint256S(\"0x000009db3a5972b08bf1192bcc526980ed03ba37f67f110cef91c61555513753\")),\n+                    ( 0, uint256S(\"0x000005998a81de3e7911a00654702fd51565598fa7b6be5080fc06789de8a3e8\")),\n             0,\n             0,\n             0\n@@ -306,12 +306,12 @@ class CRegTestParams : public CChainParams {\n         pchMessageStart[2] = 0x37;\n         pchMessageStart[3] = 0x28;\n         nMaxTipAge = 6 * 60 * 60; // ~144 blocks behind -> 2 x fork detection time, was 24 * 60 * 60 in bitcoin\n-        nDefaultPort = 13565;\n+        nDefaultPort = 42888;\n         nPruneAfterHeight = 1000;\n \n-        genesis = CreateGenesisBlock(1527258000, 592642, 0x1e0ffff0, 1, 50 * COIN);\n+        genesis = CreateGenesisBlock(1527250000, 1937110, 0x1e0ffff0, 1, 25 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x000009db3a5972b08bf1192bcc526980ed03ba37f67f110cef91c61555513753\"));\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000005998a81de3e7911a00654702fd51565598fa7b6be5080fc06789de8a3e8\"));\n         assert(genesis.hashMerkleRoot == uint256S(\"0x330a943749361a6b38937f7ab092554316d677e556e7fb505f43a5101fdd7c02\"));\n \n         vFixedSeeds.clear(); //! Regtest mode doesn't have any fixed seeds.\n@@ -327,7 +327,7 @@ class CRegTestParams : public CChainParams {\n \n         checkpointData = (CCheckpointData){\n             boost::assign::map_list_of\n-            ( 0, uint256S(\"0x000009db3a5972b08bf1192bcc526980ed03ba37f67f110cef91c61555513753\")),\n+            ( 0, uint256S(\"0x000005998a81de3e7911a00654702fd51565598fa7b6be5080fc06789de8a3e8\")),\n             0,\n             0,\n             0"
      }
    ]
  },
  {
    "sha": "8561bb20b545e19a424e3632500f20fc35f20f19",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NTYxYmIyMGI1NDVlMTlhNDI0ZTM2MzI1MDBmMjBmYzM1ZjIwZjE5",
    "commit": {
      "author": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-26T09:53:14Z"
      },
      "committer": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-26T09:53:14Z"
      },
      "message": "fix chainparams.cpp",
      "tree": {
        "sha": "3ba5a7de00af1a6507f83447a15c92d54f44ed74",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3ba5a7de00af1a6507f83447a15c92d54f44ed74"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8561bb20b545e19a424e3632500f20fc35f20f19",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8561bb20b545e19a424e3632500f20fc35f20f19",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8561bb20b545e19a424e3632500f20fc35f20f19",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8561bb20b545e19a424e3632500f20fc35f20f19/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "e84ebf7c7793e66dbd1a2ceabb9938f0a37689b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e84ebf7c7793e66dbd1a2ceabb9938f0a37689b6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e84ebf7c7793e66dbd1a2ceabb9938f0a37689b6"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 15,
      "deletions": 34
    },
    "files": [
      {
        "sha": "6f8e7167fdfcd74d2a34741aba8d8c5d18fcc4c1",
        "filename": "share/qt/Info.plist",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8561bb20b545e19a424e3632500f20fc35f20f19/share/qt/Info.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8561bb20b545e19a424e3632500f20fc35f20f19/share/qt/Info.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/Info.plist?ref=8561bb20b545e19a424e3632500f20fc35f20f19",
        "patch": "@@ -17,7 +17,7 @@\n   <string>APPL</string>\n \n   <key>CFBundleGetInfoString</key>\n-  <string>0.12.1, Copyright \u00a9 2009-2018 The Bitcoin Core developers, 2014-2018 The Dash Core developers, 2017-2018 The Aither Core developers, 2018 The Aither Core developers</string>\n+  <string>0.12.1, Copyright \u00a9 2009-2018 The Bitcoin Core developers, 2014-2018 The Dash Core developers, 2017-2018 The Aither Core developers, 2018-2018 The Aither Core developers</string>\n \n   <key>CFBundleShortVersionString</key>\n   <string>0.12.1</string>"
      },
      {
        "sha": "6084fc6cf1add45497aa1497e5e27a82066be476",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 29,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8561bb20b545e19a424e3632500f20fc35f20f19/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8561bb20b545e19a424e3632500f20fc35f20f19/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=8561bb20b545e19a424e3632500f20fc35f20f19",
        "patch": "@@ -86,7 +86,7 @@ class CMainParams : public CChainParams {\n         consensus.BIP34Height = 227931; // FIX\n         consensus.BIP34Hash = uint256S(\"0x000000000000024b89b42a942fe0d9fea3bb44ab7bd1b19115dd6a759c0808b8\"); // FIX\n         consensus.powLimit = uint256S(\"00000fffff000000000000000000000000000000000000000000000000000000\");\n-        consensus.nPowTargetTimespan = 24 * 60 * 60; // Aither: 1 day, 24 blocks\n+        consensus.nPowTargetTimespan = 60 * 60; // Aither: 1 day, 24 blocks\n         consensus.nPowTargetSpacing = 2.5 * 60; // Aither: 150 seconds\n         consensus.fPowAllowMinDifficultyBlocks = false;\n         consensus.fPowNoRetargeting = false;\n@@ -115,7 +115,7 @@ class CMainParams : public CChainParams {\n         nMaxTipAge = 60 * 60 * 60; // ~144 blocks behind -> 2 x fork detection time, was 24 * 60 * 60 in bitcoin\n         nPruneAfterHeight = 100000;\n \n-        genesis = CreateGenesisBlock(1527258000, 592642, 0x1e0ffff0, 1, 25 * COIN);\n+        genesis = CreateGenesisBlock(1527258000, 592642, 0x1e0ffff0, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n         assert(consensus.hashGenesisBlock == uint256S(\"0x000009db3a5972b08bf1192bcc526980ed03ba37f67f110cef91c61555513753\"));\n         assert(genesis.hashMerkleRoot == uint256S(\"0x330a943749361a6b38937f7ab092554316d677e556e7fb505f43a5101fdd7c02\"));\n@@ -151,14 +151,7 @@ class CMainParams : public CChainParams {\n         strSporkPubKey = \"04080a56cc3f424a153dc2e5c8c784aa9c80196c5ccbf9711a7dc22e7042d42d00e7cb0ec91f5ea2fb00d7bb95c76763798bd7c2418f94d43b777333071fec6ff1\";\n         strMasternodePaymentsPubKey = \"042925f2904184e419f890076f94e24943b20e149b4ba703e90b03d974ed04325e2cb289941d220e161000ead5e1cefebe160993df6f3b23741fa5f6e4c6f7a123\";\n \n-        checkpointData = (CCheckpointData) {\n-            boost::assign::map_list_of\n-             (    0, uint256S(\"0x000009db3a5972b08bf1192bcc526980ed03ba37f67f110cef91c61555513753\")),\n-            1527258000, // * UNIX timestamp of last checkpoint block\n-            0,     // * total number of transactions between genesis and last checkpoint\n-                        //   (the tx=... number in the SetBestChain debug.log lines)\n-            2800        // * estimated number of transactions per day after checkpoint\n-        };\n+        checkpointData = {};\n     }\n };\n static CMainParams mainParams;\n@@ -171,7 +164,7 @@ class CTestNetParams : public CChainParams {\n     CTestNetParams() {\n         strNetworkID = \"test\";\n         consensus.nSubsidyHalvingInterval = 262800;\n-        consensus.nMasternodePaymentsStartBlock = 300; // not true, but it's ok as long as it's less then nMasternodePaymentsIncreaseBlock\n+        consensus.nMasternodePaymentsStartBlock = 1000; // not true, but it's ok as long as it's less then nMasternodePaymentsIncreaseBlock\n         consensus.nMasternodePaymentsIncreaseBlock = 158000;\n         consensus.nMasternodePaymentsIncreasePeriod = 576*30;\n         consensus.nInstantSendKeepLock = 6;\n@@ -214,7 +207,7 @@ class CTestNetParams : public CChainParams {\n         nMaxTipAge = 0x7fffffff; // allow mining on top of old blocks for testnet\n         nPruneAfterHeight = 1000;\n \n-        genesis = CreateGenesisBlock(1527250000, 1937110, 0x1e0ffff0, 1, 25 * COIN);\n+        genesis = CreateGenesisBlock(1527250000, 1937110, 0x1e0ffff0, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n         assert(consensus.hashGenesisBlock == uint256S(\"0x000005998a81de3e7911a00654702fd51565598fa7b6be5080fc06789de8a3e8\"));\n         assert(genesis.hashMerkleRoot == uint256S(\"0x330a943749361a6b38937f7ab092554316d677e556e7fb505f43a5101fdd7c02\"));\n@@ -249,13 +242,7 @@ class CTestNetParams : public CChainParams {\n         strSporkPubKey = \"04080a56cc3f424a153dc2e5c8c784aa9c80196c5ccbf9711a7dc22e7042d42d00e7cb0ec91f5ea2fb00d7bb95c76763798bd7c2418f94d43b777333071fec6ff1\";\n         strMasternodePaymentsPubKey = \"042debfdefc73e408e3269318a5767d3ce3f996593e6a6596b10907e76381bd5f0862d0e418c0d6862e88c8db42bff39a0d37ea61cca41713007f1f098cd139f84\";\n \n-        checkpointData = (CCheckpointData) {\n-            boost::assign::map_list_of\n-                    ( 0, uint256S(\"0x000005998a81de3e7911a00654702fd51565598fa7b6be5080fc06789de8a3e8\")),\n-            0,\n-            0,\n-            0\n-        };\n+        checkpointData = {};\n \n     }\n };\n@@ -305,13 +292,13 @@ class CRegTestParams : public CChainParams {\n         pchMessageStart[1] = 0x9b;\n         pchMessageStart[2] = 0x37;\n         pchMessageStart[3] = 0x28;\n-        nMaxTipAge = 6 * 60 * 60; // ~144 blocks behind -> 2 x fork detection time, was 24 * 60 * 60 in bitcoin\n+        nMaxTipAge = 60 * 60 * 60; // ~144 blocks behind -> 2 x fork detection time, was 24 * 60 * 60 in bitcoin => change to 60 hrs\n         nDefaultPort = 42888;\n         nPruneAfterHeight = 1000;\n \n-        genesis = CreateGenesisBlock(1527250000, 1937110, 0x1e0ffff0, 1, 25 * COIN);\n+        genesis = CreateGenesisBlock(1527240000, 1401732, 0x1e0ffff0, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x000005998a81de3e7911a00654702fd51565598fa7b6be5080fc06789de8a3e8\"));\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000004a6849c72fb2955c26ef3688dc3f1e337ce7553433445834f48810e8c80\"));\n         assert(genesis.hashMerkleRoot == uint256S(\"0x330a943749361a6b38937f7ab092554316d677e556e7fb505f43a5101fdd7c02\"));\n \n         vFixedSeeds.clear(); //! Regtest mode doesn't have any fixed seeds.\n@@ -325,13 +312,7 @@ class CRegTestParams : public CChainParams {\n \n         nFulfilledRequestExpireTime = 5*60; // fulfilled requests expire in 5 minutes\n \n-        checkpointData = (CCheckpointData){\n-            boost::assign::map_list_of\n-            ( 0, uint256S(\"0x000005998a81de3e7911a00654702fd51565598fa7b6be5080fc06789de8a3e8\")),\n-            0,\n-            0,\n-            0\n-        };\n+        checkpointData = {};\n         // Regtest Aither addresses start with 'n'\n         base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n         // Regtest Aither script addresses start with '9'"
      },
      {
        "sha": "ca487b26f55cbe286c6f7ab5acc3300ffc03b622",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8561bb20b545e19a424e3632500f20fc35f20f19/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8561bb20b545e19a424e3632500f20fc35f20f19/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=8561bb20b545e19a424e3632500f20fc35f20f19",
        "patch": "@@ -32,7 +32,7 @@ class CBaseMainParams : public CBaseChainParams\n public:\n     CBaseMainParams()\n     {\n-        nRPCPort = 12454;\n+        nRPCPort = 40999;\n     }\n };\n static CBaseMainParams mainParams;\n@@ -45,7 +45,7 @@ class CBaseTestNetParams : public CBaseChainParams\n public:\n     CBaseTestNetParams()\n     {\n-        nRPCPort = 13454;\n+        nRPCPort = 41999;\n         strDataDir = \"testnet3\";\n     }\n };\n@@ -59,7 +59,7 @@ class CBaseRegTestParams : public CBaseChainParams\n public:\n     CBaseRegTestParams()\n     {\n-        nRPCPort = 13564;\n+        nRPCPort = 42999;\n         strDataDir = \"regtest\";\n     }\n };"
      },
      {
        "sha": "22896a74339ebf54b1a3bbca85a5b6b64e6895af",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8561bb20b545e19a424e3632500f20fc35f20f19/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8561bb20b545e19a424e3632500f20fc35f20f19/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=8561bb20b545e19a424e3632500f20fc35f20f19",
        "patch": "@@ -1743,7 +1743,7 @@ NOTE:   unlike bitcoin we are using PREVIOUS block height here,\n CAmount GetBlockSubsidy(int nPrevBits, int nPrevHeight, const Consensus::Params& consensusParams, bool fSuperblockPartOnly)\n {\n     if (nPrevHeight == 0) {\n-        return 850000 * COIN;\n+        return 1000000 * COIN;\n     }\n \n     CAmount nSubsidy = 15 * COIN;"
      }
    ]
  },
  {
    "sha": "2326b5e4b9a5806b0159663a0f0b580ab8787bf7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMzI2YjVlNGI5YTU4MDZiMDE1OTY2M2EwZjBiNTgwYWI4Nzg3YmY3",
    "commit": {
      "author": {
        "name": "test",
        "email": "test@gmail.com",
        "date": "2018-05-26T15:47:49Z"
      },
      "committer": {
        "name": "test",
        "email": "test@gmail.com",
        "date": "2018-05-26T15:47:49Z"
      },
      "message": "add bitcoin key gen",
      "tree": {
        "sha": "245d7b9a7c8df07969985fad936b847eb5f38bd8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/245d7b9a7c8df07969985fad936b847eb5f38bd8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2326b5e4b9a5806b0159663a0f0b580ab8787bf7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2326b5e4b9a5806b0159663a0f0b580ab8787bf7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2326b5e4b9a5806b0159663a0f0b580ab8787bf7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2326b5e4b9a5806b0159663a0f0b580ab8787bf7/comments",
    "author": {
      "login": "amagri",
      "id": 31654,
      "node_id": "MDQ6VXNlcjMxNjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/31654?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amagri",
      "html_url": "https://github.com/amagri",
      "followers_url": "https://api.github.com/users/amagri/followers",
      "following_url": "https://api.github.com/users/amagri/following{/other_user}",
      "gists_url": "https://api.github.com/users/amagri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amagri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amagri/subscriptions",
      "organizations_url": "https://api.github.com/users/amagri/orgs",
      "repos_url": "https://api.github.com/users/amagri/repos",
      "events_url": "https://api.github.com/users/amagri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amagri/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amagri",
      "id": 31654,
      "node_id": "MDQ6VXNlcjMxNjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/31654?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amagri",
      "html_url": "https://github.com/amagri",
      "followers_url": "https://api.github.com/users/amagri/followers",
      "following_url": "https://api.github.com/users/amagri/following{/other_user}",
      "gists_url": "https://api.github.com/users/amagri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amagri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amagri/subscriptions",
      "organizations_url": "https://api.github.com/users/amagri/orgs",
      "repos_url": "https://api.github.com/users/amagri/repos",
      "events_url": "https://api.github.com/users/amagri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amagri/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ab6ae7e486d465c139039a9cb24fd67f37fdd33b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab6ae7e486d465c139039a9cb24fd67f37fdd33b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ab6ae7e486d465c139039a9cb24fd67f37fdd33b"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 21,
      "deletions": 0
    },
    "files": [
      {
        "sha": "bc2575a0a113b687625d62f920c510c149c74074",
        "filename": "contrib/bitcoin-key/gen.sh",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2326b5e4b9a5806b0159663a0f0b580ab8787bf7/contrib/bitcoin-key/gen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2326b5e4b9a5806b0159663a0f0b580ab8787bf7/contrib/bitcoin-key/gen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-key/gen.sh?ref=2326b5e4b9a5806b0159663a0f0b580ab8787bf7",
        "patch": "@@ -0,0 +1,21 @@\n+#!/bin/sh\n+\n+FILE_NAME=$1\n+PRIVATE_KEY=${FILE_NAME}_private.pem\n+PUBLIC_KEY=${FILE_NAME}_public.pem\n+BITCOIN_PRIVATE_KEY=bitcoin_${FILE_NAME}_private.key\n+BITCOIN_PUBLIC_KEY=bitcoin_${FILE_NAME}_public.key\n+\n+echo \"Generating private key\"\n+openssl ecparam -genkey -name secp256k1 -rand /dev/urandom -out $PRIVATE_KEY\n+\n+echo \"Generating public key\"\n+openssl ec -in $PRIVATE_KEY -pubout -out $PUBLIC_KEY\n+\n+echo \"Generating BitCoin private key\"\n+openssl ec -in $PRIVATE_KEY -outform DER|tail -c +8|head -c 32|xxd -p -c 32 > $BITCOIN_PRIVATE_KEY\n+\n+echo \"Generating BitCoin public key\"\n+openssl ec -in $PRIVATE_KEY -pubout -outform DER|tail -c 65|xxd -p -c 65 > $BITCOIN_PUBLIC_KEY\n+\n+echo \"Files created!\"\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "e8cb4cc1f570a4c4088ae54a51c155e442e9daf7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOGNiNGNjMWY1NzBhNGM0MDg4YWU1NGE1MWMxNTVlNDQyZTlkYWY3",
    "commit": {
      "author": {
        "name": "test",
        "email": "test@gmail.com",
        "date": "2018-05-26T15:48:04Z"
      },
      "committer": {
        "name": "test",
        "email": "test@gmail.com",
        "date": "2018-05-26T15:48:04Z"
      },
      "message": "Merge remote-tracking branch 'origin/master'",
      "tree": {
        "sha": "72f302dd2198524936dc80b7e5a81f08617f041c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/72f302dd2198524936dc80b7e5a81f08617f041c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e8cb4cc1f570a4c4088ae54a51c155e442e9daf7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8cb4cc1f570a4c4088ae54a51c155e442e9daf7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e8cb4cc1f570a4c4088ae54a51c155e442e9daf7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8cb4cc1f570a4c4088ae54a51c155e442e9daf7/comments",
    "author": {
      "login": "amagri",
      "id": 31654,
      "node_id": "MDQ6VXNlcjMxNjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/31654?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amagri",
      "html_url": "https://github.com/amagri",
      "followers_url": "https://api.github.com/users/amagri/followers",
      "following_url": "https://api.github.com/users/amagri/following{/other_user}",
      "gists_url": "https://api.github.com/users/amagri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amagri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amagri/subscriptions",
      "organizations_url": "https://api.github.com/users/amagri/orgs",
      "repos_url": "https://api.github.com/users/amagri/repos",
      "events_url": "https://api.github.com/users/amagri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amagri/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amagri",
      "id": 31654,
      "node_id": "MDQ6VXNlcjMxNjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/31654?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amagri",
      "html_url": "https://github.com/amagri",
      "followers_url": "https://api.github.com/users/amagri/followers",
      "following_url": "https://api.github.com/users/amagri/following{/other_user}",
      "gists_url": "https://api.github.com/users/amagri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amagri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amagri/subscriptions",
      "organizations_url": "https://api.github.com/users/amagri/orgs",
      "repos_url": "https://api.github.com/users/amagri/repos",
      "events_url": "https://api.github.com/users/amagri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amagri/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2326b5e4b9a5806b0159663a0f0b580ab8787bf7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2326b5e4b9a5806b0159663a0f0b580ab8787bf7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2326b5e4b9a5806b0159663a0f0b580ab8787bf7"
      },
      {
        "sha": "8561bb20b545e19a424e3632500f20fc35f20f19",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8561bb20b545e19a424e3632500f20fc35f20f19",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8561bb20b545e19a424e3632500f20fc35f20f19"
      }
    ],
    "stats": {
      "total": 189,
      "additions": 149,
      "deletions": 40
    },
    "files": [
      {
        "sha": "06f419af9fc6c8941e7583beab5619bb2852cd09",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 129,
        "deletions": 1,
        "changes": 130,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8cb4cc1f570a4c4088ae54a51c155e442e9daf7/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8cb4cc1f570a4c4088ae54a51c155e442e9daf7/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=e8cb4cc1f570a4c4088ae54a51c155e442e9daf7",
        "patch": "@@ -90,4 +90,132 @@ aitherd\n aither-qt\n .idea\n db-4.8.30.NC*\n-release\n\\ No newline at end of file\n+release\n+Makefile\n+Makefile.in\n+aclocal.m4\n+autom4te.cache/\n+build-aux/compile\n+build-aux/config.guess\n+build-aux/config.sub\n+build-aux/depcomp\n+build-aux/install-sh\n+build-aux/ltmain.sh\n+build-aux/m4/libtool.m4\n+build-aux/m4/ltoptions.m4\n+build-aux/m4/ltsugar.m4\n+build-aux/m4/ltversion.m4\n+build-aux/m4/lt~obsolete.m4\n+build-aux/missing\n+build-aux/test-driver\n+config.status\n+configure\n+db4/\n+libtool\n+share/setup.nsi\n+src/Makefile\n+src/Makefile.in\n+src/config/aither-config.h\n+src/config/aither-config.h.in\n+src/config/stamp-h1\n+src/qt/aither.moc\n+src/qt/bitcoinamountfield.moc\n+src/qt/forms/ui_addressbookpage.h\n+src/qt/forms/ui_askpassphrasedialog.h\n+src/qt/forms/ui_coincontroldialog.h\n+src/qt/forms/ui_darksendconfig.h\n+src/qt/forms/ui_debugwindow.h\n+src/qt/forms/ui_editaddressdialog.h\n+src/qt/forms/ui_helpmessagedialog.h\n+src/qt/forms/ui_intro.h\n+src/qt/forms/ui_masternodelist.h\n+src/qt/forms/ui_openuridialog.h\n+src/qt/forms/ui_optionsdialog.h\n+src/qt/forms/ui_overviewpage.h\n+src/qt/forms/ui_receivecoinsdialog.h\n+src/qt/forms/ui_receiverequestdialog.h\n+src/qt/forms/ui_sendcoinsdialog.h\n+src/qt/forms/ui_sendcoinsentry.h\n+src/qt/forms/ui_signverifymessagedialog.h\n+src/qt/forms/ui_transactiondescdialog.h\n+src/qt/intro.moc\n+src/qt/locale/aither_bg.qm\n+src/qt/locale/aither_de.qm\n+src/qt/locale/aither_en.qm\n+src/qt/locale/aither_es.qm\n+src/qt/locale/aither_fi.qm\n+src/qt/locale/aither_fr.qm\n+src/qt/locale/aither_it.qm\n+src/qt/locale/aither_ja.qm\n+src/qt/locale/aither_pl.qm\n+src/qt/locale/aither_pt.qm\n+src/qt/locale/aither_ru.qm\n+src/qt/locale/aither_sk.qm\n+src/qt/locale/aither_sv.qm\n+src/qt/locale/aither_vi.qm\n+src/qt/locale/aither_zh_CN.qm\n+src/qt/locale/aither_zh_TW.qm\n+src/qt/moc_addressbookpage.cpp\n+src/qt/moc_addresstablemodel.cpp\n+src/qt/moc_askpassphrasedialog.cpp\n+src/qt/moc_bantablemodel.cpp\n+src/qt/moc_bitcoinaddressvalidator.cpp\n+src/qt/moc_bitcoinamountfield.cpp\n+src/qt/moc_bitcoingui.cpp\n+src/qt/moc_bitcoinunits.cpp\n+src/qt/moc_clientmodel.cpp\n+src/qt/moc_coincontroldialog.cpp\n+src/qt/moc_coincontroltreewidget.cpp\n+src/qt/moc_csvmodelwriter.cpp\n+src/qt/moc_darksendconfig.cpp\n+src/qt/moc_editaddressdialog.cpp\n+src/qt/moc_guiutil.cpp\n+src/qt/moc_intro.cpp\n+src/qt/moc_macdockiconhandler.cpp\n+src/qt/moc_macnotificationhandler.cpp\n+src/qt/moc_masternodelist.cpp\n+src/qt/moc_notificator.cpp\n+src/qt/moc_openuridialog.cpp\n+src/qt/moc_optionsdialog.cpp\n+src/qt/moc_optionsmodel.cpp\n+src/qt/moc_overviewpage.cpp\n+src/qt/moc_paymentserver.cpp\n+src/qt/moc_peertablemodel.cpp\n+src/qt/moc_qvalidatedlineedit.cpp\n+src/qt/moc_qvaluecombobox.cpp\n+src/qt/moc_receivecoinsdialog.cpp\n+src/qt/moc_receiverequestdialog.cpp\n+src/qt/moc_recentrequeststablemodel.cpp\n+src/qt/moc_rpcconsole.cpp\n+src/qt/moc_sendcoinsdialog.cpp\n+src/qt/moc_sendcoinsentry.cpp\n+src/qt/moc_signverifymessagedialog.cpp\n+src/qt/moc_splashscreen.cpp\n+src/qt/moc_trafficgraphwidget.cpp\n+src/qt/moc_transactiondesc.cpp\n+src/qt/moc_transactiondescdialog.cpp\n+src/qt/moc_transactionfilterproxy.cpp\n+src/qt/moc_transactiontablemodel.cpp\n+src/qt/moc_transactionview.cpp\n+src/qt/moc_utilitydialog.cpp\n+src/qt/moc_walletframe.cpp\n+src/qt/moc_walletmodel.cpp\n+src/qt/moc_walletview.cpp\n+src/qt/overviewpage.moc\n+src/qt/rpcconsole.moc\n+src/qt/test/moc_compattests.cpp\n+src/qt/test/moc_paymentservertests.cpp\n+src/qt/test/moc_uritests.cpp\n+src/secp256k1/build-aux/compile\n+src/secp256k1/build-aux/config.guess\n+src/secp256k1/build-aux/config.sub\n+src/secp256k1/build-aux/depcomp\n+src/secp256k1/build-aux/install-sh\n+src/secp256k1/build-aux/ltmain.sh\n+src/secp256k1/build-aux/m4/libtool.m4\n+src/secp256k1/build-aux/m4/ltoptions.m4\n+src/secp256k1/build-aux/m4/ltsugar.m4\n+src/secp256k1/build-aux/m4/ltversion.m4\n+src/secp256k1/build-aux/m4/lt~obsolete.m4\n+src/secp256k1/build-aux/missing\n+src/secp256k1/build-aux/test-driver"
      },
      {
        "sha": "6f8e7167fdfcd74d2a34741aba8d8c5d18fcc4c1",
        "filename": "share/qt/Info.plist",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8cb4cc1f570a4c4088ae54a51c155e442e9daf7/share/qt/Info.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8cb4cc1f570a4c4088ae54a51c155e442e9daf7/share/qt/Info.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/Info.plist?ref=e8cb4cc1f570a4c4088ae54a51c155e442e9daf7",
        "patch": "@@ -17,7 +17,7 @@\n   <string>APPL</string>\n \n   <key>CFBundleGetInfoString</key>\n-  <string>0.12.1, Copyright \u00a9 2009-2017 The Bitcoin Core developers, 2014-2017 The Dash Core developers, 2017-2018 The GoByte Core developers, 2018 The Aither Core developers</string>\n+  <string>0.12.1, Copyright \u00a9 2009-2018 The Bitcoin Core developers, 2014-2018 The Dash Core developers, 2017-2018 The Aither Core developers, 2018-2018 The Aither Core developers</string>\n \n   <key>CFBundleShortVersionString</key>\n   <string>0.12.1</string>"
      },
      {
        "sha": "6084fc6cf1add45497aa1497e5e27a82066be476",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 34,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8cb4cc1f570a4c4088ae54a51c155e442e9daf7/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8cb4cc1f570a4c4088ae54a51c155e442e9daf7/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=e8cb4cc1f570a4c4088ae54a51c155e442e9daf7",
        "patch": "@@ -67,7 +67,7 @@ class CMainParams : public CChainParams {\n     CMainParams() {\n         strNetworkID = \"main\";\n         consensus.nSubsidyHalvingInterval = 262800; // one year\n-        consensus.nMasternodePaymentsStartBlock = 1152; // not true, but it's ok as long as it's less then nMasternodePaymentsIncreaseBlock\n+        consensus.nMasternodePaymentsStartBlock = 100000; // not true, but it's ok as long as it's less then nMasternodePaymentsIncreaseBlock\n         consensus.nMasternodePaymentsIncreaseBlock = 158000; // not used\n         consensus.nMasternodePaymentsIncreasePeriod = 576*30; // not used\n         consensus.nInstantSendKeepLock = 24;\n@@ -86,7 +86,7 @@ class CMainParams : public CChainParams {\n         consensus.BIP34Height = 227931; // FIX\n         consensus.BIP34Hash = uint256S(\"0x000000000000024b89b42a942fe0d9fea3bb44ab7bd1b19115dd6a759c0808b8\"); // FIX\n         consensus.powLimit = uint256S(\"00000fffff000000000000000000000000000000000000000000000000000000\");\n-        consensus.nPowTargetTimespan = 60 * 60; // Aither: 1 hour, 24 blocks\n+        consensus.nPowTargetTimespan = 60 * 60; // Aither: 1 day, 24 blocks\n         consensus.nPowTargetSpacing = 2.5 * 60; // Aither: 150 seconds\n         consensus.fPowAllowMinDifficultyBlocks = false;\n         consensus.fPowNoRetargeting = false;\n@@ -112,7 +112,7 @@ class CMainParams : public CChainParams {\n         pchMessageStart[3] = 0xd4;\n         vAlertPubKey = ParseHex(\"04b6a3a2911d40d214be61d573bfb1a32ef98b931d9c721f7bbbbdf2692abfd5eb235692d3ad1a81f75157fd0a9d96866b62b717d091f2481b70e3b8d87cc68fd3\");\n         nDefaultPort = 40888;\n-        nMaxTipAge = 6 * 60 * 60; // ~144 blocks behind -> 2 x fork detection time, was 24 * 60 * 60 in bitcoin\n+        nMaxTipAge = 60 * 60 * 60; // ~144 blocks behind -> 2 x fork detection time, was 24 * 60 * 60 in bitcoin\n         nPruneAfterHeight = 100000;\n \n         genesis = CreateGenesisBlock(1527258000, 592642, 0x1e0ffff0, 1, 50 * COIN);\n@@ -151,14 +151,7 @@ class CMainParams : public CChainParams {\n         strSporkPubKey = \"04080a56cc3f424a153dc2e5c8c784aa9c80196c5ccbf9711a7dc22e7042d42d00e7cb0ec91f5ea2fb00d7bb95c76763798bd7c2418f94d43b777333071fec6ff1\";\n         strMasternodePaymentsPubKey = \"042925f2904184e419f890076f94e24943b20e149b4ba703e90b03d974ed04325e2cb289941d220e161000ead5e1cefebe160993df6f3b23741fa5f6e4c6f7a123\";\n \n-        checkpointData = (CCheckpointData) {\n-            boost::assign::map_list_of\n-             (    0, uint256S(\"0x00000b0842cc38c409e404817ee8eadce259494afb87619e127b061602362851\")),\n-            1522050118, // * UNIX timestamp of last checkpoint block\n-            0,     // * total number of transactions between genesis and last checkpoint\n-                        //   (the tx=... number in the SetBestChain debug.log lines)\n-            2800        // * estimated number of transactions per day after checkpoint\n-        };\n+        checkpointData = {};\n     }\n };\n static CMainParams mainParams;\n@@ -171,7 +164,7 @@ class CTestNetParams : public CChainParams {\n     CTestNetParams() {\n         strNetworkID = \"test\";\n         consensus.nSubsidyHalvingInterval = 262800;\n-        consensus.nMasternodePaymentsStartBlock = 300; // not true, but it's ok as long as it's less then nMasternodePaymentsIncreaseBlock\n+        consensus.nMasternodePaymentsStartBlock = 1000; // not true, but it's ok as long as it's less then nMasternodePaymentsIncreaseBlock\n         consensus.nMasternodePaymentsIncreaseBlock = 158000;\n         consensus.nMasternodePaymentsIncreasePeriod = 576*30;\n         consensus.nInstantSendKeepLock = 6;\n@@ -190,7 +183,7 @@ class CTestNetParams : public CChainParams {\n         consensus.BIP34Height = 21111; // FIX\n         consensus.BIP34Hash = uint256S(\"0x0000000023b3a96d3484e5abb3755c413e7d41500f8e2a5c3f0dd01299cd8ef8\"); // FIX\n         consensus.powLimit = uint256S(\"00000fffff000000000000000000000000000000000000000000000000000000\");\n-        consensus.nPowTargetTimespan = 60 * 60; // Aither: 1 hour, 24 blocks\n+        consensus.nPowTargetTimespan = 5 * 60; // Aither: 1 hour, 24 blocks\n         consensus.nPowTargetSpacing = 2.5 * 60; // Aither: 150 seconds\n         consensus.fPowAllowMinDifficultyBlocks = true;\n         consensus.fPowNoRetargeting = false;\n@@ -210,13 +203,13 @@ class CTestNetParams : public CChainParams {\n         pchMessageStart[2] = 0x37;\n         pchMessageStart[3] = 0x28;\n         vAlertPubKey = ParseHex(\"04904d236abae451f9b5c7bf476486588f503a18096d538a7d8cddd95dd0ebcfd7433d0a5969c88eb47af4090a43437776ed09ddf95970d8363e196bc1a9391ced\");\n-        nDefaultPort = 13455;\n+        nDefaultPort = 41888;\n         nMaxTipAge = 0x7fffffff; // allow mining on top of old blocks for testnet\n         nPruneAfterHeight = 1000;\n \n-        genesis = CreateGenesisBlock(1527258000, 592642, 0x1e0ffff0, 1, 50 * COIN);\n+        genesis = CreateGenesisBlock(1527250000, 1937110, 0x1e0ffff0, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x000009db3a5972b08bf1192bcc526980ed03ba37f67f110cef91c61555513753\"));\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000005998a81de3e7911a00654702fd51565598fa7b6be5080fc06789de8a3e8\"));\n         assert(genesis.hashMerkleRoot == uint256S(\"0x330a943749361a6b38937f7ab092554316d677e556e7fb505f43a5101fdd7c02\"));\n \n         vFixedSeeds.clear();\n@@ -249,13 +242,7 @@ class CTestNetParams : public CChainParams {\n         strSporkPubKey = \"04080a56cc3f424a153dc2e5c8c784aa9c80196c5ccbf9711a7dc22e7042d42d00e7cb0ec91f5ea2fb00d7bb95c76763798bd7c2418f94d43b777333071fec6ff1\";\n         strMasternodePaymentsPubKey = \"042debfdefc73e408e3269318a5767d3ce3f996593e6a6596b10907e76381bd5f0862d0e418c0d6862e88c8db42bff39a0d37ea61cca41713007f1f098cd139f84\";\n \n-        checkpointData = (CCheckpointData) {\n-            boost::assign::map_list_of\n-                    ( 0, uint256S(\"0x00000dbc9aa1686b4dfb177300185c6a3e0b13d1d4d346c5bccdd19fdf9ebc5a\")),\n-            0,\n-            0,\n-            0\n-        };\n+        checkpointData = {};\n \n     }\n };\n@@ -305,13 +292,13 @@ class CRegTestParams : public CChainParams {\n         pchMessageStart[1] = 0x9b;\n         pchMessageStart[2] = 0x37;\n         pchMessageStart[3] = 0x28;\n-        nMaxTipAge = 6 * 60 * 60; // ~144 blocks behind -> 2 x fork detection time, was 24 * 60 * 60 in bitcoin\n-        nDefaultPort = 13565;\n+        nMaxTipAge = 60 * 60 * 60; // ~144 blocks behind -> 2 x fork detection time, was 24 * 60 * 60 in bitcoin => change to 60 hrs\n+        nDefaultPort = 42888;\n         nPruneAfterHeight = 1000;\n \n-        genesis = CreateGenesisBlock(1527258000, 592642, 0x1e0ffff0, 1, 50 * COIN);\n+        genesis = CreateGenesisBlock(1527240000, 1401732, 0x1e0ffff0, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x000009db3a5972b08bf1192bcc526980ed03ba37f67f110cef91c61555513753\"));\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000004a6849c72fb2955c26ef3688dc3f1e337ce7553433445834f48810e8c80\"));\n         assert(genesis.hashMerkleRoot == uint256S(\"0x330a943749361a6b38937f7ab092554316d677e556e7fb505f43a5101fdd7c02\"));\n \n         vFixedSeeds.clear(); //! Regtest mode doesn't have any fixed seeds.\n@@ -325,13 +312,7 @@ class CRegTestParams : public CChainParams {\n \n         nFulfilledRequestExpireTime = 5*60; // fulfilled requests expire in 5 minutes\n \n-        checkpointData = (CCheckpointData){\n-            boost::assign::map_list_of\n-            ( 0, uint256S(\"0x00000dbc9aa1686b4dfb177300185c6a3e0b13d1d4d346c5bccdd19fdf9ebc5a\")),\n-            0,\n-            0,\n-            0\n-        };\n+        checkpointData = {};\n         // Regtest Aither addresses start with 'n'\n         base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n         // Regtest Aither script addresses start with '9'"
      },
      {
        "sha": "ca487b26f55cbe286c6f7ab5acc3300ffc03b622",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8cb4cc1f570a4c4088ae54a51c155e442e9daf7/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8cb4cc1f570a4c4088ae54a51c155e442e9daf7/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=e8cb4cc1f570a4c4088ae54a51c155e442e9daf7",
        "patch": "@@ -32,7 +32,7 @@ class CBaseMainParams : public CBaseChainParams\n public:\n     CBaseMainParams()\n     {\n-        nRPCPort = 12454;\n+        nRPCPort = 40999;\n     }\n };\n static CBaseMainParams mainParams;\n@@ -45,7 +45,7 @@ class CBaseTestNetParams : public CBaseChainParams\n public:\n     CBaseTestNetParams()\n     {\n-        nRPCPort = 13454;\n+        nRPCPort = 41999;\n         strDataDir = \"testnet3\";\n     }\n };\n@@ -59,7 +59,7 @@ class CBaseRegTestParams : public CBaseChainParams\n public:\n     CBaseRegTestParams()\n     {\n-        nRPCPort = 13564;\n+        nRPCPort = 42999;\n         strDataDir = \"regtest\";\n     }\n };"
      },
      {
        "sha": "22896a74339ebf54b1a3bbca85a5b6b64e6895af",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8cb4cc1f570a4c4088ae54a51c155e442e9daf7/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8cb4cc1f570a4c4088ae54a51c155e442e9daf7/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=e8cb4cc1f570a4c4088ae54a51c155e442e9daf7",
        "patch": "@@ -1743,7 +1743,7 @@ NOTE:   unlike bitcoin we are using PREVIOUS block height here,\n CAmount GetBlockSubsidy(int nPrevBits, int nPrevHeight, const Consensus::Params& consensusParams, bool fSuperblockPartOnly)\n {\n     if (nPrevHeight == 0) {\n-        return 850000 * COIN;\n+        return 1000000 * COIN;\n     }\n \n     CAmount nSubsidy = 15 * COIN;"
      }
    ]
  },
  {
    "sha": "ec056b1539387faf71756878865162cf6413d78c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYzA1NmIxNTM5Mzg3ZmFmNzE3NTY4Nzg4NjUxNjJjZjY0MTNkNzhj",
    "commit": {
      "author": {
        "name": "test",
        "email": "test@gmail.com",
        "date": "2018-05-26T16:39:32Z"
      },
      "committer": {
        "name": "test",
        "email": "test@gmail.com",
        "date": "2018-05-26T16:39:32Z"
      },
      "message": "change pubkey",
      "tree": {
        "sha": "556df026d63d732a299ebbee5d55b9200b77392f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/556df026d63d732a299ebbee5d55b9200b77392f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ec056b1539387faf71756878865162cf6413d78c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec056b1539387faf71756878865162cf6413d78c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ec056b1539387faf71756878865162cf6413d78c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec056b1539387faf71756878865162cf6413d78c/comments",
    "author": {
      "login": "amagri",
      "id": 31654,
      "node_id": "MDQ6VXNlcjMxNjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/31654?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amagri",
      "html_url": "https://github.com/amagri",
      "followers_url": "https://api.github.com/users/amagri/followers",
      "following_url": "https://api.github.com/users/amagri/following{/other_user}",
      "gists_url": "https://api.github.com/users/amagri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amagri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amagri/subscriptions",
      "organizations_url": "https://api.github.com/users/amagri/orgs",
      "repos_url": "https://api.github.com/users/amagri/repos",
      "events_url": "https://api.github.com/users/amagri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amagri/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amagri",
      "id": 31654,
      "node_id": "MDQ6VXNlcjMxNjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/31654?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amagri",
      "html_url": "https://github.com/amagri",
      "followers_url": "https://api.github.com/users/amagri/followers",
      "following_url": "https://api.github.com/users/amagri/following{/other_user}",
      "gists_url": "https://api.github.com/users/amagri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amagri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amagri/subscriptions",
      "organizations_url": "https://api.github.com/users/amagri/orgs",
      "repos_url": "https://api.github.com/users/amagri/repos",
      "events_url": "https://api.github.com/users/amagri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amagri/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e8cb4cc1f570a4c4088ae54a51c155e442e9daf7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8cb4cc1f570a4c4088ae54a51c155e442e9daf7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e8cb4cc1f570a4c4088ae54a51c155e442e9daf7"
      }
    ],
    "stats": {
      "total": 56,
      "additions": 28,
      "deletions": 28
    },
    "files": [
      {
        "sha": "70886f845213b3cd983bbf1e727ba5b6ad45fcb3",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 27,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec056b1539387faf71756878865162cf6413d78c/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec056b1539387faf71756878865162cf6413d78c/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=ec056b1539387faf71756878865162cf6413d78c",
        "patch": "@@ -44,9 +44,9 @@ static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesi\n \n static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n {\n-    //python gen.py -a neoscrypt -t 1527258000 -z \"The Times May 25th 2018 Bitcoin investigation to focus on British traders\" -p \"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\" -b 0x1e0ffff0 -n 592642\n+    //python gen.py -a neoscrypt -t 1527258000 -z \"The Times May 25th 2018 Bitcoin investigation to focus on British traders\" -p \"0435c0f99b3af273876636de037c6c5cf8c4e08101ad15960435615f59c1239dcd9408708f5ec090756ce433092c10209f163c7f174a3cd8258b4969519a4912cf\" -b 0x1e0ffff0 -n 592642\n     const char* pszTimestamp = \"The Times May 25th 2018 Bitcoin investigation to focus on British traders\";\n-    const CScript genesisOutputScript = CScript() << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\") << OP_CHECKSIG;\n+    const CScript genesisOutputScript = CScript() << ParseHex(\"0435c0f99b3af273876636de037c6c5cf8c4e08101ad15960435615f59c1239dcd9408708f5ec090756ce433092c10209f163c7f174a3cd8258b4969519a4912cf\") << OP_CHECKSIG;\n     return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n }\n \n@@ -66,7 +66,7 @@ class CMainParams : public CChainParams {\n public:\n     CMainParams() {\n         strNetworkID = \"main\";\n-        consensus.nSubsidyHalvingInterval = 262800; // one year\n+        consensus.nSubsidyHalvingInterval = 210000; // halve when reached 210,000 block\n         consensus.nMasternodePaymentsStartBlock = 100000; // not true, but it's ok as long as it's less then nMasternodePaymentsIncreaseBlock\n         consensus.nMasternodePaymentsIncreaseBlock = 158000; // not used\n         consensus.nMasternodePaymentsIncreasePeriod = 576*30; // not used\n@@ -115,19 +115,19 @@ class CMainParams : public CChainParams {\n         nMaxTipAge = 60 * 60 * 60; // ~144 blocks behind -> 2 x fork detection time, was 24 * 60 * 60 in bitcoin\n         nPruneAfterHeight = 100000;\n \n-        genesis = CreateGenesisBlock(1527258000, 592642, 0x1e0ffff0, 1, 50 * COIN);\n+        genesis = CreateGenesisBlock(1527258000, 1944819, 0x1e0ffff0, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x000009db3a5972b08bf1192bcc526980ed03ba37f67f110cef91c61555513753\"));\n-        assert(genesis.hashMerkleRoot == uint256S(\"0x330a943749361a6b38937f7ab092554316d677e556e7fb505f43a5101fdd7c02\"));\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x0000008de8b4b9ef8bf126b15f7c39086e698b8c35c59deb31d61b9ea317ccca\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0xeb0ccbad153c1e555c87401023c2d59b30fe9c31f4782d7b888f0f4f7f80675c\"));\n \n-        vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"seed1.aithercoin.com\"));\n-        vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"seed2.aithercoin.com\"));\n-        vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"seed3.aithercoin.com\"));\n+        //vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"seed1.aithercoin.com\"));\n+        //vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"seed2.aithercoin.com\"));\n+        //vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"seed3.aithercoin.com\"));\n \n         // Aither addresses start with 'A'\n         base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,23);\n-        // Aither script addresses start with '5'\n-        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,85);\n+        // Aither script addresses start with 'a'\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,83);\n         // Aither private keys start with '5' or 'G' (?)\n         base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,198);\n         // Aither BIP32 pubkeys start with 'xpub' (Bitcoin defaults)\n@@ -163,7 +163,7 @@ class CTestNetParams : public CChainParams {\n public:\n     CTestNetParams() {\n         strNetworkID = \"test\";\n-        consensus.nSubsidyHalvingInterval = 262800;\n+        consensus.nSubsidyHalvingInterval = 210000;\n         consensus.nMasternodePaymentsStartBlock = 1000; // not true, but it's ok as long as it's less then nMasternodePaymentsIncreaseBlock\n         consensus.nMasternodePaymentsIncreaseBlock = 158000;\n         consensus.nMasternodePaymentsIncreasePeriod = 576*30;\n@@ -207,19 +207,19 @@ class CTestNetParams : public CChainParams {\n         nMaxTipAge = 0x7fffffff; // allow mining on top of old blocks for testnet\n         nPruneAfterHeight = 1000;\n \n-        genesis = CreateGenesisBlock(1527250000, 1937110, 0x1e0ffff0, 1, 50 * COIN);\n+        genesis = CreateGenesisBlock(1527250000, 544828, 0x1e0ffff0, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x000005998a81de3e7911a00654702fd51565598fa7b6be5080fc06789de8a3e8\"));\n-        assert(genesis.hashMerkleRoot == uint256S(\"0x330a943749361a6b38937f7ab092554316d677e556e7fb505f43a5101fdd7c02\"));\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x00000cf56078d5aa87716b7e74026b9f308a658669be0d08fc6a3baa44f3d117\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0xeb0ccbad153c1e555c87401023c2d59b30fe9c31f4782d7b888f0f4f7f80675c\"));\n \n         vFixedSeeds.clear();\n         vSeeds.clear();\n-        vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"testnet-seed.aithercoin.com\"));\n+        //vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"testnet-seed.aithercoin.com\"));\n \n-        // Testnet Aither addresses start with 'n'\n-        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n-        // Testnet Aither script addresses start with '9'\n-        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,196);\n+        // Testnet Aither addresses start with 'B'\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,25);\n+        // Testnet Aither script addresses start with 'b'\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,85);\n         // Testnet private keys start with '9' or 'c' (Bitcoin defaults) (?)\n         base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,240);\n         // Testnet Aither BIP32 pubkeys start with 'tpub' (Bitcoin defaults)\n@@ -296,10 +296,10 @@ class CRegTestParams : public CChainParams {\n         nDefaultPort = 42888;\n         nPruneAfterHeight = 1000;\n \n-        genesis = CreateGenesisBlock(1527240000, 1401732, 0x1e0ffff0, 1, 50 * COIN);\n+        genesis = CreateGenesisBlock(1527240000, 155459, 0x1e0ffff0, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x000004a6849c72fb2955c26ef3688dc3f1e337ce7553433445834f48810e8c80\"));\n-        assert(genesis.hashMerkleRoot == uint256S(\"0x330a943749361a6b38937f7ab092554316d677e556e7fb505f43a5101fdd7c02\"));\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000004ab1803f82cfbfce7f69abcc7a1bb95416a49fddc80ab0dffccff320d75\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0xeb0ccbad153c1e555c87401023c2d59b30fe9c31f4782d7b888f0f4f7f80675c\"));\n \n         vFixedSeeds.clear(); //! Regtest mode doesn't have any fixed seeds.\n         vSeeds.clear();  //! Regtest mode doesn't have any DNS seeds.\n@@ -313,10 +313,10 @@ class CRegTestParams : public CChainParams {\n         nFulfilledRequestExpireTime = 5*60; // fulfilled requests expire in 5 minutes\n \n         checkpointData = {};\n-        // Regtest Aither addresses start with 'n'\n-        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n-        // Regtest Aither script addresses start with '9'\n-        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,196);\n+        // Regtest Aither addresses start with 'B'\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,25);\n+        // Regtest Aither script addresses start with 'b'\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,85);\n         // Regtest private keys start with '9' or 'c' (Bitcoin defaults) (?)\n         base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,240);\n         // Regtest Aither BIP32 pubkeys start with 'tpub' (Bitcoin defaults)"
      },
      {
        "sha": "317b78a3588b3827c0f8b9710eb1d9e3b65e796a",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec056b1539387faf71756878865162cf6413d78c/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec056b1539387faf71756878865162cf6413d78c/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=ec056b1539387faf71756878865162cf6413d78c",
        "patch": "@@ -1746,7 +1746,7 @@ CAmount GetBlockSubsidy(int nPrevBits, int nPrevHeight, const Consensus::Params&\n         return 1000000 * COIN;\n     }\n \n-    CAmount nSubsidy = 15 * COIN;\n+    CAmount nSubsidy = 50 * COIN;\n \n     // yearly decline of production by 6.666% per year until reached max coin 18M.\n     for (int i = consensusParams.nSubsidyHalvingInterval; i <= nPrevHeight; i += consensusParams.nSubsidyHalvingInterval) {"
      }
    ]
  },
  {
    "sha": "8b559b0161794f7ba9187de1a4e50aaab6283aad",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YjU1OWIwMTYxNzk0ZjdiYTkxODdkZTFhNGU1MGFhYWI2MjgzYWFk",
    "commit": {
      "author": {
        "name": "test",
        "email": "test@gmail.com",
        "date": "2018-05-27T05:36:55Z"
      },
      "committer": {
        "name": "test",
        "email": "test@gmail.com",
        "date": "2018-05-27T05:36:55Z"
      },
      "message": "change pubkey",
      "tree": {
        "sha": "a6ad38f60207c26aeb17e1ad9232f7c6c2b6fb02",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a6ad38f60207c26aeb17e1ad9232f7c6c2b6fb02"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b559b0161794f7ba9187de1a4e50aaab6283aad",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b559b0161794f7ba9187de1a4e50aaab6283aad",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8b559b0161794f7ba9187de1a4e50aaab6283aad",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b559b0161794f7ba9187de1a4e50aaab6283aad/comments",
    "author": {
      "login": "amagri",
      "id": 31654,
      "node_id": "MDQ6VXNlcjMxNjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/31654?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amagri",
      "html_url": "https://github.com/amagri",
      "followers_url": "https://api.github.com/users/amagri/followers",
      "following_url": "https://api.github.com/users/amagri/following{/other_user}",
      "gists_url": "https://api.github.com/users/amagri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amagri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amagri/subscriptions",
      "organizations_url": "https://api.github.com/users/amagri/orgs",
      "repos_url": "https://api.github.com/users/amagri/repos",
      "events_url": "https://api.github.com/users/amagri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amagri/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amagri",
      "id": 31654,
      "node_id": "MDQ6VXNlcjMxNjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/31654?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amagri",
      "html_url": "https://github.com/amagri",
      "followers_url": "https://api.github.com/users/amagri/followers",
      "following_url": "https://api.github.com/users/amagri/following{/other_user}",
      "gists_url": "https://api.github.com/users/amagri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amagri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amagri/subscriptions",
      "organizations_url": "https://api.github.com/users/amagri/orgs",
      "repos_url": "https://api.github.com/users/amagri/repos",
      "events_url": "https://api.github.com/users/amagri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amagri/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ec056b1539387faf71756878865162cf6413d78c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec056b1539387faf71756878865162cf6413d78c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ec056b1539387faf71756878865162cf6413d78c"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 7,
      "deletions": 6
    },
    "files": [
      {
        "sha": "4695fbbfbe6690999f6310144e52a768bd3c7b2b",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b559b0161794f7ba9187de1a4e50aaab6283aad/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b559b0161794f7ba9187de1a4e50aaab6283aad/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=8b559b0161794f7ba9187de1a4e50aaab6283aad",
        "patch": "@@ -66,8 +66,8 @@ class CMainParams : public CChainParams {\n public:\n     CMainParams() {\n         strNetworkID = \"main\";\n-        consensus.nSubsidyHalvingInterval = 210000; // halve when reached 210,000 block\n-        consensus.nMasternodePaymentsStartBlock = 100000; // not true, but it's ok as long as it's less then nMasternodePaymentsIncreaseBlock\n+        consensus.nSubsidyHalvingInterval = 180000; // halve when reached 210,000 block\n+        consensus.nMasternodePaymentsStartBlock = 36000; // not true, but it's ok as long as it's less then nMasternodePaymentsIncreaseBlock\n         consensus.nMasternodePaymentsIncreaseBlock = 158000; // not used\n         consensus.nMasternodePaymentsIncreasePeriod = 576*30; // not used\n         consensus.nInstantSendKeepLock = 24;"
      },
      {
        "sha": "45b6ebf75679345c3d77a01c0f3ebaebf27af649",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b559b0161794f7ba9187de1a4e50aaab6283aad/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b559b0161794f7ba9187de1a4e50aaab6283aad/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=8b559b0161794f7ba9187de1a4e50aaab6283aad",
        "patch": "@@ -1743,14 +1743,14 @@ NOTE:   unlike bitcoin we are using PREVIOUS block height here,\n CAmount GetBlockSubsidy(int nPrevBits, int nPrevHeight, const Consensus::Params& consensusParams, bool fSuperblockPartOnly)\n {\n     if (nPrevHeight == 0) {\n-        return 1000000 * COIN;\n+        return 1200000 * COIN;\n     }\n \n-    CAmount nSubsidy = 50 * COIN;\n+    CAmount nSubsidy = 18 * COIN;\n \n     // yearly decline of production by 6.666% per year until reached max coin 18M.\n     for (int i = consensusParams.nSubsidyHalvingInterval; i <= nPrevHeight; i += consensusParams.nSubsidyHalvingInterval) {\n-        nSubsidy -= nSubsidy/15;\n+        nSubsidy -= nSubsidy/9;\n     }\n \n     return fSuperblockPartOnly ? 0 : nSubsidy;"
      },
      {
        "sha": "e13faa5fae61bfb159ee9f513fa32f8301074128",
        "filename": "src/masternode-sync.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b559b0161794f7ba9187de1a4e50aaab6283aad/src/masternode-sync.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b559b0161794f7ba9187de1a4e50aaab6283aad/src/masternode-sync.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/masternode-sync.h?ref=8b559b0161794f7ba9187de1a4e50aaab6283aad",
        "patch": "@@ -75,7 +75,8 @@ class CMasternodeSync\n     bool IsBlockchainSynced(bool fBlockAccepted = false);\n     bool IsMasternodeListSynced() { return nRequestedMasternodeAssets > MASTERNODE_SYNC_LIST; }\n     bool IsWinnersListSynced() { return nRequestedMasternodeAssets > MASTERNODE_SYNC_MNW; }\n-    bool IsSynced() { return nRequestedMasternodeAssets == MASTERNODE_SYNC_FINISHED; }\n+    bool IsSynced() { return nRequestedMasternodeAssets == MASTERNODE_SYNC_SPORKS; }\n+//    bool IsSynced() { return nRequestedMasternodeAssets == MASTERNODE_SYNC_FINISHED; }\n \n     int GetAssetID() { return nRequestedMasternodeAssets; }\n     int GetAttempt() { return nRequestedMasternodeAttempt; }"
      }
    ]
  },
  {
    "sha": "2ccad4fcd1b2c3db677e3b681c1951ac18f19e0f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyY2NhZDRmY2QxYjJjM2RiNjc3ZTNiNjgxYzE5NTFhYzE4ZjE5ZTBm",
    "commit": {
      "author": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-27T11:11:48Z"
      },
      "committer": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-27T11:11:48Z"
      },
      "message": "fix chainparams.cpp",
      "tree": {
        "sha": "c73e40c604807b890fbad0f196d91c41933ae386",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c73e40c604807b890fbad0f196d91c41933ae386"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ccad4fcd1b2c3db677e3b681c1951ac18f19e0f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ccad4fcd1b2c3db677e3b681c1951ac18f19e0f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2ccad4fcd1b2c3db677e3b681c1951ac18f19e0f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ccad4fcd1b2c3db677e3b681c1951ac18f19e0f/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "8b559b0161794f7ba9187de1a4e50aaab6283aad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b559b0161794f7ba9187de1a4e50aaab6283aad",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8b559b0161794f7ba9187de1a4e50aaab6283aad"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "373a5c90a4663eba5de6de411645427e5387b692",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ccad4fcd1b2c3db677e3b681c1951ac18f19e0f/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ccad4fcd1b2c3db677e3b681c1951ac18f19e0f/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=2ccad4fcd1b2c3db677e3b681c1951ac18f19e0f",
        "patch": "@@ -44,7 +44,7 @@ static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesi\n \n static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n {\n-    //python gen.py -a neoscrypt -t 1527258000 -z \"The Times May 25th 2018 Bitcoin investigation to focus on British traders\" -p \"0435c0f99b3af273876636de037c6c5cf8c4e08101ad15960435615f59c1239dcd9408708f5ec090756ce433092c10209f163c7f174a3cd8258b4969519a4912cf\" -b 0x1e0ffff0 -n 592642\n+    //python gen.py -z \"The Times May 25th 2018 Bitcoin investigation to focus on British traders\" -p \"0435c0f99b3af273876636de037c6c5cf8c4e08101ad15960435615f59c1239dcd9408708f5ec090756ce433092c10209f163c7f174a3cd8258b4969519a4912cf\" -b 0x1e0ffff0 -n 592642 -a neoscrypt -t 1527258000\n     const char* pszTimestamp = \"The Times May 25th 2018 Bitcoin investigation to focus on British traders\";\n     const CScript genesisOutputScript = CScript() << ParseHex(\"0435c0f99b3af273876636de037c6c5cf8c4e08101ad15960435615f59c1239dcd9408708f5ec090756ce433092c10209f163c7f174a3cd8258b4969519a4912cf\") << OP_CHECKSIG;\n     return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n@@ -106,10 +106,10 @@ class CMainParams : public CChainParams {\n          * The characters are rarely used upper ASCII, not valid as UTF-8, and produce\n          * a large 32-bit integer with any alignment.\n          */\n-        pchMessageStart[0] = 0x1a;\n-        pchMessageStart[1] = 0xb2;\n-        pchMessageStart[2] = 0xc3;\n-        pchMessageStart[3] = 0xd4;\n+        pchMessageStart[0] = 0x37;\n+        pchMessageStart[1] = 0x5c;\n+        pchMessageStart[2] = 0x6b;\n+        pchMessageStart[3] = 0x25;\n         vAlertPubKey = ParseHex(\"04b6a3a2911d40d214be61d573bfb1a32ef98b931d9c721f7bbbbdf2692abfd5eb235692d3ad1a81f75157fd0a9d96866b62b717d091f2481b70e3b8d87cc68fd3\");\n         nDefaultPort = 40888;\n         nMaxTipAge = 60 * 60 * 60; // ~144 blocks behind -> 2 x fork detection time, was 24 * 60 * 60 in bitcoin"
      }
    ]
  },
  {
    "sha": "53935b465676fe3e3fb9fd68768b42f9c19f149e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MzkzNWI0NjU2NzZmZTNlM2ZiOWZkNjg3NjhiNDJmOWMxOWYxNDll",
    "commit": {
      "author": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-27T11:41:28Z"
      },
      "committer": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-27T11:41:28Z"
      },
      "message": "fix chainparams.cpp",
      "tree": {
        "sha": "bc126be142ba816973581a5173367e49113f5670",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bc126be142ba816973581a5173367e49113f5670"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/53935b465676fe3e3fb9fd68768b42f9c19f149e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53935b465676fe3e3fb9fd68768b42f9c19f149e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/53935b465676fe3e3fb9fd68768b42f9c19f149e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53935b465676fe3e3fb9fd68768b42f9c19f149e/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "2ccad4fcd1b2c3db677e3b681c1951ac18f19e0f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ccad4fcd1b2c3db677e3b681c1951ac18f19e0f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2ccad4fcd1b2c3db677e3b681c1951ac18f19e0f"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "0dc954dda619f1090048d9d1037f6b4f3869ccdb",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53935b465676fe3e3fb9fd68768b42f9c19f149e/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53935b465676fe3e3fb9fd68768b42f9c19f149e/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=53935b465676fe3e3fb9fd68768b42f9c19f149e",
        "patch": "@@ -139,14 +139,14 @@ class CMainParams : public CChainParams {\n \n         vFixedSeeds = std::vector<SeedSpec6>(pnSeed6_main, pnSeed6_main + ARRAYLEN(pnSeed6_main));\n \n-        fMiningRequiresPeers = true;\n+        fMiningRequiresPeers = false;\n         fDefaultConsistencyChecks = false;\n         fRequireStandard = true;\n-        fMineBlocksOnDemand = false;\n+        fMineBlocksOnDemand = true;\n         fTestnetToBeDeprecatedFieldRPC = false;\n \n         nPoolMaxTransactions = 3;\n-        nFulfilledRequestExpireTime = 60*60; // fulfilled requests expire in 1 hour\n+        nFulfilledRequestExpireTime = 1*60; // fulfilled requests expire in 1 hour\n         //strSporkPrivateKey = \"f6c3c04c8c5a3c7ff31af773d8fa943973b21dd69a7e1b09b3fae8a15a699a82\"\n         strSporkPubKey = \"04080a56cc3f424a153dc2e5c8c784aa9c80196c5ccbf9711a7dc22e7042d42d00e7cb0ec91f5ea2fb00d7bb95c76763798bd7c2418f94d43b777333071fec6ff1\";\n         strMasternodePaymentsPubKey = \"042925f2904184e419f890076f94e24943b20e149b4ba703e90b03d974ed04325e2cb289941d220e161000ead5e1cefebe160993df6f3b23741fa5f6e4c6f7a123\";"
      }
    ]
  },
  {
    "sha": "e5ad4b531e5e2918d0395bf106cf006173c267bb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNWFkNGI1MzFlNWUyOTE4ZDAzOTViZjEwNmNmMDA2MTczYzI2N2Ji",
    "commit": {
      "author": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-27T11:48:06Z"
      },
      "committer": {
        "name": "harrymckinnon86",
        "email": "harrymckinnon86@gmail.com",
        "date": "2018-05-27T11:48:06Z"
      },
      "message": "fix chainparams.cpp",
      "tree": {
        "sha": "b1b4a33188773ea9023fe9923bc8b22518a1203e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b1b4a33188773ea9023fe9923bc8b22518a1203e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e5ad4b531e5e2918d0395bf106cf006173c267bb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5ad4b531e5e2918d0395bf106cf006173c267bb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e5ad4b531e5e2918d0395bf106cf006173c267bb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5ad4b531e5e2918d0395bf106cf006173c267bb/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "53935b465676fe3e3fb9fd68768b42f9c19f149e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53935b465676fe3e3fb9fd68768b42f9c19f149e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/53935b465676fe3e3fb9fd68768b42f9c19f149e"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "d9733a65785ae599c230cc2988240a67729705ed",
        "filename": "src/chainparamsseeds.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5ad4b531e5e2918d0395bf106cf006173c267bb/src/chainparamsseeds.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5ad4b531e5e2918d0395bf106cf006173c267bb/src/chainparamsseeds.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsseeds.h?ref=e5ad4b531e5e2918d0395bf106cf006173c267bb",
        "patch": "@@ -14,6 +14,6 @@ static SeedSpec6 pnSeed6_main[] = {\n };\n \n static SeedSpec6 pnSeed6_test[] = {\n-        {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x33,0x0f,0xe4,0x99}, 11888}\n+        {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x33,0x0f,0xe4,0x99}, 41888}\n };\n #endif // BITCOIN_CHAINPARAMSSEEDS_H"
      }
    ]
  },
  {
    "sha": "4ad58312331c79ff83d802a2bf9f56d6de9eea95",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YWQ1ODMxMjMzMWM3OWZmODNkODAyYTJiZjlmNTZkNmRlOWVlYTk1",
    "commit": {
      "author": {
        "name": "test",
        "email": "test@gmail.com",
        "date": "2018-05-27T17:26:10Z"
      },
      "committer": {
        "name": "test",
        "email": "test@gmail.com",
        "date": "2018-05-27T17:26:10Z"
      },
      "message": "change bool",
      "tree": {
        "sha": "41be20f3e4874bb7cca0db3511c96bd209400cbf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/41be20f3e4874bb7cca0db3511c96bd209400cbf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4ad58312331c79ff83d802a2bf9f56d6de9eea95",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ad58312331c79ff83d802a2bf9f56d6de9eea95",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4ad58312331c79ff83d802a2bf9f56d6de9eea95",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ad58312331c79ff83d802a2bf9f56d6de9eea95/comments",
    "author": {
      "login": "amagri",
      "id": 31654,
      "node_id": "MDQ6VXNlcjMxNjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/31654?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amagri",
      "html_url": "https://github.com/amagri",
      "followers_url": "https://api.github.com/users/amagri/followers",
      "following_url": "https://api.github.com/users/amagri/following{/other_user}",
      "gists_url": "https://api.github.com/users/amagri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amagri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amagri/subscriptions",
      "organizations_url": "https://api.github.com/users/amagri/orgs",
      "repos_url": "https://api.github.com/users/amagri/repos",
      "events_url": "https://api.github.com/users/amagri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amagri/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amagri",
      "id": 31654,
      "node_id": "MDQ6VXNlcjMxNjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/31654?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amagri",
      "html_url": "https://github.com/amagri",
      "followers_url": "https://api.github.com/users/amagri/followers",
      "following_url": "https://api.github.com/users/amagri/following{/other_user}",
      "gists_url": "https://api.github.com/users/amagri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amagri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amagri/subscriptions",
      "organizations_url": "https://api.github.com/users/amagri/orgs",
      "repos_url": "https://api.github.com/users/amagri/repos",
      "events_url": "https://api.github.com/users/amagri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amagri/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e5ad4b531e5e2918d0395bf106cf006173c267bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5ad4b531e5e2918d0395bf106cf006173c267bb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e5ad4b531e5e2918d0395bf106cf006173c267bb"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 11,
      "deletions": 11
    },
    "files": [
      {
        "sha": "8beaf7a20d63ea06eb7e6412a4aa38ee4819341c",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ad58312331c79ff83d802a2bf9f56d6de9eea95/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ad58312331c79ff83d802a2bf9f56d6de9eea95/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=4ad58312331c79ff83d802a2bf9f56d6de9eea95",
        "patch": "@@ -86,7 +86,7 @@ class CMainParams : public CChainParams {\n         consensus.BIP34Height = 227931; // FIX\n         consensus.BIP34Hash = uint256S(\"0x000000000000024b89b42a942fe0d9fea3bb44ab7bd1b19115dd6a759c0808b8\"); // FIX\n         consensus.powLimit = uint256S(\"00000fffff000000000000000000000000000000000000000000000000000000\");\n-        consensus.nPowTargetTimespan = 60 * 60; // Aither: 1 day, 24 blocks\n+        consensus.nPowTargetTimespan = 60 * 60; // Aither: 1 hour, 24 blocks\n         consensus.nPowTargetSpacing = 2.5 * 60; // Aither: 150 seconds\n         consensus.fPowAllowMinDifficultyBlocks = false;\n         consensus.fPowNoRetargeting = false;\n@@ -112,17 +112,17 @@ class CMainParams : public CChainParams {\n         pchMessageStart[3] = 0x25;\n         vAlertPubKey = ParseHex(\"04b6a3a2911d40d214be61d573bfb1a32ef98b931d9c721f7bbbbdf2692abfd5eb235692d3ad1a81f75157fd0a9d96866b62b717d091f2481b70e3b8d87cc68fd3\");\n         nDefaultPort = 40888;\n-        nMaxTipAge = 60 * 60 * 60; // ~144 blocks behind -> 2 x fork detection time, was 24 * 60 * 60 in bitcoin\n+        nMaxTipAge = 60 * 60 * 60; // ~1440 blocks behind -> 2 x fork detection time, was 24 * 60 * 60 in bitcoin\n         nPruneAfterHeight = 100000;\n \n         genesis = CreateGenesisBlock(1527258000, 1944819, 0x1e0ffff0, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n         assert(consensus.hashGenesisBlock == uint256S(\"0x0000008de8b4b9ef8bf126b15f7c39086e698b8c35c59deb31d61b9ea317ccca\"));\n         assert(genesis.hashMerkleRoot == uint256S(\"0xeb0ccbad153c1e555c87401023c2d59b30fe9c31f4782d7b888f0f4f7f80675c\"));\n \n-        //vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"seed1.aithercoin.com\"));\n-        //vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"seed2.aithercoin.com\"));\n-        //vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"seed3.aithercoin.com\"));\n+        vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"seed1.aithercoin.com\"));\n+        vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"seed2.aithercoin.com\"));\n+        vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"seed3.aithercoin.com\"));\n \n         // Aither addresses start with 'A'\n         base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,23);\n@@ -139,15 +139,15 @@ class CMainParams : public CChainParams {\n \n         vFixedSeeds = std::vector<SeedSpec6>(pnSeed6_main, pnSeed6_main + ARRAYLEN(pnSeed6_main));\n \n-        fMiningRequiresPeers = false;\n+        fMiningRequiresPeers = true;\n         fDefaultConsistencyChecks = false;\n         fRequireStandard = true;\n-        fMineBlocksOnDemand = true;\n+        fMineBlocksOnDemand = false;\n         fTestnetToBeDeprecatedFieldRPC = false;\n \n         nPoolMaxTransactions = 3;\n-        nFulfilledRequestExpireTime = 1*60; // fulfilled requests expire in 1 hour\n-        //strSporkPrivateKey = \"f6c3c04c8c5a3c7ff31af773d8fa943973b21dd69a7e1b09b3fae8a15a699a82\"\n+        nFulfilledRequestExpireTime = 60*60; // fulfilled requests expire in 1 hour\n+        //TODO aither need to remove strSporkPrivateKey = \"f6c3c04c8c5a3c7ff31af773d8fa943973b21dd69a7e1b09b3fae8a15a699a82\"\n         strSporkPubKey = \"04080a56cc3f424a153dc2e5c8c784aa9c80196c5ccbf9711a7dc22e7042d42d00e7cb0ec91f5ea2fb00d7bb95c76763798bd7c2418f94d43b777333071fec6ff1\";\n         strMasternodePaymentsPubKey = \"042925f2904184e419f890076f94e24943b20e149b4ba703e90b03d974ed04325e2cb289941d220e161000ead5e1cefebe160993df6f3b23741fa5f6e4c6f7a123\";\n \n@@ -183,7 +183,7 @@ class CTestNetParams : public CChainParams {\n         consensus.BIP34Height = 21111; // FIX\n         consensus.BIP34Hash = uint256S(\"0x0000000023b3a96d3484e5abb3755c413e7d41500f8e2a5c3f0dd01299cd8ef8\"); // FIX\n         consensus.powLimit = uint256S(\"00000fffff000000000000000000000000000000000000000000000000000000\");\n-        consensus.nPowTargetTimespan = 5 * 60; // Aither: 1 hour, 24 blocks\n+        consensus.nPowTargetTimespan = 5 * 60; // Aither: 5 minutes, 2 blocks\n         consensus.nPowTargetSpacing = 2.5 * 60; // Aither: 150 seconds\n         consensus.fPowAllowMinDifficultyBlocks = true;\n         consensus.fPowNoRetargeting = false;\n@@ -292,7 +292,7 @@ class CRegTestParams : public CChainParams {\n         pchMessageStart[1] = 0x9b;\n         pchMessageStart[2] = 0x37;\n         pchMessageStart[3] = 0x28;\n-        nMaxTipAge = 60 * 60 * 60; // ~144 blocks behind -> 2 x fork detection time, was 24 * 60 * 60 in bitcoin => change to 60 hrs\n+        nMaxTipAge = 60 * 60 * 60; // ~1440 blocks behind -> 2 x fork detection time, was 24 * 60 * 60 in bitcoin => change to 60 hrs\n         nDefaultPort = 42888;\n         nPruneAfterHeight = 1000;\n "
      }
    ]
  },
  {
    "sha": "cdf8dc7d015bdad369954aa6c5043fd986208e25",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZGY4ZGM3ZDAxNWJkYWQzNjk5NTRhYTZjNTA0M2ZkOTg2MjA4ZTI1",
    "commit": {
      "author": {
        "name": "Phuong",
        "email": "phuong17889@gmail.com",
        "date": "2018-05-28T03:44:00Z"
      },
      "committer": {
        "name": "Phuong",
        "email": "phuong17889@gmail.com",
        "date": "2018-05-28T03:44:00Z"
      },
      "message": "fix seed & params",
      "tree": {
        "sha": "98da9cb14d8fab58f8c7cf9d2ff63cf112a4f952",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/98da9cb14d8fab58f8c7cf9d2ff63cf112a4f952"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cdf8dc7d015bdad369954aa6c5043fd986208e25",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdf8dc7d015bdad369954aa6c5043fd986208e25",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cdf8dc7d015bdad369954aa6c5043fd986208e25",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdf8dc7d015bdad369954aa6c5043fd986208e25/comments",
    "author": {
      "login": "phuong17889",
      "id": 7648033,
      "node_id": "MDQ6VXNlcjc2NDgwMzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7648033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phuong17889",
      "html_url": "https://github.com/phuong17889",
      "followers_url": "https://api.github.com/users/phuong17889/followers",
      "following_url": "https://api.github.com/users/phuong17889/following{/other_user}",
      "gists_url": "https://api.github.com/users/phuong17889/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phuong17889/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phuong17889/subscriptions",
      "organizations_url": "https://api.github.com/users/phuong17889/orgs",
      "repos_url": "https://api.github.com/users/phuong17889/repos",
      "events_url": "https://api.github.com/users/phuong17889/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phuong17889/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "phuong17889",
      "id": 7648033,
      "node_id": "MDQ6VXNlcjc2NDgwMzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7648033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phuong17889",
      "html_url": "https://github.com/phuong17889",
      "followers_url": "https://api.github.com/users/phuong17889/followers",
      "following_url": "https://api.github.com/users/phuong17889/following{/other_user}",
      "gists_url": "https://api.github.com/users/phuong17889/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phuong17889/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phuong17889/subscriptions",
      "organizations_url": "https://api.github.com/users/phuong17889/orgs",
      "repos_url": "https://api.github.com/users/phuong17889/repos",
      "events_url": "https://api.github.com/users/phuong17889/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phuong17889/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4ad58312331c79ff83d802a2bf9f56d6de9eea95",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ad58312331c79ff83d802a2bf9f56d6de9eea95",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4ad58312331c79ff83d802a2bf9f56d6de9eea95"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 24,
      "deletions": 12
    },
    "files": [
      {
        "sha": "35e54587d876e3ae798ad95c031df5baa5e9d3c0",
        "filename": "contrib/seeds/nodes_main.txt",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdf8dc7d015bdad369954aa6c5043fd986208e25/contrib/seeds/nodes_main.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdf8dc7d015bdad369954aa6c5043fd986208e25/contrib/seeds/nodes_main.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_main.txt?ref=cdf8dc7d015bdad369954aa6c5043fd986208e25",
        "patch": "@@ -1,3 +1,9 @@\n-163.172.129.21:40888\n 51.15.224.21:40888\n+51.15.228.153:40888\n 51.15.252.244:40888\n+51.15.253.125:40888\n+51.15.201.116:40888\n+51.15.196.171:40888\n+212.47.233.41:40888\n+51.15.248.215:40888\n+51.15.226.155:40888\n\\ No newline at end of file"
      },
      {
        "sha": "c24183806b25b19cde370f82d8d5ea420410f87f",
        "filename": "contrib/seeds/nodes_test.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdf8dc7d015bdad369954aa6c5043fd986208e25/contrib/seeds/nodes_test.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdf8dc7d015bdad369954aa6c5043fd986208e25/contrib/seeds/nodes_test.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_test.txt?ref=cdf8dc7d015bdad369954aa6c5043fd986208e25",
        "patch": "@@ -1 +1 @@\n-51.15.228.153:11888\n+51.15.242.219:41888\n\\ No newline at end of file"
      },
      {
        "sha": "62e0368c13a6148da4e35481b0191b46b48c5422",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdf8dc7d015bdad369954aa6c5043fd986208e25/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdf8dc7d015bdad369954aa6c5043fd986208e25/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=cdf8dc7d015bdad369954aa6c5043fd986208e25",
        "patch": "@@ -67,7 +67,7 @@ class CMainParams : public CChainParams {\n     CMainParams() {\n         strNetworkID = \"main\";\n         consensus.nSubsidyHalvingInterval = 180000; // halve when reached 210,000 block\n-        consensus.nMasternodePaymentsStartBlock = 36000; // not true, but it's ok as long as it's less then nMasternodePaymentsIncreaseBlock\n+        consensus.nMasternodePaymentsStartBlock = 3600; // not true, but it's ok as long as it's less then nMasternodePaymentsIncreaseBlock\n         consensus.nMasternodePaymentsIncreaseBlock = 158000; // not used\n         consensus.nMasternodePaymentsIncreasePeriod = 576*30; // not used\n         consensus.nInstantSendKeepLock = 24;\n@@ -120,9 +120,9 @@ class CMainParams : public CChainParams {\n         assert(consensus.hashGenesisBlock == uint256S(\"0x0000008de8b4b9ef8bf126b15f7c39086e698b8c35c59deb31d61b9ea317ccca\"));\n         assert(genesis.hashMerkleRoot == uint256S(\"0xeb0ccbad153c1e555c87401023c2d59b30fe9c31f4782d7b888f0f4f7f80675c\"));\n \n-        vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"seed1.aithercoin.com\"));\n-        vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"seed2.aithercoin.com\"));\n-        vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"seed3.aithercoin.com\"));\n+        vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"net-1.seed.aithercoin.com\"));\n+        vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"net-2.seed.aithercoin.com\"));\n+        vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"net-3.seed.aithercoin.com\"));\n \n         // Aither addresses start with 'A'\n         base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,23);\n@@ -146,7 +146,7 @@ class CMainParams : public CChainParams {\n         fTestnetToBeDeprecatedFieldRPC = false;\n \n         nPoolMaxTransactions = 3;\n-        nFulfilledRequestExpireTime = 60*60; // fulfilled requests expire in 1 hour\n+        nFulfilledRequestExpireTime = 5*60; // fulfilled requests expire in 1 hour\n         //TODO aither need to remove strSporkPrivateKey = \"f6c3c04c8c5a3c7ff31af773d8fa943973b21dd69a7e1b09b3fae8a15a699a82\"\n         strSporkPubKey = \"04080a56cc3f424a153dc2e5c8c784aa9c80196c5ccbf9711a7dc22e7042d42d00e7cb0ec91f5ea2fb00d7bb95c76763798bd7c2418f94d43b777333071fec6ff1\";\n         strMasternodePaymentsPubKey = \"042925f2904184e419f890076f94e24943b20e149b4ba703e90b03d974ed04325e2cb289941d220e161000ead5e1cefebe160993df6f3b23741fa5f6e4c6f7a123\";\n@@ -214,7 +214,7 @@ class CTestNetParams : public CChainParams {\n \n         vFixedSeeds.clear();\n         vSeeds.clear();\n-        //vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"testnet-seed.aithercoin.com\"));\n+        vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"testnet.seed.aithercoin.com\"));\n \n         // Testnet Aither addresses start with 'B'\n         base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,25);"
      },
      {
        "sha": "dec8e6680ab40bea503240d81bd823635a1e3c8e",
        "filename": "src/chainparamsseeds.h",
        "status": "modified",
        "additions": 10,
        "deletions": 4,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdf8dc7d015bdad369954aa6c5043fd986208e25/src/chainparamsseeds.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdf8dc7d015bdad369954aa6c5043fd986208e25/src/chainparamsseeds.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsseeds.h?ref=cdf8dc7d015bdad369954aa6c5043fd986208e25",
        "patch": "@@ -8,12 +8,18 @@\n  * IPv4 as well as onion addresses are wrapped inside a IPv6 address accordingly.\n  */\n static SeedSpec6 pnSeed6_main[] = {\n-        {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xa3,0xac,0x81,0x15}, 40888},\n-        {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x33,0x0f,0xe0,0x15}, 40888},\n-        {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x33,0x0f,0xfc,0xf4}, 40888}\n+    {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x33,0x0f,0xe0,0x15}, 40888},\n+    {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x33,0x0f,0xe4,0x99}, 40888},\n+    {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x33,0x0f,0xfc,0xf4}, 40888},\n+    {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x33,0x0f,0xfd,0x7d}, 40888},\n+    {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x33,0x0f,0xc9,0x74}, 40888},\n+    {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x33,0x0f,0xc4,0xab}, 40888},\n+    {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xd4,0x2f,0xe9,0x29}, 40888},\n+    {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x33,0x0f,0xf8,0xd7}, 40888},\n+    {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x33,0x0f,0xe2,0x9b}, 40888}\n };\n \n static SeedSpec6 pnSeed6_test[] = {\n-        {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x33,0x0f,0xe4,0x99}, 41888}\n+    {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x33,0x0f,0xf2,0xdb}, 41888}\n };\n #endif // BITCOIN_CHAINPARAMSSEEDS_H"
      }
    ]
  },
  {
    "sha": "1269ac90105ee610aca93cafff45e13d70c1fa31",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMjY5YWM5MDEwNWVlNjEwYWNhOTNjYWZmZjQ1ZTEzZDcwYzFmYTMx",
    "commit": {
      "author": {
        "name": "Phuong",
        "email": "phuong17889@gmail.com",
        "date": "2018-05-29T06:01:29Z"
      },
      "committer": {
        "name": "Phuong",
        "email": "phuong17889@gmail.com",
        "date": "2018-05-29T06:01:29Z"
      },
      "message": "fix seed & params",
      "tree": {
        "sha": "bc54bf55d0a0ceaf73bb0c0fc7e7c7354a6da429",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bc54bf55d0a0ceaf73bb0c0fc7e7c7354a6da429"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1269ac90105ee610aca93cafff45e13d70c1fa31",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1269ac90105ee610aca93cafff45e13d70c1fa31",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1269ac90105ee610aca93cafff45e13d70c1fa31",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1269ac90105ee610aca93cafff45e13d70c1fa31/comments",
    "author": {
      "login": "phuong17889",
      "id": 7648033,
      "node_id": "MDQ6VXNlcjc2NDgwMzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7648033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phuong17889",
      "html_url": "https://github.com/phuong17889",
      "followers_url": "https://api.github.com/users/phuong17889/followers",
      "following_url": "https://api.github.com/users/phuong17889/following{/other_user}",
      "gists_url": "https://api.github.com/users/phuong17889/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phuong17889/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phuong17889/subscriptions",
      "organizations_url": "https://api.github.com/users/phuong17889/orgs",
      "repos_url": "https://api.github.com/users/phuong17889/repos",
      "events_url": "https://api.github.com/users/phuong17889/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phuong17889/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "phuong17889",
      "id": 7648033,
      "node_id": "MDQ6VXNlcjc2NDgwMzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7648033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phuong17889",
      "html_url": "https://github.com/phuong17889",
      "followers_url": "https://api.github.com/users/phuong17889/followers",
      "following_url": "https://api.github.com/users/phuong17889/following{/other_user}",
      "gists_url": "https://api.github.com/users/phuong17889/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phuong17889/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phuong17889/subscriptions",
      "organizations_url": "https://api.github.com/users/phuong17889/orgs",
      "repos_url": "https://api.github.com/users/phuong17889/repos",
      "events_url": "https://api.github.com/users/phuong17889/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phuong17889/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cdf8dc7d015bdad369954aa6c5043fd986208e25",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdf8dc7d015bdad369954aa6c5043fd986208e25",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cdf8dc7d015bdad369954aa6c5043fd986208e25"
      }
    ],
    "stats": {
      "total": 322,
      "additions": 295,
      "deletions": 27
    },
    "files": [
      {
        "sha": "84bb33e061d42dfc6ee8cb7547d5b84d7dd47a88",
        "filename": "contrib/genesis/gen.py",
        "status": "added",
        "additions": 261,
        "deletions": 0,
        "changes": 261,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1269ac90105ee610aca93cafff45e13d70c1fa31/contrib/genesis/gen.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1269ac90105ee610aca93cafff45e13d70c1fa31/contrib/genesis/gen.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/genesis/gen.py?ref=1269ac90105ee610aca93cafff45e13d70c1fa31",
        "patch": "@@ -0,0 +1,261 @@\n+import hashlib, binascii, struct, array, os, time, sys, optparse\n+import mixhash\n+\n+from binascii import unhexlify, hexlify\n+\n+from construct import *\n+\n+supported_algorithms = [\"X11\", \"quark\", \"lyra2re\",\"neoscrypt\",\"qubit\",\"keccak\"]\n+\n+def main():\n+  options = get_args()\n+\n+  algorithm = get_algorithm(options)\n+\n+  input_script  = create_input_script(options.timestamp)\n+  output_script = create_output_script(options.pubkey)\n+  # hash merkle root is the double sha256 hash of the transaction(s)\n+  tx = create_transaction(input_script, output_script,options)\n+  hash_merkle_root = hashlib.sha256(hashlib.sha256(tx).digest()).digest()\n+  print_block_info(options, hash_merkle_root)\n+\n+  block_header        = create_block_header(hash_merkle_root, options.time, options.bits, options.nonce)\n+  genesis_hash, nonce = generate_hash(block_header, algorithm, options.nonce, options.bits)\n+  announce_found_genesis(genesis_hash, nonce)\n+\n+\n+def get_args():\n+  parser = optparse.OptionParser()\n+  parser.add_option(\"-t\", \"--time\", dest=\"time\", default=int(time.time()), \n+                   type=\"int\", help=\"the (unix) time when the genesisblock is created\")\n+  parser.add_option(\"-z\", \"--timestamp\", dest=\"timestamp\", default=\"The Times 18/Jan/2018. Don't work for weekends, work for our goals.\",\n+                   type=\"string\", help=\"the pszTimestamp found in the coinbase of the genesisblock\")\n+  parser.add_option(\"-n\", \"--nonce\", dest=\"nonce\", default=0,\n+                   type=\"int\", help=\"the first value of the nonce that will be incremented when searching the genesis hash\")\n+  parser.add_option(\"-a\", \"--algorithm\", dest=\"algorithm\", default=\"SHA256\",\n+                    help=\"the PoW algorithm: [X11|quark|keccak|qubit|neoscrypt|lyra2re]\")\n+  parser.add_option(\"-p\", \"--pubkey\", dest=\"pubkey\", default=\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\",\n+                   type=\"string\", help=\"the pubkey found in the output script\")\n+  parser.add_option(\"-v\", \"--value\", dest=\"value\", default=5000000000,\n+                   type=\"int\", help=\"the value in coins for the output, full value (exp. in bitcoin 5000000000 - To get other coins value: Block Value * 100000000)\")\n+  parser.add_option(\"-b\", \"--bits\", dest=\"bits\",\n+                   type=\"int\", help=\"the target in compact representation, associated to a difficulty of 1\")\n+\n+  (options, args) = parser.parse_args()\n+  if not options.bits:\n+    if options.algorithm in supported_algorithms:\n+      options.bits = 0x1e0ffff0\n+    else:\n+      options.bits = 0x1d00ffff\n+  return options\n+\n+def get_algorithm(options):\n+  if options.algorithm in supported_algorithms:\n+    return options.algorithm\n+  else:\n+    sys.exit(\"Error: Given algorithm must be one of: \" + str(supported_algorithms))\n+\n+def create_input_script(psz_timestamp):\n+  psz_prefix = \"\"\n+  #use OP_PUSHDATA1 if required\n+  if len(psz_timestamp) > 76: psz_prefix = '4c'\n+\n+  script_prefix = '04ffff001d0104' + psz_prefix + chr(len(psz_timestamp)).encode('hex')\n+  print (script_prefix + psz_timestamp.encode('hex'))\n+  return (script_prefix + psz_timestamp.encode('hex')).decode('hex')\n+\n+\n+def create_output_script(pubkey):\n+  script_len = '41'\n+  OP_CHECKSIG = 'ac'\n+  return (script_len + pubkey + OP_CHECKSIG).decode('hex')\n+\n+\n+def create_transaction(input_script, output_script,options):\n+  transaction = Struct(\"transaction\",\n+    Bytes(\"version\", 4),\n+    Byte(\"num_inputs\"),\n+    StaticField(\"prev_output\", 32),\n+    UBInt32('prev_out_idx'),\n+    Byte('input_script_len'),\n+    Bytes('input_script', len(input_script)),\n+    UBInt32('sequence'),\n+    Byte('num_outputs'),\n+    Bytes('out_value', 8),\n+    Byte('output_script_len'),\n+    Bytes('output_script',  0x43),\n+    UBInt32('locktime'))\n+\n+  tx = transaction.parse('\\x00'*(127 + len(input_script)))\n+  tx.version           = struct.pack('<I', 1)\n+  tx.num_inputs        = 1\n+  tx.prev_output       = struct.pack('<qqqq', 0,0,0,0)\n+  tx.prev_out_idx      = 0xFFFFFFFF\n+  tx.input_script_len  = len(input_script)\n+  tx.input_script      = input_script\n+  tx.sequence          = 0xFFFFFFFF\n+  tx.num_outputs       = 1\n+  tx.out_value         = struct.pack('<q' ,options.value)#0x000005f5e100)#012a05f200) #50 coins\n+  #tx.out_value         = struct.pack('<q' ,0x000000012a05f200) #50 coins\n+  tx.output_script_len = 0x43\n+  tx.output_script     = output_script\n+  tx.locktime          = 0 \n+  return transaction.build(tx)\n+\n+\n+def create_block_header(hash_merkle_root, time, bits, nonce):\n+  block_header = Struct(\"block_header\",\n+    Bytes(\"version\",4),\n+    Bytes(\"hash_prev_block\", 32),\n+    Bytes(\"hash_merkle_root\", 32),\n+    Bytes(\"time\", 4),\n+    Bytes(\"bits\", 4),\n+    Bytes(\"nonce\", 4))\n+\n+  genesisblock = block_header.parse('\\x00'*80)\n+  genesisblock.version          = struct.pack('<I', 1)\n+  genesisblock.hash_prev_block  = struct.pack('<qqqq', 0,0,0,0)\n+  genesisblock.hash_merkle_root = hash_merkle_root\n+  genesisblock.time             = struct.pack('<I', time)\n+  genesisblock.bits             = struct.pack('<I', bits)\n+  genesisblock.nonce            = struct.pack('<I', nonce)\n+  return block_header.build(genesisblock)\n+\n+\n+# https://en.bitcoin.it/wiki/Block_hashing_algorithm\n+def generate_hash(data_block, algorithm, start_nonce, bits):\n+  print 'Searching for genesis hash...'\n+  nonce           = start_nonce\n+  last_updated    = time.time()\n+  # https://en.bitcoin.it/wiki/Difficulty\n+  target = (bits & 0xffffff) * 2**(8*((bits >> 24) - 3))\n+\n+  while True:\n+    header_hash = generate_hashes_from_block(data_block, algorithm)\n+    last_updated             = calculate_hashrate(nonce, last_updated)\n+    if is_genesis_hash(header_hash, target):\n+      return (header_hash, nonce)\n+    else:\n+     nonce      = nonce + 1\n+     data_block = data_block[0:len(data_block) - 4] + struct.pack('<I', nonce)\n+\n+\n+def generate_hashes_from_block(data_block, algorithm):\n+#   if algorithm == 'scrypt':\n+#     return scrypt.hash(data_block,data_block,1024,1,1,32)[::-1]\n+#   elif algorithm == 'SHA256':\n+#     return hashlib.sha256(hashlib.sha256(data_block).digest()).digest()[::-1]\n+  # elif algorithm == 'X11':\n+  #   try:\n+  #     import xcoin_hash\n+  #     header_hash = xcoin_hash.getPoWHash(data_block)[::-1]\n+  #   except ImportError:\n+  #     sys.exit(\"Cannot run X11 algorithm: module xcoin_hash not found\")\n+\n+  # elif algorithm == 'X11':\n+  #   try:\n+  #     import x11_hash\n+  #     header_hash = x11_hash.getPoWHash(data_block)[::-1]\n+  #   except ImportError:\n+  #     sys.exit(\"Cannot run X11 algorithm: module x11_hash not found\")\n+\n+  if algorithm == 'X11':\n+    try:\n+      import dash_hash\n+      return dash_hash.getPoWHash(data_block)[::-1]\n+    except ImportError:\n+      sys.exit(\"Cannot run X11 algorithm: module dash_hash not found\")\n+\n+  # elif algorithm == 'X11':\n+  #   try:      \n+  #     header_hash = coinhash.X11Hash(data_block)[::-1]\n+  #   except ImportError:\n+  #     sys.exit(\"Cannot run X11 algorithm: module dash_hash not found\")\n+      \n+  elif algorithm == 'X13':\n+    try:\n+      import x13_hash\n+      return x13_hash.getPoWHash(data_block)[::-1]\n+    except ImportError:\n+      sys.exit(\"Cannot run X13 algorithm: module x13_hash not found\")\n+  elif algorithm == 'X15':\n+    try:\n+      import x15_hash\n+      return x15_hash.getPoWHash(data_block)[::-1]\n+    except ImportError:\n+      sys.exit(\"Cannot run X15 algorithm: module x15_hash not found\")\n+  elif algorithm == 'quark':\n+    try:\n+        import quark_hash\n+        return quark_hash.getPoWHash(data_block)[::-1]\n+    except ImportError:\n+      sys.exit(\"Cannot run quark algorithm: module quark_hash not found\")\n+\n+  elif algorithm == 'lyra2re':\n+    try:        \n+        return mixhash.Lyra2re(data_block)[::-1]\n+    except ImportError:\n+        sys.exit(\"Cannot run quark algorithm: module mixhash.Lyra2re not found\")\n+  elif algorithm == 'lyra2re2':\n+    try:        \n+        return mixhash.Lyra2re2(data_block)[::-1]\n+    except ImportError:\n+        sys.exit(\"Cannot run quark algorithm: module mixhash.Lyra2re not found\")\n+\n+  elif algorithm == 'keccak':\n+    try:        \n+        return mixhash.Keccak(data_block)[::-1]\n+    except ImportError:\n+        sys.exit(\"Cannot run quark algorithm: module mixhash.Keccak not found\")\n+\n+  elif algorithm == 'neoscrypt':\n+    try:        \n+        return mixhash.Neoscrypt(data_block)[::-1]\n+    except ImportError:\n+        sys.exit(\"Cannot run quark algorithm: module mixhash.Neoscrypt not found\")\n+\n+  elif algorithm == 'qubit':\n+    try:        \n+        return mixhash.Qubit(data_block)[::-1]\n+    except ImportError:\n+        sys.exit(\"Cannot run quark algorithm: module mixhash.Qubit not found\")\n+\n+\n+\n+def is_genesis_hash(header_hash, target):  \n+  try:\n+    return int(header_hash.encode('hex_codec'), 16) < target\n+  except ImportError:\n+    sys.exit(header_hash)\n+\n+\n+\n+def calculate_hashrate(nonce, last_updated):\n+  if nonce % 1000000 == 999999:\n+    now             = time.time()\n+    hashrate        = round(1000000/(now - last_updated))\n+    generation_time = round(pow(2, 32) / hashrate / 3600, 1)\n+    sys.stdout.write(\"\\r%s hash/s, estimate: %s h\\r\"%(str(hashrate), str(generation_time)))\n+    sys.stdout.flush()\n+    return now\n+  else:\n+    return last_updated\n+\n+\n+def print_block_info(options, hash_merkle_root):\n+  print \"algorithm: \"    + (options.algorithm)\n+  print \"merkle hash: \"  + hash_merkle_root[::-1].encode('hex_codec')\n+  print \"pszTimestamp: \" + options.timestamp\n+  print \"pubkey: \"       + options.pubkey\n+  print \"time: \"         + str(options.time)\n+  print \"bits: \"         + str(hex(options.bits))\n+\n+\n+def announce_found_genesis(genesis_hash, nonce):\n+  print \"genesis hash found!\"\n+  print \"nonce: \"        + str(nonce)\n+  print \"genesis hash: \" + genesis_hash.encode('hex_codec')\n+\n+\n+# GOGOGO!\n+main()\n\\ No newline at end of file"
      },
      {
        "sha": "065ff82a7ce7b0c58f47678655d44209708f7c91",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 26,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1269ac90105ee610aca93cafff45e13d70c1fa31/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1269ac90105ee610aca93cafff45e13d70c1fa31/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=1269ac90105ee610aca93cafff45e13d70c1fa31",
        "patch": "@@ -44,8 +44,8 @@ static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesi\n \n static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n {\n-    //python gen.py -z \"The Times May 25th 2018 Bitcoin investigation to focus on British traders\" -p \"0435c0f99b3af273876636de037c6c5cf8c4e08101ad15960435615f59c1239dcd9408708f5ec090756ce433092c10209f163c7f174a3cd8258b4969519a4912cf\" -b 0x1e0ffff0 -n 592642 -a neoscrypt -t 1527258000\n-    const char* pszTimestamp = \"The Times May 25th 2018 Bitcoin investigation to focus on British traders\";\n+    //python gen.py -z \"The Times 2018/05/25 Bitcoin investigation to focus on British traders 1\" -p \"0435c0f99b3af273876636de037c6c5cf8c4e08101ad15960435615f59c1239dcd9408708f5ec090756ce433092c10209f163c7f174a3cd8258b4969519a4912cf\" -b 0x1e0ffff0 -a neoscrypt -t 1527258100\n+    const char* pszTimestamp = \"The Times 2018/05/25 Bitcoin investigation to focus on British traders 1\";\n     const CScript genesisOutputScript = CScript() << ParseHex(\"0435c0f99b3af273876636de037c6c5cf8c4e08101ad15960435615f59c1239dcd9408708f5ec090756ce433092c10209f163c7f174a3cd8258b4969519a4912cf\") << OP_CHECKSIG;\n     return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n }\n@@ -105,20 +105,21 @@ class CMainParams : public CChainParams {\n          * The message start string is designed to be unlikely to occur in normal data.\n          * The characters are rarely used upper ASCII, not valid as UTF-8, and produce\n          * a large 32-bit integer with any alignment.\n+         * 4a d5 83 12\n          */\n-        pchMessageStart[0] = 0x37;\n-        pchMessageStart[1] = 0x5c;\n-        pchMessageStart[2] = 0x6b;\n-        pchMessageStart[3] = 0x25;\n+        pchMessageStart[0] = 0x4a;\n+        pchMessageStart[1] = 0xd5;\n+        pchMessageStart[2] = 0x83;\n+        pchMessageStart[3] = 0x12;\n         vAlertPubKey = ParseHex(\"04b6a3a2911d40d214be61d573bfb1a32ef98b931d9c721f7bbbbdf2692abfd5eb235692d3ad1a81f75157fd0a9d96866b62b717d091f2481b70e3b8d87cc68fd3\");\n         nDefaultPort = 40888;\n         nMaxTipAge = 60 * 60 * 60; // ~1440 blocks behind -> 2 x fork detection time, was 24 * 60 * 60 in bitcoin\n         nPruneAfterHeight = 100000;\n \n-        genesis = CreateGenesisBlock(1527258000, 1944819, 0x1e0ffff0, 1, 50 * COIN);\n+        genesis = CreateGenesisBlock(1527258100, 1237745, 0x1e0ffff0, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x0000008de8b4b9ef8bf126b15f7c39086e698b8c35c59deb31d61b9ea317ccca\"));\n-        assert(genesis.hashMerkleRoot == uint256S(\"0xeb0ccbad153c1e555c87401023c2d59b30fe9c31f4782d7b888f0f4f7f80675c\"));\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x00000977aa66ac276b762c36fca36a843f5525a8fa9849c429a922858f2036a2\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x61caac4609d899cee2d0d30c3050eec5144f0a2fc3abbfe627fdafc3feb44b37\"));\n \n         vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"net-1.seed.aithercoin.com\"));\n         vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"net-2.seed.aithercoin.com\"));\n@@ -139,14 +140,18 @@ class CMainParams : public CChainParams {\n \n         vFixedSeeds = std::vector<SeedSpec6>(pnSeed6_main, pnSeed6_main + ARRAYLEN(pnSeed6_main));\n \n-        fMiningRequiresPeers = true;\n+        //TODO set to true if release\n+        fMiningRequiresPeers = false;\n+\n+        //TODO set to false if release\n+        fMineBlocksOnDemand = true;\n+\n         fDefaultConsistencyChecks = false;\n         fRequireStandard = true;\n-        fMineBlocksOnDemand = false;\n         fTestnetToBeDeprecatedFieldRPC = false;\n \n         nPoolMaxTransactions = 3;\n-        nFulfilledRequestExpireTime = 5*60; // fulfilled requests expire in 1 hour\n+        nFulfilledRequestExpireTime = 60 * 60; // fulfilled requests expire in 1 hour\n         //TODO aither need to remove strSporkPrivateKey = \"f6c3c04c8c5a3c7ff31af773d8fa943973b21dd69a7e1b09b3fae8a15a699a82\"\n         strSporkPubKey = \"04080a56cc3f424a153dc2e5c8c784aa9c80196c5ccbf9711a7dc22e7042d42d00e7cb0ec91f5ea2fb00d7bb95c76763798bd7c2418f94d43b777333071fec6ff1\";\n         strMasternodePaymentsPubKey = \"042925f2904184e419f890076f94e24943b20e149b4ba703e90b03d974ed04325e2cb289941d220e161000ead5e1cefebe160993df6f3b23741fa5f6e4c6f7a123\";\n@@ -183,8 +188,8 @@ class CTestNetParams : public CChainParams {\n         consensus.BIP34Height = 21111; // FIX\n         consensus.BIP34Hash = uint256S(\"0x0000000023b3a96d3484e5abb3755c413e7d41500f8e2a5c3f0dd01299cd8ef8\"); // FIX\n         consensus.powLimit = uint256S(\"00000fffff000000000000000000000000000000000000000000000000000000\");\n-        consensus.nPowTargetTimespan = 5 * 60; // Aither: 5 minutes, 2 blocks\n-        consensus.nPowTargetSpacing = 2.5 * 60; // Aither: 150 seconds\n+        consensus.nPowTargetTimespan = 5 * 60; // Aither: 5 minutes, 5 blocks\n+        consensus.nPowTargetSpacing = 1 * 60; // Aither: 60 seconds\n         consensus.fPowAllowMinDifficultyBlocks = true;\n         consensus.fPowNoRetargeting = false;\n         consensus.nRuleChangeActivationThreshold = 1512; // 75% for testchains\n@@ -198,23 +203,25 @@ class CTestNetParams : public CChainParams {\n         consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nStartTime = 1502280000; // Aug 9th, 2017\n         consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nTimeout = 1533816000; // Aug 9th, 2018\n \n-        pchMessageStart[0] = 0x4d;\n-        pchMessageStart[1] = 0x9b;\n-        pchMessageStart[2] = 0x37;\n-        pchMessageStart[3] = 0x28;\n+                //cd f8 dc 7d\n+        pchMessageStart[0] = 0xcd;\n+        pchMessageStart[1] = 0xf8;\n+        pchMessageStart[2] = 0xdc;\n+        pchMessageStart[3] = 0x7d;\n         vAlertPubKey = ParseHex(\"04904d236abae451f9b5c7bf476486588f503a18096d538a7d8cddd95dd0ebcfd7433d0a5969c88eb47af4090a43437776ed09ddf95970d8363e196bc1a9391ced\");\n         nDefaultPort = 41888;\n         nMaxTipAge = 0x7fffffff; // allow mining on top of old blocks for testnet\n         nPruneAfterHeight = 1000;\n \n-        genesis = CreateGenesisBlock(1527250000, 544828, 0x1e0ffff0, 1, 50 * COIN);\n+        genesis = CreateGenesisBlock(1527258200, 218168, 0x1e0ffff0, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x00000cf56078d5aa87716b7e74026b9f308a658669be0d08fc6a3baa44f3d117\"));\n-        assert(genesis.hashMerkleRoot == uint256S(\"0xeb0ccbad153c1e555c87401023c2d59b30fe9c31f4782d7b888f0f4f7f80675c\"));\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x00000dec8348b5ac3541c4f83f81220cfee823812187a3a9b72d749a49361a29\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x61caac4609d899cee2d0d30c3050eec5144f0a2fc3abbfe627fdafc3feb44b37\"));\n \n         vFixedSeeds.clear();\n         vSeeds.clear();\n-        vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"testnet.seed.aithercoin.com\"));\n+        vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"testnet-1.seed.aithercoin.com\"));\n+        vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"testnet-2.seed.aithercoin.com\"));\n \n         // Testnet Aither addresses start with 'B'\n         base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,25);\n@@ -234,7 +241,7 @@ class CTestNetParams : public CChainParams {\n         fMiningRequiresPeers = true;\n         fDefaultConsistencyChecks = false;\n         fRequireStandard = false;\n-        fMineBlocksOnDemand = false;\n+        fMineBlocksOnDemand = true;\n         fTestnetToBeDeprecatedFieldRPC = true;\n \n         nPoolMaxTransactions = 3;\n@@ -296,10 +303,10 @@ class CRegTestParams : public CChainParams {\n         nDefaultPort = 42888;\n         nPruneAfterHeight = 1000;\n \n-        genesis = CreateGenesisBlock(1527240000, 155459, 0x1e0ffff0, 1, 50 * COIN);\n+        genesis = CreateGenesisBlock(1527258300, 2338553, 0x1e0ffff0, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x000004ab1803f82cfbfce7f69abcc7a1bb95416a49fddc80ab0dffccff320d75\"));\n-        assert(genesis.hashMerkleRoot == uint256S(\"0xeb0ccbad153c1e555c87401023c2d59b30fe9c31f4782d7b888f0f4f7f80675c\"));\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x00000ba1258879771eaf7171c93c1921afeff526615c33e4866f74a79a40ab11\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x61caac4609d899cee2d0d30c3050eec5144f0a2fc3abbfe627fdafc3feb44b37\"));\n \n         vFixedSeeds.clear(); //! Regtest mode doesn't have any fixed seeds.\n         vSeeds.clear();  //! Regtest mode doesn't have any DNS seeds."
      },
      {
        "sha": "3e625ab6f01b083e2757d24434d9fa7aaa0d2831",
        "filename": "src/clientversion.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1269ac90105ee610aca93cafff45e13d70c1fa31/src/clientversion.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1269ac90105ee610aca93cafff45e13d70c1fa31/src/clientversion.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.h?ref=1269ac90105ee610aca93cafff45e13d70c1fa31",
        "patch": "@@ -17,7 +17,7 @@\n #define CLIENT_VERSION_MAJOR 0\n #define CLIENT_VERSION_MINOR 12\n #define CLIENT_VERSION_REVISION 1\n-#define CLIENT_VERSION_BUILD 3\n+#define CLIENT_VERSION_BUILD 4\n \n //! Set to true for release, false for prerelease or test build\n #define CLIENT_VERSION_IS_RELEASE true"
      }
    ]
  },
  {
    "sha": "4eedf1263c45de13abe5db5614fc612da5611a3b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZWVkZjEyNjNjNDVkZTEzYWJlNWRiNTYxNGZjNjEyZGE1NjExYTNi",
    "commit": {
      "author": {
        "name": "Phuong",
        "email": "phuong17889@gmail.com",
        "date": "2018-05-29T09:45:15Z"
      },
      "committer": {
        "name": "Phuong",
        "email": "phuong17889@gmail.com",
        "date": "2018-05-29T09:45:15Z"
      },
      "message": "new params",
      "tree": {
        "sha": "840d45381b76153ee1b4c25f12207f7a262e156b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/840d45381b76153ee1b4c25f12207f7a262e156b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4eedf1263c45de13abe5db5614fc612da5611a3b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4eedf1263c45de13abe5db5614fc612da5611a3b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4eedf1263c45de13abe5db5614fc612da5611a3b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4eedf1263c45de13abe5db5614fc612da5611a3b/comments",
    "author": {
      "login": "phuong17889",
      "id": 7648033,
      "node_id": "MDQ6VXNlcjc2NDgwMzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7648033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phuong17889",
      "html_url": "https://github.com/phuong17889",
      "followers_url": "https://api.github.com/users/phuong17889/followers",
      "following_url": "https://api.github.com/users/phuong17889/following{/other_user}",
      "gists_url": "https://api.github.com/users/phuong17889/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phuong17889/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phuong17889/subscriptions",
      "organizations_url": "https://api.github.com/users/phuong17889/orgs",
      "repos_url": "https://api.github.com/users/phuong17889/repos",
      "events_url": "https://api.github.com/users/phuong17889/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phuong17889/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "phuong17889",
      "id": 7648033,
      "node_id": "MDQ6VXNlcjc2NDgwMzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7648033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phuong17889",
      "html_url": "https://github.com/phuong17889",
      "followers_url": "https://api.github.com/users/phuong17889/followers",
      "following_url": "https://api.github.com/users/phuong17889/following{/other_user}",
      "gists_url": "https://api.github.com/users/phuong17889/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phuong17889/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phuong17889/subscriptions",
      "organizations_url": "https://api.github.com/users/phuong17889/orgs",
      "repos_url": "https://api.github.com/users/phuong17889/repos",
      "events_url": "https://api.github.com/users/phuong17889/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phuong17889/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1269ac90105ee610aca93cafff45e13d70c1fa31",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1269ac90105ee610aca93cafff45e13d70c1fa31",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1269ac90105ee610aca93cafff45e13d70c1fa31"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 35,
      "deletions": 19
    },
    "files": [
      {
        "sha": "d768c7e618e1f1dc4f2f5b8d7d82e80e0c1c5d38",
        "filename": "contrib/bitcoin-key/aither_private.pem",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4eedf1263c45de13abe5db5614fc612da5611a3b/contrib/bitcoin-key/aither_private.pem",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4eedf1263c45de13abe5db5614fc612da5611a3b/contrib/bitcoin-key/aither_private.pem",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-key/aither_private.pem?ref=4eedf1263c45de13abe5db5614fc612da5611a3b",
        "patch": "@@ -0,0 +1,8 @@\n+-----BEGIN EC PARAMETERS-----\n+BgUrgQQACg==\n+-----END EC PARAMETERS-----\n+-----BEGIN EC PRIVATE KEY-----\n+MHQCAQEEII1+zY59W20N7uy1ZLta0Ci1nSTIoMXxSQ5B4jQ/UR6IoAcGBSuBBAAK\n+oUQDQgAEFCg7yMvxFbxgW9LKQ3+sCPIGcSTVAvRnSqiGa9JoDReC23VVi9VYH2dS\n+JTgYL/teGaxSR+3FNSY4ZtnHSWm4NQ==\n+-----END EC PRIVATE KEY-----"
      },
      {
        "sha": "2f465debee3a72021fdbffa31dc11aa49dbfff98",
        "filename": "contrib/bitcoin-key/aither_public.pem",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4eedf1263c45de13abe5db5614fc612da5611a3b/contrib/bitcoin-key/aither_public.pem",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4eedf1263c45de13abe5db5614fc612da5611a3b/contrib/bitcoin-key/aither_public.pem",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-key/aither_public.pem?ref=4eedf1263c45de13abe5db5614fc612da5611a3b",
        "patch": "@@ -0,0 +1,4 @@\n+-----BEGIN PUBLIC KEY-----\n+MFYwEAYHKoZIzj0CAQYFK4EEAAoDQgAEFCg7yMvxFbxgW9LKQ3+sCPIGcSTVAvRn\n+SqiGa9JoDReC23VVi9VYH2dSJTgYL/teGaxSR+3FNSY4ZtnHSWm4NQ==\n+-----END PUBLIC KEY-----"
      },
      {
        "sha": "3a11dd29de1bc9239be07dd222b282e22e8ab8e4",
        "filename": "contrib/bitcoin-key/bitcoin_aither_private.key",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4eedf1263c45de13abe5db5614fc612da5611a3b/contrib/bitcoin-key/bitcoin_aither_private.key",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4eedf1263c45de13abe5db5614fc612da5611a3b/contrib/bitcoin-key/bitcoin_aither_private.key",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-key/bitcoin_aither_private.key?ref=4eedf1263c45de13abe5db5614fc612da5611a3b",
        "patch": "@@ -0,0 +1 @@\n+8d7ecd8e7d5b6d0deeecb564bb5ad028b59d24c8a0c5f1490e41e2343f511e88"
      },
      {
        "sha": "9be9031f0bc15f85b4e87ab0376010691f0ef6fd",
        "filename": "contrib/bitcoin-key/bitcoin_aither_public.key",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4eedf1263c45de13abe5db5614fc612da5611a3b/contrib/bitcoin-key/bitcoin_aither_public.key",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4eedf1263c45de13abe5db5614fc612da5611a3b/contrib/bitcoin-key/bitcoin_aither_public.key",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-key/bitcoin_aither_public.key?ref=4eedf1263c45de13abe5db5614fc612da5611a3b",
        "patch": "@@ -0,0 +1 @@\n+0414283bc8cbf115bc605bd2ca437fac08f2067124d502f4674aa8866bd2680d1782db75558bd5581f67522538182ffb5e19ac5247edc535263866d9c74969b835"
      },
      {
        "sha": "2e65adf3778d3e421750c79d81c32eb91f3c1d2e",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 17,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4eedf1263c45de13abe5db5614fc612da5611a3b/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4eedf1263c45de13abe5db5614fc612da5611a3b/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=4eedf1263c45de13abe5db5614fc612da5611a3b",
        "patch": "@@ -44,9 +44,9 @@ static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesi\n \n static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n {\n-    //python gen.py -z \"The Times 2018/05/25 Bitcoin investigation to focus on British traders 1\" -p \"0435c0f99b3af273876636de037c6c5cf8c4e08101ad15960435615f59c1239dcd9408708f5ec090756ce433092c10209f163c7f174a3cd8258b4969519a4912cf\" -b 0x1e0ffff0 -a neoscrypt -t 1527258100\n-    const char* pszTimestamp = \"The Times 2018/05/25 Bitcoin investigation to focus on British traders 1\";\n-    const CScript genesisOutputScript = CScript() << ParseHex(\"0435c0f99b3af273876636de037c6c5cf8c4e08101ad15960435615f59c1239dcd9408708f5ec090756ce433092c10209f163c7f174a3cd8258b4969519a4912cf\") << OP_CHECKSIG;\n+    //TODO aither python gen.py -z \"The Times 2018/05/25 Bitcoin investigation to focus on British traders\" -p \"0414283bc8cbf115bc605bd2ca437fac08f2067124d502f4674aa8866bd2680d1782db75558bd5581f67522538182ffb5e19ac5247edc535263866d9c74969b835\" -b 0x1e0ffff0 -a neoscrypt -t 1527259100\n+    const char* pszTimestamp = \"The Times 2018/05/25 Bitcoin investigation to focus on British traders\";\n+    const CScript genesisOutputScript = CScript() << ParseHex(\"0414283bc8cbf115bc605bd2ca437fac08f2067124d502f4674aa8866bd2680d1782db75558bd5581f67522538182ffb5e19ac5247edc535263866d9c74969b835\") << OP_CHECKSIG;\n     return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n }\n \n@@ -105,8 +105,8 @@ class CMainParams : public CChainParams {\n          * The message start string is designed to be unlikely to occur in normal data.\n          * The characters are rarely used upper ASCII, not valid as UTF-8, and produce\n          * a large 32-bit integer with any alignment.\n-         * 4a d5 83 12\n          */\n+         //TODO aither remove this comment if release 4a d5 83 12\n         pchMessageStart[0] = 0x4a;\n         pchMessageStart[1] = 0xd5;\n         pchMessageStart[2] = 0x83;\n@@ -116,10 +116,10 @@ class CMainParams : public CChainParams {\n         nMaxTipAge = 60 * 60 * 60; // ~1440 blocks behind -> 2 x fork detection time, was 24 * 60 * 60 in bitcoin\n         nPruneAfterHeight = 100000;\n \n-        genesis = CreateGenesisBlock(1527258100, 1237745, 0x1e0ffff0, 1, 50 * COIN);\n+        genesis = CreateGenesisBlock(1527259100, 1196132, 0x1e0ffff0, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x00000977aa66ac276b762c36fca36a843f5525a8fa9849c429a922858f2036a2\"));\n-        assert(genesis.hashMerkleRoot == uint256S(\"0x61caac4609d899cee2d0d30c3050eec5144f0a2fc3abbfe627fdafc3feb44b37\"));\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000008959a698c3731f27d16464fcc4dcda0eb8db182693f8cd071a595761e15\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x9e0447644480d482f3885212355a506d170b77364a80a54f174f571c50c7f36d\"));\n \n         vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"net-1.seed.aithercoin.com\"));\n         vSeeds.push_back(CDNSSeedData(\"aithercoin.com\", \"net-2.seed.aithercoin.com\"));\n@@ -140,10 +140,10 @@ class CMainParams : public CChainParams {\n \n         vFixedSeeds = std::vector<SeedSpec6>(pnSeed6_main, pnSeed6_main + ARRAYLEN(pnSeed6_main));\n \n-        //TODO set to true if release\n+        //TODO aither set to true if release\n         fMiningRequiresPeers = false;\n \n-        //TODO set to false if release\n+        //TODO aither set to false if release\n         fMineBlocksOnDemand = true;\n \n         fDefaultConsistencyChecks = false;\n@@ -152,8 +152,9 @@ class CMainParams : public CChainParams {\n \n         nPoolMaxTransactions = 3;\n         nFulfilledRequestExpireTime = 60 * 60; // fulfilled requests expire in 1 hour\n-        //TODO aither need to remove strSporkPrivateKey = \"f6c3c04c8c5a3c7ff31af773d8fa943973b21dd69a7e1b09b3fae8a15a699a82\"\n+        //TODO aither need to remove this comment strSporkPrivateKey = \"f6c3c04c8c5a3c7ff31af773d8fa943973b21dd69a7e1b09b3fae8a15a699a82\"\n         strSporkPubKey = \"04080a56cc3f424a153dc2e5c8c784aa9c80196c5ccbf9711a7dc22e7042d42d00e7cb0ec91f5ea2fb00d7bb95c76763798bd7c2418f94d43b777333071fec6ff1\";\n+        //TODO aither need to gen new pubkey if release\n         strMasternodePaymentsPubKey = \"042925f2904184e419f890076f94e24943b20e149b4ba703e90b03d974ed04325e2cb289941d220e161000ead5e1cefebe160993df6f3b23741fa5f6e4c6f7a123\";\n \n         checkpointData = {};\n@@ -203,7 +204,7 @@ class CTestNetParams : public CChainParams {\n         consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nStartTime = 1502280000; // Aug 9th, 2017\n         consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nTimeout = 1533816000; // Aug 9th, 2018\n \n-                //cd f8 dc 7d\n+        //TODO remove this comment cd f8 dc 7d\n         pchMessageStart[0] = 0xcd;\n         pchMessageStart[1] = 0xf8;\n         pchMessageStart[2] = 0xdc;\n@@ -213,10 +214,10 @@ class CTestNetParams : public CChainParams {\n         nMaxTipAge = 0x7fffffff; // allow mining on top of old blocks for testnet\n         nPruneAfterHeight = 1000;\n \n-        genesis = CreateGenesisBlock(1527258200, 218168, 0x1e0ffff0, 1, 50 * COIN);\n+        genesis = CreateGenesisBlock(1527259200, 3688136, 0x1e0ffff0, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x00000dec8348b5ac3541c4f83f81220cfee823812187a3a9b72d749a49361a29\"));\n-        assert(genesis.hashMerkleRoot == uint256S(\"0x61caac4609d899cee2d0d30c3050eec5144f0a2fc3abbfe627fdafc3feb44b37\"));\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x00000982eb56c54d0c74a9af2e728c741c2284e380765849a69789016e423259\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x9e0447644480d482f3885212355a506d170b77364a80a54f174f571c50c7f36d\"));\n \n         vFixedSeeds.clear();\n         vSeeds.clear();\n@@ -247,6 +248,7 @@ class CTestNetParams : public CChainParams {\n         nPoolMaxTransactions = 3;\n         nFulfilledRequestExpireTime = 5*60; // fulfilled requests expire in 5 minutes\n         strSporkPubKey = \"04080a56cc3f424a153dc2e5c8c784aa9c80196c5ccbf9711a7dc22e7042d42d00e7cb0ec91f5ea2fb00d7bb95c76763798bd7c2418f94d43b777333071fec6ff1\";\n+        //TODO aither need to gen new pubkey if release\n         strMasternodePaymentsPubKey = \"042debfdefc73e408e3269318a5767d3ce3f996593e6a6596b10907e76381bd5f0862d0e418c0d6862e88c8db42bff39a0d37ea61cca41713007f1f098cd139f84\";\n \n         checkpointData = {};\n@@ -303,10 +305,10 @@ class CRegTestParams : public CChainParams {\n         nDefaultPort = 42888;\n         nPruneAfterHeight = 1000;\n \n-        genesis = CreateGenesisBlock(1527258300, 2338553, 0x1e0ffff0, 1, 50 * COIN);\n+        genesis = CreateGenesisBlock(1527259300, 2239314, 0x1e0ffff0, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x00000ba1258879771eaf7171c93c1921afeff526615c33e4866f74a79a40ab11\"));\n-        assert(genesis.hashMerkleRoot == uint256S(\"0x61caac4609d899cee2d0d30c3050eec5144f0a2fc3abbfe627fdafc3feb44b37\"));\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x000006bd4595aa3bf58d4d34bf97ff1e447a6d4747cb1a039329908049bd4c34\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x9e0447644480d482f3885212355a506d170b77364a80a54f174f571c50c7f36d\"));\n \n         vFixedSeeds.clear(); //! Regtest mode doesn't have any fixed seeds.\n         vSeeds.clear();  //! Regtest mode doesn't have any DNS seeds."
      },
      {
        "sha": "6ca7270b6b5e7013c9fc36fe0466417d18d5d4a4",
        "filename": "src/clientversion.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4eedf1263c45de13abe5db5614fc612da5611a3b/src/clientversion.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4eedf1263c45de13abe5db5614fc612da5611a3b/src/clientversion.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.h?ref=4eedf1263c45de13abe5db5614fc612da5611a3b",
        "patch": "@@ -16,8 +16,8 @@\n //! These need to be macros, as clientversion.cpp's and aither*-res.rc's voodoo requires it\n #define CLIENT_VERSION_MAJOR 0\n #define CLIENT_VERSION_MINOR 12\n-#define CLIENT_VERSION_REVISION 1\n-#define CLIENT_VERSION_BUILD 4\n+#define CLIENT_VERSION_REVISION 2\n+#define CLIENT_VERSION_BUILD 0\n \n //! Set to true for release, false for prerelease or test build\n #define CLIENT_VERSION_IS_RELEASE true"
      }
    ]
  }
]