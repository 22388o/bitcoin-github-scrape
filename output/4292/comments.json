[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/45186254",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4292#issuecomment-45186254",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4292",
    "id": 45186254,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTg2MjU0",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-05T06:49:45Z",
    "updated_at": "2014-06-05T07:17:43Z",
    "author_association": "MEMBER",
    "body": ">  and that there are no two threads asking for a hash simultaneously for the same time (or otherwise don't destructively overwrite each other's data)\n\nI'm not sure that this is a safe assumption, the GetHash() is called all over the place. That's hard to control.\n\nThinking about it, as you have an explicit MarkDirty() (in contrast to one that is called with high frequency on every change), we could make that compute the hash. That'd make race issues more controllable -- you'd just have to make sure no two threads are updating a transaction (and calling subsequent MarkDirty) at the same time.\n(i also don't think it would give extra overhead - one of the things that gets called for sure on a transaction is GetHash, if only to put it in a map of some kind)\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/45186254/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/45193888",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4292#issuecomment-45193888",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4292",
    "id": 45193888,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTkzODg4",
    "user": {
      "login": "BitcoinPullTester",
      "id": 2110907,
      "node_id": "MDQ6VXNlcjIxMTA5MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2110907?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BitcoinPullTester",
      "html_url": "https://github.com/BitcoinPullTester",
      "followers_url": "https://api.github.com/users/BitcoinPullTester/followers",
      "following_url": "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
      "gists_url": "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BitcoinPullTester/subscriptions",
      "organizations_url": "https://api.github.com/users/BitcoinPullTester/orgs",
      "repos_url": "https://api.github.com/users/BitcoinPullTester/repos",
      "events_url": "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BitcoinPullTester/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-05T08:30:55Z",
    "updated_at": "2014-06-05T08:30:55Z",
    "author_association": "NONE",
    "body": "Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/d78428a9c1ae848eab1c193f6ef3ce3edbd76c3f for binaries and test log.\n\nThis could happen for one of several reasons:\n1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that made them incompatible with the automated testing scripts (please tweak those patches in qa/pull-tester)\n2. It adds/modifies tests which test network rules (thanks for doing that), which conflicts with a patch applied at test time\n3. It does not build on either Linux i386 or Win32 (via MinGW cross compile)\n4. The test suite fails on either Linux i386 or Win32\n5. The block test-cases failed (lookup the first bNN identifier which failed in https://github.com/TheBlueMatt/test-scripts/blob/master/FullBlockTestGenerator.java)\n\nIf you believe this to be in error, please ping BlueMatt on freenode or TheBlueMatt here.\n\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/45193888/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/45212367",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4292#issuecomment-45212367",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4292",
    "id": 45212367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjEyMzY3",
    "user": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?u=0b02049ec38b6bb7d55c5c66d9bbeb0d4b822129&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-05T12:20:44Z",
    "updated_at": "2014-06-05T12:20:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sipa FWIW, this style of caching is what I did in python and C libs, and others have copied also.  It is useful.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/45212367/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/45213069",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4292#issuecomment-45213069",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4292",
    "id": 45213069,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjEzMDY5",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-05T12:29:04Z",
    "updated_at": "2014-06-05T12:29:04Z",
    "author_association": "MEMBER",
    "body": "Another, and much cleaner, solution is adding a CMutableTransaction and CMutableBlock, which have the same fields, but mutable, and do not provide a GetHash. You can convert them to their immutable versions (which can be very efficient by just swapping the vin/vout/vtx vectors) once they are finished.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/45213069/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/45214781",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4292#issuecomment-45214781",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4292",
    "id": 45214781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjE0Nzgx",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-05T12:49:28Z",
    "updated_at": "2014-06-05T12:55:30Z",
    "author_association": "MEMBER",
    "body": "@sipa I like that solution a lot. It has self-enforcing correctness. No chance to forget MarkDirty, and thread problems are avoided by never sharing the mutable structure between threads.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/45214781/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/45220490",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4292#issuecomment-45220490",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4292",
    "id": 45220490,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjIwNDkw",
    "user": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?u=57b50a05caa63fb86d8f910668719907e9ecf667&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-05T13:45:16Z",
    "updated_at": "2014-06-05T13:45:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sipa +1\n\nI was thinking of something like a CMutableTransaction myself for my python-bitcoinlib for use in conjunction with Cython support. I've already made CScript's immutable (they're bytes subclasses) and would have made CMutableTxIn and CMutableTxOut as well. COutPoint can probably be conveniently made immutable always - not often you want to change one of its two members without changing the other.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/45220490/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/45474291",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4292#issuecomment-45474291",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4292",
    "id": 45474291,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDc0Mjkx",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-09T09:27:16Z",
    "updated_at": "2014-06-09T09:27:16Z",
    "author_association": "MEMBER",
    "body": "Closing in favor of #4309.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/45474291/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]