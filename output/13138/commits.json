[
  {
    "sha": "38040c34e1e71ee4b6b56a018f742c8b03546b75",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozODA0MGMzNGUxZTcxZWU0YjZiNTZhMDE4Zjc0MmM4YjAzNTQ2Yjc1",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-04-25T18:05:52Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-06-18T16:47:09Z"
      },
      "message": "[tests] Remove accounts from wallet_importprunedfunds.py",
      "tree": {
        "sha": "77cf6298416d5e5098d5de4b8bf39abaf6b28a1d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/77cf6298416d5e5098d5de4b8bf39abaf6b28a1d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/38040c34e1e71ee4b6b56a018f742c8b03546b75",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38040c34e1e71ee4b6b56a018f742c8b03546b75",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/38040c34e1e71ee4b6b56a018f742c8b03546b75",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38040c34e1e71ee4b6b56a018f742c8b03546b75/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "088240685456494a26047c8f3d5ecf578f70dbce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/088240685456494a26047c8f3d5ecf578f70dbce",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/088240685456494a26047c8f3d5ecf578f70dbce"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 9,
      "deletions": 16
    },
    "files": [
      {
        "sha": "256901884b1fc93fd510cbb1f243c650018369fb",
        "filename": "test/functional/wallet_importprunedfunds.py",
        "status": "modified",
        "additions": 9,
        "deletions": 16,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/38040c34e1e71ee4b6b56a018f742c8b03546b75/test/functional/wallet_importprunedfunds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/38040c34e1e71ee4b6b56a018f742c8b03546b75/test/functional/wallet_importprunedfunds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_importprunedfunds.py?ref=38040c34e1e71ee4b6b56a018f742c8b03546b75",
        "patch": "@@ -15,7 +15,6 @@ class ImportPrunedFundsTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 2\n-        self.extra_args = [['-deprecatedrpc=accounts']] * 2\n \n     def run_test(self):\n         self.log.info(\"Mining blocks...\")\n@@ -74,22 +73,20 @@ def run_test(self):\n         # Import with no affiliated address\n         assert_raises_rpc_error(-5, \"No addresses\", self.nodes[1].importprunedfunds, rawtxn1, proof1)\n \n-        balance1 = self.nodes[1].getbalance(\"\", 0, True)\n+        balance1 = self.nodes[1].getbalance()\n         assert_equal(balance1, Decimal(0))\n \n         # Import with affiliated address with no rescan\n-        self.nodes[1].importaddress(address2, \"add2\", False)\n+        self.nodes[1].importaddress(address=address2, rescan=False)\n         self.nodes[1].importprunedfunds(rawtxn2, proof2)\n-        balance2 = self.nodes[1].getbalance(\"add2\", 0, True)\n-        assert_equal(balance2, Decimal('0.05'))\n+        assert [tx for tx in self.nodes[1].listtransactions(include_watchonly=True) if tx['txid'] == txnid2]\n \n         # Import with private key with no rescan\n-        self.nodes[1].importprivkey(privkey=address3_privkey, label=\"add3\", rescan=False)\n+        self.nodes[1].importprivkey(privkey=address3_privkey, rescan=False)\n         self.nodes[1].importprunedfunds(rawtxn3, proof3)\n-        balance3 = self.nodes[1].getbalance(\"add3\", 0, False)\n+        assert [tx for tx in self.nodes[1].listtransactions() if tx['txid'] == txnid3]\n+        balance3 = self.nodes[1].getbalance()\n         assert_equal(balance3, Decimal('0.025'))\n-        balance3 = self.nodes[1].getbalance(\"*\", 0, True)\n-        assert_equal(balance3, Decimal('0.075'))\n \n         # Addresses Test - after import\n         address_info = self.nodes[1].getaddressinfo(address1)\n@@ -104,17 +101,13 @@ def run_test(self):\n \n         # Remove transactions\n         assert_raises_rpc_error(-8, \"Transaction does not exist in wallet.\", self.nodes[1].removeprunedfunds, txnid1)\n-\n-        balance1 = self.nodes[1].getbalance(\"*\", 0, True)\n-        assert_equal(balance1, Decimal('0.075'))\n+        assert not [tx for tx in self.nodes[1].listtransactions(include_watchonly=True) if tx['txid'] == txnid1]\n \n         self.nodes[1].removeprunedfunds(txnid2)\n-        balance2 = self.nodes[1].getbalance(\"*\", 0, True)\n-        assert_equal(balance2, Decimal('0.025'))\n+        assert not [tx for tx in self.nodes[1].listtransactions(include_watchonly=True) if tx['txid'] == txnid2]\n \n         self.nodes[1].removeprunedfunds(txnid3)\n-        balance3 = self.nodes[1].getbalance(\"*\", 0, True)\n-        assert_equal(balance3, Decimal('0.0'))\n+        assert not [tx for tx in self.nodes[1].listtransactions(include_watchonly=True) if tx['txid'] == txnid3]\n \n if __name__ == '__main__':\n     ImportPrunedFundsTest().main()"
      }
    ]
  }
]