[
  {
    "sha": "85da07a5a001a563488382435202b74a3e3e964a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NWRhMDdhNWEwMDFhNTYzNDg4MzgyNDM1MjAyYjc0YTNlM2U5NjRh",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-02-24T12:27:25Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-02-24T12:35:13Z"
      },
      "message": "Better fingerprinting protection for non-main-chain getdatas.\n\nWith headers-first we can compare against the best header timestamp, rather\nthan using checkpoints which require code updates to maintain.",
      "tree": {
        "sha": "d5f6e29e2f5aa01ebb964cd29e052644cdf09112",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d5f6e29e2f5aa01ebb964cd29e052644cdf09112"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/85da07a5a001a563488382435202b74a3e3e964a",
      "comment_count": 1,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85da07a5a001a563488382435202b74a3e3e964a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/85da07a5a001a563488382435202b74a3e3e964a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85da07a5a001a563488382435202b74a3e3e964a/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8b298ca7d7540acc19d1df79a5c2af7b5aca8cbe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b298ca7d7540acc19d1df79a5c2af7b5aca8cbe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8b298ca7d7540acc19d1df79a5c2af7b5aca8cbe"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 10,
      "deletions": 12
    },
    "files": [
      {
        "sha": "b6a61f7da1c14951d7851e0cff8a8a5d1139c270",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 12,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85da07a5a001a563488382435202b74a3e3e964a/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85da07a5a001a563488382435202b74a3e3e964a/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=85da07a5a001a563488382435202b74a3e3e964a",
        "patch": "@@ -3355,19 +3355,17 @@ void static ProcessGetData(CNode* pfrom)\n                 BlockMap::iterator mi = mapBlockIndex.find(inv.hash);\n                 if (mi != mapBlockIndex.end())\n                 {\n-                    // If the requested block is at a height below our last\n-                    // checkpoint, only serve it if it's in the checkpointed chain\n-                    int nHeight = mi->second->nHeight;\n-                    CBlockIndex* pcheckpoint = Checkpoints::GetLastCheckpoint();\n-                    if (pcheckpoint && nHeight < pcheckpoint->nHeight) {\n-                        if (!chainActive.Contains(mi->second))\n-                        {\n-                            LogPrintf(\"ProcessGetData(): ignoring request for old block that isn't in the main chain\\n\");\n-                        } else {\n-                            send = true;\n-                        }\n-                    } else {\n+                    if (chainActive.Contains(mi->second)) {\n                         send = true;\n+                    } else {\n+                        // To prevent fingerprinting attacks, only send blocks outside of the active\n+                        // chain if they are valid, and no more than a month older than the best header\n+                        // chain we know about.\n+                        send = mi->second->IsValid(BLOCK_VALID_SCRIPTS) && (pindexBestHeader != NULL) &&\n+                            (mi->second->GetBlockTime() > pindexBestHeader->GetBlockTime() - 30 * 24 * 60 * 60);\n+                        if (!send) {\n+                            LogPrintf(\"ProcessGetData(): ignoring request from peer=%i for old block that isn't in the main chain\\n\", pfrom->GetId());\n+                        }\n                     }\n                 }\n                 if (send)"
      }
    ]
  }
]