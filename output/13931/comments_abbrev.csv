DrahtBot,2018-08-09T22:37:56Z,<!--e57a25ab6845829454e8d69fc972939a-->Note to reviewers: This pull request conflicts with the following ones:\n\n* #14180 (qa: Run all tests even if wallet is not compiled by MarcoFalke)\n* #13903 (Significantly reduce GetTransaction cs_main locking (TheBlueMatt) by MarcoFalke)\n* #13864 (validation: Document where we are intentionally ignoring bool return values from validation related functions,https://github.com/bitcoin/bitcoin/pull/13931#issuecomment-411920152,411920152,
achow101,2018-08-11T01:06:02Z,Some tests appear to rely on getrawtransaction working for confirmed transactions that still have unspent outputs which is causing travis to fail.,https://github.com/bitcoin/bitcoin/pull/13931#issuecomment-412240172,412240172,
MarcoFalke,2018-08-12T15:46:25Z,"Would the removal need to go through an ""-deprecatedrpc"" cycle?\n\nOr: How do you know no one is using this?",https://github.com/bitcoin/bitcoin/pull/13931#issuecomment-412351571,412351571,
sipa,2018-08-12T15:48:20Z,"For `getrawtransaction`, I don't think so. It's already been marked deprecated, and I can't imagine anyone actually relying on it.\n\nBut perhaps for `gettxoutproof`/REST we should?",https://github.com/bitcoin/bitcoin/pull/13931#issuecomment-412351678,412351678,
instagibbs,2018-09-05T22:47:53Z,"The PR description/commit message seems misleading. The ""search by block hash"" option is still supported, as it should be.",https://github.com/bitcoin/bitcoin/pull/13931#issuecomment-418905965,418905965,
jb55,2018-09-06T06:51:29Z,utACK 5e155e69e2fe4eae832874868e9e82577d07e495,https://github.com/bitcoin/bitcoin/pull/13931#issuecomment-418984717,418984717,
achow101,2018-09-06T13:25:38Z,utACK 5e155e69e2fe4eae832874868e9e82577d07e495,https://github.com/bitcoin/bitcoin/pull/13931#issuecomment-419092157,419092157,
instagibbs,2018-09-06T13:31:20Z,"aside from the misleading commit message, utACK https://github.com/bitcoin/bitcoin/pull/13931/commits/5e155e69e2fe4eae832874868e9e82577d07e495",https://github.com/bitcoin/bitcoin/pull/13931#issuecomment-419094050,419094050,
Sjors,2018-09-07T19:23:54Z,"Concept ACK, I agree that the condition ""unspent output in the utxo for this transaction"" is too confusing to be worth maintaining.\n\nHopefully we can also get #13014 merged (pruned `-txindex` support), so there's really no reason not to have use `-txindex` if you need `getrawtransaction` for confirmed txs; if you have enough storage for an unpruned node, the index shouldn't be a problem, if yo",https://github.com/bitcoin/bitcoin/pull/13931#issuecomment-419540616,419540616,
instagibbs,2018-09-07T20:35:18Z,for future PR maybe: note in the help that `gettxout` can suffice for most needs as a replacement?,https://github.com/bitcoin/bitcoin/pull/13931#issuecomment-419558422,419558422,
DrahtBot,2018-09-13T11:33:00Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/13931#issuecomment-420975525,420975525,
DrahtBot,2018-12-12T19:23:12Z,"<!--5fd3d806e98f4a0ca80977bb178665a0-->There hasn't been much activity lately and the patch still needs rebase, so I am closing this for now. Please let me know when you want to continue working on this, so the pull request can be re-opened.",https://github.com/bitcoin/bitcoin/pull/13931#issuecomment-446711629,446711629,
MarcoFalke,2018-08-10T01:47:57Z,Accidental removal of this scope?,https://github.com/bitcoin/bitcoin/pull/13931#discussion_r209125928,209125928,src/validation.cpp
domob1812,2018-08-10T06:16:11Z,"After this removal, where do you still use `blockIndex`?  It seems to me that ""lookup by block index"" is now also removed.  Is that intentional?",https://github.com/bitcoin/bitcoin/pull/13931#discussion_r209153924,209153924,src/validation.cpp
sipa,2018-08-10T22:57:41Z,"No, not accidental. Just wrong.",https://github.com/bitcoin/bitcoin/pull/13931#discussion_r209402250,209402250,src/validation.cpp
sipa,2018-08-10T22:57:51Z,"Oops, no, fixing.",https://github.com/bitcoin/bitcoin/pull/13931#discussion_r209402262,209402262,src/validation.cpp
jnewbery,2018-09-07T20:55:08Z,"It's a shame that this PR adds `-txindex` to a bunch of tests (since running with txindex is not the standard way to run bitcoind, so the tests are no longer testing the mainline case).\n\nI don't think it's a show-stopper, but it'd be preferable to update the tests to not have to use txindex, or perhaps add a TODO to remove txindex at some point in the future. We could also add a comment on why",https://github.com/bitcoin/bitcoin/pull/13931#discussion_r216084729,216084729,test/functional/feature_segwit.py
jnewbery,2018-09-07T20:59:03Z,"I think this comment could be clearer now that the logic is more straigtforward. Something like:\n\n- When called with a blockhash argument, getrawtransaction will return the transaction if the specified block is available and the transaction is found in that block.\n- When called without a blockhash argument, getrawtransaction will return the transaction if it is in the mempool, or if -txindex",https://github.com/bitcoin/bitcoin/pull/13931#discussion_r216085650,216085650,src/rpc/rawtransaction.cpp
jnewbery,2018-09-07T20:59:44Z,"`-txindex` is a command line option, not a command :)",https://github.com/bitcoin/bitcoin/pull/13931#discussion_r216085779,216085779,src/rpc/rawtransaction.cpp
jnewbery,2018-09-07T21:20:47Z,"This function can be much simplified now that we're not looking for unspent coins in the UTXO set:\n\n```\ndiff --git a/src/rpc/rawtransaction.cpp b/src/rpc/rawtransaction.cpp\nindex 591943594..2d246e016 100644\n--- a/src/rpc/rawtransaction.cpp\n+++ b/src/rpc/rawtransaction.cpp\n@@ -245,28 +245,17 @@ static UniValue gettxoutproof(const JSONRPCRequest& request)\n             throw JSONRPCEr",https://github.com/bitcoin/bitcoin/pull/13931#discussion_r216090167,216090167,src/rpc/rawtransaction.cpp
jnewbery,2018-09-07T22:13:40Z,Tests also need to be updated with this change: https://github.com/jnewbery/bitcoin/commit/0ffbc2055908b2fa1797f92b4391c2bbbbec588a,https://github.com/bitcoin/bitcoin/pull/13931#discussion_r216099774,216099774,src/rpc/rawtransaction.cpp
Sjors,2018-09-08T09:23:48Z,"I'd start without blockhash argument (mempool only), then blockhash, then say blockhash can be omitted if txindex.",https://github.com/bitcoin/bitcoin/pull/13931#discussion_r216125958,216125958,src/rpc/rawtransaction.cpp
Sjors,2018-09-08T13:08:04Z,"That ""blockhash must be provided"" message is a very useful addition to `gettxoutproof` (I just got confused by it on another branch).  ",https://github.com/bitcoin/bitcoin/pull/13931#discussion_r216130187,216130187,src/rpc/rawtransaction.cpp
jnewbery,2018-09-10T13:52:24Z,"> I'd start without blockhash argument (mempool only), then blockhash, then say blockhash can be omitted if txindex.\n\nI don't think this captures the logic. ""without blockhash argument (mempool only)"" is not correct, since we'll check the whole blockchain if txindex is enabled. This also doesn't communicate that if blockhash is provided, then txindex won't be used to check the entire blockchai",https://github.com/bitcoin/bitcoin/pull/13931#discussion_r216329307,216329307,src/rpc/rawtransaction.cpp
amitiuttarwar,2019-01-13T06:19:08Z,"what is the standard way to run bitcoind? \nseems like there is some confusion in the original conversation too:  https://github.com/bitcoin/bitcoin/issues/3220#issuecomment-377458383\n\nmy understanding is three use cases for this method (still supported after this change): \n1. with blockhash -> search specific block for txn\n2. without blockhash, txindex not enabled -> check mempool \n3. ",https://github.com/bitcoin/bitcoin/pull/13931#discussion_r247335365,247335365,test/functional/feature_segwit.py
jnewbery,2019-01-13T14:53:57Z,"> my understanding is...\n\nyes, that's correct, although I'd be more specific in 3: ~check all the things~ -> check mempool and tx index.\n\n> is the predominant usage to pass in a blockhash\n\nIt depends on whether you're trying to find a confirmed or unconfirmed tx. I expect both usages are common.",https://github.com/bitcoin/bitcoin/pull/13931#discussion_r247349769,247349769,test/functional/feature_segwit.py
amitiuttarwar,2019-01-24T04:04:41Z,"> ~check all the things~ -> check mempool and tx index.\n\nis there somewhere a transaction could be other than the mempool or tx index?",https://github.com/bitcoin/bitcoin/pull/13931#discussion_r250460148,250460148,test/functional/feature_segwit.py
jnewbery,2019-01-24T14:34:09Z,"if `-txindex` is enabled then no - the txindex contains all the confirmed transactions, and your mempool contains the unconfirmed txs that the node is aware of (obviously excluding conflicts, replaced txs, non-standard txs, expired txs, etc)",https://github.com/bitcoin/bitcoin/pull/13931#discussion_r250628230,250628230,test/functional/feature_segwit.py
amitiuttarwar,2019-01-27T00:57:32Z,ok kewl. just confirming that the only qualm was with the imprecision of language :) thanks!,https://github.com/bitcoin/bitcoin/pull/13931#discussion_r251217903,251217903,test/functional/feature_segwit.py
