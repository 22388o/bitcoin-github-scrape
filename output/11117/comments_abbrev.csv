sipa,2017-08-23T06:38:20Z,"> What about:\n> \n> ```c++\n> CTxDestination dest;\n> if (!DecodeDestination(str, dest)) {\n> ```\n\nThere are plenty of cases where the result of decoding can just be passed to something else, and `Function(DecodeDestination(addr))` is far cleaner than `CTxDestination dest; DecodeDestination(addr, dest); Function(dest);`, so I prefer to keep that possible.\n\nThe current pattern is inde",https://github.com/bitcoin/bitcoin/pull/11117#issuecomment-324235865,324235865,
promag,2017-08-23T10:10:10Z,"@sipa sure, I just wanted to question that ""style"" because it's used elsewhere.\n\nACK 8363a2c.",https://github.com/bitcoin/bitcoin/pull/11117#issuecomment-324284520,324284520,
jonasschnelli,2017-08-23T10:45:54Z,utACK 8363a2ccaffba793068db4f97184121730707104,https://github.com/bitcoin/bitcoin/pull/11117#issuecomment-324292279,324292279,
laanwj,2017-08-23T20:11:20Z,Added 0.15.1 milestone,https://github.com/bitcoin/bitcoin/pull/11117#issuecomment-324448577,324448577,
sipa,2017-08-27T17:26:07Z,"Removed `CBitcoinAddress` entirely, using a commit from #11167.",https://github.com/bitcoin/bitcoin/pull/11117#issuecomment-325212262,325212262,
sipa,2017-09-03T20:23:05Z,"> Since this is the base for Bech32, maybe move everything related to CTxDestination out of base58, including tests, to a new place.\n\nYes, read the PR description. I plan to do this, but not in a patch that's intended for backporting.\n\n> Also move `CTxDestination` definition and related functions from `src/script/standard.h`?\n\nWhy? To where?",https://github.com/bitcoin/bitcoin/pull/11117#issuecomment-326828908,326828908,
instagibbs,2017-09-05T21:55:29Z,"utACK https://github.com/bitcoin/bitcoin/pull/11117/commits/87d5c28583374f1be6273c3620b29b0a505e0191\n\nthough I do not know the QT stuff well.",https://github.com/bitcoin/bitcoin/pull/11117#issuecomment-327314920,327314920,
promag,2017-09-05T23:41:59Z,"> Removed CBitcoinAddress entirely, using a commit from #11167.\n\n@sipa missing this commit as `CBitcoinAddress` is still around.",https://github.com/bitcoin/bitcoin/pull/11117#issuecomment-327333436,327333436,
sipa,2017-09-05T23:44:45Z,"@promag Yes, I removed it again.\n\nThis PR is just the part that is likely to break easily and need non-trivial rebasing.",https://github.com/bitcoin/bitcoin/pull/11117#issuecomment-327333849,327333849,
laanwj,2017-09-06T00:20:46Z,"Not sure if we support this version, but I get the following compile error with clang 3.5.0:\n```\n/home/user/src/bitcoin/src/qt/signverifymessagedialog.cpp:235:40: error: invalid operands to binary expression ('CTxDestination' (aka 'variant<CNoDestination, CKeyID, CScriptID>') and 'CTxDestination')\n    if (CTxDestination(pubkey.GetID()) != destination) {\n```\nThen a lot of note: candidate ",https://github.com/bitcoin/bitcoin/pull/11117#issuecomment-327338742,327338742,
JeremyRubin,2017-09-06T00:23:48Z,"@laanwj \n\nchanging it to \n\n\n    if (!(CTxDestination(pubkey.GetID()) == destination)) {\n\nprobably fixes it. Ran into this while writing https://github.com/bitcoin/bitcoin/pull/9991",https://github.com/bitcoin/bitcoin/pull/11117#issuecomment-327339172,327339172,
laanwj,2017-09-06T00:30:52Z,"I confirm that @JeremyRubin's workaround makes it compile.\n\nEdit: after discussion it seems likely that this is due to a boost version difference, not a compiler difference.",https://github.com/bitcoin/bitcoin/pull/11117#issuecomment-327340242,327340242,
sipa,2017-09-06T16:47:07Z,@JeremyRubin Fixed,https://github.com/bitcoin/bitcoin/pull/11117#issuecomment-327544596,327544596,
morcos,2017-09-06T19:53:00Z,utACK eebedca,https://github.com/bitcoin/bitcoin/pull/11117#issuecomment-327594770,327594770,
sipa,2017-09-06T20:26:46Z,@laanwj Changed to `IsValidDestinationString`.,https://github.com/bitcoin/bitcoin/pull/11117#issuecomment-327603166,327603166,
laanwj,2017-09-06T20:30:38Z,utACK 864cd2787,https://github.com/bitcoin/bitcoin/pull/11117#issuecomment-327604099,327604099,
MarcoFalke,2017-11-09T19:44:26Z,Removing from backport,https://github.com/bitcoin/bitcoin/pull/11117#issuecomment-343269572,343269572,
promag,2017-08-23T02:47:42Z,"Block instead?\n```cpp\nif (...) {\n  throw ...;\n}\n```",https://github.com/bitcoin/bitcoin/pull/11117#discussion_r134646607,134646607,src/bitcoin-tx.cpp
promag,2017-08-23T02:59:37Z,"Change to\n```cpp\nif (!destinations.insert(destination).second) {\n```",https://github.com/bitcoin/bitcoin/pull/11117#discussion_r134647726,134647726,src/rpc/rawtransaction.cpp
promag,2017-08-23T03:04:57Z,"Nit, kind of unrelated, use `.find()` to avoid 2nd lookup below.",https://github.com/bitcoin/bitcoin/pull/11117#discussion_r134648199,134648199,src/wallet/rpcwallet.cpp
promag,2017-08-23T03:07:34Z,"Follow up, should the error message be `Invalid destination address`? ",https://github.com/bitcoin/bitcoin/pull/11117#discussion_r134648405,134648405,src/wallet/rpcwallet.cpp
promag,2017-08-23T03:09:28Z,Replace with `.insert().second` like above.,https://github.com/bitcoin/bitcoin/pull/11117#discussion_r134648552,134648552,src/wallet/rpcwallet.cpp
sipa,2017-08-23T04:07:41Z,"An address is just the string-encoded form of a CTxDestination, so no. I think the ""destination"" name should be internal.",https://github.com/bitcoin/bitcoin/pull/11117#discussion_r134653190,134653190,src/wallet/rpcwallet.cpp
sipa,2017-08-23T04:08:27Z,"Trying to keep this as much of a straightforward change as possible, as it may need backporting.",https://github.com/bitcoin/bitcoin/pull/11117#discussion_r134653255,134653255,src/wallet/rpcwallet.cpp
promag,2017-08-23T04:22:29Z,"Off topic, just `Invalid address` as it seems irrelevant to have `Bitcoin` in the error message?",https://github.com/bitcoin/bitcoin/pull/11117#discussion_r134654401,134654401,src/wallet/rpcwallet.cpp
sipa,2017-08-23T04:23:40Z,"Oh, sure!",https://github.com/bitcoin/bitcoin/pull/11117#discussion_r134654485,134654485,src/wallet/rpcwallet.cpp
theuni,2017-08-24T14:22:44Z,I've stared at this for 5 min now. What trickery made this work before?,https://github.com/bitcoin/bitcoin/pull/11117#discussion_r135028452,135028452,src/qt/addresstablemodel.cpp
theuni,2017-08-24T14:42:33Z,!keyID,https://github.com/bitcoin/bitcoin/pull/11117#discussion_r135034714,135034714,src/qt/signverifymessagedialog.cpp
theuni,2017-08-24T15:03:13Z,Maybe add a quick comment that this is CNoDestination so it comes up when grepping for future changes.,https://github.com/bitcoin/bitcoin/pull/11117#discussion_r135040915,135040915,src/script/standard.cpp
theuni,2017-08-24T15:04:44Z,got it. ignore last nit.,https://github.com/bitcoin/bitcoin/pull/11117#discussion_r135041298,135041298,src/script/standard.h
theuni,2017-08-24T15:39:20Z,heh.,https://github.com/bitcoin/bitcoin/pull/11117#discussion_r135051638,135051638,src/wallet/rpcwallet.cpp
promag,2017-08-24T16:11:26Z,Good catch.,https://github.com/bitcoin/bitcoin/pull/11117#discussion_r135060603,135060603,src/qt/signverifymessagedialog.cpp
sipa,2017-08-24T18:08:51Z,"It was creating a temporary of type CBitcoinAddress by converting the CTxDestination initializer, using the implicit `CBitcoinAddress(const CTxDestination &dest)` constructor. That temporary's lifetime was then extended by taking a reference to it, named `address`.",https://github.com/bitcoin/bitcoin/pull/11117#discussion_r135089262,135089262,src/qt/addresstablemodel.cpp
sipa,2017-08-24T18:11:25Z,It took me a while to figure out what this `CBitcoinAddress` was doing. Answer: nothing at all.,https://github.com/bitcoin/bitcoin/pull/11117#discussion_r135089886,135089886,src/wallet/rpcwallet.cpp
sipa,2017-08-24T18:12:30Z,"Wow, thanks :S",https://github.com/bitcoin/bitcoin/pull/11117#discussion_r135090175,135090175,src/qt/signverifymessagedialog.cpp
theuni,2017-08-24T18:22:58Z,"Interesting, I didn't know an implicit conversion could be done when extending the lifetime of a const ref. Scary!",https://github.com/bitcoin/bitcoin/pull/11117#discussion_r135092929,135092929,src/qt/addresstablemodel.cpp
promag,2017-09-01T21:09:06Z,"Nit, sort.",https://github.com/bitcoin/bitcoin/pull/11117#discussion_r136665819,136665819,src/base58.cpp
promag,2017-09-01T21:50:02Z,"Nit, fix braces.",https://github.com/bitcoin/bitcoin/pull/11117#discussion_r136671601,136671601,src/qt/sendcoinsdialog.cpp
promag,2017-09-01T21:53:32Z,Could use `currentAddress = request.params[0].get_str();`?,https://github.com/bitcoin/bitcoin/pull/11117#discussion_r136672068,136672068,src/rpc/misc.cpp
sipa,2017-09-03T19:51:41Z,Fixed.,https://github.com/bitcoin/bitcoin/pull/11117#discussion_r136724818,136724818,src/base58.cpp
sipa,2017-09-03T19:52:03Z,Not going to reflow this entire function in a PR intended for backporting.,https://github.com/bitcoin/bitcoin/pull/11117#discussion_r136724828,136724828,src/qt/sendcoinsdialog.cpp
sipa,2017-09-03T19:53:04Z,"There may be reasons not to do that. Bech32 addresses (added in a later PR) can be uppercase or lowercase, but we always want to store and look up in lowercase form. This is an easy way of doing that, and we should probably check that it's done consistently elsewhere too.",https://github.com/bitcoin/bitcoin/pull/11117#discussion_r136724866,136724866,src/rpc/misc.cpp
promag,2017-09-05T23:36:39Z,"Agree, I'm +1 for clear data validation and/or sanitization. Although `encode(decode(data))` is a obscure way of doing it, not to mention `encode(decode(data))` should equal `data`?",https://github.com/bitcoin/bitcoin/pull/11117#discussion_r137140957,137140957,src/rpc/misc.cpp
promag,2017-09-06T00:13:29Z,"This incur in a double decoding since above `IsValidDestination` also decodes. Maybe swap:\n```cpp\nCTxDestination address = DecodeDestination(rec->address);\nif (IsValidDestination(address)) {\n```\nThis is how it's done multiples times in this PR.",https://github.com/bitcoin/bitcoin/pull/11117#discussion_r137145517,137145517,src/qt/transactiondesc.cpp
promag,2017-09-06T00:16:03Z,Could use `!(operator==)` instead?,https://github.com/bitcoin/bitcoin/pull/11117#discussion_r137145882,137145882,src/script/standard.cpp
MarcoFalke,2017-10-07T08:05:19Z,"nit: Any reason why this was changed from ""Invalid Bitcoin address"" to ""Invalid address"" and the other places left as is. This is part of a error string, so shouldn't break anything I guess.",https://github.com/bitcoin/bitcoin/pull/11117#discussion_r143325678,143325678,src/wallet/rpcwallet.cpp
promag,2017-10-07T08:41:34Z,@achow101 regarding the need for error testing.,https://github.com/bitcoin/bitcoin/pull/11117#discussion_r143326237,143326237,src/wallet/rpcwallet.cpp
