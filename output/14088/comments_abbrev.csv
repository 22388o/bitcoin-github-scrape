ken2812221,2018-08-28T09:20:55Z,utACK 1916b4e,https://github.com/bitcoin/bitcoin/pull/14088#issuecomment-416513023,416513023,
skeees,2018-08-28T12:12:13Z,"Thanks :) utACK 1916b4e\nI don't know how I feel about the linter though - it is too narrowly scoped to `++|--` and won't catch anything inside of a `BOOST_*` style assert either. \n\nIf you're worried about somebody trying to run a node with `NDEBUG` - maybe add a more explanatory warning message https://github.com/bitcoin/bitcoin/blob/master/src/validation.cpp#L51 about why this could dangero",https://github.com/bitcoin/bitcoin/pull/14088#issuecomment-416561066,416561066,
practicalswift,2018-08-28T12:22:39Z,"@skeees Yes, the regression test will only catch this specific type of side effect. The regression test is not meant to be exhaustive (regression tests seldom are! :-)). \n\nFWIW, this is the third time this specific type of side effect is fixed during the past few months so having a check for this is better than no checking :-)\n\n",https://github.com/bitcoin/bitcoin/pull/14088#issuecomment-416563716,416563716,
practicalswift,2018-08-28T12:31:16Z,"@skeees Updated version based on your feedback with improved comments. Now catching also accidental assignment operations in assertions :-)\n\nFrom PRE31-C (SEI CERT C Coding Standard):\n> Assertions should not contain assignments, increment, or decrement operators.\n\nNow catching all three.",https://github.com/bitcoin/bitcoin/pull/14088#issuecomment-416566035,416566035,
practicalswift,2018-08-28T12:34:12Z,@skeees Regarding `BOOST_ASSERT(...)` – we're not using it are we? :-),https://github.com/bitcoin/bitcoin/pull/14088#issuecomment-416566851,416566851,
skeees,2018-08-28T12:53:58Z,"Cool - utACK - I think this change makes things strictly better. Regarding `BOOST_CHECK_*` stuff - used in unit tests but not production code I believe\n\nI do think its worth changing the `#error` warning message (or adding a comment nearby) to something that explains why bitcoin cannot be compiled without assertions. Right now it just states so without any reason. Perhaps:\n\n```In addition ",https://github.com/bitcoin/bitcoin/pull/14088#issuecomment-416573072,416573072,
practicalswift,2018-08-28T13:08:01Z,"@skeees `BOOST_CHECK_*` is ever used outside of the tests:\n\n```\n$ git grep BOOST_CHECK_ "":(exclude)*/test/*""\n$\n```\n\nAnd I don't see any scenario where `BOOST_CHECK_*` could be removed at run-time like `assert(…)` under `NDEBUG`. Do you? :-)",https://github.com/bitcoin/bitcoin/pull/14088#issuecomment-416577353,416577353,
laanwj,2018-08-31T13:00:08Z,"utACK ca1a093127c11bb2aea10bf96c38dbfb40f8d170\n\n> And I don't see any scenario where BOOST_CHECK_* could be removed at run-time like assert(…) under NDEBUG. Do you? :-)\n\nNo—the problem does not exist for BOOST_CHECK_*, leave those alone please.\n",https://github.com/bitcoin/bitcoin/pull/14088#issuecomment-417656369,417656369,
