MarcoFalke,2019-09-17 17:41:47,What was the conclusion on the question whether the dump should include all headers?,https://github.com/bitcoin/bitcoin/pull/16899#issuecomment-532325803,532325803,
DrahtBot,2019-09-17 18:49:39,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16523](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16523.html) (Add removemempoolentry RPC to evict transac",https://github.com/bitcoin/bitcoin/pull/16899#issuecomment-532352515,532352515,
Sjors,2019-09-30 11:30:30,"A progress indicator would be nice. If it wasn't for the system activity monitor showing CPU and disk write activity I would have interrupted the script somewhere during the ~ half an hour `dumptxoutset` takes.\n\nMaybe the script should call `setnetworkactive false`. E.g. I'm seeing `Warning: not punishing manually-connected peer`, as well as a P2P timeout error.\n\nChecksum on macOS 10.14.6 ",https://github.com/bitcoin/bitcoin/pull/16899#issuecomment-536520911,536520911,
laanwj,2019-10-23 11:35:10,"Concept ACK, thanks for working on this, will test.\n",https://github.com/bitcoin/bitcoin/pull/16899#issuecomment-545401032,545401032,
laanwj,2019-10-24 07:49:10,"this currently fails the new `rpc_dumptxoutset.py` test, both in CI and locally\n```\n2019-10-24T07:46:53.097000Z TestFramework (INFO): Initializing test directory /tmp/test_runner_₿_🏃_20191024_094030/rpc_dumptxoutset_22\n2019-10-24T07:46:53.489000Z TestFramework (ERROR): Assertion failed\nTraceback (most recent call last):                      \n  File ""/store/orion/projects/bitcoin/bitcoin/",https://github.com/bitcoin/bitcoin/pull/16899#issuecomment-545792336,545792336,
jamesob,2019-11-04 19:29:00,"[`au.dumptxoutset.13`](https://github.com/jamesob/bitcoin/tree/au.dumptxoutset.13) -> [`au.dumptxoutset.14`](https://github.com/jamesob/bitcoin/tree/au.dumptxoutset.14)\n\nRemoved used of `boost::interruption_point` on @laanwj's advice.",https://github.com/bitcoin/bitcoin/pull/16899#issuecomment-549510028,549510028,
laanwj,2019-11-05 18:39:35,"We should remove all uses of `boost::interruption_point` in RPC code, but not in this PR.\n\nACK 92b2f5306ba0b3f031293cb8f415b67cb002c2f1",https://github.com/bitcoin/bitcoin/pull/16899#issuecomment-549960581,549960581,
MarcoFalke,2019-11-05 18:49:25,Post merge ACK. Good stuff @jamesob ,https://github.com/bitcoin/bitcoin/pull/16899#issuecomment-549964812,549964812,
MarcoFalke,2019-09-17 17:24:50,"I'd prefer to use C++11 member initialization\n\n```cpp\nuint64_t coins_count{0};\n```\n\nFeel free to keep the others (or switch them over as well)",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r325291770,325291770,src/node/coinstats.h
MarcoFalke,2019-09-17 17:25:35,This should use the new `.Check()` syntax on `RPCHelpMan`?,https://github.com/bitcoin/bitcoin/pull/16899#discussion_r325292094,325292094,src/rpc/blockchain.cpp
MarcoFalke,2019-09-17 17:26:09,"Looks like this is the Result, not an Example?",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r325292343,325292343,src/rpc/blockchain.cpp
jamesob,2019-09-17 17:32:17,"Could also create `src/node/utxo_snapshot.{h,cpp}` and add this there if that seems preferable.  ",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r325295089,325295089,src/validation.h
MarcoFalke,2019-09-17 17:34:28,Why does this need the header (as opposed to just the hash of the header?),https://github.com/bitcoin/bitcoin/pull/16899#discussion_r325296061,325296061,src/validation.h
jamesob,2019-09-18 14:48:46,"Ah, right - fixed.",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r325721215,325721215,src/rpc/blockchain.cpp
jamesob,2019-09-18 14:48:51,"Fixed, thanks.",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r325721264,325721264,src/rpc/blockchain.cpp
jamesob,2019-09-18 14:49:04,Changed them all.,https://github.com/bitcoin/bitcoin/pull/16899#discussion_r325721410,325721410,src/node/coinstats.h
jamesob,2019-09-18 14:55:54,"During snapshot activation we use `m_base_blockheader.nHeight` to index into the expected assumeutxo hash values, but beyond that I don't think we use other parts of the header. I can split out the height if you like, but I don't see much harm in taking on a few extra bytes for the complete header in case it's somehow advantageous to have in the future.",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r325725481,325725481,src/validation.h
MarcoFalke,2019-09-18 17:56:31,How is `m_base_blockheader.nHeight` different from `LookupBlockIndex(m_base_blockhash)->nHeight`?,https://github.com/bitcoin/bitcoin/pull/16899#discussion_r325813600,325813600,src/validation.h
jamesob,2019-09-18 18:02:38,"Ah yeah, that's a good point. I'll revert to using a hash in the snapshot and just do the lookup during activation.",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r325816516,325816516,src/validation.h
MarcoFalke,2019-09-18 18:27:33,thx!,https://github.com/bitcoin/bitcoin/pull/16899#discussion_r325827703,325827703,src/validation.h
ariard,2019-09-22 12:25:06,"Not sure if assume-valid is the best wording, with assume-valid only script checks are skipped but others are kept like double spends or BIP 68. With assume-utxo, none of this checks are done.",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r326898280,326898280,src/validation.h
ariard,2019-09-22 12:28:21,"Not clear, you're talking about the progress of background UTXO set here, which is estimated compare to nChainTx of foreground one ?",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r326898488,326898488,src/validation.h
ariard,2019-09-22 12:43:17,"Don't get this field, it is serialized down to a `utxo.dat` file, which is going to be pass to other nodes, what's the meaning of validation completed for them ?",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r326899181,326899181,src/validation.h
ariard,2019-09-22 12:43:36,"""the height""",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r326899194,326899194,src/rpc/blockchain.cpp
MarcoFalke,2019-09-24 15:27:18,"Why can't you use mock time here?\n\nAlso, the test isn't running (see travis)",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r327682541,327682541,test/functional/rpc_dumptxoutset.py
ryanofsky,2019-09-24 16:04:54,"re: https://github.com/bitcoin/bitcoin/pull/16899#discussion_r326899181\n\nIn commit ""validation: add unused SnapshotMetadata class"" (3511d6b2ea65219a18dbb6d6ca45a4de62569dc1)\n\n> Don't get this field, it is serialized down to a `utxo.dat` file, which is going to be pass to other nodes, what's the meaning of validation completed for them ?\n\nI guess SnapshotMetadata is being used for two d",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r327702924,327702924,src/validation.h
ryanofsky,2019-09-24 16:06:41,"In commit ""validation: add unused SnapshotMetadata class"" (3511d6b2ea65219a18dbb6d6ca45a4de62569dc1)\n\nComments for m_utxo_contents_hash m_coins_count fields could say what they are used for.",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r327703900,327703900,src/validation.h
ryanofsky,2019-09-24 16:12:29,"In commit ""rpc: add dumptxoutset"" (b6af8f5443c9891ade4fa5ca92a244e3ff8cac79)\n\nUp to you, but I think documentation could say more about\n\n- Data format \n- What you'd use this function for, or it's mostly meant to be useful for developers\n- Status of the implementation. If this is experimental, whether the data format might change, if there's going to be a corresponding load rpc method\",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r327706789,327706789,src/rpc/blockchain.cpp
ryanofsky,2019-09-24 16:22:11,"In commit ""rpc: add dumptxoutset"" (b6af8f5443c9891ade4fa5ca92a244e3ff8cac79)\n\nThink you could drop this conditional and just say `path = fs::absolute(path, GetDataDir());`",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r327711218,327711218,src/rpc/blockchain.cpp
ryanofsky,2019-09-24 16:33:31,"In commit ""rpc: add dumptxoutset"" (b6af8f5443c9891ade4fa5ca92a244e3ff8cac79)\n\nImplementation seems fine for now. Unclear if in the future we might want to:\n\n- Put some magic bytes in snapshot header so to make it easier to recognize a snapshot file\n- Add version or length fields to make it possible to extend the format and include additional data\n- Write to temporary file and then rena",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r327716506,327716506,src/rpc/blockchain.cpp
ryanofsky,2019-09-24 16:40:43,"In commit ""rpc: add dumptxoutset"" (b6af8f5443c9891ade4fa5ca92a244e3ff8cac79)\n\nMight want to move this to the hidden section, unless it's useful for something other than debugging. Also, if the format or usage might change, it might be better to not expose so compatibility is less a concern.",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r327719791,327719791,src/rpc/blockchain.cpp
jamesob,2019-09-25 20:44:34,"To get a deterministic blockheader, we'd need to use `GetTime<...>()` here: https://github.com/bitcoin/bitcoin/blob/master/src/miner.cpp#L93",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r328331837,328331837,test/functional/rpc_dumptxoutset.py
jamesob,2019-09-25 20:49:18,"Good points. I've removed this field for now. I'll defer figuring out exactly how to track this state to when I file the PR for loading snapshots, but I suspect I'll just use the presence of a `/datadir/chainstate_*` directory to indicate an unvalidated assumeutxo chainstate, then overwrite `/datadir/chainstate` on validation.",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r328333854,328333854,src/validation.h
MarcoFalke,2019-09-25 20:50:49,"Huh, that `nTimeStart` is only used for logging benchmarks",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r328334503,328334503,test/functional/rpc_dumptxoutset.py
jamesob,2019-09-25 21:02:15,"Ah oops, you're totally right. Will try with mock.",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r328339238,328339238,test/functional/rpc_dumptxoutset.py
jamesob,2019-09-26 15:36:24,Thanks for this feedback - made me realize that there's really no point anymore to bundling the contents hash with the snapshot.,https://github.com/bitcoin/bitcoin/pull/16899#discussion_r328684874,328684874,src/validation.h
MarcoFalke,2019-09-30 12:09:28,"I don't really like that `coins_count` is initialized to zero at the beginning of the function, but the other members of `stats` aren't. I'd prefer if all stats are initialized in one go: \n\n```cpp\nstats = CCoinsStats{}; // reset stats",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r329542015,329542015,src/node/coinstats.cpp
laanwj,2019-10-24 08:32:26,"Pretty sure this varies based on locale (`time.mktime` uses local timezone). As this is a constant, and the rest of the test depends on this exact value, might was well hardcode a value here.\n",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r338445728,338445728,test/functional/rpc_dumptxoutset.py
MarcoFalke,2019-10-24 12:29:35,"You can maybe use\n\n```\ngetblockheader(getblockhash(0))[time] + 1",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r338543995,338543995,test/functional/rpc_dumptxoutset.py
MarcoFalke,2019-10-24 17:45:15,unused import?,https://github.com/bitcoin/bitcoin/pull/16899#discussion_r338706783,338706783,test/functional/rpc_dumptxoutset.py
MarcoFalke,2019-10-24 19:17:38,"https://travis-ci.org/bitcoin/bitcoin/jobs/602444006#L6364\n\n```\n                                       with open(expected_path, 'rb') as f:\n                                   TypeError: invalid file: PosixPath('/home/travis/build/bitcoin/bitcoin/ci/scratch/test_runner/test_runner_\u20bf_🏃_20191024_181754/rpc_dumptxoutset_22/node0/regtest/txoutset.dat')",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r338747786,338747786,test/functional/rpc_dumptxoutset.py
MarcoFalke,2019-10-24 19:18:45,This is python 3.5,https://github.com/bitcoin/bitcoin/pull/16899#discussion_r338748194,338748194,test/functional/rpc_dumptxoutset.py
laanwj,2019-10-30 11:59:51,"There's no point in adding a boost interruption point here. RPC threads aren't managed by a boost thread group.\nCheck `IsRPCRunning()` instead.",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r340572982,340572982,src/rpc/blockchain.cpp
jamesob,2019-11-04 19:18:22,Ah if that's the case then we should fix `FindScriptPubKey` at some point too. https://github.com/bitcoin/bitcoin/blob/master/src/rpc/blockchain.cpp#L1970-L1978,https://github.com/bitcoin/bitcoin/pull/16899#discussion_r342223785,342223785,src/rpc/blockchain.cpp
MarcoFalke,2019-11-04 22:37:26,@jamesob ping,https://github.com/bitcoin/bitcoin/pull/16899#discussion_r342306074,342306074,src/node/coinstats.cpp
MarcoFalke,2019-11-05 12:14:53,"I wouldn't mind fixing it in this pull in a new commit. It seem like you copy-pasted the code from there, so it wouldn't hurt review if people saw where the code came from",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r342530631,342530631,src/rpc/blockchain.cpp
jamesob,2019-11-05 15:19:50,"Oops, missed this one. Willfix.",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r342621468,342621468,src/node/coinstats.cpp
Sjors,2019-11-05 18:48:15,"I'm making a snapshot at height 600000, will share a torrent link later.",https://github.com/bitcoin/bitcoin/pull/16899#discussion_r342734014,342734014,contrib/devtools/utxo_snapshot.sh
Sjors,2019-11-05 18:51:33,For others trying this: it's best to call `setnetworkactive false` first,https://github.com/bitcoin/bitcoin/pull/16899#discussion_r342735815,342735815,contrib/devtools/utxo_snapshot.sh
