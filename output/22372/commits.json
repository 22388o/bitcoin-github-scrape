[
  {
    "sha": "849c19a47ed4f4e903c419112d413a61a89f1f7c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NDljMTlhNDdlZDRmNGU5MDNjNDE5MTEyZDQxM2E2MWE4OWYxZjdj",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2021-06-29T19:11:29Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2021-06-29T19:13:32Z"
      },
      "message": "scripted-diff: test: rename `strCmd` to `command`\n\n-BEGIN VERIFY SCRIPT-\nsed -i 's/\\bstrCmd\\b/command/g' $(git grep -l strCmd)\n-END VERIFY SCRIPT-",
      "tree": {
        "sha": "9dd81cfed9354da7bd6adc6eab69ddf9f60195a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9dd81cfed9354da7bd6adc6eab69ddf9f60195a8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/849c19a47ed4f4e903c419112d413a61a89f1f7c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/849c19a47ed4f4e903c419112d413a61a89f1f7c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/849c19a47ed4f4e903c419112d413a61a89f1f7c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/849c19a47ed4f4e903c419112d413a61a89f1f7c/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "06e1fb0b170a69996a7ce1ef5203785a7bc6b278",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06e1fb0b170a69996a7ce1ef5203785a7bc6b278",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/06e1fb0b170a69996a7ce1ef5203785a7bc6b278"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 13,
      "deletions": 13
    },
    "files": [
      {
        "sha": "3301717406988685ee2e1a500a64326fe8092102",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/849c19a47ed4f4e903c419112d413a61a89f1f7c/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/849c19a47ed4f4e903c419112d413a61a89f1f7c/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=849c19a47ed4f4e903c419112d413a61a89f1f7c",
        "patch": "@@ -1347,18 +1347,18 @@ static void AlertNotify(const std::string& strMessage)\n {\n     uiInterface.NotifyAlertChanged();\n #if HAVE_SYSTEM\n-    std::string strCmd = gArgs.GetArg(\"-alertnotify\", \"\");\n-    if (strCmd.empty()) return;\n+    std::string command = gArgs.GetArg(\"-alertnotify\", \"\");\n+    if (command.empty()) return;\n \n     // Alert text should be plain ascii coming from a trusted source, but to\n     // be safe we first strip anything not in safeChars, then add single quotes around\n     // the whole string before passing it to the shell:\n     std::string singleQuote(\"'\");\n     std::string safeStatus = SanitizeString(strMessage);\n     safeStatus = singleQuote+safeStatus+singleQuote;\n-    boost::replace_all(strCmd, \"%s\", safeStatus);\n+    boost::replace_all(command, \"%s\", safeStatus);\n \n-    std::thread t(runCommand, strCmd);\n+    std::thread t(runCommand, command);\n     t.detach(); // thread runs free\n #endif\n }"
      },
      {
        "sha": "7f2e3f75d41f33cfd961653572393b71ab89e461",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/849c19a47ed4f4e903c419112d413a61a89f1f7c/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/849c19a47ed4f4e903c419112d413a61a89f1f7c/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=849c19a47ed4f4e903c419112d413a61a89f1f7c",
        "patch": "@@ -939,28 +939,28 @@ CWalletTx* CWallet::AddToWallet(CTransactionRef tx, const CWalletTx::Confirmatio\n \n #if HAVE_SYSTEM\n     // notify an external script when a wallet transaction comes in or is updated\n-    std::string strCmd = gArgs.GetArg(\"-walletnotify\", \"\");\n+    std::string command = gArgs.GetArg(\"-walletnotify\", \"\");\n \n-    if (!strCmd.empty())\n+    if (!command.empty())\n     {\n-        boost::replace_all(strCmd, \"%s\", hash.GetHex());\n+        boost::replace_all(command, \"%s\", hash.GetHex());\n         if (confirm.status == CWalletTx::Status::CONFIRMED)\n         {\n-            boost::replace_all(strCmd, \"%b\", confirm.hashBlock.GetHex());\n-            boost::replace_all(strCmd, \"%h\", ToString(confirm.block_height));\n+            boost::replace_all(command, \"%b\", confirm.hashBlock.GetHex());\n+            boost::replace_all(command, \"%h\", ToString(confirm.block_height));\n         } else {\n-            boost::replace_all(strCmd, \"%b\", \"unconfirmed\");\n-            boost::replace_all(strCmd, \"%h\", \"-1\");\n+            boost::replace_all(command, \"%b\", \"unconfirmed\");\n+            boost::replace_all(command, \"%h\", \"-1\");\n         }\n #ifndef WIN32\n         // Substituting the wallet name isn't currently supported on windows\n         // because windows shell escaping has not been implemented yet:\n         // https://github.com/bitcoin/bitcoin/pull/13339#issuecomment-537384875\n         // A few ways it could be implemented in the future are described in:\n         // https://github.com/bitcoin/bitcoin/pull/13339#issuecomment-461288094\n-        boost::replace_all(strCmd, \"%w\", ShellEscape(GetName()));\n+        boost::replace_all(command, \"%w\", ShellEscape(GetName()));\n #endif\n-        std::thread t(runCommand, strCmd);\n+        std::thread t(runCommand, command);\n         t.detach(); // thread runs free\n     }\n #endif"
      }
    ]
  },
  {
    "sha": "54b25a8c51eecf4467a32f84ad657fd654939e5c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NGIyNWE4YzUxZWVjZjQ0NjdhMzJmODRhZDY1N2ZkNjU0OTM5ZTVj",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2021-06-29T19:12:42Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2021-07-03T18:04:57Z"
      },
      "message": "Support multiple -*notify commands",
      "tree": {
        "sha": "aaf6df75ed3a5a5495fc2f66cc2d2a03e04e35fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aaf6df75ed3a5a5495fc2f66cc2d2a03e04e35fe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54b25a8c51eecf4467a32f84ad657fd654939e5c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54b25a8c51eecf4467a32f84ad657fd654939e5c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/54b25a8c51eecf4467a32f84ad657fd654939e5c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54b25a8c51eecf4467a32f84ad657fd654939e5c/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "849c19a47ed4f4e903c419112d413a61a89f1f7c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/849c19a47ed4f4e903c419112d413a61a89f1f7c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/849c19a47ed4f4e903c419112d413a61a89f1f7c"
      }
    ],
    "stats": {
      "total": 80,
      "additions": 43,
      "deletions": 37
    },
    "files": [
      {
        "sha": "8e58fe9f23659048d2828d8f0a99f0fc313cc84f",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 10,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54b25a8c51eecf4467a32f84ad657fd654939e5c/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54b25a8c51eecf4467a32f84ad657fd654939e5c/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=54b25a8c51eecf4467a32f84ad657fd654939e5c",
        "patch": "@@ -683,9 +683,8 @@ static void CleanupBlockRevFiles()\n #if HAVE_SYSTEM\n static void StartupNotify(const ArgsManager& args)\n {\n-    std::string cmd = args.GetArg(\"-startupnotify\", \"\");\n-    if (!cmd.empty()) {\n-        std::thread t(runCommand, cmd);\n+    for (std::string command : gArgs.GetArgs(\"-startupnotify\")) {\n+        std::thread t(runCommand, command);\n         t.detach(); // thread runs free\n     }\n }\n@@ -1859,14 +1858,17 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n     }\n \n #if HAVE_SYSTEM\n-    const std::string block_notify = args.GetArg(\"-blocknotify\", \"\");\n-    if (!block_notify.empty()) {\n-        uiInterface.NotifyBlockTip_connect([block_notify](SynchronizationState sync_state, const CBlockIndex* pBlockIndex) {\n+    if (args.IsArgSet(\"-blocknotify\")) {\n+        auto blocknotify_commands = args.GetArgs(\"-blocknotify\");\n+        uiInterface.NotifyBlockTip_connect([blocknotify_commands](SynchronizationState sync_state, const CBlockIndex* pBlockIndex) {\n             if (sync_state != SynchronizationState::POST_INIT || !pBlockIndex) return;\n-            std::string command = block_notify;\n-            boost::replace_all(command, \"%s\", pBlockIndex->GetBlockHash().GetHex());\n-            std::thread t(runCommand, command);\n-            t.detach(); // thread runs free\n+            const std::string blockhash_hex = pBlockIndex->GetBlockHash().GetHex();\n+            for (std::string command : blocknotify_commands) {\n+                boost::replace_all(command, \"%s\", blockhash_hex);\n+\n+                std::thread t(runCommand, command);\n+                t.detach(); // thread runs free\n+            }\n         });\n     }\n #endif"
      },
      {
        "sha": "013acfe9f2bc68fd5ab5605489fec8c652c8cbdb",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54b25a8c51eecf4467a32f84ad657fd654939e5c/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54b25a8c51eecf4467a32f84ad657fd654939e5c/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=54b25a8c51eecf4467a32f84ad657fd654939e5c",
        "patch": "@@ -1347,19 +1347,21 @@ static void AlertNotify(const std::string& strMessage)\n {\n     uiInterface.NotifyAlertChanged();\n #if HAVE_SYSTEM\n-    std::string command = gArgs.GetArg(\"-alertnotify\", \"\");\n-    if (command.empty()) return;\n+    if (!gArgs.IsArgSet(\"-alertnotify\")) return;\n \n     // Alert text should be plain ascii coming from a trusted source, but to\n     // be safe we first strip anything not in safeChars, then add single quotes around\n     // the whole string before passing it to the shell:\n     std::string singleQuote(\"'\");\n     std::string safeStatus = SanitizeString(strMessage);\n     safeStatus = singleQuote+safeStatus+singleQuote;\n-    boost::replace_all(command, \"%s\", safeStatus);\n \n-    std::thread t(runCommand, command);\n-    t.detach(); // thread runs free\n+    for (std::string command : gArgs.GetArgs(\"-alertnotify\")) {\n+        boost::replace_all(command, \"%s\", safeStatus);\n+\n+        std::thread t(runCommand, command);\n+        t.detach(); // thread runs free\n+    }\n #endif\n }\n "
      },
      {
        "sha": "97cbd4b580b12f48d3be19bb3566d2a62a5e05a2",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 22,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54b25a8c51eecf4467a32f84ad657fd654939e5c/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54b25a8c51eecf4467a32f84ad657fd654939e5c/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=54b25a8c51eecf4467a32f84ad657fd654939e5c",
        "patch": "@@ -939,29 +939,31 @@ CWalletTx* CWallet::AddToWallet(CTransactionRef tx, const CWalletTx::Confirmatio\n \n #if HAVE_SYSTEM\n     // notify an external script when a wallet transaction comes in or is updated\n-    std::string command = gArgs.GetArg(\"-walletnotify\", \"\");\n-\n-    if (!command.empty())\n-    {\n-        boost::replace_all(command, \"%s\", hash.GetHex());\n-        if (confirm.status == CWalletTx::Status::CONFIRMED)\n-        {\n-            boost::replace_all(command, \"%b\", confirm.hashBlock.GetHex());\n-            boost::replace_all(command, \"%h\", ToString(confirm.block_height));\n-        } else {\n-            boost::replace_all(command, \"%b\", \"unconfirmed\");\n-            boost::replace_all(command, \"%h\", \"-1\");\n-        }\n-#ifndef WIN32\n-        // Substituting the wallet name isn't currently supported on windows\n-        // because windows shell escaping has not been implemented yet:\n-        // https://github.com/bitcoin/bitcoin/pull/13339#issuecomment-537384875\n-        // A few ways it could be implemented in the future are described in:\n-        // https://github.com/bitcoin/bitcoin/pull/13339#issuecomment-461288094\n-        boost::replace_all(command, \"%w\", ShellEscape(GetName()));\n+    if (gArgs.IsArgSet(\"-walletnotify\")) {\n+#ifdef WIN32\n+        const std::string walletname_escaped = \"wallet_name_substitution_is_not_available_on_Windows\";\n+#else\n+        const std::string walletname_escaped = ShellEscape(GetName());\n #endif\n-        std::thread t(runCommand, command);\n-        t.detach(); // thread runs free\n+        const std::string txid_hex = hash.GetHex();\n+        std::string blockhash_hex, blockheight_str;\n+        if (confirm.status == CWalletTx::Status::CONFIRMED) {\n+            blockhash_hex = confirm.hashBlock.GetHex();\n+            blockheight_str = ToString(confirm.block_height);\n+        } else {\n+            blockhash_hex = \"unconfirmed\";\n+            blockheight_str = \"-1\";\n+        }\n+\n+        for (std::string command : gArgs.GetArgs(\"-walletnotify\")) {\n+            boost::replace_all(command, \"%s\", txid_hex);\n+            boost::replace_all(command, \"%b\", blockhash_hex);\n+            boost::replace_all(command, \"%h\", blockheight_str);\n+            boost::replace_all(command, \"%w\", walletname_escaped);\n+\n+            std::thread t(runCommand, command);\n+            t.detach(); // thread runs free\n+        }\n     }\n #endif\n "
      }
    ]
  }
]