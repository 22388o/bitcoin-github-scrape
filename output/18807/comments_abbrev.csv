DrahtBot,2020-04-29 02:42:12,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/18807#issuecomment-620961027,620961027,
fjahr,2020-04-29 16:34:01,Concept ACK,https://github.com/bitcoin/bitcoin/pull/18807#issuecomment-621324706,621324706,
brakmic,2020-04-30 16:47:21,"Concept ACK.\n\nBuilt, run and tested the code on macOS Catalina 10.15.4. Both tests were successful.\nCommit 0dd03ca9b3531ac8c4ede030bb075b882b588f79\n\n```shell\n./test/functional/mempool_unbroadcast.py   (13s 854ms) ‚îÇ\n2020-04-30T16:35:16.018000Z TestFramework (INFO): Initializing test directory /var/folders/7q/4ffytzk562dd2ky4bfg9_w7h0000gn/T/bitcoin_func_test_ngy9nfi0\n2020-04-30T16:3",https://github.com/bitcoin/bitcoin/pull/18807#issuecomment-621971492,621971492,
Sjors,2020-05-04 18:53:56,"> the node will try to announce unbroadcast transactions until a peer requests it via a `GETDATA`\n\nIf I was a bully node, I would send a `GETDATA` back to any node who announces a transaction I haven't seen yet. Is that kind of behaviour punished at the p2p level? Would it make sense to require that the `GETDATA` comes from a node that we never told about the transaction? Or that it comes from",https://github.com/bitcoin/bitcoin/pull/18807#issuecomment-623642094,623642094,
amitiuttarwar,2020-05-06 03:28:44,"@gzhao408 has kindly taken over the follow-ups that change the codebase functionality in #18895 .\n\nI'll use this PR to focus on updates to tests & docs. but currently still WIP. \n\n-----\n\n@Sjors \n> If I was a bully node, I would send a GETDATA back to any node who announces a transaction I haven't seen yet. Is that kind of behaviour punished at the p2p level?\n\nnodes requesting ann",https://github.com/bitcoin/bitcoin/pull/18807#issuecomment-624423419,624423419,
amitiuttarwar,2020-05-15 01:54:42,"review comments addressed, additional release notes added & WIP removed.",https://github.com/bitcoin/bitcoin/pull/18807#issuecomment-628979697,628979697,
fanquake,2020-05-23 11:22:04,There's a comment from @harding [here](https://github.com/bitcoin/bitcoin/pull/18895#discussion_r429535717) about a change you might want to include in this PR.,https://github.com/bitcoin/bitcoin/pull/18807#issuecomment-633030440,633030440,
amitiuttarwar,2020-05-23 20:21:16,"rebased the branch, addressed review comments, added release notes for RPC updates from #18895 (thanks for getting that started @gzhao408) and updated language as per https://github.com/bitcoin/bitcoin/pull/18895#discussion_r429535717",https://github.com/bitcoin/bitcoin/pull/18807#issuecomment-633132357,633132357,
amitiuttarwar,2020-05-25 18:34:08,"thanks for review @MarcoFalke & @jonatack, comments have been addressed !",https://github.com/bitcoin/bitcoin/pull/18807#issuecomment-633679380,633679380,
MarcoFalke,2020-05-30 16:21:51,"ACK 9e1cb1adf1 üëÅ\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK 9e1cb1adf1 üëÅ\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUg2Dwv9EQ7oHPs8SFa494QyeEFubUt6HHSV8eJl98uS1jhK6ty7WCcKvHToqZMe\nPiC8Jrwjk53dWMNcFMFvSbhU2x8I5qIQjLKj/4YNLOwZaUKasOi",https://github.com/bitcoin/bitcoin/pull/18807#issuecomment-636353274,636353274,
jonatack,2020-04-29 11:02:58,suggest s/approximately once a day/once every 12-36 hours/,https://github.com/bitcoin/bitcoin/pull/18807#discussion_r417232333,417232333,doc/release-notes.md
jonatack,2020-04-29 11:08:10,"Suggestion as per https://github.com/bitcoin/bitcoin/pull/18038#discussion_r415750840 with only one call to `time.time()` and two info logging statements.\n\n```python\n        # Check transaction is rebroadcast in 12-36 hour time interval.\n        time_now = int(time.time())\n\n        self.log.info(""Bump time 12 hours from now, check transaction is not yet rebroadcast"")\n        rebroadc",https://github.com/bitcoin/bitcoin/pull/18807#discussion_r417234843,417234843,test/functional/wallet_resendwallettransactions.py
jnewbery,2020-04-29 15:35:19,Format in sentences please,https://github.com/bitcoin/bitcoin/pull/18807#discussion_r417411309,417411309,src/net_processing.cpp
amitiuttarwar,2020-05-15 00:54:46,sure. changed,https://github.com/bitcoin/bitcoin/pull/18807#discussion_r425508497,425508497,doc/release-notes.md
amitiuttarwar,2020-05-15 01:02:33,"so, I took a closer look at this part of the test, and as @jnewbery pointed out [in that thread](https://github.com/bitcoin/bitcoin/pull/18038#discussion_r417408126), the test wasn't actually checking anything (not just the additional check after 12 hour bump, but the existing one as well).\n\nI've updated so there's just one ""transaction should not be rebroadcast"" check, and that it occurs afte",https://github.com/bitcoin/bitcoin/pull/18807#discussion_r425510394,425510394,test/functional/wallet_resendwallettransactions.py
amitiuttarwar,2020-05-15 01:23:44,"@MarcoFalke I removed the `sync_with_ping()` call because I think its a no-op, but I'd like your review to make sure I'm not (re)introducing a race in weird conditions. \n\nmy understanding: \n`sync_with_ping()` is a p2p interface method that ensures any messages it has sent to the node have been processed by the node. \n\nthe `syncwithvalidationinterfacequeue()` makes sense to me bc that's m",https://github.com/bitcoin/bitcoin/pull/18807#discussion_r425515503,425515503,test/functional/wallet_resendwallettransactions.py
amitiuttarwar,2020-05-15 01:24:54,fixed,https://github.com/bitcoin/bitcoin/pull/18807#discussion_r425515744,425515744,src/net_processing.cpp
MarcoFalke,2020-05-15 10:29:29,">  sync_with_ping() is a p2p interface method that ensures any messages it has sent to the node have been processed by the node.\n\nCorrect. Also, any messages that the node has put in the send buffer (before the pong is sent) will get ""flushed out"" to the mininode.",https://github.com/bitcoin/bitcoin/pull/18807#discussion_r425711827,425711827,test/functional/wallet_resendwallettransactions.py
MarcoFalke,2020-05-15 12:22:04,"```suggestion\n  unbroadcast transactions until a peer requests it via a `getdata` message, or the\n```",https://github.com/bitcoin/bitcoin/pull/18807#discussion_r425763789,425763789,doc/release-notes.md
MarcoFalke,2020-05-15 12:23:06,"```suggestion\n  custom setup to use P2P messages to submit a transaction that belongs to a loaded wallet to your node\n```\n\nlocal means wallet, right?",https://github.com/bitcoin/bitcoin/pull/18807#discussion_r425764324,425764324,doc/release-notes.md
amitiuttarwar,2020-05-15 16:46:00,"so, do you agree that seems irrelevant here? ",https://github.com/bitcoin/bitcoin/pull/18807#discussion_r425924474,425924474,test/functional/wallet_resendwallettransactions.py
amitiuttarwar,2020-05-15 16:56:35,"kind of.. I've been using the language ""local"" because it could be wallet, or submitted via `sendrawtransaction`. similarly, if we're talking about these edge cases, someone could theoretically form a transaction & give it to me out of band, then I submit from one computer to my main node via my highly specific custom P2P setup that involves being disconnected from the greater internet. but I gues",https://github.com/bitcoin/bitcoin/pull/18807#discussion_r425929919,425929919,doc/release-notes.md
MarcoFalke,2020-05-15 17:55:34,"> If you have a custom setup to use P2P messages to submit a transaction to your node while it is not connected to other nodes, these changes reduce your initial broadcast guarantees\n\nThis has always been the case. Your pull didn't change that.",https://github.com/bitcoin/bitcoin/pull/18807#discussion_r425959961,425959961,doc/release-notes.md
amitiuttarwar,2020-05-15 18:06:23,oh. great point. lol ok I'll update to wallet.,https://github.com/bitcoin/bitcoin/pull/18807#discussion_r425965419,425965419,doc/release-notes.md
amitiuttarwar,2020-05-15 19:41:12,"is there a reason you've suggested ""that belongs to a loaded wallet"" rather than just wallet transaction? \n\nwould be relevant if your wallet address is receiving too, right? ",https://github.com/bitcoin/bitcoin/pull/18807#discussion_r426010842,426010842,doc/release-notes.md
amitiuttarwar,2020-05-17 20:46:22,updated,https://github.com/bitcoin/bitcoin/pull/18807#discussion_r426303142,426303142,doc/release-notes.md
amitiuttarwar,2020-05-17 20:47:09,"updated to ""wallet transaction"", lmk if you have further thoughts ",https://github.com/bitcoin/bitcoin/pull/18807#discussion_r426303195,426303195,doc/release-notes.md
MarcoFalke,2020-05-18 11:37:00,"how would bitcoin core know that this is a wallet transaction when the wallet is not loaded? Maybe this is clear to everyone reading the sentence, but I think the distinction should be made to avoid potential confusion.",https://github.com/bitcoin/bitcoin/pull/18807#discussion_r426561428,426561428,doc/release-notes.md
amitiuttarwar,2020-05-20 02:23:39,"ah, this was my misunderstanding. I was interpreting ""loaded wallet"" to mean (wallet has spendable funds aka utxos) vs (node has wallet component loaded)\n\nalso looked in the code and realized that watchonly is a wallet only thing. \n\nI get what you're saying now. I'm thinking about how to clarify the language. ",https://github.com/bitcoin/bitcoin/pull/18807#discussion_r427705478,427705478,doc/release-notes.md
glozow,2020-05-20 22:01:13,"Would you want to grab the lock? And also since this function is pretty handy?\n```suggestion\n        assert_equal(txid in node.p2ps[1]get_invs(), False)\n```",https://github.com/bitcoin/bitcoin/pull/18807#discussion_r428332909,428332909,test/functional/wallet_resendwallettransactions.py
glozow,2020-05-20 22:29:07,"Since it seems you'll need to include the rpc info [from #18895](https://github.com/bitcoin/bitcoin/pull/18895#issuecomment-630998986) I wanted to help draft a description:\n```suggestion\n- `getmempoolinfo` now returns an additional `unbroadcastcount` field which represents the number of transactions that the mempool considers unbroadcast.\n- Mempool RPCs such as `getmempoolentry` and `getrawm",https://github.com/bitcoin/bitcoin/pull/18807#discussion_r428344068,428344068,doc/release-notes.md
amitiuttarwar,2020-05-23 20:07:32,"good call, updated.",https://github.com/bitcoin/bitcoin/pull/18807#discussion_r429574511,429574511,test/functional/wallet_resendwallettransactions.py
amitiuttarwar,2020-05-23 20:07:54,thanks! added with some extra info,https://github.com/bitcoin/bitcoin/pull/18807#discussion_r429574530,429574530,doc/release-notes.md
amitiuttarwar,2020-05-23 20:13:50,"ok. recruited harding & revamped the description. @MarcoFalke what do you think now? \n\n@harding thanks so much for your help. I continued tinkering with the language, let me know if you have any further recommendations \n\n ",https://github.com/bitcoin/bitcoin/pull/18807#discussion_r429574907,429574907,doc/release-notes.md
MarcoFalke,2020-05-23 20:25:36,"```suggestion\n  `verbose=true` now return an additional `unbroadcast` field. This indicates\n```",https://github.com/bitcoin/bitcoin/pull/18807#discussion_r429575706,429575706,doc/release-notes.md
jonatack,2020-05-23 22:09:04,suggestion: s/rpcs/RPCs/,https://github.com/bitcoin/bitcoin/pull/18807#discussion_r429581978,429581978,doc/release-notes.md
jonatack,2020-05-23 22:14:09,"I think the word ""impacted"" is odd here as it is often used to denote a negative connotation. Perhaps ""updated"", ""also benefit from this change"", etc.",https://github.com/bitcoin/bitcoin/pull/18807#discussion_r429582259,429582259,doc/release-notes.md
jonatack,2020-05-23 22:17:54,"Each of these three release note entries employs a different verb tense: future (""will try/will not track"") in the first entry, present (""now returns/tracks/returns"") in the second one, and a form of past (""has been reduced"") tense at the beginning of the third one. Perhaps use a consistent verb tense.",https://github.com/bitcoin/bitcoin/pull/18807#discussion_r429582467,429582467,doc/release-notes.md
jonatack,2020-05-23 22:20:00,"s/if/whether/\n\n(it does not return only if true)",https://github.com/bitcoin/bitcoin/pull/18807#discussion_r429582561,429582561,src/txmempool.h
amitiuttarwar,2020-05-25 18:33:27,"hm, I updated this one to be present (""has been reduced"" -> ""is reduced""). \n\nI read through the other ones and the difference between present & future makes sense to me... eg.\n> The mempool now tracks whether transactions submitted via the wallet or RPCs\n  have been successfully broadcast. Every 10-15 minutes, the node will try to\n  announce unbroadcast transactions until...\n\nthe pre",https://github.com/bitcoin/bitcoin/pull/18807#discussion_r430042767,430042767,doc/release-notes.md
glowang,2020-06-05 15:41:33,I'm curious - any reason why we chose 2 minutes here? ,https://github.com/bitcoin/bitcoin/pull/18807#discussion_r436005562,436005562,test/functional/wallet_resendwallettransactions.py
MarcoFalke,2020-06-05 16:37:47,"It can probably be reduced to one second, if `now` gets set to `block_time` (the mock time before this call)",https://github.com/bitcoin/bitcoin/pull/18807#discussion_r436036244,436036244,test/functional/wallet_resendwallettransactions.py
