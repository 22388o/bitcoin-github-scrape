jonasschnelli,2019-10-09 06:31:12,Concept ACK,https://github.com/bitcoin/bitcoin/pull/17044#issuecomment-539857047,539857047,
DrahtBot,2019-10-09 15:51:37,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16981](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16981.html) (Improve runtime performance of --reindex by",https://github.com/bitcoin/bitcoin/pull/17044#issuecomment-540064226,540064226,
fjahr,2019-10-09 23:00:02,As the test got much larger than the initial commit and also fixes a separate issue #17019 it is now split into its own PR at #17091 ,https://github.com/bitcoin/bitcoin/pull/17044#issuecomment-540242021,540242021,
luke-jr,2019-10-12 18:46:40,Concept ACK,https://github.com/bitcoin/bitcoin/pull/17044#issuecomment-541351637,541351637,
laanwj,2019-11-02 11:31:24,"nit:\n```patch\ndiff --git a/doc/developer-notes.md b/doc/developer-notes.md\nindex 1a7ce91ca67d47903a3b97d45944fb2df6ea2fa1..08004778e3e13284bf1de95efd24a62202847bfc 100644\n--- a/doc/developer-notes.md\n+++ b/doc/developer-notes.md\n@@ -384,7 +384,7 @@ Threads\n \n - ThreadScriptCheck : Verifies block scripts.\n \n-- ThreadImport : Loads blocks from blk*.dat files or bootstrap.dat.\n+",https://github.com/bitcoin/bitcoin/pull/17044#issuecomment-549035354,549035354,
fjahr,2019-11-05 15:50:27,"@laanwj good catch, added that.",https://github.com/bitcoin/bitcoin/pull/17044#issuecomment-549882436,549882436,
MarcoFalke,2019-11-05 17:01:21,"ok, fine LGTM",https://github.com/bitcoin/bitcoin/pull/17044#issuecomment-549913465,549913465,
laanwj,2019-11-05 18:24:54,ACK 104f7de5934f13b837fcf21f6d6b2559799eabe2,https://github.com/bitcoin/bitcoin/pull/17044#issuecomment-549954083,549954083,
mzumsande,2019-10-04 21:31:46,"loadblock, not loadpath",https://github.com/bitcoin/bitcoin/pull/17044#discussion_r331693555,331693555,test/functional/feature_loadblock.py
mzumsande,2019-10-04 21:32:16,"remove ""in""",https://github.com/bitcoin/bitcoin/pull/17044#discussion_r331693706,331693706,test/functional/feature_loadblock.py
MarcoFalke,2019-10-04 22:00:11,"\n\nCan use https://docs.python.org/3/reference/compound_stmts.html#with instead?\n\nAnd the writing it like this, should make the test shorter in line count. https://github.com/bitcoin/bitcoin/blob/7b701fef58f627956d597817a1f9422edd890cdc/test/functional/test_framework/util.py#L306",https://github.com/bitcoin/bitcoin/pull/17044#discussion_r331700422,331700422,test/functional/feature_loadblock.py
fjahr,2019-10-05 11:45:35,"Yes, that's much better, implemented that.",https://github.com/bitcoin/bitcoin/pull/17044#discussion_r331744028,331744028,test/functional/feature_loadblock.py
fjahr,2019-10-05 11:45:46,fixed,https://github.com/bitcoin/bitcoin/pull/17044#discussion_r331744033,331744033,test/functional/feature_loadblock.py
fjahr,2019-10-05 11:45:55,fixed,https://github.com/bitcoin/bitcoin/pull/17044#discussion_r331744038,331744038,test/functional/feature_loadblock.py
MarcoFalke,2019-10-07 17:19:35,"What is the point of `blocksdir_path` (new empty blocks dir), when the whole datadir is cleaned?\n\nI'd even go further and not remove the whole datadir tree. Since that also deletes the debug log for debugging purposes.\n\nYou could spin up two nodes, and call `setnetworkactive(False)` on the second one. Then reboot the second one with the `-loadblock` arg here.",https://github.com/bitcoin/bitcoin/pull/17044#discussion_r332138946,332138946,test/functional/feature_loadblock.py
fjahr,2019-10-08 21:09:48,I was weighing different options initially and thought using just one node might be more economical. But I did not think about the logs. I am now using a second node.,https://github.com/bitcoin/bitcoin/pull/17044#discussion_r332734872,332734872,test/functional/feature_loadblock.py
MarcoFalke,2019-10-09 13:20:50,"I think you can't run these with the `travis` user, only with the docker `root` user.\n\nI.e. \n```suggestion\nDOCKER_EXEC cp -R ../../contrib/ contrib/\n```",https://github.com/bitcoin/bitcoin/pull/17044#discussion_r333008620,333008620,ci/test/06_script_b.sh
MarcoFalke,2019-10-09 13:22:37,"Also, if those files are missing because they are not in the distdir, I'd prefer to add them instead of copying them manually in the ci",https://github.com/bitcoin/bitcoin/pull/17044#discussion_r333009490,333009490,ci/test/06_script_b.sh
MarcoFalke,2019-10-09 13:23:48,Shouldn't you check the return code?,https://github.com/bitcoin/bitcoin/pull/17044#discussion_r333010070,333010070,test/functional/feature_loadblock.py
MarcoFalke,2019-10-09 13:24:46,"Also, does the ` > ` work on all OS flavors? It seems that appveyor windows is passing, so it seems fine!?",https://github.com/bitcoin/bitcoin/pull/17044#discussion_r333010549,333010549,test/functional/feature_loadblock.py
laanwj,2019-10-09 13:25:49,"also, please use `subprocess` instead of `os.system` to invoke other processes from python",https://github.com/bitcoin/bitcoin/pull/17044#discussion_r333011077,333011077,test/functional/feature_loadblock.py
fjahr,2019-10-09 16:26:41,"> Also, does the `>` work on all OS flavors? It seems that appveyor windows is passing, so it seems fine!?\n\nI did a brief check and did not find any issues concerning windows. I am on macOS and it's fine.",https://github.com/bitcoin/bitcoin/pull/17044#discussion_r333111260,333111260,test/functional/feature_loadblock.py
fjahr,2019-10-09 16:26:58,"> also, please use `subprocess` instead of `os.system` to invoke other processes from python\n\ndone\n\n> Shouldn't you check the return code?\n\ndone",https://github.com/bitcoin/bitcoin/pull/17044#discussion_r333111365,333111365,test/functional/feature_loadblock.py
fjahr,2019-10-09 16:27:27,"Yes, that seems cleaner, doing that instead now",https://github.com/bitcoin/bitcoin/pull/17044#discussion_r333111589,333111589,ci/test/06_script_b.sh
promag,2019-10-10 15:35:20,"You could remove this check, iterating an empty array is fine.",https://github.com/bitcoin/bitcoin/pull/17044#discussion_r333591954,333591954,src/init.cpp
fjahr,2019-10-12 18:25:32,done,https://github.com/bitcoin/bitcoin/pull/17044#discussion_r334248506,334248506,src/init.cpp
MarcoFalke,2019-10-23 14:27:02,what does this comment mean? `GetArgs` takes care of the `-noloadblock` option,https://github.com/bitcoin/bitcoin/pull/17044#discussion_r338082323,338082323,src/init.cpp
MarcoFalke,2019-10-23 14:27:37,"Also, why is this code block changed at all?",https://github.com/bitcoin/bitcoin/pull/17044#discussion_r338082690,338082690,src/init.cpp
MarcoFalke,2019-10-23 14:32:23,why is this removed? I'd rather add a test for importing `blk000.dat` files.,https://github.com/bitcoin/bitcoin/pull/17044#discussion_r338085629,338085629,src/init.cpp
mzumsande,2019-10-31 21:01:05,"@MarcoFalke: I suggested removing that above, because it seemed to imply a non-existing naming convention for the file (might as well load from `bootstrap.dat` or whatever your file is named).",https://github.com/bitcoin/bitcoin/pull/17044#discussion_r341363736,341363736,src/init.cpp
fjahr,2019-10-31 21:34:44,"True, after implementing the feedback this doesn't do anything different aside from using `AbsPathForConfigVal()` which does not seem to be critical here.",https://github.com/bitcoin/bitcoin/pull/17044#discussion_r341375757,341375757,src/init.cpp
MarcoFalke,2019-11-01 20:18:21,"See for example this test:\n\n```diff\ndiff --git a/test/functional/feature_loadblock.py b/test/functional/feature_loadblock.py\nindex bf2a4ff61f..a532a83946 100755\n--- a/test/functional/feature_loadblock.py\n+++ b/test/functional/feature_loadblock.py\n@@ -25,7 +25,7 @@ from test_framework.util import assert_equal, wait_until\n class LoadblockTest(BitcoinTestFramework):\n     def set_tes",https://github.com/bitcoin/bitcoin/pull/17044#discussion_r341735812,341735812,src/init.cpp
laanwj,2019-11-04 14:42:53,"Agree with removing this. `blkXXXXX.dat` are the block files and the way to (re)index them is `-reindex`, it has nothing to do with `-loadblock`.",https://github.com/bitcoin/bitcoin/pull/17044#discussion_r342084035,342084035,src/init.cpp
MarcoFalke,2019-11-04 14:49:12,Isn't the point that you can import the block.dat files from another datadir with `-loadblock=blk001.dat -loadblock=blk002.dat -loadblock=...`,https://github.com/bitcoin/bitcoin/pull/17044#discussion_r342087524,342087524,src/init.cpp
laanwj,2019-11-04 14:58:02,"I don't think that's the point. In that case it's less hassle to copy over all the blk files and do a `reindex`.\n\nI think the idea behind `-loadblock` is to import the output from linearize; huge consecutive 'block archives' (there used to be torrents for this). But I might be wrong. I'm not sure what it's used for nowadays.",https://github.com/bitcoin/bitcoin/pull/17044#discussion_r342092649,342092649,src/init.cpp
MarcoFalke,2019-11-04 15:00:43,"Oh, so it is multi-arg to support a split-up bootstrap.dat?",https://github.com/bitcoin/bitcoin/pull/17044#discussion_r342094118,342094118,src/init.cpp
fjahr,2019-11-05 15:52:46,"Yeah, that was my understanding as well. But I did see it spelled out anywhere explicitly.",https://github.com/bitcoin/bitcoin/pull/17044#discussion_r342640452,342640452,src/init.cpp
laanwj,2019-11-05 16:42:37,"> Oh, so it is multi-arg to support a split-up bootstrap.dat?\n\nI think so; linearize splits it into 1GB files by default.",https://github.com/bitcoin/bitcoin/pull/17044#discussion_r342669816,342669816,src/init.cpp
