[
  {
    "sha": "104f7de5934f13b837fcf21f6d6b2559799eabe2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMDRmN2RlNTkzNGYxM2I4MzdmY2YyMWY2ZDZiMjU1OTc5OWVhYmUy",
    "commit": {
      "author": {
        "name": "tryphe",
        "email": "tryphe@users.noreply.github.com",
        "date": "2019-05-05T02:01:51Z"
      },
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2019-11-05T15:47:26Z"
      },
      "message": "remove old bootstrap relevant code\n\n- only load blockfiles when we have paths\n- add release notes for modified bootstrap functionality\n- amend documentation on ThreadImport",
      "tree": {
        "sha": "036d1588cb7e48827a338a687be41e200c10a1c9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/036d1588cb7e48827a338a687be41e200c10a1c9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/104f7de5934f13b837fcf21f6d6b2559799eabe2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/104f7de5934f13b837fcf21f6d6b2559799eabe2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/104f7de5934f13b837fcf21f6d6b2559799eabe2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/104f7de5934f13b837fcf21f6d6b2559799eabe2/comments",
    "author": {
      "login": "tryphe",
      "id": 8435003,
      "node_id": "MDQ6VXNlcjg0MzUwMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8435003?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tryphe",
      "html_url": "https://github.com/tryphe",
      "followers_url": "https://api.github.com/users/tryphe/followers",
      "following_url": "https://api.github.com/users/tryphe/following{/other_user}",
      "gists_url": "https://api.github.com/users/tryphe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tryphe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tryphe/subscriptions",
      "organizations_url": "https://api.github.com/users/tryphe/orgs",
      "repos_url": "https://api.github.com/users/tryphe/repos",
      "events_url": "https://api.github.com/users/tryphe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tryphe/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a689c119076c7b8dc5b4dea4539e4cbf5adfb72f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a689c119076c7b8dc5b4dea4539e4cbf5adfb72f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a689c119076c7b8dc5b4dea4539e4cbf5adfb72f"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 6,
      "deletions": 16
    },
    "files": [
      {
        "sha": "ae7f01cd241d862c1af1b54a7140773ae6e7866e",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/104f7de5934f13b837fcf21f6d6b2559799eabe2/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/104f7de5934f13b837fcf21f6d6b2559799eabe2/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=104f7de5934f13b837fcf21f6d6b2559799eabe2",
        "patch": "@@ -385,7 +385,7 @@ Threads\n \n - ThreadScriptCheck : Verifies block scripts.\n \n-- ThreadImport : Loads blocks from blk*.dat files or bootstrap.dat.\n+- ThreadImport : Loads blocks from `blk*.dat` files or `-loadblock=<file>`.\n \n - StartNode : Starts other threads.\n "
      },
      {
        "sha": "f4d2c5688cf56bedec05ef695d68613dcd011b47",
        "filename": "doc/release-notes-15954.md",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/104f7de5934f13b837fcf21f6d6b2559799eabe2/doc/release-notes-15954.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/104f7de5934f13b837fcf21f6d6b2559799eabe2/doc/release-notes-15954.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-15954.md?ref=104f7de5934f13b837fcf21f6d6b2559799eabe2",
        "patch": "@@ -0,0 +1,4 @@\n+Configuration option changes\n+-----------------------------\n+\n+Importing blocks upon startup via the `bootstrap.dat` file no longer occurs by default. The file must now be specified with `-loadblock=<file>`."
      },
      {
        "sha": "7b57247038da008dafac38d5416e3339611a1ed1",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 15,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/104f7de5934f13b837fcf21f6d6b2559799eabe2/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/104f7de5934f13b837fcf21f6d6b2559799eabe2/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=104f7de5934f13b837fcf21f6d6b2559799eabe2",
        "patch": "@@ -374,7 +374,7 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-debuglogfile=<file>\", strprintf(\"Specify location of debug log file. Relative paths will be prefixed by a net-specific datadir location. (-nodebuglogfile to disable; default: %s)\", DEFAULT_DEBUGLOGFILE), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-feefilter\", strprintf(\"Tell other nodes to filter invs to us by our mempool min fee (default: %u)\", DEFAULT_FEEFILTER), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-includeconf=<file>\", \"Specify additional configuration file, relative to the -datadir path (only useable from configuration file, not command line)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n-    gArgs.AddArg(\"-loadblock=<file>\", \"Imports blocks from external blk000??.dat file on startup\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-loadblock=<file>\", \"Imports blocks from external file on startup\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-maxmempool=<n>\", strprintf(\"Keep the transaction memory pool below <n> megabytes (default: %u)\", DEFAULT_MAX_MEMPOOL_SIZE), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-maxorphantx=<n>\", strprintf(\"Keep at most <n> unconnectable transactions in memory (default: %u)\", DEFAULT_MAX_ORPHAN_TRANSACTIONS), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-mempoolexpiry=<n>\", strprintf(\"Do not keep transactions in the mempool longer than <n> hours (default: %u)\", DEFAULT_MEMPOOL_EXPIRY), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n@@ -687,20 +687,6 @@ static void ThreadImport(std::vector<fs::path> vImportFiles)\n         LoadGenesisBlock(chainparams);\n     }\n \n-    // hardcoded $DATADIR/bootstrap.dat\n-    fs::path pathBootstrap = GetDataDir() / \"bootstrap.dat\";\n-    if (fs::exists(pathBootstrap)) {\n-        FILE *file = fsbridge::fopen(pathBootstrap, \"rb\");\n-        if (file) {\n-            fs::path pathBootstrapOld = GetDataDir() / \"bootstrap.dat.old\";\n-            LogPrintf(\"Importing bootstrap.dat...\\n\");\n-            LoadExternalBlockFile(chainparams, file);\n-            RenameOver(pathBootstrap, pathBootstrapOld);\n-        } else {\n-            LogPrintf(\"Warning: Could not open bootstrap file %s\\n\", pathBootstrap.string());\n-        }\n-    }\n-\n     // -loadblock=\n     for (const fs::path& path : vImportFiles) {\n         FILE *file = fsbridge::fopen(path, \"rb\");"
      }
    ]
  }
]