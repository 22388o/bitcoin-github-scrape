[
  {
    "sha": "b786a8da9a7db95b41b165e676a6993bca3ae354",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNzg2YThkYTlhN2RiOTViNDFiMTY1ZTY3NmE2OTkzYmNhM2FlMzU0",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-11-29T17:16:37Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-12-01T00:16:13Z"
      },
      "message": "refactor: replace manual Satoshis-to-BTC conversions with FormatMoney()",
      "tree": {
        "sha": "97c0fa0321f8b56ca5f7e63b9aff7cd80b257146",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/97c0fa0321f8b56ca5f7e63b9aff7cd80b257146"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b786a8da9a7db95b41b165e676a6993bca3ae354",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b786a8da9a7db95b41b165e676a6993bca3ae354",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b786a8da9a7db95b41b165e676a6993bca3ae354",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b786a8da9a7db95b41b165e676a6993bca3ae354/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7ae86b3c6845873ca96650fc69beb4ae5285c801",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7ae86b3c6845873ca96650fc69beb4ae5285c801",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7ae86b3c6845873ca96650fc69beb4ae5285c801"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 4,
      "deletions": 2
    },
    "files": [
      {
        "sha": "337181f2e7e09190be818bd21d78a7b04e879567",
        "filename": "src/policy/feerate.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b786a8da9a7db95b41b165e676a6993bca3ae354/src/policy/feerate.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b786a8da9a7db95b41b165e676a6993bca3ae354/src/policy/feerate.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/feerate.cpp?ref=b786a8da9a7db95b41b165e676a6993bca3ae354",
        "patch": "@@ -4,6 +4,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <policy/feerate.h>\n+#include <util/moneystr.h>\n \n #include <tinyformat.h>\n \n@@ -39,6 +40,6 @@ std::string CFeeRate::ToString(const FeeEstimateMode& fee_estimate_mode) const\n {\n     switch (fee_estimate_mode) {\n     case FeeEstimateMode::SAT_VB: return strprintf(\"%d.%03d %s/vB\", nSatoshisPerK / 1000, nSatoshisPerK % 1000, CURRENCY_ATOM);\n-    default:                      return strprintf(\"%d.%08d %s/kvB\", nSatoshisPerK / COIN, nSatoshisPerK % COIN, CURRENCY_UNIT);\n+    default:                      return strprintf(\"%s %s/kvB\", FormatMoney(nSatoshisPerK), CURRENCY_UNIT);\n     }\n }"
      },
      {
        "sha": "b8a1f5828d9a1b9e3939db6aaf2c8d309219819d",
        "filename": "src/primitives/transaction.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b786a8da9a7db95b41b165e676a6993bca3ae354/src/primitives/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b786a8da9a7db95b41b165e676a6993bca3ae354/src/primitives/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.cpp?ref=b786a8da9a7db95b41b165e676a6993bca3ae354",
        "patch": "@@ -7,6 +7,7 @@\n \n #include <hash.h>\n #include <tinyformat.h>\n+#include <util/moneystr.h>\n #include <util/strencodings.h>\n \n #include <assert.h>\n@@ -53,7 +54,7 @@ CTxOut::CTxOut(const CAmount& nValueIn, CScript scriptPubKeyIn)\n \n std::string CTxOut::ToString() const\n {\n-    return strprintf(\"CTxOut(nValue=%d.%08d, scriptPubKey=%s)\", nValue / COIN, nValue % COIN, HexStr(scriptPubKey).substr(0, 30));\n+    return strprintf(\"CTxOut(nValue=%s, scriptPubKey=%s)\", FormatMoney(nValue), HexStr(scriptPubKey).substr(0, 30));\n }\n \n CMutableTransaction::CMutableTransaction() : nVersion(CTransaction::CURRENT_VERSION), nLockTime(0) {}"
      }
    ]
  }
]