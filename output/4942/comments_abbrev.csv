Diapolo,2014-09-18T12:31:27Z,"Are you sure this fixes the problem with peers.dat? StartNode() is still starting the DumpAddresses()-thread and inside that function there is still no check, like the one I proposed in #4784.\n",https://github.com/bitcoin/bitcoin/pull/4942#issuecomment-56031400,56031400,
laanwj,2014-09-18T12:36:27Z,"StartNode is not called in the case that there is a lock file, as AppInit2 stops partway!\n",https://github.com/bitcoin/bitcoin/pull/4942#issuecomment-56031857,56031857,
Diapolo,2014-09-18T12:47:22Z,"@laanwj If StartNode() get's called we start the thread for `DumpAddresses()`, right? So we end up in the same situation in a case where the client is running for `DUMP_ADDRESSES_INTERVAL * 1000`, if addrman has 0 addresses.\n",https://github.com/bitcoin/bitcoin/pull/4942#issuecomment-56032946,56032946,
laanwj,2014-09-18T12:50:14Z,"_IF_ StartNode() was called, it is valid for the shutdown (or the DumpAddresses thread) to write the addresses file, no matter how many addresses are in it.\n\nThis is an initialization sequence fix: It makes sure that if the lock file is missing, or AppInit2() exits in some other way before addresses list is initialized, it won't write an empty file on shutdown (and StopNode),\n",https://github.com/bitcoin/bitcoin/pull/4942#issuecomment-56033238,56033238,
BitcoinPullTester,2014-09-18T12:54:07Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4942_94064710b9123dfb3df8cfd6c32efae349aec281/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/4942#issuecomment-56033643,56033643,
Diapolo,2014-09-18T14:02:27Z,"@laanwj But wouldn't it also make sense to prevent overwriting with 0 addresses, even if the init stage was processed correctly?\n",https://github.com/bitcoin/bitcoin/pull/4942#issuecomment-56042264,56042264,
laanwj,2014-09-18T14:04:23Z,"@Diapolo Writing 0 addresses is fine in principle. It's only an error if the previous addresses weren't read, or we're not allowed to write to the data directory at all.\n",https://github.com/bitcoin/bitcoin/pull/4942#issuecomment-56042505,56042505,
sipa,2014-10-02T02:21:08Z,"utACK. I guess at some point we want the fee data to move from globals into an encapsulated state, which only exists when it was correctly loaded. But this is already an improvement.\n",https://github.com/bitcoin/bitcoin/pull/4942#issuecomment-57572241,57572241,
laanwj,2014-10-02T07:19:21Z,"@sipa Agreed on that, eventually it should be an encapsulated structure that is instantiated/destroyed instead of having code directly in AppInit2()/ShutDown().\n",https://github.com/bitcoin/bitcoin/pull/4942#issuecomment-57592565,57592565,
jgarzik,2014-10-13T15:11:58Z,ut ACK\n,https://github.com/bitcoin/bitcoin/pull/4942#issuecomment-58906238,58906238,
Diapolo,2014-09-18T12:26:34Z,"Feels weird to have an init message in net.cpp, just saying.\n",https://github.com/bitcoin/bitcoin/pull/4942#discussion_r17723424,17723424,src/net.cpp
laanwj,2014-09-18T12:28:04Z,Not strange at all - StartNode is part of the initialization process. This is bound to happen as we modularize. In time I expect _all_ init messages to be in modules.\n,https://github.com/bitcoin/bitcoin/pull/4942#discussion_r17723490,17723490,src/net.cpp
Diapolo,2014-09-18T12:36:58Z,"That fee file isn't created here, so that can't be the place where we should set init to true?\n",https://github.com/bitcoin/bitcoin/pull/4942#discussion_r17723805,17723805,src/init.cpp
Diapolo,2014-09-18T12:37:20Z,IMHO that call creates the file.\n,https://github.com/bitcoin/bitcoin/pull/4942#discussion_r17723824,17723824,src/init.cpp
laanwj,2014-09-18T12:38:09Z,"It doesn't need to be created here. We just need the flag to know whether we reached this stage in the initialization process. If we did, it is valid to write the file on shutdown.\n",https://github.com/bitcoin/bitcoin/pull/4942#discussion_r17723873,17723873,src/init.cpp
laanwj,2014-09-18T12:40:57Z,"Which is inside `if (fFeeEstimatesInitialized)` now right? So if the fee estimates were never read (or deemed missing and initialized to empty), they won't be written either.\n",https://github.com/bitcoin/bitcoin/pull/4942#discussion_r17724022,17724022,src/init.cpp
Diapolo,2014-09-18T14:00:23Z,"Alright, but at least the variable name is missleading? At this stage we could have a missing file, an up-version file or some serialisation error, which would make me think `fFeeEstimatesInitialized` shouldn't be true. Perhaps `fWriteFeeEstimates` is better.\n",https://github.com/bitcoin/bitcoin/pull/4942#discussion_r17728024,17728024,src/init.cpp
Diapolo,2014-09-18T14:00:54Z,Correct!\n,https://github.com/bitcoin/bitcoin/pull/4942#discussion_r17728054,17728054,src/init.cpp
laanwj,2014-09-18T14:07:08Z,"The point is that it doesn't matter which of those are the case. We choose to ignore read errors. If the file is invalid or missing, it's fine to write an empty file. It's just not fine to write an empty file when initialization failed.\n",https://github.com/bitcoin/bitcoin/pull/4942#discussion_r17728512,17728512,src/init.cpp
