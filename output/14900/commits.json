[
  {
    "sha": "ae1b6756c96f78985e88fa5b0c68ccad90f5e259",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZTFiNjc1NmM5NmY3ODk4NWU4OGZhNWIwYzY4Y2NhZDkwZjVlMjU5",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2018-11-07T16:24:34Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2018-12-09T14:32:45Z"
      },
      "message": "importmulti: Don't add internal addresses to address book\n\nGithub-Pull: #14679\nRebased-From: 7afddfa8cefd01249ad59cf2370e7cec90b34f6f",
      "tree": {
        "sha": "ce7f269cd36cc48dee7b00272d86dc0203af1ecc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ce7f269cd36cc48dee7b00272d86dc0203af1ecc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ae1b6756c96f78985e88fa5b0c68ccad90f5e259",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAlwNJ48ACgkQLuufXMCV\nJsFCAw//VzzFjcWOOzjAgefU51lpR6J1jDUzhXZj6HLlETLjuuAV3egTXGq/qi3H\nCmHCPN7q30rkgbAt0v/NTkcTZK+UBtOItyCqMnMYFnlG8HlEECoLdB8yjYS7puAZ\nzT9oTdtDEAOlJ0HWjMtaT5GI5s362dQ7G0Ult5zA+VUN7OI3HYIuKyczG9ISxKD3\nogwJ2cd+93lZbnAPJRBFq+WQOBkxeShtDFVWrHj/Ic030Qcp2Gik+yEDoUo5Z2Vy\nh+OyWJTbqrMAgggdKq7OSEvjbwpwbr6IhSAHYZnXUzrXOaETSR6Fjb9YhdS8syXx\nF8+aJ41H94j7SLfxE1kP8rdMFCKy5ComU9xteS534koPPKOqYXjIPSWZr4lx88t7\nmH3M7U3HRxRiiYP/t8K6J5y5Ny40+sZmY+U68CCpHo+0HcbfTsNqAW01dNlP8vog\nMlN7Rcu4woEN3olzHWkVoPdHKdvHX4xH/KnSbaPB0xNkWXwRVWruUrpHXuxaWHw9\nMSAAf8n5nJOzqDHwpeXee93aHI1qHekdcpO9eLpiQ6OPIOhqD+gsFV+NYExVywGB\n/v6yDaFXWDZsUJ+9qRtoN2ttlUHHFovmuJlfuahTI6qBHDs+76EgihmuNytq1Q8m\nmhxUJ+LXllel0R2FJZhgVSoJ/UjHOBuAwmZolosxfQc7+7uytlw=\n=gyar\n-----END PGP SIGNATURE-----",
        "payload": "tree ce7f269cd36cc48dee7b00272d86dc0203af1ecc\nparent ef70f9b52b851c7997a9f1a0834714e3eebc1fd8\nauthor Gregory Sanders <gsanders87@gmail.com> 1541607874 -0500\ncommitter fanquake <fanquake@gmail.com> 1544365965 +0800\n\nimportmulti: Don't add internal addresses to address book\n\nGithub-Pull: #14679\nRebased-From: 7afddfa8cefd01249ad59cf2370e7cec90b34f6f\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae1b6756c96f78985e88fa5b0c68ccad90f5e259",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ae1b6756c96f78985e88fa5b0c68ccad90f5e259",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae1b6756c96f78985e88fa5b0c68ccad90f5e259/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ef70f9b52b851c7997a9f1a0834714e3eebc1fd8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef70f9b52b851c7997a9f1a0834714e3eebc1fd8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ef70f9b52b851c7997a9f1a0834714e3eebc1fd8"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 8,
      "deletions": 6
    },
    "files": [
      {
        "sha": "a55c539733cc2369f3eb142b3b808fc980c1fb4f",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae1b6756c96f78985e88fa5b0c68ccad90f5e259/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae1b6756c96f78985e88fa5b0c68ccad90f5e259/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=ae1b6756c96f78985e88fa5b0c68ccad90f5e259",
        "patch": "@@ -996,8 +996,9 @@ static UniValue ProcessImport(CWallet * const pwallet, const UniValue& data, con\n                     throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding address to wallet\");\n                 }\n \n-                // add to address book or update label\n-                if (IsValidDestination(pubkey_dest)) {\n+                // if not internal add to address book or update label\n+                if (!internal) {\n+                    assert(IsValidDestination(pubkey_dest));\n                     pwallet->SetAddressBook(pubkey_dest, label, \"receive\");\n                 }\n \n@@ -1148,7 +1149,7 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n             \"      \\\"redeemscript\\\": \\\"<script>\\\"                            , (string, optional) Allowed only if the scriptPubKey is a P2SH address or a P2SH scriptPubKey\\n\"\n             \"      \\\"pubkeys\\\": [\\\"<pubKey>\\\", ... ]                         , (array, optional) Array of strings giving pubkeys that must occur in the output or redeemscript\\n\"\n             \"      \\\"keys\\\": [\\\"<key>\\\", ... ]                               , (array, optional) Array of strings giving private keys whose corresponding public keys must occur in the output or redeemscript\\n\"\n-            \"      \\\"internal\\\": <true>                                    , (boolean, optional, default: false) Stating whether matching outputs should be treated as not incoming payments\\n\"\n+            \"      \\\"internal\\\": <true>                                    , (boolean, optional, default: false) Stating whether matching outputs should be treated as not incoming payments aka change\\n\"\n             \"      \\\"watchonly\\\": <true>                                   , (boolean, optional, default: false) Stating whether matching outputs should be considered watched even when they're not spendable, only allowed if keys are empty\\n\"\n             \"      \\\"label\\\": <label>                                      , (string, optional, default: '') Label to assign to the address (aka account name, for now), only allowed with internal=false\\n\"\n             \"    }\\n\""
      },
      {
        "sha": "e6dd8b6ddbbf35055fdfd26d5f653a4a7d20d235",
        "filename": "test/functional/wallet_importmulti.py",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae1b6756c96f78985e88fa5b0c68ccad90f5e259/test/functional/wallet_importmulti.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae1b6756c96f78985e88fa5b0c68ccad90f5e259/test/functional/wallet_importmulti.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_importmulti.py?ref=ae1b6756c96f78985e88fa5b0c68ccad90f5e259",
        "patch": "@@ -40,7 +40,7 @@ def run_test (self):\n \n         # RPC importmulti -----------------------------------------------\n \n-        # Bitcoin Address\n+        # Bitcoin Address (implicit non-internal)\n         self.log.info(\"Should import an address\")\n         address = self.nodes[0].getaddressinfo(self.nodes[0].getnewaddress())\n         result = self.nodes[1].importmulti([{\n@@ -98,15 +98,16 @@ def run_test (self):\n         assert_equal('timestamp' in address_assert, False)\n \n \n-        # Address + Public key + !Internal\n+        # Address + Public key + !Internal(explicit)\n         self.log.info(\"Should import an address with public key\")\n         address = self.nodes[0].getaddressinfo(self.nodes[0].getnewaddress())\n         result = self.nodes[1].importmulti([{\n             \"scriptPubKey\": {\n                 \"address\": address['address']\n             },\n             \"timestamp\": \"now\",\n-            \"pubkeys\": [ address['pubkey'] ]\n+            \"pubkeys\": [ address['pubkey'] ],\n+            \"internal\": False\n         }])\n         assert_equal(result[0]['success'], True)\n         address_assert = self.nodes[1].getaddressinfo(address['address'])"
      }
    ]
  }
]