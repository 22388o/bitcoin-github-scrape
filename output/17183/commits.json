[
  {
    "sha": "a0fc0764763329df2c4b11a4e22715ccfc0cf7d3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMGZjMDc2NDc2MzMyOWRmMmM0YjExYTRlMjI3MTVjY2ZjMGNmN2Qz",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2019-10-18T00:05:05Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2019-10-22T23:59:32Z"
      },
      "message": "refactor: test/bench: dedup Build{Crediting,Spending}Transaction()\n\nprototypes used in src/test/script_tests.cpp:\n- CMutableTransaction BuildCreditingTransaction(const CScript& scriptPubKey, int nValue = 0);\n- CMutableTransaction BuildSpendingTransaction(const CScript& scriptSig, const CScriptWitness& scriptWitness, const CTransaction& txCredit);\n\nprototypes used in bench/verify_script.cpp:\n- CMutableTransaction BuildCreditingTransaction(const CScript& scriptPubKey);\n- CMutableTransaction BuildSpendingTransaction(const CScript& scriptSig, const CMutableTransaction& txCredit);\n\nThe more generic versions from the script tests are moved into a new file pair\ntransaction_utils.cpp/h and the calls are adapted accordingly in the\nverify_script benchmark (passing the nValue of 1 explicitely for\nBuildCreditingTransaction(), passing empty scriptWitness explicitely and\nconverting txCredit parameter to CTransaction in BuildSpendingTransaction()).",
      "tree": {
        "sha": "2faf74abfb0cd38ef1abb12a68aef0a68577d2d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2faf74abfb0cd38ef1abb12a68aef0a68577d2d8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a0fc0764763329df2c4b11a4e22715ccfc0cf7d3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0fc0764763329df2c4b11a4e22715ccfc0cf7d3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a0fc0764763329df2c4b11a4e22715ccfc0cf7d3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0fc0764763329df2c4b11a4e22715ccfc0cf7d3/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ec3ed5a4487886f1c2a35fda0a3289be7b280248",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec3ed5a4487886f1c2a35fda0a3289be7b280248",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ec3ed5a4487886f1c2a35fda0a3289be7b280248"
      }
    ],
    "stats": {
      "total": 138,
      "additions": 67,
      "deletions": 71
    },
    "files": [
      {
        "sha": "703f616f8e1cf1451091ad15633fef4fd390c3aa",
        "filename": "build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a0fc0764763329df2c4b11a4e22715ccfc0cf7d3/build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a0fc0764763329df2c4b11a4e22715ccfc0cf7d3/build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/test_bitcoin/test_bitcoin.vcxproj?ref=a0fc0764763329df2c4b11a4e22715ccfc0cf7d3",
        "patch": "@@ -13,6 +13,7 @@\n     <ClCompile Include=\"..\\..\\src\\test\\*_properties.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\test\\gen\\*_gen.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\wallet\\test\\*_tests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\test\\lib\\*.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\test\\setup_common.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\test\\main.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\wallet\\test\\*_fixture.cpp\" />"
      },
      {
        "sha": "38143e32b9e1367926a1be6142c4ecd9c2873ff7",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a0fc0764763329df2c4b11a4e22715ccfc0cf7d3/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a0fc0764763329df2c4b11a4e22715ccfc0cf7d3/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=a0fc0764763329df2c4b11a4e22715ccfc0cf7d3",
        "patch": "@@ -39,6 +39,8 @@ bench_bench_bitcoin_SOURCES = \\\n   bench/lockedpool.cpp \\\n   bench/poly1305.cpp \\\n   bench/prevector.cpp \\\n+  test/lib/transaction_utils.h \\\n+  test/lib/transaction_utils.cpp \\\n   test/setup_common.h \\\n   test/setup_common.cpp \\\n   test/util.h \\"
      },
      {
        "sha": "3af55d9dab46adaea059e369c2712a21a5016bc5",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a0fc0764763329df2c4b11a4e22715ccfc0cf7d3/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a0fc0764763329df2c4b11a4e22715ccfc0cf7d3/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=a0fc0764763329df2c4b11a4e22715ccfc0cf7d3",
        "patch": "@@ -53,6 +53,8 @@ RAW_TEST_FILES =\n GENERATED_TEST_FILES = $(JSON_TEST_FILES:.json=.json.h) $(RAW_TEST_FILES:.raw=.raw.h)\n \n BITCOIN_TEST_SUITE = \\\n+  test/lib/transaction_utils.h \\\n+  test/lib/transaction_utils.cpp \\\n   test/main.cpp \\\n   test/setup_common.h \\\n   test/setup_common.cpp"
      },
      {
        "sha": "c9947f192ee3e88cb1f051964ca9a6dd1633de64",
        "filename": "src/bench/verify_script.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 37,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a0fc0764763329df2c4b11a4e22715ccfc0cf7d3/src/bench/verify_script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a0fc0764763329df2c4b11a4e22715ccfc0cf7d3/src/bench/verify_script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/verify_script.cpp?ref=a0fc0764763329df2c4b11a4e22715ccfc0cf7d3",
        "patch": "@@ -10,44 +10,10 @@\n #include <script/script.h>\n #include <script/standard.h>\n #include <streams.h>\n+#include <test/lib/transaction_utils.h>\n \n #include <array>\n \n-// FIXME: Dedup with BuildCreditingTransaction in test/script_tests.cpp.\n-static CMutableTransaction BuildCreditingTransaction(const CScript& scriptPubKey)\n-{\n-    CMutableTransaction txCredit;\n-    txCredit.nVersion = 1;\n-    txCredit.nLockTime = 0;\n-    txCredit.vin.resize(1);\n-    txCredit.vout.resize(1);\n-    txCredit.vin[0].prevout.SetNull();\n-    txCredit.vin[0].scriptSig = CScript() << CScriptNum(0) << CScriptNum(0);\n-    txCredit.vin[0].nSequence = CTxIn::SEQUENCE_FINAL;\n-    txCredit.vout[0].scriptPubKey = scriptPubKey;\n-    txCredit.vout[0].nValue = 1;\n-\n-    return txCredit;\n-}\n-\n-// FIXME: Dedup with BuildSpendingTransaction in test/script_tests.cpp.\n-static CMutableTransaction BuildSpendingTransaction(const CScript& scriptSig, const CMutableTransaction& txCredit)\n-{\n-    CMutableTransaction txSpend;\n-    txSpend.nVersion = 1;\n-    txSpend.nLockTime = 0;\n-    txSpend.vin.resize(1);\n-    txSpend.vout.resize(1);\n-    txSpend.vin[0].prevout.hash = txCredit.GetHash();\n-    txSpend.vin[0].prevout.n = 0;\n-    txSpend.vin[0].scriptSig = scriptSig;\n-    txSpend.vin[0].nSequence = CTxIn::SEQUENCE_FINAL;\n-    txSpend.vout[0].scriptPubKey = CScript();\n-    txSpend.vout[0].nValue = txCredit.vout[0].nValue;\n-\n-    return txSpend;\n-}\n-\n // Microbenchmark for verification of a basic P2WPKH script. Can be easily\n // modified to measure performance of other types of scripts.\n static void VerifyScriptBench(benchmark::State& state)\n@@ -71,8 +37,8 @@ static void VerifyScriptBench(benchmark::State& state)\n     CScript scriptPubKey = CScript() << witnessversion << ToByteVector(pubkeyHash);\n     CScript scriptSig;\n     CScript witScriptPubkey = CScript() << OP_DUP << OP_HASH160 << ToByteVector(pubkeyHash) << OP_EQUALVERIFY << OP_CHECKSIG;\n-    const CMutableTransaction& txCredit = BuildCreditingTransaction(scriptPubKey);\n-    CMutableTransaction txSpend = BuildSpendingTransaction(scriptSig, txCredit);\n+    const CMutableTransaction& txCredit = BuildCreditingTransaction(scriptPubKey, 1);\n+    CMutableTransaction txSpend = BuildSpendingTransaction(scriptSig, CScriptWitness(), CTransaction(txCredit));\n     CScriptWitness& witness = txSpend.vin[0].scriptWitness;\n     witness.stack.emplace_back();\n     key.Sign(SignatureHash(witScriptPubkey, txSpend, 0, SIGHASH_ALL, txCredit.vout[0].nValue, SigVersion::WITNESS_V0), witness.stack.back());"
      },
      {
        "sha": "2619fb9006d0a2b84925808872551c3c0f547360",
        "filename": "src/test/lib/transaction_utils.cpp",
        "status": "added",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a0fc0764763329df2c4b11a4e22715ccfc0cf7d3/src/test/lib/transaction_utils.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a0fc0764763329df2c4b11a4e22715ccfc0cf7d3/src/test/lib/transaction_utils.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/lib/transaction_utils.cpp?ref=a0fc0764763329df2c4b11a4e22715ccfc0cf7d3",
        "patch": "@@ -0,0 +1,39 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/lib/transaction_utils.h>\n+\n+CMutableTransaction BuildCreditingTransaction(const CScript& scriptPubKey, int nValue)\n+{\n+    CMutableTransaction txCredit;\n+    txCredit.nVersion = 1;\n+    txCredit.nLockTime = 0;\n+    txCredit.vin.resize(1);\n+    txCredit.vout.resize(1);\n+    txCredit.vin[0].prevout.SetNull();\n+    txCredit.vin[0].scriptSig = CScript() << CScriptNum(0) << CScriptNum(0);\n+    txCredit.vin[0].nSequence = CTxIn::SEQUENCE_FINAL;\n+    txCredit.vout[0].scriptPubKey = scriptPubKey;\n+    txCredit.vout[0].nValue = nValue;\n+\n+    return txCredit;\n+}\n+\n+CMutableTransaction BuildSpendingTransaction(const CScript& scriptSig, const CScriptWitness& scriptWitness, const CTransaction& txCredit)\n+{\n+    CMutableTransaction txSpend;\n+    txSpend.nVersion = 1;\n+    txSpend.nLockTime = 0;\n+    txSpend.vin.resize(1);\n+    txSpend.vout.resize(1);\n+    txSpend.vin[0].scriptWitness = scriptWitness;\n+    txSpend.vin[0].prevout.hash = txCredit.GetHash();\n+    txSpend.vin[0].prevout.n = 0;\n+    txSpend.vin[0].scriptSig = scriptSig;\n+    txSpend.vin[0].nSequence = CTxIn::SEQUENCE_FINAL;\n+    txSpend.vout[0].scriptPubKey = CScript();\n+    txSpend.vout[0].nValue = txCredit.vout[0].nValue;\n+\n+    return txSpend;\n+}"
      },
      {
        "sha": "6f297ac34fb5e2ff103469ff5430cf3488a93ad4",
        "filename": "src/test/lib/transaction_utils.h",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a0fc0764763329df2c4b11a4e22715ccfc0cf7d3/src/test/lib/transaction_utils.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a0fc0764763329df2c4b11a4e22715ccfc0cf7d3/src/test/lib/transaction_utils.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/lib/transaction_utils.h?ref=a0fc0764763329df2c4b11a4e22715ccfc0cf7d3",
        "patch": "@@ -0,0 +1,19 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_TEST_LIB_TRANSACTION_UTILS_H\n+#define BITCOIN_TEST_LIB_TRANSACTION_UTILS_H\n+\n+#include <primitives/transaction.h>\n+\n+// create crediting transaction\n+// [1 coinbase input => 1 output with given scriptPubkey and value]\n+CMutableTransaction BuildCreditingTransaction(const CScript& scriptPubKey, int nValue = 0);\n+\n+// create spending transaction\n+// [1 input with referenced transaction outpoint, scriptSig, scriptWitness =>\n+//  1 output with empty scriptPubKey, full value of referenced transaction]\n+CMutableTransaction BuildSpendingTransaction(const CScript& scriptSig, const CScriptWitness& scriptWitness, const CTransaction& txCredit);\n+\n+#endif // BITCOIN_TEST_LIB_TRANSACTION_UTILS_H"
      },
      {
        "sha": "caa99805c34ff200ce1134e53ab150291a90f449",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 34,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a0fc0764763329df2c4b11a4e22715ccfc0cf7d3/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a0fc0764763329df2c4b11a4e22715ccfc0cf7d3/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=a0fc0764763329df2c4b11a4e22715ccfc0cf7d3",
        "patch": "@@ -12,6 +12,7 @@\n #include <script/signingprovider.h>\n #include <util/system.h>\n #include <util/strencodings.h>\n+#include <test/lib/transaction_utils.h>\n #include <test/setup_common.h>\n #include <rpc/util.h>\n #include <streams.h>\n@@ -121,40 +122,6 @@ static ScriptError_t ParseScriptError(const std::string &name)\n \n BOOST_FIXTURE_TEST_SUITE(script_tests, BasicTestingSetup)\n \n-CMutableTransaction BuildCreditingTransaction(const CScript& scriptPubKey, int nValue = 0)\n-{\n-    CMutableTransaction txCredit;\n-    txCredit.nVersion = 1;\n-    txCredit.nLockTime = 0;\n-    txCredit.vin.resize(1);\n-    txCredit.vout.resize(1);\n-    txCredit.vin[0].prevout.SetNull();\n-    txCredit.vin[0].scriptSig = CScript() << CScriptNum(0) << CScriptNum(0);\n-    txCredit.vin[0].nSequence = CTxIn::SEQUENCE_FINAL;\n-    txCredit.vout[0].scriptPubKey = scriptPubKey;\n-    txCredit.vout[0].nValue = nValue;\n-\n-    return txCredit;\n-}\n-\n-CMutableTransaction BuildSpendingTransaction(const CScript& scriptSig, const CScriptWitness& scriptWitness, const CTransaction& txCredit)\n-{\n-    CMutableTransaction txSpend;\n-    txSpend.nVersion = 1;\n-    txSpend.nLockTime = 0;\n-    txSpend.vin.resize(1);\n-    txSpend.vout.resize(1);\n-    txSpend.vin[0].scriptWitness = scriptWitness;\n-    txSpend.vin[0].prevout.hash = txCredit.GetHash();\n-    txSpend.vin[0].prevout.n = 0;\n-    txSpend.vin[0].scriptSig = scriptSig;\n-    txSpend.vin[0].nSequence = CTxIn::SEQUENCE_FINAL;\n-    txSpend.vout[0].scriptPubKey = CScript();\n-    txSpend.vout[0].nValue = txCredit.vout[0].nValue;\n-\n-    return txSpend;\n-}\n-\n void DoTest(const CScript& scriptPubKey, const CScript& scriptSig, const CScriptWitness& scriptWitness, int flags, const std::string& message, int scriptError, CAmount nValue = 0)\n {\n     bool expect = (scriptError == SCRIPT_ERR_OK);"
      }
    ]
  }
]