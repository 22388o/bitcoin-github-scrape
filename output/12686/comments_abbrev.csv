fanquake,2018-03-14T14:36:04Z,"HOST=x86_64-unknown-linux-gnu\n```\nThe command ""test -n ""$USE_SHELL"" && eval '""$USE_SHELL"" -c ""./autogen.sh""' || ./autogen.sh"" exited with 0.\n$ mkdir build && cd build\n\nThe command ""mkdir build && cd build"" exited with 0.\n$ ../configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\nconfigure: error: unrecognized option: `-ftrapv''\nTry `.",https://github.com/bitcoin/bitcoin/pull/12686#issuecomment-373043366,373043366,
eklitzke,2018-03-14T22:36:09Z,"This is cool, concept ack.\n\nLooks like there are some problems:\n * -fwrapv belongs in CXXFLAGS not in CPPFLAGS\n * Travis is being weird. The builders that passed seem to have used some kind of cached config and didn't actually pick up -ftrapv. The one that's failing is failing because there's a shell quoting issue with how configure is invoked.\n\nGCC 4.8 also supports -fsanitize=address",https://github.com/bitcoin/bitcoin/pull/12686#issuecomment-373198025,373198025,
eklitzke,2018-03-14T23:07:41Z,"Here's an idea for another way to do this: https://github.com/eklitzke/bitcoin/commit/635e378383c41c8ef3ac03fca1755001c947b7f7 . The idea is to add `-ftrapv` when `--enable-debug` is used, and then use that option on all of the Travis jobs. `--enable-debug` also sets `-DDEBUG_LOCKORDER`.\n\nWhat do you think of this approach?",https://github.com/bitcoin/bitcoin/pull/12686#issuecomment-373204749,373204749,
sipa,2018-03-14T23:47:54Z,"@eklitzke There was some work earlier to get the code to run cleanly under sanitizers (see #9743 and #9512), though I don't think we ever made it perfectly runnable without warnings.",https://github.com/bitcoin/bitcoin/pull/12686#issuecomment-373212430,373212430,
eklitzke,2018-03-15T06:36:11Z,"BTW the right way to fix the quoting issue in Travis is to use a bash array. It looks like Travis doesn't support these properly. If you still wanted to use this approach instead of modifying configure.ac as in my example two options:\n * `IFS` hacks\n * Create yet-another-Travis-variable and pass it down to the configure call",https://github.com/bitcoin/bitcoin/pull/12686#issuecomment-373275404,373275404,
practicalswift,2018-03-15T07:20:50Z,"@eklitzke Thanks for reviewing. I've now cherry-picked your commit (which is the better solution) into this PR.\n\nPlease re-review :-)",https://github.com/bitcoin/bitcoin/pull/12686#issuecomment-373284056,373284056,
practicalswift,2018-03-15T07:23:16Z,@eklitzke Enabling `-fsanitize=address` and `-fsanitize=thread` in Travis (after cleaning up remaining violations) would be really really nice!,https://github.com/bitcoin/bitcoin/pull/12686#issuecomment-373284490,373284490,
eklitzke,2018-03-15T08:06:22Z,"It looks like this doesn't work for the MingW builds, I got timeouts in my travis runs that match the ones you just cherry-picked: https://travis-ci.org/eklitzke/bitcoin/builds/353587968 . Let's disable the option for those two builders.\n\nI added some -fsanitize support to the configure script in #12692, which is a good start since it will make using those flags easier (even if the code isn't ",https://github.com/bitcoin/bitcoin/pull/12686#issuecomment-373293182,373293182,
practicalswift,2018-03-15T15:16:08Z,"@eklitzke To keep the changes as small as possible I've now enabled `-ftrapv` (via `--enable-debug`) only for one of the Travis jobs (job: ""Qt4 & system libs""). Makes sense?\n\nPlease re-review :-)",https://github.com/bitcoin/bitcoin/pull/12686#issuecomment-373412127,373412127,
fanquake,2018-03-16T02:09:48Z,"@practicalswift I don't think you've cherry-picked correctly, looks like you just swapped out the changes in your commit with @eklitzke's ?",https://github.com/bitcoin/bitcoin/pull/12686#issuecomment-373581377,373581377,
eklitzke,2018-03-16T05:16:03Z,"This looks right to me, utACK e23dfbb01df044e6d0dc65f6b9333e6547202fa7.",https://github.com/bitcoin/bitcoin/pull/12686#issuecomment-373606008,373606008,
practicalswift,2018-03-18T17:46:21Z,@fanquake The cherry-pick was a previous version. e23dfbb01df044e6d0dc65f6b9333e6547202fa7 is correct. Please review :-),https://github.com/bitcoin/bitcoin/pull/12686#issuecomment-374022069,374022069,
eklitzke,2018-03-22T03:26:45Z,FYI this is going to conflict with #12695 . Should be an easy merge conflict though.,https://github.com/bitcoin/bitcoin/pull/12686#issuecomment-375167715,375167715,
laanwj,2018-04-02T13:12:54Z,@theuni Can you take a look?,https://github.com/bitcoin/bitcoin/pull/12686#issuecomment-377926364,377926364,
practicalswift,2018-04-14T13:09:19Z,Rebased! Please re-review :-),https://github.com/bitcoin/bitcoin/pull/12686#issuecomment-381328099,381328099,
practicalswift,2018-04-23T09:10:28Z,Interesting – judging from the Travis testing it seems that the trap is trigged indicating that we have a signed overflow taking place when running the tests. Let's find out where!,https://github.com/bitcoin/bitcoin/pull/12686#issuecomment-383507579,383507579,
theuni,2018-04-23T17:19:11Z,"Concept ACK. Please put this on top of #13005 though, as it needs the same treatment.\n\nThis needs to be checked with AX_CHECK_COMPILE_FLAG, the same way that -DDEBUG/-DDEBUG_LOCKORDER are checked there.",https://github.com/bitcoin/bitcoin/pull/12686#issuecomment-383653594,383653594,
practicalswift,2018-05-14T14:02:59Z,"Now using `AX_CHECK_COMPILE_FLAG` for checking `-trapv` availability when compiled under `--enable-debug`:\n\n```\n$ ./configure --enable-debug\n…\nchecking whether C++ compiler accepts -ftrapv... yes\n…\n  CXXFLAGS      =  -Og -g3 -ftrapv  -Wstack-protector -fstack-protector-all   -g -O2 -Wall -Wextra -Wformat -Wvla -Wformat-security -Wno-unused-parameter\n…\n```\n\n@theuni @eklitzke, ",https://github.com/bitcoin/bitcoin/pull/12686#issuecomment-388828007,388828007,
theuni,2018-05-15T22:51:13Z,Please add the CXXFLAG_WERROR argument so that we'll see false-positives. utACK otherwise.,https://github.com/bitcoin/bitcoin/pull/12686#issuecomment-389338655,389338655,
practicalswift,2018-05-16T07:28:46Z,@TheBlueMatt Added the `CXXFLAG_WERROR` argument. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/12686#issuecomment-389422514,389422514,
practicalswift,2018-05-29T22:06:54Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/12686#issuecomment-392962128,392962128,
theuni,2018-06-12T22:33:35Z,utACK 8bf481fe2e99e6a0e16a6127d7df826dd4bfa2e9,https://github.com/bitcoin/bitcoin/pull/12686#issuecomment-396755861,396755861,
DrahtBot,2018-06-24T14:21:33Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/12686#issuecomment-399760180,399760180,
practicalswift,2018-06-24T18:36:56Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/12686#issuecomment-399777621,399777621,
MarcoFalke,2018-06-24T18:41:07Z,"ACK 98d842cb52 (that the rebase was done correctly, didn't look at anything else)",https://github.com/bitcoin/bitcoin/pull/12686#issuecomment-399777892,399777892,
sipa,2018-06-27T00:54:01Z,utACK 98d842cb52e69ea1f9961d908385c896e37fb877,https://github.com/bitcoin/bitcoin/pull/12686#issuecomment-400508678,400508678,
theuni,2018-04-23T18:05:41Z,"Removing ```DEBUG=1``` here should cause depends to no longer build as debug.\n\n+1 on using --enable-debug, though.",https://github.com/bitcoin/bitcoin/pull/12686#discussion_r183487240,183487240,.travis.yml
practicalswift,2018-05-05T13:21:38Z,Updated: Re-introduced `DEBUG=1` :-),https://github.com/bitcoin/bitcoin/pull/12686#discussion_r186262207,186262207,.travis.yml
