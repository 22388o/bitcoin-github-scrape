[
  {
    "sha": "d86edd3d3093be4c00d2c6a6fde6dfa77e2f4855",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkODZlZGQzZDMwOTNiZTRjMDBkMmM2YTZmZGU2ZGZhNzdlMmY0ODU1",
    "commit": {
      "author": {
        "name": "Jesse Cohen",
        "email": "jc@jc.lol",
        "date": "2018-04-15T15:22:28Z"
      },
      "committer": {
        "name": "Jesse Cohen",
        "email": "jc@jc.lol",
        "date": "2018-04-16T22:03:21Z"
      },
      "message": "Hold cs_main while calling UpdatedBlockTip() and ui.NotifyBlockTip\n\nEnsures that callbacks are invoked in the order in which the chain is updated\nResolves #12978",
      "tree": {
        "sha": "1995aca8cc1bd01dafc172f8f738475a39f402bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1995aca8cc1bd01dafc172f8f738475a39f402bd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d86edd3d3093be4c00d2c6a6fde6dfa77e2f4855",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d86edd3d3093be4c00d2c6a6fde6dfa77e2f4855",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d86edd3d3093be4c00d2c6a6fde6dfa77e2f4855",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d86edd3d3093be4c00d2c6a6fde6dfa77e2f4855/comments",
    "author": {
      "login": "skeees",
      "id": 195769,
      "node_id": "MDQ6VXNlcjE5NTc2OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skeees",
      "html_url": "https://github.com/skeees",
      "followers_url": "https://api.github.com/users/skeees/followers",
      "following_url": "https://api.github.com/users/skeees/following{/other_user}",
      "gists_url": "https://api.github.com/users/skeees/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skeees/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
      "organizations_url": "https://api.github.com/users/skeees/orgs",
      "repos_url": "https://api.github.com/users/skeees/repos",
      "events_url": "https://api.github.com/users/skeees/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skeees/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "skeees",
      "id": 195769,
      "node_id": "MDQ6VXNlcjE5NTc2OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skeees",
      "html_url": "https://github.com/skeees",
      "followers_url": "https://api.github.com/users/skeees/followers",
      "following_url": "https://api.github.com/users/skeees/following{/other_user}",
      "gists_url": "https://api.github.com/users/skeees/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skeees/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
      "organizations_url": "https://api.github.com/users/skeees/orgs",
      "repos_url": "https://api.github.com/users/skeees/repos",
      "events_url": "https://api.github.com/users/skeees/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skeees/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5f2a39946fd42535038e0143cbd289d3070b9f07",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f2a39946fd42535038e0143cbd289d3070b9f07",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5f2a39946fd42535038e0143cbd289d3070b9f07"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 13,
      "deletions": 10
    },
    "files": [
      {
        "sha": "b7bca38268a431e28028b526ef40be7ed8a3af65",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 10,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d86edd3d3093be4c00d2c6a6fde6dfa77e2f4855/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d86edd3d3093be4c00d2c6a6fde6dfa77e2f4855/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=d86edd3d3093be4c00d2c6a6fde6dfa77e2f4855",
        "patch": "@@ -353,7 +353,7 @@ bool CheckSequenceLocks(const CTransaction &tx, int flags, LockPoints* lp, bool\n \n     CBlockIndex* tip = chainActive.Tip();\n     assert(tip != nullptr);\n-    \n+\n     CBlockIndex index;\n     index.pprev = tip;\n     // CheckSequenceLocks() uses chainActive.Height()+1 to evaluate\n@@ -2677,18 +2677,17 @@ bool CChainState::ActivateBestChain(CValidationState &state, const CChainParams&\n                 assert(trace.pblock && trace.pindex);\n                 GetMainSignals().BlockConnected(trace.pblock, trace.pindex, trace.conflictedTxs);\n             }\n-        }\n-        // When we reach this point, we switched to a new tip (stored in pindexNewTip).\n \n-        // Notifications/callbacks that can run without cs_main\n+            // Notify external listeners about the new tip.\n+            // Enqueue while holding cs_main to ensure that UpdatedBlockTip is called in the order in which blocks are connected\n+            GetMainSignals().UpdatedBlockTip(pindexNewTip, pindexFork, fInitialDownload);\n \n-        // Notify external listeners about the new tip.\n-        GetMainSignals().UpdatedBlockTip(pindexNewTip, pindexFork, fInitialDownload);\n-\n-        // Always notify the UI if a new block tip was connected\n-        if (pindexFork != pindexNewTip) {\n-            uiInterface.NotifyBlockTip(fInitialDownload, pindexNewTip);\n+            // Always notify the UI if a new block tip was connected\n+            if (pindexFork != pindexNewTip) {\n+                uiInterface.NotifyBlockTip(fInitialDownload, pindexNewTip);\n+            }\n         }\n+        // When we reach this point, we switched to a new tip (stored in pindexNewTip).\n \n         if (nStopAtHeight && pindexNewTip && pindexNewTip->nHeight >= nStopAtHeight) StartShutdown();\n "
      },
      {
        "sha": "746263f11393241e5cfdcaa20a104b01cee4c131",
        "filename": "src/validationinterface.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d86edd3d3093be4c00d2c6a6fde6dfa77e2f4855/src/validationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d86edd3d3093be4c00d2c6a6fde6dfa77e2f4855/src/validationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.cpp?ref=d86edd3d3093be4c00d2c6a6fde6dfa77e2f4855",
        "patch": "@@ -139,6 +139,10 @@ void CMainSignals::MempoolEntryRemoved(CTransactionRef ptx, MemPoolRemovalReason\n }\n \n void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n+    // Dependencies exist that require UpdatedBlockTip events to be delivered in the order in which\n+    // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n+    // in the same critical section where the chain is updated\n+\n     m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n         m_internals->UpdatedBlockTip(pindexNew, pindexFork, fInitialDownload);\n     });"
      }
    ]
  }
]