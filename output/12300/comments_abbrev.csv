sipa,2018-01-30T02:50:36Z,"If we're doing this, I would prefer it if by default the client would fail to start up (with a message ""mainnet disabled"" or so), unless you explicitly tell it to use testnet or regtest.",https://github.com/bitcoin/bitcoin/pull/12300#issuecomment-361460015,361460015,
jeffrade,2018-01-30T03:05:36Z,"@sipa Instead of the final [return statement](https://github.com/jeffrade/bitcoin/blob/4a236e8b8d627831680698e548e03e9dab7011ff/src/chainparamsbase.cpp#L108) in `ChainNameFromCommandLine()`, something like this below:\n\n```\nthrow std::runtime_error(""You must specify a chain. -regtest, -testnet, or -mainnet."");\n```",https://github.com/bitcoin/bitcoin/pull/12300#issuecomment-361462391,361462391,
sipa,2018-01-30T03:14:13Z,"@jeffrade Alternatively, you leave in the mainnet definition and logic, but in init.cpp check whether the chosen chain doesn't happen to be mainnet when it's not supposed to, and exit with a clean error. Exiting by throwing an exception is really only for exceptional situations.",https://github.com/bitcoin/bitcoin/pull/12300#issuecomment-361463658,361463658,
laanwj,2018-01-30T08:54:58Z,I'd also prefer an explicit error (and exit) when running mainnet without `--enable-mainnet` - silently running on testnet is going to confuse the hell out of people and probably waste a lot of time.,https://github.com/bitcoin/bitcoin/pull/12300#issuecomment-361520089,361520089,
MarcoFalke,2018-01-30T12:59:37Z,Agree that InitError makes the most sense instead of silently assuming a chain/network.,https://github.com/bitcoin/bitcoin/pull/12300#issuecomment-361585984,361585984,
jeffrade,2018-01-31T02:45:53Z,Pushed changes based on reviews from @sipa and @laanwj ,https://github.com/bitcoin/bitcoin/pull/12300#issuecomment-361806377,361806377,
jonasschnelli,2018-01-31T03:32:18Z,"> This prevents developers or downstream system integrators from accidentally corrupting main net\n\nIs this true? Do we have evidence that downstream integrators do corrupt main net rather then giving some useful test cases how to make the p2p layer more robust?\n\nForgetting a configuration option (in this case --enable-mainnet) would lead to a not-in-production useful software. This is unco",https://github.com/bitcoin/bitcoin/pull/12300#issuecomment-361813064,361813064,
fanquake,2018-01-31T03:38:51Z,cc @maaku ,https://github.com/bitcoin/bitcoin/pull/12300#issuecomment-361814021,361814021,
laanwj,2018-01-31T10:06:27Z,"> Is this true? Do we have evidence that downstream integrators do corrupt main net rather then giving some useful test cases how to make the p2p layer more robust?\n\nFrom what I understand from discussions in this direction is that it's not about *corrupting mainnet*. It's not the network at risk but the risk of running unreleased software in production. E.g. people (building from source) acci",https://github.com/bitcoin/bitcoin/pull/12300#issuecomment-361884169,361884169,
jeffrade,2018-01-31T20:50:08Z,"> Forgetting a configuration option (in this case --enable-mainnet) would lead to a not-in-production useful software. This is uncommon behaviour.\n\nJust a thought, but one solution is we force users to explicitly choose `-mainnet` when starting `bitcoind` if they did not use the `--enable_mainnet` config.  We can add `-mainnet` as an option [here](https://github.com/bitcoin/bitcoin/blob/595a7b",https://github.com/bitcoin/bitcoin/pull/12300#issuecomment-362066049,362066049,
sipa,2018-01-31T21:20:54Z,"@jeffrade I like that idea. When compiling with --enable-mainnet, the default chain is mainnet. Otherwise, there is no default and you must choose one.",https://github.com/bitcoin/bitcoin/pull/12300#issuecomment-362074499,362074499,
jtimon,2018-01-31T21:27:52Z,"> We can add -mainnet as an option here\n\nI've done something similar in https://github.com/bitcoin/bitcoin/pull/8994/commits/46391b935fd68d4800170f11bd6a3426bffc96ed feel free to cherry pick or copy that commit if more people like the idea.\n\nWhether with -mainnet or with -chain=main, I agree it should be possible to run mainnet even when the --enable_mainnet config is not used.\n\nPerhap",https://github.com/bitcoin/bitcoin/pull/12300#issuecomment-362076330,362076330,
jeffrade,2018-01-31T21:43:52Z,"@jtimon Thanks, will look through your commit.  Was going to simply add the new `fMainNet` boolean and the corresponding `if` block to check (see snippet below).  If none are set, will fall through and `init.cpp` will pick it up and throw the `InitError()`.\n\n```\nstd::string ChainNameFromCommandLine()\n{\n    bool fRegTest = gArgs.GetBoolArg(""-regtest"", false);\n    bool fTestNet = gArgs.G",https://github.com/bitcoin/bitcoin/pull/12300#issuecomment-362080803,362080803,
jtimon,2018-02-01T00:30:04Z,"I was thinking more on something like this:\n\n```\nstd::string ChainNameFromCommandLine()\n{\n    bool fRegTest = gArgs.GetBoolArg(""-regtest"", false);\n    bool fTestNet = gArgs.GetBoolArg(""-testnet"", false);\n    bool fMainNet = gArgs.GetBoolArg(""-mainnet"", false);\n\n    if (fTestNet + fRegTest + fMainNet > 1)\n        throw std::runtime_error(""Invalid combination of -mainnet, -regtes",https://github.com/bitcoin/bitcoin/pull/12300#issuecomment-362117676,362117676,
jeffrade,2018-02-01T00:36:44Z,@jtimon throwing the `std::runtime_error` and checking for `ENABLE_MAINNET` in `ChainNameFromCommandLine()` is what I originally had implemented.  But received feedback and there was consensus to move logic into `init.cpp`.  See comments above from everyone else above. ,https://github.com/bitcoin/bitcoin/pull/12300#issuecomment-362118960,362118960,
jtimon,2018-02-01T00:49:44Z,"Yes, but unless I'm missing something everybody else is wrong and doing it there won't result in a silent exit but on the error being printed and then existing due to the try {} catch structures surrounding ```ChainNameFromCommandLine()``` calls in src/qt/bitcoin.cpp, src/bitcoind.cpp, src/bitcoin-tx.cpp and src/bitcoin-cli.cpp. In the case of running the qt GUI it is my believe that the error wil",https://github.com/bitcoin/bitcoin/pull/12300#issuecomment-362121229,362121229,
jeffrade,2018-02-01T00:55:14Z,"@jtimon I have been testing with bitcoind and getting expected results, but need to test more.  I will push a commit based on your feedback/branch and from others shortly.  Thanks for the help!",https://github.com/bitcoin/bitcoin/pull/12300#issuecomment-362122215,362122215,
jeffrade,2018-02-01T02:07:19Z,"> I like that idea. When compiling with --enable-mainnet, the default chain is mainnet. Otherwise, there is no default and you must choose one.\n\n@sipa I pushed a second commit (will squash if requested) to show new usage when `--enable-mainnet` is **not** used.\n\n @jtimon Below is my local testing with `bitcoind` showing the `InitError` and process exiting correctly:\n```\n$ ./confgiure\",https://github.com/bitcoin/bitcoin/pull/12300#issuecomment-362134942,362134942,
jeffrade,2018-02-06T02:03:58Z,"@jtimon I successfully tested `bitcoin-qt` and receive the same error as when trying to run `bitcoind` without the `--enable-mainnet` flag (see screenshot).\n\n![image](https://user-images.githubusercontent.com/1307806/35838167-9bd8e6ce-0aaf-11e8-8204-361bceaf73de.png)\n",https://github.com/bitcoin/bitcoin/pull/12300#issuecomment-363286011,363286011,
MarcoFalke,2018-02-06T23:38:49Z,"Please squash your commits according to https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#squashing-commits\n\nAlso, try to pick a commit title that fits in 70-80 chars. Put the rest in the commit body.",https://github.com/bitcoin/bitcoin/pull/12300#issuecomment-363603897,363603897,
jeffrade,2018-02-07T02:22:08Z,@MarcoFalke Fixed all nits and squashed commit (as well as fix up commit message). Thanks for feedback!,https://github.com/bitcoin/bitcoin/pull/12300#issuecomment-363634469,363634469,
MarcoFalke,2018-02-07T03:27:59Z,utACK 3822afeecd62c5f28047140629f357db49ed6829,https://github.com/bitcoin/bitcoin/pull/12300#issuecomment-363644982,363644982,
jnewbery,2018-03-22T14:24:54Z,"Sorry to concept NACK so late in the PR, but I really don't like the extra config complexity that this adds. The original design was also NACKed by a few contributors in the IRC channel in January:\n\n```\n13:17 < gmaxwell> ugh. I really dislike 12300.\n13:18 < gmaxwell> If we want to reduce screw up risk we should make the github default branch a release branch; not boobytrap the prerelease s",https://github.com/bitcoin/bitcoin/pull/12300#issuecomment-375324594,375324594,
MarcoFalke,2018-03-22T14:34:38Z,"@jnewbery I think this would protect users from doing `git clone && make`, which defaults to the master branch.\n\nChanging the default branch is not possible, since pull requests are opened against the default branch by default.",https://github.com/bitcoin/bitcoin/pull/12300#issuecomment-375328131,375328131,
laanwj,2018-04-26T12:38:29Z,"Closing, as there is no agreement to do this.",https://github.com/bitcoin/bitcoin/pull/12300#issuecomment-384625856,384625856,
instagibbs,2018-01-30T02:33:53Z,Is silently running testnet really the best solution? This is going to confuse the heck out of me :),https://github.com/bitcoin/bitcoin/pull/12300#discussion_r164626595,164626595,src/chainparamsbase.cpp
jeffrade,2018-01-30T02:49:09Z,"I agree, will be an adjustment for anyone accustomed to running on `mainnet` when building from source.",https://github.com/bitcoin/bitcoin/pull/12300#discussion_r164628429,164628429,src/chainparamsbase.cpp
laanwj,2018-01-30T09:01:04Z,"I don't think you need to change chainparamsbase for this.\n\nI'd say a simpler solution would be: add logic to one of the Init() functions to detect running of mainnet when not `#ifdef ENABLE_MAINNET` and then `InitError()` out.",https://github.com/bitcoin/bitcoin/pull/12300#discussion_r164675734,164675734,src/chainparamsbase.cpp
jeffrade,2018-01-30T14:26:47Z,Makes sense.  Will revert `src/chainparamsbase.cpp` and make requested changes in `src/init.cpp` today or tomorrow.  Thanks!,https://github.com/bitcoin/bitcoin/pull/12300#discussion_r164756531,164756531,src/chainparamsbase.cpp
MarcoFalke,2018-02-06T23:36:00Z,No need to touch this file. Will be updated before release.,https://github.com/bitcoin/bitcoin/pull/12300#discussion_r166477714,166477714,doc/man/bitcoind.1
MarcoFalke,2018-02-06T23:36:28Z,Nit missing braces {} according to developer notes,https://github.com/bitcoin/bitcoin/pull/12300#discussion_r166477797,166477797,src/chainparamsbase.cpp
jeffrade,2018-02-07T02:18:42Z,Fixed for all `if` blocks in this method.,https://github.com/bitcoin/bitcoin/pull/12300#discussion_r166502646,166502646,src/chainparamsbase.cpp
jeffrade,2018-02-07T02:19:00Z,Fixed,https://github.com/bitcoin/bitcoin/pull/12300#discussion_r166502679,166502679,doc/man/bitcoind.1
