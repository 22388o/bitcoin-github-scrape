luke-jr,2020-04-16 20:14:44,utACK,https://github.com/bitcoin/bitcoin/pull/18676#issuecomment-614871419,614871419,
laanwj,2020-04-16 20:15:47,ACK 4a8e07913855da676a0eb13a4dc13d4b9cb77cfb,https://github.com/bitcoin/bitcoin/pull/18676#issuecomment-614871924,614871924,
DrahtBot,2020-04-16 22:42:13,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/18676#issuecomment-614933673,614933673,
laanwj,2020-04-17 10:20:39,"If building out of the box on xenial is such a big deal maybe check for `2.0.21` instead, but make sure that Travis also compiles the fuzzing binaries on xenial.",https://github.com/bitcoin/bitcoin/pull/18676#issuecomment-615167867,615167867,
hebasto,2020-04-17 10:23:23,@laanwj I failed to find the reason why `2.0.22` is the minimal version. Could you shed a light?,https://github.com/bitcoin/bitcoin/pull/18676#issuecomment-615169031,615169031,
laanwj,2020-04-17 10:26:01,"It has been the minimal version ever since libevent was introduced into bitcoin core, it was the version I was using at the time (yes, that long ago).",https://github.com/bitcoin/bitcoin/pull/18676#issuecomment-615170194,615170194,
laanwj,2020-04-17 10:29:41,"If you want to change the minimum version to 2.0.21 that's really fine with me. I do vaguely remember newer versions fixed some issues (such as file descriptor leaks?), but, it will more or less work and I don't know which version fixed what anyhow.",https://github.com/bitcoin/bitcoin/pull/18676#issuecomment-615171749,615171749,
theStack,2020-04-17 12:31:52,"To give some background: I brought up the topic about checking minimum libevent version in IRC because a fuzz test (http_request) using internal libevent functions caused a linking error on my system. I then realized that I was running libevent 2.0.21, when the minimum required version according to `doc/dependencies.md` is 2.0.22, so I thought a check would make sense.\n\nUnfortunately with 2.0.",https://github.com/bitcoin/bitcoin/pull/18676#issuecomment-615218417,615218417,
hebasto,2020-04-17 12:32:36,"w.r.t. #18682 I dropped my own workaround in `configure.ac`. Hence, this PR status updated from ""Draft"" to ""Ready for review"".",https://github.com/bitcoin/bitcoin/pull/18676#issuecomment-615218736,615218736,
theStack,2020-04-17 12:38:12,"> \n> \n> w.r.t. #18682 I dropped my own workaround in `configure.ac`. Hence, this PR status updated from ""Draft"" to ""Ready for review"".\n\nJust out of curiosity, how would a workaround in `configure.ac` have looked like? There is not much you can do besides of enforcing a minimum version (that would need to be 2.1.1), no?",https://github.com/bitcoin/bitcoin/pull/18676#issuecomment-615221045,615221045,
hebasto,2020-04-17 12:54:58,"@theStack\n> > w.r.t. #18682 I dropped my own workaround in `configure.ac`. Hence, this PR status updated from ""Draft"" to ""Ready for review"".\n> \n> Just out of curiosity, how would a workaround in `configure.ac` have looked like? There is not much you can do besides of enforcing a minimum version (that would need to be 2.1.1), no?\n\nsmth. like #18358 with a test-based approach.",https://github.com/bitcoin/bitcoin/pull/18676#issuecomment-615228248,615228248,
luke-jr,2020-04-17 17:15:55,"Looks like Alpine, Arch, FreeBSD, and Ubuntu are at 2.1.11, while CentOS, Debian, Fedora, Gentoo, and openSUSE ship 2.1.8.\n\nUnfortunately, Devuan only ships 2.0.21 still...\n\nI don't see anything in 2.0.21..2.0.22 that should break the build, so I suggest we set the minimum enforced to 2.0.21 for now, require 2.1.8 for the fuzzer to build, and consider bumping the project-wide minimum to 2.",https://github.com/bitcoin/bitcoin/pull/18676#issuecomment-615364992,615364992,
MarcoFalke,2020-04-17 17:20:53,"> so I suggest we set the minimum enforced to 2.0.21 for now\n\n@luke-jr This is what the pull is doing here",https://github.com/bitcoin/bitcoin/pull/18676#issuecomment-615367271,615367271,
MarcoFalke,2020-04-17 17:21:26,Concept ACK,https://github.com/bitcoin/bitcoin/pull/18676#issuecomment-615367518,615367518,
luke-jr,2020-04-17 19:12:01,re-utACK,https://github.com/bitcoin/bitcoin/pull/18676#issuecomment-615417251,615417251,
theStack,2020-04-19 13:02:33,"utACK https://github.com/bitcoin/bitcoin/pull/18676/commits/b68e71796792a9da9daa0a4e759d284d15595230\nIf anyone knows a way how to test this, I'd be interested. Just tried out with Ubuntu Precise Pangolin (via docker image `ubuntu:12.04`) that uses [libevent 2.0.16](https://launchpad.net/ubuntu/precise/+package/libevent-dev), but then `autogen.sh` is failing as the Autoconf version is too old (<2",https://github.com/bitcoin/bitcoin/pull/18676#issuecomment-616129320,616129320,
hebasto,2020-04-19 13:12:14,"@theStack \n> If anyone knows a way how to test this, I'd be interested.\n\nFor example, on bionic with `libevent` 2.1.8 on testing purpose you could apply the following patch:\n```diff\n--- a/configure.ac\n+++ b/configure.ac\n@@ -1265,9 +1265,9 @@ if test x$use_pkgconfig = xyes; then\n         BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no]",https://github.com/bitcoin/bitcoin/pull/18676#issuecomment-616131283,616131283,
laanwj,2020-04-20 16:42:31,ACK b68e71796792a9da9daa0a4e759d284d15595230,https://github.com/bitcoin/bitcoin/pull/18676#issuecomment-616673806,616673806,
MarcoFalke,2020-04-16 22:55:49,Please update the travis yaml as well,https://github.com/bitcoin/bitcoin/pull/18676#discussion_r409895375,409895375,ci/test/00_setup_env_native_tsan.sh
MarcoFalke,2020-04-16 22:56:17,Also the workaround in line 18 can be removed,https://github.com/bitcoin/bitcoin/pull/18676#discussion_r409895543,409895543,ci/test/00_setup_env_native_tsan.sh
MarcoFalke,2020-04-16 22:57:00,Also release notes are needed to say that xenial is no longer supported with system libs,https://github.com/bitcoin/bitcoin/pull/18676#discussion_r409895799,409895799,ci/test/00_setup_env_native_tsan.sh
hebasto,2020-04-16 23:08:10,"> Also release notes are needed to say that xenial is no longer supported with system libs\n\nIn which way: wiki or pr?",https://github.com/bitcoin/bitcoin/pull/18676#discussion_r409899632,409899632,ci/test/00_setup_env_native_tsan.sh
MarcoFalke,2020-04-16 23:10:11,Building and running Bitcoin Core on xenial works fine today on master and 0.20.0. Your pull is changing that.,https://github.com/bitcoin/bitcoin/pull/18676#discussion_r409900379,409900379,ci/test/00_setup_env_native_tsan.sh
hebasto,2020-04-16 23:13:45,I mean: in which way add this info to release notes?  :),https://github.com/bitcoin/bitcoin/pull/18676#discussion_r409901562,409901562,ci/test/00_setup_env_native_tsan.sh
MarcoFalke,2020-04-16 23:16:34,"I'd speak against backporting this to 0.20.0, so it should go into the release notes for 0.21.0",https://github.com/bitcoin/bitcoin/pull/18676#discussion_r409902445,409902445,ci/test/00_setup_env_native_tsan.sh
