[
  {
    "sha": "c5b277033a72650c221084ec0f1326623a810fd0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNWIyNzcwMzNhNzI2NTBjMjIxMDg0ZWMwZjEzMjY2MjNhODEwZmQw",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-04-10T15:50:10Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-04-25T17:08:53Z"
      },
      "message": "Add purpose arg to Wallet::getAddress\n\nAlso make all arguments to getAddress required and document args at call sites.",
      "tree": {
        "sha": "4ea793666e91c081e738dcab2cdfe2078c2e60c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4ea793666e91c081e738dcab2cdfe2078c2e60c3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c5b277033a72650c221084ec0f1326623a810fd0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5b277033a72650c221084ec0f1326623a810fd0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c5b277033a72650c221084ec0f1326623a810fd0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5b277033a72650c221084ec0f1326623a810fd0/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a785bc3667d3c11a014da77436a23b1b865458a4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a785bc3667d3c11a014da77436a23b1b865458a4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a785bc3667d3c11a014da77436a23b1b865458a4"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 22,
      "deletions": 10
    },
    "files": [
      {
        "sha": "63b9d80a92ce5501f6b46bf368f4e7158ff86a74",
        "filename": "src/interfaces/wallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5b277033a72650c221084ec0f1326623a810fd0/src/interfaces/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5b277033a72650c221084ec0f1326623a810fd0/src/interfaces/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.cpp?ref=c5b277033a72650c221084ec0f1326623a810fd0",
        "patch": "@@ -152,7 +152,10 @@ class WalletImpl : public Wallet\n     {\n         return m_wallet.DelAddressBook(dest);\n     }\n-    bool getAddress(const CTxDestination& dest, std::string* name, isminetype* is_mine) override\n+    bool getAddress(const CTxDestination& dest,\n+        std::string* name,\n+        isminetype* is_mine,\n+        std::string* purpose) override\n     {\n         LOCK(m_wallet.cs_wallet);\n         auto it = m_wallet.mapAddressBook.find(dest);\n@@ -165,6 +168,9 @@ class WalletImpl : public Wallet\n         if (is_mine) {\n             *is_mine = IsMine(m_wallet, dest);\n         }\n+        if (purpose) {\n+            *purpose = it->second.purpose;\n+        }\n         return true;\n     }\n     std::vector<WalletAddress> getAddresses() override"
      },
      {
        "sha": "ff779cd0ad57796c96723d073085e09dac48b065",
        "filename": "src/interfaces/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5b277033a72650c221084ec0f1326623a810fd0/src/interfaces/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5b277033a72650c221084ec0f1326623a810fd0/src/interfaces/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.h?ref=c5b277033a72650c221084ec0f1326623a810fd0",
        "patch": "@@ -99,8 +99,9 @@ class Wallet\n \n     //! Look up address in wallet, return whether exists.\n     virtual bool getAddress(const CTxDestination& dest,\n-        std::string* name = nullptr,\n-        isminetype* is_mine = nullptr) = 0;\n+        std::string* name,\n+        isminetype* is_mine,\n+        std::string* purpose) = 0;\n \n     //! Get wallet address list.\n     virtual std::vector<WalletAddress> getAddresses() = 0;"
      },
      {
        "sha": "d85a13cd5bc85dfadbebd330a5bb8ad2f01cec94",
        "filename": "src/qt/addresstablemodel.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5b277033a72650c221084ec0f1326623a810fd0/src/qt/addresstablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5b277033a72650c221084ec0f1326623a810fd0/src/qt/addresstablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.cpp?ref=c5b277033a72650c221084ec0f1326623a810fd0",
        "patch": "@@ -266,7 +266,8 @@ bool AddressTableModel::setData(const QModelIndex &index, const QVariant &value,\n             }\n             // Check for duplicate addresses to prevent accidental deletion of addresses, if you try\n             // to paste an existing address over another address (with a different label)\n-            if (walletModel->wallet().getAddress(newAddress))\n+            if (walletModel->wallet().getAddress(\n+                    newAddress, /* name= */ nullptr, /* is_mine= */ nullptr, /* purpose= */ nullptr))\n             {\n                 editStatus = DUPLICATE_ADDRESS;\n                 return false;\n@@ -351,7 +352,8 @@ QString AddressTableModel::addRow(const QString &type, const QString &label, con\n         }\n         // Check for duplicate addresses\n         {\n-            if(walletModel->wallet().getAddress(DecodeDestination(strAddress)))\n+            if (walletModel->wallet().getAddress(\n+                    DecodeDestination(strAddress), /* name= */ nullptr, /* is_mine= */ nullptr, /* purpose= */ nullptr))\n             {\n                 editStatus = DUPLICATE_ADDRESS;\n                 return QString();"
      },
      {
        "sha": "2cb446c45965430a428848f6dc9aa80a2fd3a19c",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5b277033a72650c221084ec0f1326623a810fd0/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5b277033a72650c221084ec0f1326623a810fd0/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=c5b277033a72650c221084ec0f1326623a810fd0",
        "patch": "@@ -102,7 +102,7 @@ QString TransactionDesc::toHTML(interfaces::Node& node, interfaces::Wallet& wall\n             if (IsValidDestination(address)) {\n                 std::string name;\n                 isminetype ismine;\n-                if (wallet.getAddress(address, &name, &ismine))\n+                if (wallet.getAddress(address, &name, &ismine, /* purpose= */ nullptr))\n                 {\n                     strHTML += \"<b>\" + tr(\"From\") + \":</b> \" + tr(\"unknown\") + \"<br>\";\n                     strHTML += \"<b>\" + tr(\"To\") + \":</b> \";\n@@ -128,7 +128,8 @@ QString TransactionDesc::toHTML(interfaces::Node& node, interfaces::Wallet& wall\n         strHTML += \"<b>\" + tr(\"To\") + \":</b> \";\n         CTxDestination dest = DecodeDestination(strAddress);\n         std::string name;\n-        if (wallet.getAddress(dest, &name) && !name.empty())\n+        if (wallet.getAddress(\n+                dest, &name, /* is_mine= */ nullptr, /* purpose= */ nullptr) && !name.empty())\n             strHTML += GUIUtil::HtmlEscape(name) + \" \";\n         strHTML += GUIUtil::HtmlEscape(strAddress) + \"<br>\";\n     }\n@@ -196,7 +197,8 @@ QString TransactionDesc::toHTML(interfaces::Node& node, interfaces::Wallet& wall\n                     {\n                         strHTML += \"<b>\" + tr(\"To\") + \":</b> \";\n                         std::string name;\n-                        if (wallet.getAddress(address, &name) && !name.empty())\n+                        if (wallet.getAddress(\n+                                address, &name, /* is_mine= */ nullptr, /* purpose= */ nullptr) && !name.empty())\n                             strHTML += GUIUtil::HtmlEscape(name) + \" \";\n                         strHTML += GUIUtil::HtmlEscape(EncodeDestination(address));\n                         if(toSelf == ISMINE_SPENDABLE)\n@@ -319,7 +321,7 @@ QString TransactionDesc::toHTML(interfaces::Node& node, interfaces::Wallet& wall\n                     if (ExtractDestination(vout.scriptPubKey, address))\n                     {\n                         std::string name;\n-                        if (wallet.getAddress(address, &name) && !name.empty())\n+                        if (wallet.getAddress(address, &name, /* is_mine= */ nullptr, /* purpose= */ nullptr) && !name.empty())\n                             strHTML += GUIUtil::HtmlEscape(name) + \" \";\n                         strHTML += QString::fromStdString(EncodeDestination(address));\n                     }"
      },
      {
        "sha": "3418b1f1a9ce30ab087f4c28038075c70be91d98",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5b277033a72650c221084ec0f1326623a810fd0/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5b277033a72650c221084ec0f1326623a810fd0/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=c5b277033a72650c221084ec0f1326623a810fd0",
        "patch": "@@ -274,7 +274,8 @@ WalletModel::SendCoinsReturn WalletModel::sendCoins(WalletModelTransaction &tran\n             {\n                 // Check if we have a new address or an updated label\n                 std::string name;\n-                if (!m_wallet->getAddress(dest, &name))\n+                if (!m_wallet->getAddress(\n+                     dest, &name, /* is_mine= */ nullptr, /* purpose= */ nullptr))\n                 {\n                     m_wallet->setAddressBook(dest, strLabel, \"send\");\n                 }"
      }
    ]
  },
  {
    "sha": "8cdcaee4c7b256c5c3b70f1cfb04a5fb547311cd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4Y2RjYWVlNGM3YjI1NmM1YzNiNzBmMWNmYjA0YTVmYjU0NzMxMWNk",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-04-10T20:27:40Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-04-25T17:08:53Z"
      },
      "message": "[qt] Display more helpful message when adding a send address has failed\n\nAddresses #12796.\n\nWhen we're unable to add a sending address to the address book because it\nalready exists as a receiving address, display a message indicating as much.\nThis should help avoid confusion about an address supposedly already in the\nbook but which isn't currently visible in the interface.",
      "tree": {
        "sha": "493a6b325a9d46beafa0444ad570a321022a34a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/493a6b325a9d46beafa0444ad570a321022a34a5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8cdcaee4c7b256c5c3b70f1cfb04a5fb547311cd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8cdcaee4c7b256c5c3b70f1cfb04a5fb547311cd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8cdcaee4c7b256c5c3b70f1cfb04a5fb547311cd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8cdcaee4c7b256c5c3b70f1cfb04a5fb547311cd/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c5b277033a72650c221084ec0f1326623a810fd0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5b277033a72650c221084ec0f1326623a810fd0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c5b277033a72650c221084ec0f1326623a810fd0"
      }
    ],
    "stats": {
      "total": 61,
      "additions": 49,
      "deletions": 12
    },
    "files": [
      {
        "sha": "f38e864b48e0078670f7cf1d71664cf235588abe",
        "filename": "src/qt/addresstablemodel.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 9,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8cdcaee4c7b256c5c3b70f1cfb04a5fb547311cd/src/qt/addresstablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8cdcaee4c7b256c5c3b70f1cfb04a5fb547311cd/src/qt/addresstablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.cpp?ref=8cdcaee4c7b256c5c3b70f1cfb04a5fb547311cd",
        "patch": "@@ -407,21 +407,31 @@ bool AddressTableModel::removeRows(int row, int count, const QModelIndex &parent\n     return true;\n }\n \n-/* Look up label for address in address book, if not found return empty string.\n- */\n QString AddressTableModel::labelForAddress(const QString &address) const\n {\n-    {\n-        CTxDestination destination = DecodeDestination(address.toStdString());\n-        std::string name;\n-        if (walletModel->wallet().getAddress(destination, &name))\n-        {\n-            return QString::fromStdString(name);\n-        }\n+    std::string name;\n+    if (getAddressData(address, &name, /* purpose= */ nullptr)) {\n+        return QString::fromStdString(name);\n+    }\n+    return QString();\n+}\n+\n+QString AddressTableModel::purposeForAddress(const QString &address) const\n+{\n+    std::string purpose;\n+    if (getAddressData(address, /* name= */ nullptr, &purpose)) {\n+        return QString::fromStdString(purpose);\n     }\n     return QString();\n }\n \n+bool AddressTableModel::getAddressData(const QString &address,\n+        std::string* name,\n+        std::string* purpose) const {\n+    CTxDestination destination = DecodeDestination(address.toStdString());\n+    return walletModel->wallet().getAddress(destination, name, /* is_mine= */ nullptr, purpose);\n+}\n+\n int AddressTableModel::lookupAddress(const QString &address) const\n {\n     QModelIndexList lst = match(index(0, Address, QModelIndex()),"
      },
      {
        "sha": "979f861fea6fc91d7e7d62aea503ec134ab4528c",
        "filename": "src/qt/addresstablemodel.h",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8cdcaee4c7b256c5c3b70f1cfb04a5fb547311cd/src/qt/addresstablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8cdcaee4c7b256c5c3b70f1cfb04a5fb547311cd/src/qt/addresstablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.h?ref=8cdcaee4c7b256c5c3b70f1cfb04a5fb547311cd",
        "patch": "@@ -67,10 +67,12 @@ class AddressTableModel : public QAbstractTableModel\n      */\n     QString addRow(const QString &type, const QString &label, const QString &address, const OutputType address_type);\n \n-    /* Look up label for address in address book, if not found return empty string.\n-     */\n+    /** Look up label for address in address book, if not found return empty string. */\n     QString labelForAddress(const QString &address) const;\n \n+    /** Look up purpose for address in address book, if not found return empty string. */\n+    QString purposeForAddress(const QString &address) const;\n+\n     /* Look up row index of an address in the model.\n        Return -1 if not found.\n      */\n@@ -86,6 +88,9 @@ class AddressTableModel : public QAbstractTableModel\n     QStringList columns;\n     EditStatus editStatus;\n \n+    /** Look up address book data given an address string. */\n+    bool getAddressData(const QString &address, std::string* name, std::string* purpose) const;\n+\n     /** Notify listeners that data changed. */\n     void emitDataChanged(int index);\n "
      },
      {
        "sha": "f26a31158e2ac5bdf3bfdefd95d67b776e3ef0c8",
        "filename": "src/qt/editaddressdialog.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 1,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8cdcaee4c7b256c5c3b70f1cfb04a5fb547311cd/src/qt/editaddressdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8cdcaee4c7b256c5c3b70f1cfb04a5fb547311cd/src/qt/editaddressdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/editaddressdialog.cpp?ref=8cdcaee4c7b256c5c3b70f1cfb04a5fb547311cd",
        "patch": "@@ -109,7 +109,7 @@ void EditAddressDialog::accept()\n             break;\n         case AddressTableModel::DUPLICATE_ADDRESS:\n             QMessageBox::warning(this, windowTitle(),\n-                tr(\"The entered address \\\"%1\\\" is already in the address book.\").arg(ui->addressEdit->text()),\n+                getDuplicateAddressWarning(),\n                 QMessageBox::Ok, QMessageBox::Ok);\n             break;\n         case AddressTableModel::WALLET_UNLOCK_FAILURE:\n@@ -129,6 +129,25 @@ void EditAddressDialog::accept()\n     QDialog::accept();\n }\n \n+QString EditAddressDialog::getDuplicateAddressWarning() const\n+{\n+    QString dup_address = ui->addressEdit->text();\n+    QString existing_label = model->labelForAddress(dup_address);\n+    QString existing_purpose = model->purposeForAddress(dup_address);\n+\n+    if (existing_purpose == \"receive\" &&\n+            (mode == NewSendingAddress || mode == EditSendingAddress)) {\n+        return tr(\n+            \"Address \\\"%1\\\" already exists as a receiving address with label \"\n+            \"\\\"%2\\\" and so cannot be added as a sending address.\"\n+            ).arg(dup_address).arg(existing_label);\n+    }\n+    return tr(\n+        \"The entered address \\\"%1\\\" is already in the address book with \"\n+        \"label \\\"%2\\\".\"\n+        ).arg(dup_address).arg(existing_label);\n+}\n+\n QString EditAddressDialog::getAddress() const\n {\n     return address;"
      },
      {
        "sha": "fb3d90077e84fb92c0d301192fbb542f4292a602",
        "filename": "src/qt/editaddressdialog.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8cdcaee4c7b256c5c3b70f1cfb04a5fb547311cd/src/qt/editaddressdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8cdcaee4c7b256c5c3b70f1cfb04a5fb547311cd/src/qt/editaddressdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/editaddressdialog.h?ref=8cdcaee4c7b256c5c3b70f1cfb04a5fb547311cd",
        "patch": "@@ -45,6 +45,9 @@ public Q_SLOTS:\n private:\n     bool saveCurrentRow();\n \n+    /** Return a descriptive string when adding an already-existing address fails. */\n+    QString getDuplicateAddressWarning() const;\n+\n     Ui::EditAddressDialog *ui;\n     QDataWidgetMapper *mapper;\n     Mode mode;"
      }
    ]
  },
  {
    "sha": "9c01be1b85f8ad11a8a0826a4a2bcdc2668a5c1f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YzAxYmUxYjg1ZjhhZDExYThhMDgyNmE0YTJiY2RjMjY2OGE1YzFm",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-03-29T14:56:04Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-04-25T17:08:53Z"
      },
      "message": "[tests] [qt] Introduce qt/test/util with a generalized ConfirmMessage\n\nConfirmMessage is reused in future tests apart from its single usage here.",
      "tree": {
        "sha": "c689ea08afebf413262c2cf33e07b000156024dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c689ea08afebf413262c2cf33e07b000156024dd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9c01be1b85f8ad11a8a0826a4a2bcdc2668a5c1f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c01be1b85f8ad11a8a0826a4a2bcdc2668a5c1f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9c01be1b85f8ad11a8a0826a4a2bcdc2668a5c1f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c01be1b85f8ad11a8a0826a4a2bcdc2668a5c1f/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8cdcaee4c7b256c5c3b70f1cfb04a5fb547311cd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8cdcaee4c7b256c5c3b70f1cfb04a5fb547311cd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8cdcaee4c7b256c5c3b70f1cfb04a5fb547311cd"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 38,
      "deletions": 16
    },
    "files": [
      {
        "sha": "473693faaa356596cfec70b714ce01109c847705",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9c01be1b85f8ad11a8a0826a4a2bcdc2668a5c1f/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9c01be1b85f8ad11a8a0826a4a2bcdc2668a5c1f/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=9c01be1b85f8ad11a8a0826a4a2bcdc2668a5c1f",
        "patch": "@@ -20,6 +20,7 @@ TEST_QT_H = \\\n   qt/test/compattests.h \\\n   qt/test/rpcnestedtests.h \\\n   qt/test/uritests.h \\\n+  qt/test/util.h \\\n   qt/test/paymentrequestdata.h \\\n   qt/test/paymentservertests.h \\\n   qt/test/wallettests.h\n@@ -38,6 +39,7 @@ qt_test_test_bitcoin_qt_SOURCES = \\\n   qt/test/rpcnestedtests.cpp \\\n   qt/test/test_main.cpp \\\n   qt/test/uritests.cpp \\\n+  qt/test/util.cpp \\\n   $(TEST_QT_H) \\\n   $(TEST_BITCOIN_CPP) \\\n   $(TEST_BITCOIN_H)"
      },
      {
        "sha": "261caaaee5334faf6f651de53afd2a5430ce84c6",
        "filename": "src/qt/test/util.cpp",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9c01be1b85f8ad11a8a0826a4a2bcdc2668a5c1f/src/qt/test/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9c01be1b85f8ad11a8a0826a4a2bcdc2668a5c1f/src/qt/test/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/util.cpp?ref=9c01be1b85f8ad11a8a0826a4a2bcdc2668a5c1f",
        "patch": "@@ -0,0 +1,22 @@\n+#include <qt/callback.h>\n+\n+#include <QApplication>\n+#include <QMessageBox>\n+#include <QTimer>\n+#include <QString>\n+#include <QPushButton>\n+#include <QWidget>\n+\n+void ConfirmMessage(QString* text, int msec)\n+{\n+    QTimer::singleShot(msec, makeCallback([text](Callback* callback) {\n+        for (QWidget* widget : QApplication::topLevelWidgets()) {\n+            if (widget->inherits(\"QMessageBox\")) {\n+                QMessageBox* messageBox = qobject_cast<QMessageBox*>(widget);\n+                if (text) *text = messageBox->text();\n+                messageBox->defaultButton()->click();\n+            }\n+        }\n+        delete callback;\n+    }), SLOT(call()));\n+}"
      },
      {
        "sha": "324386c139ae821287ea422cbaed747683ace1eb",
        "filename": "src/qt/test/util.h",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9c01be1b85f8ad11a8a0826a4a2bcdc2668a5c1f/src/qt/test/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9c01be1b85f8ad11a8a0826a4a2bcdc2668a5c1f/src/qt/test/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/util.h?ref=9c01be1b85f8ad11a8a0826a4a2bcdc2668a5c1f",
        "patch": "@@ -0,0 +1,12 @@\n+#ifndef BITCOIN_QT_TEST_UTIL_H\n+#define BITCOIN_QT_TEST_UTIL_H\n+\n+/**\n+ * Press \"Ok\" button in message box dialog.\n+ *\n+ * @param text - Optionally store dialog text.\n+ * @param msec - Number of miliseconds to pause before triggering the callback.\n+ */\n+void ConfirmMessage(QString* text = nullptr, int msec = 0);\n+\n+#endif // BITCOIN_QT_TEST_UTIL_H"
      },
      {
        "sha": "a09d98dfe558251a8eb9e0b4fc5a979807470282",
        "filename": "src/qt/test/wallettests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 16,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9c01be1b85f8ad11a8a0826a4a2bcdc2668a5c1f/src/qt/test/wallettests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9c01be1b85f8ad11a8a0826a4a2bcdc2668a5c1f/src/qt/test/wallettests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/wallettests.cpp?ref=9c01be1b85f8ad11a8a0826a4a2bcdc2668a5c1f",
        "patch": "@@ -1,4 +1,5 @@\n #include <qt/test/wallettests.h>\n+#include <qt/test/util.h>\n \n #include <interfaces/node.h>\n #include <qt/bitcoinamountfield.h>\n@@ -35,21 +36,6 @@\n \n namespace\n {\n-//! Press \"Ok\" button in message box dialog.\n-void ConfirmMessage(QString* text = nullptr)\n-{\n-    QTimer::singleShot(0, makeCallback([text](Callback* callback) {\n-        for (QWidget* widget : QApplication::topLevelWidgets()) {\n-            if (widget->inherits(\"QMessageBox\")) {\n-                QMessageBox* messageBox = qobject_cast<QMessageBox*>(widget);\n-                if (text) *text = messageBox->text();\n-                messageBox->defaultButton()->click();\n-            }\n-        }\n-        delete callback;\n-    }), SLOT(call()));\n-}\n-\n //! Press \"Yes\" or \"Cancel\" buttons in modal send confirmation dialog.\n void ConfirmSend(QString* text = nullptr, bool cancel = false)\n {\n@@ -264,7 +250,7 @@ void TestGUI()\n     QCOMPARE(requestTableModel->rowCount({}), currentRowCount-1);\n }\n \n-}\n+} // namespace\n \n void WalletTests::walletTests()\n {"
      }
    ]
  },
  {
    "sha": "5109fc4a9cb2cbd73c33197fb9129e1413ab051b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MTA5ZmM0YTljYjJjYmQ3M2MzMzE5N2ZiOTEyOWUxNDEzYWIwNTFi",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-03-29T14:59:57Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-04-25T17:13:24Z"
      },
      "message": "[tests] [qt] Add tests for address book manipulation via EditAddressDialog\n\nAlso modifies corresponding QT code to allow for use within test cases.",
      "tree": {
        "sha": "0836355a6740398437a4ffab523ffa78886fdde0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0836355a6740398437a4ffab523ffa78886fdde0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5109fc4a9cb2cbd73c33197fb9129e1413ab051b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5109fc4a9cb2cbd73c33197fb9129e1413ab051b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5109fc4a9cb2cbd73c33197fb9129e1413ab051b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5109fc4a9cb2cbd73c33197fb9129e1413ab051b/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9c01be1b85f8ad11a8a0826a4a2bcdc2668a5c1f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c01be1b85f8ad11a8a0826a4a2bcdc2668a5c1f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9c01be1b85f8ad11a8a0826a4a2bcdc2668a5c1f"
      }
    ],
    "stats": {
      "total": 172,
      "additions": 170,
      "deletions": 2
    },
    "files": [
      {
        "sha": "4b14212b2ebaf1d1595a959b94e55c5f46d5a8b7",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5109fc4a9cb2cbd73c33197fb9129e1413ab051b/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5109fc4a9cb2cbd73c33197fb9129e1413ab051b/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=5109fc4a9cb2cbd73c33197fb9129e1413ab051b",
        "patch": "@@ -12,11 +12,13 @@ TEST_QT_MOC_CPP = \\\n \n if ENABLE_WALLET\n TEST_QT_MOC_CPP += \\\n+  qt/test/moc_addressbooktests.cpp \\\n   qt/test/moc_paymentservertests.cpp \\\n   qt/test/moc_wallettests.cpp\n endif\n \n TEST_QT_H = \\\n+  qt/test/addressbooktests.h \\\n   qt/test/compattests.h \\\n   qt/test/rpcnestedtests.h \\\n   qt/test/uritests.h \\\n@@ -45,6 +47,7 @@ qt_test_test_bitcoin_qt_SOURCES = \\\n   $(TEST_BITCOIN_H)\n if ENABLE_WALLET\n qt_test_test_bitcoin_qt_SOURCES += \\\n+  qt/test/addressbooktests.cpp \\\n   qt/test/paymentservertests.cpp \\\n   qt/test/wallettests.cpp \\\n   wallet/test/wallet_test_fixture.cpp"
      },
      {
        "sha": "ba420c5e152dc91d05234b9ef9ee5e45588aff1b",
        "filename": "src/qt/addressbookpage.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5109fc4a9cb2cbd73c33197fb9129e1413ab051b/src/qt/addressbookpage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5109fc4a9cb2cbd73c33197fb9129e1413ab051b/src/qt/addressbookpage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addressbookpage.h?ref=5109fc4a9cb2cbd73c33197fb9129e1413ab051b",
        "patch": "@@ -38,7 +38,7 @@ class AddressBookPage : public QDialog\n         ForEditing  /**< Open address book for editing */\n     };\n \n-    explicit AddressBookPage(const PlatformStyle *platformStyle, Mode mode, Tabs tab, QWidget *parent);\n+    explicit AddressBookPage(const PlatformStyle *platformStyle, Mode mode, Tabs tab, QWidget *parent = 0);\n     ~AddressBookPage();\n \n     void setModel(AddressTableModel *model);"
      },
      {
        "sha": "3aba74bf088a19293923ced48871d26296b73c49",
        "filename": "src/qt/editaddressdialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5109fc4a9cb2cbd73c33197fb9129e1413ab051b/src/qt/editaddressdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5109fc4a9cb2cbd73c33197fb9129e1413ab051b/src/qt/editaddressdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/editaddressdialog.h?ref=5109fc4a9cb2cbd73c33197fb9129e1413ab051b",
        "patch": "@@ -30,7 +30,7 @@ class EditAddressDialog : public QDialog\n         EditSendingAddress\n     };\n \n-    explicit EditAddressDialog(Mode mode, QWidget *parent);\n+    explicit EditAddressDialog(Mode mode, QWidget *parent = 0);\n     ~EditAddressDialog();\n \n     void setModel(AddressTableModel *model);"
      },
      {
        "sha": "0c2e7ae71dd6b0b8044e968ad3a55804689db753",
        "filename": "src/qt/test/addressbooktests.cpp",
        "status": "added",
        "additions": 143,
        "deletions": 0,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5109fc4a9cb2cbd73c33197fb9129e1413ab051b/src/qt/test/addressbooktests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5109fc4a9cb2cbd73c33197fb9129e1413ab051b/src/qt/test/addressbooktests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/addressbooktests.cpp?ref=5109fc4a9cb2cbd73c33197fb9129e1413ab051b",
        "patch": "@@ -0,0 +1,143 @@\n+#include <qt/test/addressbooktests.h>\n+#include <qt/test/util.h>\n+#include <test/test_bitcoin.h>\n+\n+#include <interfaces/node.h>\n+#include <qt/addressbookpage.h>\n+#include <qt/addresstablemodel.h>\n+#include <qt/editaddressdialog.h>\n+#include <qt/callback.h>\n+#include <qt/optionsmodel.h>\n+#include <qt/platformstyle.h>\n+#include <qt/qvalidatedlineedit.h>\n+#include <qt/walletmodel.h>\n+\n+#include <key.h>\n+#include <pubkey.h>\n+#include <key_io.h>\n+#include <wallet/wallet.h>\n+\n+#include <QTimer>\n+#include <QMessageBox>\n+\n+namespace\n+{\n+\n+/**\n+ * Fill the edit address dialog box with data, submit it, and ensure that\n+ * the resulting message meets expectations.\n+ */\n+void EditAddressAndSubmit(\n+        EditAddressDialog* dialog,\n+        const QString& label, const QString& address, QString expected_msg)\n+{\n+    QString warning_text;\n+\n+    dialog->findChild<QLineEdit*>(\"labelEdit\")->setText(label);\n+    dialog->findChild<QValidatedLineEdit*>(\"addressEdit\")->setText(address);\n+\n+    ConfirmMessage(&warning_text, 5);\n+    dialog->accept();\n+    QCOMPARE(warning_text, expected_msg);\n+}\n+\n+/**\n+ * Test adding various send addresses to the address book.\n+ *\n+ * There are three cases tested:\n+ *\n+ *   - new_address: a new address which should add as a send address successfully.\n+ *   - existing_s_address: an existing sending address which won't add successfully.\n+ *   - existing_r_address: an existing receiving address which won't add successfully.\n+ *\n+ * In each case, verify the resulting state of the address book and optionally\n+ * the warning message presented to the user.\n+ */\n+void TestAddAddressesToSendBook()\n+{\n+    TestChain100Setup test;\n+    CWallet wallet(\"mock\", WalletDatabase::CreateMock());\n+    bool firstRun;\n+    wallet.LoadWallet(firstRun);\n+\n+    auto build_address = [&wallet]() {\n+        CKey key;\n+        key.MakeNewKey(true);\n+        CTxDestination dest(GetDestinationForKey(\n+            key.GetPubKey(), wallet.m_default_address_type));\n+\n+        return std::make_pair(dest, QString::fromStdString(EncodeDestination(dest)));\n+    };\n+\n+    CTxDestination r_key_dest, s_key_dest;\n+\n+    // Add a preexisting \"receive\" entry in the address book.\n+    QString preexisting_r_address;\n+    QString r_label(\"already here (r)\");\n+\n+    // Add a preexisting \"send\" entry in the address book.\n+    QString preexisting_s_address;\n+    QString s_label(\"already here (s)\");\n+\n+    // Define a new address (which should add to the address book successfully).\n+    QString new_address;\n+\n+    std::tie(r_key_dest, preexisting_r_address) = build_address();\n+    std::tie(s_key_dest, preexisting_s_address) = build_address();\n+    std::tie(std::ignore, new_address) = build_address();\n+\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.SetAddressBook(r_key_dest, r_label.toStdString(), \"receive\");\n+        wallet.SetAddressBook(s_key_dest, s_label.toStdString(), \"send\");\n+    }\n+\n+    auto check_addbook_size = [&wallet](int expected_size) {\n+        QCOMPARE(static_cast<int>(wallet.mapAddressBook.size()), expected_size);\n+    };\n+\n+    // We should start with the two addresses we added earlier and nothing else.\n+    check_addbook_size(2);\n+\n+    // Initialize relevant QT models.\n+    std::unique_ptr<const PlatformStyle> platformStyle(PlatformStyle::instantiate(\"other\"));\n+    auto node = interfaces::MakeNode();\n+    OptionsModel optionsModel(*node);\n+    AddWallet(&wallet);\n+    WalletModel walletModel(std::move(node->getWallets()[0]), *node, platformStyle.get(), &optionsModel);\n+    RemoveWallet(&wallet);\n+    EditAddressDialog editAddressDialog(EditAddressDialog::NewSendingAddress);\n+    editAddressDialog.setModel(walletModel.getAddressTableModel());\n+\n+    EditAddressAndSubmit(\n+        &editAddressDialog, QString(\"uhoh\"), preexisting_r_address,\n+        QString(\n+            \"Address \\\"%1\\\" already exists as a receiving address with label \"\n+            \"\\\"%2\\\" and so cannot be added as a sending address.\"\n+            ).arg(preexisting_r_address).arg(r_label));\n+\n+    check_addbook_size(2);\n+\n+    EditAddressAndSubmit(\n+        &editAddressDialog, QString(\"uhoh, different\"), preexisting_s_address,\n+        QString(\n+            \"The entered address \\\"%1\\\" is already in the address book with \"\n+            \"label \\\"%2\\\".\"\n+            ).arg(preexisting_s_address).arg(s_label));\n+\n+    check_addbook_size(2);\n+\n+    // Submit a new address which should add successfully - we expect the\n+    // warning message to be blank.\n+    EditAddressAndSubmit(\n+        &editAddressDialog, QString(\"new\"), new_address, QString(\"\"));\n+\n+    check_addbook_size(3);\n+}\n+\n+} // namespace\n+\n+void AddressBookTests::addressBookTests()\n+{\n+    TestAddAddressesToSendBook();\n+}"
      },
      {
        "sha": "beeb9e76a980f3473cd5378b5f1934ff23d5749a",
        "filename": "src/qt/test/addressbooktests.h",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5109fc4a9cb2cbd73c33197fb9129e1413ab051b/src/qt/test/addressbooktests.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5109fc4a9cb2cbd73c33197fb9129e1413ab051b/src/qt/test/addressbooktests.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/addressbooktests.h?ref=5109fc4a9cb2cbd73c33197fb9129e1413ab051b",
        "patch": "@@ -0,0 +1,15 @@\n+#ifndef BITCOIN_QT_TEST_ADDRESSBOOKTESTS_H\n+#define BITCOIN_QT_TEST_ADDRESSBOOKTESTS_H\n+\n+#include <QObject>\n+#include <QTest>\n+\n+class AddressBookTests : public QObject\n+{\n+    Q_OBJECT\n+\n+private Q_SLOTS:\n+    void addressBookTests();\n+};\n+\n+#endif // BITCOIN_QT_TEST_ADDRESSBOOKTESTS_H"
      },
      {
        "sha": "56d4d3e4577cd2e3816ef84c82bd97adc2194184",
        "filename": "src/qt/test/test_main.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5109fc4a9cb2cbd73c33197fb9129e1413ab051b/src/qt/test/test_main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5109fc4a9cb2cbd73c33197fb9129e1413ab051b/src/qt/test/test_main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/test_main.cpp?ref=5109fc4a9cb2cbd73c33197fb9129e1413ab051b",
        "patch": "@@ -13,6 +13,7 @@\n #include <qt/test/compattests.h>\n \n #ifdef ENABLE_WALLET\n+#include <qt/test/addressbooktests.h>\n #include <qt/test/paymentservertests.h>\n #include <qt/test/wallettests.h>\n #endif\n@@ -99,6 +100,10 @@ int main(int argc, char *argv[])\n     if (QTest::qExec(&test5) != 0) {\n         fInvalid = true;\n     }\n+    AddressBookTests test6;\n+    if (QTest::qExec(&test6) != 0) {\n+        fInvalid = true;\n+    }\n #endif\n \n     fs::remove_all(pathTemp);"
      },
      {
        "sha": "9173fcae52db11cf0bc42bec0578316c313467a3",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5109fc4a9cb2cbd73c33197fb9129e1413ab051b/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5109fc4a9cb2cbd73c33197fb9129e1413ab051b/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=5109fc4a9cb2cbd73c33197fb9129e1413ab051b",
        "patch": "@@ -204,6 +204,8 @@ class WalletModel : public QObject\n     QString getWalletName() const;\n \n     bool isMultiwallet();\n+\n+    AddressTableModel* getAddressTableModel() const { return addressTableModel; }\n private:\n     std::unique_ptr<interfaces::Wallet> m_wallet;\n     std::unique_ptr<interfaces::Handler> m_handler_status_changed;"
      }
    ]
  }
]