jonasschnelli,2017-07-06T13:29:38Z,"Nice.\nConcept ACK.",https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313396180,313396180,
jnewbery,2017-07-06T13:45:12Z,Concept ACK. Will review later.,https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313400354,313400354,
promag,2017-07-07T09:43:19Z,"IMO we could somehow share the same data between the server table and the client table so that none of this would be necessary. Don't take me wrong, but parsing code feels bad practice. Beside that, keeping these tables in sync could very well be avoided. I could work in an alternative, unless I'm missing something.",https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313637174,313637174,
laanwj,2017-07-07T10:05:46Z,"@promag That discussion is in https://github.com/bitcoin/bitcoin/issues/10751#issuecomment-313351532\n\nAnd yes, in the long run there are absolutely better solutions (ideally the cli would have none of this information and requests it from the server), but in the short term I think adding this check is good.\n\nAnyhow I don't care deeply if this doesn't get merged, I use this script myself, a",https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313641856,313641856,
promag,2017-07-07T10:14:53Z,"Thanks for pointing that out.\n\n@laanwj could this be executed in pre-commit hook?",https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313643649,313643649,
laanwj,2017-07-07T11:40:33Z,"> @laanwj could this be executed in pre-commit hook?\n\nSure, would be a matter of adding the line to execute it to the `.git/hooks/pre-commit` or `.git/hooks/pre-push` script.",https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313658859,313658859,
promag,2017-07-07T14:15:54Z,@laanwj another PR or care to add it here?,https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313694531,313694531,
laanwj,2017-07-08T07:00:40Z,"You have to do it locally. Hooks are not part of the repository (for\nsecurity reasons, among others.) Shipping some examples of hooks would work\nbut that's definitely out of scope here.\n\nOn Jul 7, 2017 4:15 PM, ""João Barbosa"" <notifications@github.com> wrote:\n\n> @laanwj <https://github.com/laanwj> another PR or care to add it here?\n>\n> —\n> You are receiving this because you were mentioned",https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313839125,313839125,
ryanofsky,2017-07-08T10:15:21Z,"I think this might be simpler and more robust if it were written as a c++ unit test that just accesses the global variables directly, instead of a python tool that has to parse c++ with regexes.",https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313847227,313847227,
promag,2017-07-08T11:26:47Z,@laanwj reason?,https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313850385,313850385,
jnewbery,2017-07-10T13:03:32Z,@laanwj did you close this because you're planning to propose an alternative?,https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-314098883,314098883,
laanwj,2017-07-10T14:07:17Z,"@jnewbery No, I don't have the time nor motivation to work on this (it works for me), but I'm looking forward to a better alternative as no one seems to like this solution. ",https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-314116310,314116310,
jnewbery,2017-07-10T14:16:13Z,"I like it! At the very least I like it better than no tests at all.\n\nRunning code beats suggestions of better ways to do it without any code.\n\nIf you change your mind, I'm happy to review.",https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-314118947,314118947,
jnewbery,2017-08-09T23:14:39Z,"@laanwj - do you still plan to work on this? If not, do you mind if I take over?",https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-321406818,321406818,
laanwj,2017-08-10T06:59:54Z,I'll get to this after 0.15.0. There's not much to be done here but I'm completely distracted at the moment.,https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-321468337,321468337,
laanwj,2017-09-07T16:16:02Z,Rebased and updated for new table syntax without safemode flag.,https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-327849296,327849296,
theuni,2017-09-07T17:08:17Z,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-327863483,327863483,
sipa,2017-09-07T17:38:10Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-327871243,327871243,
jtimon,2017-09-07T19:53:15Z,"Concept ACK. If somebody writes a unittest alternative later, it is easy to replace one for the other, not a good reason to stop this.\n",https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-327910177,327910177,
laanwj,2017-09-07T20:28:03Z,Addressed @jnewbery's nits and updated for .travis.yml conflict.,https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-327918426,327918426,
jnewbery,2017-09-07T23:33:08Z,"Tested ACK 77aa9e59ea0e6a000a0aea5dec4ef9585356147d\n\nIt's definitely working:\n\n```\nERROR: estimaterawfee argument 0 is named nblocks in vRPCConvertParams but ['conf_target'] in dispatch table\nWARNING: conversion mismatch for argument named conf_target ([('estimaterawfee', False), ('sendmany', True), ('sendtoaddress', True)])\n```",https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-327956460,327956460,
laanwj,2017-09-07T23:35:14Z,"Thanks for testing. Yep, we should merge #11267 first to not break the tests.",https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-327956878,327956878,
MarcoFalke,2017-09-13T17:41:29Z,utACK 77aa9e59ea0e6a000a0aea5dec4ef9585356147d,https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-329243177,329243177,
practicalswift,2017-07-06T14:43:12Z,Nit: Use `sys.exit(…)`,https://github.com/bitcoin/bitcoin/pull/10753#discussion_r125920575,125920575,contrib/devtools/check-rpc-mappings.py
laanwj,2017-07-06T14:46:14Z,Why?,https://github.com/bitcoin/bitcoin/pull/10753#discussion_r125921464,125921464,contrib/devtools/check-rpc-mappings.py
practicalswift,2017-07-06T15:32:09Z,"According to the Python documentation `exit(…)` should be used in the interactive interpreter shell but not in programs:\n> The site module (which is imported automatically during startup, except if the -S command-line option is given) adds several constants to the built-in namespace. They are useful for the interactive interpreter shell and should not be used in programs.\n\nLinks:\n* [`sys.e",https://github.com/bitcoin/bitcoin/pull/10753#discussion_r125935027,125935027,contrib/devtools/check-rpc-mappings.py
laanwj,2017-07-06T17:54:56Z,Agree then! I never knew that. Assumed they were simply aliasses.,https://github.com/bitcoin/bitcoin/pull/10753#discussion_r125970855,125970855,contrib/devtools/check-rpc-mappings.py
jnewbery,2017-07-10T14:35:09Z,"nit: unused, please remove",https://github.com/bitcoin/bitcoin/pull/10753#discussion_r126439352,126439352,contrib/devtools/check-rpc-mappings.py
jnewbery,2017-07-10T14:46:15Z,"assert is a statement, not a function, so these parens are unnecessary. In fact, this would be better expressed as:\n\n```py\nassert not in_rpcs, ""Something went wrong with parsing the C++ file: update the regexps""\n```\n\nsince that delivers the error text to the user at the point of failure.",https://github.com/bitcoin/bitcoin/pull/10753#discussion_r126442789,126442789,contrib/devtools/check-rpc-mappings.py
jnewbery,2017-07-10T15:23:30Z,"I think it'd simplify implementation in `main()` if `process_commands()` and `process_mappings()` both returned a set of tuples `(command, index, argname)`.",https://github.com/bitcoin/bitcoin/pull/10753#discussion_r126454336,126454336,contrib/devtools/check-rpc-mappings.py
jnewbery,2017-09-07T17:46:07Z,nit: One-line docstrings should be on one line.,https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137608655,137608655,contrib/devtools/check-rpc-mappings.py
jnewbery,2017-09-07T17:46:21Z,"nit: one import per line, sorted by name of module",https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137608753,137608753,contrib/devtools/check-rpc-mappings.py
jnewbery,2017-09-07T17:46:46Z,nit: indentation for continuation lines.,https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137608884,137608884,contrib/devtools/check-rpc-mappings.py
jnewbery,2017-09-07T17:46:58Z,"still unused, please remove",https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137608962,137608962,contrib/devtools/check-rpc-mappings.py
jnewbery,2017-09-07T17:47:25Z,suggestion: add `self.convert = False` for self-documentation,https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137609105,137609105,contrib/devtools/check-rpc-mappings.py
jnewbery,2017-09-07T17:48:34Z,"Perhaps replace with an assert:\n\n`assert m, ""No match: %s"" % line`",https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137609460,137609460,contrib/devtools/check-rpc-mappings.py
jnewbery,2017-09-07T17:49:04Z,please remove parens from assert,https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137609623,137609623,contrib/devtools/check-rpc-mappings.py
jnewbery,2017-09-07T17:49:26Z,perhaps replace with an assert?,https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137609724,137609724,contrib/devtools/check-rpc-mappings.py
jnewbery,2017-09-07T17:51:08Z,"Suggestion: add prints for each check (like you have for the first one):\n\n`print('* Checking for conflicts in vRPCConvertParams conversion')`\n\netc",https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137610176,137610176,contrib/devtools/check-rpc-mappings.py
jnewbery,2017-09-07T17:51:29Z,use `sys.exit()`,https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137610274,137610274,contrib/devtools/check-rpc-mappings.py
jnewbery,2017-09-07T17:51:40Z,Remove trailing blank line,https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137610326,137610326,contrib/devtools/check-rpc-mappings.py
jnewbery,2017-09-07T17:54:12Z,"For portability, use:\n\n```python\n#!/usr/bin/env python3\n```\n\nAlso add copyright notice",https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137610979,137610979,contrib/devtools/check-rpc-mappings.py
laanwj,2017-09-07T20:18:56Z,"Meh, I personally prefer them on multiple lines, makes it easier to extend them later.",https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137644898,137644898,contrib/devtools/check-rpc-mappings.py
jnewbery,2017-09-07T20:32:26Z,Is this removal intended? How is it related to this PR?,https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137648066,137648066,.travis.yml
jnewbery,2017-09-07T20:33:22Z,"Thanks for changing it anyway! (for context, I picked up the preference for one-line docstrings from https://www.python.org/dev/peps/pep-0257/#id16)",https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137648294,137648294,contrib/devtools/check-rpc-mappings.py
laanwj,2017-09-07T20:33:41Z,"Sigh, rebase fail",https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137648364,137648364,.travis.yml
