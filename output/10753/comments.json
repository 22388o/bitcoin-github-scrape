[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313396180",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313396180",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
    "id": 313396180,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzM5NjE4MA==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-06T13:29:38Z",
    "updated_at": "2017-07-06T13:29:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Nice.\r\nConcept ACK.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313396180/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313400354",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313400354",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
    "id": 313400354,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzQwMDM1NA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-06T13:45:12Z",
    "updated_at": "2017-07-06T13:45:12Z",
    "author_association": "MEMBER",
    "body": "Concept ACK. Will review later.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313400354/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313637174",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313637174",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
    "id": 313637174,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzYzNzE3NA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-07T09:43:19Z",
    "updated_at": "2017-07-07T09:43:19Z",
    "author_association": "MEMBER",
    "body": "IMO we could somehow share the same data between the server table and the client table so that none of this would be necessary. Don't take me wrong, but parsing code feels bad practice. Beside that, keeping these tables in sync could very well be avoided. I could work in an alternative, unless I'm missing something.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313637174/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313641856",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313641856",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
    "id": 313641856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzY0MTg1Ng==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-07T10:05:46Z",
    "updated_at": "2017-07-07T10:09:30Z",
    "author_association": "MEMBER",
    "body": "@promag That discussion is in https://github.com/bitcoin/bitcoin/issues/10751#issuecomment-313351532\r\n\r\nAnd yes, in the long run there are absolutely better solutions (ideally the cli would have none of this information and requests it from the server), but in the short term I think adding this check is good.\r\n\r\nAnyhow I don't care deeply if this doesn't get merged, I use this script myself, and @TheBlueMatt requested some way to check this in #10751 so I thought it'd be useful for some other people too...",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313641856/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313643649",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313643649",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
    "id": 313643649,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzY0MzY0OQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-07T10:14:53Z",
    "updated_at": "2017-07-07T10:14:53Z",
    "author_association": "MEMBER",
    "body": "Thanks for pointing that out.\r\n\r\n@laanwj could this be executed in pre-commit hook?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313643649/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313658859",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313658859",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
    "id": 313658859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzY1ODg1OQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-07T11:40:33Z",
    "updated_at": "2017-07-07T11:40:33Z",
    "author_association": "MEMBER",
    "body": "> @laanwj could this be executed in pre-commit hook?\r\n\r\nSure, would be a matter of adding the line to execute it to the `.git/hooks/pre-commit` or `.git/hooks/pre-push` script.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313658859/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313694531",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313694531",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
    "id": 313694531,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzY5NDUzMQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-07T14:15:54Z",
    "updated_at": "2017-07-07T14:15:54Z",
    "author_association": "MEMBER",
    "body": "@laanwj another PR or care to add it here?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313694531/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313839125",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313839125",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
    "id": 313839125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzgzOTEyNQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-08T07:00:40Z",
    "updated_at": "2017-07-08T07:00:40Z",
    "author_association": "MEMBER",
    "body": "You have to do it locally. Hooks are not part of the repository (for\nsecurity reasons, among others.) Shipping some examples of hooks would work\nbut that's definitely out of scope here.\n\nOn Jul 7, 2017 4:15 PM, \"Jo\u00e3o Barbosa\" <notifications@github.com> wrote:\n\n> @laanwj <https://github.com/laanwj> another PR or care to add it here?\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313694531>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAHutvPib9u0jiX_HkyKAtsFAGdNzyfZks5sLj2cgaJpZM4OPn4k>\n> .\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313839125/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313847227",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313847227",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
    "id": 313847227,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzg0NzIyNw==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-08T10:15:21Z",
    "updated_at": "2017-07-08T10:16:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this might be simpler and more robust if it were written as a c++ unit test that just accesses the global variables directly, instead of a python tool that has to parse c++ with regexes.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313847227/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313850385",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-313850385",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
    "id": 313850385,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzg1MDM4NQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-08T11:26:47Z",
    "updated_at": "2017-07-08T11:26:47Z",
    "author_association": "MEMBER",
    "body": "@laanwj reason?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313850385/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314098883",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-314098883",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
    "id": 314098883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDA5ODg4Mw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-10T13:03:32Z",
    "updated_at": "2017-07-10T13:03:32Z",
    "author_association": "MEMBER",
    "body": "@laanwj did you close this because you're planning to propose an alternative?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314098883/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314116310",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-314116310",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
    "id": 314116310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDExNjMxMA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-10T14:07:17Z",
    "updated_at": "2017-07-10T14:08:49Z",
    "author_association": "MEMBER",
    "body": "@jnewbery No, I don't have the time nor motivation to work on this (it works for me), but I'm looking forward to a better alternative as no one seems to like this solution. ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314116310/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314118947",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-314118947",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
    "id": 314118947,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDExODk0Nw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-10T14:16:13Z",
    "updated_at": "2017-07-10T14:16:13Z",
    "author_association": "MEMBER",
    "body": "I like it! At the very least I like it better than no tests at all.\r\n\r\nRunning code beats suggestions of better ways to do it without any code.\r\n\r\nIf you change your mind, I'm happy to review.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314118947/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/321406818",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-321406818",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
    "id": 321406818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTQwNjgxOA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-09T23:14:39Z",
    "updated_at": "2017-08-09T23:14:39Z",
    "author_association": "MEMBER",
    "body": "@laanwj - do you still plan to work on this? If not, do you mind if I take over?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/321406818/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/321468337",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-321468337",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
    "id": 321468337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTQ2ODMzNw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-10T06:59:54Z",
    "updated_at": "2017-08-10T07:00:04Z",
    "author_association": "MEMBER",
    "body": "I'll get to this after 0.15.0. There's not much to be done here but I'm completely distracted at the moment.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/321468337/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327849296",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-327849296",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
    "id": 327849296,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzg0OTI5Ng==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-07T16:16:02Z",
    "updated_at": "2017-09-07T16:16:02Z",
    "author_association": "MEMBER",
    "body": "Rebased and updated for new table syntax without safemode flag.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327849296/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327863483",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-327863483",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
    "id": 327863483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzg2MzQ4Mw==",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-07T17:08:17Z",
    "updated_at": "2017-09-07T17:08:17Z",
    "author_association": "MEMBER",
    "body": "Concept ACK.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327863483/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327871243",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-327871243",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
    "id": 327871243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzg3MTI0Mw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-07T17:38:10Z",
    "updated_at": "2017-09-07T17:38:10Z",
    "author_association": "MEMBER",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327871243/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327910177",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-327910177",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
    "id": 327910177,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzkxMDE3Nw==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-07T19:53:15Z",
    "updated_at": "2017-09-07T19:53:15Z",
    "author_association": "MEMBER",
    "body": "Concept ACK. If somebody writes a unittest alternative later, it is easy to replace one for the other, not a good reason to stop this.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327910177/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327918426",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-327918426",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
    "id": 327918426,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzkxODQyNg==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-07T20:28:03Z",
    "updated_at": "2017-09-07T20:28:10Z",
    "author_association": "MEMBER",
    "body": "Addressed @jnewbery's nits and updated for .travis.yml conflict.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327918426/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327956460",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-327956460",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
    "id": 327956460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzk1NjQ2MA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-07T23:33:08Z",
    "updated_at": "2017-09-07T23:33:08Z",
    "author_association": "MEMBER",
    "body": "Tested ACK 77aa9e59ea0e6a000a0aea5dec4ef9585356147d\r\n\r\nIt's definitely working:\r\n\r\n```\r\nERROR: estimaterawfee argument 0 is named nblocks in vRPCConvertParams but ['conf_target'] in dispatch table\r\nWARNING: conversion mismatch for argument named conf_target ([('estimaterawfee', False), ('sendmany', True), ('sendtoaddress', True)])\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327956460/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327956878",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-327956878",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
    "id": 327956878,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzk1Njg3OA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-07T23:35:14Z",
    "updated_at": "2017-09-07T23:35:14Z",
    "author_association": "MEMBER",
    "body": "Thanks for testing. Yep, we should merge #11267 first to not break the tests.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327956878/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/329243177",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#issuecomment-329243177",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10753",
    "id": 329243177,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTI0MzE3Nw==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-13T17:41:29Z",
    "updated_at": "2017-09-13T17:41:29Z",
    "author_association": "MEMBER",
    "body": "utACK 77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/329243177/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/125920575",
    "pull_request_review_id": 48356732,
    "id": 125920575,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTkyMDU3NQ==",
    "diff_hunk": "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+\n+def process_commands(fname):\n+    '''\n+    Find and parse dispatch table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *(true|false), *{([^}]*)} *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)",
    "path": "contrib/devtools/check-rpc-mappings.py",
    "position": null,
    "original_position": 60,
    "commit_id": "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
    "original_commit_id": "603159515f1fa2b9aa0c4f37c6726803b7c39ded",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: Use `sys.exit(\u2026)`",
    "created_at": "2017-07-06T14:43:12Z",
    "updated_at": "2017-09-07T20:34:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r125920575",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/125920575"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r125920575"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/125920575/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 60,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/125921464",
    "pull_request_review_id": 48357727,
    "id": 125921464,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTkyMTQ2NA==",
    "diff_hunk": "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+\n+def process_commands(fname):\n+    '''\n+    Find and parse dispatch table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *(true|false), *{([^}]*)} *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)",
    "path": "contrib/devtools/check-rpc-mappings.py",
    "position": null,
    "original_position": 60,
    "commit_id": "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
    "original_commit_id": "603159515f1fa2b9aa0c4f37c6726803b7c39ded",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why?",
    "created_at": "2017-07-06T14:46:14Z",
    "updated_at": "2017-09-07T20:34:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r125921464",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/125921464"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r125921464"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/125921464/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 60,
    "side": "RIGHT",
    "in_reply_to_id": 125920575
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/125935027",
    "pull_request_review_id": 48373253,
    "id": 125935027,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTkzNTAyNw==",
    "diff_hunk": "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+\n+def process_commands(fname):\n+    '''\n+    Find and parse dispatch table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *(true|false), *{([^}]*)} *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)",
    "path": "contrib/devtools/check-rpc-mappings.py",
    "position": null,
    "original_position": 60,
    "commit_id": "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
    "original_commit_id": "603159515f1fa2b9aa0c4f37c6726803b7c39ded",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "According to the Python documentation `exit(\u2026)` should be used in the interactive interpreter shell but not in programs:\r\n> The site module (which is imported automatically during startup, except if the -S command-line option is given) adds several constants to the built-in namespace. They are useful for the interactive interpreter shell and should not be used in programs.\r\n\r\nLinks:\r\n* [`sys.exit(\u2026)`](https://docs.python.org/3/library/sys.html#sys.exit): _\"Exit from Python.\"_\r\n* [`exit(\u2026)`](https://docs.python.org/3/library/constants.html#exit): _\"raise SystemExit with the specified exit code. [\u2026] should not be used in programs.\"_",
    "created_at": "2017-07-06T15:32:09Z",
    "updated_at": "2017-09-07T20:34:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r125935027",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/125935027"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r125935027"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/125935027/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 60,
    "side": "RIGHT",
    "in_reply_to_id": 125920575
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/125970855",
    "pull_request_review_id": 48413506,
    "id": 125970855,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTk3MDg1NQ==",
    "diff_hunk": "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+\n+def process_commands(fname):\n+    '''\n+    Find and parse dispatch table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *(true|false), *{([^}]*)} *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)",
    "path": "contrib/devtools/check-rpc-mappings.py",
    "position": null,
    "original_position": 60,
    "commit_id": "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
    "original_commit_id": "603159515f1fa2b9aa0c4f37c6726803b7c39ded",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Agree then! I never knew that. Assumed they were simply aliasses.",
    "created_at": "2017-07-06T17:54:56Z",
    "updated_at": "2017-09-07T20:34:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r125970855",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/125970855"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r125970855"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/125970855/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 60,
    "side": "RIGHT",
    "in_reply_to_id": 125920575
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126439352",
    "pull_request_review_id": 48922868,
    "id": 126439352,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjQzOTM1Mg==",
    "diff_hunk": "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):",
    "path": "contrib/devtools/check-rpc-mappings.py",
    "position": null,
    "original_position": 28,
    "commit_id": "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
    "original_commit_id": "603159515f1fa2b9aa0c4f37c6726803b7c39ded",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: unused, please remove",
    "created_at": "2017-07-10T14:35:09Z",
    "updated_at": "2017-09-07T20:34:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r126439352",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126439352"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r126439352"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126439352/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 28,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126442789",
    "pull_request_review_id": 48922868,
    "id": 126442789,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjQ0Mjc4OQ==",
    "diff_hunk": "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+\n+def process_commands(fname):\n+    '''\n+    Find and parse dispatch table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *(true|false), *{([^}]*)} *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)\n+                    name = parse_string(m.group(2))\n+                    args_str = m.group(5).strip()\n+                    if args_str:\n+                        args = [RPCArgument(parse_string(x.strip()).split('|'), idx) for idx,x in enumerate(args_str.split(','))]\n+                    else:\n+                        args = []\n+                    cmds.append(RPCCommand(name, args))\n+    assert(not in_rpcs) # If this assertion is hit, something went wrong with parsing the C++ file: update the regexps",
    "path": "contrib/devtools/check-rpc-mappings.py",
    "position": null,
    "original_position": 68,
    "commit_id": "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
    "original_commit_id": "603159515f1fa2b9aa0c4f37c6726803b7c39ded",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "assert is a statement, not a function, so these parens are unnecessary. In fact, this would be better expressed as:\r\n\r\n```py\r\nassert not in_rpcs, \"Something went wrong with parsing the C++ file: update the regexps\"\r\n```\r\n\r\nsince that delivers the error text to the user at the point of failure.",
    "created_at": "2017-07-10T14:46:15Z",
    "updated_at": "2017-09-07T20:34:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r126442789",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126442789"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r126442789"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126442789/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 68,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126454336",
    "pull_request_review_id": 48922868,
    "id": 126454336,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjQ1NDMzNg==",
    "diff_hunk": "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+\n+def process_commands(fname):",
    "path": "contrib/devtools/check-rpc-mappings.py",
    "position": null,
    "original_position": 41,
    "commit_id": "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
    "original_commit_id": "603159515f1fa2b9aa0c4f37c6726803b7c39ded",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think it'd simplify implementation in `main()` if `process_commands()` and `process_mappings()` both returned a set of tuples `(command, index, argname)`.",
    "created_at": "2017-07-10T15:23:30Z",
    "updated_at": "2017-09-07T20:34:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r126454336",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126454336"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r126454336"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126454336/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 43,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137608655",
    "pull_request_review_id": 61298899,
    "id": 137608655,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzYwODY1NQ==",
    "diff_hunk": "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''",
    "path": "contrib/devtools/check-rpc-mappings.py",
    "position": null,
    "original_position": 2,
    "commit_id": "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
    "original_commit_id": "9b47f080a29fe19d792af1f661cffbf9439129ea",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: One-line docstrings should be on one line.",
    "created_at": "2017-09-07T17:46:07Z",
    "updated_at": "2017-09-07T20:34:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137608655",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137608655"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137608655"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137608655/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137608753",
    "pull_request_review_id": 61298899,
    "id": 137608753,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzYwODc1Mw==",
    "diff_hunk": "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re",
    "path": "contrib/devtools/check-rpc-mappings.py",
    "position": null,
    "original_position": 5,
    "commit_id": "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
    "original_commit_id": "9b47f080a29fe19d792af1f661cffbf9439129ea",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: one import per line, sorted by name of module",
    "created_at": "2017-09-07T17:46:21Z",
    "updated_at": "2017-09-07T20:34:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137608753",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137608753"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137608753"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137608753/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 5,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137608884",
    "pull_request_review_id": 61298899,
    "id": 137608884,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzYwODg4NA==",
    "diff_hunk": "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",",
    "path": "contrib/devtools/check-rpc-mappings.py",
    "position": null,
    "original_position": 10,
    "commit_id": "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
    "original_commit_id": "9b47f080a29fe19d792af1f661cffbf9439129ea",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: indentation for continuation lines.",
    "created_at": "2017-09-07T17:46:46Z",
    "updated_at": "2017-09-07T20:34:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137608884",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137608884"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137608884"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137608884/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 10,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137608962",
    "pull_request_review_id": 61298899,
    "id": 137608962,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzYwODk2Mg==",
    "diff_hunk": "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):",
    "path": "contrib/devtools/check-rpc-mappings.py",
    "position": null,
    "original_position": 28,
    "commit_id": "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
    "original_commit_id": "603159515f1fa2b9aa0c4f37c6726803b7c39ded",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "still unused, please remove",
    "created_at": "2017-09-07T17:46:58Z",
    "updated_at": "2017-09-07T20:34:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137608962",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137608962"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137608962"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137608962/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 28,
    "side": "RIGHT",
    "in_reply_to_id": 126439352
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137609105",
    "pull_request_review_id": 61298899,
    "id": 137609105,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzYwOTEwNQ==",
    "diff_hunk": "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx",
    "path": "contrib/devtools/check-rpc-mappings.py",
    "position": 35,
    "original_position": 39,
    "commit_id": "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
    "original_commit_id": "9b47f080a29fe19d792af1f661cffbf9439129ea",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "suggestion: add `self.convert = False` for self-documentation",
    "created_at": "2017-09-07T17:47:25Z",
    "updated_at": "2017-09-07T20:34:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137609105",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137609105"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137609105"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137609105/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 35,
    "original_line": 35,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137609460",
    "pull_request_review_id": 61298899,
    "id": 137609460,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzYwOTQ2MA==",
    "diff_hunk": "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+\n+def process_commands(fname):\n+    '''\n+    Find and parse dispatch table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *{([^}]*)} *},', line)\n+                    if not m:",
    "path": "contrib/devtools/check-rpc-mappings.py",
    "position": null,
    "original_position": 58,
    "commit_id": "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
    "original_commit_id": "9b47f080a29fe19d792af1f661cffbf9439129ea",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Perhaps replace with an assert:\r\n\r\n`assert m, \"No match: %s\" % line`",
    "created_at": "2017-09-07T17:48:34Z",
    "updated_at": "2017-09-07T20:34:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137609460",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137609460"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137609460"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137609460/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 58,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137609623",
    "pull_request_review_id": 61298899,
    "id": 137609623,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzYwOTYyMw==",
    "diff_hunk": "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+\n+def process_commands(fname):\n+    '''\n+    Find and parse dispatch table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *(true|false), *{([^}]*)} *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)\n+                    name = parse_string(m.group(2))\n+                    args_str = m.group(5).strip()\n+                    if args_str:\n+                        args = [RPCArgument(parse_string(x.strip()).split('|'), idx) for idx,x in enumerate(args_str.split(','))]\n+                    else:\n+                        args = []\n+                    cmds.append(RPCCommand(name, args))\n+    assert(not in_rpcs) # If this assertion is hit, something went wrong with parsing the C++ file: update the regexps",
    "path": "contrib/devtools/check-rpc-mappings.py",
    "position": null,
    "original_position": 68,
    "commit_id": "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
    "original_commit_id": "603159515f1fa2b9aa0c4f37c6726803b7c39ded",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "please remove parens from assert",
    "created_at": "2017-09-07T17:49:04Z",
    "updated_at": "2017-09-07T20:34:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137609623",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137609623"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137609623"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137609623/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 68,
    "side": "RIGHT",
    "in_reply_to_id": 126442789
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137609724",
    "pull_request_review_id": 61298899,
    "id": 137609724,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzYwOTcyNA==",
    "diff_hunk": "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+\n+def process_commands(fname):\n+    '''\n+    Find and parse dispatch table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *{([^}]*)} *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)\n+                    name = parse_string(m.group(2))\n+                    args_str = m.group(4).strip()\n+                    if args_str:\n+                        args = [RPCArgument(parse_string(x.strip()).split('|'), idx) for idx,x in enumerate(args_str.split(','))]\n+                    else:\n+                        args = []\n+                    cmds.append(RPCCommand(name, args))\n+    assert(not in_rpcs) # If this assertion is hit, something went wrong with parsing the C++ file: update the regexps\n+    return cmds\n+\n+def process_mapping(fname):\n+    '''\n+    Find and parse conversion table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if line == 'static const CRPCConvertParam vRPCConvertParams[] =':\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *([0-9]+) *, *(\"[^\"]*\") *},', line)\n+                    if not m:",
    "path": "contrib/devtools/check-rpc-mappings.py",
    "position": null,
    "original_position": 88,
    "commit_id": "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
    "original_commit_id": "9b47f080a29fe19d792af1f661cffbf9439129ea",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "perhaps replace with an assert?",
    "created_at": "2017-09-07T17:49:26Z",
    "updated_at": "2017-09-07T20:34:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137609724",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137609724"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137609724"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137609724/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 88,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137610176",
    "pull_request_review_id": 61298899,
    "id": 137610176,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzYxMDE3Ng==",
    "diff_hunk": "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+\n+def process_commands(fname):\n+    '''\n+    Find and parse dispatch table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *{([^}]*)} *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)\n+                    name = parse_string(m.group(2))\n+                    args_str = m.group(4).strip()\n+                    if args_str:\n+                        args = [RPCArgument(parse_string(x.strip()).split('|'), idx) for idx,x in enumerate(args_str.split(','))]\n+                    else:\n+                        args = []\n+                    cmds.append(RPCCommand(name, args))\n+    assert(not in_rpcs) # If this assertion is hit, something went wrong with parsing the C++ file: update the regexps\n+    return cmds\n+\n+def process_mapping(fname):\n+    '''\n+    Find and parse conversion table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if line == 'static const CRPCConvertParam vRPCConvertParams[] =':\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *([0-9]+) *, *(\"[^\"]*\") *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)\n+                    name = parse_string(m.group(1))\n+                    idx = int(m.group(2))\n+                    argname = parse_string(m.group(3))\n+                    cmds.append((name, idx, argname))\n+    assert(not in_rpcs)\n+    return cmds\n+\n+\n+def main():\n+    root = sys.argv[1]\n+\n+    # Get all commands from dispatch tables\n+    cmds = []\n+    for fname in SOURCES:\n+        cmds += process_commands(os.path.join(root, fname))\n+\n+    cmds_by_name = {}\n+    for cmd in cmds:\n+        cmds_by_name[cmd.name] = cmd\n+\n+    # Get current convert mapping for client\n+    client = SOURCE_CLIENT\n+    mapping_order = process_mapping(os.path.join(root, client))\n+    mapping = set(mapping_order)\n+\n+    print('* Checking consistency between dispatch tables and vRPCConvertParams')\n+\n+    # Check mapping consistency\n+    errors = 0\n+    for (cmdname, argidx, argname) in mapping:\n+        try:\n+            rargnames = cmds_by_name[cmdname].args[argidx].names\n+        except IndexError:\n+            print('ERROR: %s argument %i (named %s in vRPCConvertParams) is not defined in dispatch table' % (cmdname, argidx, argname))\n+            errors += 1\n+            continue\n+        if argname not in rargnames:\n+            print('ERROR: %s argument %i is named %s in vRPCConvertParams but %s in dispatch table' % (cmdname, argidx, argname, rargnames), file=sys.stderr)\n+            errors += 1\n+",
    "path": "contrib/devtools/check-rpc-mappings.py",
    "position": 122,
    "original_position": 130,
    "commit_id": "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
    "original_commit_id": "9b47f080a29fe19d792af1f661cffbf9439129ea",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Suggestion: add prints for each check (like you have for the first one):\r\n\r\n`print('* Checking for conflicts in vRPCConvertParams conversion')`\r\n\r\netc",
    "created_at": "2017-09-07T17:51:08Z",
    "updated_at": "2017-09-07T20:34:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137610176",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137610176"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137610176"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137610176/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 122,
    "original_line": 122,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137610274",
    "pull_request_review_id": 61298899,
    "id": 137610274,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzYxMDI3NA==",
    "diff_hunk": "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+\n+def process_commands(fname):\n+    '''\n+    Find and parse dispatch table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *{([^}]*)} *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)\n+                    name = parse_string(m.group(2))\n+                    args_str = m.group(4).strip()\n+                    if args_str:\n+                        args = [RPCArgument(parse_string(x.strip()).split('|'), idx) for idx,x in enumerate(args_str.split(','))]\n+                    else:\n+                        args = []\n+                    cmds.append(RPCCommand(name, args))\n+    assert(not in_rpcs) # If this assertion is hit, something went wrong with parsing the C++ file: update the regexps\n+    return cmds\n+\n+def process_mapping(fname):\n+    '''\n+    Find and parse conversion table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if line == 'static const CRPCConvertParam vRPCConvertParams[] =':\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *([0-9]+) *, *(\"[^\"]*\") *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)\n+                    name = parse_string(m.group(1))\n+                    idx = int(m.group(2))\n+                    argname = parse_string(m.group(3))\n+                    cmds.append((name, idx, argname))\n+    assert(not in_rpcs)\n+    return cmds\n+\n+\n+def main():\n+    root = sys.argv[1]\n+\n+    # Get all commands from dispatch tables\n+    cmds = []\n+    for fname in SOURCES:\n+        cmds += process_commands(os.path.join(root, fname))\n+\n+    cmds_by_name = {}\n+    for cmd in cmds:\n+        cmds_by_name[cmd.name] = cmd\n+\n+    # Get current convert mapping for client\n+    client = SOURCE_CLIENT\n+    mapping_order = process_mapping(os.path.join(root, client))\n+    mapping = set(mapping_order)\n+\n+    print('* Checking consistency between dispatch tables and vRPCConvertParams')\n+\n+    # Check mapping consistency\n+    errors = 0\n+    for (cmdname, argidx, argname) in mapping:\n+        try:\n+            rargnames = cmds_by_name[cmdname].args[argidx].names\n+        except IndexError:\n+            print('ERROR: %s argument %i (named %s in vRPCConvertParams) is not defined in dispatch table' % (cmdname, argidx, argname))\n+            errors += 1\n+            continue\n+        if argname not in rargnames:\n+            print('ERROR: %s argument %i is named %s in vRPCConvertParams but %s in dispatch table' % (cmdname, argidx, argname, rargnames), file=sys.stderr)\n+            errors += 1\n+\n+    # Check for conflicts in vRPCConvertParams conversion\n+    # All aliases for an argument must either be present in the\n+    # conversion table, or not. Anything in between means an oversight\n+    # and some aliases won't work.\n+    for cmd in cmds:\n+        for arg in cmd.args:\n+            convert = [((cmd.name,arg.idx,argname) in mapping) for argname in arg.names]\n+            if any(convert) != all(convert):\n+                print('ERROR: %s argument %s has conflicts in vRPCConvertParams conversion specifier %s' % (cmd.name, arg.names, convert))\n+                errors += 1\n+            arg.convert = all(convert)\n+\n+    # Check for conversion difference by argument name.\n+    # It is preferable for API consistency that arguments with the same name\n+    # have the same conversion, so bin by argument name.\n+    all_methods_by_argname = defaultdict(list)\n+    converts_by_argname = defaultdict(list)\n+    for cmd in cmds:\n+        for arg in cmd.args:\n+            for argname in arg.names:\n+                all_methods_by_argname[argname].append(cmd.name)\n+                converts_by_argname[argname].append(arg.convert)\n+\n+    for argname,convert in converts_by_argname.items():\n+        if all(convert) != any(convert):\n+            if argname in IGNORE_DUMMY_ARGS: # these are testing or dummy, don't warn for them\n+                continue\n+            print('WARNING: conversion mismatch for argument named %s (%s)' %\n+                    (argname, list(zip(all_methods_by_argname[argname], converts_by_argname[argname]))))\n+\n+    exit(errors > 0)",
    "path": "contrib/devtools/check-rpc-mappings.py",
    "position": null,
    "original_position": 161,
    "commit_id": "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
    "original_commit_id": "9b47f080a29fe19d792af1f661cffbf9439129ea",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "use `sys.exit()`",
    "created_at": "2017-09-07T17:51:29Z",
    "updated_at": "2017-09-07T20:34:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137610274",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137610274"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137610274"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137610274/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 161,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137610326",
    "pull_request_review_id": 61298899,
    "id": 137610326,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzYxMDMyNg==",
    "diff_hunk": "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''\n+Check RPC argument consistency.\n+'''\n+import sys, os, re\n+from collections import defaultdict\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+\"src/rpc/server.cpp\",\n+\"src/rpc/blockchain.cpp\",\n+\"src/rpc/mining.cpp\",\n+\"src/rpc/misc.cpp\",\n+\"src/rpc/net.cpp\",\n+\"src/rpc/rawtransaction.cpp\",\n+\"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy','arg0','arg1','arg2','arg3','arg4','arg5','arg6','arg7','arg8','arg9'}\n+\n+def parse_string(s):\n+    assert(s[0] == '\"')\n+    assert(s[-1] == '\"')\n+    return s[1:-1]\n+\n+def make_string(s):\n+    return '\"%s\"' % s\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+\n+def process_commands(fname):\n+    '''\n+    Find and parse dispatch table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *{([^}]*)} *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)\n+                    name = parse_string(m.group(2))\n+                    args_str = m.group(4).strip()\n+                    if args_str:\n+                        args = [RPCArgument(parse_string(x.strip()).split('|'), idx) for idx,x in enumerate(args_str.split(','))]\n+                    else:\n+                        args = []\n+                    cmds.append(RPCCommand(name, args))\n+    assert(not in_rpcs) # If this assertion is hit, something went wrong with parsing the C++ file: update the regexps\n+    return cmds\n+\n+def process_mapping(fname):\n+    '''\n+    Find and parse conversion table in implementation file `fname`.\n+    '''\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if line == 'static const CRPCConvertParam vRPCConvertParams[] =':\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *([0-9]+) *, *(\"[^\"]*\") *},', line)\n+                    if not m:\n+                        print('No match: %s' % line)\n+                        exit(1)\n+                    name = parse_string(m.group(1))\n+                    idx = int(m.group(2))\n+                    argname = parse_string(m.group(3))\n+                    cmds.append((name, idx, argname))\n+    assert(not in_rpcs)\n+    return cmds\n+\n+\n+def main():\n+    root = sys.argv[1]\n+\n+    # Get all commands from dispatch tables\n+    cmds = []\n+    for fname in SOURCES:\n+        cmds += process_commands(os.path.join(root, fname))\n+\n+    cmds_by_name = {}\n+    for cmd in cmds:\n+        cmds_by_name[cmd.name] = cmd\n+\n+    # Get current convert mapping for client\n+    client = SOURCE_CLIENT\n+    mapping_order = process_mapping(os.path.join(root, client))\n+    mapping = set(mapping_order)\n+\n+    print('* Checking consistency between dispatch tables and vRPCConvertParams')\n+\n+    # Check mapping consistency\n+    errors = 0\n+    for (cmdname, argidx, argname) in mapping:\n+        try:\n+            rargnames = cmds_by_name[cmdname].args[argidx].names\n+        except IndexError:\n+            print('ERROR: %s argument %i (named %s in vRPCConvertParams) is not defined in dispatch table' % (cmdname, argidx, argname))\n+            errors += 1\n+            continue\n+        if argname not in rargnames:\n+            print('ERROR: %s argument %i is named %s in vRPCConvertParams but %s in dispatch table' % (cmdname, argidx, argname, rargnames), file=sys.stderr)\n+            errors += 1\n+\n+    # Check for conflicts in vRPCConvertParams conversion\n+    # All aliases for an argument must either be present in the\n+    # conversion table, or not. Anything in between means an oversight\n+    # and some aliases won't work.\n+    for cmd in cmds:\n+        for arg in cmd.args:\n+            convert = [((cmd.name,arg.idx,argname) in mapping) for argname in arg.names]\n+            if any(convert) != all(convert):\n+                print('ERROR: %s argument %s has conflicts in vRPCConvertParams conversion specifier %s' % (cmd.name, arg.names, convert))\n+                errors += 1\n+            arg.convert = all(convert)\n+\n+    # Check for conversion difference by argument name.\n+    # It is preferable for API consistency that arguments with the same name\n+    # have the same conversion, so bin by argument name.\n+    all_methods_by_argname = defaultdict(list)\n+    converts_by_argname = defaultdict(list)\n+    for cmd in cmds:\n+        for arg in cmd.args:\n+            for argname in arg.names:\n+                all_methods_by_argname[argname].append(cmd.name)\n+                converts_by_argname[argname].append(arg.convert)\n+\n+    for argname,convert in converts_by_argname.items():\n+        if all(convert) != any(convert):\n+            if argname in IGNORE_DUMMY_ARGS: # these are testing or dummy, don't warn for them\n+                continue\n+            print('WARNING: conversion mismatch for argument named %s (%s)' %\n+                    (argname, list(zip(all_methods_by_argname[argname], converts_by_argname[argname]))))\n+\n+    exit(errors > 0)\n+\n+if __name__ == '__main__':\n+    main()\n+",
    "path": "contrib/devtools/check-rpc-mappings.py",
    "position": null,
    "original_position": 165,
    "commit_id": "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
    "original_commit_id": "9b47f080a29fe19d792af1f661cffbf9439129ea",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Remove trailing blank line",
    "created_at": "2017-09-07T17:51:40Z",
    "updated_at": "2017-09-07T20:34:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137610326",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137610326"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137610326"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137610326/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 165,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137610979",
    "pull_request_review_id": 61298899,
    "id": 137610979,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzYxMDk3OQ==",
    "diff_hunk": "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3",
    "path": "contrib/devtools/check-rpc-mappings.py",
    "position": null,
    "original_position": 1,
    "commit_id": "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
    "original_commit_id": "9b47f080a29fe19d792af1f661cffbf9439129ea",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "For portability, use:\r\n\r\n```python\r\n#!/usr/bin/env python3\r\n```\r\n\r\nAlso add copyright notice",
    "created_at": "2017-09-07T17:54:12Z",
    "updated_at": "2017-09-07T20:34:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137610979",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137610979"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137610979"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137610979/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137644898",
    "pull_request_review_id": 61340037,
    "id": 137644898,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzY0NDg5OA==",
    "diff_hunk": "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''",
    "path": "contrib/devtools/check-rpc-mappings.py",
    "position": null,
    "original_position": 2,
    "commit_id": "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
    "original_commit_id": "9b47f080a29fe19d792af1f661cffbf9439129ea",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Meh, I personally prefer them on multiple lines, makes it easier to extend them later.",
    "created_at": "2017-09-07T20:18:56Z",
    "updated_at": "2017-09-07T20:34:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137644898",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137644898"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137644898"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137644898/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2,
    "side": "RIGHT",
    "in_reply_to_id": 137608655
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137648066",
    "pull_request_review_id": 61343723,
    "id": 137648066,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzY0ODA2Ng==",
    "diff_hunk": "@@ -45,7 +45,7 @@ install:\n before_script:\n     - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then contrib/devtools/commit-script-check.sh $TRAVIS_COMMIT_RANGE; fi\n     - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/check-doc.py; fi\n-    - unset CC; unset CXX",
    "path": ".travis.yml",
    "position": null,
    "original_position": 4,
    "commit_id": "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
    "original_commit_id": "eef090fb235b52060eb03cbd0537011cd2651270",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is this removal intended? How is it related to this PR?",
    "created_at": "2017-09-07T20:32:26Z",
    "updated_at": "2017-09-07T20:34:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137648066",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137648066"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137648066"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137648066/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 48,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137648294",
    "pull_request_review_id": 61344013,
    "id": 137648294,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzY0ODI5NA==",
    "diff_hunk": "@@ -0,0 +1,165 @@\n+#!/usr/bin/python3\n+'''",
    "path": "contrib/devtools/check-rpc-mappings.py",
    "position": null,
    "original_position": 2,
    "commit_id": "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
    "original_commit_id": "9b47f080a29fe19d792af1f661cffbf9439129ea",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks for changing it anyway! (for context, I picked up the preference for one-line docstrings from https://www.python.org/dev/peps/pep-0257/#id16)",
    "created_at": "2017-09-07T20:33:22Z",
    "updated_at": "2017-09-07T20:34:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137648294",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137648294"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137648294"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137648294/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2,
    "side": "RIGHT",
    "in_reply_to_id": 137608655
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137648364",
    "pull_request_review_id": 61344111,
    "id": 137648364,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzY0ODM2NA==",
    "diff_hunk": "@@ -45,7 +45,7 @@ install:\n before_script:\n     - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then contrib/devtools/commit-script-check.sh $TRAVIS_COMMIT_RANGE; fi\n     - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/check-doc.py; fi\n-    - unset CC; unset CXX",
    "path": ".travis.yml",
    "position": null,
    "original_position": 4,
    "commit_id": "77aa9e59ea0e6a000a0aea5dec4ef9585356147d",
    "original_commit_id": "eef090fb235b52060eb03cbd0537011cd2651270",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Sigh, rebase fail",
    "created_at": "2017-09-07T20:33:41Z",
    "updated_at": "2017-09-07T20:34:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137648364",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137648364"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10753#discussion_r137648364"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10753"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137648364/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 48,
    "side": "LEFT",
    "in_reply_to_id": 137648066
  }
]