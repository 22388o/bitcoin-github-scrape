ashleyholman,2014-05-23T18:29:10Z,![github4133](https://cloud.githubusercontent.com/assets/549484/3070325/1f30688c-e2a8-11e3-8781-d0b54764991e.png)\n,https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44044817,44044817,
ashleyholman,2014-05-23T18:31:56Z,Relates to issue #4133 \n,https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44045185,44045185,
wtogami,2014-05-24T05:38:04Z,Would it be complicated to add a 'Disconnect' and 'Ban' option?  Either buttons or right-click menu?\n,https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44078483,44078483,
ashleyholman,2014-05-24T06:07:09Z,@wtogami I think I'd be able to do that.  I imagine that such a function should be also added as an RPC call to keep the CLI and GUI capabilities the same?\n,https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44078933,44078933,
wtogami,2014-05-24T06:24:48Z,"RPC too sounds like a great idea.  Would be helpful in debugging certain things.\n\nbannode, unbannode, disconnectnode?\n\nThe parameter could be a domain name but in the case of banning it's resolved and only the IP address is stored.\n\nFor Tor nodes I'm not sure how to handle it.  You can't ban but disconnect would be possible.\n",https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44079189,44079189,
Diapolo,2014-05-24T08:55:14Z,"Pretty cool addition :), nice job!\n",https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44081742,44081742,
laanwj,2014-05-24T09:27:21Z,"Looks very good!\n\nI think adding Disconnect/Ban functionality would be useful, but let's not do it in this pull request. That functionality would indeed also have to be available on RPC (and the core) first, and that's orthogonal to this nice GUI improvement. Let's aim to merge this first.\n",https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44082300,44082300,
ashleyholman,2014-05-24T09:36:49Z,"What's the process on pushing additional patches in response to feedback?  If I push an amended commit, it's hard for you to see what changed.  But if I commit new patches on top, the history will be a bit ugly when merged.\n\nI guess I could make new commits on top for now, and then squash it later once it's ready for merge?\n",https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44082461,44082461,
Diapolo,2014-05-24T09:38:14Z,"@ashleyholman For such a ""big"" patch it's nice to add commits until you got core dev ACKs and can then squash into one.\n",https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44082492,44082492,
sipa,2014-05-24T10:16:51Z,"Pings aren't sent automatically (yet), so the pingtime will be zero unless you explicitly request pings (using the `ping` RPC command).\n\nIf you run together with #2784, you'll pretty much always see ping times.\n\nBy the way, I think ping times (in that case) are more useful to show on the main screen table than startingheight (as that can be very outdated information).\n",https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44083193,44083193,
ashleyholman,2014-05-24T13:16:25Z,"Here is what it's like with #2784 merged and the Height column replaced with Ping.\n\n![guipeersping](https://cloud.githubusercontent.com/assets/549484/3074563/694ee9f0-e345-11e3-8fba-1793df99b5e9.png)\n\nI've pushed this to my gui_peers_ping branch, but won't include it in this pull unless #2784 is getting merged.\n",https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44086808,44086808,
laanwj,2014-05-25T16:23:47Z,"I did a bit of testing with this applied, works well for me; a few nits:\n- 'Ban Score' shows as 'Unavailable' for many peers. This seems confusing. It may be better to just report '0' here if the data structure for this isn't created yet.\n- When enlarging the debug window vertically, the line distance between the information entries increases. This looks a bit weird, but I suppose it's a matter ",https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44138813,44138813,
sipa,2014-05-25T16:29:18Z,"BIP14 repurposed strSubVer as ""user agent"".\n",https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44139038,44139038,
ashleyholman,2014-05-26T00:52:53Z,"The ban score being ""Unavailable"" is because there's an extra lock required to get that info.  The rest of the stats require cs_vNodes, but getting the nMisbehaviour requires cs_main.  When TRY_LOCK on cs_main fails, I show ""Unavailable"".  I could show it as 0, but then when it eventually succeeds on the lock, the value will change.  If you click on another peer and then click back on the same pee",https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44150459,44150459,
leofidus,2014-05-26T01:08:58Z,"displaying ""fetching..."" and periodically trying to get the information sounds like a good solution.\n",https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44150837,44150837,
ashleyholman,2014-05-26T02:05:38Z,"Pushed an update:\n- Change ""Unavailable"" to ""Fetching..."" when nMisbehaviour can't be read.  If you wait some seconds, you should eventually see the ban score.  It's worse when the lock is busy, such as when synchronising your chain.\n- Added a stretch element to fix up the vertical resize behaviour\n- The ""Services"" field is now formatted verbosely, eg. ""NETWORK & UNKNOWN[2] & ..."" (only scans t",https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44152389,44152389,
laanwj,2014-05-26T07:07:21Z,@ashleyholman seems like good choices to me\n,https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44162747,44162747,
laanwj,2014-06-02T14:20:43Z,ACK. will merge after squash\n,https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44842493,44842493,
ashleyholman,2014-06-02T15:17:03Z,"@laanwj There you go.  I avoided rebasing so that my squash can be easily diff'd against the last reviewed commit.  It merges cleanly to master though.\n\nIn regards to signing, should I be doing that, or is that only needed for mainline commits (ie. your merge commit)?  I don't have a PGP identity on any key servers at the moment, but it's something I've been wanting to get set up with.\n",https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44850115,44850115,
laanwj,2014-06-02T16:05:53Z,"@ashleyholman Thanks\n\nRe: signing, I always sign the merge commits, but I think it's useful if contributors sign their uppermost commit as well, so that people can check that it's really the contributor's code that was merged and not something manipulated by a compromised github (for example). Once you have a key set up, you can sign your last commit with:\n\n``` bash\ngit commit --amend --gpg-s",https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44856729,44856729,
Azulan,2014-06-02T16:20:53Z,Tested with ipv6?\n,https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44858541,44858541,
laanwj,2014-06-02T20:07:31Z,"@Azulan Yes, if you could test with ipv6 that'd be helpful\n",https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44884405,44884405,
BitcoinPullTester,2014-06-03T08:44:45Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/65f78a111ff52c2212cc0a423662e7a41d1206dd for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/4225#issuecomment-44938883,44938883,
Diapolo,2014-05-24T08:32:42Z,"Nit: Can you keep alphabetical ordering (where possible) of includes, classes etc. throughout your pull please :). Talking about just the file headers (header of .h and .cpp)...\n",https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025379,13025379,src/qt/clientmodel.cpp
Diapolo,2014-05-24T08:35:07Z,Isn't there such a function somewhere already or could we use this in other places? Seems like a common task.\n,https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025385,13025385,src/qt/guiutil.cpp
Diapolo,2014-05-24T08:37:50Z,"Can you remove the space after the unit, this often causes trouble during translation, if there is a space at the end.\n",https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025390,13025390,src/qt/guiutil.cpp
Diapolo,2014-05-24T08:51:14Z,Nit: Add a newline after guiutil.h as main and util are core headers.\n,https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025421,13025421,src/qt/rpcconsole.cpp
Diapolo,2014-05-24T08:53:15Z,"Ping time is not seconds IMHO, or?\n",https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025424,13025424,src/qt/rpcconsole.cpp
Diapolo,2014-05-24T08:53:51Z,Nit: Can you exclude HTML tags from translations please.\n,https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025427,13025427,src/qt/rpcconsole.cpp
laanwj,2014-05-24T09:28:31Z,"Is the part about alphabetical ordering mentioned anywhere in the coding style guides? If not, it should be, as otherwise it's not realistic to expect people to do it.\n",https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025539,13025539,src/qt/clientmodel.cpp
Diapolo,2014-05-24T09:30:26Z,"Most likely it's not, but I remeber a big cleanup pull by someone and we liked it :).\n",https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025633,13025633,src/qt/clientmodel.cpp
ashleyholman,2014-05-24T10:01:53Z,"This should hopefully be fixed in my new commit.  Note that I have followed the format of some of the other .cpp files where they include their own .h first on a separate line, then group the others alphabetically.\n",https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025728,13025728,src/qt/clientmodel.cpp
ashleyholman,2014-05-24T10:04:26Z,RPCConsole::setTrafficGraphRange() had similar code which I replaced with this new util function.  There is similar code in BitcoinGUI::setNumBlocks() but it formats the string differently and uses less precision.\n,https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025734,13025734,src/qt/guiutil.cpp
ashleyholman,2014-05-24T10:11:59Z,"I wasn't able to test this because I'm yet to come across a peer that has a non-zero dPingTime.  I'm not sure why this is, as I thought most nodes should support that by now.  It gets calculated like this: (((double)nPingUsecTime) / 1e6), so I interpreted that to mean its the number of seconds as a floating point.\n",https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025756,13025756,src/qt/rpcconsole.cpp
sipa,2014-05-24T10:19:16Z,"dPingTime is in seconds, indeed.\n",https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13025775,13025775,src/qt/rpcconsole.cpp
laanwj,2014-05-28T07:51:56Z,"Is there a specific reason to collect the ban score here, instead of in PeerTableModel's refreshPeers()? To me it seems like this would be the responsibility of the model, not the view.\n",https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13119124,13119124,src/qt/rpcconsole.cpp
ashleyholman,2014-05-29T11:03:01Z,"Currently the state stats, which contains the ban score, is only being retrieved for the one peer thats selected (if one is selected).  The model is not aware of which one is selected, so refreshPeers() would have to get the CStateStats for every peer and store them as it does with the CNodeStats records, which I will happily do if that's cleaner.  The return type of PeerTableModel::getNodeStats()",https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13176329,13176329,src/qt/rpcconsole.cpp
Diapolo,2014-05-29T11:06:00Z,You could pass two references instead of using the one return type?\n,https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13176387,13176387,src/qt/rpcconsole.cpp
laanwj,2014-05-30T13:10:26Z,"I think retrieving all the data is refreshPeers is cleanest. You could define a data structure for the model that contains both a CNodeStats and a CNodeStateStats or use a std::pair if lazy :) \n\nUnless you think this has a large impact on performance, but I don't think so, it is only a little bit extra data that gets copied.\n\nAlternatively: add a function getNodeStateStats(id) to the PeerTable",https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13227585,13227585,src/qt/rpcconsole.cpp
ashleyholman,2014-05-31T05:58:10Z,@laanwj: my latest patch moves it into refreshPeers()\n,https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13259591,13259591,src/qt/rpcconsole.cpp
laanwj,2014-06-01T08:05:07Z,This must be a debugging leftover? :)\n,https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13265616,13265616,src/qt/rpcconsole.cpp
ashleyholman,2014-06-01T08:11:25Z,"Haha, oops.  Pushed a new commit to remove that.  I will squash all these patches into one commit and sign it once it's ready for merge.\n",https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13265632,13265632,src/qt/rpcconsole.cpp
Diapolo,2014-06-03T11:25:11Z,What are these?\n,https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13329189,13329189,src/qt/peertablemodel.h
ashleyholman,2014-06-03T11:52:10Z,@Diapolo Which lines specifically?  Github is highlighting a lot there so I can't tell which parts you mean.\n,https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13330027,13330027,src/qt/peertablemodel.h
Diapolo,2014-06-03T11:55:19Z,Exactly that line `/*@}*/` and at the beginning of the comment :).\n,https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13330112,13330112,src/qt/peertablemodel.h
laanwj,2014-06-03T12:04:00Z,@diapolo A doxygen grouping comment\nEdit: see http://www.stack.nl/~dimitri/doxygen/manual/grouping.html\n,https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13330414,13330414,src/qt/peertablemodel.h
ashleyholman,2014-06-03T12:04:18Z,"Oh, I'm not sure what the deal is with those, but they are in the other model code that I based this on.\n\n<pre>$ git grep -F '/*@}*/'\nsrc/qt/addresstablemodel.h:    /*@}*/\nsrc/qt/peertablemodel.h:    /*@}*/\nsrc/qt/recentrequeststablemodel.h:    /*@}*/</pre>\n",https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13330423,13330423,src/qt/peertablemodel.h
leofidus,2014-06-03T15:13:49Z,the `@name` puts a descriptive name to all the code enclosed between `@{` and `@}` in the doxygen documentation. But I think it has to be `/**@}*/` to be correctly recognized.\n,https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13339669,13339669,src/qt/peertablemodel.h
laanwj,2014-06-03T15:44:08Z,"@leofidus  It appears to work see https://dev.visucore.com/bitcoin/doxygen/class_peer_table_model.html, under Public Member Functions.\n",https://github.com/bitcoin/bitcoin/pull/4225#discussion_r13341590,13341590,src/qt/peertablemodel.h
