DrahtBot,2020-11-19 18:31:34,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20892 (tests: Run both descriptor and legacy tests within a single test invocation by achow101)\n* #20012 (rpc: Remove du",https://github.com/bitcoin/bitcoin/pull/20226#issuecomment-730558681,730558681,
S3RK,2020-12-10 13:09:25,@promag For now I updated the code to acquire `cs_wallet` which seems reasonable and I don't see better alternatives anyway.,https://github.com/bitcoin/bitcoin/pull/20226#issuecomment-742510959,742510959,
achow101,2020-12-24 18:37:08,"Locking `cs_wallet` should be sufficient.\n\nConcept ACK.\n\nCan you add some tests for this?",https://github.com/bitcoin/bitcoin/pull/20226#issuecomment-750942829,750942829,
Sjors,2021-01-01 15:37:06,Concept ACK,https://github.com/bitcoin/bitcoin/pull/20226#issuecomment-753330422,753330422,
jonatack,2021-01-15 19:08:16,Concept ACK,https://github.com/bitcoin/bitcoin/pull/20226#issuecomment-761131088,761131088,
S3RK,2021-01-21 09:06:44,Added functional test,https://github.com/bitcoin/bitcoin/pull/20226#issuecomment-764490033,764490033,
S3RK,2021-01-27 08:51:54,"@luke-jr interesting point, thanks. I took a different approach which is more consistent with other descriptor specific tests. I made the test work regardless of whether `--descriptors` is set.\n\n@achow101 There are two more tests so far that run only with `--descriptors` flag:\n```\nwallet_descriptor\nwallet_importdescriptors\n```\n\nI tested and both of them would work without the flag ",https://github.com/bitcoin/bitcoin/pull/20226#issuecomment-768134063,768134063,
luke-jr,2021-01-27 16:08:23,"> @luke-jr interesting point, thanks. I took a different approach which is more consistent with other descriptor specific tests. I made the test work regardless of whether --descriptors is set.\n\nBut as-is, the test FAILS without --descriptors set...?",https://github.com/bitcoin/bitcoin/pull/20226#issuecomment-768392164,768392164,
achow101,2021-01-27 17:34:40,"> I tested and both of them would work without the flag set. I suggest that we remove that flag from `test_runner.py` for those tests since it doesn't affect the behaviour. What do you think?\n\nI have planned improvements for that, namely to not make tests dependent on `--descriptors`.\n\n> But as-is, the test FAILS without --descriptors set...?\n\nIt does not fail without `--descriptors`. ",https://github.com/bitcoin/bitcoin/pull/20226#issuecomment-768451009,768451009,
achow101,2021-01-27 17:34:57,re-ACK bbb34e91ffcaebd8c657ee961279c568eb6dd6d5,https://github.com/bitcoin/bitcoin/pull/20226#issuecomment-768451206,768451206,
jonatack,2021-01-27 20:55:07,"re-ACK 647b81b70938dc4dbcf32399c56f78be395c721a rebased to master, debug builds cleanly, reviewed diff since last review, tested with a descriptor wallet (and with a legacy wallet)\n\nhelp output\n```\nlistdescriptors\n\nList descriptors imported into a descriptor-enabled wallet.\nResult:\n[                               (json array) Response is an array of descriptor objects\n  {        ",https://github.com/bitcoin/bitcoin/pull/20226#issuecomment-768571073,768571073,
achow101,2021-01-27 22:32:43,"re-ACK 647b81b\n\nChanges since last just address the review comments.",https://github.com/bitcoin/bitcoin/pull/20226#issuecomment-768622625,768622625,
jonatack,2021-01-27 23:29:02,Needs a release note (can be done in a follow-up.),https://github.com/bitcoin/bitcoin/pull/20226#issuecomment-768646315,768646315,
meshcollider,2021-01-28 00:40:47,re-utACK,https://github.com/bitcoin/bitcoin/pull/20226#issuecomment-768673677,768673677,
luke-jr,2020-11-19 15:55:22,Should we consider returning inferred descriptors for older wallets?,https://github.com/bitcoin/bitcoin/pull/20226#discussion_r526998321,526998321,src/wallet/rpcdump.cpp
luke-jr,2020-11-19 15:55:52,"Probably should check the opposite and throw, rather than ignore?\n\n(Brings the indentation level down in the normal scenario too)",https://github.com/bitcoin/bitcoin/pull/20226#discussion_r526998777,526998777,src/wallet/rpcdump.cpp
luke-jr,2020-11-19 15:56:35,Should document whatever behaviour we end up with for non-descriptor wallets.,https://github.com/bitcoin/bitcoin/pull/20226#discussion_r526999333,526999333,src/wallet/rpcdump.cpp
S3RK,2020-12-03 10:06:48,Thanks for suggestion. Updated,https://github.com/bitcoin/bitcoin/pull/20226#discussion_r535044306,535044306,src/wallet/rpcdump.cpp
S3RK,2020-12-03 10:12:45,"I think it's better UX if we keep descriptors RPC separate and don't do any magic under the hood which could confuse user. From what I see the current approach is to allow users manually and explicitly convert their wallet to descriptors with separate command/rpc call.\n\nEdit: I looked at `migratewallet` rpc and it's complicated to infer a descriptor for legacy wallets. Another reason to not do",https://github.com/bitcoin/bitcoin/pull/20226#discussion_r535050621,535050621,src/wallet/rpcdump.cpp
S3RK,2020-12-03 10:13:33,For me it's kind of obvious and the error is clear. What do others think?,https://github.com/bitcoin/bitcoin/pull/20226#discussion_r535051443,535051443,src/wallet/rpcdump.cpp
promag,2020-12-05 16:22:17,I also think it's fine as it is although it doesn't hurt to add it. Or you could phrase like `List descriptors imported into a descriptor enabled wallet.`.,https://github.com/bitcoin/bitcoin/pull/20226#discussion_r536817183,536817183,src/wallet/rpcdump.cpp
S3RK,2020-12-10 13:03:43,Thanks. I've taken your suggestion and updated the description.,https://github.com/bitcoin/bitcoin/pull/20226#discussion_r540151613,540151613,src/wallet/rpcdump.cpp
achow101,2020-12-24 18:46:00,Agree that this should only be available for descriptor wallets.,https://github.com/bitcoin/bitcoin/pull/20226#discussion_r548693504,548693504,src/wallet/rpcdump.cpp
adamjonas,2021-01-21 21:27:04,"linter isn't liking this:\n`test/functional/wallet_listdescriptors.py:47:20: F632 use ==/!= to compare constant literals (str, bytes, int, float, tuple)`",https://github.com/bitcoin/bitcoin/pull/20226#discussion_r562207841,562207841,test/functional/wallet_listdescriptors.py
S3RK,2021-01-25 08:51:03,fixed,https://github.com/bitcoin/bitcoin/pull/20226#discussion_r563549842,563549842,test/functional/wallet_listdescriptors.py
jonatack,2021-01-27 18:27:54,"```suggestion\n        ""\nList descriptors imported into a descriptor-enabled wallet."",\n```",https://github.com/bitcoin/bitcoin/pull/20226#discussion_r565537789,565537789,src/wallet/rpcdump.cpp
jonatack,2021-01-27 18:33:14,"nit, could name this class `ListDescriptorsTest`",https://github.com/bitcoin/bitcoin/pull/20226#discussion_r565541206,565541206,test/functional/wallet_listdescriptors.py
jonatack,2021-01-27 18:41:02,"IIRC it's preferred for RPCs to return a JSON object rather than array nowadays.\n\nThis following can be done in a follow-up (if desired), can maybe return something like:\n```\n{\n  ""wallet_name"": ""str"",\n  ""descriptors"": [\n    {descriptor JSON objects}\n  ]\n  ""error"": (str, optional) error message, if any\n}\n```\nSee RPC upgradewallet help for an example.",https://github.com/bitcoin/bitcoin/pull/20226#discussion_r565546126,565546126,src/wallet/rpcdump.cpp
jonatack,2021-01-27 18:51:21,"A few `const` and clang format suggestions\n```diff\n-    auto active_spk_mans = wallet->GetActiveScriptPubKeyMans();\n-    for (const auto &spk_man : wallet->GetAllScriptPubKeyMans()) {\n-        auto desc_spk_man = dynamic_cast<DescriptorScriptPubKeyMan*>(spk_man);\n+    const auto active_spk_mans = wallet->GetActiveScriptPubKeyMans();\n+    for (const auto& spk_man : wallet->GetAllScriptP",https://github.com/bitcoin/bitcoin/pull/20226#discussion_r565552805,565552805,src/wallet/rpcdump.cpp
S3RK,2021-01-27 20:23:00,done,https://github.com/bitcoin/bitcoin/pull/20226#discussion_r565608524,565608524,src/wallet/rpcdump.cpp
S3RK,2021-01-27 20:23:28,I'll leave it for a follow-up,https://github.com/bitcoin/bitcoin/pull/20226#discussion_r565608783,565608783,src/wallet/rpcdump.cpp
S3RK,2021-01-27 20:23:33,done,https://github.com/bitcoin/bitcoin/pull/20226#discussion_r565608828,565608828,src/wallet/rpcdump.cpp
S3RK,2021-01-27 20:23:51,"nice catch, done",https://github.com/bitcoin/bitcoin/pull/20226#discussion_r565608987,565608987,test/functional/wallet_listdescriptors.py
S3RK,2021-02-02 08:37:03,#21063,https://github.com/bitcoin/bitcoin/pull/20226#discussion_r568413397,568413397,src/wallet/rpcdump.cpp
