laanwj,2014-01-14T14:34:16Z,@theuni do you maybe have suggestions on how to make static building possible again? (see above)\nMaybe we could add an configure flag for that or so?\n,https://github.com/bitcoin/bitcoin/pull/3536#issuecomment-32268887,32268887,
laanwj,2014-01-14T14:53:56Z,"After forcing static linking there is also a `-fPIC` problem on 64 bit. The static boost libraries on Ubuntu are built without `-fPIC/PIE/pie`, which gives a relocation conflict with bitcoin that is built with `-pie`.\n\n```\n/usr/bin/ld: /usr/lib/libboost_system.a(error_code.o): relocation R_X86_64_32 against `.rodata.str1.1' can not be used when making a shared object; recompile with -fPIC\n```\",https://github.com/bitcoin/bitcoin/pull/3536#issuecomment-32270545,32270545,
sipa,2014-01-14T14:55:25Z,"Assuming it builds, ACK. \nThe statically linked libraries issues needs to be fixed, but that seems independent from this PR.\n",https://github.com/bitcoin/bitcoin/pull/3536#issuecomment-32270682,32270682,
wtogami,2014-01-15T06:02:28Z,Would it be reasonable to make the deps in a separate .yml?  They don't change often and it would allow building the important part faster. \n,https://github.com/bitcoin/bitcoin/pull/3536#issuecomment-32337009,32337009,
laanwj,2014-01-15T08:26:14Z,"@wtogami Yes that makes sense, especially if it turns out that we have to build boost from scratch too to have static compilation + -pie.\nHowever I don't know how this dependency stuff will work with multi-arch builds. The dependency build will obviously produce a file per architecture, but can we use an architecture-specific input?\n\nEdit: I guess I can just put both architecture dependencies f",https://github.com/bitcoin/bitcoin/pull/3536#issuecomment-32342469,32342469,
laanwj,2014-01-15T10:51:09Z,In the new commit I've split off the dependency build for Linux.\n\nEdit: re-working to use ${GBUILD_BITS} and to not drop 32 and 64 bit builds on top of each other in the final output\n,https://github.com/bitcoin/bitcoin/pull/3536#issuecomment-32351276,32351276,
laanwj,2014-01-15T12:26:51Z,"OK should be ready for review/merge. It's able to build executables that an be used on Ubuntu 12.04 which can be called usable.\n\nAccording to readelf -d the end result relies on the following shared libraries, but these are all available in Ubuntu packages:\n\n```\n0x0000000000000001 (NEEDED)             Shared library: [libboost_system.so.1.46.1]\n0x0000000000000001 (NEEDED)             Shared ",https://github.com/bitcoin/bitcoin/pull/3536#issuecomment-32357200,32357200,
BitcoinPullTester,2014-01-15T12:52:53Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/04257151b14da2a7dbfce8fd6f8d5d5835169ea1 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/3536#issuecomment-32358695,32358695,
wtogami,2014-01-15T13:32:12Z,Dynamic openssl makes prohibitively difficult for Red Hat and Fedora users to use the official binaries.  Please revert that change.\n,https://github.com/bitcoin/bitcoin/pull/3536#issuecomment-32361199,32361199,
laanwj,2014-01-15T13:35:07Z,"@wtogami I haven't changed that! I'm just trying to improve what is there.\n\nThat's a good argument for using our own OpenSSL but we _NEVER_ built our own OpenSSL for Linux yet. This is extra work, not a reversion.\n",https://github.com/bitcoin/bitcoin/pull/3536#issuecomment-32361421,32361421,
sipa,2014-01-15T13:43:30Z,"It's a regression caused by the autotools switch, I presume. Causing problems for RHEL/Fedora is a good reason for statically linking OpenSSL, but this PR has nothing to do with that.\n",https://github.com/bitcoin/bitcoin/pull/3536#issuecomment-32362021,32362021,
theuni,2014-01-15T21:19:08Z,"I'm not sure how to address the comments here without first discussing what the goals are. Is the goal a static universal binary? Or a distro-friendly one?\n\nAs for producing a static build, that can happen via LDFLAGS, or by ensuring that no shared libs exist in searched linker paths. The specifics are quite environment specific, not to be handled by our buildsystem imo.\n",https://github.com/bitcoin/bitcoin/pull/3536#issuecomment-32416094,32416094,
wtogami,2014-01-16T00:20:33Z,Dynamic qt4 is well tested and proven to work on all Linux distros.\n\nDynamic openssl is impossible due to RHEL/Fedora.  Static openssl is the only way the official binary can work on all distros.\n,https://github.com/bitcoin/bitcoin/pull/3536#issuecomment-32430624,32430624,
