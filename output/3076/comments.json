[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26091009",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#issuecomment-26091009",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3076",
    "id": 26091009,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDkxMDA5",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-10T20:56:11Z",
    "updated_at": "2013-10-10T20:56:11Z",
    "author_association": "MEMBER",
    "body": "phexdigit is used in bignum.h too, this can share the same definition now\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26091009/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26114705",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#issuecomment-26114705",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3076",
    "id": 26114705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTE0NzA1",
    "user": {
      "login": "lano1106",
      "id": 4829131,
      "node_id": "MDQ6VXNlcjQ4MjkxMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4829131?u=f4221fb4f2cc37d0271867b05d6b64a0f5aec4bb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lano1106",
      "html_url": "https://github.com/lano1106",
      "followers_url": "https://api.github.com/users/lano1106/followers",
      "following_url": "https://api.github.com/users/lano1106/following{/other_user}",
      "gists_url": "https://api.github.com/users/lano1106/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lano1106/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lano1106/subscriptions",
      "organizations_url": "https://api.github.com/users/lano1106/orgs",
      "repos_url": "https://api.github.com/users/lano1106/repos",
      "events_url": "https://api.github.com/users/lano1106/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lano1106/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-11T04:56:54Z",
    "updated_at": "2013-10-11T04:56:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "if you like the idea of this pull request, I'll create a v2 that makes bignum use the same array.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26114705/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26672133",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#issuecomment-26672133",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3076",
    "id": 26672133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjcyMTMz",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T12:31:24Z",
    "updated_at": "2013-10-20T12:31:51Z",
    "author_association": "MEMBER",
    "body": "Some further comments then IMO this can be merged\n\nuint256.h:\n\n```\ninline signed char HexDigit(unsigned char c)\nextern const signed char p_util_hexdigit[256];\n```\n- this function and data structure declaration should be moved to `util.h`, because `util.c` is where the implementation is. Any reason you did this differently?\n- the argument can be a normal `char` instead of `signed char`, so the cast is done inside the function instead of on all call sites. Return type should  remain `signed char` as you said.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26672133/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26915390",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#issuecomment-26915390",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3076",
    "id": 26915390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTE1Mzkw",
    "user": {
      "login": "lano1106",
      "id": 4829131,
      "node_id": "MDQ6VXNlcjQ4MjkxMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4829131?u=f4221fb4f2cc37d0271867b05d6b64a0f5aec4bb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lano1106",
      "html_url": "https://github.com/lano1106",
      "followers_url": "https://api.github.com/users/lano1106/followers",
      "following_url": "https://api.github.com/users/lano1106/following{/other_user}",
      "gists_url": "https://api.github.com/users/lano1106/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lano1106/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lano1106/subscriptions",
      "organizations_url": "https://api.github.com/users/lano1106/orgs",
      "repos_url": "https://api.github.com/users/lano1106/repos",
      "events_url": "https://api.github.com/users/lano1106/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lano1106/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-23T15:34:04Z",
    "updated_at": "2013-10-23T15:34:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Wladimir,\n\nI agree with changing input param type.\n\nHowever, the function cannot be moved in util.h Why? Because this would create a circular dependency.\n\nuint256.h would need to include util.h and util.h already include uint256.h. This is arguable that in that case, the array definition could then be moved into a new cpp file uint256.cpp which do not exists right now. I have decided to not go there but feel free to ask if you feel that this would be important.\n\nAnother option is to create 2 new files just for that:\n\nhexdigit.h/cpp\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26915390/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/27070656",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#issuecomment-27070656",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3076",
    "id": 27070656,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDcwNjU2",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-25T07:32:14Z",
    "updated_at": "2013-10-25T07:32:14Z",
    "author_association": "MEMBER",
    "body": "I understand... bitcoin has always been rife with circular dependencies and I wouldn't want to reintroduce one.\nCreating two new files is overkill, most of the core devs don't like to have many small header files (though it would be more modular, it would also be harder to remember where things are, and increase the file-to-file switching needed during development).\n\nACK after squashing into one commit\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/27070656/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/27187377",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#issuecomment-27187377",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3076",
    "id": 27187377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTg3Mzc3",
    "user": {
      "login": "lano1106",
      "id": 4829131,
      "node_id": "MDQ6VXNlcjQ4MjkxMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4829131?u=f4221fb4f2cc37d0271867b05d6b64a0f5aec4bb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lano1106",
      "html_url": "https://github.com/lano1106",
      "followers_url": "https://api.github.com/users/lano1106/followers",
      "following_url": "https://api.github.com/users/lano1106/following{/other_user}",
      "gists_url": "https://api.github.com/users/lano1106/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lano1106/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lano1106/subscriptions",
      "organizations_url": "https://api.github.com/users/lano1106/orgs",
      "repos_url": "https://api.github.com/users/lano1106/repos",
      "events_url": "https://api.github.com/users/lano1106/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lano1106/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-28T03:12:18Z",
    "updated_at": "2013-10-28T03:12:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Wladimir,\n\nthanks for contributing to my git education. It has been my first commit squashing ever :-)\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/27187377/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/27187848",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#issuecomment-27187848",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3076",
    "id": 27187848,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTg3ODQ4",
    "user": {
      "login": "BitcoinPullTester",
      "id": 2110907,
      "node_id": "MDQ6VXNlcjIxMTA5MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2110907?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BitcoinPullTester",
      "html_url": "https://github.com/BitcoinPullTester",
      "followers_url": "https://api.github.com/users/BitcoinPullTester/followers",
      "following_url": "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
      "gists_url": "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BitcoinPullTester/subscriptions",
      "organizations_url": "https://api.github.com/users/BitcoinPullTester/orgs",
      "repos_url": "https://api.github.com/users/BitcoinPullTester/repos",
      "events_url": "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BitcoinPullTester/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-28T03:35:34Z",
    "updated_at": "2013-10-28T03:35:34Z",
    "author_association": "NONE",
    "body": "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f171ec0c7d084b6bb163d1466edd814cf4dcbc93 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/27187848/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6897600",
    "pull_request_review_id": null,
    "id": 6897600,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4OTc2MDA=",
    "diff_hunk": "@@ -317,19 +321,18 @@ class base_uint\n             psz += 2;\n \n         // hex string to uint\n-        static const unsigned char phexdigit[256] = { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,1,2,3,4,5,6,7,8,9,0,0,0,0,0,0, 0,0xa,0xb,0xc,0xd,0xe,0xf,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0xa,0xb,0xc,0xd,0xe,0xf,0,0,0,0,0,0,0,0,0 };\n         const char* pbegin = psz;\n-        while (phexdigit[(unsigned char)*psz] || *psz == '0')\n+        while (::HexDigit((unsigned char)*psz) != -1)\n             psz++;\n         psz--;\n         unsigned char* p1 = (unsigned char*)pn;\n         unsigned char* pend = p1 + WIDTH * 4;\n         while (psz >= pbegin && p1 < pend)\n         {\n-            *p1 = phexdigit[(unsigned char)*psz--];\n+            *p1 = ::HexDigit((unsigned char)*psz--);\n             if (psz >= pbegin)\n             {\n-                *p1 |= (phexdigit[(unsigned char)*psz--] << 4);\n+                *p1 |= (::HexDigit((unsigned char)*psz--) << 4);",
    "path": "src/uint256.h",
    "position": null,
    "original_position": 42,
    "commit_id": "f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
    "original_commit_id": "919f1aa042f9831eea66b96a509192d076f77dfd",
    "user": {
      "login": "lano1106",
      "id": 4829131,
      "node_id": "MDQ6VXNlcjQ4MjkxMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4829131?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lano1106",
      "html_url": "https://github.com/lano1106",
      "followers_url": "https://api.github.com/users/lano1106/followers",
      "following_url": "https://api.github.com/users/lano1106/following{/other_user}",
      "gists_url": "https://api.github.com/users/lano1106/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lano1106/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lano1106/subscriptions",
      "organizations_url": "https://api.github.com/users/lano1106/orgs",
      "repos_url": "https://api.github.com/users/lano1106/repos",
      "events_url": "https://api.github.com/users/lano1106/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lano1106/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I have a small concern about the return type (signed char) that is right shifted by 4 bits in relation to the sign bit.\nUnit test show that it is ok but I am not sure that this is fully portable.\n\nUnless language does an implicit integer promotion, maybe we could help by changing return type to int16 or just int.\n",
    "created_at": "2013-10-10T19:22:03Z",
    "updated_at": "2013-10-28T03:10:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6897600",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6897600"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6897600"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6897600/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 335,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6900464",
    "pull_request_review_id": null,
    "id": 6900464,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDA0NjQ=",
    "diff_hunk": "@@ -317,19 +321,18 @@ class base_uint\n             psz += 2;\n \n         // hex string to uint\n-        static const unsigned char phexdigit[256] = { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,1,2,3,4,5,6,7,8,9,0,0,0,0,0,0, 0,0xa,0xb,0xc,0xd,0xe,0xf,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0xa,0xb,0xc,0xd,0xe,0xf,0,0,0,0,0,0,0,0,0 };\n         const char* pbegin = psz;\n-        while (phexdigit[(unsigned char)*psz] || *psz == '0')\n+        while (::HexDigit((unsigned char)*psz) != -1)\n             psz++;\n         psz--;\n         unsigned char* p1 = (unsigned char*)pn;\n         unsigned char* pend = p1 + WIDTH * 4;\n         while (psz >= pbegin && p1 < pend)\n         {\n-            *p1 = phexdigit[(unsigned char)*psz--];\n+            *p1 = ::HexDigit((unsigned char)*psz--);\n             if (psz >= pbegin)\n             {\n-                *p1 |= (phexdigit[(unsigned char)*psz--] << 4);\n+                *p1 |= (::HexDigit((unsigned char)*psz--) << 4);",
    "path": "src/uint256.h",
    "position": null,
    "original_position": 42,
    "commit_id": "f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
    "original_commit_id": "919f1aa042f9831eea66b96a509192d076f77dfd",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, he is returning a _signed_ char from HexDigit, whereas unsigned chars are used in the rest of the logic. I think it's a typo?\n",
    "created_at": "2013-10-10T20:53:50Z",
    "updated_at": "2013-10-28T03:10:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6900464",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6900464"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6900464"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6900464/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 335,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6900625",
    "pull_request_review_id": null,
    "id": 6900625,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDA2MjU=",
    "diff_hunk": "@@ -14,7 +14,12 @@\n \n typedef long long  int64;\n typedef unsigned long long  uint64;\n+extern const signed char p_util_hexdigit[256]; // defined in util.cpp\n \n+inline signed char HexDigit(unsigned char c)\n+{\n+    return p_util_hexdigit[c];",
    "path": "src/uint256.h",
    "position": null,
    "original_position": 8,
    "commit_id": "f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
    "original_commit_id": "919f1aa042f9831eea66b96a509192d076f77dfd",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This must return 0 when p_util_hexdigit[c] < 0, otherwise the functionality is changed.\n(the hexdigit in util.cpp has -1 for non-hex characters whereas hexdigit in uint256.h and bignum.h has zeros)\n",
    "created_at": "2013-10-10T20:58:28Z",
    "updated_at": "2013-10-28T03:10:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6900625",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6900625"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6900625"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6900625/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 21,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6907871",
    "pull_request_review_id": null,
    "id": 6907871,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDc4NzE=",
    "diff_hunk": "@@ -317,19 +321,18 @@ class base_uint\n             psz += 2;\n \n         // hex string to uint\n-        static const unsigned char phexdigit[256] = { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,1,2,3,4,5,6,7,8,9,0,0,0,0,0,0, 0,0xa,0xb,0xc,0xd,0xe,0xf,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0xa,0xb,0xc,0xd,0xe,0xf,0,0,0,0,0,0,0,0,0 };\n         const char* pbegin = psz;\n-        while (phexdigit[(unsigned char)*psz] || *psz == '0')\n+        while (::HexDigit((unsigned char)*psz) != -1)\n             psz++;\n         psz--;\n         unsigned char* p1 = (unsigned char*)pn;\n         unsigned char* pend = p1 + WIDTH * 4;\n         while (psz >= pbegin && p1 < pend)\n         {\n-            *p1 = phexdigit[(unsigned char)*psz--];\n+            *p1 = ::HexDigit((unsigned char)*psz--);\n             if (psz >= pbegin)\n             {\n-                *p1 |= (phexdigit[(unsigned char)*psz--] << 4);\n+                *p1 |= (::HexDigit((unsigned char)*psz--) << 4);",
    "path": "src/uint256.h",
    "position": null,
    "original_position": 42,
    "commit_id": "f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
    "original_commit_id": "919f1aa042f9831eea66b96a509192d076f77dfd",
    "user": {
      "login": "lano1106",
      "id": 4829131,
      "node_id": "MDQ6VXNlcjQ4MjkxMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4829131?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lano1106",
      "html_url": "https://github.com/lano1106",
      "followers_url": "https://api.github.com/users/lano1106/followers",
      "following_url": "https://api.github.com/users/lano1106/following{/other_user}",
      "gists_url": "https://api.github.com/users/lano1106/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lano1106/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lano1106/subscriptions",
      "organizations_url": "https://api.github.com/users/lano1106/orgs",
      "repos_url": "https://api.github.com/users/lano1106/repos",
      "events_url": "https://api.github.com/users/lano1106/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lano1106/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No this is intentional. I have kept the original type from the util.cpp array type. It is signed and -1 as a special value to indicate not an hex char.\n\nLet me rephrase the concern. As soon as the sign bit of an integer is on after doing bit manips, you have a negative number that will turn on more bits to 1 if you store the value into a bigger int type. think about -1.\n\nCan't give a specific example of problem from that but I have the vague impression of having been bitten by that one in the past.\n\nBy having a signed char array, this let you use -1 as a reserved value (0 is valid) and minimize its size. By having the return type bigger (int16 or int) this protect you against having surprises from the sign bit when manipulating the result.\n\nright now it is all theorical as the code is tested and works as expected. just highlighting the risk and propose a simple way to mitigate it.\n",
    "created_at": "2013-10-11T04:50:05Z",
    "updated_at": "2013-10-28T03:10:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6907871",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6907871"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6907871"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6907871/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 335,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6907927",
    "pull_request_review_id": null,
    "id": 6907927,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDc5Mjc=",
    "diff_hunk": "@@ -14,7 +14,12 @@\n \n typedef long long  int64;\n typedef unsigned long long  uint64;\n+extern const signed char p_util_hexdigit[256]; // defined in util.cpp\n \n+inline signed char HexDigit(unsigned char c)\n+{\n+    return p_util_hexdigit[c];",
    "path": "src/uint256.h",
    "position": null,
    "original_position": 8,
    "commit_id": "f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
    "original_commit_id": "919f1aa042f9831eea66b96a509192d076f77dfd",
    "user": {
      "login": "lano1106",
      "id": 4829131,
      "node_id": "MDQ6VXNlcjQ4MjkxMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4829131?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lano1106",
      "html_url": "https://github.com/lano1106",
      "followers_url": "https://api.github.com/users/lano1106/followers",
      "following_url": "https://api.github.com/users/lano1106/following{/other_user}",
      "gists_url": "https://api.github.com/users/lano1106/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lano1106/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lano1106/subscriptions",
      "organizations_url": "https://api.github.com/users/lano1106/orgs",
      "repos_url": "https://api.github.com/users/lano1106/repos",
      "events_url": "https://api.github.com/users/lano1106/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lano1106/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I prefer how it was done in util.cpp as it allows you to discriminate between the char '0' and an invalid hex char.\nNote that I have modified the uint256.h code in consequence when it search for the end of the number.\n",
    "created_at": "2013-10-11T04:55:33Z",
    "updated_at": "2013-10-28T03:10:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6907927",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6907927"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6907927"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6907927/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 21,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6908893",
    "pull_request_review_id": null,
    "id": 6908893,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDg4OTM=",
    "diff_hunk": "@@ -14,7 +14,12 @@\n \n typedef long long  int64;\n typedef unsigned long long  uint64;\n+extern const signed char p_util_hexdigit[256]; // defined in util.cpp\n \n+inline signed char HexDigit(unsigned char c)\n+{\n+    return p_util_hexdigit[c];",
    "path": "src/uint256.h",
    "position": null,
    "original_position": 8,
    "commit_id": "f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
    "original_commit_id": "919f1aa042f9831eea66b96a509192d076f77dfd",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Sure, I agree that is generally more useful, but if you intend on keeping it this way, you need to check for the -1 value at the caller site .\n\nIf you return a special error token can't just bitshift and or it into the target value without checking. If you return 0 you can because it's a no-op/ignore. And as SetHex has no way to return parsing errors the only way is to ignore parsing errors.\n",
    "created_at": "2013-10-11T07:01:06Z",
    "updated_at": "2013-10-28T03:10:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6908893",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6908893"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6908893"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6908893/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 21,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6908917",
    "pull_request_review_id": null,
    "id": 6908917,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MDg5MTc=",
    "diff_hunk": "@@ -317,19 +321,18 @@ class base_uint\n             psz += 2;\n \n         // hex string to uint\n-        static const unsigned char phexdigit[256] = { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,1,2,3,4,5,6,7,8,9,0,0,0,0,0,0, 0,0xa,0xb,0xc,0xd,0xe,0xf,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0xa,0xb,0xc,0xd,0xe,0xf,0,0,0,0,0,0,0,0,0 };\n         const char* pbegin = psz;\n-        while (phexdigit[(unsigned char)*psz] || *psz == '0')\n+        while (::HexDigit((unsigned char)*psz) != -1)\n             psz++;\n         psz--;\n         unsigned char* p1 = (unsigned char*)pn;\n         unsigned char* pend = p1 + WIDTH * 4;\n         while (psz >= pbegin && p1 < pend)\n         {\n-            *p1 = phexdigit[(unsigned char)*psz--];\n+            *p1 = ::HexDigit((unsigned char)*psz--);\n             if (psz >= pbegin)\n             {\n-                *p1 |= (phexdigit[(unsigned char)*psz--] << 4);\n+                *p1 |= (::HexDigit((unsigned char)*psz--) << 4);",
    "path": "src/uint256.h",
    "position": null,
    "original_position": 42,
    "commit_id": "f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
    "original_commit_id": "919f1aa042f9831eea66b96a509192d076f77dfd",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No, this is far from theoretical. Any invalid hex character will return -1 and thus cause things to go haywire.\nYou need to _either_ check for -1 here or make sure that HexDigit returns 0 in case of an invalid hexchar. See my comment below.\n",
    "created_at": "2013-10-11T07:03:11Z",
    "updated_at": "2013-10-28T03:10:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6908917",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6908917"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6908917"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6908917/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 335,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6911941",
    "pull_request_review_id": null,
    "id": 6911941,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MTE5NDE=",
    "diff_hunk": "@@ -305,8 +310,7 @@ class base_uint\n \n     void SetHex(const char* psz)\n     {\n-        for (int i = 0; i < WIDTH; i++)\n-            pn[i] = 0;\n+        memset(pn,0,sizeof(pn));",
    "path": "src/uint256.h",
    "position": 19,
    "original_position": 19,
    "commit_id": "f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
    "original_commit_id": "919f1aa042f9831eea66b96a509192d076f77dfd",
    "user": {
      "login": "Diapolo",
      "id": 1419649,
      "node_id": "MDQ6VXNlcjE0MTk2NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Diapolo",
      "html_url": "https://github.com/Diapolo",
      "followers_url": "https://api.github.com/users/Diapolo/followers",
      "following_url": "https://api.github.com/users/Diapolo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Diapolo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
      "organizations_url": "https://api.github.com/users/Diapolo/orgs",
      "repos_url": "https://api.github.com/users/Diapolo/repos",
      "events_url": "https://api.github.com/users/Diapolo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Diapolo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "An optimizing compiler could just put this away, right? But I guess the same is true for the loop...\n",
    "created_at": "2013-10-11T10:24:46Z",
    "updated_at": "2013-10-28T03:10:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6911941",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6911941"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6911941"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6911941/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 313,
    "original_line": 313,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6912533",
    "pull_request_review_id": null,
    "id": 6912533,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MTI1MzM=",
    "diff_hunk": "@@ -305,8 +310,7 @@ class base_uint\n \n     void SetHex(const char* psz)\n     {\n-        for (int i = 0; i < WIDTH; i++)\n-            pn[i] = 0;\n+        memset(pn,0,sizeof(pn));",
    "path": "src/uint256.h",
    "position": 19,
    "original_position": 19,
    "commit_id": "f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
    "original_commit_id": "919f1aa042f9831eea66b96a509192d076f77dfd",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "An optimizing compiler could remove the zeroing but only if it can prove that the rest of the function still does the same without it. It's not an issue here.\n",
    "created_at": "2013-10-11T11:03:50Z",
    "updated_at": "2013-10-28T03:10:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6912533",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6912533"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6912533"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6912533/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 313,
    "original_line": 313,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6917505",
    "pull_request_review_id": null,
    "id": 6917505,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MTc1MDU=",
    "diff_hunk": "@@ -14,7 +14,12 @@\n \n typedef long long  int64;\n typedef unsigned long long  uint64;\n+extern const signed char p_util_hexdigit[256]; // defined in util.cpp\n \n+inline signed char HexDigit(unsigned char c)\n+{\n+    return p_util_hexdigit[c];",
    "path": "src/uint256.h",
    "position": null,
    "original_position": 8,
    "commit_id": "f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
    "original_commit_id": "919f1aa042f9831eea66b96a509192d076f77dfd",
    "user": {
      "login": "lano1106",
      "id": 4829131,
      "node_id": "MDQ6VXNlcjQ4MjkxMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4829131?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lano1106",
      "html_url": "https://github.com/lano1106",
      "followers_url": "https://api.github.com/users/lano1106/followers",
      "following_url": "https://api.github.com/users/lano1106/following{/other_user}",
      "gists_url": "https://api.github.com/users/lano1106/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lano1106/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lano1106/subscriptions",
      "organizations_url": "https://api.github.com/users/lano1106/orgs",
      "repos_url": "https://api.github.com/users/lano1106/repos",
      "events_url": "https://api.github.com/users/lano1106/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lano1106/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "laanwj,\n\nI absolutle agree with you and it is done exactly as you say it should.\n\nin SetHex():\n1. while loop to find the end of the hex str by checking for first char that returns -1.\n2. Then when the string is processed backward to convert BE -> LE, there is no need to check again for -1 as it is impossible that a char that previously did not return -1 does otherwise in subsequent calls.\n\nAgree?\n",
    "created_at": "2013-10-11T15:08:21Z",
    "updated_at": "2013-10-28T03:10:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6917505",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6917505"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6917505"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6917505/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 21,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6917883",
    "pull_request_review_id": null,
    "id": 6917883,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MTc4ODM=",
    "diff_hunk": "@@ -305,8 +310,7 @@ class base_uint\n \n     void SetHex(const char* psz)\n     {\n-        for (int i = 0; i < WIDTH; i++)\n-            pn[i] = 0;\n+        memset(pn,0,sizeof(pn));",
    "path": "src/uint256.h",
    "position": 19,
    "original_position": 19,
    "commit_id": "f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
    "original_commit_id": "919f1aa042f9831eea66b96a509192d076f77dfd",
    "user": {
      "login": "lano1106",
      "id": 4829131,
      "node_id": "MDQ6VXNlcjQ4MjkxMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4829131?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lano1106",
      "html_url": "https://github.com/lano1106",
      "followers_url": "https://api.github.com/users/lano1106/followers",
      "following_url": "https://api.github.com/users/lano1106/following{/other_user}",
      "gists_url": "https://api.github.com/users/lano1106/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lano1106/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lano1106/subscriptions",
      "organizations_url": "https://api.github.com/users/lano1106/orgs",
      "repos_url": "https://api.github.com/users/lano1106/repos",
      "events_url": "https://api.github.com/users/lano1106/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lano1106/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Diapolo, you are right. with -O2 the for loop or the memset generates identical code.\n\nIt is then only a matter of taste. The memset has the merit of being more compact.\n\nTell me which way you want the code to be in order to accept the request. I'll do the change\n",
    "created_at": "2013-10-11T15:20:02Z",
    "updated_at": "2013-10-28T03:10:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6917883",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6917883"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6917883"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6917883/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 313,
    "original_line": 313,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6920479",
    "pull_request_review_id": null,
    "id": 6920479,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MjA0Nzk=",
    "diff_hunk": "@@ -317,19 +321,18 @@ class base_uint\n             psz += 2;\n \n         // hex string to uint\n-        static const unsigned char phexdigit[256] = { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,1,2,3,4,5,6,7,8,9,0,0,0,0,0,0, 0,0xa,0xb,0xc,0xd,0xe,0xf,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0xa,0xb,0xc,0xd,0xe,0xf,0,0,0,0,0,0,0,0,0 };\n         const char* pbegin = psz;\n-        while (phexdigit[(unsigned char)*psz] || *psz == '0')\n+        while (::HexDigit((unsigned char)*psz) != -1)\n             psz++;\n         psz--;\n         unsigned char* p1 = (unsigned char*)pn;\n         unsigned char* pend = p1 + WIDTH * 4;\n         while (psz >= pbegin && p1 < pend)\n         {\n-            *p1 = phexdigit[(unsigned char)*psz--];\n+            *p1 = ::HexDigit((unsigned char)*psz--);\n             if (psz >= pbegin)\n             {\n-                *p1 |= (phexdigit[(unsigned char)*psz--] << 4);\n+                *p1 |= (::HexDigit((unsigned char)*psz--) << 4);",
    "path": "src/uint256.h",
    "position": null,
    "original_position": 42,
    "commit_id": "f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
    "original_commit_id": "919f1aa042f9831eea66b96a509192d076f77dfd",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Agreed. So any parse errors will have been caught on first pass. I hadn't noticed that.\n\nIn that case adding an explicit cast of the result to (unsigned char) should be enough to make sure the shift is correct.\n",
    "created_at": "2013-10-11T17:00:06Z",
    "updated_at": "2013-10-28T03:10:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6920479",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6920479"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3076#discussion_r6920479"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3076"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6920479/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 335,
    "side": "RIGHT"
  }
]