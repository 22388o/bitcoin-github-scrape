[
  {
    "sha": "f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMTcxZWMwYzdkMDg0YjZiYjE2M2QxNDY2ZWRkODE0Y2Y0ZGNiYzkz",
    "commit": {
      "author": {
        "name": "Olivier Langlois",
        "email": "olivier@olivierlanglois.net",
        "date": "2013-10-10T16:35:51Z"
      },
      "committer": {
        "name": "Olivier Langlois",
        "email": "olivier@olivierlanglois.net",
        "date": "2013-10-28T03:04:52Z"
      },
      "message": "Make util phexdigit array reusable\n\nclass template base_uint had its own private lookup table.\nThis is saving 256 bytes per instantiation.\n\nThe result is not spectacular as bitcoin-qt has only shrinked of\nabout 1Kb but it is still valid improvement.\n\nAlso, I have replaced a for loop with a memset() call.\n\nMade CBigNum::SetHex() use the new HexDigit() function.\n\nSigned-off-by: Olivier Langlois <olivier@olivierlanglois.net>",
      "tree": {
        "sha": "cb0708afc624eeb68a0b0b5db0aca19e9cc58984",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cb0708afc624eeb68a0b0b5db0aca19e9cc58984"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f171ec0c7d084b6bb163d1466edd814cf4dcbc93/comments",
    "author": {
      "login": "lano1106",
      "id": 4829131,
      "node_id": "MDQ6VXNlcjQ4MjkxMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4829131?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lano1106",
      "html_url": "https://github.com/lano1106",
      "followers_url": "https://api.github.com/users/lano1106/followers",
      "following_url": "https://api.github.com/users/lano1106/following{/other_user}",
      "gists_url": "https://api.github.com/users/lano1106/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lano1106/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lano1106/subscriptions",
      "organizations_url": "https://api.github.com/users/lano1106/orgs",
      "repos_url": "https://api.github.com/users/lano1106/repos",
      "events_url": "https://api.github.com/users/lano1106/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lano1106/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "lano1106",
      "id": 4829131,
      "node_id": "MDQ6VXNlcjQ4MjkxMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4829131?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lano1106",
      "html_url": "https://github.com/lano1106",
      "followers_url": "https://api.github.com/users/lano1106/followers",
      "following_url": "https://api.github.com/users/lano1106/following{/other_user}",
      "gists_url": "https://api.github.com/users/lano1106/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lano1106/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lano1106/subscriptions",
      "organizations_url": "https://api.github.com/users/lano1106/orgs",
      "repos_url": "https://api.github.com/users/lano1106/repos",
      "events_url": "https://api.github.com/users/lano1106/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lano1106/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "15b48ab03612952b355cdd411cc541668d147bfb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/15b48ab03612952b355cdd411cc541668d147bfb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/15b48ab03612952b355cdd411cc541668d147bfb"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 34,
      "deletions": 14
    },
    "files": [
      {
        "sha": "98655cc0e9995ac40bf3482cd2fd81f0c53a0f53",
        "filename": "src/bignum.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f171ec0c7d084b6bb163d1466edd814cf4dcbc93/src/bignum.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f171ec0c7d084b6bb163d1466edd814cf4dcbc93/src/bignum.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bignum.h?ref=f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
        "patch": "@@ -347,13 +347,13 @@ class CBigNum : public BIGNUM\n             psz++;\n \n         // hex string to bignum\n-        static const signed char phexdigit[256] = { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,1,2,3,4,5,6,7,8,9,0,0,0,0,0,0, 0,0xa,0xb,0xc,0xd,0xe,0xf,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0xa,0xb,0xc,0xd,0xe,0xf,0,0,0,0,0,0,0,0,0 };\n         *this = 0;\n-        while (isxdigit(*psz))\n+        int n;\n+        while ((n = HexDigit(*psz)) != -1)\n         {\n             *this <<= 4;\n-            int n = phexdigit[(unsigned char)*psz++];\n             *this += n;\n+            ++psz;\n         }\n         if (fNegative)\n             *this = 0 - *this;"
      },
      {
        "sha": "f16c26fd1841a6a67dccba9f1ecbd758ba705ef5",
        "filename": "src/test/bignum_tests.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f171ec0c7d084b6bb163d1466edd814cf4dcbc93/src/test/bignum_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f171ec0c7d084b6bb163d1466edd814cf4dcbc93/src/test/bignum_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bignum_tests.cpp?ref=f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
        "patch": "@@ -175,4 +175,12 @@ BOOST_AUTO_TEST_CASE(bignum_SetCompact)\n     BOOST_CHECK_EQUAL(num.GetCompact(), 0xff123456U);\n }\n \n+BOOST_AUTO_TEST_CASE(bignum_SetHex)\n+{\n+    std::string hexStr = \"deecf97fd890808b9cc0f1b6a3e7a60b400f52710e6ad075b1340755bfa58cc9\";\n+    CBigNum num;\n+    num.SetHex(hexStr);\n+    BOOST_CHECK_EQUAL(num.GetHex(), hexStr);\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "e34efcc47eebc705e340c39da2c6b1b030e94b80",
        "filename": "src/test/uint256_tests.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f171ec0c7d084b6bb163d1466edd814cf4dcbc93/src/test/uint256_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f171ec0c7d084b6bb163d1466edd814cf4dcbc93/src/test/uint256_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/uint256_tests.cpp?ref=f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
        "patch": "@@ -1,6 +1,7 @@\n #include <boost/test/unit_test.hpp>\n \n #include \"uint256.h\"\n+#include <string>\n \n BOOST_AUTO_TEST_SUITE(uint256_tests)\n \n@@ -15,4 +16,12 @@ BOOST_AUTO_TEST_CASE(uint256_equality)\n     BOOST_CHECK(num1+num2 == num3+num2);\n }\n \n+BOOST_AUTO_TEST_CASE(uint256_hex)\n+{\n+    std::string hexStr = \"d35583ed493a5eee756931353144f558e6a9ab3ad6024a63ced7f10daf7faad9\";\n+    uint256 num1;\n+    num1.SetHex(hexStr);\n+    BOOST_CHECK(num1.GetHex() == hexStr);\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "562426a0d86970af3bbbe3f811b0d1c41fa397b3",
        "filename": "src/uint256.h",
        "status": "modified",
        "additions": 9,
        "deletions": 6,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f171ec0c7d084b6bb163d1466edd814cf4dcbc93/src/uint256.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f171ec0c7d084b6bb163d1466edd814cf4dcbc93/src/uint256.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/uint256.h?ref=f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
        "patch": "@@ -14,7 +14,12 @@\n \n typedef long long  int64;\n typedef unsigned long long  uint64;\n+extern const signed char p_util_hexdigit[256]; // defined in util.cpp\n \n+inline signed char HexDigit(char c)\n+{\n+    return p_util_hexdigit[(unsigned char)c];\n+}\n \n inline int Testuint256AdHoc(std::vector<std::string> vArg);\n \n@@ -305,8 +310,7 @@ class base_uint\n \n     void SetHex(const char* psz)\n     {\n-        for (int i = 0; i < WIDTH; i++)\n-            pn[i] = 0;\n+        memset(pn,0,sizeof(pn));\n \n         // skip leading spaces\n         while (isspace(*psz))\n@@ -317,19 +321,18 @@ class base_uint\n             psz += 2;\n \n         // hex string to uint\n-        static const unsigned char phexdigit[256] = { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,1,2,3,4,5,6,7,8,9,0,0,0,0,0,0, 0,0xa,0xb,0xc,0xd,0xe,0xf,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0xa,0xb,0xc,0xd,0xe,0xf,0,0,0,0,0,0,0,0,0 };\n         const char* pbegin = psz;\n-        while (phexdigit[(unsigned char)*psz] || *psz == '0')\n+        while (::HexDigit(*psz) != -1)\n             psz++;\n         psz--;\n         unsigned char* p1 = (unsigned char*)pn;\n         unsigned char* pend = p1 + WIDTH * 4;\n         while (psz >= pbegin && p1 < pend)\n         {\n-            *p1 = phexdigit[(unsigned char)*psz--];\n+            *p1 = ::HexDigit(*psz--);\n             if (psz >= pbegin)\n             {\n-                *p1 |= (phexdigit[(unsigned char)*psz--] << 4);\n+                *p1 |= ((unsigned char)::HexDigit(*psz--) << 4);\n                 p1++;\n             }\n         }"
      },
      {
        "sha": "e0b738dcc6b0b14610b65bab50b71d21a234ab24",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f171ec0c7d084b6bb163d1466edd814cf4dcbc93/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f171ec0c7d084b6bb163d1466edd814cf4dcbc93/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=f171ec0c7d084b6bb163d1466edd814cf4dcbc93",
        "patch": "@@ -455,7 +455,7 @@ bool ParseMoney(const char* pszIn, int64& nRet)\n }\n \n \n-static const signed char phexdigit[256] =\n+const signed char p_util_hexdigit[256] =\n { -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,\n   -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,\n   -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,\n@@ -475,9 +475,9 @@ static const signed char phexdigit[256] =\n \n bool IsHex(const string& str)\n {\n-    BOOST_FOREACH(unsigned char c, str)\n+    BOOST_FOREACH(char c, str)\n     {\n-        if (phexdigit[c] < 0)\n+        if (HexDigit(c) < 0)\n             return false;\n     }\n     return (str.size() > 0) && (str.size()%2 == 0);\n@@ -491,11 +491,11 @@ vector<unsigned char> ParseHex(const char* psz)\n     {\n         while (isspace(*psz))\n             psz++;\n-        signed char c = phexdigit[(unsigned char)*psz++];\n+        signed char c = HexDigit(*psz++);\n         if (c == (signed char)-1)\n             break;\n         unsigned char n = (c << 4);\n-        c = phexdigit[(unsigned char)*psz++];\n+        c = HexDigit(*psz++);\n         if (c == (signed char)-1)\n             break;\n         n |= c;"
      }
    ]
  }
]