gavinandresen,2012-12-13T23:52:58Z,(retracted ACK)\n\nCan you give step-by-step gitian building commands; e.g.\nmake_base_vm ?something?\n... and which dependencies will we need to rebuild?\n,https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-11359320,11359320,
sipa,2012-12-13T23:56:40Z,"There's no way that ACK can mean you tested it, given the followup question...\n\n  ./bin/make-base-vm --suite precise --arch i386\n\nThen rebuild Qt, Boost, and deps.\n",https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-11359441,11359441,
gavinandresen,2012-12-14T01:37:49Z,mea culpa:  ACK code changes.\n\nI'm making-base-vm now...\n`./bin/make-base-vm --suite precise --arch i386`\n\nFetch a new boost and qt for inputs:\n`cd inputs\nwget https://downloads.sourceforge.net/project/boost/boost/1.52.0/boost_1_52_0.tar.bz2\nwget http://releases.qt-project.org/qt4/source/qt-everywhere-opensource-src-4.8.4.tar.gz\ncd ..`\n\nBuild dependencies:\n`./bin/gbuild ../bitcoin/cont,https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-11361964,11361964,
gavinandresen,2012-12-14T16:05:07Z,"Please update contrib/gitian-descriptors/README too (mention the new make-base-vm).\n\nSuccessfully gitian-built HEAD plus this pull.\n\nRunning Bitcoin-Qt -testnet in a Virtual Box Windows XP service pack 3, 2GB memory VM:\n- Installer works properly\n- Runs, starts syncing with the chain\n  ... but then crashes.\n\nI'll see if I can get a Windows debugging environment going to help debug the cra",https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-11381293,11381293,
gavinandresen,2012-12-14T22:41:32Z,"Results of running inside the mingw gdb (binary cross-compiled on my linux machine -g, then copied over):\n   https://gist.github.com/4289251\n",https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-11395155,11395155,
Diapolo,2012-12-15T09:44:45Z,"@sipa If we have a new compiler ready with Gitian, #1674 should be tested also. Could you do a build with that integrated, as I guess pull-tester is not yet using the same compiler suite.\n",https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-11401803,11401803,
laanwj,2012-12-15T12:21:09Z,"I suck at gitian (yes, I changed the yml to point to sipa's repository, but somehow can't get it to work, I also tried `leveldb17` instead of the hex id)\n\n```\nbin/gbuild --commit bitcoin=e65f01a ../bitcoin/contrib/gitian-descriptors/gitian-win32.yml\nfatal: ambiguous argument 'e65f01a': unknown revision or path not in the working tree.\nUse '--' to separate paths from revisions\nbin/gbuild:204:",https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-11402905,11402905,
sipa,2012-12-15T14:09:34Z,"@laanwj I've given up trying to make gitian fetch what I want by itself.\n\nI have a wrapper script at http://bitcoin.sipa.be/builds/bitcoin-build.sh.txt, which injects the commit you ask for from a local repository into gitian. It also does some other things like singing and packaging.\n",https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-11404844,11404844,
sipa,2012-12-15T18:35:03Z,"@gavinandresen I added a commit that changes the Logv implementation (to something based on our util.cpp's strprintf). It's not very efficient, but maybe this works better (strange va_list semantics?). Can you try again?\n",https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-11408253,11408253,
BitcoinPullTester,2012-12-16T02:22:59Z,"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/5f710985e0ee97c70a5e67ec08e6d4023dda0ca1 for binaries and test log.\n\nThis could happen for one of several reasons:\n1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that made them incompatible with the automated testing scripts\n2. It does not build on either Linux i386",https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-11413357,11413357,
gavinandresen,2012-12-21T15:24:31Z,"Okey dokey...  I've been working through this in two Windows virtual machines, one mingw32 and one mingw64, and having trouble with both-- mingw32 with the new code, mingw64 with building dependencies properly.\n\nBut, I think I'm one issue away from getting the mingw32 build working; see https://gist.github.com/4353422 for the diff.\n\nThe last issue is to write a replacement for the DbgHelp libr",https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-11616723,11616723,
sipa,2012-12-22T17:34:50Z,"@gavinandresen Added your patch to this pull request, rebasing it after removing my alternate Logv inplementation.\n\nIs removing -O2 from the command line options accidental?\n",https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-11639315,11639315,
BitcoinPullTester,2012-12-22T17:41:46Z,"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/59d0df6124deb2be88ee1cd23b4add47b27728f8 for binaries and test log.\n\nThis could happen for one of several reasons:\n1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that made them incompatible with the automated testing scripts\n2. It does not build on either Linux i386",https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-11639378,11639378,
Diapolo,2013-01-01T11:53:20Z,"I'm currently taking a look at this and try to build it with my IDE... will report back later.\n\nEdit: Got an error, during linking:\n`d:/mingw/bin/../lib/gcc/mingw32/4.7.2/../../../../mingw32/bin/ld.exe: cannot find -ldbghelp`\n\n@sipa I fetched your leveldb17 branch, does this include Gavins last commit?\n",https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-11788925,11788925,
Diapolo,2013-01-01T19:01:43Z,"@sipa Thanks for fixing. Can you now also remove that line, as we don't need Boost chrono with Boost 1.52.\nhttps://github.com/bitcoin/bitcoin/blob/master/bitcoin-qt.pro#L387\n\nEdit: What is the main benefit of this pull, does it fix certain known issues with Windows or should it be faster? A few more details would be very nice. I'm currently doing an IBD with test- and mainnet.\n",https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-11791832,11791832,
sipa,2013-01-01T21:34:56Z,@gavinandresen Done (hope you didn't mind me modifying your commit).\n\nDid you see https://bitcointalk.org/index.php?topic=129861.msg1427066#msg1427066 ?\n,https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-11793304,11793304,
gavinandresen,2013-01-01T22:24:16Z,"@sipa : don't mind at all; I was lazy and didn't compile Qt libraries (or Bitcoin-Qt) on my Windows VM.\n\nRE: leveldb port using a ton of disk space on Windows:  yes, saw that, it makes me want to cry...\nI do now have a VM that can run the mingw gdb, so hopefully ""we"" can reproduce/fix it, but I'm not looking forward to learning about the details of how leveldb works to figure out what is broken",https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-11794378,11794378,
sipa,2013-01-01T22:27:30Z,"Well, the filenames are blahblah.(null), and as those names are constructed using snprintf (see db/filename.cc), I'd say there's something wrong with snprintf still. Sure that #define _snprintf you changed was harmless?\n",https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-11794546,11794546,
sipa,2013-01-01T22:34:57Z,"@Diapolo \n- The native windows backend for leveldb should be faster than the boost one. \n- Keeping up with more recent (and less-patched) LevelDB versions seems a good idea for future extensibility.\n- A more recent VM image to build with also means a more recent compiler, and things like link-time optimizations may gain us some performance as well.\n\nIn any case, in theory, none of these shoul",https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-11794933,11794933,
gavinandresen,2013-01-01T22:37:14Z,"Oh, that's the issue:  snprintf(%llu) won't work on 32-bit windows / mingw32 ...  (at least, I THINK that's the issue)\n\nNeeds more research thought; what did the other windows leveldb port do?\n",https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-11795064,11795064,
sipa,2013-01-01T22:42:39Z,"@gavinandresen It uses the exact same snprintf construction - as this is not code that is specific to the Windows port at all. Then again, we have no reason to assume that the issue reported in that forum post doesn't already exist in the current git master...\n",https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-11795387,11795387,
sipa,2013-01-01T22:46:33Z,@gavinandresen Maybe the solution is just replacing the %llu's in the current leveldb code by macros like PRI64u in the core code. I hate maintaining such patched trees though...\n,https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-11795627,11795627,
gavinandresen,2013-01-02T00:27:10Z,Summarizing discussion from IRC:\n\nmingw and *printf and 64-bit formats are complicated; see:\n  http://sourceforge.net/project/shownotes.php?release_id=24832\n\nCompiling leveldb -posix works for me in a 32-bit Win XP mingw32 environment. Patch:\n  https://gist.github.com/4431213\n,https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-11797969,11797969,
Diapolo,2013-01-02T15:06:19Z,@sipa I found http://blog.qt.digia.com/blog/2012/05/08/qt-commercial-support-weekly-19-how-to-write-your-own-static-library-with-qt-2/ which mentions a few things about static linking with Qt. Perhaps it's at least a little interesting for you.\n\n@gavinandresen When did you update your commit? I'm asking because I need to fetch the changes then :).\n,https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-11810805,11810805,
BitcoinPullTester,2013-01-03T08:36:41Z,"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/13a5f3a808ec983e99b6b20d573f6653e7750197 for binaries and test log.\n\nThis could happen for one of several reasons:\n1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that made them incompatible with the automated testing scripts\n2. It does not build on either Linux i386",https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-11837510,11837510,
gavinandresen,2013-01-03T15:20:18Z,I ran @sipa's latest gitian-compiled binary overnight in an XP VM on -testnet with no issues.\n,https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-11847111,11847111,
BitcoinPullTester,2013-01-04T02:42:31Z,"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/f6d8bf5093aad8c55a84e20a4c6b52a89cee1d0a for binaries and test log.\n\nThis could happen for one of several reasons:\n1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that made them incompatible with the automated testing scripts\n2. It does not build on either Linux i386",https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-11870352,11870352,
Diapolo,2013-01-10T14:38:55Z,"Just a small feedback, I'm testing another IBD with this (emtpy datadir) and now have ~54000 blocks to download. Bitcoin-Qt is currently using ~745MB of RAM, which seems to be a quite high number. I'll take a look and see how this progresses now.\n\n@sipa \n28000 Blocks to go and now it's using ~1GB RAM.\n14000 Blocks to go and now it's using ~1.1GB RAM.\n",https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-12099211,12099211,
BitcoinPullTester,2013-01-13T23:39:35Z,"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/02fd69985969076f3cd0b2a645a56de6059138a5 for binaries and test log.\n\nThis could happen for one of several reasons:\n1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that made them incompatible with the automated testing scripts\n2. It does not build on either Linux i386",https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-12202788,12202788,
BitcoinPullTester,2013-01-14T22:47:41Z,"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/8f79bccc36cbb7234da08db8ea22a6ce37f5d5a8 for binaries and test log.\n\nThis could happen for one of several reasons:\n1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that made them incompatible with the automated testing scripts\n2. It does not build on either Linux i386",https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-12244345,12244345,
BitcoinPullTester,2013-01-18T13:57:36Z,"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/e813e14f68a844c0c6c364aa66f9040f06e56bfe for binaries and test log.\n\nThis could happen for one of several reasons:\n1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that made them incompatible with the automated testing scripts\n2. It does not build on either Linux i386",https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-12422700,12422700,
BitcoinPullTester,2013-01-24T06:25:42Z,"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/e813e14f68a844c0c6c364aa66f9040f06e56bfe for test log.\n\nThis pull does not merge cleanly onto current master\n",https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-12639191,12639191,
sipa,2013-01-24T16:32:57Z,"closing, as #2198 is merged\n",https://github.com/bitcoin/bitcoin/pull/2106#issuecomment-12659654,12659654,
gavinandresen,2012-12-14T22:06:11Z,There is an extra double-quote here; wonder why that didn't break my gitian build...\n,https://github.com/bitcoin/bitcoin/pull/2106#discussion_r2426215,2426215,src/makefile.linux-mingw
Diapolo,2013-01-01T12:15:22Z,I had to remove the `-ldbghelp` in order to get it compile.\n,https://github.com/bitcoin/bitcoin/pull/2106#discussion_r2525374,2525374,bitcoin-qt.pro
sipa,2013-01-01T18:00:43Z,I forgot removing it from the Qt makefile.\n,https://github.com/bitcoin/bitcoin/pull/2106#discussion_r2525710,2525710,bitcoin-qt.pro
gavinandresen,2013-01-02T19:36:15Z,"Using -D__USE_MINGW_ANSI_STDIO=1  instead of -posix  works with the i686-w64-mingw32-g++  cross-compiler.\n\nNo idea why, either the cross-compiler -posix is different from the straight compiler, or the -w64 compiler is different.\n",https://github.com/bitcoin/bitcoin/pull/2106#discussion_r2532024,2532024,src/leveldb/build_detect_platform
Diapolo,2013-01-04T16:30:42Z,"One comment, see line 388, where we also add `shlwapi`. Isn't that a pure Windows thing, where we can use `win32.LIBS += -lshlwapi` here and remove that library from line 388 below?\n\nEdit: I made some tests and could remove that line here and it still links fine, because of line 388 I think :).\n",https://github.com/bitcoin/bitcoin/pull/2106#discussion_r2551515,2551515,bitcoin-qt.pro
Diapolo,2013-01-04T16:39:00Z,"After `OS_WINDOWS_CROSSCOMPILE` we have an `""`, I'm not sure this should be in there :).\n\n@sipa Can you remove that?\n",https://github.com/bitcoin/bitcoin/pull/2106#discussion_r2551618,2551618,bitcoin-qt.pro
sipa,2013-01-04T21:15:54Z,"It's there to be sure shlwapi ends up in the linker command line after libleveldb.a, as that depends on shlwapi itself. It's possible it's right by default, but it won't hurt.\n",https://github.com/bitcoin/bitcoin/pull/2106#discussion_r2555172,2555172,bitcoin-qt.pro
Diapolo,2013-01-06T11:50:58Z,"I'm asking myself, why you chose Windows 2000 (0x0500) over WinXP (0x0501), which is what we require with Bitcoin anyway.\n\nEdit: The LevelDB libs are a little different with that switch, but they compile just fine.\n\n@sipa Any reason not to switch to XP with that flag?\n",https://github.com/bitcoin/bitcoin/pull/2106#discussion_r2559892,2559892,src/leveldb/build_detect_platform
Diapolo,2013-01-06T11:57:43Z,"It' won't hurt, but IMO it would be cleaner to use win32.LIBS.\n",https://github.com/bitcoin/bitcoin/pull/2106#discussion_r2559901,2559901,bitcoin-qt.pro
sipa,2013-01-06T20:54:19Z,"It's already inside a windows {} block, so that would be redundant.\n",https://github.com/bitcoin/bitcoin/pull/2106#discussion_r2560547,2560547,bitcoin-qt.pro
