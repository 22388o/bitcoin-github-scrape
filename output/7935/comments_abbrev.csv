luke-jr,2016-04-27T05:09:08Z,@sipa Added a commit to try to address the locking stuff cleaner.\n,https://github.com/bitcoin/bitcoin/pull/7935#issuecomment-214971238,214971238,
theuni,2016-05-05T16:42:47Z,"ut ACK, other than the nits.\n",https://github.com/bitcoin/bitcoin/pull/7935#issuecomment-217206275,217206275,
theuni,2016-05-05T16:44:55Z,"Needs some tests, though.\n",https://github.com/bitcoin/bitcoin/pull/7935#issuecomment-217206832,217206832,
sipa,2016-05-09T19:49:14Z,@luke-jr Can you revert the last commit? The design for having the data structure not do its own locking is very intentional.\n,https://github.com/bitcoin/bitcoin/pull/7935#issuecomment-217969393,217969393,
luke-jr,2016-05-09T20:17:52Z,Reverted... but it's what I thought you wanted.\n,https://github.com/bitcoin/bitcoin/pull/7935#issuecomment-217976790,217976790,
luke-jr,2016-05-13T22:34:17Z,Updated for '!' prefix\n,https://github.com/bitcoin/bitcoin/pull/7935#issuecomment-219175363,219175363,
jtimon,2016-05-21T13:27:18Z,Fast-review ACK\n,https://github.com/bitcoin/bitcoin/pull/7935#issuecomment-220777730,220777730,
luke-jr,2016-05-29T13:31:09Z,"Tested with libblkmaker 0.5.3 (ie, using version/force) and bitcoin/libblkmaker#5 on testnet-in-a-box.\n",https://github.com/bitcoin/bitcoin/pull/7935#issuecomment-222360769,222360769,
sipa,2016-05-31T13:43:04Z,utACK 46e8e06a5b62892024bf0da0e6104cc30a2a50cb. Squash some?\n,https://github.com/bitcoin/bitcoin/pull/7935#issuecomment-222691975,222691975,
luke-jr,2016-06-01T14:39:36Z,"Squashing is a bad practice, so I prefer not to, if that's okay...\n",https://github.com/bitcoin/bitcoin/pull/7935#issuecomment-223013552,223013552,
MarcoFalke,2016-06-01T15:13:02Z,"There is 12 commits, so squashing would help to not bury the previous code under several layers of history. Not to mention that squashing would make it probably easier to read the commits of this pull.\n",https://github.com/bitcoin/bitcoin/pull/7935#issuecomment-223024717,223024717,
sipa,2016-06-01T15:26:38Z,"Squashing is worse for retaining the history of the patch and downstream\nbranches, but better for post-merge reviewability. I think that as a\nproject, we favor having good transparency of the changes over the exact\nhistory that led to the development of those changes.\n",https://github.com/bitcoin/bitcoin/pull/7935#issuecomment-223029251,223029251,
gmaxwell,2016-06-01T16:27:09Z,The merged tree is forever.  We should favor post-merge reviewability. \n,https://github.com/bitcoin/bitcoin/pull/7935#issuecomment-223048261,223048261,
luke-jr,2016-06-01T16:56:59Z,"Squashed into 4 logical commits, and added a few comment lines explaining the logic around omitting a rule check for version/force.\n",https://github.com/bitcoin/bitcoin/pull/7935#issuecomment-223056801,223056801,
theuni,2016-06-06T14:46:02Z,"ut ACK, other than the nits above. I'll do thorough testing of segwit's implementation here.\n",https://github.com/bitcoin/bitcoin/pull/7935#issuecomment-223980922,223980922,
luke-jr,2016-06-06T17:11:59Z,Nits fixed.\n,https://github.com/bitcoin/bitcoin/pull/7935#issuecomment-224023702,224023702,
sipa,2016-06-06T22:16:13Z,utACK 12c708a4b3a799478fbb3f93fda696706177a824\n,https://github.com/bitcoin/bitcoin/pull/7935#issuecomment-224105598,224105598,
sipa,2016-06-08T13:04:02Z,Also needs backport to 0.12.\n,https://github.com/bitcoin/bitcoin/pull/7935#issuecomment-224581980,224581980,
theuni,2016-05-03T20:49:29Z,Tangential nit (just so I don't forget): DeploymentPos should become a strongly typed enum\nedit: ThresholdState too.\n,https://github.com/bitcoin/bitcoin/pull/7935#discussion_r61953471,61953471,src/rpc/mining.cpp
luke-jr,2016-05-03T21:03:35Z,Should I be iterating over them some other way?\n,https://github.com/bitcoin/bitcoin/pull/7935#discussion_r61955732,61955732,src/rpc/mining.cpp
theuni,2016-05-03T21:32:02Z,std::array here would be much nicer. Hooray for c++11!\n,https://github.com/bitcoin/bitcoin/pull/7935#discussion_r61959908,61959908,src/versionbits.h
theuni,2016-05-03T22:22:00Z,"Aligning indices everywhere is a bit clunky, and will get worse with more deployments. Just return a `std::map<DeploymentPos,ThresholdState>` ? Then the caller can iterate cleanly.\n",https://github.com/bitcoin/bitcoin/pull/7935#discussion_r61966637,61966637,src/versionbits.cpp
theuni,2016-05-03T22:55:34Z,See below. I think returning a map would make this more clear.\n,https://github.com/bitcoin/bitcoin/pull/7935#discussion_r61970313,61970313,src/rpc/mining.cpp
luke-jr,2016-05-03T23:07:44Z,"Whatever we're doing with C++11 in 0.13 doesn't help here, since this needs to be backported to 0.11 and 0.12.\n",https://github.com/bitcoin/bitcoin/pull/7935#discussion_r61971528,61971528,src/versionbits.h
theuni,2016-05-03T23:27:14Z,need to make sure this was found before get_int64()?\n,https://github.com/bitcoin/bitcoin/pull/7935#discussion_r61973174,61973174,src/rpc/mining.cpp
theuni,2016-05-04T00:13:51Z,"Is a binary forced/not-forced enough?\n\nTaking segwit as an example, post-activation, what would `gbt_force = true mean`? should I expect ""segwit"" to be always forced and transactions filtered? Forced if an commitment isn't required and an error otherwise? Isn't this a per-block property?\n\nAs gbt rules aren't necessarily static, I'm not sure that a simple flag makes sense. Or maybe I'm missing ",https://github.com/bitcoin/bitcoin/pull/7935#discussion_r61977165,61977165,src/versionbits.cpp
luke-jr,2016-05-04T00:18:21Z,"This is just an internal detail to bitcoind, so we can change it in the future if needed. See how rpc/mining applies it in this PR...\n",https://github.com/bitcoin/bitcoin/pull/7935#discussion_r61977536,61977536,src/versionbits.cpp
theuni,2016-05-04T00:31:37Z,"Understood, I was just making the point that it's not really defining much so it's somewhat misleading. No problem making it more dynamic once that's required, though.\n",https://github.com/bitcoin/bitcoin/pull/7935#discussion_r61978518,61978518,src/versionbits.cpp
sipa,2016-05-09T19:47:30Z,"NACK on this; this class will be needed inside abstracted consensus logic, which shouldn't do its own locking.\n\nVersionBitsCache is intended to be a black box data type locked by the user (main, in this case) but only accessed through functions in versionbits.cpp.\n",https://github.com/bitcoin/bitcoin/pull/7935#discussion_r62560501,62560501,src/versionbits.h
jtimon,2016-05-20T11:57:07Z,Bike-shedding: Can you call this var consensusParams for consistency with other parts of the code?\n,https://github.com/bitcoin/bitcoin/pull/7935#discussion_r64030086,64030086,src/rpc/mining.cpp
sdaftuar,2016-05-21T11:42:16Z,"For deployments where `gbt_force == False`, we should clear the bit if the client hasn't signaled support, to prevent activation of proposed soft forks that require software changes downstream.\n",https://github.com/bitcoin/bitcoin/pull/7935#discussion_r64133294,64133294,src/rpc/mining.cpp
luke-jr,2016-05-21T13:03:14Z,Redid this logic (finding and fixing a few more bugs in the process) - how's it look now?\n,https://github.com/bitcoin/bitcoin/pull/7935#discussion_r64134207,64134207,src/rpc/mining.cpp
jtimon,2016-05-21T13:25:35Z,Does this need to be with the consensus code?\nCouldn't it be moved to miner.o or somewhere else?\n,https://github.com/bitcoin/bitcoin/pull/7935#discussion_r64134511,64134511,src/versionbits.h
luke-jr,2016-05-21T14:08:40Z,"Possibly. @sdaftuar was thinking maybe we should move the bit assignments here, however...\n",https://github.com/bitcoin/bitcoin/pull/7935#discussion_r64135024,64135024,src/versionbits.h
jtimon,2016-05-22T11:59:59Z,"I mean, I would say the only reason for not having versionbits.o in the consensus package already is because it still depends on chain.o (which is storage-dependent).\n",https://github.com/bitcoin/bitcoin/pull/7935#discussion_r64148742,64148742,src/versionbits.h
theuni,2016-06-04T02:33:26Z,more than a small formatting nit here :)\n,https://github.com/bitcoin/bitcoin/pull/7935#discussion_r65795823,65795823,src/rpc/mining.cpp
luke-jr,2016-06-04T03:10:51Z,"LOL, how did that happen? >_<\n",https://github.com/bitcoin/bitcoin/pull/7935#discussion_r65796274,65796274,src/rpc/mining.cpp
theuni,2016-06-06T14:24:58Z,VersionBitsDeploymentInfo\n,https://github.com/bitcoin/bitcoin/pull/7935#discussion_r65898640,65898640,src/consensus/params.h
