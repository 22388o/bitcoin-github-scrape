[
  {
    "sha": "7c1466430b6049f74ce0ef92b8c2521e15b7130e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YzE0NjY0MzBiNjA0OWY3NGNlMGVmOTJiOGMyNTIxZTE1YjcxMzBl",
    "commit": {
      "author": {
        "name": "Christopher Coverdale",
        "email": "chris.coverdale24@gmail.com",
        "date": "2021-03-27T12:47:04Z"
      },
      "committer": {
        "name": "Christopher Coverdale",
        "email": "chris.coverdale24@gmail.com",
        "date": "2021-03-27T13:18:42Z"
      },
      "message": "p2p: Extract logic of announcing a local address into a private method\n\nThe motivation is to extract and encapsulate logic in SendMessages() into\nsmaller and focused methods.",
      "tree": {
        "sha": "dfa40b14f4f9281af18f2f6e8aa45d8a689013f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dfa40b14f4f9281af18f2f6e8aa45d8a689013f7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7c1466430b6049f74ce0ef92b8c2521e15b7130e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQHQBAABCgA6FiEERNF0V3b7vg9BtFmPvPBf3s1tvMEFAmBfML4cHGNocmlzLmNv\ndmVyZGFsZTI0QGdtYWlsLmNvbQAKCRC88F/ezW28waiIC/47VgucmwKQqIg1/jST\n4wOxk4qZ2a/amKfhtirsAalDovwZI7L/12TTu7ejopPx9uwbsIy08RTttPsi2tOt\ncaIrxxph+WPWFUOr2YtO3/VIFoFjdRrdbSofvniS4azpoetoLCkd1hNEmtpilkgm\nJ0HgYP9WU8ClGuikEfwt6C3i9gmzc+lqZSpv6EzdPJYgNReRg2ayPlvCuWspr3vp\nD5wZ1cgM7QsT+pc5WwXQes53tdab+1SrJ0YjEcpcCsj5/ImaoTRqClH23wMHXgw6\n8Z79HVBOVhk01YjCmQuIrcTJ2g6cKlfRnvVVH3dzkN7gNCYtQ+HaVYMFIHoKPrAk\njvhy01/NQi5az9PKzroG4GwEwmUFHNd2GSTA7CPTuV5K8olk3R4zJt+oQw0Me96Z\nwEvWfY6ng75A9SBe51mkwJXA7s4XTMoTuteR8FoFTokclhipfX0ASEsuHrt8vqLF\nKFPuZuA8fXOLFIIoiLwgfkkrX/4KN39QMqelfgTqG5skDos=\n=mLFv\n-----END PGP SIGNATURE-----",
        "payload": "tree dfa40b14f4f9281af18f2f6e8aa45d8a689013f7\nparent e658b0e49bee257e197dd8ca37ee3ffa73092d92\nauthor Christopher Coverdale <chris.coverdale24@gmail.com> 1616849224 +0000\ncommitter Christopher Coverdale <chris.coverdale24@gmail.com> 1616851122 +0000\n\np2p: Extract logic of announcing a local address into a private method\n\nThe motivation is to extract and encapsulate logic in SendMessages() into\nsmaller and focused methods.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c1466430b6049f74ce0ef92b8c2521e15b7130e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7c1466430b6049f74ce0ef92b8c2521e15b7130e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c1466430b6049f74ce0ef92b8c2521e15b7130e/comments",
    "author": {
      "login": "ccdle12",
      "id": 18324680,
      "node_id": "MDQ6VXNlcjE4MzI0Njgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/18324680?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccdle12",
      "html_url": "https://github.com/ccdle12",
      "followers_url": "https://api.github.com/users/ccdle12/followers",
      "following_url": "https://api.github.com/users/ccdle12/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccdle12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccdle12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccdle12/subscriptions",
      "organizations_url": "https://api.github.com/users/ccdle12/orgs",
      "repos_url": "https://api.github.com/users/ccdle12/repos",
      "events_url": "https://api.github.com/users/ccdle12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccdle12/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ccdle12",
      "id": 18324680,
      "node_id": "MDQ6VXNlcjE4MzI0Njgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/18324680?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccdle12",
      "html_url": "https://github.com/ccdle12",
      "followers_url": "https://api.github.com/users/ccdle12/followers",
      "following_url": "https://api.github.com/users/ccdle12/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccdle12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccdle12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccdle12/subscriptions",
      "organizations_url": "https://api.github.com/users/ccdle12/orgs",
      "repos_url": "https://api.github.com/users/ccdle12/repos",
      "events_url": "https://api.github.com/users/ccdle12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccdle12/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e658b0e49bee257e197dd8ca37ee3ffa73092d92",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e658b0e49bee257e197dd8ca37ee3ffa73092d92",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e658b0e49bee257e197dd8ca37ee3ffa73092d92"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 29,
      "deletions": 18
    },
    "files": [
      {
        "sha": "523d4079bc95069d99ff2b96859a67774ee5388e",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 18,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7c1466430b6049f74ce0ef92b8c2521e15b7130e/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7c1466430b6049f74ce0ef92b8c2521e15b7130e/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=7c1466430b6049f74ce0ef92b8c2521e15b7130e",
        "patch": "@@ -320,6 +320,11 @@ class PeerManagerImpl final : public PeerManager\n      *  mark the peer to be disconnected if a ping has timed out. */\n     void MaybeSendPing(CNode& node_to, Peer& peer);\n \n+    /** Maybe set a local address for announcement to the peer. We won't announce\n+     *  any local address if we are in IBD or if the peer is block-relay-only. */\n+    void MaybeAnnounceLocalAddress(CNode& pto, const std::chrono::microseconds current_time)\n+        EXCLUSIVE_LOCKS_REQUIRED(cs_main, pto.cs_sendProcessing);\n+\n     const CChainParams& m_chainparams;\n     CConnman& m_connman;\n     /** Pointer to this node's banman. May be nullptr - check existence before dereferencing. */\n@@ -4191,24 +4196,7 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n         // Address refresh broadcast\n         auto current_time = GetTime<std::chrono::microseconds>();\n \n-        if (fListen && pto->RelayAddrsWithConn() &&\n-            !m_chainman.ActiveChainstate().IsInitialBlockDownload() &&\n-            pto->m_next_local_addr_send < current_time) {\n-            // If we've sent before, clear the bloom filter for the peer, so that our\n-            // self-announcement will actually go out.\n-            // This might be unnecessary if the bloom filter has already rolled\n-            // over since our last self-announcement, but there is only a small\n-            // bandwidth cost that we can incur by doing this (which happens\n-            // once a day on average).\n-            if (pto->m_next_local_addr_send != 0us) {\n-                pto->m_addr_known->reset();\n-            }\n-            if (std::optional<CAddress> local_addr = GetLocalAddrForPeer(pto)) {\n-                FastRandomContext insecure_rand;\n-                pto->PushAddress(*local_addr, insecure_rand);\n-            }\n-            pto->m_next_local_addr_send = PoissonNextSend(current_time, AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL);\n-        }\n+        MaybeAnnounceLocalAddress(*pto, current_time);\n \n         //\n         // Message: addr\n@@ -4726,3 +4714,26 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n     } // release cs_main\n     return true;\n }\n+\n+void PeerManagerImpl::MaybeAnnounceLocalAddress(CNode& pto, const std::chrono::microseconds current_time)\n+{\n+    AssertLockHeld(cs_main);\n+    if (fListen && pto.RelayAddrsWithConn() &&\n+        !m_chainman.ActiveChainstate().IsInitialBlockDownload() &&\n+        pto.m_next_local_addr_send < current_time) {\n+        // If we've sent before, clear the bloom filter for the peer, so that our\n+        // self-announcement will actually go out.\n+        // This might be unnecessary if the bloom filter has already rolled\n+        // over since our last self-announcement, but there is only a small\n+        // bandwidth cost that we can incur by doing this (which happens\n+        // once a day on average).\n+        if (pto.m_next_local_addr_send != 0us) {\n+            pto.m_addr_known->reset();\n+        }\n+        if (std::optional<CAddress> local_addr = GetLocalAddrForPeer(&pto)) {\n+            FastRandomContext insecure_rand;\n+            pto.PushAddress(*local_addr, insecure_rand);\n+        }\n+        pto.m_next_local_addr_send = PoissonNextSend(current_time, AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL);\n+    }\n+}"
      }
    ]
  }
]