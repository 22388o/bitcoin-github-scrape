[
  {
    "sha": "6e65f35f23337cf0b284acb2bb2ec038ae83aeca",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZTY1ZjM1ZjIzMzM3Y2YwYjI4NGFjYjJiYjJlYzAzOGFlODNhZWNh",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-11-15T09:24:21Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-11-15T16:43:08Z"
      },
      "message": "rpc: Add missing cs_main lock in getblocktemplate(...)\n\nReading the variable `chainActive` requires holding the mutex `cs_main`.\n\nPrior to this commit the `cs_main` mutex was not held when accessing\n`chainActive` in:\n\n```\nwhile (chainActive.Tip()->GetBlockHash() == hashWatchedChain && IsRPCRunning())\n```",
      "tree": {
        "sha": "bfd09717f25210c1c059580bd62b161363b6bc56",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bfd09717f25210c1c059580bd62b161363b6bc56"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6e65f35f23337cf0b284acb2bb2ec038ae83aeca",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e65f35f23337cf0b284acb2bb2ec038ae83aeca",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6e65f35f23337cf0b284acb2bb2ec038ae83aeca",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e65f35f23337cf0b284acb2bb2ec038ae83aeca/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4db82b7aab4ad64717f742a7318e3dc6811b41be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4db82b7aab4ad64717f742a7318e3dc6811b41be",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4db82b7aab4ad64717f742a7318e3dc6811b41be"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 6,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a1399248481c4a7b5a36df9d0cc790a4b9a31f9d",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e65f35f23337cf0b284acb2bb2ec038ae83aeca/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e65f35f23337cf0b284acb2bb2ec038ae83aeca/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=6e65f35f23337cf0b284acb2bb2ec038ae83aeca",
        "patch": "@@ -479,7 +479,12 @@ UniValue getblocktemplate(const JSONRPCRequest& request)\n             checktxtime = std::chrono::steady_clock::now() + std::chrono::minutes(1);\n \n             WaitableLock lock(csBestBlock);\n-            while (chainActive.Tip()->GetBlockHash() == hashWatchedChain && IsRPCRunning())\n+            auto KeepRunning = [&]() -> bool {\n+                LOCK(cs_main);\n+                assert(chainActive.Tip());\n+                return chainActive.Tip()->GetBlockHash() == hashWatchedChain && IsRPCRunning();\n+            };\n+            while (KeepRunning())\n             {\n                 if (cvBlockChange.wait_until(lock, checktxtime) == std::cv_status::timeout)\n                 {"
      }
    ]
  },
  {
    "sha": "a8e661b6b2680ceb6259bbe531ac4771d65e9a63",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOGU2NjFiNmIyNjgwY2ViNjI1OWJiZTUzMWFjNDc3MWQ2NWU5YTYz",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-03-14T22:04:25Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-03-14T22:04:25Z"
      },
      "message": "Simplify KeepRunning logic",
      "tree": {
        "sha": "88f323ebdfafc24bfdc1961210bf29ab80f3c53d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/88f323ebdfafc24bfdc1961210bf29ab80f3c53d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a8e661b6b2680ceb6259bbe531ac4771d65e9a63",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8e661b6b2680ceb6259bbe531ac4771d65e9a63",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a8e661b6b2680ceb6259bbe531ac4771d65e9a63",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8e661b6b2680ceb6259bbe531ac4771d65e9a63/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6e65f35f23337cf0b284acb2bb2ec038ae83aeca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e65f35f23337cf0b284acb2bb2ec038ae83aeca",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6e65f35f23337cf0b284acb2bb2ec038ae83aeca"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 7,
      "deletions": 6
    },
    "files": [
      {
        "sha": "380dedffd7e69e0eb5ca49f9eea84bdb2525d275",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8e661b6b2680ceb6259bbe531ac4771d65e9a63/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8e661b6b2680ceb6259bbe531ac4771d65e9a63/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=a8e661b6b2680ceb6259bbe531ac4771d65e9a63",
        "patch": "@@ -479,13 +479,14 @@ UniValue getblocktemplate(const JSONRPCRequest& request)\n             checktxtime = std::chrono::steady_clock::now() + std::chrono::minutes(1);\n \n             WaitableLock lock(csBestBlock);\n-            auto KeepRunning = [&]() -> bool {\n-                LOCK(cs_main);\n-                assert(chainActive.Tip());\n-                return chainActive.Tip()->GetBlockHash() == hashWatchedChain && IsRPCRunning();\n-            };\n-            while (KeepRunning())\n+            while (IsRPCRunning())\n             {\n+                {\n+                    LOCK(cs_main);\n+                    if (chainActive.Tip()->GetBlockHash() != hashWatchedChain) {\n+                        break;\n+                    }\n+                }\n                 if (cvBlockChange.wait_until(lock, checktxtime) == std::cv_status::timeout)\n                 {\n                     // Timeout: Check transactions for update"
      }
    ]
  }
]