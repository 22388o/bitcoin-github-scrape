[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/450197951",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#issuecomment-450197951",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15043",
    "id": 450197951,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDE5Nzk1MQ==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-27T17:39:07Z",
    "updated_at": "2018-12-27T17:39:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK\r\n\r\nThanks for doing this!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/450197951/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/450344544",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#issuecomment-450344544",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15043",
    "id": 450344544,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDM0NDU0NA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-28T11:25:19Z",
    "updated_at": "2018-12-28T11:25:19Z",
    "author_association": "MEMBER",
    "body": "Would be nice if someone could look at the build system changes, since the code is mostly just moved around.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/450344544/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/450348226",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#issuecomment-450348226",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15043",
    "id": 450348226,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDM0ODIyNg==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-28T11:56:54Z",
    "updated_at": "2019-01-21T19:46:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14912](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14912.html) ([WIP] External signer support (e.g. hardware wallet) by Sjors)\n* [#13989](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13989.html) (add avx512 instrinsic by fingera)\n* [#10443](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/10443.html) (Add fee_est tool for debugging fee estimation code by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/450348226/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/450845680",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#issuecomment-450845680",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15043",
    "id": 450845680,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDg0NTY4MA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-02T11:53:32Z",
    "updated_at": "2019-01-02T11:53:32Z",
    "author_association": "MEMBER",
    "body": "Concept ACK\r\n\r\nI think this should be behind a `configure` flag, building so many executables is going to be slow when statically linking, or with slow filesystems, and it contributes nothing to testing unless the user is planning to do fuzzing.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/450845680/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/450853090",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#issuecomment-450853090",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15043",
    "id": 450853090,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDg1MzA5MA==",
    "user": {
      "login": "cjdelisle",
      "id": 509047,
      "node_id": "MDQ6VXNlcjUwOTA0Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/509047?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cjdelisle",
      "html_url": "https://github.com/cjdelisle",
      "followers_url": "https://api.github.com/users/cjdelisle/followers",
      "following_url": "https://api.github.com/users/cjdelisle/following{/other_user}",
      "gists_url": "https://api.github.com/users/cjdelisle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cjdelisle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cjdelisle/subscriptions",
      "organizations_url": "https://api.github.com/users/cjdelisle/orgs",
      "repos_url": "https://api.github.com/users/cjdelisle/repos",
      "events_url": "https://api.github.com/users/cjdelisle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cjdelisle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-02T12:35:31Z",
    "updated_at": "2019-01-02T12:35:31Z",
    "author_association": "NONE",
    "body": "As a non-stakeholder, feel free to ignore, but as someone who is using the same test methodology, I would like to understand why you're proposing to change.\r\n\r\nI have a number of reasons why I tend to prefer a single fuzz entry point, but I would like to know if there is any evidence that putting the test-case in the data can harm the fuzzer's ability to efficiently find paths.\r\n\r\nMy reasoning is as follows:\r\n\r\n1. Personally, I find it better to allow someone with a large machine to be able to run a simple command and begin fuzzing with minimal effort, if each case is fuzzed separately then this is not really practical.\r\n2. Secondly, I personally am a big fan of maximum fuzz coverage, which means any test that can plausibly make use of randomized data should be accessible from the fuzzer. So clearly I would not want to require people to launch each test separately.\r\n3. It seems like if one would like to fuzz a particular test case, their need can be easily supported by allowing them to pass an argument to the running which causes it to `return 0` if the test is specified to anything else, thus the fuzzer will quickly prune attempts which touch other test cases.\r\n4. If there is a large corpus of generated test data, it seems that one could use a simple python script to rename the test files to contain the name of the test case which they're touching, solving the concern about organization.\r\n\r\nThanks,\r\nCaleb\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/450853090/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/450989914",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#issuecomment-450989914",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15043",
    "id": 450989914,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDk4OTkxNA==",
    "user": {
      "login": "Crypt-iQ",
      "id": 15145615,
      "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/15145615?u=a19ad52f8c597f3518a89a52014fabefda644078&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Crypt-iQ",
      "html_url": "https://github.com/Crypt-iQ",
      "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
      "following_url": "https://api.github.com/users/Crypt-iQ/following{/other_user}",
      "gists_url": "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
      "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
      "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
      "events_url": "https://api.github.com/users/Crypt-iQ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-02T21:25:30Z",
    "updated_at": "2019-01-02T21:25:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey @cjdelisle,\r\n\r\nI think the fuzz tests should be split up.  AFL (and other fuzzers) can splice test cases with one another and for AFL, this can discover [20% additional execution paths](https://lcamtuf.blogspot.com/2014/08/binary-fuzzing-strategies-what-works.html).  From my understanding, this can cause efficiency problems if the fuzzer is not fuzzing just one target.  \r\n\r\nIf we have two inputs, input A meant for `address_deserialize` and input B meant for `banentry_deserialize` and they are spliced together to create input C (which is a nonsense input), input C could be selected to be in the queue for further mutation if it provides the same edge coverage as input A or B (depending on its prefix) and cause even more of an efficiency problem.  The splicing mutation is really meant to be used on similar, but diverse test cases.\r\n\r\nAlso I think seeding the fuzzer with \"bad\" corpus inputs in general isn't a good idea because of efficiency and because of the splicing issue, even if we are only running one test and all others are disabled with a flag.  \r\n\r\nAnyways I'm pretty much a noob to fuzzing, but this is what I could gather from reading the AFL technical_notes, lcamtuf's blog, and the discussion on https://github.com/bitcoin/bitcoin/issues/11045",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/450989914/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/451017313",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#issuecomment-451017313",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15043",
    "id": 451017313,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTAxNzMxMw==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-02T23:29:13Z",
    "updated_at": "2019-01-02T23:29:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cjdelisle See @kcc:s comment in https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-323198955 :-)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/451017313/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/451079430",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#issuecomment-451079430",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15043",
    "id": 451079430,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTA3OTQzMA==",
    "user": {
      "login": "cjdelisle",
      "id": 509047,
      "node_id": "MDQ6VXNlcjUwOTA0Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/509047?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cjdelisle",
      "html_url": "https://github.com/cjdelisle",
      "followers_url": "https://api.github.com/users/cjdelisle/followers",
      "following_url": "https://api.github.com/users/cjdelisle/following{/other_user}",
      "gists_url": "https://api.github.com/users/cjdelisle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cjdelisle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cjdelisle/subscriptions",
      "organizations_url": "https://api.github.com/users/cjdelisle/orgs",
      "repos_url": "https://api.github.com/users/cjdelisle/repos",
      "events_url": "https://api.github.com/users/cjdelisle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cjdelisle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-03T08:25:47Z",
    "updated_at": "2019-01-03T08:25:47Z",
    "author_association": "NONE",
    "body": "Thanks @Crypt-iQ and @practicalswift , for those who weren't following carefully, my understanding is that it is the recommendation of Google's OSS-Fuzz project that fuzz targets should be broken up ( https://github.com/google/oss-fuzz/blob/master/docs/ideal_integration.md ) because:\r\n\r\n* Some of the fuzzers have O(executable_size) performance\r\n* Forcing all fuzzing to enter through one entry-point multiplies the number of possible search paths and fuzzers have limited memory\r\n\r\nSo I hereby reverse my opinion, because any kind of ease of management is negated by the fact that it's always better to do what works.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/451079430/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/451179052",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#issuecomment-451179052",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15043",
    "id": 451179052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTE3OTA1Mg==",
    "user": {
      "login": "Crypt-iQ",
      "id": 15145615,
      "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/15145615?u=a19ad52f8c597f3518a89a52014fabefda644078&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Crypt-iQ",
      "html_url": "https://github.com/Crypt-iQ",
      "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
      "following_url": "https://api.github.com/users/Crypt-iQ/following{/other_user}",
      "gists_url": "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
      "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
      "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
      "events_url": "https://api.github.com/users/Crypt-iQ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-03T15:34:47Z",
    "updated_at": "2019-01-03T15:43:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think that the fuzzing targets should be run on the corpus as part of regression testing.  This would require the corpus to be included in this project.  Is there a reason why it's not currently included?  Maybe this can be done in another PR.  \r\n\r\nSee @kcc comment: https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-334516409\r\n\r\nOSS Fuzz recommendations: \r\nhttps://github.com/google/oss-fuzz/blob/master/docs/ideal_integration.md#regression-testing",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/451179052/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/452303026",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#issuecomment-452303026",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15043",
    "id": 452303026,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjMwMzAyNg==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-08T13:45:10Z",
    "updated_at": "2019-01-08T13:45:10Z",
    "author_association": "MEMBER",
    "body": "> I think that the fuzzing targets should be run on the corpus as part of regression testing. This would require the corpus to be included in this project. Is there a reason why it's not currently included? \r\n\r\nThe idea is to have a separate repository with the corpus. The problem with including it in the main repository, besides taking up space, is that e.g. all changes have to go through the bottleneck of maintainers here.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/452303026/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/452338944",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#issuecomment-452338944",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15043",
    "id": 452338944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjMzODk0NA==",
    "user": {
      "login": "Crypt-iQ",
      "id": 15145615,
      "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/15145615?u=a19ad52f8c597f3518a89a52014fabefda644078&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Crypt-iQ",
      "html_url": "https://github.com/Crypt-iQ",
      "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
      "following_url": "https://api.github.com/users/Crypt-iQ/following{/other_user}",
      "gists_url": "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
      "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
      "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
      "events_url": "https://api.github.com/users/Crypt-iQ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-08T15:28:03Z",
    "updated_at": "2019-01-08T15:28:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@laanwj Ok that makes sense.  I think the corpus should be split up into directories by message type / fuzzing target to avoid erroneous feedback while fuzzing.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/452338944/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/452815353",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#issuecomment-452815353",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15043",
    "id": 452815353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjgxNTM1Mw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-09T18:59:21Z",
    "updated_at": "2019-01-09T18:59:21Z",
    "author_association": "MEMBER",
    "body": "Probably want to remove the links to test inputs from `doc/fuzzing.md` here, as they'll no longer work as-is and one of the links is broken (#15028).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/452815353/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/454646632",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#issuecomment-454646632",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15043",
    "id": 454646632,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDY0NjYzMg==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T04:20:12Z",
    "updated_at": "2019-01-16T04:20:12Z",
    "author_association": "MEMBER",
    "body": "@laanwj The previous corpus can still be used by stripping the first few (4?) bytes off of the seeds. I will do that (and move them to a separate repo) after this pull has been merged.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/454646632/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457322135",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#issuecomment-457322135",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15043",
    "id": 457322135,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzMyMjEzNQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T19:19:41Z",
    "updated_at": "2019-01-24T19:19:41Z",
    "author_association": "MEMBER",
    "body": "This hasn't received any review, but I am going to merge it tomorrow unless someone objects to that.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457322135/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457413377",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#issuecomment-457413377",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15043",
    "id": 457413377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzQxMzM3Nw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-25T00:43:10Z",
    "updated_at": "2019-01-25T00:43:10Z",
    "author_association": "MEMBER",
    "body": "Wouldn't it be easier to accomplish this by having a since source file for all fuzz target, but with a macro define (-D... argument) to select which fuzzer is invoked by main?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457413377/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457427812",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#issuecomment-457427812",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15043",
    "id": 457427812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzQyNzgxMg==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-25T01:58:00Z",
    "updated_at": "2019-01-25T01:58:00Z",
    "author_association": "MEMBER",
    "body": "@sipa Wouldn't that require to pass in and compile for each fuzz target? That seems to move the verbosity to the user/ci script/fuzz runner.\r\n\r\nAlso having a single source file makes it harder to see what each single fuzz test does (and depends on).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457427812/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457452487",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#issuecomment-457452487",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15043",
    "id": 457452487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzQ1MjQ4Nw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-25T04:32:26Z",
    "updated_at": "2019-01-25T04:32:53Z",
    "author_association": "MEMBER",
    "body": "@MarcoFalke The build system would automatically build all of them, supplying the necessary -D arguments for each binary.\n\nThis would avoid all the boilerplate in all those source files.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457452487/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457765728",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#issuecomment-457765728",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15043",
    "id": 457765728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Nzc2NTcyOA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-25T23:07:22Z",
    "updated_at": "2019-01-25T23:07:22Z",
    "author_association": "MEMBER",
    "body": "Ah, I see. Done and removed 400 lines of boilerplate and headers.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457765728/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457777667",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#issuecomment-457777667",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15043",
    "id": 457777667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Nzc3NzY2Nw==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-26T00:10:51Z",
    "updated_at": "2019-01-30T00:08:57Z",
    "author_association": "MEMBER",
    "body": "Now split into two commits, where the top commit is some move-only:\r\n\r\n```\r\ngit diff 2ca632e5b44a8385989c8539cc4e30e60fdee16c~ 2ca632e5b44a8385989c8539cc4e30e60fdee16c --color-moved=dimmed-zebra src/test",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457777667/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244297861",
    "pull_request_review_id": 188263241,
    "id": 244297861,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NDI5Nzg2MQ==",
    "diff_hunk": "@@ -0,0 +1,26 @@\n+// Copyright (c) 2009-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <primitives/block.h>\n+\n+#include <test/test_bitcoin_fuzzy.hpp>\n+\n+static void test_one_input(std::vector<uint8_t> buffer)\n+{\n+    CDataStream ds(buffer, SER_NETWORK, INIT_PROTO_VERSION);\n+    try {\n+        int nVersion;\n+        ds >> nVersion;\n+        ds.SetVersion(nVersion);\n+    } catch (const std::ios_base::failure& e) {",
    "path": "src/test/test_bitcoin_fuzzy-blockheader_deserialize.cpp",
    "position": null,
    "original_position": 16,
    "commit_id": "2ca632e5b44a8385989c8539cc4e30e60fdee16c",
    "original_commit_id": "0293c5d91ea75deb25eed9695451fbbfcf29d246",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Drop the unused `e` variable. Applies throughout this PR.",
    "created_at": "2018-12-28T10:33:35Z",
    "updated_at": "2019-01-30T00:03:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#discussion_r244297861",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15043",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244297861"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15043#discussion_r244297861"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15043"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244297861/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 16,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244298123",
    "pull_request_review_id": 188263241,
    "id": 244298123,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NDI5ODEyMw==",
    "diff_hunk": "@@ -0,0 +1,25 @@\n+// Copyright (c) 2009-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <primitives/transaction.h>\n+\n+#include <test/test_bitcoin_fuzzy.hpp>\n+\n+static void test_one_input(std::vector<uint8_t> buffer)",
    "path": "src/test/test_bitcoin_fuzzy-transaction_deserialize.cpp",
    "position": null,
    "original_position": 9,
    "commit_id": "2ca632e5b44a8385989c8539cc4e30e60fdee16c",
    "original_commit_id": "0293c5d91ea75deb25eed9695451fbbfcf29d246",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Make `buffer` const reference. Applies throughout this PR :-)",
    "created_at": "2018-12-28T10:35:37Z",
    "updated_at": "2019-01-30T00:03:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#discussion_r244298123",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15043",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244298123"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15043#discussion_r244298123"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15043"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244298123/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 9,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244298294",
    "pull_request_review_id": 188263241,
    "id": 244298294,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NDI5ODI5NA==",
    "diff_hunk": "@@ -0,0 +1,90 @@\n+// Copyright (c) 2009-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <stdint.h>\n+#include <unistd.h>\n+\n+#include <algorithm>\n+#include <functional>\n+#include <memory>\n+#include <vector>\n+\n+#include <pubkey.h>\n+#include <streams.h>\n+#include <util/memory.h>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static bool read_stdin(std::vector<uint8_t>& data)\n+{\n+    uint8_t buffer[1024];\n+    ssize_t length = 0;\n+    while ((length = read(STDIN_FILENO, buffer, 1024)) > 0) {\n+        data.insert(data.end(), buffer, buffer + length);\n+\n+        if (data.size() > (1 << 20)) return false;\n+    }\n+    return length == 0;\n+}\n+\n+static void test_one_input(std::vector<uint8_t> buffer);\n+\n+static std::unique_ptr<ECCVerifyHandle> globalVerifyHandle;\n+void initialize()\n+{\n+    globalVerifyHandle = MakeUnique<ECCVerifyHandle>();\n+}\n+\n+// This function is used by libFuzzer\n+extern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)\n+{\n+    test_one_input(std::vector<uint8_t>(data, data + size));\n+    return 0;\n+}\n+\n+// This function is used by libFuzzer\n+extern \"C\" int LLVMFuzzerInitialize(int* argc, char*** argv)",
    "path": "src/test/test_bitcoin_fuzzy.hpp",
    "position": null,
    "original_position": 51,
    "commit_id": "2ca632e5b44a8385989c8539cc4e30e60fdee16c",
    "original_commit_id": "0293c5d91ea75deb25eed9695451fbbfcf29d246",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: Could drop unused variable names `argc` and `argv`.",
    "created_at": "2018-12-28T10:36:57Z",
    "updated_at": "2019-01-30T00:03:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#discussion_r244298294",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15043",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244298294"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15043#discussion_r244298294"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15043"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244298294/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 51,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244299565",
    "pull_request_review_id": 188265904,
    "id": 244299565,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NDI5OTU2NQ==",
    "diff_hunk": "@@ -0,0 +1,90 @@\n+// Copyright (c) 2009-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <stdint.h>\n+#include <unistd.h>\n+\n+#include <algorithm>\n+#include <functional>\n+#include <memory>\n+#include <vector>\n+\n+#include <pubkey.h>\n+#include <streams.h>\n+#include <util/memory.h>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static bool read_stdin(std::vector<uint8_t>& data)\n+{\n+    uint8_t buffer[1024];\n+    ssize_t length = 0;\n+    while ((length = read(STDIN_FILENO, buffer, 1024)) > 0) {\n+        data.insert(data.end(), buffer, buffer + length);\n+\n+        if (data.size() > (1 << 20)) return false;\n+    }\n+    return length == 0;\n+}\n+\n+static void test_one_input(std::vector<uint8_t> buffer);\n+\n+static std::unique_ptr<ECCVerifyHandle> globalVerifyHandle;\n+void initialize()\n+{\n+    globalVerifyHandle = MakeUnique<ECCVerifyHandle>();\n+}\n+\n+// This function is used by libFuzzer\n+extern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)\n+{\n+    test_one_input(std::vector<uint8_t>(data, data + size));\n+    return 0;\n+}\n+\n+// This function is used by libFuzzer\n+extern \"C\" int LLVMFuzzerInitialize(int* argc, char*** argv)",
    "path": "src/test/test_bitcoin_fuzzy.hpp",
    "position": null,
    "original_position": 51,
    "commit_id": "2ca632e5b44a8385989c8539cc4e30e60fdee16c",
    "original_commit_id": "0293c5d91ea75deb25eed9695451fbbfcf29d246",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Related: https://llvm.org/docs/LibFuzzer.html#startup-initialization",
    "created_at": "2018-12-28T10:46:05Z",
    "updated_at": "2019-01-30T00:03:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#discussion_r244299565",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15043",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244299565"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15043#discussion_r244299565"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15043"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244299565/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 51,
    "side": "RIGHT",
    "in_reply_to_id": 244298294
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245342915",
    "pull_request_review_id": 189427241,
    "id": 245342915,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTM0MjkxNQ==",
    "diff_hunk": "@@ -26,7 +26,7 @@ To build Bitcoin Core using AFL instrumentation (this assumes that the\n ./configure --disable-ccache --disable-shared --enable-tests CC=${AFLPATH}/afl-gcc CXX=${AFLPATH}/afl-g++\n export AFL_HARDEN=1\n cd src/\n-make test/test_bitcoin_fuzzy\n+make -C src/test",
    "path": "doc/fuzzing.md",
    "position": null,
    "original_position": 18,
    "commit_id": "2ca632e5b44a8385989c8539cc4e30e60fdee16c",
    "original_commit_id": "f0d75314cbb8a79f6b0d7450101172c8b4e87b9b",
    "user": {
      "login": "Crypt-iQ",
      "id": 15145615,
      "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Crypt-iQ",
      "html_url": "https://github.com/Crypt-iQ",
      "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
      "following_url": "https://api.github.com/users/Crypt-iQ/following{/other_user}",
      "gists_url": "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
      "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
      "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
      "events_url": "https://api.github.com/users/Crypt-iQ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "User is already in the `src` directory so this will fail.  I ran `make` with no arguments in the `src` directory and it built the fuzz targets.",
    "created_at": "2019-01-04T16:11:27Z",
    "updated_at": "2019-01-30T00:03:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#discussion_r245342915",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15043",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245342915"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15043#discussion_r245342915"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15043"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245342915/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 29,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247622832",
    "pull_request_review_id": 192318448,
    "id": 247622832,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzYyMjgzMg==",
    "diff_hunk": "@@ -26,7 +26,7 @@ To build Bitcoin Core using AFL instrumentation (this assumes that the\n ./configure --disable-ccache --disable-shared --enable-tests CC=${AFLPATH}/afl-gcc CXX=${AFLPATH}/afl-g++\n export AFL_HARDEN=1\n cd src/\n-make test/test_bitcoin_fuzzy\n+make -C src/test",
    "path": "doc/fuzzing.md",
    "position": null,
    "original_position": 18,
    "commit_id": "2ca632e5b44a8385989c8539cc4e30e60fdee16c",
    "original_commit_id": "f0d75314cbb8a79f6b0d7450101172c8b4e87b9b",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done (changed it to `make`)",
    "created_at": "2019-01-14T19:19:04Z",
    "updated_at": "2019-01-30T00:03:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#discussion_r247622832",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15043",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247622832"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15043#discussion_r247622832"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15043"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247622832/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 29,
    "side": "RIGHT",
    "in_reply_to_id": 245342915
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251552424",
    "pull_request_review_id": 197208485,
    "id": 251552424,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTU1MjQyNA==",
    "diff_hunk": "@@ -147,6 +146,11 @@ AC_ARG_ENABLE([extended-functional-tests],\n     [use_extended_functional_tests=$enableval],\n     [use_extended_functional_tests=no])\n \n+AC_ARG_ENABLE([fuzz],\n+    AS_HELP_STRING([--enable-fuzz],[enable building of fuzz targets (default no)]),",
    "path": "configure.ac",
    "position": 13,
    "original_position": 13,
    "commit_id": "2ca632e5b44a8385989c8539cc4e30e60fdee16c",
    "original_commit_id": "02606835e6616afe4253516ca00c901637301811",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Bikeshedding perhaps but `--enable-fuzzing` feels more natural to me than `--enable-fuzz`.",
    "created_at": "2019-01-28T19:08:47Z",
    "updated_at": "2019-01-30T00:03:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#discussion_r251552424",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15043",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251552424"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15043#discussion_r251552424"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15043"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251552424/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 150,
    "original_line": 150,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252384449",
    "pull_request_review_id": 198239955,
    "id": 252384449,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjM4NDQ0OQ==",
    "diff_hunk": "@@ -138,28 +168,348 @@ test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -s\n if ENABLE_ZMQ\n test_test_bitcoin_LDADD += $(ZMQ_LIBS)\n endif\n-#\n-\n-# test_bitcoin_fuzzy binary #\n-test_test_bitcoin_fuzzy_SOURCES = test/test_bitcoin_fuzzy.cpp\n-test_test_bitcoin_fuzzy_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_test_bitcoin_fuzzy_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_test_bitcoin_fuzzy_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n-\n-test_test_bitcoin_fuzzy_LDADD = \\\n-  $(LIBUNIVALUE) \\\n-  $(LIBBITCOIN_SERVER) \\\n-  $(LIBBITCOIN_COMMON) \\\n-  $(LIBBITCOIN_UTIL) \\\n-  $(LIBBITCOIN_CONSENSUS) \\\n-  $(LIBBITCOIN_CRYPTO) \\\n-  $(LIBBITCOIN_CRYPTO_SSE41) \\\n-  $(LIBBITCOIN_CRYPTO_AVX2) \\\n-  $(LIBBITCOIN_CRYPTO_SHANI) \\\n-  $(LIBSECP256K1)\n-\n-test_test_bitcoin_fuzzy_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n-#\n+\n+if ENABLE_FUZZ\n+test_fuzz_block_deserialize_SOURCES = $(FUZZ_SUITE) test/test_bitcoin_fuzzy.cpp\n+test_fuzz_block_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCK_DESERIALIZE=1\n+test_fuzz_block_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_block_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_block_deserialize_LDADD = \\",
    "path": "src/Makefile.test.include",
    "position": 78,
    "original_position": 78,
    "commit_id": "2ca632e5b44a8385989c8539cc4e30e60fdee16c",
    "original_commit_id": "2ca632e5b44a8385989c8539cc4e30e60fdee16c",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You could deduplicate some boilerplate by defining common variables like:\r\n\r\n```\r\nfuzz_common_ldflags = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\r\nfuzz_common_ldadd = $(LIBUNIVALUE) $(LIBBITCOIN_SERVER) $(LIBBITCOIN_COMMON)\r\n```\r\n\r\nand then individual targets could be shortened to:\r\n\r\n```\r\ntest_fuzz_transaction_deserialize_LDFLAGS = $(fuzz_common_ldflags)\r\ntest_fuzz_transaction_deserialize_LDADD = $(fuzz_common_ldadd)\r\n...\r\n\r\ntest_fuzz_block_deserialize_LDFLAGS = $(fuzz_common_ldflags)\r\ntest_fuzz_block_deserialize_LDADD = $(fuzz_common_ldadd)\r\n...\r\n```\r\n\r\nAt least this is what I did in 2060a30063866ed1599134fe28846a69deda773c for #10102. One catch is that LDFLAGS, LDADD, etc suffix can't be capitalized or the variables will be treated specially by automake.",
    "created_at": "2019-01-30T18:38:06Z",
    "updated_at": "2019-01-30T18:47:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#discussion_r252384449",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15043",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252384449"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15043#discussion_r252384449"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15043"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252384449/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 177,
    "original_line": 177,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252386467",
    "pull_request_review_id": 198239955,
    "id": 252386467,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjM4NjQ2Nw==",
    "diff_hunk": "@@ -28,304 +24,144 @@\n #include <memory>\n #include <vector>\n \n-const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n-\n-enum TEST_ID {\n-    CBLOCK_DESERIALIZE=0,\n-    CTRANSACTION_DESERIALIZE,\n-    CBLOCKLOCATOR_DESERIALIZE,\n-    CBLOCKMERKLEROOT,\n-    CADDRMAN_DESERIALIZE,\n-    CBLOCKHEADER_DESERIALIZE,\n-    CBANENTRY_DESERIALIZE,\n-    CTXUNDO_DESERIALIZE,\n-    CBLOCKUNDO_DESERIALIZE,\n-    CCOINS_DESERIALIZE,\n-    CNETADDR_DESERIALIZE,\n-    CSERVICE_DESERIALIZE,\n-    CMESSAGEHEADER_DESERIALIZE,\n-    CADDRESS_DESERIALIZE,\n-    CINV_DESERIALIZE,\n-    CBLOOMFILTER_DESERIALIZE,\n-    CDISKBLOCKINDEX_DESERIALIZE,\n-    CTXOUTCOMPRESSOR_DESERIALIZE,\n-    BLOCKTRANSACTIONS_DESERIALIZE,\n-    BLOCKTRANSACTIONSREQUEST_DESERIALIZE,\n-    TEST_ID_END\n-};\n-\n-static bool read_stdin(std::vector<uint8_t> &data) {\n-    uint8_t buffer[1024];\n-    ssize_t length=0;\n-    while((length = read(STDIN_FILENO, buffer, 1024)) > 0) {\n-        data.insert(data.end(), buffer, buffer+length);\n-\n-        if (data.size() > (1<<20)) return false;\n-    }\n-    return length==0;\n-}\n-\n-static int test_one_input(std::vector<uint8_t> buffer) {\n-    if (buffer.size() < sizeof(uint32_t)) return 0;\n-\n-    uint32_t test_id = 0xffffffff;\n-    memcpy(&test_id, buffer.data(), sizeof(uint32_t));\n-    buffer.erase(buffer.begin(), buffer.begin() + sizeof(uint32_t));\n-\n-    if (test_id >= TEST_ID_END) return 0;\n+#include <test/fuzz/fuzz.h>\n \n+void test_one_input(std::vector<uint8_t> buffer)\n+{\n     CDataStream ds(buffer, SER_NETWORK, INIT_PROTO_VERSION);\n     try {\n         int nVersion;\n         ds >> nVersion;\n         ds.SetVersion(nVersion);\n     } catch (const std::ios_base::failure& e) {\n-        return 0;\n+        return;\n     }\n \n-    switch(test_id) {\n-        case CBLOCK_DESERIALIZE:\n-        {\n+#if BLOCK_DESERIALIZE",
    "path": "src/test/test_bitcoin_fuzzy.cpp",
    "position": 77,
    "original_position": 77,
    "commit_id": "2ca632e5b44a8385989c8539cc4e30e60fdee16c",
    "original_commit_id": "2ca632e5b44a8385989c8539cc4e30e60fdee16c",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think it would make things less complicated just to use separate source files, rather than using these preprocessor defines. These defines don't seem to really decrease duplication, but I guess they they do have the advantage of making it easy to see the different test cases all in one file.",
    "created_at": "2019-01-30T18:43:37Z",
    "updated_at": "2019-01-30T18:47:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#discussion_r252386467",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15043",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252386467"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15043#discussion_r252386467"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15043"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252386467/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 40,
    "original_line": 40,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252415821",
    "pull_request_review_id": 198278698,
    "id": 252415821,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjQxNTgyMQ==",
    "diff_hunk": "@@ -28,304 +24,144 @@\n #include <memory>\n #include <vector>\n \n-const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n-\n-enum TEST_ID {\n-    CBLOCK_DESERIALIZE=0,\n-    CTRANSACTION_DESERIALIZE,\n-    CBLOCKLOCATOR_DESERIALIZE,\n-    CBLOCKMERKLEROOT,\n-    CADDRMAN_DESERIALIZE,\n-    CBLOCKHEADER_DESERIALIZE,\n-    CBANENTRY_DESERIALIZE,\n-    CTXUNDO_DESERIALIZE,\n-    CBLOCKUNDO_DESERIALIZE,\n-    CCOINS_DESERIALIZE,\n-    CNETADDR_DESERIALIZE,\n-    CSERVICE_DESERIALIZE,\n-    CMESSAGEHEADER_DESERIALIZE,\n-    CADDRESS_DESERIALIZE,\n-    CINV_DESERIALIZE,\n-    CBLOOMFILTER_DESERIALIZE,\n-    CDISKBLOCKINDEX_DESERIALIZE,\n-    CTXOUTCOMPRESSOR_DESERIALIZE,\n-    BLOCKTRANSACTIONS_DESERIALIZE,\n-    BLOCKTRANSACTIONSREQUEST_DESERIALIZE,\n-    TEST_ID_END\n-};\n-\n-static bool read_stdin(std::vector<uint8_t> &data) {\n-    uint8_t buffer[1024];\n-    ssize_t length=0;\n-    while((length = read(STDIN_FILENO, buffer, 1024)) > 0) {\n-        data.insert(data.end(), buffer, buffer+length);\n-\n-        if (data.size() > (1<<20)) return false;\n-    }\n-    return length==0;\n-}\n-\n-static int test_one_input(std::vector<uint8_t> buffer) {\n-    if (buffer.size() < sizeof(uint32_t)) return 0;\n-\n-    uint32_t test_id = 0xffffffff;\n-    memcpy(&test_id, buffer.data(), sizeof(uint32_t));\n-    buffer.erase(buffer.begin(), buffer.begin() + sizeof(uint32_t));\n-\n-    if (test_id >= TEST_ID_END) return 0;\n+#include <test/fuzz/fuzz.h>\n \n+void test_one_input(std::vector<uint8_t> buffer)\n+{\n     CDataStream ds(buffer, SER_NETWORK, INIT_PROTO_VERSION);\n     try {\n         int nVersion;\n         ds >> nVersion;\n         ds.SetVersion(nVersion);\n     } catch (const std::ios_base::failure& e) {\n-        return 0;\n+        return;\n     }\n \n-    switch(test_id) {\n-        case CBLOCK_DESERIALIZE:\n-        {\n+#if BLOCK_DESERIALIZE",
    "path": "src/test/test_bitcoin_fuzzy.cpp",
    "position": 77,
    "original_position": 77,
    "commit_id": "2ca632e5b44a8385989c8539cc4e30e60fdee16c",
    "original_commit_id": "2ca632e5b44a8385989c8539cc4e30e60fdee16c",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This was my initial solution, but I changed it back to minimize the diff",
    "created_at": "2019-01-30T20:00:03Z",
    "updated_at": "2019-01-30T20:00:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15043#discussion_r252415821",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15043",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252415821"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15043#discussion_r252415821"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15043"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252415821/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 40,
    "original_line": 40,
    "side": "RIGHT",
    "in_reply_to_id": 252386467
  }
]