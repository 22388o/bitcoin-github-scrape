[
  {
    "sha": "0dc8bf5b925ca876c0b1a100e426056d741aafde",
    "node_id": "C_kwDOABII59oAKDBkYzhiZjViOTI1Y2E4NzZjMGIxYTEwMGU0MjYwNTZkNzQxYWFmZGU",
    "commit": {
      "author": {
        "name": "Niklas G\u00f6gge",
        "email": "n.goeggi@gmail.com",
        "date": "2021-06-25T12:26:57Z"
      },
      "committer": {
        "name": "Niklas G\u00f6gge",
        "email": "n.goeggi@gmail.com",
        "date": "2021-09-28T20:11:30Z"
      },
      "message": "[net processing] Dont request compact blocks in blocks-only mode",
      "tree": {
        "sha": "d156af2272aaf719cfcf5de81fbebdf9ef7d9194",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d156af2272aaf719cfcf5de81fbebdf9ef7d9194"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0dc8bf5b925ca876c0b1a100e426056d741aafde",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0dc8bf5b925ca876c0b1a100e426056d741aafde",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0dc8bf5b925ca876c0b1a100e426056d741aafde",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0dc8bf5b925ca876c0b1a100e426056d741aafde/comments",
    "author": {
      "login": "dergoegge",
      "id": 8077169,
      "node_id": "MDQ6VXNlcjgwNzcxNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dergoegge",
      "html_url": "https://github.com/dergoegge",
      "followers_url": "https://api.github.com/users/dergoegge/followers",
      "following_url": "https://api.github.com/users/dergoegge/following{/other_user}",
      "gists_url": "https://api.github.com/users/dergoegge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
      "organizations_url": "https://api.github.com/users/dergoegge/orgs",
      "repos_url": "https://api.github.com/users/dergoegge/repos",
      "events_url": "https://api.github.com/users/dergoegge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dergoegge/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dergoegge",
      "id": 8077169,
      "node_id": "MDQ6VXNlcjgwNzcxNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dergoegge",
      "html_url": "https://github.com/dergoegge",
      "followers_url": "https://api.github.com/users/dergoegge/followers",
      "following_url": "https://api.github.com/users/dergoegge/following{/other_user}",
      "gists_url": "https://api.github.com/users/dergoegge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
      "organizations_url": "https://api.github.com/users/dergoegge/orgs",
      "repos_url": "https://api.github.com/users/dergoegge/repos",
      "events_url": "https://api.github.com/users/dergoegge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dergoegge/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "efa227f5df5f5a9669dec5f1d574cf22d3c0903f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/efa227f5df5f5a9669dec5f1d574cf22d3c0903f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/efa227f5df5f5a9669dec5f1d574cf22d3c0903f"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 11,
      "deletions": 1
    },
    "files": [
      {
        "sha": "008b4d679c640489453dc9865cf9d8c39122f7b9",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 1,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0dc8bf5b925ca876c0b1a100e426056d741aafde/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0dc8bf5b925ca876c0b1a100e426056d741aafde/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=0dc8bf5b925ca876c0b1a100e426056d741aafde",
        "patch": "@@ -884,6 +884,12 @@ bool PeerManagerImpl::BlockRequested(NodeId nodeid, const CBlockIndex& block, st\n void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n {\n     AssertLockHeld(cs_main);\n+\n+    // Never request high-bandwidth mode from peers if we're blocks-only. Our\n+    // mempool will not contain the transactions necessary to reconstruct the\n+    // compact block.\n+    if (m_ignore_incoming_txs) return;\n+\n     CNodeState* nodestate = State(nodeid);\n     if (!nodestate || !nodestate->fSupportsDesiredCmpctVersion) {\n         // Never ask from peers who can't provide witnesses.\n@@ -2165,7 +2171,11 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n                             pindexLast->GetBlockHash().ToString(), pindexLast->nHeight);\n                 }\n                 if (vGetData.size() > 0) {\n-                    if (nodestate->fSupportsDesiredCmpctVersion && vGetData.size() == 1 && mapBlocksInFlight.size() == 1 && pindexLast->pprev->IsValid(BLOCK_VALID_CHAIN)) {\n+                    if (!m_ignore_incoming_txs &&\n+                        nodestate->fSupportsDesiredCmpctVersion &&\n+                        vGetData.size() == 1 &&\n+                        mapBlocksInFlight.size() == 1 &&\n+                        pindexLast->pprev->IsValid(BLOCK_VALID_CHAIN)) {\n                         // In any case, we want to download using a compact block, not a regular one\n                         vGetData[0] = CInv(MSG_CMPCT_BLOCK, vGetData[0].hash);\n                     }"
      }
    ]
  },
  {
    "sha": "5bf658745782eb571215d6c1e5fe3c655edb55b3",
    "node_id": "C_kwDOABII59oAKDViZjY1ODc0NTc4MmViNTcxMjE1ZDZjMWU1ZmUzYzY1NWVkYjU1YjM",
    "commit": {
      "author": {
        "name": "Niklas G\u00f6gge",
        "email": "n.goeggi@gmail.com",
        "date": "2021-08-08T08:07:58Z"
      },
      "committer": {
        "name": "Niklas G\u00f6gge",
        "email": "n.goeggi@gmail.com",
        "date": "2021-09-28T20:11:30Z"
      },
      "message": "[test] Test that -blocksonly nodes do not request high bandwidth mode.\n\nCo-authored-by: Amiti Uttarwar <amiti@uttarwar.org>",
      "tree": {
        "sha": "2715e791994fb03f9a2f0c4f6aefa79069154fd6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2715e791994fb03f9a2f0c4f6aefa79069154fd6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5bf658745782eb571215d6c1e5fe3c655edb55b3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5bf658745782eb571215d6c1e5fe3c655edb55b3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5bf658745782eb571215d6c1e5fe3c655edb55b3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5bf658745782eb571215d6c1e5fe3c655edb55b3/comments",
    "author": {
      "login": "dergoegge",
      "id": 8077169,
      "node_id": "MDQ6VXNlcjgwNzcxNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dergoegge",
      "html_url": "https://github.com/dergoegge",
      "followers_url": "https://api.github.com/users/dergoegge/followers",
      "following_url": "https://api.github.com/users/dergoegge/following{/other_user}",
      "gists_url": "https://api.github.com/users/dergoegge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
      "organizations_url": "https://api.github.com/users/dergoegge/orgs",
      "repos_url": "https://api.github.com/users/dergoegge/repos",
      "events_url": "https://api.github.com/users/dergoegge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dergoegge/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dergoegge",
      "id": 8077169,
      "node_id": "MDQ6VXNlcjgwNzcxNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dergoegge",
      "html_url": "https://github.com/dergoegge",
      "followers_url": "https://api.github.com/users/dergoegge/followers",
      "following_url": "https://api.github.com/users/dergoegge/following{/other_user}",
      "gists_url": "https://api.github.com/users/dergoegge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
      "organizations_url": "https://api.github.com/users/dergoegge/orgs",
      "repos_url": "https://api.github.com/users/dergoegge/repos",
      "events_url": "https://api.github.com/users/dergoegge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dergoegge/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0dc8bf5b925ca876c0b1a100e426056d741aafde",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0dc8bf5b925ca876c0b1a100e426056d741aafde",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0dc8bf5b925ca876c0b1a100e426056d741aafde"
      }
    ],
    "stats": {
      "total": 85,
      "additions": 85,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b59a81d3ec412c881a447648acf98c1f0ca26b46",
        "filename": "test/functional/p2p_compactblocks_blocksonly.py",
        "status": "added",
        "additions": 84,
        "deletions": 0,
        "changes": 84,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5bf658745782eb571215d6c1e5fe3c655edb55b3/test/functional/p2p_compactblocks_blocksonly.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5bf658745782eb571215d6c1e5fe3c655edb55b3/test/functional/p2p_compactblocks_blocksonly.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_compactblocks_blocksonly.py?ref=5bf658745782eb571215d6c1e5fe3c655edb55b3",
        "patch": "@@ -0,0 +1,84 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that a node in blocksonly mode does not request compact blocks.\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_CMPCT_BLOCK,\n+    MSG_WITNESS_FLAG,\n+    CBlock,\n+    CBlockHeader,\n+    CInv,\n+    from_hex,\n+    msg_block,\n+    msg_headers,\n+    msg_sendcmpct,\n+)\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.extra_args = [[\"-blocksonly\"], [], []]\n+        self.num_nodes = 3\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+        # Start network with everyone disconnected\n+        self.sync_all()\n+\n+    def build_block_on_tip(self):\n+        blockhash = self.nodes[2].generate(1)[0]\n+        block_hex = self.nodes[2].getblock(blockhash=blockhash, verbosity=0)\n+        block = from_hex(CBlock(), block_hex)\n+        block.rehash()\n+        return block\n+\n+    def run_test(self):\n+        # Nodes will only request hb compact blocks mode when they're out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\n+        p2p_conn_high_bw = self.nodes[1].add_p2p_connection(P2PInterface())\n+        for conn in [p2p_conn_blocksonly, p2p_conn_high_bw]:\n+            assert_equal(conn.message_count['sendcmpct'], 2)\n+            conn.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+\n+        # Nodes:\n+        #   0 -> blocksonly\n+        #   1 -> high bandwidth\n+        #   2 -> miner\n+        #\n+        # Topology:\n+        #   p2p_conn_blocksonly ---> node0\n+        #   p2p_conn_high_bw    ---> node1\n+        #   node2 (no connections)\n+        #\n+        # node2 produces blocks that are passed to the rest of the nodes\n+        # through the respective p2p connections.\n+\n+        self.log.info(\"Test that -blocksonly nodes do not select peers for BIP152 high bandwidth mode\")\n+\n+        block0 = self.build_block_on_tip()\n+\n+        # A -blocksonly node should not request BIP152 high bandwidth mode upon\n+        # receiving a new valid block at the tip.\n+        p2p_conn_blocksonly.send_and_ping(msg_block(block0))\n+        assert_equal(int(self.nodes[0].getbestblockhash(), 16), block0.sha256)\n+        assert_equal(p2p_conn_blocksonly.message_count['sendcmpct'], 2)\n+        assert_equal(p2p_conn_blocksonly.last_message['sendcmpct'].announce, False)\n+\n+        # A normal node participating in transaction relay should request BIP152\n+        # high bandwidth mode upon receiving a new valid block at the tip.\n+        p2p_conn_high_bw.send_and_ping(msg_block(block0))\n+        assert_equal(int(self.nodes[1].getbestblockhash(), 16), block0.sha256)\n+        p2p_conn_high_bw.wait_until(lambda: p2p_conn_high_bw.message_count['sendcmpct'] == 3)\n+        assert_equal(p2p_conn_high_bw.last_message['sendcmpct'].announce, True)\n+\n+if __name__ == '__main__':\n+    P2PCompactBlocksBlocksOnly().main()"
      },
      {
        "sha": "6f7f757a3becb07caeae6f50afa88060e1adae41",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5bf658745782eb571215d6c1e5fe3c655edb55b3/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5bf658745782eb571215d6c1e5fe3c655edb55b3/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=5bf658745782eb571215d6c1e5fe3c655edb55b3",
        "patch": "@@ -98,6 +98,7 @@\n     'rpc_fundrawtransaction.py --legacy-wallet',\n     'rpc_fundrawtransaction.py --descriptors',\n     'p2p_compactblocks.py',\n+    'p2p_compactblocks_blocksonly.py',\n     'feature_segwit.py --legacy-wallet',\n     # vv Tests less than 2m vv\n     'wallet_basic.py --legacy-wallet',"
      }
    ]
  },
  {
    "sha": "5e231c116ba8165e9d8c795b85ca2833238aed54",
    "node_id": "C_kwDOABII59oAKDVlMjMxYzExNmJhODE2NWU5ZDhjNzk1Yjg1Y2EyODMzMjM4YWVkNTQ",
    "commit": {
      "author": {
        "name": "Niklas G\u00f6gge",
        "email": "n.goeggi@gmail.com",
        "date": "2021-08-08T08:08:52Z"
      },
      "committer": {
        "name": "Niklas G\u00f6gge",
        "email": "n.goeggi@gmail.com",
        "date": "2021-09-28T20:11:30Z"
      },
      "message": "[test] Test that -blocksonly nodes do not send getdata(CMPCT) on a low bandwidth connection.\n\nCo-authored-by: Amiti Uttarwar <amiti@uttarwar.org>",
      "tree": {
        "sha": "c6254f7f359eacd27a17bf4f28924300e3b032ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c6254f7f359eacd27a17bf4f28924300e3b032ac"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e231c116ba8165e9d8c795b85ca2833238aed54",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e231c116ba8165e9d8c795b85ca2833238aed54",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5e231c116ba8165e9d8c795b85ca2833238aed54",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e231c116ba8165e9d8c795b85ca2833238aed54/comments",
    "author": {
      "login": "dergoegge",
      "id": 8077169,
      "node_id": "MDQ6VXNlcjgwNzcxNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dergoegge",
      "html_url": "https://github.com/dergoegge",
      "followers_url": "https://api.github.com/users/dergoegge/followers",
      "following_url": "https://api.github.com/users/dergoegge/following{/other_user}",
      "gists_url": "https://api.github.com/users/dergoegge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
      "organizations_url": "https://api.github.com/users/dergoegge/orgs",
      "repos_url": "https://api.github.com/users/dergoegge/repos",
      "events_url": "https://api.github.com/users/dergoegge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dergoegge/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dergoegge",
      "id": 8077169,
      "node_id": "MDQ6VXNlcjgwNzcxNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dergoegge",
      "html_url": "https://github.com/dergoegge",
      "followers_url": "https://api.github.com/users/dergoegge/followers",
      "following_url": "https://api.github.com/users/dergoegge/following{/other_user}",
      "gists_url": "https://api.github.com/users/dergoegge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
      "organizations_url": "https://api.github.com/users/dergoegge/orgs",
      "repos_url": "https://api.github.com/users/dergoegge/repos",
      "events_url": "https://api.github.com/users/dergoegge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dergoegge/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5bf658745782eb571215d6c1e5fe3c655edb55b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5bf658745782eb571215d6c1e5fe3c655edb55b3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5bf658745782eb571215d6c1e5fe3c655edb55b3"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 13,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f690fce0d6542963c0d0a6acc61eebbab9c7fe2b",
        "filename": "test/functional/p2p_compactblocks_blocksonly.py",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e231c116ba8165e9d8c795b85ca2833238aed54/test/functional/p2p_compactblocks_blocksonly.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e231c116ba8165e9d8c795b85ca2833238aed54/test/functional/p2p_compactblocks_blocksonly.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_compactblocks_blocksonly.py?ref=5e231c116ba8165e9d8c795b85ca2833238aed54",
        "patch": "@@ -80,5 +80,18 @@ def run_test(self):\n         p2p_conn_high_bw.wait_until(lambda: p2p_conn_high_bw.message_count['sendcmpct'] == 3)\n         assert_equal(p2p_conn_high_bw.last_message['sendcmpct'].announce, True)\n \n+        self.log.info(\"Test that -blocksonly nodes send getdata(BLOCK) instead\"\n+                      \" of getdata(CMPCT) in BIP152 low bandwidth mode\")\n+\n+        block1 = self.build_block_on_tip()\n+\n+        p2p_conn_blocksonly.send_message(msg_headers(headers=[CBlockHeader(block1)]))\n+        p2p_conn_blocksonly.sync_send_with_ping()\n+        assert_equal(p2p_conn_blocksonly.last_message['getdata'].inv, [CInv(MSG_BLOCK | MSG_WITNESS_FLAG, block1.sha256)])\n+\n+        p2p_conn_high_bw.send_message(msg_headers(headers=[CBlockHeader(block1)]))\n+        p2p_conn_high_bw.sync_send_with_ping()\n+        assert_equal(p2p_conn_high_bw.last_message['getdata'].inv, [CInv(MSG_CMPCT_BLOCK, block1.sha256)])\n+\n if __name__ == '__main__':\n     P2PCompactBlocksBlocksOnly().main()"
      }
    ]
  },
  {
    "sha": "a79ad65fc2c31a2b1132a6aab389d0197a95c395",
    "node_id": "C_kwDOABII59oAKGE3OWFkNjVmYzJjMzFhMmIxMTMyYTZhYWIzODlkMDE5N2E5NWMzOTU",
    "commit": {
      "author": {
        "name": "Niklas G\u00f6gge",
        "email": "n.goeggi@gmail.com",
        "date": "2021-08-09T19:17:57Z"
      },
      "committer": {
        "name": "Niklas G\u00f6gge",
        "email": "n.goeggi@gmail.com",
        "date": "2021-09-28T20:11:30Z"
      },
      "message": "[test] Test that getdata(CMPCT) is still sent on regular low bandwidth connections.\n\nCo-authored-by: Amiti Uttarwar <amiti@uttarwar.org>",
      "tree": {
        "sha": "5ab7d33992413f52ba7075c2736d80a670cd5d8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5ab7d33992413f52ba7075c2736d80a670cd5d8a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a79ad65fc2c31a2b1132a6aab389d0197a95c395",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a79ad65fc2c31a2b1132a6aab389d0197a95c395",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a79ad65fc2c31a2b1132a6aab389d0197a95c395",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a79ad65fc2c31a2b1132a6aab389d0197a95c395/comments",
    "author": {
      "login": "dergoegge",
      "id": 8077169,
      "node_id": "MDQ6VXNlcjgwNzcxNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dergoegge",
      "html_url": "https://github.com/dergoegge",
      "followers_url": "https://api.github.com/users/dergoegge/followers",
      "following_url": "https://api.github.com/users/dergoegge/following{/other_user}",
      "gists_url": "https://api.github.com/users/dergoegge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
      "organizations_url": "https://api.github.com/users/dergoegge/orgs",
      "repos_url": "https://api.github.com/users/dergoegge/repos",
      "events_url": "https://api.github.com/users/dergoegge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dergoegge/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dergoegge",
      "id": 8077169,
      "node_id": "MDQ6VXNlcjgwNzcxNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dergoegge",
      "html_url": "https://github.com/dergoegge",
      "followers_url": "https://api.github.com/users/dergoegge/followers",
      "following_url": "https://api.github.com/users/dergoegge/following{/other_user}",
      "gists_url": "https://api.github.com/users/dergoegge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
      "organizations_url": "https://api.github.com/users/dergoegge/orgs",
      "repos_url": "https://api.github.com/users/dergoegge/repos",
      "events_url": "https://api.github.com/users/dergoegge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dergoegge/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5e231c116ba8165e9d8c795b85ca2833238aed54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e231c116ba8165e9d8c795b85ca2833238aed54",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5e231c116ba8165e9d8c795b85ca2833238aed54"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 17,
      "deletions": 3
    },
    "files": [
      {
        "sha": "93164d30344843671b53f9858be24362e3f0b9c6",
        "filename": "test/functional/p2p_compactblocks_blocksonly.py",
        "status": "modified",
        "additions": 17,
        "deletions": 3,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a79ad65fc2c31a2b1132a6aab389d0197a95c395/test/functional/p2p_compactblocks_blocksonly.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a79ad65fc2c31a2b1132a6aab389d0197a95c395/test/functional/p2p_compactblocks_blocksonly.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_compactblocks_blocksonly.py?ref=a79ad65fc2c31a2b1132a6aab389d0197a95c395",
        "patch": "@@ -23,8 +23,8 @@\n \n class P2PCompactBlocksBlocksOnly(BitcoinTestFramework):\n     def set_test_params(self):\n-        self.extra_args = [[\"-blocksonly\"], [], []]\n-        self.num_nodes = 3\n+        self.extra_args = [[\"-blocksonly\"], [], [], []]\n+        self.num_nodes = 4\n \n     def setup_network(self):\n         self.setup_nodes()\n@@ -45,18 +45,21 @@ def run_test(self):\n \n         p2p_conn_blocksonly = self.nodes[0].add_p2p_connection(P2PInterface())\n         p2p_conn_high_bw = self.nodes[1].add_p2p_connection(P2PInterface())\n-        for conn in [p2p_conn_blocksonly, p2p_conn_high_bw]:\n+        p2p_conn_low_bw = self.nodes[3].add_p2p_connection(P2PInterface())\n+        for conn in [p2p_conn_blocksonly, p2p_conn_high_bw, p2p_conn_low_bw]:\n             assert_equal(conn.message_count['sendcmpct'], 2)\n             conn.send_and_ping(msg_sendcmpct(announce=False, version=2))\n \n         # Nodes:\n         #   0 -> blocksonly\n         #   1 -> high bandwidth\n         #   2 -> miner\n+        #   3 -> low bandwidth\n         #\n         # Topology:\n         #   p2p_conn_blocksonly ---> node0\n         #   p2p_conn_high_bw    ---> node1\n+        #   p2p_conn_low_bw     ---> node3\n         #   node2 (no connections)\n         #\n         # node2 produces blocks that are passed to the rest of the nodes\n@@ -80,6 +83,10 @@ def run_test(self):\n         p2p_conn_high_bw.wait_until(lambda: p2p_conn_high_bw.message_count['sendcmpct'] == 3)\n         assert_equal(p2p_conn_high_bw.last_message['sendcmpct'].announce, True)\n \n+        # Don't send a block from the p2p_conn_low_bw so the low bandwidth node\n+        # doesn't select it for BIP152 high bandwidth relay.\n+        self.nodes[3].submitblock(block0.serialize().hex())\n+\n         self.log.info(\"Test that -blocksonly nodes send getdata(BLOCK) instead\"\n                       \" of getdata(CMPCT) in BIP152 low bandwidth mode\")\n \n@@ -93,5 +100,12 @@ def run_test(self):\n         p2p_conn_high_bw.sync_send_with_ping()\n         assert_equal(p2p_conn_high_bw.last_message['getdata'].inv, [CInv(MSG_CMPCT_BLOCK, block1.sha256)])\n \n+        self.log.info(\"Test that getdata(CMPCT) is still sent on BIP152 low bandwidth connections\"\n+                      \" when no -blocksonly nodes are involved\")\n+\n+        p2p_conn_low_bw.send_and_ping(msg_headers(headers=[CBlockHeader(block1)]))\n+        p2p_conn_low_bw.sync_with_ping()\n+        assert_equal(p2p_conn_low_bw.last_message['getdata'].inv, [CInv(MSG_CMPCT_BLOCK, block1.sha256)])\n+\n if __name__ == '__main__':\n     P2PCompactBlocksBlocksOnly().main()"
      }
    ]
  },
  {
    "sha": "18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
    "node_id": "C_kwDOABII59oAKDE4YzViMjNhMGY3YWRmOWEwOGJjYWE5NjdlZDgwMGJhZGY2MmQ5MGE",
    "commit": {
      "author": {
        "name": "Niklas G\u00f6gge",
        "email": "n.goeggi@gmail.com",
        "date": "2021-08-09T19:54:02Z"
      },
      "committer": {
        "name": "Niklas G\u00f6gge",
        "email": "n.goeggi@gmail.com",
        "date": "2021-09-28T20:11:30Z"
      },
      "message": "[test] Test that -blocksonly nodes still serve compact blocks.",
      "tree": {
        "sha": "52c933b45246ae55f7025c9069dced14cdbc67eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/52c933b45246ae55f7025c9069dced14cdbc67eb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/18c5b23a0f7adf9a08bcaa967ed800badf62d90a/comments",
    "author": {
      "login": "dergoegge",
      "id": 8077169,
      "node_id": "MDQ6VXNlcjgwNzcxNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dergoegge",
      "html_url": "https://github.com/dergoegge",
      "followers_url": "https://api.github.com/users/dergoegge/followers",
      "following_url": "https://api.github.com/users/dergoegge/following{/other_user}",
      "gists_url": "https://api.github.com/users/dergoegge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
      "organizations_url": "https://api.github.com/users/dergoegge/orgs",
      "repos_url": "https://api.github.com/users/dergoegge/repos",
      "events_url": "https://api.github.com/users/dergoegge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dergoegge/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dergoegge",
      "id": 8077169,
      "node_id": "MDQ6VXNlcjgwNzcxNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dergoegge",
      "html_url": "https://github.com/dergoegge",
      "followers_url": "https://api.github.com/users/dergoegge/followers",
      "following_url": "https://api.github.com/users/dergoegge/following{/other_user}",
      "gists_url": "https://api.github.com/users/dergoegge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
      "organizations_url": "https://api.github.com/users/dergoegge/orgs",
      "repos_url": "https://api.github.com/users/dergoegge/repos",
      "events_url": "https://api.github.com/users/dergoegge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dergoegge/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a79ad65fc2c31a2b1132a6aab389d0197a95c395",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a79ad65fc2c31a2b1132a6aab389d0197a95c395",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a79ad65fc2c31a2b1132a6aab389d0197a95c395"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 19,
      "deletions": 0
    },
    "files": [
      {
        "sha": "4073ec03a691470f4ffd62820984ebb9c7432085",
        "filename": "test/functional/p2p_compactblocks_blocksonly.py",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/18c5b23a0f7adf9a08bcaa967ed800badf62d90a/test/functional/p2p_compactblocks_blocksonly.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/18c5b23a0f7adf9a08bcaa967ed800badf62d90a/test/functional/p2p_compactblocks_blocksonly.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_compactblocks_blocksonly.py?ref=18c5b23a0f7adf9a08bcaa967ed800badf62d90a",
        "patch": "@@ -13,6 +13,7 @@\n     CInv,\n     from_hex,\n     msg_block,\n+    msg_getdata,\n     msg_headers,\n     msg_sendcmpct,\n )\n@@ -107,5 +108,23 @@ def run_test(self):\n         p2p_conn_low_bw.sync_with_ping()\n         assert_equal(p2p_conn_low_bw.last_message['getdata'].inv, [CInv(MSG_CMPCT_BLOCK, block1.sha256)])\n \n+        self.log.info(\"Test that -blocksonly nodes still serve compact blocks\")\n+\n+        def test_for_cmpctblock(block):\n+            if 'cmpctblock' not in p2p_conn_blocksonly.last_message:\n+                return False\n+            return p2p_conn_blocksonly.last_message['cmpctblock'].header_and_shortids.header.rehash() == block.sha256\n+\n+        p2p_conn_blocksonly.send_message(msg_getdata([CInv(MSG_CMPCT_BLOCK, block0.sha256)]))\n+        p2p_conn_blocksonly.wait_until(lambda: test_for_cmpctblock(block0))\n+\n+        # Request BIP152 high bandwidth mode from the -blocksonly node.\n+        p2p_conn_blocksonly.send_and_ping(msg_sendcmpct(announce=True, version=2))\n+\n+        block2 = self.build_block_on_tip()\n+        self.nodes[0].submitblock(block1.serialize().hex())\n+        self.nodes[0].submitblock(block2.serialize().hex())\n+        p2p_conn_blocksonly.wait_until(lambda: test_for_cmpctblock(block2))\n+\n if __name__ == '__main__':\n     P2PCompactBlocksBlocksOnly().main()"
      }
    ]
  }
]