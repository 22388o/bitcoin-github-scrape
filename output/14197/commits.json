[
  {
    "sha": "f8c1714634445542a16ac01d128d8ad2b2810e19",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmOGMxNzE0NjM0NDQ1NTQyYTE2YWMwMWQxMjhkOGFkMmIyODEwZTE5",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-09-11T04:13:19Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-09-22T19:27:01Z"
      },
      "message": "Convert non-witness UTXOs to witness if witness sig created\n\nIf a witness signature was created when a non-witness UTXO is used,\nconvert the non-witness UTXO to a witness one.",
      "tree": {
        "sha": "c495ff13685a3f5278fb7132e52b5a4d5c1f5712",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c495ff13685a3f5278fb7132e52b5a4d5c1f5712"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f8c1714634445542a16ac01d128d8ad2b2810e19",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8c1714634445542a16ac01d128d8ad2b2810e19",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f8c1714634445542a16ac01d128d8ad2b2810e19",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8c1714634445542a16ac01d128d8ad2b2810e19/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2796c6e5ec9055545e987023b04eb5ebe64d5320",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2796c6e5ec9055545e987023b04eb5ebe64d5320",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2796c6e5ec9055545e987023b04eb5ebe64d5320"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "83cc210b30160d0d6d963e2d47fe38e32239e552",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8c1714634445542a16ac01d128d8ad2b2810e19/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8c1714634445542a16ac01d128d8ad2b2810e19/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=f8c1714634445542a16ac01d128d8ad2b2810e19",
        "patch": "@@ -277,6 +277,11 @@ bool SignPSBTInput(const SigningProvider& provider, const CMutableTransaction& t\n     if (require_witness_sig && !sigdata.witness) return false;\n     input.FromSignatureData(sigdata);\n \n+    if (sigdata.witness) {\n+        assert(!utxo.IsNull());\n+        input.witness_utxo = utxo;\n+    }\n+\n     // If both UTXO types are present, drop the unnecessary one.\n     if (input.non_witness_utxo && !input.witness_utxo.IsNull()) {\n         if (sigdata.witness) {"
      }
    ]
  },
  {
    "sha": "862d159d635c1de219d94e030b186a745fe28eb9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NjJkMTU5ZDYzNWMxZGUyMTlkOTRlMDMwYjE4NmE3NDVmZTI4ZWI5",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-09-20T18:43:06Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-09-22T19:27:25Z"
      },
      "message": "Add test for conversion from non-witness to witness UTXO",
      "tree": {
        "sha": "ad3985ae5b1d17e0aea57791b4121f9c56952048",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ad3985ae5b1d17e0aea57791b4121f9c56952048"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/862d159d635c1de219d94e030b186a745fe28eb9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/862d159d635c1de219d94e030b186a745fe28eb9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/862d159d635c1de219d94e030b186a745fe28eb9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/862d159d635c1de219d94e030b186a745fe28eb9/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f8c1714634445542a16ac01d128d8ad2b2810e19",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8c1714634445542a16ac01d128d8ad2b2810e19",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f8c1714634445542a16ac01d128d8ad2b2810e19"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 46,
      "deletions": 1
    },
    "files": [
      {
        "sha": "fca910bf64c6cd0e8adcb48a22649c281b13bf09",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 46,
        "deletions": 1,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/862d159d635c1de219d94e030b186a745fe28eb9/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/862d159d635c1de219d94e030b186a745fe28eb9/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=862d159d635c1de219d94e030b186a745fe28eb9",
        "patch": "@@ -6,7 +6,7 @@\n \"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal, assert_raises_rpc_error, find_output\n+from test_framework.util import assert_equal, assert_raises_rpc_error, find_output, disconnect_nodes, connect_nodes_bi, sync_blocks\n \n import json\n import os\n@@ -23,6 +23,45 @@ def set_test_params(self):\n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n+    def test_utxo_conversion(self):\n+        mining_node = self.nodes[2]\n+        offline_node = self.nodes[0]\n+        online_node = self.nodes[1]\n+\n+        # Disconnect offline node from others\n+        disconnect_nodes(offline_node, 1)\n+        disconnect_nodes(online_node, 0)\n+        disconnect_nodes(offline_node, 2)\n+        disconnect_nodes(mining_node, 0)\n+\n+        # Mine a transaction that credits the offline address\n+        offline_addr = offline_node.getnewaddress(address_type=\"p2sh-segwit\")\n+        online_addr = online_node.getnewaddress(address_type=\"p2sh-segwit\")\n+        online_node.importaddress(offline_addr, \"\", False)\n+        mining_node.sendtoaddress(address=offline_addr, amount=1.0)\n+        mining_node.generate(nblocks=1)\n+        sync_blocks([mining_node, online_node])\n+\n+        # Construct an unsigned PSBT on the online node (who doesn't know the output is Segwit, so will include a non-witness UTXO)\n+        utxos = online_node.listunspent(addresses=[offline_addr])\n+        raw = online_node.createrawtransaction([{\"txid\":utxos[0][\"txid\"], \"vout\":utxos[0][\"vout\"]}],[{online_addr:0.9999}])\n+        psbt = online_node.walletprocesspsbt(online_node.converttopsbt(raw))[\"psbt\"]\n+        assert(\"non_witness_utxo\" in mining_node.decodepsbt(psbt)[\"inputs\"][0])\n+\n+        # Have the offline node sign the PSBT (which will update the UTXO to segwit)\n+        signed_psbt = offline_node.walletprocesspsbt(psbt)[\"psbt\"]\n+        assert(\"witness_utxo\" in mining_node.decodepsbt(signed_psbt)[\"inputs\"][0])\n+\n+        # Make sure we can mine the resulting transaction\n+        txid = mining_node.sendrawtransaction(mining_node.finalizepsbt(signed_psbt)[\"hex\"])\n+        mining_node.generate(1)\n+        sync_blocks([mining_node, online_node])\n+        assert_equal(online_node.gettxout(txid,0)[\"confirmations\"], 1)\n+\n+        # Reconnect\n+        connect_nodes_bi(self.nodes, 0, 1)\n+        connect_nodes_bi(self.nodes, 0, 2)\n+\n     def run_test(self):\n         # Create and fund a raw tx for sending 10 BTC\n         psbtx1 = self.nodes[0].walletcreatefundedpsbt([], {self.nodes[2].getnewaddress():10})['psbt']\n@@ -224,6 +263,12 @@ def run_test(self):\n             extracted = self.nodes[2].finalizepsbt(extractor['extract'], True)['hex']\n             assert_equal(extracted, extractor['result'])\n \n+        # Unload extra wallets\n+        for i, signer in enumerate(signers):\n+            self.nodes[2].unloadwallet(\"wallet{}\".format(i))\n+\n+        self.test_utxo_conversion()\n+\n \n if __name__ == '__main__':\n     PSBTTest().main()"
      }
    ]
  }
]