[
  {
    "sha": "57c77fe4d318a156d98606ee74f0064b22c31631",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1N2M3N2ZlNGQzMThhMTU2ZDk4NjA2ZWU3NGYwMDY0YjIyYzMxNjMx",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-07-03T07:26:51Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-10-02T09:38:14Z"
      },
      "message": "banlist: update set dirty to be more fine grained\n\n- move the SetBannedSetDirty(false) call from DumpData() into DumpBanlist()\n- ensure we only set false, if the write succeeded",
      "tree": {
        "sha": "6ff3f66d1377fdf71859fcdbb52f2da5a1e3e60e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6ff3f66d1377fdf71859fcdbb52f2da5a1e3e60e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/57c77fe4d318a156d98606ee74f0064b22c31631",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57c77fe4d318a156d98606ee74f0064b22c31631",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/57c77fe4d318a156d98606ee74f0064b22c31631",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57c77fe4d318a156d98606ee74f0064b22c31631/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "5ab5dca6f1bb1eccd47ea64834acc4fee0435b73",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ab5dca6f1bb1eccd47ea64834acc4fee0435b73",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5ab5dca6f1bb1eccd47ea64834acc4fee0435b73"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 4,
      "deletions": 7
    },
    "files": [
      {
        "sha": "b13177fe2559218c69ac23204830a9442f3c6320",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 7,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57c77fe4d318a156d98606ee74f0064b22c31631/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57c77fe4d318a156d98606ee74f0064b22c31631/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=57c77fe4d318a156d98606ee74f0064b22c31631",
        "patch": "@@ -1455,10 +1455,7 @@ void DumpData()\n     DumpAddresses();\n \n     if (CNode::BannedSetIsDirty())\n-    {\n         DumpBanlist();\n-        CNode::SetBannedSetDirty(false);\n-    }\n }\n \n void static ProcessOneShot()\n@@ -2484,14 +2481,14 @@ bool CBanDB::Read(banmap_t& banSet)\n void DumpBanlist()\n {\n     int64_t nStart = GetTimeMillis();\n-\n-    CNode::SweepBanned(); //clean unused entries (if bantime has expired)\n+    CNode::SweepBanned(); // clean unused entries (if bantime has expired)\n \n     CBanDB bandb;\n     banmap_t banmap;\n     CNode::GetBanned(banmap);\n-    bandb.Write(banmap);\n+    if (bandb.Write(banmap))\n+        CNode::SetBannedSetDirty(false);\n \n     LogPrint(\"net\", \"Flushed %d banned node ips/subnets to banlist.dat  %dms\\n\",\n-             banmap.size(), GetTimeMillis() - nStart);\n+        banmap.size(), GetTimeMillis() - nStart);\n }"
      }
    ]
  },
  {
    "sha": "ce479aaadaab296f0d06808fe230c4b13523cc28",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZTQ3OWFhYWRhYWIyOTZmMGQwNjgwOGZlMjMwYzRiMTM1MjNjYzI4",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-07-03T07:44:49Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-10-02T09:38:15Z"
      },
      "message": "banlist: better handling of banlist in StartNode()\n\n- only start working on/with banlist data, if reading in the banlist from\n  disk didn't fail\n- as CNode::setBannedIsDirty is false (default) when reading fails, we\n  don't need to explicitly set it to false to prevent writing\n  banlist.dat in that case either",
      "tree": {
        "sha": "c34a0e529a34302bcb06dc0f38450f04cde39bd2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c34a0e529a34302bcb06dc0f38450f04cde39bd2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ce479aaadaab296f0d06808fe230c4b13523cc28",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce479aaadaab296f0d06808fe230c4b13523cc28",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ce479aaadaab296f0d06808fe230c4b13523cc28",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce479aaadaab296f0d06808fe230c4b13523cc28/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "57c77fe4d318a156d98606ee74f0064b22c31631",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57c77fe4d318a156d98606ee74f0064b22c31631",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/57c77fe4d318a156d98606ee74f0064b22c31631"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 8,
      "deletions": 7
    },
    "files": [
      {
        "sha": "6d39ccecdce90f1ca3657c4f48362277b8466947",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce479aaadaab296f0d06808fe230c4b13523cc28/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce479aaadaab296f0d06808fe230c4b13523cc28/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=ce479aaadaab296f0d06808fe230c4b13523cc28",
        "patch": "@@ -1909,15 +1909,16 @@ void StartNode(boost::thread_group& threadGroup, CScheduler& scheduler)\n     //try to read stored banlist\n     CBanDB bandb;\n     banmap_t banmap;\n-    if (!bandb.Read(banmap))\n+    if (bandb.Read(banmap)) {\n+        CNode::SetBanned(banmap); // thread save setter\n+        CNode::SetBannedSetDirty(false); // no need to write down, just read data\n+        CNode::SweepBanned(); // sweep out unused entries\n+\n+        LogPrint(\"net\", \"Loaded %d banned node ips/subnets from banlist.dat  %dms\\n\",\n+            banmap.size(), GetTimeMillis() - nStart);\n+    } else\n         LogPrintf(\"Invalid or missing banlist.dat; recreating\\n\");\n \n-    CNode::SetBanned(banmap); //thread save setter\n-    CNode::SetBannedSetDirty(false); //no need to write down just read or nonexistent data\n-    CNode::SweepBanned(); //sweap out unused entries\n-\n-    LogPrintf(\"Loaded %i addresses from peers.dat  %dms\\n\",\n-           addrman.size(), GetTimeMillis() - nStart);\n     fAddressesInitialized = true;\n \n     if (semOutbound == NULL) {"
      }
    ]
  },
  {
    "sha": "2977c243efc9f122328de1bcfe12364498e0e2b6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOTc3YzI0M2VmYzlmMTIyMzI4ZGUxYmNmZTEyMzY0NDk4ZTBlMmI2",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-07-03T07:46:17Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-10-02T09:38:16Z"
      },
      "message": "banlist: add more banlist infos to log / add GUI signal\n\n- to match the peers.dat handling also supply a debug.log entry for how\n  many entries were loaded from banlist.dat and how long it took\n- add a GUI init message for loading the banlist (same as with peers.dat)\n\n- move the same message for peers.dat upwards in the code, to be able to\n  reuse the timing variable nStart and also just log, if our read from\n  peers.dat didn't fail",
      "tree": {
        "sha": "788bebee38de10ff9c0142bd4b38890676918bd1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/788bebee38de10ff9c0142bd4b38890676918bd1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2977c243efc9f122328de1bcfe12364498e0e2b6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2977c243efc9f122328de1bcfe12364498e0e2b6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2977c243efc9f122328de1bcfe12364498e0e2b6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2977c243efc9f122328de1bcfe12364498e0e2b6/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "ce479aaadaab296f0d06808fe230c4b13523cc28",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce479aaadaab296f0d06808fe230c4b13523cc28",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ce479aaadaab296f0d06808fe230c4b13523cc28"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 11,
      "deletions": 5
    },
    "files": [
      {
        "sha": "88a8edebc34a8dcbaba7e4a2db60e6f9e97f19e1",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 5,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2977c243efc9f122328de1bcfe12364498e0e2b6/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2977c243efc9f122328de1bcfe12364498e0e2b6/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=2977c243efc9f122328de1bcfe12364498e0e2b6",
        "patch": "@@ -35,7 +35,7 @@\n #include <boost/filesystem.hpp>\n #include <boost/thread.hpp>\n \n-// Dump addresses to peers.dat every 15 minutes (900s)\n+// Dump addresses to peers.dat and banlist.dat every 15 minutes (900s)\n #define DUMP_ADDRESSES_INTERVAL 900\n \n #if !defined(HAVE_MSG_NOSIGNAL) && !defined(MSG_NOSIGNAL)\n@@ -555,11 +555,13 @@ void CNode::SweepBanned()\n     banmap_t::iterator it = setBanned.begin();\n     while(it != setBanned.end())\n     {\n+        CSubNet subNet = (*it).first;\n         CBanEntry banEntry = (*it).second;\n         if(now > banEntry.nBanUntil)\n         {\n             setBanned.erase(it++);\n             setBannedIsDirty = true;\n+            LogPrint(\"net\", \"%s: Removed banned node ip/subnet from banlist.dat: %s\\n\", __func__, subNet.ToString());\n         }\n         else\n             ++it;\n@@ -1898,15 +1900,19 @@ void static Discover(boost::thread_group& threadGroup)\n void StartNode(boost::thread_group& threadGroup, CScheduler& scheduler)\n {\n     uiInterface.InitMessage(_(\"Loading addresses...\"));\n-    // Load addresses for peers.dat\n+    // Load addresses from peers.dat\n     int64_t nStart = GetTimeMillis();\n     {\n         CAddrDB adb;\n-        if (!adb.Read(addrman))\n+        if (adb.Read(addrman))\n+            LogPrintf(\"Loaded %i addresses from peers.dat  %dms\\n\", addrman.size(), GetTimeMillis() - nStart);\n+        else\n             LogPrintf(\"Invalid or missing peers.dat; recreating\\n\");\n     }\n \n-    //try to read stored banlist\n+    uiInterface.InitMessage(_(\"Loading banlist...\"));\n+    // Load addresses from banlist.dat\n+    nStart = GetTimeMillis();\n     CBanDB bandb;\n     banmap_t banmap;\n     if (bandb.Read(banmap)) {\n@@ -1923,7 +1929,7 @@ void StartNode(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n     if (semOutbound == NULL) {\n         // initialize semaphore\n-        int nMaxOutbound = min(MAX_OUTBOUND_CONNECTIONS, nMaxConnections);\n+        int nMaxOutbound = std::min(MAX_OUTBOUND_CONNECTIONS, nMaxConnections);\n         semOutbound = new CSemaphore(nMaxOutbound);\n     }\n "
      }
    ]
  },
  {
    "sha": "e8600c924d58f3ef0450fc269998452e5b17aecb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplODYwMGM5MjRkNThmM2VmMDQ1MGZjMjY5OTk4NDUyZTViMTdhZWNi",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-07-03T08:46:08Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-10-02T09:38:16Z"
      },
      "message": "banlist (bugfix): allow CNode::SweepBanned() to run on interval\n\n- allows CNode::SweepBanned() to run, even if !CNode::BannedSetIsDirty(),\n  because if nBanUntil is over we want the ban to be disabled for these\n  nodes",
      "tree": {
        "sha": "9452c6788867dff22594f3bb230616ea7728828a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9452c6788867dff22594f3bb230616ea7728828a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e8600c924d58f3ef0450fc269998452e5b17aecb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8600c924d58f3ef0450fc269998452e5b17aecb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e8600c924d58f3ef0450fc269998452e5b17aecb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8600c924d58f3ef0450fc269998452e5b17aecb/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "2977c243efc9f122328de1bcfe12364498e0e2b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2977c243efc9f122328de1bcfe12364498e0e2b6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2977c243efc9f122328de1bcfe12364498e0e2b6"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 8,
      "deletions": 6
    },
    "files": [
      {
        "sha": "15ddaac63d5d106de2b8bd64145a89ebc1b050fe",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 6,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8600c924d58f3ef0450fc269998452e5b17aecb/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8600c924d58f3ef0450fc269998452e5b17aecb/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=e8600c924d58f3ef0450fc269998452e5b17aecb",
        "patch": "@@ -1455,9 +1455,7 @@ void DumpAddresses()\n void DumpData()\n {\n     DumpAddresses();\n-\n-    if (CNode::BannedSetIsDirty())\n-        DumpBanlist();\n+    DumpBanlist();\n }\n \n void static ProcessOneShot()\n@@ -2474,22 +2472,26 @@ bool CBanDB::Read(banmap_t& banSet)\n         // ... verify the network matches ours\n         if (memcmp(pchMsgTmp, Params().MessageStart(), sizeof(pchMsgTmp)))\n             return error(\"%s: Invalid network magic number\", __func__);\n-        \n+\n         // de-serialize address data into one CAddrMan object\n         ssBanlist >> banSet;\n     }\n     catch (const std::exception& e) {\n         return error(\"%s: Deserialize or I/O error - %s\", __func__, e.what());\n     }\n-    \n+\n     return true;\n }\n \n void DumpBanlist()\n {\n-    int64_t nStart = GetTimeMillis();\n     CNode::SweepBanned(); // clean unused entries (if bantime has expired)\n \n+    if (!CNode::BannedSetIsDirty())\n+        return;\n+\n+    int64_t nStart = GetTimeMillis();\n+\n     CBanDB bandb;\n     banmap_t banmap;\n     CNode::GetBanned(banmap);"
      }
    ]
  }
]