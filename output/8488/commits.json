[
  {
    "sha": "79e8164545019c46417af2aa86a28c1f84e0a68d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OWU4MTY0NTQ1MDE5YzQ2NDE3YWYyYWE4NmEyOGMxZjg0ZTBhNjhk",
    "commit": {
      "author": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-06-22T22:15:38Z"
      },
      "committer": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-08-08T18:21:33Z"
      },
      "message": "[BDB] Add method to compact a BDB database, reclaiming unused disk space.",
      "tree": {
        "sha": "a8c562b21af437c7c36b471a79324e336d248417",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a8c562b21af437c7c36b471a79324e336d248417"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/79e8164545019c46417af2aa86a28c1f84e0a68d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79e8164545019c46417af2aa86a28c1f84e0a68d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/79e8164545019c46417af2aa86a28c1f84e0a68d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79e8164545019c46417af2aa86a28c1f84e0a68d/comments",
    "author": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6e6ab2c3238264b34c0c83ebf703502f5ec72848",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e6ab2c3238264b34c0c83ebf703502f5ec72848",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6e6ab2c3238264b34c0c83ebf703502f5ec72848"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ccab0ed9b4addde637d0760b3ac504efa68bcd0c",
        "filename": "src/wallet/db.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79e8164545019c46417af2aa86a28c1f84e0a68d/src/wallet/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79e8164545019c46417af2aa86a28c1f84e0a68d/src/wallet/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.cpp?ref=79e8164545019c46417af2aa86a28c1f84e0a68d",
        "patch": "@@ -330,6 +330,11 @@ void CDB::Close()\n     }\n }\n \n+void CDB::Compact()\n+{\n+    pdb->compact(NULL, NULL, NULL, NULL, DB_FREE_SPACE, NULL);\n+}\n+\n void CDBEnv::CloseDb(const string& strFile)\n {\n     {"
      },
      {
        "sha": "1f19849539809304f44335f0696b55de8e6da05e",
        "filename": "src/wallet/db.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79e8164545019c46417af2aa86a28c1f84e0a68d/src/wallet/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79e8164545019c46417af2aa86a28c1f84e0a68d/src/wallet/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.h?ref=79e8164545019c46417af2aa86a28c1f84e0a68d",
        "patch": "@@ -106,6 +106,7 @@ class CDB\n public:\n     void Flush();\n     void Close();\n+    void Compact();\n \n private:\n     CDB(const CDB&);"
      }
    ]
  },
  {
    "sha": "cd454dea8dc34facb55263c33f7132ca4b7379e0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZDQ1NGRlYThkYzM0ZmFjYjU1MjYzYzMzZjcxMzJjYTRiNzM3OWUw",
    "commit": {
      "author": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-06-22T22:23:17Z"
      },
      "committer": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-08-08T18:21:33Z"
      },
      "message": "[Wallet] Add methods for removing keys from the keystore & crypter.",
      "tree": {
        "sha": "3f2be93d9058c34caaaad11288cbf0e7ab688ac7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3f2be93d9058c34caaaad11288cbf0e7ab688ac7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cd454dea8dc34facb55263c33f7132ca4b7379e0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd454dea8dc34facb55263c33f7132ca4b7379e0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cd454dea8dc34facb55263c33f7132ca4b7379e0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd454dea8dc34facb55263c33f7132ca4b7379e0/comments",
    "author": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "79e8164545019c46417af2aa86a28c1f84e0a68d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79e8164545019c46417af2aa86a28c1f84e0a68d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/79e8164545019c46417af2aa86a28c1f84e0a68d"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 21,
      "deletions": 0
    },
    "files": [
      {
        "sha": "cf0448f7b4b3c8431e9eb09496c774e4d1e135f4",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd454dea8dc34facb55263c33f7132ca4b7379e0/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd454dea8dc34facb55263c33f7132ca4b7379e0/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=cd454dea8dc34facb55263c33f7132ca4b7379e0",
        "patch": "@@ -28,6 +28,9 @@ class CKeyStore\n     virtual bool AddKeyPubKey(const CKey &key, const CPubKey &pubkey) =0;\n     virtual bool AddKey(const CKey &key);\n \n+    //! Remove a key from the store.\n+    virtual bool RemoveKey(const CKeyID &address) = 0;\n+\n     //! Check whether a key corresponding to a given address is present in the store.\n     virtual bool HaveKey(const CKeyID &address) const =0;\n     virtual bool GetKey(const CKeyID &address, CKey& keyOut) const =0;\n@@ -63,6 +66,15 @@ class CBasicKeyStore : public CKeyStore\n public:\n     bool AddKeyPubKey(const CKey& key, const CPubKey &pubkey);\n     bool GetPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const;\n+    bool RemoveKey(const CKeyID &address)\n+    {\n+        bool result;\n+        {\n+            LOCK(cs_KeyStore);\n+            result = (mapKeys.erase(address) > 0);\n+        }\n+        return result;\n+    }\n     bool HaveKey(const CKeyID &address) const\n     {\n         bool result;"
      },
      {
        "sha": "e836876b9b11deb1e18104252e75ce7239ced25c",
        "filename": "src/wallet/crypter.h",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd454dea8dc34facb55263c33f7132ca4b7379e0/src/wallet/crypter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd454dea8dc34facb55263c33f7132ca4b7379e0/src/wallet/crypter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/crypter.h?ref=cd454dea8dc34facb55263c33f7132ca4b7379e0",
        "patch": "@@ -167,6 +167,15 @@ class CCryptoKeyStore : public CBasicKeyStore\n \n     virtual bool AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret);\n     bool AddKeyPubKey(const CKey& key, const CPubKey &pubkey);\n+    bool RemoveKey(const CKeyID &address)\n+    {\n+        {\n+            LOCK(cs_KeyStore);\n+            if (!IsCrypted())\n+                return CBasicKeyStore::RemoveKey(address);\n+            return mapCryptedKeys.erase(address) > 0;\n+        }\n+    }\n     bool HaveKey(const CKeyID &address) const\n     {\n         {"
      }
    ]
  },
  {
    "sha": "c49f0939362e4b44fcee8243503509706dec28e8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNDlmMDkzOTM2MmU0YjQ0ZmNlZTgyNDM1MDM1MDk3MDZkZWMyOGU4",
    "commit": {
      "author": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-06-22T22:28:34Z"
      },
      "committer": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-08-08T18:21:33Z"
      },
      "message": "[Wallet] Add methods to remove key material from the wallet file.",
      "tree": {
        "sha": "6a14f32957ae55585ef7d158a9aa9ac0be013e46",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6a14f32957ae55585ef7d158a9aa9ac0be013e46"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c49f0939362e4b44fcee8243503509706dec28e8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c49f0939362e4b44fcee8243503509706dec28e8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c49f0939362e4b44fcee8243503509706dec28e8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c49f0939362e4b44fcee8243503509706dec28e8/comments",
    "author": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cd454dea8dc34facb55263c33f7132ca4b7379e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd454dea8dc34facb55263c33f7132ca4b7379e0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cd454dea8dc34facb55263c33f7132ca4b7379e0"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 25,
      "deletions": 0
    },
    "files": [
      {
        "sha": "842dfce6ffbf64a244b65c1ff44377153d28ff91",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c49f0939362e4b44fcee8243503509706dec28e8/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c49f0939362e4b44fcee8243503509706dec28e8/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=c49f0939362e4b44fcee8243503509706dec28e8",
        "patch": "@@ -217,6 +217,17 @@ bool CWallet::LoadCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigne\n     return CCryptoKeyStore::AddCryptedKey(vchPubKey, vchCryptedSecret);\n }\n \n+bool CWallet::EraseKey(const CPubKey &pubKey)\n+{\n+    AssertLockHeld(cs_wallet);\n+    CCryptoKeyStore::RemoveKey(pubKey.GetID());\n+    mapKeyMetadata.erase(pubKey.GetID());\n+    CWalletDB walletDB(strWalletFile);\n+    walletDB.EraseKey(pubKey);\n+    walletDB.Flush();\n+    return true;\n+}\n+\n bool CWallet::AddCScript(const CScript& redeemScript)\n {\n     if (!CCryptoKeyStore::AddCScript(redeemScript))"
      },
      {
        "sha": "0766f426b084cbfc8b615e2a830c68695ed290cb",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c49f0939362e4b44fcee8243503509706dec28e8/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c49f0939362e4b44fcee8243503509706dec28e8/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=c49f0939362e4b44fcee8243503509706dec28e8",
        "patch": "@@ -696,6 +696,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     bool AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret);\n     //! Adds an encrypted key to the store, without saving it to disk (used by LoadWallet)\n     bool LoadCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret);\n+    bool EraseKey(const CPubKey &vchPubKey);\n     bool AddCScript(const CScript& redeemScript);\n     bool LoadCScript(const CScript& redeemScript);\n "
      },
      {
        "sha": "48428aeaaeda71d5bc93c14044a4a0b28e5614eb",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c49f0939362e4b44fcee8243503509706dec28e8/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c49f0939362e4b44fcee8243503509706dec28e8/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=c49f0939362e4b44fcee8243503509706dec28e8",
        "patch": "@@ -105,6 +105,18 @@ bool CWalletDB::WriteCryptedKey(const CPubKey& vchPubKey,\n     return true;\n }\n \n+bool CWalletDB::EraseKey(const CPubKey& vchPubKey)\n+{\n+    ++nWalletDBUpdated;\n+\n+    Erase(std::make_pair(std::string(\"key\"), vchPubKey));\n+    Erase(std::make_pair(std::string(\"wkey\"), vchPubKey));\n+    Erase(std::make_pair(std::string(\"ckey\"), vchPubKey));\n+    Erase(std::make_pair(std::string(\"keymeta\"), vchPubKey));\n+\n+    return true;\n+}\n+\n bool CWalletDB::WriteMasterKey(unsigned int nID, const CMasterKey& kMasterKey)\n {\n     nWalletDBUpdated++;"
      },
      {
        "sha": "b478f2f304efffc41b5202a8778fa93f99e48b4e",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c49f0939362e4b44fcee8243503509706dec28e8/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c49f0939362e4b44fcee8243503509706dec28e8/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=c49f0939362e4b44fcee8243503509706dec28e8",
        "patch": "@@ -133,6 +133,7 @@ class CWalletDB : public CDB\n \n     bool WriteKey(const CPubKey& vchPubKey, const CPrivKey& vchPrivKey, const CKeyMetadata &keyMeta);\n     bool WriteCryptedKey(const CPubKey& vchPubKey, const std::vector<unsigned char>& vchCryptedSecret, const CKeyMetadata &keyMeta);\n+    bool EraseKey(const CPubKey& vchPubKey);\n     bool WriteMasterKey(unsigned int nID, const CMasterKey& kMasterKey);\n \n     bool WriteCScript(const uint160& hash, const CScript& redeemScript);"
      }
    ]
  },
  {
    "sha": "dd53d19b4d52311f9adc5e3f1b662171d4c95b56",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZDUzZDE5YjRkNTIzMTFmOWFkYzVlM2YxYjY2MjE3MWQ0Yzk1YjU2",
    "commit": {
      "author": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-06-22T22:37:45Z"
      },
      "committer": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-08-08T18:21:33Z"
      },
      "message": "[RPC, Wallet] Add deleteprivkey RPC command, which removes key material, turning a wallet key into a watch-only address.",
      "tree": {
        "sha": "f8580cfed849dd55d7a5926365e0a88db92cff78",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f8580cfed849dd55d7a5926365e0a88db92cff78"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dd53d19b4d52311f9adc5e3f1b662171d4c95b56",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd53d19b4d52311f9adc5e3f1b662171d4c95b56",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dd53d19b4d52311f9adc5e3f1b662171d4c95b56",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd53d19b4d52311f9adc5e3f1b662171d4c95b56/comments",
    "author": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c49f0939362e4b44fcee8243503509706dec28e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c49f0939362e4b44fcee8243503509706dec28e8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c49f0939362e4b44fcee8243503509706dec28e8"
      }
    ],
    "stats": {
      "total": 46,
      "additions": 46,
      "deletions": 0
    },
    "files": [
      {
        "sha": "090148601a57721bf47e66373080c93a78551d36",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd53d19b4d52311f9adc5e3f1b662171d4c95b56/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd53d19b4d52311f9adc5e3f1b662171d4c95b56/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=dd53d19b4d52311f9adc5e3f1b662171d4c95b56",
        "patch": "@@ -152,6 +152,50 @@ UniValue importprivkey(const UniValue& params, bool fHelp)\n     return NullUniValue;\n }\n \n+UniValue deleteprivkey(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() < 1 || params.size() > 1)\n+        throw runtime_error(\n+            \"deleteprivkey \\\"pubkey\\\"\\n\"\n+            \"\\nRemove the private key corresponding to the provided pubkey, making that address become watch-only (as if it was imported with importaddress). For security reasons the wallet must be unlocked.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"pubkey\\\"        (string, required) The pubkey corresponding to the private key to be removed.\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nConvert a spendable address to watch-only\\n\"\n+            + HelpExampleCli(\"deleteprivkey\", \"\\\"mypubkey\\\"\") +\n+            \"\\nAs a JSON-RPC call\\n\"\n+            + HelpExampleRpc(\"deleteprivkey\", \"\\\"mypubkey\\\"\")\n+        );\n+\n+    std::vector<unsigned char> data(ParseHex(params[0].get_str()));\n+    CPubKey pubKey(data.begin(), data.end());\n+    if (!pubKey.IsFullyValid())\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Pubkey is not a valid public key\");\n+    CKeyID keyID = pubKey.GetID();\n+    CScript script = GetScriptForDestination(keyID);\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    // Wallet must be unlocked not because we need access to key material, but\n+    // because otherwise some joker that finds an unattended Bitcoin Core could\n+    // delete the keys.\n+    EnsureWalletIsUnlocked();\n+\n+    if (!pwalletMain->HaveKey(keyID))\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Pubkey is not in the wallet\");\n+\n+    // Erase the key material\n+    pwalletMain->EraseKey(pubKey);\n+\n+    // Re-add the pubkey to the wallet as a watch-only address\n+    pwalletMain->AddWatchOnly(script);\n+\n+    return NullUniValue;\n+}\n+\n void ImportAddress(const CBitcoinAddress& address, const string& strLabel);\n void ImportScript(const CScript& script, const string& strLabel, bool isRedeemScript)\n {"
      },
      {
        "sha": "1d170d1c1b2faa3182356b32fc0fe44a8f207221",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd53d19b4d52311f9adc5e3f1b662171d4c95b56/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd53d19b4d52311f9adc5e3f1b662171d4c95b56/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=dd53d19b4d52311f9adc5e3f1b662171d4c95b56",
        "patch": "@@ -2560,6 +2560,7 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n \n extern UniValue dumpprivkey(const UniValue& params, bool fHelp); // in rpcdump.cpp\n extern UniValue importprivkey(const UniValue& params, bool fHelp);\n+extern UniValue deleteprivkey(const UniValue& params, bool fHelp);\n extern UniValue importaddress(const UniValue& params, bool fHelp);\n extern UniValue importpubkey(const UniValue& params, bool fHelp);\n extern UniValue dumpwallet(const UniValue& params, bool fHelp);\n@@ -2591,6 +2592,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"getunconfirmedbalance\",    &getunconfirmedbalance,    false },\n     { \"wallet\",             \"getwalletinfo\",            &getwalletinfo,            false },\n     { \"wallet\",             \"importprivkey\",            &importprivkey,            true  },\n+    { \"wallet\",             \"deleteprivkey\",            &deleteprivkey,            true  },\n     { \"wallet\",             \"importwallet\",             &importwallet,             true  },\n     { \"wallet\",             \"importaddress\",            &importaddress,            true  },\n     { \"wallet\",             \"importprunedfunds\",        &importprunedfunds,        true  },"
      }
    ]
  },
  {
    "sha": "9d2dde542b6d835bfb00ac4cf1dc19fdb45a0859",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZDJkZGU1NDJiNmQ4MzViZmIwMGFjNGNmMWRjMTlmZGI0NWEwODU5",
    "commit": {
      "author": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-06-22T23:27:07Z"
      },
      "committer": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-08-08T18:21:33Z"
      },
      "message": "[Wallet] Add method for removing transactions from the wallet.",
      "tree": {
        "sha": "c84955a5d64c89589548c17701d92021265444b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c84955a5d64c89589548c17701d92021265444b3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d2dde542b6d835bfb00ac4cf1dc19fdb45a0859",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d2dde542b6d835bfb00ac4cf1dc19fdb45a0859",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9d2dde542b6d835bfb00ac4cf1dc19fdb45a0859",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d2dde542b6d835bfb00ac4cf1dc19fdb45a0859/comments",
    "author": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dd53d19b4d52311f9adc5e3f1b662171d4c95b56",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd53d19b4d52311f9adc5e3f1b662171d4c95b56",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dd53d19b4d52311f9adc5e3f1b662171d4c95b56"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 41,
      "deletions": 0
    },
    "files": [
      {
        "sha": "19a7d102ab79c8fd56bd52fcd251fb8a13150c5b",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d2dde542b6d835bfb00ac4cf1dc19fdb45a0859/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d2dde542b6d835bfb00ac4cf1dc19fdb45a0859/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=9d2dde542b6d835bfb00ac4cf1dc19fdb45a0859",
        "patch": "@@ -1426,6 +1426,46 @@ int CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)\n     return ret;\n }\n \n+bool CWallet::EraseFromWallet(const uint256& hash, CWalletDB* walletdb)\n+{\n+    AssertLockHeld(cs_wallet);\n+\n+    std::map<uint256, CWalletTx>::iterator i;\n+    i = mapWallet.find(hash);\n+    if (i == mapWallet.end())\n+        return false;\n+    const CWalletTx& wtx = i->second;\n+\n+    // Remove from mapTxSpends\n+    if (!wtx.IsCoinBase())\n+    {\n+        BOOST_FOREACH(const CTxIn& txin, wtx.vin)\n+        {\n+            pair<TxSpends::iterator, TxSpends::iterator> range =\n+                 mapTxSpends.equal_range(txin.prevout);\n+\n+            for (TxSpends::iterator it = range.first; it != range.second; ++it)\n+            {\n+                if (hash == it->second)\n+                {\n+                    mapTxSpends.erase(it);\n+                    break;\n+                }\n+            }\n+        }\n+    }\n+\n+    mapWallet.erase(i);\n+\n+    if (fFileBacked)\n+        walletdb->EraseTx(hash);\n+\n+    NotifyTransactionChanged(this, hash, CT_DELETED);\n+    LogPrintf(\"EraseFromWallet %s\\n\", hash.ToString());\n+\n+    return true;\n+}\n+\n void CWallet::ReacceptWalletTransactions()\n {\n     // If transactions aren't being broadcasted, don't let them into local mempool either"
      },
      {
        "sha": "fd85dcc19ce332c44a4bb0f89a2e025b3b9fcc99",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d2dde542b6d835bfb00ac4cf1dc19fdb45a0859/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d2dde542b6d835bfb00ac4cf1dc19fdb45a0859/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=9d2dde542b6d835bfb00ac4cf1dc19fdb45a0859",
        "patch": "@@ -736,6 +736,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     bool AddToWalletIfInvolvingMe(const CTransaction& tx, const CBlock* pblock, bool fUpdate);\n     int ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate = false);\n     void ReacceptWalletTransactions();\n+    bool EraseFromWallet(const uint256 &hash, CWalletDB* pwalletdb);\n     void ResendWalletTransactions(int64_t nBestBlockTime);\n     std::vector<uint256> ResendWalletTransactionsBefore(int64_t nTime);\n     CAmount GetBalance() const;"
      }
    ]
  },
  {
    "sha": "cbaff62cf2164f9b52f1955ee6ef95c331aa7abc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYmFmZjYyY2YyMTY0ZjliNTJmMTk1NWVlNmVmOTVjMzMxYWE3YWJj",
    "commit": {
      "author": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-06-22T23:31:57Z"
      },
      "committer": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-08-08T18:30:08Z"
      },
      "message": "[Wallet] Add RPCs forgetaddress and purgewallet for removing watch-only scripts and associated transactions.",
      "tree": {
        "sha": "7e261f34e84dd81d99a4688f21d7475539ac7ea9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7e261f34e84dd81d99a4688f21d7475539ac7ea9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cbaff62cf2164f9b52f1955ee6ef95c331aa7abc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cbaff62cf2164f9b52f1955ee6ef95c331aa7abc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cbaff62cf2164f9b52f1955ee6ef95c331aa7abc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cbaff62cf2164f9b52f1955ee6ef95c331aa7abc/comments",
    "author": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9d2dde542b6d835bfb00ac4cf1dc19fdb45a0859",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d2dde542b6d835bfb00ac4cf1dc19fdb45a0859",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9d2dde542b6d835bfb00ac4cf1dc19fdb45a0859"
      }
    ],
    "stats": {
      "total": 197,
      "additions": 197,
      "deletions": 0
    },
    "files": [
      {
        "sha": "69489fad327aa4a3ee9615bf99606be4ce6532b8",
        "filename": "src/rpc/protocol.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cbaff62cf2164f9b52f1955ee6ef95c331aa7abc/src/rpc/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cbaff62cf2164f9b52f1955ee6ef95c331aa7abc/src/rpc/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/protocol.h?ref=cbaff62cf2164f9b52f1955ee6ef95c331aa7abc",
        "patch": "@@ -74,6 +74,7 @@ enum RPCErrorCode\n     RPC_WALLET_WRONG_ENC_STATE      = -15, //! Command given in wrong wallet encryption state (encrypting an encrypted wallet etc.)\n     RPC_WALLET_ENCRYPTION_FAILED    = -16, //! Failed to encrypt the wallet\n     RPC_WALLET_ALREADY_UNLOCKED     = -17, //! Wallet is already unlocked\n+    RPC_WALLET_HAVE_KEY             = -18, //! Refuse to act because wallet has key\n };\n \n std::string JSONRPCRequest(const std::string& strMethod, const UniValue& params, const UniValue& id);"
      },
      {
        "sha": "1db1b778ce8911e7ff6763be34d9695d3076fdee",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 192,
        "deletions": 0,
        "changes": 192,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cbaff62cf2164f9b52f1955ee6ef95c331aa7abc/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cbaff62cf2164f9b52f1955ee6ef95c331aa7abc/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=cbaff62cf2164f9b52f1955ee6ef95c331aa7abc",
        "patch": "@@ -296,6 +296,198 @@ UniValue importaddress(const UniValue& params, bool fHelp)\n     return NullUniValue;\n }\n \n+void RemoveAddress(const CBitcoinAddress& address);\n+void RemoveScript(const CScript& script, bool isRedeemScript)\n+{\n+    pwalletMain->MarkDirty();\n+\n+    if (pwalletMain->HaveWatchOnly(script) && !pwalletMain->RemoveWatchOnly(script))\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Error removing address from wallet\");\n+\n+    if (isRedeemScript) {\n+        //if (pwalletMain->HaveCScript(script) && !pwalletMain->RemoveCScript(script))\n+        //    throw JSONRPCError(RPC_WALLET_ERROR, \"Error removing p2sh redeemScript to wallet\");\n+        RemoveAddress(CBitcoinAddress(CScriptID(script)));\n+    }\n+}\n+\n+void RemoveAddress(const CBitcoinAddress& address)\n+{\n+    CScript script = GetScriptForDestination(address.Get());\n+    RemoveScript(script, false);\n+    // add to address book or update label\n+    if (address.IsValid())\n+        pwalletMain->DelAddressBook(address.Get());\n+}\n+\n+UniValue forgetaddress(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() < 1 || params.size() > 3)\n+        throw runtime_error(\n+            \"forgetaddress \\\"address\\\" ( purge p2sh )\\n\"\n+            \"\\nRemoves a script (in hex) or address from the wallet and (optionally) purges transactions which as a result are no longer considered as belonging to the wallet.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"address\\\"          (string, required) The hex-encoded script (or address)\\n\"\n+            \"2. purge              (boolean, optional, default=true) Remove transactions whose last remaining link to the wallet was this script/address\\n\"\n+            \"3. p2sh               (boolean, optional, default=false) Remove the P2SH version of the script as well\\n\"\n+            \"\\nNote: This call only works on watch-only scripts or addresses. To forget a private key known to the wallet, first call deleteprivkey.\\n\"\n+            \"\\nNote: This call will take two full passes through the wallet and compact the wallet database if purge is true.\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nRemove a script with purge\\n\"\n+            + HelpExampleCli(\"forgetaddress\", \"\\\"myscript\\\"\") +\n+            \"\\nRemove an address without purge\\n\"\n+            + HelpExampleCli(\"forgetaddress\", \"\\\"myaddress\\\" false\") +\n+            \"\\nAs a JSON-RPC call\\n\"\n+            + HelpExampleRpc(\"forgetaddress\", \"\\\"myaddress\\\", false\")\n+        );\n+\n+    // Whether to perform purge after removal\n+    bool fPurge = true;\n+    if (params.size() > 1)\n+        fPurge = params[1].get_bool();\n+\n+    // Whether to remove a p2sh version, too\n+    bool fP2SH = false;\n+    if (params.size() > 2)\n+        fP2SH = params[2].get_bool();\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    set<uint256> setNotMine;\n+\n+    if (fPurge)\n+    {\n+        for (map<uint256, CWalletTx>::const_iterator i = pwalletMain->mapWallet.begin(); i != pwalletMain->mapWallet.end(); ++i)\n+        {\n+            if (!pwalletMain->IsMine(i->second)\n+             && !pwalletMain->IsFromMe(i->second))\n+                setNotMine.insert(i->first);\n+        }\n+    }\n+\n+    CBitcoinAddress address(params[0].get_str());\n+    if (address.IsValid()) {\n+        if (fP2SH)\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Cannot use the p2sh flag with an address - use a script instead\");\n+        CKeyID keyID;\n+        if (address.GetKeyID(keyID) && pwalletMain->mapKeyMetadata.count(keyID))\n+            throw JSONRPCError(RPC_WALLET_HAVE_KEY, \"Refusing to forget address associated with a known key. Make sure you know what you are doing, then call deleteprivkey first.\");\n+        RemoveAddress(address);\n+    } else if (IsHex(params[0].get_str())) {\n+        std::vector<unsigned char> data(ParseHex(params[0].get_str()));\n+        RemoveScript(CScript(data.begin(), data.end()), fP2SH);\n+    } else {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address or script\");\n+    }\n+\n+    vector<uint256> vDeletes;\n+\n+    if (fPurge)\n+    {\n+        // Sort the array of transaction hashes so that the order of operations\n+        // and output are deterministic, for testing purposes.\n+        sort(vDeletes.begin(), vDeletes.end());\n+\n+        for (map<uint256, CWalletTx>::const_iterator i = pwalletMain->mapWallet.begin(); i != pwalletMain->mapWallet.end(); ++i)\n+        {\n+            if (!pwalletMain->IsMine(i->second)\n+             && !pwalletMain->IsFromMe(i->second)\n+             && !setNotMine.count(i->first))\n+            {\n+                vDeletes.push_back(i->first);\n+            }\n+        }\n+    }\n+\n+    if (!vDeletes.empty())\n+    {\n+        CWalletDB walletdb(pwalletMain->strWalletFile);\n+        for (vector<uint256>::const_iterator pTxID = vDeletes.begin(); pTxID != vDeletes.end(); ++pTxID)\n+            pwalletMain->EraseFromWallet(*pTxID, &walletdb);\n+        walletdb.Flush();\n+        walletdb.Compact();\n+    }\n+\n+    if (fPurge)\n+    {\n+        UniValue ret(UniValue::VARR);\n+        BOOST_FOREACH(const uint256& hash, vDeletes)\n+            ret.push_back(hash.ToString());\n+        return ret;\n+    }\n+\n+    return NullUniValue;\n+}\n+\n+UniValue purgetransactions(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() > 1)\n+        throw runtime_error(\n+            \"purgetransactions compact\\n\"\n+            \"\\nRemoves transactions from the wallet which are not known to correspond to any keys or watch-only scripts in to the wallet. It is not normally the case that a wallet ends up with transactions unrelated to its keys, but this can happen if forgetaddress is called with purge=false. A common use case is to forget a large number of transactions and then purge them all in one pass.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. compact        (boolean, optional, default=true) Compact the wallet database if any transactions are removed\\n\"\n+            \"\\nNote: This call will take a single full passes through the wallet and then compact the wallet database if and only if transactions are removed and compact=true.\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nRemove unlinked transactions from the wallet\\n\"\n+            + HelpExampleCli(\"purgetransactions\", \"\") +\n+            \"\\nRemove unlinked transactions without compacting the wallet\\n\"\n+            + HelpExampleCli(\"purgetransactions\", \"false\") +\n+            \"\\nAs a JSON-RPC call\\n\"\n+            + HelpExampleRpc(\"purgetransactions\", \"false\")\n+        );\n+\n+    // Whether to perform compaction after purge\n+    bool fCompact = true;\n+    if (params.size() > 0)\n+        fCompact = params[0].get_bool();\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    vector<uint256> vDeletes;\n+\n+    for (map<uint256, CWalletTx>::const_iterator i = pwalletMain->mapWallet.begin(); i != pwalletMain->mapWallet.end(); ++i)\n+    {\n+        if (!pwalletMain->IsMine(i->second)\n+         && !pwalletMain->IsFromMe(i->second))\n+        {\n+            vDeletes.push_back(i->first);\n+        }\n+    }\n+\n+    if (!vDeletes.empty())\n+    {\n+        // Sort the array of transaction hashes so that the order of operations\n+        // and output are deterministic, for testing purposes.\n+        sort(vDeletes.begin(), vDeletes.end());\n+\n+        // Open the wallet database before entering the loop..\n+        CWalletDB walletdb(pwalletMain->strWalletFile);\n+\n+        // Remove each transaction.\n+        for (vector<uint256>::const_iterator pTxID = vDeletes.begin(); pTxID != vDeletes.end(); ++pTxID)\n+            pwalletMain->EraseFromWallet(*pTxID, &walletdb);\n+\n+        // Write to the database and the perform a compaction operation --\n+        // hopefully shrinking the size of the database files to reduce the\n+        // size of the wallet on disk.\n+        walletdb.Flush();\n+        if (fCompact)\n+            walletdb.Compact();\n+    }\n+\n+    UniValue ret(UniValue::VARR);\n+    BOOST_FOREACH(const uint256& hash, vDeletes)\n+        ret.push_back(hash.ToString());\n+    return ret;\n+}\n+\n UniValue importprunedfunds(const UniValue& params, bool fHelp)\n {\n     if (!EnsureWalletIsAvailable(fHelp))"
      },
      {
        "sha": "9f89eaa5ff4f504b23034531da2af0da436d06ff",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cbaff62cf2164f9b52f1955ee6ef95c331aa7abc/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cbaff62cf2164f9b52f1955ee6ef95c331aa7abc/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=cbaff62cf2164f9b52f1955ee6ef95c331aa7abc",
        "patch": "@@ -2563,6 +2563,8 @@ extern UniValue importprivkey(const UniValue& params, bool fHelp);\n extern UniValue deleteprivkey(const UniValue& params, bool fHelp);\n extern UniValue importaddress(const UniValue& params, bool fHelp);\n extern UniValue importpubkey(const UniValue& params, bool fHelp);\n+extern UniValue forgetaddress(const UniValue& params, bool fHelp);\n+extern UniValue purgetransactions(const UniValue& params, bool fHelp);\n extern UniValue dumpwallet(const UniValue& params, bool fHelp);\n extern UniValue importwallet(const UniValue& params, bool fHelp);\n extern UniValue importprunedfunds(const UniValue& params, bool fHelp);\n@@ -2597,6 +2599,8 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"importaddress\",            &importaddress,            true  },\n     { \"wallet\",             \"importprunedfunds\",        &importprunedfunds,        true  },\n     { \"wallet\",             \"importpubkey\",             &importpubkey,             true  },\n+    { \"wallet\",             \"forgetaddress\",            &forgetaddress,            true  },\n+    { \"wallet\",             \"purgetransactions\",        &purgetransactions,        true  },\n     { \"wallet\",             \"keypoolrefill\",            &keypoolrefill,            true  },\n     { \"wallet\",             \"listaccounts\",             &listaccounts,             false },\n     { \"wallet\",             \"listaddressgroupings\",     &listaddressgroupings,     false },"
      }
    ]
  },
  {
    "sha": "5062be18b4fa1355ed59b54f7e32edfdf4143ae4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MDYyYmUxOGI0ZmExMzU1ZWQ1OWI1NGY3ZTMyZWRmZGY0MTQzYWU0",
    "commit": {
      "author": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-06-23T17:18:51Z"
      },
      "committer": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2016-08-08T18:30:08Z"
      },
      "message": "[Wallet] Delete a private key inside of forgetaddress, if necessary.",
      "tree": {
        "sha": "8e5a8fbfd2aadbdfad9ba1ac26374b13b0ac8187",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8e5a8fbfd2aadbdfad9ba1ac26374b13b0ac8187"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5062be18b4fa1355ed59b54f7e32edfdf4143ae4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5062be18b4fa1355ed59b54f7e32edfdf4143ae4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5062be18b4fa1355ed59b54f7e32edfdf4143ae4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5062be18b4fa1355ed59b54f7e32edfdf4143ae4/comments",
    "author": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cbaff62cf2164f9b52f1955ee6ef95c331aa7abc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cbaff62cf2164f9b52f1955ee6ef95c331aa7abc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cbaff62cf2164f9b52f1955ee6ef95c331aa7abc"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 8,
      "deletions": 2
    },
    "files": [
      {
        "sha": "2f7e8261abdabd9e2f34b87ed8db1b32cdbc7406",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5062be18b4fa1355ed59b54f7e32edfdf4143ae4/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5062be18b4fa1355ed59b54f7e32edfdf4143ae4/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=5062be18b4fa1355ed59b54f7e32edfdf4143ae4",
        "patch": "@@ -373,8 +373,14 @@ UniValue forgetaddress(const UniValue& params, bool fHelp)\n         if (fP2SH)\n             throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Cannot use the p2sh flag with an address - use a script instead\");\n         CKeyID keyID;\n-        if (address.GetKeyID(keyID) && pwalletMain->mapKeyMetadata.count(keyID))\n-            throw JSONRPCError(RPC_WALLET_HAVE_KEY, \"Refusing to forget address associated with a known key. Make sure you know what you are doing, then call deleteprivkey first.\");\n+        CPubKey vchPubKey;\n+        if (address.GetKeyID(keyID) && pwalletMain->GetPubKey(keyID, vchPubKey))\n+        {\n+            //throw JSONRPCError(RPC_WALLET_HAVE_KEY, \"Refusing to forget address associated with a known key. Make sure you know what you are doing, then call deleteprivkey first.\");\n+            UniValue args(UniValue::VARR);\n+            args.push_back(HexStr(vchPubKey));\n+            deleteprivkey(args, false);\n+        }\n         RemoveAddress(address);\n     } else if (IsHex(params[0].get_str())) {\n         std::vector<unsigned char> data(ParseHex(params[0].get_str()));"
      }
    ]
  }
]