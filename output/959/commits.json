[
  {
    "sha": "871c3557bf08dd29c6d2ffd10e854bbd0478b3b5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NzFjMzU1N2JmMDhkZDI5YzZkMmZmZDEwZTg1NGJiZDA0NzhiM2I1",
    "commit": {
      "author": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2012-04-18T11:30:24Z"
      },
      "committer": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2012-04-18T11:30:24Z"
      },
      "message": "Added ability to respond to signals during Block Loading stage.",
      "tree": {
        "sha": "2bcec5de60e32c895946a1cda2b4440ff8313f86",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2bcec5de60e32c895946a1cda2b4440ff8313f86"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/871c3557bf08dd29c6d2ffd10e854bbd0478b3b5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/871c3557bf08dd29c6d2ffd10e854bbd0478b3b5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/871c3557bf08dd29c6d2ffd10e854bbd0478b3b5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/871c3557bf08dd29c6d2ffd10e854bbd0478b3b5/comments",
    "author": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ac4161e25df2a9475abb0f62d32a7d86d6baff0f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac4161e25df2a9475abb0f62d32a7d86d6baff0f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ac4161e25df2a9475abb0f62d32a7d86d6baff0f"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 14,
      "deletions": 2
    },
    "files": [
      {
        "sha": "39a41894d7f23bb07d3e95f41945737a7fd61b80",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/871c3557bf08dd29c6d2ffd10e854bbd0478b3b5/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/871c3557bf08dd29c6d2ffd10e854bbd0478b3b5/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=871c3557bf08dd29c6d2ffd10e854bbd0478b3b5",
        "patch": "@@ -529,7 +529,7 @@ bool CTxDB::LoadBlockIndex()\n         // Unserialize\n         string strType;\n         ssKey >> strType;\n-        if (strType == \"blockindex\")\n+        if (strType == \"blockindex\" && !fRequestShutdown)\n         {\n             CDiskBlockIndex diskindex;\n             ssValue >> diskindex;\n@@ -556,11 +556,14 @@ bool CTxDB::LoadBlockIndex()\n         }\n         else\n         {\n-            break;\n+            break; // if shutdown requested or finished loading block index\n         }\n     }\n     pcursor->close();\n \n+    if (fRequestShutdown)\n+        return true;\n+\n     // Calculate bnChainWork\n     vector<pair<int, CBlockIndex*> > vSortedByHeight;\n     vSortedByHeight.reserve(mapBlockIndex.size());"
      },
      {
        "sha": "14db9e7f5ea4066f3fba7d44ee7a7e6f8c43ff8a",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/871c3557bf08dd29c6d2ffd10e854bbd0478b3b5/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/871c3557bf08dd29c6d2ffd10e854bbd0478b3b5/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=871c3557bf08dd29c6d2ffd10e854bbd0478b3b5",
        "patch": "@@ -353,6 +353,15 @@ bool AppInit2(int argc, char* argv[])\n     nStart = GetTimeMillis();\n     if (!LoadBlockIndex())\n         strErrors << _(\"Error loading blkindex.dat\") << \"\\n\";\n+\n+    // as LoadBlockIndex can take several minutes, it's possible the user\n+    // requested to kill bitcoin-qt during the last operation. If so, exit.\n+    // As the program has not fully started yet, Shutdown() is possibly overkill.\n+    if (fRequestShutdown)\n+    {\n+        printf(\"Shutdown requested. Exiting.\\n\");\n+        return false;\n+    }\n     printf(\" block index %15\"PRI64d\"ms\\n\", GetTimeMillis() - nStart);\n \n     InitMessage(_(\"Loading wallet...\"));"
      }
    ]
  }
]