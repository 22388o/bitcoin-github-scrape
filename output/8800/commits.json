[
  {
    "sha": "3bd962d27161545541a3a6330399807d588dc7ea",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYmQ5NjJkMjcxNjE1NDU1NDFhM2E2MzMwMzk5ODA3ZDU4OGRjN2Vh",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2016-12-05T08:00:02Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2016-12-05T08:00:02Z"
      },
      "message": "Fetch w/o CB if mempool empty, don't use HB mode if blocks only.\n\nFetching with CB when there are less than 30 hits for a full block\n wastes bandwidth; and getting three copies of a CB message which\n is of no use to us when we are in blocks only mode is not great.\n\nThis is a fairly small optimization, since even the worst case of\n getting three useless CB messages is only a 5% bandwidth increase.",
      "tree": {
        "sha": "b6b801937f9fb85563ed58396d4177e3de5308b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b6b801937f9fb85563ed58396d4177e3de5308b1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3bd962d27161545541a3a6330399807d588dc7ea",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3bd962d27161545541a3a6330399807d588dc7ea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3bd962d27161545541a3a6330399807d588dc7ea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3bd962d27161545541a3a6330399807d588dc7ea/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d04aebaec7bbf4095bd4f6a715eb6ee834857115",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d04aebaec7bbf4095bd4f6a715eb6ee834857115",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d04aebaec7bbf4095bd4f6a715eb6ee834857115"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 6,
      "deletions": 3
    },
    "files": [
      {
        "sha": "074fa726cfa6549ecb11fd23c17f4eafdffe0067",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bd962d27161545541a3a6330399807d588dc7ea/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bd962d27161545541a3a6330399807d588dc7ea/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=3bd962d27161545541a3a6330399807d588dc7ea",
        "patch": "@@ -2095,10 +2095,13 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                             pindexLast->GetBlockHash().ToString(), pindexLast->nHeight);\n                 }\n                 if (vGetData.size() > 0) {\n-                    if (nodestate->fSupportsDesiredCmpctVersion && vGetData.size() == 1 && mapBlocksInFlight.size() == 1 && pindexLast->pprev->IsValid(BLOCK_VALID_CHAIN)) {\n+                    if (nodestate->fSupportsDesiredCmpctVersion && vGetData.size() == 1 && mapBlocksInFlight.size() == 1 && pindexLast->pprev->IsValid(BLOCK_VALID_CHAIN) && mempool.size() > 1) {\n                         // We seem to be rather well-synced, so it appears pfrom was the first to provide us\n-                        // with this block! Let's get them to announce using compact blocks in the future.\n-                        MaybeSetPeerAsAnnouncingHeaderAndIDs(nodestate, pfrom, connman);\n+                        // with this block! Let's get them to announce using compact blocks in the future, unless\n+                        // either of us are blocks-only and would prefer to save bandwidth.\n+                        if (pfrom->fRelayTxes && !GetBoolArg(\"-blocksonly\", DEFAULT_BLOCKSONLY)) {\n+                            MaybeSetPeerAsAnnouncingHeaderAndIDs(nodestate, pfrom, connman);\n+                        }\n                         // In any case, we want to download using a compact block, not a regular one\n                         vGetData[0] = CInv(MSG_CMPCT_BLOCK, vGetData[0].hash);\n                     }"
      }
    ]
  }
]