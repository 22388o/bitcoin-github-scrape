[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619602160",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#issuecomment-619602160",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18774",
    "id": 619602160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTYwMjE2MA==",
    "user": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?u=17d35db6d21a792a73c54469705cff5da63abe5f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-26T18:34:30Z",
    "updated_at": "2020-04-26T18:34:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MarcoFalke \r\nThere are several error messages in travis that I don't know how to fix. Maybe because the v0.16.3 binaries are missing on test envs?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619602160/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619604633",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#issuecomment-619604633",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18774",
    "id": 619604633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTYwNDYzMw==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-26T18:49:55Z",
    "updated_at": "2020-04-26T18:49:55Z",
    "author_association": "MEMBER",
    "body": "You'll also need to adjust ci/test/05_before_script.sh",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619604633/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619613229",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#issuecomment-619613229",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18774",
    "id": 619613229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTYxMzIyOQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-26T19:38:34Z",
    "updated_at": "2020-04-27T12:34:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619613229/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415346339",
    "pull_request_review_id": 400522178,
    "id": 415346339,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM0NjMzOQ==",
    "diff_hunk": "@@ -0,0 +1,87 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.16.3 node binary:\n+\n+contrib/devtools/previous_release.sh -b v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"],\n+            []\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+        ])\n+\n+        self.start_nodes()",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": 65,
    "original_position": 54,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "efd68292966ada54d96ac964b4157c1d2d485ada",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Instead of modifying the test_framwork/util.py, you could just remove the line `[regtest]` from the bitcoin.conf in the 16.3 datadir before starting the nodes",
    "created_at": "2020-04-26T16:22:48Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415346339",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415346339"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415346339"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415346339/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 65,
    "original_line": 65,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415346876",
    "pull_request_review_id": 400522497,
    "id": 415346876,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM0Njg3Ng==",
    "diff_hunk": "@@ -0,0 +1,87 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.16.3 node binary:\n+\n+contrib/devtools/previous_release.sh -b v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"],\n+            []\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+        ])\n+\n+        self.start_nodes()",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": 65,
    "original_position": 54,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "efd68292966ada54d96ac964b4157c1d2d485ada",
    "user": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, but wouldn't be better to make this generally available? For example the [comment](https://github.com/bitcoin/bitcoin/blob/master/test/functional/feature_backwards_compatibility.py#L11) in `feature_backwards_compatibility.py` states that it's not possible to test older nodes.",
    "created_at": "2020-04-26T16:25:38Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415346876",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415346876"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415346876"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415346876/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 65,
    "original_line": 65,
    "side": "RIGHT",
    "in_reply_to_id": 415346339
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415354718",
    "pull_request_review_id": 400526397,
    "id": 415354718,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM1NDcxOA==",
    "diff_hunk": "@@ -0,0 +1,87 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.16.3 node binary:\n+\n+contrib/devtools/previous_release.sh -b v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"],\n+            []\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+        ])\n+\n+        self.start_nodes()",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": 65,
    "original_position": 54,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "efd68292966ada54d96ac964b4157c1d2d485ada",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, if you want, you can create a generally available util method like\r\n\r\n```py\r\ndef adjust_bitcoin_conf_for_pre_16_3(conf_file):\r\n  ...",
    "created_at": "2020-04-26T17:06:52Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415354718",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415354718"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415354718"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415354718/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 65,
    "original_line": 65,
    "side": "RIGHT",
    "in_reply_to_id": 415346339
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415354824",
    "pull_request_review_id": 400526461,
    "id": 415354824,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM1NDgyNA==",
    "diff_hunk": "@@ -0,0 +1,89 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.16.3 node binary:\n+\n+contrib/devtools/previous_release.sh -b v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+import subprocess\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"],\n+            []\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+        ])\n+        # older bitcoind's like v0.16.3 don't recognize config sections\n+        subprocess.call([\"sed\",\"-i\", \"-e\", \"s/\\[regtest\\]/ /g\", self.nodes[1].bitcoinconf])",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": null,
    "original_position": 55,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "64dd4032fee93f6c45372966fdb8981555238880",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "sed does not exist on windows. I think this is possible entirely in python?",
    "created_at": "2020-04-26T17:07:36Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415354824",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415354824"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415354824"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415354824/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 55,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415354963",
    "pull_request_review_id": 400526525,
    "id": 415354963,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM1NDk2Mw==",
    "diff_hunk": "@@ -0,0 +1,87 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.16.3 node binary:\n+\n+contrib/devtools/previous_release.sh -b v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"],\n+            []\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+        ])\n+\n+        self.start_nodes()",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": 65,
    "original_position": 54,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "efd68292966ada54d96ac964b4157c1d2d485ada",
    "user": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ok, will implement it. Have just force pushed a change that uses *sed* to make an in-file replacement.",
    "created_at": "2020-04-26T17:08:13Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415354963",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415354963"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415354963"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415354963/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 65,
    "original_line": 65,
    "side": "RIGHT",
    "in_reply_to_id": 415346339
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415355171",
    "pull_request_review_id": 400526636,
    "id": 415355171,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM1NTE3MQ==",
    "diff_hunk": "@@ -0,0 +1,89 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.16.3 node binary:\n+\n+contrib/devtools/previous_release.sh -b v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+import subprocess\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"],\n+            []\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+        ])\n+        # older bitcoind's like v0.16.3 don't recognize config sections\n+        subprocess.call([\"sed\",\"-i\", \"-e\", \"s/\\[regtest\\]/ /g\", self.nodes[1].bitcoinconf])",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": null,
    "original_position": 55,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "64dd4032fee93f6c45372966fdb8981555238880",
    "user": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, just came to my mind. Windows!\r\nI'll use python's own regex utils. \r\n",
    "created_at": "2020-04-26T17:09:23Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415355171",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415355171"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415355171"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415355171/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 55,
    "side": "RIGHT",
    "in_reply_to_id": 415354824
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415374788",
    "pull_request_review_id": 400536644,
    "id": 415374788,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM3NDc4OA==",
    "diff_hunk": "@@ -180,6 +180,7 @@\n     'mempool_expiry.py',\n     'wallet_import_rescan.py',\n     'wallet_import_with_label.py',\n+    'wallet_upgradewallet',",
    "path": "test/functional/test_runner.py",
    "position": null,
    "original_position": 4,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "af3ff0efdce689e06261f5ee6012d902b2e7d3a6",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n    'wallet_upgradewallet.py',\r\n```",
    "created_at": "2020-04-26T18:49:05Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415374788",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415374788"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415374788"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415374788/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 183,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415449758",
    "pull_request_review_id": 400577111,
    "id": 415449758,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ0OTc1OA==",
    "diff_hunk": "@@ -326,6 +326,16 @@ def initialize_datadir(dirname, n, chain):\n         os.makedirs(os.path.join(datadir, 'stdout'), exist_ok=True)\n     return datadir\n \n+def adjust_bitcoin_conf_for_pre_16_3(conf_file):\n+    conf = open(conf_file,'r', encoding='utf8')",
    "path": "test/functional/test_framework/util.py",
    "position": null,
    "original_position": 5,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "f8049ba065a38db458e7a0826e69efe4b3b68f86",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "python `with` context manager should simplify this",
    "created_at": "2020-04-27T01:20:13Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415449758",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415449758"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415449758"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415449758/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 330,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415450429",
    "pull_request_review_id": 400577551,
    "id": 415450429,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ1MDQyOQ==",
    "diff_hunk": "@@ -0,0 +1,89 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.16.3 node binary:\n+\n+contrib/devtools/previous_release.sh -b v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_16_3,\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"],\n+            []\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": 47,
    "original_position": 42,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "f8049ba065a38db458e7a0826e69efe4b3b68f86",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can this be factored out into a `def skip_if_no_previous_release(self)`? Maybe a future pull?",
    "created_at": "2020-04-27T01:22:34Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415450429",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415450429"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415450429"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415450429/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 47,
    "original_line": 47,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415450717",
    "pull_request_review_id": 400577744,
    "id": 415450717,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ1MDcxNw==",
    "diff_hunk": "@@ -0,0 +1,89 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.16.3 node binary:\n+\n+contrib/devtools/previous_release.sh -b v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_16_3,\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"],\n+            []\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+        ])\n+        # older bitcoind's like v0.16.3 don't recognize config sections\n+        adjust_bitcoin_conf_for_pre_16_3(self.nodes[1].bitcoinconf)\n+        self.start_nodes()\n+\n+    def run_test(self):\n+        self.nodes[0].generatetoaddress(101, self.nodes[0].getnewaddress())\n+        # # Sanity check the test framework:\n+        res = self.nodes[0].getblockchaininfo()\n+        assert_equal(res['blocks'], 101)\n+        node_master = self.nodes[0]\n+        v16_3_node  = self.nodes[1]\n+\n+        self.log.info(\"Test upgradewallet RPC...\")\n+        # Prepare for copying of the older wallet\n+        node_master_wallets_dir = os.path.join(node_master.datadir, \"regtest/wallets\")\n+        v16_3_wallets_dir       = os.path.join(v16_3_node.datadir, \"regtest/wallets\")\n+        node_master.unloadwallet(\"\")\n+\n+        # Copy the 0.16.3 wallet to the last Bitcoin Core version and open it:\n+        shutil.rmtree(node_master_wallets_dir)\n+        shutil.copytree(\n+            v16_3_wallets_dir,",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": null,
    "original_position": 75,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "f8049ba065a38db458e7a0826e69efe4b3b68f86",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "don't you need to shut down first?",
    "created_at": "2020-04-27T01:23:30Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415450717",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415450717"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415450717"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415450717/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 88,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415454548",
    "pull_request_review_id": 400580618,
    "id": 415454548,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ1NDU0OA==",
    "diff_hunk": "@@ -0,0 +1,89 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.16.3 node binary:\n+\n+contrib/devtools/previous_release.sh -b v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_16_3,\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"],\n+            []\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": null,
    "original_position": 46,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "f8049ba065a38db458e7a0826e69efe4b3b68f86",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "would it be possible to user version 15, so that `-usehd=0` can be passed to the wallet?",
    "created_at": "2020-04-27T01:38:19Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415454548",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415454548"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415454548"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415454548/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 46,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415722436",
    "pull_request_review_id": 400851451,
    "id": 415722436,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcyMjQzNg==",
    "diff_hunk": "@@ -326,6 +326,16 @@ def initialize_datadir(dirname, n, chain):\n         os.makedirs(os.path.join(datadir, 'stdout'), exist_ok=True)\n     return datadir\n \n+def adjust_bitcoin_conf_for_pre_16_3(conf_file):\n+    conf = open(conf_file,'r', encoding='utf8')",
    "path": "test/functional/test_framework/util.py",
    "position": null,
    "original_position": 5,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "f8049ba065a38db458e7a0826e69efe4b3b68f86",
    "user": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Have changed it.",
    "created_at": "2020-04-27T11:11:41Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415722436",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415722436"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415722436"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415722436/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 330,
    "side": "RIGHT",
    "in_reply_to_id": 415449758
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415723440",
    "pull_request_review_id": 400852499,
    "id": 415723440,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcyMzQ0MA==",
    "diff_hunk": "@@ -0,0 +1,89 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.16.3 node binary:\n+\n+contrib/devtools/previous_release.sh -b v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_16_3,\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"],\n+            []\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": 47,
    "original_position": 42,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "f8049ba065a38db458e7a0826e69efe4b3b68f86",
    "user": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I've taken this piece of code from `feature_backwards_compatibility`, so I will later try it out with `skip_if_no_previous_release(self)`.",
    "created_at": "2020-04-27T11:13:24Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415723440",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415723440"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415723440"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415723440/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 47,
    "original_line": 47,
    "side": "RIGHT",
    "in_reply_to_id": 415450429
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415723727",
    "pull_request_review_id": 400852845,
    "id": 415723727,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcyMzcyNw==",
    "diff_hunk": "@@ -0,0 +1,89 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.16.3 node binary:\n+\n+contrib/devtools/previous_release.sh -b v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_16_3,\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"],\n+            []\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+        ])\n+        # older bitcoind's like v0.16.3 don't recognize config sections\n+        adjust_bitcoin_conf_for_pre_16_3(self.nodes[1].bitcoinconf)\n+        self.start_nodes()\n+\n+    def run_test(self):\n+        self.nodes[0].generatetoaddress(101, self.nodes[0].getnewaddress())\n+        # # Sanity check the test framework:\n+        res = self.nodes[0].getblockchaininfo()\n+        assert_equal(res['blocks'], 101)\n+        node_master = self.nodes[0]\n+        v16_3_node  = self.nodes[1]\n+\n+        self.log.info(\"Test upgradewallet RPC...\")\n+        # Prepare for copying of the older wallet\n+        node_master_wallets_dir = os.path.join(node_master.datadir, \"regtest/wallets\")\n+        v16_3_wallets_dir       = os.path.join(v16_3_node.datadir, \"regtest/wallets\")\n+        node_master.unloadwallet(\"\")\n+\n+        # Copy the 0.16.3 wallet to the last Bitcoin Core version and open it:\n+        shutil.rmtree(node_master_wallets_dir)\n+        shutil.copytree(\n+            v16_3_wallets_dir,",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": null,
    "original_position": 75,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "f8049ba065a38db458e7a0826e69efe4b3b68f86",
    "user": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Indeed. The latest variant has it now.",
    "created_at": "2020-04-27T11:13:55Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415723727",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415723727"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415723727"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415723727/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 88,
    "side": "RIGHT",
    "in_reply_to_id": 415450717
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415724408",
    "pull_request_review_id": 400853551,
    "id": 415724408,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcyNDQwOA==",
    "diff_hunk": "@@ -0,0 +1,89 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.16.3 node binary:\n+\n+contrib/devtools/previous_release.sh -b v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_16_3,\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"],\n+            []\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": null,
    "original_position": 46,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "f8049ba065a38db458e7a0826e69efe4b3b68f86",
    "user": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Have added a v0.15.2 node, so that we are now testing v0.15.2 with *-usehd=0* and v0.16.3 with *-usehd=1*. ",
    "created_at": "2020-04-27T11:14:59Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415724408",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415724408"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415724408"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415724408/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 46,
    "side": "RIGHT",
    "in_reply_to_id": 415454548
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415726704",
    "pull_request_review_id": 400855992,
    "id": 415726704,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcyNjcwNA==",
    "diff_hunk": "@@ -0,0 +1,89 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.16.3 node binary:\n+\n+contrib/devtools/previous_release.sh -b v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_16_3,\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"],\n+            []\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": null,
    "original_position": 46,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "f8049ba065a38db458e7a0826e69efe4b3b68f86",
    "user": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Btw. there is now a new helper method in *util.py* called `get_nodes_least_version`, because the framework couldn't start the v0.15.2 node. The error was thrown in `sync_mempools`and `sync_blocks`. It seems to have something to do with the call of `syncwithvalidationinterfacequeue`. This indirectly affected the `getpeerinfo`from `sync_blocks`, but because 0.15.2 never needed any peers for these particular tests, I thought, maybe a small helper methode for filtering those old nodes would be sufficient. If not, please, let me know what alternatives we have here.",
    "created_at": "2020-04-27T11:18:56Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415726704",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415726704"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415726704"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415726704/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 46,
    "side": "RIGHT",
    "in_reply_to_id": 415454548
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415728710",
    "pull_request_review_id": 400857922,
    "id": 415728710,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcyODcxMA==",
    "diff_hunk": "@@ -326,6 +326,14 @@ def initialize_datadir(dirname, n, chain):\n         os.makedirs(os.path.join(datadir, 'stdout'), exist_ok=True)\n     return datadir\n \n+def adjust_bitcoin_conf_for_pre_16_3(conf_file):\n+    conf_data = \"\"",
    "path": "test/functional/test_framework/util.py",
    "position": null,
    "original_position": 5,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "e9a0ea40d43a075b9ef4976bff6f81e978ca687d",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This line can be removed, because python's scopes are more fluid",
    "created_at": "2020-04-27T11:22:06Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415728710",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415728710"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415728710"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415728710/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 330,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415728878",
    "pull_request_review_id": 400857922,
    "id": 415728878,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcyODg3OA==",
    "diff_hunk": "@@ -326,6 +326,14 @@ def initialize_datadir(dirname, n, chain):\n         os.makedirs(os.path.join(datadir, 'stdout'), exist_ok=True)\n     return datadir\n \n+def adjust_bitcoin_conf_for_pre_16_3(conf_file):",
    "path": "test/functional/test_framework/util.py",
    "position": null,
    "original_position": 4,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "e9a0ea40d43a075b9ef4976bff6f81e978ca687d",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\ndef adjust_bitcoin_conf_for_pre_17(conf_file):\r\n```\r\n\r\nSorry, this should say pre 17",
    "created_at": "2020-04-27T11:22:28Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415728878",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415728878"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415728878"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415728878/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 329,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415729442",
    "pull_request_review_id": 400857922,
    "id": 415729442,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcyOTQ0Mg==",
    "diff_hunk": "@@ -408,13 +416,22 @@ def sync_blocks(rpc_connections, *, wait=1, timeout=60):\n         if best_hash.count(best_hash[0]) == len(rpc_connections):\n             return\n         # Check that each peer has at least one connection\n-        assert (all([len(x.getpeerinfo()) for x in rpc_connections]))\n+        assert (all([len(x.getpeerinfo()) for x in get_nodes_least_version(rpc_connections)]))",
    "path": "test/functional/test_framework/util.py",
    "position": null,
    "original_position": 20,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "e9a0ea40d43a075b9ef4976bff6f81e978ca687d",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't like making sync_**all** only sync the latest versions. Why is this needed here anyway?",
    "created_at": "2020-04-27T11:23:22Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415729442",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415729442"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415729442"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415729442/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 419,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415730186",
    "pull_request_review_id": 400859634,
    "id": 415730186,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTczMDE4Ng==",
    "diff_hunk": "@@ -0,0 +1,89 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.16.3 node binary:\n+\n+contrib/devtools/previous_release.sh -b v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_16_3,\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"],\n+            []\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": 47,
    "original_position": 42,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "f8049ba065a38db458e7a0826e69efe4b3b68f86",
    "user": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think, I should then also update every test where the above code is currently in use. Will make a separate pull request for that. :)",
    "created_at": "2020-04-27T11:24:34Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415730186",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415730186"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415730186"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415730186/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 47,
    "original_line": 47,
    "side": "RIGHT",
    "in_reply_to_id": 415450429
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415730482",
    "pull_request_review_id": 400857922,
    "id": 415730482,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTczMDQ4Mg==",
    "diff_hunk": "@@ -426,8 +443,8 @@ def sync_mempools(rpc_connections, *, wait=1, timeout=60, flush_scheduler=True):\n         pool = [set(r.getrawmempool()) for r in rpc_connections]\n         if pool.count(pool[0]) == len(rpc_connections):\n             if flush_scheduler:\n-                for r in rpc_connections:\n-                    r.syncwithvalidationinterfacequeue()\n+                for r in get_nodes_least_version(rpc_connections):\n+                        r.syncwithvalidationinterfacequeue()",
    "path": "test/functional/test_framework/util.py",
    "position": null,
    "original_position": 46,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "e9a0ea40d43a075b9ef4976bff6f81e978ca687d",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'd rather remove the call to sync_mempools. You can do that by deriving the function that calls it.",
    "created_at": "2020-04-27T11:25:07Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415730482",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415730482"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415730482"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415730482/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 436,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415734342",
    "pull_request_review_id": 400864051,
    "id": 415734342,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTczNDM0Mg==",
    "diff_hunk": "@@ -408,13 +416,22 @@ def sync_blocks(rpc_connections, *, wait=1, timeout=60):\n         if best_hash.count(best_hash[0]) == len(rpc_connections):\n             return\n         # Check that each peer has at least one connection\n-        assert (all([len(x.getpeerinfo()) for x in rpc_connections]))\n+        assert (all([len(x.getpeerinfo()) for x in get_nodes_least_version(rpc_connections)]))",
    "path": "test/functional/test_framework/util.py",
    "position": null,
    "original_position": 20,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "e9a0ea40d43a075b9ef4976bff6f81e978ca687d",
    "user": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Because the v0.15.2 node has no peers. But you're right, if I am not using *sync_blocks* it should not react at all. In a previous version of upgradewallet test there was a *sync_blocks* call. Will adapt the code.",
    "created_at": "2020-04-27T11:31:25Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415734342",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415734342"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415734342"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415734342/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 419,
    "side": "RIGHT",
    "in_reply_to_id": 415729442
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415735221",
    "pull_request_review_id": 400865019,
    "id": 415735221,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTczNTIyMQ==",
    "diff_hunk": "@@ -426,8 +443,8 @@ def sync_mempools(rpc_connections, *, wait=1, timeout=60, flush_scheduler=True):\n         pool = [set(r.getrawmempool()) for r in rpc_connections]\n         if pool.count(pool[0]) == len(rpc_connections):\n             if flush_scheduler:\n-                for r in rpc_connections:\n-                    r.syncwithvalidationinterfacequeue()\n+                for r in get_nodes_least_version(rpc_connections):\n+                        r.syncwithvalidationinterfacequeue()",
    "path": "test/functional/test_framework/util.py",
    "position": null,
    "original_position": 46,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "e9a0ea40d43a075b9ef4976bff6f81e978ca687d",
    "user": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If I only knew, where am I calling *sync_mempools*. Will have to search a bit.",
    "created_at": "2020-04-27T11:32:56Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415735221",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415735221"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415735221"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415735221/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 436,
    "side": "RIGHT",
    "in_reply_to_id": 415730482
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415735967",
    "pull_request_review_id": 400865851,
    "id": 415735967,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTczNTk2Nw==",
    "diff_hunk": "@@ -426,8 +443,8 @@ def sync_mempools(rpc_connections, *, wait=1, timeout=60, flush_scheduler=True):\n         pool = [set(r.getrawmempool()) for r in rpc_connections]\n         if pool.count(pool[0]) == len(rpc_connections):\n             if flush_scheduler:\n-                for r in rpc_connections:\n-                    r.syncwithvalidationinterfacequeue()\n+                for r in get_nodes_least_version(rpc_connections):\n+                        r.syncwithvalidationinterfacequeue()",
    "path": "test/functional/test_framework/util.py",
    "position": null,
    "original_position": 46,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "e9a0ea40d43a075b9ef4976bff6f81e978ca687d",
    "user": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think, it comes indirectly from *setup_network*. This method also calls *sync_* stuff.",
    "created_at": "2020-04-27T11:34:18Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415735967",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415735967"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415735967"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415735967/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 436,
    "side": "RIGHT",
    "in_reply_to_id": 415730482
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415736457",
    "pull_request_review_id": 400866398,
    "id": 415736457,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTczNjQ1Nw==",
    "diff_hunk": "@@ -426,8 +443,8 @@ def sync_mempools(rpc_connections, *, wait=1, timeout=60, flush_scheduler=True):\n         pool = [set(r.getrawmempool()) for r in rpc_connections]\n         if pool.count(pool[0]) == len(rpc_connections):\n             if flush_scheduler:\n-                for r in rpc_connections:\n-                    r.syncwithvalidationinterfacequeue()\n+                for r in get_nodes_least_version(rpc_connections):\n+                        r.syncwithvalidationinterfacequeue()",
    "path": "test/functional/test_framework/util.py",
    "position": null,
    "original_position": 46,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "e9a0ea40d43a075b9ef4976bff6f81e978ca687d",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You can override setup_network and provide your own impl",
    "created_at": "2020-04-27T11:35:09Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415736457",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415736457"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415736457"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415736457/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 436,
    "side": "RIGHT",
    "in_reply_to_id": 415730482
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416953375",
    "pull_request_review_id": 402247206,
    "id": 416953375,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk1MzM3NQ==",
    "diff_hunk": "@@ -0,0 +1,125 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.15.2 v0.16.3 node binaries:\n+\n+contrib/devtools/previous_release.sh -b v0.15.2 v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_17,\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"], # current wallet version\n+            [\"-usehd=1\"],            # v0.16.3 wallet\n+            [\"-usehd=0\"]             # v0.15.2 wallet\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300,\n+            150200\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+            releases_path + \"/v0.15.2/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+            releases_path + \"/v0.15.2/bin/bitcoin-cli\",\n+        ])\n+        # adapt bitcoin.conf, because older bitcoind's don't recognize config sections\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[1].bitcoinconf)\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[2].bitcoinconf)\n+        self.start_nodes()\n+\n+    def run_test(self):\n+        self.nodes[0].generatetoaddress(101, self.nodes[0].getnewaddress())\n+        # # Sanity check the test framework:\n+        res = self.nodes[0].getblockchaininfo()\n+        assert_equal(res['blocks'], 101)\n+        node_master = self.nodes[0]\n+        v16_3_node  = self.nodes[1]\n+        v15_2_node  = self.nodes[2]\n+\n+        self.log.info(\"Test upgradewallet RPC...\")\n+        # Prepare for copying of the older wallet\n+        node_master_wallets_dir = os.path.join(node_master.datadir, \"regtest/wallets\")\n+        v16_3_wallets_dir       = os.path.join(v16_3_node.datadir, \"regtest/wallets\")\n+        v15_2_wallets_dir       = os.path.join(v15_2_node.datadir, \"regtest\")\n+        # stop all nodes\n+        self.stop_node(0)\n+        self.stop_node(1)\n+        self.stop_node(2)",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": null,
    "original_position": 83,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "84267045efbfbe2a035e7f34851f1b3bc9964be8",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: `self.stop_nodes` instead of listing each individually?",
    "created_at": "2020-04-28T22:07:51Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r416953375",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416953375"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r416953375"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416953375/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 83,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416954599",
    "pull_request_review_id": 402247206,
    "id": 416954599,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk1NDU5OQ==",
    "diff_hunk": "@@ -0,0 +1,125 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.15.2 v0.16.3 node binaries:\n+\n+contrib/devtools/previous_release.sh -b v0.15.2 v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_17,\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"], # current wallet version\n+            [\"-usehd=1\"],            # v0.16.3 wallet\n+            [\"-usehd=0\"]             # v0.15.2 wallet\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300,\n+            150200\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+            releases_path + \"/v0.15.2/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+            releases_path + \"/v0.15.2/bin/bitcoin-cli\",\n+        ])\n+        # adapt bitcoin.conf, because older bitcoind's don't recognize config sections\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[1].bitcoinconf)\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[2].bitcoinconf)\n+        self.start_nodes()\n+\n+    def run_test(self):\n+        self.nodes[0].generatetoaddress(101, self.nodes[0].getnewaddress())\n+        # # Sanity check the test framework:\n+        res = self.nodes[0].getblockchaininfo()\n+        assert_equal(res['blocks'], 101)\n+        node_master = self.nodes[0]\n+        v16_3_node  = self.nodes[1]\n+        v15_2_node  = self.nodes[2]\n+\n+        self.log.info(\"Test upgradewallet RPC...\")\n+        # Prepare for copying of the older wallet\n+        node_master_wallets_dir = os.path.join(node_master.datadir, \"regtest/wallets\")\n+        v16_3_wallets_dir       = os.path.join(v16_3_node.datadir, \"regtest/wallets\")\n+        v15_2_wallets_dir       = os.path.join(v15_2_node.datadir, \"regtest\")\n+        # stop all nodes\n+        self.stop_node(0)\n+        self.stop_node(1)\n+        self.stop_node(2)\n+\n+        # Copy the 0.16.3 wallet to the last Bitcoin Core version and open it:\n+        shutil.rmtree(node_master_wallets_dir)\n+        shutil.copytree(\n+            v16_3_wallets_dir,\n+            node_master_wallets_dir\n+        )\n+        self.restart_node(0, ['-nowallet'])\n+\n+        node_master.loadwallet(node_master_wallets_dir)",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": null,
    "original_position": 93,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "84267045efbfbe2a035e7f34851f1b3bc9964be8",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Since you're just loading the default wallet, `loadwallet('')` should be sufficient.",
    "created_at": "2020-04-28T22:10:33Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r416954599",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416954599"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r416954599"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416954599/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 93,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416955492",
    "pull_request_review_id": 402247206,
    "id": 416955492,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk1NTQ5Mg==",
    "diff_hunk": "@@ -0,0 +1,125 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.15.2 v0.16.3 node binaries:\n+\n+contrib/devtools/previous_release.sh -b v0.15.2 v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_17,\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"], # current wallet version\n+            [\"-usehd=1\"],            # v0.16.3 wallet\n+            [\"-usehd=0\"]             # v0.15.2 wallet\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300,\n+            150200\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+            releases_path + \"/v0.15.2/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+            releases_path + \"/v0.15.2/bin/bitcoin-cli\",\n+        ])\n+        # adapt bitcoin.conf, because older bitcoind's don't recognize config sections\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[1].bitcoinconf)\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[2].bitcoinconf)\n+        self.start_nodes()\n+\n+    def run_test(self):\n+        self.nodes[0].generatetoaddress(101, self.nodes[0].getnewaddress())\n+        # # Sanity check the test framework:\n+        res = self.nodes[0].getblockchaininfo()\n+        assert_equal(res['blocks'], 101)\n+        node_master = self.nodes[0]\n+        v16_3_node  = self.nodes[1]\n+        v15_2_node  = self.nodes[2]\n+\n+        self.log.info(\"Test upgradewallet RPC...\")\n+        # Prepare for copying of the older wallet\n+        node_master_wallets_dir = os.path.join(node_master.datadir, \"regtest/wallets\")\n+        v16_3_wallets_dir       = os.path.join(v16_3_node.datadir, \"regtest/wallets\")\n+        v15_2_wallets_dir       = os.path.join(v15_2_node.datadir, \"regtest\")",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": null,
    "original_position": 79,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "84267045efbfbe2a035e7f34851f1b3bc9964be8",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is the entire datadir and its going to be copying a lot more than just the wallet. Instead of copying the entire walletdir, just give the paths to the specific wallet.dat files?",
    "created_at": "2020-04-28T22:12:32Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r416955492",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416955492"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r416955492"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416955492/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 79,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416966113",
    "pull_request_review_id": 402261835,
    "id": 416966113,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2NjExMw==",
    "diff_hunk": "@@ -415,7 +422,6 @@ def sync_blocks(rpc_connections, *, wait=1, timeout=60):\n         \"\".join(\"\\n  {!r}\".format(b) for b in best_hash),\n     ))\n \n-",
    "path": "test/functional/test_framework/util.py",
    "position": null,
    "original_position": 18,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "84267045efbfbe2a035e7f34851f1b3bc9964be8",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: why remove this line? Seems unrelated and goes against the pep8 rules",
    "created_at": "2020-04-28T22:39:11Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r416966113",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416966113"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r416966113"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416966113/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 418,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416966593",
    "pull_request_review_id": 402261835,
    "id": 416966593,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2NjU5Mw==",
    "diff_hunk": "@@ -326,6 +326,13 @@ def initialize_datadir(dirname, n, chain):\n         os.makedirs(os.path.join(datadir, 'stdout'), exist_ok=True)\n     return datadir\n \n+def adjust_bitcoin_conf_for_pre_17(conf_file):\n+    with open(conf_file,'r', encoding='utf8') as conf:\n+        conf_data = conf.read()\n+    with open(conf_file, 'w+', encoding='utf8') as conf:\n+        conf_data_changed = re.sub(r'\\[regtest\\]', ' ', conf_data)",
    "path": "test/functional/test_framework/util.py",
    "position": null,
    "original_position": 8,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "84267045efbfbe2a035e7f34851f1b3bc9964be8",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n        conf_data_changed = conf_data.replace('[regtest]', '')\r\n```\r\n\r\nShould be doable without relying on the regex module",
    "created_at": "2020-04-28T22:40:34Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r416966593",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416966593"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r416966593"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416966593/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 333,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416967844",
    "pull_request_review_id": 402261835,
    "id": 416967844,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2Nzg0NA==",
    "diff_hunk": "@@ -0,0 +1,125 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.15.2 v0.16.3 node binaries:\n+\n+contrib/devtools/previous_release.sh -b v0.15.2 v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_17,\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"], # current wallet version\n+            [\"-usehd=1\"],            # v0.16.3 wallet\n+            [\"-usehd=0\"]             # v0.15.2 wallet\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300,\n+            150200\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+            releases_path + \"/v0.15.2/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+            releases_path + \"/v0.15.2/bin/bitcoin-cli\",\n+        ])\n+        # adapt bitcoin.conf, because older bitcoind's don't recognize config sections\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[1].bitcoinconf)\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[2].bitcoinconf)\n+        self.start_nodes()\n+\n+    def run_test(self):\n+        self.nodes[0].generatetoaddress(101, self.nodes[0].getnewaddress())\n+        # # Sanity check the test framework:\n+        res = self.nodes[0].getblockchaininfo()\n+        assert_equal(res['blocks'], 101)\n+        node_master = self.nodes[0]\n+        v16_3_node  = self.nodes[1]\n+        v15_2_node  = self.nodes[2]\n+\n+        self.log.info(\"Test upgradewallet RPC...\")",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": 103,
    "original_position": 75,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "84267045efbfbe2a035e7f34851f1b3bc9964be8",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It would be nice to send some coins around, so that we can check the balance doesn't decrease from upgrading the wallet",
    "created_at": "2020-04-28T22:43:45Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r416967844",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416967844"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r416967844"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416967844/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 103,
    "original_line": 103,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416968585",
    "pull_request_review_id": 402261835,
    "id": 416968585,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2ODU4NQ==",
    "diff_hunk": "@@ -0,0 +1,125 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.15.2 v0.16.3 node binaries:\n+\n+contrib/devtools/previous_release.sh -b v0.15.2 v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_17,\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"], # current wallet version\n+            [\"-usehd=1\"],            # v0.16.3 wallet\n+            [\"-usehd=0\"]             # v0.15.2 wallet\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300,\n+            150200\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+            releases_path + \"/v0.15.2/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+            releases_path + \"/v0.15.2/bin/bitcoin-cli\",\n+        ])\n+        # adapt bitcoin.conf, because older bitcoind's don't recognize config sections\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[1].bitcoinconf)\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[2].bitcoinconf)\n+        self.start_nodes()\n+\n+    def run_test(self):\n+        self.nodes[0].generatetoaddress(101, self.nodes[0].getnewaddress())\n+        # # Sanity check the test framework:\n+        res = self.nodes[0].getblockchaininfo()\n+        assert_equal(res['blocks'], 101)\n+        node_master = self.nodes[0]\n+        v16_3_node  = self.nodes[1]\n+        v15_2_node  = self.nodes[2]\n+\n+        self.log.info(\"Test upgradewallet RPC...\")\n+        # Prepare for copying of the older wallet\n+        node_master_wallets_dir = os.path.join(node_master.datadir, \"regtest/wallets\")\n+        v16_3_wallets_dir       = os.path.join(v16_3_node.datadir, \"regtest/wallets\")\n+        v15_2_wallets_dir       = os.path.join(v15_2_node.datadir, \"regtest\")\n+        # stop all nodes\n+        self.stop_node(0)\n+        self.stop_node(1)\n+        self.stop_node(2)\n+\n+        # Copy the 0.16.3 wallet to the last Bitcoin Core version and open it:\n+        shutil.rmtree(node_master_wallets_dir)\n+        shutil.copytree(\n+            v16_3_wallets_dir,\n+            node_master_wallets_dir\n+        )\n+        self.restart_node(0, ['-nowallet'])\n+\n+        node_master.loadwallet(node_master_wallets_dir)\n+        wallet_name = node_master.getwalletinfo()[\"walletname\"]\n+        wallet = node_master.get_wallet_rpc(wallet_name)\n+        old_version = wallet.getwalletinfo()[\"walletversion\"]\n+        # calling upgradewallet without version arguments\n+        # should return nothing if successful\n+        assert_equal(wallet.upgradewallet(), \"\")\n+        new_version = wallet.getwalletinfo()[\"walletversion\"]\n+        # upgraded wallet version should be greater than older one\n+        assert_greater_than(new_version, old_version)\n+\n+        self.stop_node(0)\n+\n+        # Copy the 0.15.2 wallet to the last Bitcoin Core version and open it:\n+        shutil.rmtree(node_master_wallets_dir)\n+        shutil.copytree(\n+            v15_2_wallets_dir,\n+            node_master_wallets_dir\n+        )\n+        self.restart_node(0, ['-nowallet'])\n+\n+        node_master.loadwallet(node_master_wallets_dir)\n+        wallet_name = node_master.getwalletinfo()[\"walletname\"]\n+        wallet = node_master.get_wallet_rpc(wallet_name)\n+        # calling upgradewallet with explicit version number\n+        # should return nothing if successful\n+        assert_equal(wallet.upgradewallet(169900), \"\")\n+        new_version = wallet.getwalletinfo()[\"walletversion\"]\n+        # upgraded wallet should have version 169900\n+        assert_equal(new_version, 169900)",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": 151,
    "original_position": 122,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "84267045efbfbe2a035e7f34851f1b3bc9964be8",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is this now an HD wallet? If yes, would be nice to check that the master key hash is present in the wallet info (or something like that)",
    "created_at": "2020-04-28T22:45:32Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r416968585",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416968585"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r416968585"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416968585/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 151,
    "original_line": 151,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417001157",
    "pull_request_review_id": 402298893,
    "id": 417001157,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAwMTE1Nw==",
    "diff_hunk": "@@ -0,0 +1,125 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.15.2 v0.16.3 node binaries:\n+\n+contrib/devtools/previous_release.sh -b v0.15.2 v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_17,\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"], # current wallet version\n+            [\"-usehd=1\"],            # v0.16.3 wallet\n+            [\"-usehd=0\"]             # v0.15.2 wallet\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300,\n+            150200\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+            releases_path + \"/v0.15.2/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+            releases_path + \"/v0.15.2/bin/bitcoin-cli\",\n+        ])\n+        # adapt bitcoin.conf, because older bitcoind's don't recognize config sections\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[1].bitcoinconf)\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[2].bitcoinconf)\n+        self.start_nodes()\n+\n+    def run_test(self):\n+        self.nodes[0].generatetoaddress(101, self.nodes[0].getnewaddress())\n+        # # Sanity check the test framework:\n+        res = self.nodes[0].getblockchaininfo()\n+        assert_equal(res['blocks'], 101)\n+        node_master = self.nodes[0]\n+        v16_3_node  = self.nodes[1]\n+        v15_2_node  = self.nodes[2]\n+\n+        self.log.info(\"Test upgradewallet RPC...\")",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": 103,
    "original_position": 75,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "84267045efbfbe2a035e7f34851f1b3bc9964be8",
    "user": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Sadly, this can't be implemented, because old nodes aren't connected to *node_master*. We had this problem with rpc_connections previously when I tried to filter out old nodes. Now, the same problem happens when trying to use *sync_* methods. ",
    "created_at": "2020-04-29T00:19:57Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417001157",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417001157"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417001157"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417001157/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 103,
    "original_line": 103,
    "side": "RIGHT",
    "in_reply_to_id": 416967844
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417001468",
    "pull_request_review_id": 402299231,
    "id": 417001468,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAwMTQ2OA==",
    "diff_hunk": "@@ -0,0 +1,125 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.15.2 v0.16.3 node binaries:\n+\n+contrib/devtools/previous_release.sh -b v0.15.2 v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_17,\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"], # current wallet version\n+            [\"-usehd=1\"],            # v0.16.3 wallet\n+            [\"-usehd=0\"]             # v0.15.2 wallet\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300,\n+            150200\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+            releases_path + \"/v0.15.2/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+            releases_path + \"/v0.15.2/bin/bitcoin-cli\",\n+        ])\n+        # adapt bitcoin.conf, because older bitcoind's don't recognize config sections\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[1].bitcoinconf)\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[2].bitcoinconf)\n+        self.start_nodes()\n+\n+    def run_test(self):\n+        self.nodes[0].generatetoaddress(101, self.nodes[0].getnewaddress())\n+        # # Sanity check the test framework:\n+        res = self.nodes[0].getblockchaininfo()\n+        assert_equal(res['blocks'], 101)\n+        node_master = self.nodes[0]\n+        v16_3_node  = self.nodes[1]\n+        v15_2_node  = self.nodes[2]\n+\n+        self.log.info(\"Test upgradewallet RPC...\")\n+        # Prepare for copying of the older wallet\n+        node_master_wallets_dir = os.path.join(node_master.datadir, \"regtest/wallets\")\n+        v16_3_wallets_dir       = os.path.join(v16_3_node.datadir, \"regtest/wallets\")\n+        v15_2_wallets_dir       = os.path.join(v15_2_node.datadir, \"regtest\")\n+        # stop all nodes\n+        self.stop_node(0)\n+        self.stop_node(1)\n+        self.stop_node(2)\n+\n+        # Copy the 0.16.3 wallet to the last Bitcoin Core version and open it:\n+        shutil.rmtree(node_master_wallets_dir)\n+        shutil.copytree(\n+            v16_3_wallets_dir,\n+            node_master_wallets_dir\n+        )\n+        self.restart_node(0, ['-nowallet'])\n+\n+        node_master.loadwallet(node_master_wallets_dir)\n+        wallet_name = node_master.getwalletinfo()[\"walletname\"]\n+        wallet = node_master.get_wallet_rpc(wallet_name)\n+        old_version = wallet.getwalletinfo()[\"walletversion\"]\n+        # calling upgradewallet without version arguments\n+        # should return nothing if successful\n+        assert_equal(wallet.upgradewallet(), \"\")\n+        new_version = wallet.getwalletinfo()[\"walletversion\"]\n+        # upgraded wallet version should be greater than older one\n+        assert_greater_than(new_version, old_version)\n+\n+        self.stop_node(0)\n+\n+        # Copy the 0.15.2 wallet to the last Bitcoin Core version and open it:\n+        shutil.rmtree(node_master_wallets_dir)\n+        shutil.copytree(\n+            v15_2_wallets_dir,\n+            node_master_wallets_dir\n+        )\n+        self.restart_node(0, ['-nowallet'])\n+\n+        node_master.loadwallet(node_master_wallets_dir)\n+        wallet_name = node_master.getwalletinfo()[\"walletname\"]\n+        wallet = node_master.get_wallet_rpc(wallet_name)\n+        # calling upgradewallet with explicit version number\n+        # should return nothing if successful\n+        assert_equal(wallet.upgradewallet(169900), \"\")\n+        new_version = wallet.getwalletinfo()[\"walletversion\"]\n+        # upgraded wallet should have version 169900\n+        assert_equal(new_version, 169900)",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": 151,
    "original_position": 122,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "84267045efbfbe2a035e7f34851f1b3bc9964be8",
    "user": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Have added appropriate tests.",
    "created_at": "2020-04-29T00:21:03Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417001468",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417001468"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417001468"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417001468/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 151,
    "original_line": 151,
    "side": "RIGHT",
    "in_reply_to_id": 416968585
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417002711",
    "pull_request_review_id": 402300395,
    "id": 417002711,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAwMjcxMQ==",
    "diff_hunk": "@@ -0,0 +1,125 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.15.2 v0.16.3 node binaries:\n+\n+contrib/devtools/previous_release.sh -b v0.15.2 v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_17,\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"], # current wallet version\n+            [\"-usehd=1\"],            # v0.16.3 wallet\n+            [\"-usehd=0\"]             # v0.15.2 wallet\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300,\n+            150200\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+            releases_path + \"/v0.15.2/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+            releases_path + \"/v0.15.2/bin/bitcoin-cli\",\n+        ])\n+        # adapt bitcoin.conf, because older bitcoind's don't recognize config sections\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[1].bitcoinconf)\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[2].bitcoinconf)\n+        self.start_nodes()\n+\n+    def run_test(self):\n+        self.nodes[0].generatetoaddress(101, self.nodes[0].getnewaddress())\n+        # # Sanity check the test framework:\n+        res = self.nodes[0].getblockchaininfo()\n+        assert_equal(res['blocks'], 101)\n+        node_master = self.nodes[0]\n+        v16_3_node  = self.nodes[1]\n+        v15_2_node  = self.nodes[2]\n+\n+        self.log.info(\"Test upgradewallet RPC...\")",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": 103,
    "original_position": 75,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "84267045efbfbe2a035e7f34851f1b3bc9964be8",
    "user": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "More precisely, this is the place where the error gets thrown.\r\n\r\n```shell\r\n File \"/test/functional/test_framework/test_framework.py\", line 499, in sync_blocks\r\n    sync_blocks(nodes or self.nodes, **kwargs)\r\n  File \"/test/functional/test_framework/util.py\", line 418, in sync_blocks\r\n    assert (all([len(x.getpeerinfo()) for x in rpc_connections]))\r\n```\r\n\r\nWe have seen this already. So, the question is, do we want to work on \"onboarding\" of old nodes so their converted wallets can be tested here, or should we rather open a dedicated PR for this?",
    "created_at": "2020-04-29T00:24:39Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417002711",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417002711"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417002711"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417002711/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 103,
    "original_line": 103,
    "side": "RIGHT",
    "in_reply_to_id": 416967844
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417003021",
    "pull_request_review_id": 402300743,
    "id": 417003021,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAwMzAyMQ==",
    "diff_hunk": "@@ -0,0 +1,125 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.15.2 v0.16.3 node binaries:\n+\n+contrib/devtools/previous_release.sh -b v0.15.2 v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_17,\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"], # current wallet version\n+            [\"-usehd=1\"],            # v0.16.3 wallet\n+            [\"-usehd=0\"]             # v0.15.2 wallet\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300,\n+            150200\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+            releases_path + \"/v0.15.2/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+            releases_path + \"/v0.15.2/bin/bitcoin-cli\",\n+        ])\n+        # adapt bitcoin.conf, because older bitcoind's don't recognize config sections\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[1].bitcoinconf)\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[2].bitcoinconf)\n+        self.start_nodes()\n+\n+    def run_test(self):\n+        self.nodes[0].generatetoaddress(101, self.nodes[0].getnewaddress())\n+        # # Sanity check the test framework:\n+        res = self.nodes[0].getblockchaininfo()\n+        assert_equal(res['blocks'], 101)\n+        node_master = self.nodes[0]\n+        v16_3_node  = self.nodes[1]\n+        v15_2_node  = self.nodes[2]\n+\n+        self.log.info(\"Test upgradewallet RPC...\")\n+        # Prepare for copying of the older wallet\n+        node_master_wallets_dir = os.path.join(node_master.datadir, \"regtest/wallets\")\n+        v16_3_wallets_dir       = os.path.join(v16_3_node.datadir, \"regtest/wallets\")\n+        v15_2_wallets_dir       = os.path.join(v15_2_node.datadir, \"regtest\")",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": null,
    "original_position": 79,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "84267045efbfbe2a035e7f34851f1b3bc9964be8",
    "user": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, that's much better. Have adapted the code.",
    "created_at": "2020-04-29T00:25:36Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417003021",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417003021"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417003021"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417003021/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 79,
    "side": "RIGHT",
    "in_reply_to_id": 416955492
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417005666",
    "pull_request_review_id": 402303434,
    "id": 417005666,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAwNTY2Ng==",
    "diff_hunk": "@@ -0,0 +1,125 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.15.2 v0.16.3 node binaries:\n+\n+contrib/devtools/previous_release.sh -b v0.15.2 v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_17,\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"], # current wallet version\n+            [\"-usehd=1\"],            # v0.16.3 wallet\n+            [\"-usehd=0\"]             # v0.15.2 wallet\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300,\n+            150200\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+            releases_path + \"/v0.15.2/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+            releases_path + \"/v0.15.2/bin/bitcoin-cli\",\n+        ])\n+        # adapt bitcoin.conf, because older bitcoind's don't recognize config sections\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[1].bitcoinconf)\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[2].bitcoinconf)\n+        self.start_nodes()\n+\n+    def run_test(self):\n+        self.nodes[0].generatetoaddress(101, self.nodes[0].getnewaddress())\n+        # # Sanity check the test framework:\n+        res = self.nodes[0].getblockchaininfo()\n+        assert_equal(res['blocks'], 101)\n+        node_master = self.nodes[0]\n+        v16_3_node  = self.nodes[1]\n+        v15_2_node  = self.nodes[2]\n+\n+        self.log.info(\"Test upgradewallet RPC...\")",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": 103,
    "original_position": 75,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "84267045efbfbe2a035e7f34851f1b3bc9964be8",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "So syncing the blockchain is the issue?\r\n\r\nCan be done in a really dumb way:\r\n\r\n```\r\ndef dumb_sync_blocks(...):\r\n node_from = select node with max height\r\n for i in range(max(blockheight)):\r\n  b = node_from.getblock(lbockhash=node_from.getblockhash(i), verbose=0)\r\n  for n in nodes:\r\n    n.submitblock(b)",
    "created_at": "2020-04-29T00:33:12Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417005666",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417005666"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417005666"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417005666/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 103,
    "original_line": 103,
    "side": "RIGHT",
    "in_reply_to_id": 416967844
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417226610",
    "pull_request_review_id": 402556195,
    "id": 417226610,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIyNjYxMA==",
    "diff_hunk": "@@ -0,0 +1,125 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.15.2 v0.16.3 node binaries:\n+\n+contrib/devtools/previous_release.sh -b v0.15.2 v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_17,\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"], # current wallet version\n+            [\"-usehd=1\"],            # v0.16.3 wallet\n+            [\"-usehd=0\"]             # v0.15.2 wallet\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300,\n+            150200\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+            releases_path + \"/v0.15.2/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+            releases_path + \"/v0.15.2/bin/bitcoin-cli\",\n+        ])\n+        # adapt bitcoin.conf, because older bitcoind's don't recognize config sections\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[1].bitcoinconf)\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[2].bitcoinconf)\n+        self.start_nodes()\n+\n+    def run_test(self):\n+        self.nodes[0].generatetoaddress(101, self.nodes[0].getnewaddress())\n+        # # Sanity check the test framework:\n+        res = self.nodes[0].getblockchaininfo()\n+        assert_equal(res['blocks'], 101)\n+        node_master = self.nodes[0]\n+        v16_3_node  = self.nodes[1]\n+        v15_2_node  = self.nodes[2]\n+\n+        self.log.info(\"Test upgradewallet RPC...\")",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": 103,
    "original_position": 75,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "84267045efbfbe2a035e7f34851f1b3bc9964be8",
    "user": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks. Have tried it, but the v0.15.2 node doesn't expand its chain with submitted blocks. Interestingly, in its blockchaininfo the header count gets increased while block count remains at 0. The other node, v0.16.3 is working fine. Here my variant of *dumb_sync_blocks*\r\n\r\n```python\r\ndef dumb_sync_blocks(self):\r\n    node_from = self.nodes[0]\r\n    to_height = node_from.getblockheader(node_from.getbestblockhash())['height']\r\n    for n in range(1, len(self.nodes)):\r\n        height = self.nodes[n].getblockheader(self.nodes[n].getbestblockhash())['height']\r\n        for i in range(height, to_height+1):\r\n            b = node_from.getblock(blockhash=node_from.getblockhash(i), verbose=0)\r\n            self.nodes[n].submitblock(b)\r\n        new_height = self.nodes[n].getblockheader(self.nodes[n].getbestblockhash())['height']\r\n        print(\"node: {}, new best height: {}\".format(n, new_height))\r\n```\r\n\r\nThe output is like this:\r\n\r\n```shell\r\nnode: 1, new best height: 101\r\nnode: 2, new best height: 0\r\n```\r\n\r\nHere their respective blockchaininfo jsons:\r\n\r\n**v0.16.3**\r\n```js\r\n{\r\n'chain': 'regtest', \r\n'blocks': 101, \r\n'headers': 101, \r\n'bestblockhash': '1a2f4021b111f20b12071bb68c92dc0037a2237ae034b345b002971dbb9f5e16', }\r\n```\r\n\r\n**v0.15.2**\r\n```js\r\n{\r\n'chain': 'regtest', \r\n'blocks': 0, \r\n'headers': 101, \r\n'bestblockhash': '0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206' }\r\n```\r\n\r\nIn the test code I am sending some coins to both wallets and then calling *dumb_sync_blocks* to update all chains.\r\n\r\n```python\r\nnode_master.generatetoaddress(101, v16_3_address)\r\nself.dumb_sync_blocks()\r\n```",
    "created_at": "2020-04-29T10:51:26Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417226610",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417226610"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417226610"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417226610/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 103,
    "original_line": 103,
    "side": "RIGHT",
    "in_reply_to_id": 416967844
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417261359",
    "pull_request_review_id": 402598924,
    "id": 417261359,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI2MTM1OQ==",
    "diff_hunk": "@@ -0,0 +1,125 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.15.2 v0.16.3 node binaries:\n+\n+contrib/devtools/previous_release.sh -b v0.15.2 v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_17,\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"], # current wallet version\n+            [\"-usehd=1\"],            # v0.16.3 wallet\n+            [\"-usehd=0\"]             # v0.15.2 wallet\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300,\n+            150200\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+            releases_path + \"/v0.15.2/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+            releases_path + \"/v0.15.2/bin/bitcoin-cli\",\n+        ])\n+        # adapt bitcoin.conf, because older bitcoind's don't recognize config sections\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[1].bitcoinconf)\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[2].bitcoinconf)\n+        self.start_nodes()\n+\n+    def run_test(self):\n+        self.nodes[0].generatetoaddress(101, self.nodes[0].getnewaddress())\n+        # # Sanity check the test framework:\n+        res = self.nodes[0].getblockchaininfo()\n+        assert_equal(res['blocks'], 101)\n+        node_master = self.nodes[0]\n+        v16_3_node  = self.nodes[1]\n+        v15_2_node  = self.nodes[2]\n+\n+        self.log.info(\"Test upgradewallet RPC...\")",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": 103,
    "original_position": 75,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "84267045efbfbe2a035e7f34851f1b3bc9964be8",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ah, right. regtest was hardforked",
    "created_at": "2020-04-29T12:01:32Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417261359",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417261359"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417261359"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417261359/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 103,
    "original_line": 103,
    "side": "RIGHT",
    "in_reply_to_id": 416967844
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417264205",
    "pull_request_review_id": 402602542,
    "id": 417264205,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI2NDIwNQ==",
    "diff_hunk": "@@ -0,0 +1,125 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.15.2 v0.16.3 node binaries:\n+\n+contrib/devtools/previous_release.sh -b v0.15.2 v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_17,\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"], # current wallet version\n+            [\"-usehd=1\"],            # v0.16.3 wallet\n+            [\"-usehd=0\"]             # v0.15.2 wallet\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300,\n+            150200\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+            releases_path + \"/v0.15.2/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+            releases_path + \"/v0.15.2/bin/bitcoin-cli\",\n+        ])\n+        # adapt bitcoin.conf, because older bitcoind's don't recognize config sections\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[1].bitcoinconf)\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[2].bitcoinconf)\n+        self.start_nodes()\n+\n+    def run_test(self):\n+        self.nodes[0].generatetoaddress(101, self.nodes[0].getnewaddress())\n+        # # Sanity check the test framework:\n+        res = self.nodes[0].getblockchaininfo()\n+        assert_equal(res['blocks'], 101)\n+        node_master = self.nodes[0]\n+        v16_3_node  = self.nodes[1]\n+        v15_2_node  = self.nodes[2]\n+\n+        self.log.info(\"Test upgradewallet RPC...\")",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": 103,
    "original_position": 75,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "84267045efbfbe2a035e7f34851f1b3bc9964be8",
    "user": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ok, then I will be doing balance tests with v0.16.3 only? v0.15.2 can still be used for upgrade tests. Is this acceptable?",
    "created_at": "2020-04-29T12:07:02Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417264205",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417264205"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417264205"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417264205/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 103,
    "original_line": 103,
    "side": "RIGHT",
    "in_reply_to_id": 416967844
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417265823",
    "pull_request_review_id": 402604630,
    "id": 417265823,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI2NTgyMw==",
    "diff_hunk": "@@ -0,0 +1,125 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.15.2 v0.16.3 node binaries:\n+\n+contrib/devtools/previous_release.sh -b v0.15.2 v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_17,\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"], # current wallet version\n+            [\"-usehd=1\"],            # v0.16.3 wallet\n+            [\"-usehd=0\"]             # v0.15.2 wallet\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300,\n+            150200\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+            releases_path + \"/v0.15.2/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+            releases_path + \"/v0.15.2/bin/bitcoin-cli\",\n+        ])\n+        # adapt bitcoin.conf, because older bitcoind's don't recognize config sections\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[1].bitcoinconf)\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[2].bitcoinconf)\n+        self.start_nodes()\n+\n+    def run_test(self):\n+        self.nodes[0].generatetoaddress(101, self.nodes[0].getnewaddress())\n+        # # Sanity check the test framework:\n+        res = self.nodes[0].getblockchaininfo()\n+        assert_equal(res['blocks'], 101)\n+        node_master = self.nodes[0]\n+        v16_3_node  = self.nodes[1]\n+        v15_2_node  = self.nodes[2]\n+\n+        self.log.info(\"Test upgradewallet RPC...\")",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": 103,
    "original_position": 75,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "84267045efbfbe2a035e7f34851f1b3bc9964be8",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It might be possible to apply a hack and either:\r\n\r\n* never produce witnesses (use legacy-1-addresses)\r\n* maybe strip the witness from the blocks before submitting, but I doubt that works because VERIFY_WITNESS should be enforced from genesis, always.",
    "created_at": "2020-04-29T12:10:07Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417265823",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417265823"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417265823"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417265823/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 103,
    "original_line": 103,
    "side": "RIGHT",
    "in_reply_to_id": 416967844
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417266415",
    "pull_request_review_id": 402605435,
    "id": 417266415,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI2NjQxNQ==",
    "diff_hunk": "@@ -0,0 +1,125 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.15.2 v0.16.3 node binaries:\n+\n+contrib/devtools/previous_release.sh -b v0.15.2 v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_17,\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"], # current wallet version\n+            [\"-usehd=1\"],            # v0.16.3 wallet\n+            [\"-usehd=0\"]             # v0.15.2 wallet\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300,\n+            150200\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+            releases_path + \"/v0.15.2/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+            releases_path + \"/v0.15.2/bin/bitcoin-cli\",\n+        ])\n+        # adapt bitcoin.conf, because older bitcoind's don't recognize config sections\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[1].bitcoinconf)\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[2].bitcoinconf)\n+        self.start_nodes()\n+\n+    def run_test(self):\n+        self.nodes[0].generatetoaddress(101, self.nodes[0].getnewaddress())\n+        # # Sanity check the test framework:\n+        res = self.nodes[0].getblockchaininfo()\n+        assert_equal(res['blocks'], 101)\n+        node_master = self.nodes[0]\n+        v16_3_node  = self.nodes[1]\n+        v15_2_node  = self.nodes[2]\n+\n+        self.log.info(\"Test upgradewallet RPC...\")",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": 103,
    "original_position": 75,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "84267045efbfbe2a035e7f34851f1b3bc9964be8",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You don't have to do this, I am happy to merge the pull in its current state. Just let me know.",
    "created_at": "2020-04-29T12:11:19Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417266415",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417266415"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417266415"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417266415/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 103,
    "original_line": 103,
    "side": "RIGHT",
    "in_reply_to_id": 416967844
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417268839",
    "pull_request_review_id": 402608545,
    "id": 417268839,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI2ODgzOQ==",
    "diff_hunk": "@@ -0,0 +1,125 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.15.2 v0.16.3 node binaries:\n+\n+contrib/devtools/previous_release.sh -b v0.15.2 v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_17,\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"], # current wallet version\n+            [\"-usehd=1\"],            # v0.16.3 wallet\n+            [\"-usehd=0\"]             # v0.15.2 wallet\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300,\n+            150200\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+            releases_path + \"/v0.15.2/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+            releases_path + \"/v0.15.2/bin/bitcoin-cli\",\n+        ])\n+        # adapt bitcoin.conf, because older bitcoind's don't recognize config sections\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[1].bitcoinconf)\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[2].bitcoinconf)\n+        self.start_nodes()\n+\n+    def run_test(self):\n+        self.nodes[0].generatetoaddress(101, self.nodes[0].getnewaddress())\n+        # # Sanity check the test framework:\n+        res = self.nodes[0].getblockchaininfo()\n+        assert_equal(res['blocks'], 101)\n+        node_master = self.nodes[0]\n+        v16_3_node  = self.nodes[1]\n+        v15_2_node  = self.nodes[2]\n+\n+        self.log.info(\"Test upgradewallet RPC...\")",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": 103,
    "original_position": 75,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "84267045efbfbe2a035e7f34851f1b3bc9964be8",
    "user": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks. I think I should try to implement it. If it works, fine. If not, then you can merge the current state. Will come back to you later.",
    "created_at": "2020-04-29T12:15:57Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417268839",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417268839"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417268839"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417268839/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 103,
    "original_line": 103,
    "side": "RIGHT",
    "in_reply_to_id": 416967844
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417313080",
    "pull_request_review_id": 402664356,
    "id": 417313080,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMxMzA4MA==",
    "diff_hunk": "@@ -0,0 +1,125 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.15.2 v0.16.3 node binaries:\n+\n+contrib/devtools/previous_release.sh -b v0.15.2 v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_17,\n+    assert_equal,\n+    assert_greater_than\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"], # current wallet version\n+            [\"-usehd=1\"],            # v0.16.3 wallet\n+            [\"-usehd=0\"]             # v0.15.2 wallet\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300,\n+            150200\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+            releases_path + \"/v0.15.2/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+            releases_path + \"/v0.15.2/bin/bitcoin-cli\",\n+        ])\n+        # adapt bitcoin.conf, because older bitcoind's don't recognize config sections\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[1].bitcoinconf)\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[2].bitcoinconf)\n+        self.start_nodes()\n+\n+    def run_test(self):\n+        self.nodes[0].generatetoaddress(101, self.nodes[0].getnewaddress())\n+        # # Sanity check the test framework:\n+        res = self.nodes[0].getblockchaininfo()\n+        assert_equal(res['blocks'], 101)\n+        node_master = self.nodes[0]\n+        v16_3_node  = self.nodes[1]\n+        v15_2_node  = self.nodes[2]\n+\n+        self.log.info(\"Test upgradewallet RPC...\")",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": 103,
    "original_position": 75,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "84267045efbfbe2a035e7f34851f1b3bc9964be8",
    "user": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Well, I have managed to sync the chains, but there is no way to make proper transactions. I have stolen a few things from *p2p_segwit*, like *build_next_block* for manual block generation and syncing:\r\n\r\n```js\r\nnode: 1, new best height: 101\r\nnode: 2, new best height: 101\r\n{\r\n'chain': 'regtest', \r\n'blocks': 101, \r\n'headers': 101, \r\n'bestblockhash': '0f2cfae3d63464c070eea6a8305f6f02245e69f41987c186da1c7f8af2bb1547', }\r\n{\r\n'chain': 'regtest', \r\n'blocks': 101, \r\n'headers': 101, \r\n'bestblockhash': '0f2cfae3d63464c070eea6a8305f6f02245e69f41987c186da1c7f8af2bb1547'}\r\n``` \r\n\r\nHowever, I see no way how to update balance of v0.15.2 as I'd need to build a transaction that would have to have the witness field.\r\n\r\nI will now push the latest changes.\r\n\r\n\r\n",
    "created_at": "2020-04-29T13:28:01Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417313080",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417313080"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417313080"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417313080/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 103,
    "original_line": 103,
    "side": "RIGHT",
    "in_reply_to_id": 416967844
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417318100",
    "pull_request_review_id": 402670677,
    "id": 417318100,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMxODEwMA==",
    "diff_hunk": "@@ -326,6 +326,13 @@ def initialize_datadir(dirname, n, chain):\n         os.makedirs(os.path.join(datadir, 'stdout'), exist_ok=True)\n     return datadir\n \n+def adjust_bitcoin_conf_for_pre_17(conf_file):\n+    with open(conf_file,'r', encoding='utf8') as conf:\n+        conf_data = conf.read()\n+    with open(conf_file, 'w+', encoding='utf8') as conf:",
    "path": "test/functional/test_framework/util.py",
    "position": null,
    "original_position": 7,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "fa016debd2b2e9caad95e3e481de55f0776745ed",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n    with open(conf_file, 'w', encoding='utf8') as conf:\r\n```\r\n\r\nno need for the read flag",
    "created_at": "2020-04-29T13:34:45Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417318100",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417318100"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417318100"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417318100/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 332,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417319631",
    "pull_request_review_id": 402670677,
    "id": 417319631,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMxOTYzMQ==",
    "diff_hunk": "@@ -0,0 +1,155 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.15.2 v0.16.3 node binaries:\n+\n+contrib/devtools/previous_release.sh -b v0.15.2 v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_17,\n+    assert_equal,\n+    assert_greater_than,\n+    assert_is_hex_string\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"], # current wallet version\n+            [\"-usehd=1\"],            # v0.16.3 wallet\n+            [\"-usehd=0\"]             # v0.15.2 wallet\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300,\n+            150200\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+            releases_path + \"/v0.15.2/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+            releases_path + \"/v0.15.2/bin/bitcoin-cli\",\n+        ])\n+        # adapt bitcoin.conf, because older bitcoind's don't recognize config sections\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[1].bitcoinconf)\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[2].bitcoinconf)\n+        self.start_nodes()\n+\n+    def dumb_sync_blocks(self):\n+        \"\"\"\n+        Little helper to sync older wallets. \n+        Notice that v0.15.2's regtest is hardforked, so there is \n+        actually no sync for it. v0.15.2 is only being used\n+        to test version upgrade and master hash key presence.\n+        v0.16.3 is being used to test version upgrade and balances.\n+        Further info: https://github.com/bitcoin/bitcoin/pull/18774#discussion_r416967844\n+        \"\"\"\n+        node_from = self.nodes[0]\n+        to_height = node_from.getblockheader(node_from.getbestblockhash())['height']",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": null,
    "original_position": 77,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "d4fab8820cb33fd4c8a57c6746a0e2d552236487",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n        to_height = node_from.getblockcount()\r\n```",
    "created_at": "2020-04-29T13:36:46Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417319631",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417319631"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417319631"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417319631/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 77,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417319999",
    "pull_request_review_id": 402670677,
    "id": 417319999,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMxOTk5OQ==",
    "diff_hunk": "@@ -0,0 +1,155 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.15.2 v0.16.3 node binaries:\n+\n+contrib/devtools/previous_release.sh -b v0.15.2 v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_17,\n+    assert_equal,\n+    assert_greater_than,\n+    assert_is_hex_string\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"], # current wallet version\n+            [\"-usehd=1\"],            # v0.16.3 wallet\n+            [\"-usehd=0\"]             # v0.15.2 wallet\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300,\n+            150200\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+            releases_path + \"/v0.15.2/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+            releases_path + \"/v0.15.2/bin/bitcoin-cli\",\n+        ])\n+        # adapt bitcoin.conf, because older bitcoind's don't recognize config sections\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[1].bitcoinconf)\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[2].bitcoinconf)\n+        self.start_nodes()\n+\n+    def dumb_sync_blocks(self):\n+        \"\"\"\n+        Little helper to sync older wallets. \n+        Notice that v0.15.2's regtest is hardforked, so there is \n+        actually no sync for it. v0.15.2 is only being used\n+        to test version upgrade and master hash key presence.\n+        v0.16.3 is being used to test version upgrade and balances.\n+        Further info: https://github.com/bitcoin/bitcoin/pull/18774#discussion_r416967844\n+        \"\"\"\n+        node_from = self.nodes[0]\n+        to_height = node_from.getblockheader(node_from.getbestblockhash())['height']\n+        for n in range(1, len(self.nodes)):\n+            height = self.nodes[n].getblockheader(self.nodes[n].getbestblockhash())['height']",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": null,
    "original_position": 79,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "d4fab8820cb33fd4c8a57c6746a0e2d552236487",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n            height = self.nodes[n].getblockcount()\r\n```",
    "created_at": "2020-04-29T13:37:17Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417319999",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417319999"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417319999"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417319999/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 79,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417321394",
    "pull_request_review_id": 402670677,
    "id": 417321394,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMyMTM5NA==",
    "diff_hunk": "@@ -0,0 +1,155 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.15.2 v0.16.3 node binaries:\n+\n+contrib/devtools/previous_release.sh -b v0.15.2 v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_17,\n+    assert_equal,\n+    assert_greater_than,\n+    assert_is_hex_string\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"], # current wallet version\n+            [\"-usehd=1\"],            # v0.16.3 wallet\n+            [\"-usehd=0\"]             # v0.15.2 wallet\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300,\n+            150200\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+            releases_path + \"/v0.15.2/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+            releases_path + \"/v0.15.2/bin/bitcoin-cli\",\n+        ])\n+        # adapt bitcoin.conf, because older bitcoind's don't recognize config sections\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[1].bitcoinconf)\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[2].bitcoinconf)\n+        self.start_nodes()\n+\n+    def dumb_sync_blocks(self):\n+        \"\"\"\n+        Little helper to sync older wallets. \n+        Notice that v0.15.2's regtest is hardforked, so there is \n+        actually no sync for it. v0.15.2 is only being used\n+        to test version upgrade and master hash key presence.\n+        v0.16.3 is being used to test version upgrade and balances.\n+        Further info: https://github.com/bitcoin/bitcoin/pull/18774#discussion_r416967844\n+        \"\"\"\n+        node_from = self.nodes[0]\n+        to_height = node_from.getblockheader(node_from.getbestblockhash())['height']\n+        for n in range(1, len(self.nodes)):\n+            height = self.nodes[n].getblockheader(self.nodes[n].getbestblockhash())['height']\n+            for i in range(height, to_height+1):\n+                b = node_from.getblock(blockhash=node_from.getblockhash(i), verbose=0)\n+                self.nodes[n].submitblock(b)\n+",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": 85,
    "original_position": 83,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "d4fab8820cb33fd4c8a57c6746a0e2d552236487",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n            assert_equal(self.nodes[n].getblockcount(), to_height)\r\n```",
    "created_at": "2020-04-29T13:39:12Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417321394",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417321394"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417321394"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417321394/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 85,
    "original_line": 85,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417342273",
    "pull_request_review_id": 402701775,
    "id": 417342273,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM0MjI3Mw==",
    "diff_hunk": "@@ -0,0 +1,155 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"upgradewallet RPC functional test\n+\n+Test upgradewallet RPC. Download v0.15.2 v0.16.3 node binaries:\n+\n+contrib/devtools/previous_release.sh -b v0.15.2 v0.16.3\n+\"\"\"\n+\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.util import (\n+    adjust_bitcoin_conf_for_pre_17,\n+    assert_equal,\n+    assert_greater_than,\n+    assert_is_hex_string\n+)\n+\n+class UpgradeWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [\n+            [\"-addresstype=bech32\"], # current wallet version\n+            [\"-usehd=1\"],            # v0.16.3 wallet\n+            [\"-usehd=0\"]             # v0.15.2 wallet\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"upgradewallet RPC tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            160300,\n+            150200\n+        ], binary=[\n+            self.options.bitcoind,\n+            releases_path + \"/v0.16.3/bin/bitcoind\",\n+            releases_path + \"/v0.15.2/bin/bitcoind\",\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.16.3/bin/bitcoin-cli\",\n+            releases_path + \"/v0.15.2/bin/bitcoin-cli\",\n+        ])\n+        # adapt bitcoin.conf, because older bitcoind's don't recognize config sections\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[1].bitcoinconf)\n+        adjust_bitcoin_conf_for_pre_17(self.nodes[2].bitcoinconf)\n+        self.start_nodes()\n+\n+    def dumb_sync_blocks(self):\n+        \"\"\"\n+        Little helper to sync older wallets. \n+        Notice that v0.15.2's regtest is hardforked, so there is \n+        actually no sync for it. v0.15.2 is only being used\n+        to test version upgrade and master hash key presence.\n+        v0.16.3 is being used to test version upgrade and balances.\n+        Further info: https://github.com/bitcoin/bitcoin/pull/18774#discussion_r416967844\n+        \"\"\"\n+        node_from = self.nodes[0]\n+        to_height = node_from.getblockheader(node_from.getbestblockhash())['height']\n+        for n in range(1, len(self.nodes)):\n+            height = self.nodes[n].getblockheader(self.nodes[n].getbestblockhash())['height']\n+            for i in range(height, to_height+1):\n+                b = node_from.getblock(blockhash=node_from.getblockhash(i), verbose=0)\n+                self.nodes[n].submitblock(b)\n+",
    "path": "test/functional/wallet_upgradewallet.py",
    "position": 85,
    "original_position": 83,
    "commit_id": "66fe7b1a98c03f690dcf60d359baac124658aeae",
    "original_commit_id": "d4fab8820cb33fd4c8a57c6746a0e2d552236487",
    "user": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks. Btw., have tried to add you as Co-Author, but couldn't find your email or \"no-reply\" email. ",
    "created_at": "2020-04-29T14:06:39Z",
    "updated_at": "2020-04-29T14:12:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417342273",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417342273"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417342273"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18774"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417342273/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 85,
    "original_line": 85,
    "side": "RIGHT",
    "in_reply_to_id": 417321394
  }
]