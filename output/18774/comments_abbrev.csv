brakmic,2020-04-26 18:34:30,"@MarcoFalke \nThere are several error messages in travis that I don't know how to fix. Maybe because the v0.16.3 binaries are missing on test envs?",https://github.com/bitcoin/bitcoin/pull/18774#issuecomment-619602160,619602160,
MarcoFalke,2020-04-26 18:49:55,You'll also need to adjust ci/test/05_before_script.sh,https://github.com/bitcoin/bitcoin/pull/18774#issuecomment-619604633,619604633,
DrahtBot,2020-04-26 19:38:34,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/18774#issuecomment-619613229,619613229,
MarcoFalke,2020-04-26 16:22:48,"Instead of modifying the test_framwork/util.py, you could just remove the line `[regtest]` from the bitcoin.conf in the 16.3 datadir before starting the nodes",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415346339,415346339,test/functional/wallet_upgradewallet.py
brakmic,2020-04-26 16:25:38,"Yes, but wouldn't be better to make this generally available? For example the [comment](https://github.com/bitcoin/bitcoin/blob/master/test/functional/feature_backwards_compatibility.py#L11) in `feature_backwards_compatibility.py` states that it's not possible to test older nodes.",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415346876,415346876,test/functional/wallet_upgradewallet.py
MarcoFalke,2020-04-26 17:06:52,"Yes, if you want, you can create a generally available util method like\n\n```py\ndef adjust_bitcoin_conf_for_pre_16_3(conf_file):\n  ...",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415354718,415354718,test/functional/wallet_upgradewallet.py
MarcoFalke,2020-04-26 17:07:36,sed does not exist on windows. I think this is possible entirely in python?,https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415354824,415354824,test/functional/wallet_upgradewallet.py
brakmic,2020-04-26 17:08:13,"Ok, will implement it. Have just force pushed a change that uses *sed* to make an in-file replacement.",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415354963,415354963,test/functional/wallet_upgradewallet.py
brakmic,2020-04-26 17:09:23,"Yes, just came to my mind. Windows!\nI'll use python's own regex utils. \n",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415355171,415355171,test/functional/wallet_upgradewallet.py
MarcoFalke,2020-04-26 18:49:05,"```suggestion\n    'wallet_upgradewallet.py',\n```",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415374788,415374788,test/functional/test_runner.py
MarcoFalke,2020-04-27 01:20:13,python `with` context manager should simplify this,https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415449758,415449758,test/functional/test_framework/util.py
MarcoFalke,2020-04-27 01:22:34,Can this be factored out into a `def skip_if_no_previous_release(self)`? Maybe a future pull?,https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415450429,415450429,test/functional/wallet_upgradewallet.py
MarcoFalke,2020-04-27 01:23:30,don't you need to shut down first?,https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415450717,415450717,test/functional/wallet_upgradewallet.py
MarcoFalke,2020-04-27 01:38:19,"would it be possible to user version 15, so that `-usehd=0` can be passed to the wallet?",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415454548,415454548,test/functional/wallet_upgradewallet.py
brakmic,2020-04-27 11:11:41,Have changed it.,https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415722436,415722436,test/functional/test_framework/util.py
brakmic,2020-04-27 11:13:24,"I've taken this piece of code from `feature_backwards_compatibility`, so I will later try it out with `skip_if_no_previous_release(self)`.",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415723440,415723440,test/functional/wallet_upgradewallet.py
brakmic,2020-04-27 11:13:55,Indeed. The latest variant has it now.,https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415723727,415723727,test/functional/wallet_upgradewallet.py
brakmic,2020-04-27 11:14:59,"Have added a v0.15.2 node, so that we are now testing v0.15.2 with *-usehd=0* and v0.16.3 with *-usehd=1*. ",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415724408,415724408,test/functional/wallet_upgradewallet.py
brakmic,2020-04-27 11:18:56,"Btw. there is now a new helper method in *util.py* called `get_nodes_least_version`, because the framework couldn't start the v0.15.2 node. The error was thrown in `sync_mempools`and `sync_blocks`. It seems to have something to do with the call of `syncwithvalidationinterfacequeue`. This indirectly affected the `getpeerinfo`from `sync_blocks`, but because 0.15.2 never needed any peers for these pa",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415726704,415726704,test/functional/wallet_upgradewallet.py
MarcoFalke,2020-04-27 11:22:06,"This line can be removed, because python's scopes are more fluid",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415728710,415728710,test/functional/test_framework/util.py
MarcoFalke,2020-04-27 11:22:28,"```suggestion\ndef adjust_bitcoin_conf_for_pre_17(conf_file):\n```\n\nSorry, this should say pre 17",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415728878,415728878,test/functional/test_framework/util.py
MarcoFalke,2020-04-27 11:23:22,I don't like making sync_**all** only sync the latest versions. Why is this needed here anyway?,https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415729442,415729442,test/functional/test_framework/util.py
brakmic,2020-04-27 11:24:34,"I think, I should then also update every test where the above code is currently in use. Will make a separate pull request for that. :)",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415730186,415730186,test/functional/wallet_upgradewallet.py
MarcoFalke,2020-04-27 11:25:07,I'd rather remove the call to sync_mempools. You can do that by deriving the function that calls it.,https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415730482,415730482,test/functional/test_framework/util.py
brakmic,2020-04-27 11:31:25,"Because the v0.15.2 node has no peers. But you're right, if I am not using *sync_blocks* it should not react at all. In a previous version of upgradewallet test there was a *sync_blocks* call. Will adapt the code.",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415734342,415734342,test/functional/test_framework/util.py
brakmic,2020-04-27 11:32:56,"If I only knew, where am I calling *sync_mempools*. Will have to search a bit.",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415735221,415735221,test/functional/test_framework/util.py
brakmic,2020-04-27 11:34:18,"I think, it comes indirectly from *setup_network*. This method also calls *sync_* stuff.",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415735967,415735967,test/functional/test_framework/util.py
MarcoFalke,2020-04-27 11:35:09,You can override setup_network and provide your own impl,https://github.com/bitcoin/bitcoin/pull/18774#discussion_r415736457,415736457,test/functional/test_framework/util.py
achow101,2020-04-28 22:07:51,nit: `self.stop_nodes` instead of listing each individually?,https://github.com/bitcoin/bitcoin/pull/18774#discussion_r416953375,416953375,test/functional/wallet_upgradewallet.py
achow101,2020-04-28 22:10:33,"Since you're just loading the default wallet, `loadwallet('')` should be sufficient.",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r416954599,416954599,test/functional/wallet_upgradewallet.py
achow101,2020-04-28 22:12:32,"This is the entire datadir and its going to be copying a lot more than just the wallet. Instead of copying the entire walletdir, just give the paths to the specific wallet.dat files?",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r416955492,416955492,test/functional/wallet_upgradewallet.py
MarcoFalke,2020-04-28 22:39:11,nit: why remove this line? Seems unrelated and goes against the pep8 rules,https://github.com/bitcoin/bitcoin/pull/18774#discussion_r416966113,416966113,test/functional/test_framework/util.py
MarcoFalke,2020-04-28 22:40:34,"```suggestion\n        conf_data_changed = conf_data.replace('[regtest]', '')\n```\n\nShould be doable without relying on the regex module",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r416966593,416966593,test/functional/test_framework/util.py
MarcoFalke,2020-04-28 22:43:45,"It would be nice to send some coins around, so that we can check the balance doesn't decrease from upgrading the wallet",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r416967844,416967844,test/functional/wallet_upgradewallet.py
MarcoFalke,2020-04-28 22:45:32,"Is this now an HD wallet? If yes, would be nice to check that the master key hash is present in the wallet info (or something like that)",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r416968585,416968585,test/functional/wallet_upgradewallet.py
brakmic,2020-04-29 00:19:57,"Sadly, this can't be implemented, because old nodes aren't connected to *node_master*. We had this problem with rpc_connections previously when I tried to filter out old nodes. Now, the same problem happens when trying to use *sync_* methods. ",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417001157,417001157,test/functional/wallet_upgradewallet.py
brakmic,2020-04-29 00:21:03,Have added appropriate tests.,https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417001468,417001468,test/functional/wallet_upgradewallet.py
brakmic,2020-04-29 00:24:39,"More precisely, this is the place where the error gets thrown.\n\n```shell\n File ""/test/functional/test_framework/test_framework.py"", line 499, in sync_blocks\n    sync_blocks(nodes or self.nodes, **kwargs)\n  File ""/test/functional/test_framework/util.py"", line 418, in sync_blocks\n    assert (all([len(x.getpeerinfo()) for x in rpc_connections]))\n```\n\nWe have seen this already. So, t",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417002711,417002711,test/functional/wallet_upgradewallet.py
brakmic,2020-04-29 00:25:36,"Yes, that's much better. Have adapted the code.",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417003021,417003021,test/functional/wallet_upgradewallet.py
MarcoFalke,2020-04-29 00:33:12,"So syncing the blockchain is the issue?\n\nCan be done in a really dumb way:\n\n```\ndef dumb_sync_blocks(...):\n node_from = select node with max height\n for i in range(max(blockheight)):\n  b = node_from.getblock(lbockhash=node_from.getblockhash(i), verbose=0)\n  for n in nodes:\n    n.submitblock(b)",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417005666,417005666,test/functional/wallet_upgradewallet.py
brakmic,2020-04-29 10:51:26,"Thanks. Have tried it, but the v0.15.2 node doesn't expand its chain with submitted blocks. Interestingly, in its blockchaininfo the header count gets increased while block count remains at 0. The other node, v0.16.3 is working fine. Here my variant of *dumb_sync_blocks*\n\n```python\ndef dumb_sync_blocks(self):\n    node_from = self.nodes[0]\n    to_height = node_from.getblockheader(node_fro",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417226610,417226610,test/functional/wallet_upgradewallet.py
MarcoFalke,2020-04-29 12:01:32,"Ah, right. regtest was hardforked",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417261359,417261359,test/functional/wallet_upgradewallet.py
brakmic,2020-04-29 12:07:02,"Ok, then I will be doing balance tests with v0.16.3 only? v0.15.2 can still be used for upgrade tests. Is this acceptable?",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417264205,417264205,test/functional/wallet_upgradewallet.py
MarcoFalke,2020-04-29 12:10:07,"It might be possible to apply a hack and either:\n\n* never produce witnesses (use legacy-1-addresses)\n* maybe strip the witness from the blocks before submitting, but I doubt that works because VERIFY_WITNESS should be enforced from genesis, always.",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417265823,417265823,test/functional/wallet_upgradewallet.py
MarcoFalke,2020-04-29 12:11:19,"You don't have to do this, I am happy to merge the pull in its current state. Just let me know.",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417266415,417266415,test/functional/wallet_upgradewallet.py
brakmic,2020-04-29 12:15:57,"Thanks. I think I should try to implement it. If it works, fine. If not, then you can merge the current state. Will come back to you later.",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417268839,417268839,test/functional/wallet_upgradewallet.py
brakmic,2020-04-29 13:28:01,"Well, I have managed to sync the chains, but there is no way to make proper transactions. I have stolen a few things from *p2p_segwit*, like *build_next_block* for manual block generation and syncing:\n\n```js\nnode: 1, new best height: 101\nnode: 2, new best height: 101\n{\n'chain': 'regtest', \n'blocks': 101, \n'headers': 101, \n'bestblockhash': '0f2cfae3d63464c070eea6a8305f6f02245e69f4",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417313080,417313080,test/functional/wallet_upgradewallet.py
MarcoFalke,2020-04-29 13:34:45,"```suggestion\n    with open(conf_file, 'w', encoding='utf8') as conf:\n```\n\nno need for the read flag",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417318100,417318100,test/functional/test_framework/util.py
MarcoFalke,2020-04-29 13:36:46,"```suggestion\n        to_height = node_from.getblockcount()\n```",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417319631,417319631,test/functional/wallet_upgradewallet.py
MarcoFalke,2020-04-29 13:37:17,"```suggestion\n            height = self.nodes[n].getblockcount()\n```",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417319999,417319999,test/functional/wallet_upgradewallet.py
MarcoFalke,2020-04-29 13:39:12,"```suggestion\n            assert_equal(self.nodes[n].getblockcount(), to_height)\n```",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417321394,417321394,test/functional/wallet_upgradewallet.py
brakmic,2020-04-29 14:06:39,"Thanks. Btw., have tried to add you as Co-Author, but couldn't find your email or ""no-reply"" email. ",https://github.com/bitcoin/bitcoin/pull/18774#discussion_r417342273,417342273,test/functional/wallet_upgradewallet.py
