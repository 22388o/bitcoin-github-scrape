[
  {
    "sha": "c9cce0a7f66e5abe6a94704eb478e0dc52a29f13",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjOWNjZTBhN2Y2NmU1YWJlNmE5NDcwNGViNDc4ZTBkYzUyYTI5ZjEz",
    "commit": {
      "author": {
        "name": "Will Ayd",
        "email": "william.ayd@icloud.com",
        "date": "2018-04-02T05:45:41Z"
      },
      "committer": {
        "name": "Will Ayd",
        "email": "william.ayd@icloud.com",
        "date": "2018-04-05T01:09:05Z"
      },
      "message": "Tests: Add Metaclass for BitcoinTestFramework\n\nBitcoinTestFramework instructs developers in its docstring to override\n`set_test_params` and `run_test` in subclasses while being sure NOT to\noverride `__init__` and `main` . This change adds a metaclass to ensure\nthat developers adhere to that protocol, raising a ``TypeError`` in\ninstances where they have not.\n\ncloses #12835",
      "tree": {
        "sha": "f3981770b6448f98cd172900f507249e58596811",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f3981770b6448f98cd172900f507249e58596811"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c9cce0a7f66e5abe6a94704eb478e0dc52a29f13",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c9cce0a7f66e5abe6a94704eb478e0dc52a29f13",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c9cce0a7f66e5abe6a94704eb478e0dc52a29f13",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c9cce0a7f66e5abe6a94704eb478e0dc52a29f13/comments",
    "author": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9a2db3b3d511b34489c3cda78d8b80f39e5ade0f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a2db3b3d511b34489c3cda78d8b80f39e5ade0f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9a2db3b3d511b34489c3cda78d8b80f39e5ade0f"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 23,
      "deletions": 1
    },
    "files": [
      {
        "sha": "96ce290ab11583a0bdf0a821139c67c46366d497",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 23,
        "deletions": 1,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c9cce0a7f66e5abe6a94704eb478e0dc52a29f13/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c9cce0a7f66e5abe6a94704eb478e0dc52a29f13/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=c9cce0a7f66e5abe6a94704eb478e0dc52a29f13",
        "patch": "@@ -41,7 +41,28 @@ class TestStatus(Enum):\n TEST_EXIT_FAILED = 1\n TEST_EXIT_SKIPPED = 77\n \n-class BitcoinTestFramework():\n+\n+class BitcoinTestMetaClass(type):\n+    \"\"\"Metaclass for BitcoinTestFramework.\n+\n+    Ensures that any attempt to register a subclass of `BitcoinTestFramework`\n+    adheres to a standard whereby the subclass overrides `set_test_params` and\n+    `run_test` but DOES NOT override either `__init__` or `main`. If any of\n+    those standards are violated, a ``TypeError`` is raised.\"\"\"\n+\n+    def __new__(cls, clsname, bases, dct):\n+        if not clsname == 'BitcoinTestFramework':\n+            if not ('run_test' in dct and 'set_test_params' in dct):\n+                raise TypeError(\"BitcoinTestFramework subclasses must override \"\n+                                \"'run_test' and 'set_test_params'\")\n+            if '__init__' in dct or 'main' in dct:\n+                raise TypeError(\"BitcoinTestFramework subclasses may not override \"\n+                                \"'__init__' or 'main'\")\n+\n+        return super().__new__(cls, clsname, bases, dct)\n+\n+\n+class BitcoinTestFramework(metaclass=BitcoinTestMetaClass):\n     \"\"\"Base class for a bitcoin test script.\n \n     Individual bitcoin test scripts should subclass this class and override the set_test_params() and run_test() methods.\n@@ -432,6 +453,7 @@ def _initialize_chain_clean(self):\n         for i in range(self.num_nodes):\n             initialize_datadir(self.options.tmpdir, i)\n \n+\n class SkipTest(Exception):\n     \"\"\"This exception is raised to skip a test\"\"\"\n     def __init__(self, message):"
      }
    ]
  }
]