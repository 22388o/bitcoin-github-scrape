[
  {
    "sha": "f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNWFlNmM5ODI2MGZkZDNjMGNhMjAzY2U2N2M2NDY3ZDljZGFlYTk1",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-06-11T10:23:49Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-06-12T11:19:12Z"
      },
      "message": "add NetworkIDString() to chainparams\n\n- returns the BIP70 network string\n- use that new function in the core and GUI code and remove unused code\n  and functions",
      "tree": {
        "sha": "44b49c1f22f9c9ec6ec0ea9aede291b17112595b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/44b49c1f22f9c9ec6ec0ea9aede291b17112595b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "3f39b9d4551d729c3a2e4decd810ac6887cfaeb3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f39b9d4551d729c3a2e4decd810ac6887cfaeb3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3f39b9d4551d729c3a2e4decd810ac6887cfaeb3"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 14,
      "deletions": 33
    },
    "files": [
      {
        "sha": "47136eeeea89a89d29552d0a1d09404bfd1efbf5",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95",
        "patch": "@@ -99,6 +99,7 @@ class CMainParams : public CChainParams {\n public:\n     CMainParams() {\n         networkID = CChainParams::MAIN;\n+        strNetworkID = \"main\";\n         // The message start string is designed to be unlikely to occur in normal data.\n         // The characters are rarely used upper ASCII, not valid as UTF-8, and produce\n         // a large 4-byte int at any alignment.\n@@ -189,6 +190,7 @@ class CTestNetParams : public CMainParams {\n public:\n     CTestNetParams() {\n         networkID = CChainParams::TESTNET;\n+        strNetworkID = \"test\";\n         // The message start string is designed to be unlikely to occur in normal data.\n         // The characters are rarely used upper ASCII, not valid as UTF-8, and produce\n         // a large 4-byte int at any alignment.\n@@ -240,6 +242,7 @@ class CRegTestParams : public CTestNetParams {\n public:\n     CRegTestParams() {\n         networkID = CChainParams::REGTEST;\n+        strNetworkID = \"regtest\";\n         pchMessageStart[0] = 0xfa;\n         pchMessageStart[1] = 0xbf;\n         pchMessageStart[2] = 0xb5;"
      },
      {
        "sha": "6e09a2cba3097a9ab3755d8fabc6251f824dfbcb",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95",
        "patch": "@@ -79,6 +79,8 @@ class CChainParams\n      * until nGenProcLimit blocks are generated */\n     bool MineBlocksOnDemand() const { return fMineBlocksOnDemand; }\n     Network NetworkID() const { return networkID; }\n+    /* Return the BIP70 network string (main, test or regtest) */\n+    std::string NetworkIDString() const { return strNetworkID; }\n     const vector<CDNSSeedData>& DNSSeeds() const { return vSeeds; }\n     const std::vector<unsigned char>& Base58Prefix(Base58Type type) const { return base58Prefixes[type]; }\n     const vector<CAddress>& FixedSeeds() const { return vFixedSeeds; }\n@@ -102,6 +104,7 @@ class CChainParams\n     vector<CDNSSeedData> vSeeds;\n     std::vector<unsigned char> base58Prefixes[MAX_BASE58_TYPES];\n     Network networkID;\n+    std::string strNetworkID;\n     CBlock genesis;\n     vector<CAddress> vFixedSeeds;\n     bool fRequireRPCPassword;"
      },
      {
        "sha": "9c9565be67824a6e41306e580e38eb9019d3983f",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95",
        "patch": "@@ -142,14 +142,6 @@ void ClientModel::updateAlert(const QString &hash, int status)\n     emit alertsChanged(getStatusBarWarnings());\n }\n \n-QString ClientModel::getNetworkName() const\n-{\n-    QString netname(QString::fromStdString(Params().DataDir()));\n-    if(netname.isEmpty())\n-        netname = \"main\";\n-    return netname;\n-}\n-\n bool ClientModel::inInitialBlockDownload() const\n {\n     return IsInitialBlockDownload();"
      },
      {
        "sha": "c7bd60bd4131c6539485375fed51bbc2d25827f4",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95",
        "patch": "@@ -56,8 +56,6 @@ class ClientModel : public QObject\n     double getVerificationProgress() const;\n     QDateTime getLastBlockDate() const;\n \n-    //! Return network (main, testnet3, regtest)\n-    QString getNetworkName() const;\n     //! Return true if core is doing initial block download\n     bool inInitialBlockDownload() const;\n     //! Return true if core is importing blocks"
      },
      {
        "sha": "eb6ab879aafcaa7cc368a9593de297834ad1b3c6",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 12,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95",
        "patch": "@@ -490,17 +490,6 @@ bool PaymentServer::readPaymentRequest(const QString& filename, PaymentRequestPl\n     return request.parse(data);\n }\n \n-std::string PaymentServer::mapNetworkIdToName(CChainParams::Network networkId)\n-{\n-    if (networkId == CChainParams::MAIN)\n-        return \"main\";\n-    if (networkId == CChainParams::TESTNET)\n-        return \"test\";\n-    if (networkId == CChainParams::REGTEST)\n-        return \"regtest\";\n-    return \"\";\n-}\n-\n bool PaymentServer::processPaymentRequest(PaymentRequestPlus& request, SendCoinsRecipient& recipient)\n {\n     if (!optionsModel)\n@@ -510,7 +499,7 @@ bool PaymentServer::processPaymentRequest(PaymentRequestPlus& request, SendCoins\n         const payments::PaymentDetails& details = request.getDetails();\n \n         // Payment request network matches client network?\n-        if (details.network() != mapNetworkIdToName(Params().NetworkID()))\n+        if (details.network() != Params().NetworkIDString())\n         {\n             emit message(tr(\"Payment request rejected\"), tr(\"Payment request network doesn't match client network.\"),\n                 CClientUIInterface::MSG_ERROR);"
      },
      {
        "sha": "d84d09c57d6c8039f532baf8b52b0e8eef44b22e",
        "filename": "src/qt/paymentserver.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95/src/qt/paymentserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95/src/qt/paymentserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.h?ref=f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95",
        "patch": "@@ -118,7 +118,6 @@ private slots:\n \n private:\n     static bool readPaymentRequest(const QString& filename, PaymentRequestPlus& request);\n-    std::string mapNetworkIdToName(CChainParams::Network networkId);\n     bool processPaymentRequest(PaymentRequestPlus& request, SendCoinsRecipient& recipient);\n     void fetchRequest(const QUrl& url);\n "
      },
      {
        "sha": "f7491f4a42cc135476c99a694470241713d6b37d",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95",
        "patch": "@@ -316,7 +316,7 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->buildDate->setText(model->formatBuildDate());\n         ui->startupTime->setText(model->formatClientStartupTime());\n \n-        ui->networkName->setText(model->getNetworkName());\n+        ui->networkName->setText(QString::fromStdString(Params().NetworkIDString()));\n     }\n }\n "
      },
      {
        "sha": "0fabc86872a9464b6a9c5d1b992714ebd10fdff8",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 9,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=f5ae6c98260fdd3c0ca203ce67c6467d9cdaea95",
        "patch": "@@ -451,14 +451,11 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n         );\n \n     Object obj;\n-    std::string chain = Params().DataDir();\n-    if(chain.empty())\n-        chain = \"main\";\n-    obj.push_back(Pair(\"chain\",         chain));\n-    obj.push_back(Pair(\"blocks\",        (int)chainActive.Height()));\n-    obj.push_back(Pair(\"bestblockhash\", chainActive.Tip()->GetBlockHash().GetHex()));\n-    obj.push_back(Pair(\"difficulty\",    (double)GetDifficulty()));\n-    obj.push_back(Pair(\"verificationprogress\", Checkpoints::GuessVerificationProgress(chainActive.Tip())));\n-    obj.push_back(Pair(\"chainwork\",     chainActive.Tip()->nChainWork.GetHex()));\n+    obj.push_back(Pair(\"chain\",                 Params().NetworkIDString()));\n+    obj.push_back(Pair(\"blocks\",                (int)chainActive.Height()));\n+    obj.push_back(Pair(\"bestblockhash\",         chainActive.Tip()->GetBlockHash().GetHex()));\n+    obj.push_back(Pair(\"difficulty\",            (double)GetDifficulty()));\n+    obj.push_back(Pair(\"verificationprogress\",  Checkpoints::GuessVerificationProgress(chainActive.Tip())));\n+    obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     return obj;\n }"
      }
    ]
  }
]