[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903181009",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#issuecomment-903181009",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22762",
    "id": 903181009,
    "node_id": "IC_kwDOABII58411XLR",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-21T21:56:37Z",
    "updated_at": "2021-09-10T13:46:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22937](https://github.com/bitcoin/bitcoin/pull/22937) (refactor: Add fs::PathToString, fs::PathFromString, u8string, u8path functions by ryanofsky)\n* [#22831](https://github.com/bitcoin/bitcoin/pull/22831) (test, bugfix: addrman tried table corruption on restart with asmap by jonatack)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/903181009/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/904829923",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#issuecomment-904829923",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22762",
    "id": 904829923,
    "node_id": "IC_kwDOABII58417pvj",
    "user": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?u=03240c7cca7b55e5b9239eeab7a5914663a42b91&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-24T17:18:12Z",
    "updated_at": "2021-08-24T17:18:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/904829923/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/912441771",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#issuecomment-912441771",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22762",
    "id": 912441771,
    "node_id": "IC_kwDOABII5842YsGr",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-03T10:40:17Z",
    "updated_at": "2021-09-03T10:40:17Z",
    "author_association": "MEMBER",
    "body": "Concept ACK.\r\n\r\nLike other open pulls to change or fix addrman behavior, it might be good to have functional/regression test coverage in place first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/912441771/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/914552140",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#issuecomment-914552140",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22762",
    "id": 914552140,
    "node_id": "IC_kwDOABII5842gvVM",
    "user": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?u=03240c7cca7b55e5b9239eeab7a5914663a42b91&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-07T19:05:49Z",
    "updated_at": "2021-09-07T19:06:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Tested on Pop!_OS and everything works as expected and mentioned in PR description.\r\n\r\n### Master Branch:\r\n\r\n_peers.dat_ is replaced with a new file if it is corrupt or other issues.\r\n\r\n\r\n<details>\r\n  <summary>Details</summary>\r\n\r\n![image](https://user-images.githubusercontent.com/13405205/132393914-755fd969-1874-4abb-8654-bc267e722b76.png)\r\n\r\n![image](https://user-images.githubusercontent.com/13405205/132393959-2847368a-ac9e-41b9-93b2-ea67333d6c6e.png)\r\n  \r\n</details>\r\n\r\n### PR Branch:\r\n\r\nA. Corrupt _peers.dat_ file\r\n\r\n1. Open _peers.dat_ add random characters in beginning and save.\r\n2. Run `bitcoind`\r\n\r\n```\r\n2021-09-07T18:05:46Z init message: Loading P2P addresses\u2026\r\n2021-09-07T18:05:46Z Error: Invalid or corrupt peers.dat (Invalid network magic number). If you believe this is a bug, please report it to https://github.com/bitcoin/bitcoin/issues. As a workaround, you can move the file (\"/home/prayank/.bitcoin/regtest/peers.dat\") out of the way (rename, move, or delete) to have a new one created on the next start.\r\nError: Invalid or corrupt peers.dat (Invalid network magic number). If you believe this is a bug, please report it to https://github.com/bitcoin/bitcoin/issues. As a workaround, you can move the file (\"/home/prayank/.bitcoin/regtest/peers.dat\") out of the way (rename, move, or delete) to have a new one created on the next start.\r\n2021-09-07T18:05:46Z Shutdown: In progress...\r\n```\r\n:warning: Not sure why same **error printed twice** in terminal running `bitcoind`. I see only one error message in debug.log:\r\n\r\n```\r\n2021-09-07T18:05:46Z init message: Loading P2P addresses\u2026\r\n2021-09-07T18:05:46Z Error: Invalid or corrupt peers.dat (Invalid network magic number). If you believe this is a bug, please report it to https://github.com/bitcoin/bitcoin/issues. As a workaround, you can move the file (\"/home/prayank/.bitcoin/regtest/peers.dat\") out of the way (rename, move, or delete) to have a new one created on the next start.\r\n2021-09-07T18:05:46Z Shutdown: In progress...\r\n```\r\n\r\nB. _peers.dat_ from testnet used in regtest\r\n\r\n1. Delete _regtest/peers.dat_ and copy _testnet3/peers.dat_ in _regtest/_\r\n2. Run `bitcoind`\r\n\r\n```\r\n2021-09-07T18:14:33Z init message: Loading P2P addresses\u2026\r\n2021-09-07T18:14:33Z Error: Invalid or corrupt peers.dat (Invalid network magic number). If you believe this is a bug, please report it to https://github.com/bitcoin/bitcoin/issues. As a workaround, you can move the file (\"/home/prayank/.bitcoin/regtest/peers.dat\") out of the way (rename, move, or delete) to have a new one created on the next start.\r\nError: Invalid or corrupt peers.dat (Invalid network magic number). If you believe this is a bug, please report it to https://github.com/bitcoin/bitcoin/issues. As a workaround, you can move the file (\"/home/prayank/.bitcoin/regtest/peers.dat\") out of the way (rename, move, or delete) to have a new one created on the next start.\r\n2021-09-07T18:14:33Z Shutdown: In progress...\r\n```\r\nFix the issue by following the things mentioned in error: Delete _peers.dat_ and restart `bitcoind`. No issues. :white_check_mark:\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/914552140/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/915833083",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#issuecomment-915833083",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22762",
    "id": 915833083,
    "node_id": "IC_kwDOABII5842loD7",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-09T07:25:07Z",
    "updated_at": "2021-09-09T07:25:07Z",
    "author_association": "MEMBER",
    "body": "Rebased (only change is in tests)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/915833083/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/915886858",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#issuecomment-915886858",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22762",
    "id": 915886858,
    "node_id": "IC_kwDOABII5842l1MK",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-09T08:44:33Z",
    "updated_at": "2021-09-09T08:44:33Z",
    "author_association": "MEMBER",
    "body": "Code review re-ACK fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae per `git range-diff eb1f570 fa59c6d fa55c3` and verified the new tests fail on master, except \"Check mocked addrman is valid\", as expected",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/915886858/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916057388",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#issuecomment-916057388",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22762",
    "id": 916057388,
    "node_id": "IC_kwDOABII5842me0s",
    "user": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?u=03240c7cca7b55e5b9239eeab7a5914663a42b91&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-09T12:44:00Z",
    "updated_at": "2021-09-09T12:44:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "tACK https://github.com/bitcoin/bitcoin/commit/fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae\r\n\r\nnit: Will be better if error message was printed only once https://github.com/bitcoin/bitcoin/pull/22762#issuecomment-914552140",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916057388/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916061849",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#issuecomment-916061849",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22762",
    "id": 916061849,
    "node_id": "IC_kwDOABII5842mf6Z",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-09T12:50:19Z",
    "updated_at": "2021-09-09T12:50:19Z",
    "author_association": "MEMBER",
    "body": "> nit: Will be better if error message was printed only once #22762 (comment)\r\n\r\nInitErrors are printed to the debug log and stderr. I think it makes sense to print them to both instead of only one.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916061849/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/951063826",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#issuecomment-951063826",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22762",
    "id": 951063826,
    "node_id": "IC_kwDOABII5844sBUS",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-25T15:50:41Z",
    "updated_at": "2021-10-25T15:50:41Z",
    "author_association": "MEMBER",
    "body": "I'm not sure it's entirely desirable to require user intervention when downgrading. When there is actual corruption, this may make sense as it's a sign of a deeper problem, but wiping peers.dat when downgrading to an incompatible version seems entirely expected to me.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/951063826/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694778282",
    "pull_request_review_id": 737131806,
    "id": 694778282,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NDc3ODI4Mg==",
    "diff_hunk": "@@ -227,24 +226,39 @@ bool CBanDB::Read(banmap_t& banSet)\n     return true;\n }\n \n-CAddrDB::CAddrDB()\n-{\n-    pathAddr = gArgs.GetDataDirNet() / \"peers.dat\";\n-}\n-\n-bool CAddrDB::Write(const CAddrMan& addr)\n+bool DumpPeerAddresses(const ArgsManager& args, const CAddrMan& addr)\n {\n+    const auto pathAddr = args.GetDataDirNet() / \"peers.dat\";\n     return SerializeFileDB(\"peers\", pathAddr, addr, CLIENT_VERSION);\n }\n \n-bool CAddrDB::Read(CAddrMan& addr)\n+void ReadFromStream(CAddrMan& addr, CDataStream& ssPeers)\n {\n-    return DeserializeFileDB(pathAddr, addr, CLIENT_VERSION);\n+    DeserializeDB(ssPeers, addr, false);\n }\n \n-bool CAddrDB::Read(CAddrMan& addr, CDataStream& ssPeers)\n+std::optional<bilingual_str> LoadAddrman(const ArgsManager& args, std::unique_ptr<CAddrMan>& addrman)",
    "path": "src/addrdb.cpp",
    "position": null,
    "original_position": 114,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "fa50c25b1a761c6f98ae299bbf10cf79faf362e3",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I would expect `LoadAddrman()` to return, eh... addrman, no? Like `Foo x = LoadFoo();`. Consider this (or ignore it):\r\n\r\n```cpp\r\nstd::unique_ptr<CAddrMan> LoadAddrman(const ArgsManager& args, bilingual_str& error);\r\n\r\nbilingual_str error;\r\nnode.addrman = LoadAddrman(args, error);\r\nif (!node.addrman) {\r\n    return InitError(error);\r\n}\r\n```",
    "created_at": "2021-08-24T11:53:16Z",
    "updated_at": "2021-08-24T15:05:40Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r694778282",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694778282"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r694778282"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694778282/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 184,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694783657",
    "pull_request_review_id": 737131806,
    "id": 694783657,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NDc4MzY1Nw==",
    "diff_hunk": "@@ -227,24 +226,39 @@ bool CBanDB::Read(banmap_t& banSet)\n     return true;\n }\n \n-CAddrDB::CAddrDB()\n-{\n-    pathAddr = gArgs.GetDataDirNet() / \"peers.dat\";\n-}\n-\n-bool CAddrDB::Write(const CAddrMan& addr)\n+bool DumpPeerAddresses(const ArgsManager& args, const CAddrMan& addr)\n {\n+    const auto pathAddr = args.GetDataDirNet() / \"peers.dat\";\n     return SerializeFileDB(\"peers\", pathAddr, addr, CLIENT_VERSION);\n }\n \n-bool CAddrDB::Read(CAddrMan& addr)\n+void ReadFromStream(CAddrMan& addr, CDataStream& ssPeers)\n {\n-    return DeserializeFileDB(pathAddr, addr, CLIENT_VERSION);\n+    DeserializeDB(ssPeers, addr, false);\n }\n \n-bool CAddrDB::Read(CAddrMan& addr, CDataStream& ssPeers)\n+std::optional<bilingual_str> LoadAddrman(const ArgsManager& args, std::unique_ptr<CAddrMan>& addrman)\n {\n-    return DeserializeDB(ssPeers, addr, false);\n+    auto check_addrman = std::clamp<int32_t>(args.GetArg(\"-checkaddrman\", DEFAULT_ADDRMAN_CONSISTENCY_CHECKS), 0, 1000000);\n+    addrman = std::make_unique<CAddrMan>(/* deterministic */ false, /* consistency_check_ratio */ check_addrman);\n+\n+    // Load addresses from peers.dat\n+    int64_t nStart = GetTimeMillis();\n+    const auto path_addr{args.GetDataDirNet() / \"peers.dat\"};\n+    try {\n+        DeserializeFileDB(path_addr, *addrman, CLIENT_VERSION);\n+        LogPrintf(\"Loaded %i addresses from peers.dat  %dms\\n\", addrman->size(), GetTimeMillis() - nStart);\n+    } catch (const DbNotFoundError&) {\n+        // Addrman can be in an inconsistent state after failure, reset it\n+        addrman = std::make_unique<CAddrMan>(/* deterministic */ false, /* consistency_check_ratio */ check_addrman);\n+        LogPrintf(\"Recreating peers.dat because it was not found\\n\");",
    "path": "src/addrdb.cpp",
    "position": null,
    "original_position": 129,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "fa50c25b1a761c6f98ae299bbf10cf79faf362e3",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: there is no _re_-creating if the file is missing:\r\n\r\n```suggestion\r\n        LogPrintf(\"Creating peers.dat because it was not found\\n\");\r\n```\r\n\r\nor just \"Creating peers.dat\" or \"peers.dat not found, creating an empty one\"",
    "created_at": "2021-08-24T12:01:10Z",
    "updated_at": "2021-08-24T15:05:40Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r694783657",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694783657"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r694783657"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694783657/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 254,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694787503",
    "pull_request_review_id": 737131806,
    "id": 694787503,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NDc4NzUwMw==",
    "diff_hunk": "@@ -134,47 +140,40 @@ bool SerializeFileDB(const std::string& prefix, const fs::path& path, const Data\n }\n \n template <typename Stream, typename Data>\n-bool DeserializeDB(Stream& stream, Data& data, bool fCheckSum = true)\n+void DeserializeDB(Stream& stream, Data& data, bool fCheckSum = true)\n {\n-    try {\n-        CHashVerifier<Stream> verifier(&stream);\n-        // de-serialize file header (network specific magic number) and ..\n-        unsigned char pchMsgTmp[4];\n-        verifier >> pchMsgTmp;\n-        // ... verify the network matches ours\n-        if (memcmp(pchMsgTmp, Params().MessageStart(), sizeof(pchMsgTmp)))\n-            return error(\"%s: Invalid network magic number\", __func__);\n-\n-        // de-serialize data\n-        verifier >> data;\n-\n-        // verify checksum\n-        if (fCheckSum) {\n-            uint256 hashTmp;\n-            stream >> hashTmp;\n-            if (hashTmp != verifier.GetHash()) {\n-                return error(\"%s: Checksum mismatch, data corrupted\", __func__);\n-            }\n-        }\n-    }\n-    catch (const std::exception& e) {\n-        return error(\"%s: Deserialize or I/O error - %s\", __func__, e.what());\n+    CHashVerifier<Stream> verifier(&stream);\n+    // de-serialize file header (network specific magic number) and ..\n+    unsigned char pchMsgTmp[4];\n+    verifier >> pchMsgTmp;\n+    // ... verify the network matches ours\n+    if (memcmp(pchMsgTmp, Params().MessageStart(), sizeof(pchMsgTmp))) {\n+        throw std::runtime_error{\"Invalid network magic number\"};\n     }\n \n-    return true;\n+    // de-serialize data\n+    verifier >> data;\n+\n+    // verify checksum\n+    if (fCheckSum) {\n+        uint256 hashTmp;\n+        stream >> hashTmp;\n+        if (hashTmp != verifier.GetHash()) {\n+            throw std::runtime_error{\"Checksum mismatch, data corrupted\"};\n+        }\n+    }\n }\n \n template <typename Data>\n-bool DeserializeFileDB(const fs::path& path, Data& data, int version)\n+void DeserializeFileDB(const fs::path& path, Data& data, int version)\n {\n     // open input file, and associate with CAutoFile\n     FILE* file = fsbridge::fopen(path, \"rb\");\n     CAutoFile filein(file, SER_DISK, version);\n     if (filein.IsNull()) {\n-        LogPrintf(\"Missing or invalid file %s\\n\", path.string());\n-        return false;\n+        throw DbNotFoundError{\"\"};",
    "path": "src/addrdb.cpp",
    "position": null,
    "original_position": 83,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "fa50c25b1a761c6f98ae299bbf10cf79faf362e3",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The string argument is excessive. Maybe inherit `DbNotFoundError` from `std::exception` and use `throw DbNotFoundError;`? Or, I guess, the proper C++ way to do that is:\r\n\r\n```cpp\r\ntry {\r\n    throw std::system_error(std::make_error_code(std::errc::no_such_file_or_directory));\r\n} catch (const std::exception& e) {\r\n    auto se = dynamic_cast<const std::system_error*>(&e);\r\n    if (se != nullptr && se->code() == std::errc::no_such_file_or_directory) {\r\n        std::cout << \"no peers.dat\" << std::endl;\r\n    } else {\r\n        std::cout << e.what() << std::endl;\r\n    }\r\n}\r\n```\r\n",
    "created_at": "2021-08-24T12:07:13Z",
    "updated_at": "2021-08-24T15:05:40Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r694787503",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694787503"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r694787503"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/694787503/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 174,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/696430107",
    "pull_request_review_id": 739211774,
    "id": 696430107,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NjQzMDEwNw==",
    "diff_hunk": "@@ -227,24 +226,39 @@ bool CBanDB::Read(banmap_t& banSet)\n     return true;\n }\n \n-CAddrDB::CAddrDB()\n-{\n-    pathAddr = gArgs.GetDataDirNet() / \"peers.dat\";\n-}\n-\n-bool CAddrDB::Write(const CAddrMan& addr)\n+bool DumpPeerAddresses(const ArgsManager& args, const CAddrMan& addr)\n {\n+    const auto pathAddr = args.GetDataDirNet() / \"peers.dat\";\n     return SerializeFileDB(\"peers\", pathAddr, addr, CLIENT_VERSION);\n }\n \n-bool CAddrDB::Read(CAddrMan& addr)\n+void ReadFromStream(CAddrMan& addr, CDataStream& ssPeers)\n {\n-    return DeserializeFileDB(pathAddr, addr, CLIENT_VERSION);\n+    DeserializeDB(ssPeers, addr, false);\n }\n \n-bool CAddrDB::Read(CAddrMan& addr, CDataStream& ssPeers)\n+std::optional<bilingual_str> LoadAddrman(const ArgsManager& args, std::unique_ptr<CAddrMan>& addrman)",
    "path": "src/addrdb.cpp",
    "position": null,
    "original_position": 114,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "fa50c25b1a761c6f98ae299bbf10cf79faf362e3",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This would make the code more verbose. In general I rather standardize error handling how it is done in rust, which the current code is closer to than yours, I think.",
    "created_at": "2021-08-26T08:53:28Z",
    "updated_at": "2021-08-26T09:04:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r696430107",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/696430107"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r696430107"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/696430107/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 184,
    "side": "RIGHT",
    "in_reply_to_id": 694778282
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/696438029",
    "pull_request_review_id": 739211774,
    "id": 696438029,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NjQzODAyOQ==",
    "diff_hunk": "@@ -227,24 +226,39 @@ bool CBanDB::Read(banmap_t& banSet)\n     return true;\n }\n \n-CAddrDB::CAddrDB()\n-{\n-    pathAddr = gArgs.GetDataDirNet() / \"peers.dat\";\n-}\n-\n-bool CAddrDB::Write(const CAddrMan& addr)\n+bool DumpPeerAddresses(const ArgsManager& args, const CAddrMan& addr)\n {\n+    const auto pathAddr = args.GetDataDirNet() / \"peers.dat\";\n     return SerializeFileDB(\"peers\", pathAddr, addr, CLIENT_VERSION);\n }\n \n-bool CAddrDB::Read(CAddrMan& addr)\n+void ReadFromStream(CAddrMan& addr, CDataStream& ssPeers)\n {\n-    return DeserializeFileDB(pathAddr, addr, CLIENT_VERSION);\n+    DeserializeDB(ssPeers, addr, false);\n }\n \n-bool CAddrDB::Read(CAddrMan& addr, CDataStream& ssPeers)\n+std::optional<bilingual_str> LoadAddrman(const ArgsManager& args, std::unique_ptr<CAddrMan>& addrman)\n {\n-    return DeserializeDB(ssPeers, addr, false);\n+    auto check_addrman = std::clamp<int32_t>(args.GetArg(\"-checkaddrman\", DEFAULT_ADDRMAN_CONSISTENCY_CHECKS), 0, 1000000);\n+    addrman = std::make_unique<CAddrMan>(/* deterministic */ false, /* consistency_check_ratio */ check_addrman);\n+\n+    // Load addresses from peers.dat\n+    int64_t nStart = GetTimeMillis();\n+    const auto path_addr{args.GetDataDirNet() / \"peers.dat\"};\n+    try {\n+        DeserializeFileDB(path_addr, *addrman, CLIENT_VERSION);\n+        LogPrintf(\"Loaded %i addresses from peers.dat  %dms\\n\", addrman->size(), GetTimeMillis() - nStart);\n+    } catch (const DbNotFoundError&) {\n+        // Addrman can be in an inconsistent state after failure, reset it\n+        addrman = std::make_unique<CAddrMan>(/* deterministic */ false, /* consistency_check_ratio */ check_addrman);\n+        LogPrintf(\"Recreating peers.dat because it was not found\\n\");",
    "path": "src/addrdb.cpp",
    "position": null,
    "original_position": 129,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "fa50c25b1a761c6f98ae299bbf10cf79faf362e3",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks, fixed",
    "created_at": "2021-08-26T09:03:08Z",
    "updated_at": "2021-08-26T09:04:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r696438029",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/696438029"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r696438029"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/696438029/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 254,
    "side": "RIGHT",
    "in_reply_to_id": 694783657
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/696438462",
    "pull_request_review_id": 739211774,
    "id": 696438462,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NjQzODQ2Mg==",
    "diff_hunk": "@@ -134,47 +140,40 @@ bool SerializeFileDB(const std::string& prefix, const fs::path& path, const Data\n }\n \n template <typename Stream, typename Data>\n-bool DeserializeDB(Stream& stream, Data& data, bool fCheckSum = true)\n+void DeserializeDB(Stream& stream, Data& data, bool fCheckSum = true)\n {\n-    try {\n-        CHashVerifier<Stream> verifier(&stream);\n-        // de-serialize file header (network specific magic number) and ..\n-        unsigned char pchMsgTmp[4];\n-        verifier >> pchMsgTmp;\n-        // ... verify the network matches ours\n-        if (memcmp(pchMsgTmp, Params().MessageStart(), sizeof(pchMsgTmp)))\n-            return error(\"%s: Invalid network magic number\", __func__);\n-\n-        // de-serialize data\n-        verifier >> data;\n-\n-        // verify checksum\n-        if (fCheckSum) {\n-            uint256 hashTmp;\n-            stream >> hashTmp;\n-            if (hashTmp != verifier.GetHash()) {\n-                return error(\"%s: Checksum mismatch, data corrupted\", __func__);\n-            }\n-        }\n-    }\n-    catch (const std::exception& e) {\n-        return error(\"%s: Deserialize or I/O error - %s\", __func__, e.what());\n+    CHashVerifier<Stream> verifier(&stream);\n+    // de-serialize file header (network specific magic number) and ..\n+    unsigned char pchMsgTmp[4];\n+    verifier >> pchMsgTmp;\n+    // ... verify the network matches ours\n+    if (memcmp(pchMsgTmp, Params().MessageStart(), sizeof(pchMsgTmp))) {\n+        throw std::runtime_error{\"Invalid network magic number\"};\n     }\n \n-    return true;\n+    // de-serialize data\n+    verifier >> data;\n+\n+    // verify checksum\n+    if (fCheckSum) {\n+        uint256 hashTmp;\n+        stream >> hashTmp;\n+        if (hashTmp != verifier.GetHash()) {\n+            throw std::runtime_error{\"Checksum mismatch, data corrupted\"};\n+        }\n+    }\n }\n \n template <typename Data>\n-bool DeserializeFileDB(const fs::path& path, Data& data, int version)\n+void DeserializeFileDB(const fs::path& path, Data& data, int version)\n {\n     // open input file, and associate with CAutoFile\n     FILE* file = fsbridge::fopen(path, \"rb\");\n     CAutoFile filein(file, SER_DISK, version);\n     if (filein.IsNull()) {\n-        LogPrintf(\"Missing or invalid file %s\\n\", path.string());\n-        return false;\n+        throw DbNotFoundError{\"\"};",
    "path": "src/addrdb.cpp",
    "position": null,
    "original_position": 83,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "fa50c25b1a761c6f98ae299bbf10cf79faf362e3",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks, removed `\"\"`.",
    "created_at": "2021-08-26T09:03:43Z",
    "updated_at": "2021-08-26T09:04:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r696438462",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/696438462"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r696438462"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/696438462/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 174,
    "side": "RIGHT",
    "in_reply_to_id": 694787503
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697292858",
    "pull_request_review_id": 740322255,
    "id": 697292858,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NzI5Mjg1OA==",
    "diff_hunk": "@@ -134,47 +140,40 @@ bool SerializeFileDB(const std::string& prefix, const fs::path& path, const Data\n }\n \n template <typename Stream, typename Data>\n-bool DeserializeDB(Stream& stream, Data& data, bool fCheckSum = true)\n+void DeserializeDB(Stream& stream, Data& data, bool fCheckSum = true)\n {\n-    try {\n-        CHashVerifier<Stream> verifier(&stream);\n-        // de-serialize file header (network specific magic number) and ..\n-        unsigned char pchMsgTmp[4];\n-        verifier >> pchMsgTmp;\n-        // ... verify the network matches ours\n-        if (memcmp(pchMsgTmp, Params().MessageStart(), sizeof(pchMsgTmp)))\n-            return error(\"%s: Invalid network magic number\", __func__);\n-\n-        // de-serialize data\n-        verifier >> data;\n-\n-        // verify checksum\n-        if (fCheckSum) {\n-            uint256 hashTmp;\n-            stream >> hashTmp;\n-            if (hashTmp != verifier.GetHash()) {\n-                return error(\"%s: Checksum mismatch, data corrupted\", __func__);\n-            }\n-        }\n-    }\n-    catch (const std::exception& e) {\n-        return error(\"%s: Deserialize or I/O error - %s\", __func__, e.what());\n+    CHashVerifier<Stream> verifier(&stream);\n+    // de-serialize file header (network specific magic number) and ..\n+    unsigned char pchMsgTmp[4];\n+    verifier >> pchMsgTmp;\n+    // ... verify the network matches ours\n+    if (memcmp(pchMsgTmp, Params().MessageStart(), sizeof(pchMsgTmp))) {\n+        throw std::runtime_error{\"Invalid network magic number\"};\n     }\n \n-    return true;\n+    // de-serialize data\n+    verifier >> data;\n+\n+    // verify checksum\n+    if (fCheckSum) {\n+        uint256 hashTmp;\n+        stream >> hashTmp;\n+        if (hashTmp != verifier.GetHash()) {\n+            throw std::runtime_error{\"Checksum mismatch, data corrupted\"};\n+        }\n+    }\n }\n \n template <typename Data>\n-bool DeserializeFileDB(const fs::path& path, Data& data, int version)\n+void DeserializeFileDB(const fs::path& path, Data& data, int version)\n {\n     // open input file, and associate with CAutoFile\n     FILE* file = fsbridge::fopen(path, \"rb\");\n     CAutoFile filein(file, SER_DISK, version);\n     if (filein.IsNull()) {\n-        LogPrintf(\"Missing or invalid file %s\\n\", path.string());\n-        return false;\n+        throw DbNotFoundError{};",
    "path": "src/addrdb.cpp",
    "position": 79,
    "original_position": 83,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "fa1704a2f49eaedf5788d82294485f3a8e17a6c8",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: `{}` is not necessary",
    "created_at": "2021-08-27T09:27:17Z",
    "updated_at": "2021-08-27T09:27:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r697292858",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697292858"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r697292858"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697292858/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 118,
    "original_line": 118,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/700352453",
    "pull_request_review_id": 744117175,
    "id": 700352453,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMDM1MjQ1Mw==",
    "diff_hunk": "@@ -134,47 +140,40 @@ bool SerializeFileDB(const std::string& prefix, const fs::path& path, const Data\n }\n \n template <typename Stream, typename Data>\n-bool DeserializeDB(Stream& stream, Data& data, bool fCheckSum = true)\n+void DeserializeDB(Stream& stream, Data& data, bool fCheckSum = true)\n {\n-    try {\n-        CHashVerifier<Stream> verifier(&stream);\n-        // de-serialize file header (network specific magic number) and ..\n-        unsigned char pchMsgTmp[4];\n-        verifier >> pchMsgTmp;\n-        // ... verify the network matches ours\n-        if (memcmp(pchMsgTmp, Params().MessageStart(), sizeof(pchMsgTmp)))\n-            return error(\"%s: Invalid network magic number\", __func__);\n-\n-        // de-serialize data\n-        verifier >> data;\n-\n-        // verify checksum\n-        if (fCheckSum) {\n-            uint256 hashTmp;\n-            stream >> hashTmp;\n-            if (hashTmp != verifier.GetHash()) {\n-                return error(\"%s: Checksum mismatch, data corrupted\", __func__);\n-            }\n-        }\n-    }\n-    catch (const std::exception& e) {\n-        return error(\"%s: Deserialize or I/O error - %s\", __func__, e.what());\n+    CHashVerifier<Stream> verifier(&stream);\n+    // de-serialize file header (network specific magic number) and ..\n+    unsigned char pchMsgTmp[4];\n+    verifier >> pchMsgTmp;\n+    // ... verify the network matches ours\n+    if (memcmp(pchMsgTmp, Params().MessageStart(), sizeof(pchMsgTmp))) {\n+        throw std::runtime_error{\"Invalid network magic number\"};\n     }\n \n-    return true;\n+    // de-serialize data\n+    verifier >> data;\n+\n+    // verify checksum\n+    if (fCheckSum) {\n+        uint256 hashTmp;\n+        stream >> hashTmp;\n+        if (hashTmp != verifier.GetHash()) {\n+            throw std::runtime_error{\"Checksum mismatch, data corrupted\"};\n+        }\n+    }\n }\n \n template <typename Data>\n-bool DeserializeFileDB(const fs::path& path, Data& data, int version)\n+void DeserializeFileDB(const fs::path& path, Data& data, int version)\n {\n     // open input file, and associate with CAutoFile\n     FILE* file = fsbridge::fopen(path, \"rb\");\n     CAutoFile filein(file, SER_DISK, version);\n     if (filein.IsNull()) {\n-        LogPrintf(\"Missing or invalid file %s\\n\", path.string());\n-        return false;\n+        throw DbNotFoundError{};",
    "path": "src/addrdb.cpp",
    "position": 79,
    "original_position": 83,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "fa1704a2f49eaedf5788d82294485f3a8e17a6c8",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Not for me:\r\n\r\n```\r\naddrdb.cpp:174:15: error: 'DbNotFoundError' does not refer to a value\r\n        throw DbNotFoundError;\r\n              ^\r\n",
    "created_at": "2021-09-01T15:58:03Z",
    "updated_at": "2021-09-01T15:58:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r700352453",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/700352453"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r700352453"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/700352453/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 118,
    "original_line": 118,
    "side": "RIGHT",
    "in_reply_to_id": 697292858
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/700768194",
    "pull_request_review_id": 744631829,
    "id": 700768194,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMDc2ODE5NA==",
    "diff_hunk": "@@ -134,47 +140,40 @@ bool SerializeFileDB(const std::string& prefix, const fs::path& path, const Data\n }\n \n template <typename Stream, typename Data>\n-bool DeserializeDB(Stream& stream, Data& data, bool fCheckSum = true)\n+void DeserializeDB(Stream& stream, Data& data, bool fCheckSum = true)\n {\n-    try {\n-        CHashVerifier<Stream> verifier(&stream);\n-        // de-serialize file header (network specific magic number) and ..\n-        unsigned char pchMsgTmp[4];\n-        verifier >> pchMsgTmp;\n-        // ... verify the network matches ours\n-        if (memcmp(pchMsgTmp, Params().MessageStart(), sizeof(pchMsgTmp)))\n-            return error(\"%s: Invalid network magic number\", __func__);\n-\n-        // de-serialize data\n-        verifier >> data;\n-\n-        // verify checksum\n-        if (fCheckSum) {\n-            uint256 hashTmp;\n-            stream >> hashTmp;\n-            if (hashTmp != verifier.GetHash()) {\n-                return error(\"%s: Checksum mismatch, data corrupted\", __func__);\n-            }\n-        }\n-    }\n-    catch (const std::exception& e) {\n-        return error(\"%s: Deserialize or I/O error - %s\", __func__, e.what());\n+    CHashVerifier<Stream> verifier(&stream);\n+    // de-serialize file header (network specific magic number) and ..\n+    unsigned char pchMsgTmp[4];\n+    verifier >> pchMsgTmp;\n+    // ... verify the network matches ours\n+    if (memcmp(pchMsgTmp, Params().MessageStart(), sizeof(pchMsgTmp))) {\n+        throw std::runtime_error{\"Invalid network magic number\"};\n     }\n \n-    return true;\n+    // de-serialize data\n+    verifier >> data;\n+\n+    // verify checksum\n+    if (fCheckSum) {\n+        uint256 hashTmp;\n+        stream >> hashTmp;\n+        if (hashTmp != verifier.GetHash()) {\n+            throw std::runtime_error{\"Checksum mismatch, data corrupted\"};\n+        }\n+    }\n }\n \n template <typename Data>\n-bool DeserializeFileDB(const fs::path& path, Data& data, int version)\n+void DeserializeFileDB(const fs::path& path, Data& data, int version)\n {\n     // open input file, and associate with CAutoFile\n     FILE* file = fsbridge::fopen(path, \"rb\");\n     CAutoFile filein(file, SER_DISK, version);\n     if (filein.IsNull()) {\n-        LogPrintf(\"Missing or invalid file %s\\n\", path.string());\n-        return false;\n+        throw DbNotFoundError{};",
    "path": "src/addrdb.cpp",
    "position": 79,
    "original_position": 83,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "fa1704a2f49eaedf5788d82294485f3a8e17a6c8",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "ah, oh, yes of course, sorry for the noise",
    "created_at": "2021-09-02T05:58:10Z",
    "updated_at": "2021-09-02T05:58:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r700768194",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/700768194"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r700768194"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/700768194/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 118,
    "original_line": 118,
    "side": "RIGHT",
    "in_reply_to_id": 697292858
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703008705",
    "pull_request_review_id": 747357866,
    "id": 703008705,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMzAwODcwNQ==",
    "diff_hunk": "@@ -10,14 +10,14 @@\n #include <config/bitcoin-config.h>\n #include <fs.h>\n #include <hash.h>\n+#include <logging.h>\n #include <netaddress.h>\n #include <protocol.h>\n #include <random.h>\n #include <streams.h>\n #include <sync.h>\n #include <timedata.h>\n #include <tinyformat.h>\n-#include <util/system.h>",
    "path": "src/addrman.h",
    "position": null,
    "original_position": 12,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "faa75278d076874194073a6cb3974f45de051ffc",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "fa9aed72 while fixing the addrman includes may as well do these too: https://github.com/bitcoin/bitcoin/pull/22740#issuecomment-911461646",
    "created_at": "2021-09-06T16:45:28Z",
    "updated_at": "2021-09-06T17:38:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703008705",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703008705"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703008705"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703008705/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 20,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703012605",
    "pull_request_review_id": 747357866,
    "id": 703012605,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMzAxMjYwNQ==",
    "diff_hunk": "@@ -1037,12 +1037,12 @@ BOOST_AUTO_TEST_CASE(caddrdb_read)\n     BOOST_CHECK(addrman1.size() == 3);\n     BOOST_CHECK(exceptionThrown == false);\n \n-    // Test that CAddrDB::Read creates an addrman with the correct number of addrs.\n+    // Test that ReadFromStream creates an addrman with the correct number of addrs.\n     CDataStream ssPeers2 = AddrmanToStream(addrmanUncorrupted);\n \n     CAddrMan addrman2(/* asmap */ std::vector<bool>(), /* deterministic */ false, /* consistency_check_ratio */ 100);\n     BOOST_CHECK(addrman2.size() == 0);\n-    BOOST_CHECK(CAddrDB::Read(addrman2, ssPeers2));\n+    ReadFromStream(addrman2, ssPeers2);",
    "path": "src/test/addrman_tests.cpp",
    "position": 5,
    "original_position": 11,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "faa75278d076874194073a6cb3974f45de051ffc",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "fa63ebb21 `CAddrDB` removed in this commit; update these references \r\n```diff\r\n--- a/src/test/addrman_tests.cpp\r\n+++ b/src/test/addrman_tests.cpp\r\n@@ -1002,7 +1002,7 @@ BOOST_AUTO_TEST_CASE(addrman_evictionworks)\r\n     BOOST_CHECK(addrman.SelectTriedCollision().ToString() == \"[::]:0\");\r\n }\r\n \r\n-BOOST_AUTO_TEST_CASE(caddrdb_read)\r\n+BOOST_AUTO_TEST_CASE(load_addrman)\r\n {\r\n     CAddrManUncorrupted addrmanUncorrupted;\r\n \r\n@@ -1047,7 +1047,7 @@ BOOST_AUTO_TEST_CASE(caddrdb_read)\r\n }\r\n \r\n \r\n-BOOST_AUTO_TEST_CASE(caddrdb_read_corrupted)\r\n+BOOST_AUTO_TEST_CASE(load_corrupted_addrman)\r\n {\r\n     CAddrManCorrupted addrmanCorrupted;\r\n```\r\n",
    "created_at": "2021-09-06T16:57:19Z",
    "updated_at": "2021-09-06T17:38:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703012605",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703012605"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703012605"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703012605/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1046,
    "original_line": 1046,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703021771",
    "pull_request_review_id": 747357866,
    "id": 703021771,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMzAyMTc3MQ==",
    "diff_hunk": "@@ -170,24 +170,39 @@ bool CBanDB::Read(banmap_t& banSet)\n     return true;\n }\n \n-CAddrDB::CAddrDB()\n-{\n-    pathAddr = gArgs.GetDataDirNet() / \"peers.dat\";\n-}\n-\n-bool CAddrDB::Write(const CAddrMan& addr)\n+bool DumpPeerAddresses(const ArgsManager& args, const CAddrMan& addr)\n {\n+    const auto pathAddr = args.GetDataDirNet() / \"peers.dat\";\n     return SerializeFileDB(\"peers\", pathAddr, addr, CLIENT_VERSION);\n }\n \n-bool CAddrDB::Read(CAddrMan& addr)\n+void ReadFromStream(CAddrMan& addr, CDataStream& ssPeers)\n {\n-    return DeserializeFileDB(pathAddr, addr, CLIENT_VERSION);\n+    DeserializeDB(ssPeers, addr, false);\n }\n \n-bool CAddrDB::Read(CAddrMan& addr, CDataStream& ssPeers)\n+std::optional<bilingual_str> LoadAddrman(const std::vector<bool>& asmap, const ArgsManager& args, std::unique_ptr<CAddrMan>& addrman)\n {\n-    return DeserializeDB(ssPeers, addr, false);\n+    auto check_addrman = std::clamp<int32_t>(args.GetArg(\"-checkaddrman\", DEFAULT_ADDRMAN_CONSISTENCY_CHECKS), 0, 1000000);\n+    addrman = std::make_unique<CAddrMan>(asmap, /* deterministic */ false, /* consistency_check_ratio */ check_addrman);\n+\n+    // Load addresses from peers.dat\n+    int64_t nStart = GetTimeMillis();\n+    const auto path_addr{args.GetDataDirNet() / \"peers.dat\"};\n+    try {\n+        DeserializeFileDB(path_addr, *addrman, CLIENT_VERSION);\n+        LogPrintf(\"Loaded %i addresses from peers.dat  %dms\\n\", addrman->size(), GetTimeMillis() - nStart);\n+    } catch (const DbNotFoundError&) {\n+        // Addrman can be in an inconsistent state after failure, reset it\n+        addrman = std::make_unique<CAddrMan>(asmap, /* deterministic */ false, /* consistency_check_ratio */ check_addrman);\n+        LogPrintf(\"Creating peers.dat because it was not found\\n\");\n+        DumpPeerAddresses(args, *addrman);\n+    } catch (const std::exception& e) {\n+        addrman = nullptr;\n+        return strprintf(_(\"Addrman invalid or corrupt (%s). If you believe this is a bug, please report it to %s. As a workaround you can move the database (%s) out of the way (rename, move, or delete) to use a fresh one on the next start.\"),",
    "path": "src/addrdb.cpp",
    "position": null,
    "original_position": 129,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "faa75278d076874194073a6cb3974f45de051ffc",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "faa75278d076874194073a6cb397 suggestions\r\n```suggestion\r\n        return strprintf(_(\"Invalid or corrupt peers.dat (%s). If you believe this is a bug, please report it to %s. As a workaround, you can move the file (%s) out of the way (rename, move, or delete) and bitcoind will create a new one on the next start.\"),\r\n```",
    "created_at": "2021-09-06T17:29:57Z",
    "updated_at": "2021-09-06T17:44:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703021771",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703021771"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703021771"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703021771/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 202,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703023866",
    "pull_request_review_id": 747357866,
    "id": 703023866,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMzAyMzg2Ng==",
    "diff_hunk": "@@ -170,24 +170,39 @@ bool CBanDB::Read(banmap_t& banSet)\n     return true;\n }\n \n-CAddrDB::CAddrDB()\n-{\n-    pathAddr = gArgs.GetDataDirNet() / \"peers.dat\";\n-}\n-\n-bool CAddrDB::Write(const CAddrMan& addr)\n+bool DumpPeerAddresses(const ArgsManager& args, const CAddrMan& addr)\n {\n+    const auto pathAddr = args.GetDataDirNet() / \"peers.dat\";\n     return SerializeFileDB(\"peers\", pathAddr, addr, CLIENT_VERSION);\n }\n \n-bool CAddrDB::Read(CAddrMan& addr)\n+void ReadFromStream(CAddrMan& addr, CDataStream& ssPeers)\n {\n-    return DeserializeFileDB(pathAddr, addr, CLIENT_VERSION);\n+    DeserializeDB(ssPeers, addr, false);\n }\n \n-bool CAddrDB::Read(CAddrMan& addr, CDataStream& ssPeers)\n+std::optional<bilingual_str> LoadAddrman(const std::vector<bool>& asmap, const ArgsManager& args, std::unique_ptr<CAddrMan>& addrman)\n {\n-    return DeserializeDB(ssPeers, addr, false);\n+    auto check_addrman = std::clamp<int32_t>(args.GetArg(\"-checkaddrman\", DEFAULT_ADDRMAN_CONSISTENCY_CHECKS), 0, 1000000);\n+    addrman = std::make_unique<CAddrMan>(asmap, /* deterministic */ false, /* consistency_check_ratio */ check_addrman);\n+\n+    // Load addresses from peers.dat\n+    int64_t nStart = GetTimeMillis();\n+    const auto path_addr{args.GetDataDirNet() / \"peers.dat\"};\n+    try {\n+        DeserializeFileDB(path_addr, *addrman, CLIENT_VERSION);\n+        LogPrintf(\"Loaded %i addresses from peers.dat  %dms\\n\", addrman->size(), GetTimeMillis() - nStart);\n+    } catch (const DbNotFoundError&) {\n+        // Addrman can be in an inconsistent state after failure, reset it\n+        addrman = std::make_unique<CAddrMan>(asmap, /* deterministic */ false, /* consistency_check_ratio */ check_addrman);\n+        LogPrintf(\"Creating peers.dat because it was not found\\n\");",
    "path": "src/addrdb.cpp",
    "position": null,
    "original_position": 125,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "faa75278d076874194073a6cb3974f45de051ffc",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "faa75278d076874194073a6cb3974f45de051ffc Perhaps also log to the user the location where the file was expected to be (as is currently the case).",
    "created_at": "2021-09-06T17:37:30Z",
    "updated_at": "2021-09-06T17:42:31Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703023866",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703023866"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703023866"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703023866/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 198,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703326048",
    "pull_request_review_id": 747732330,
    "id": 703326048,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMzMyNjA0OA==",
    "diff_hunk": "@@ -10,14 +10,14 @@\n #include <config/bitcoin-config.h>\n #include <fs.h>\n #include <hash.h>\n+#include <logging.h>\n #include <netaddress.h>\n #include <protocol.h>\n #include <random.h>\n #include <streams.h>\n #include <sync.h>\n #include <timedata.h>\n #include <tinyformat.h>\n-#include <util/system.h>",
    "path": "src/addrman.h",
    "position": null,
    "original_position": 12,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "faa75278d076874194073a6cb3974f45de051ffc",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks, done",
    "created_at": "2021-09-07T09:06:55Z",
    "updated_at": "2021-09-07T09:06:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703326048",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703326048"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703326048"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703326048/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 20,
    "side": "LEFT",
    "in_reply_to_id": 703008705
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703326206",
    "pull_request_review_id": 747732503,
    "id": 703326206,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMzMyNjIwNg==",
    "diff_hunk": "@@ -1037,12 +1037,12 @@ BOOST_AUTO_TEST_CASE(caddrdb_read)\n     BOOST_CHECK(addrman1.size() == 3);\n     BOOST_CHECK(exceptionThrown == false);\n \n-    // Test that CAddrDB::Read creates an addrman with the correct number of addrs.\n+    // Test that ReadFromStream creates an addrman with the correct number of addrs.\n     CDataStream ssPeers2 = AddrmanToStream(addrmanUncorrupted);\n \n     CAddrMan addrman2(/* asmap */ std::vector<bool>(), /* deterministic */ false, /* consistency_check_ratio */ 100);\n     BOOST_CHECK(addrman2.size() == 0);\n-    BOOST_CHECK(CAddrDB::Read(addrman2, ssPeers2));\n+    ReadFromStream(addrman2, ssPeers2);",
    "path": "src/test/addrman_tests.cpp",
    "position": 5,
    "original_position": 11,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "faa75278d076874194073a6cb3974f45de051ffc",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks, done",
    "created_at": "2021-09-07T09:07:05Z",
    "updated_at": "2021-09-07T09:07:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703326206",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703326206"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703326206"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703326206/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1046,
    "original_line": 1046,
    "side": "RIGHT",
    "in_reply_to_id": 703012605
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703326325",
    "pull_request_review_id": 747732660,
    "id": 703326325,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMzMyNjMyNQ==",
    "diff_hunk": "@@ -170,24 +170,39 @@ bool CBanDB::Read(banmap_t& banSet)\n     return true;\n }\n \n-CAddrDB::CAddrDB()\n-{\n-    pathAddr = gArgs.GetDataDirNet() / \"peers.dat\";\n-}\n-\n-bool CAddrDB::Write(const CAddrMan& addr)\n+bool DumpPeerAddresses(const ArgsManager& args, const CAddrMan& addr)\n {\n+    const auto pathAddr = args.GetDataDirNet() / \"peers.dat\";\n     return SerializeFileDB(\"peers\", pathAddr, addr, CLIENT_VERSION);\n }\n \n-bool CAddrDB::Read(CAddrMan& addr)\n+void ReadFromStream(CAddrMan& addr, CDataStream& ssPeers)\n {\n-    return DeserializeFileDB(pathAddr, addr, CLIENT_VERSION);\n+    DeserializeDB(ssPeers, addr, false);\n }\n \n-bool CAddrDB::Read(CAddrMan& addr, CDataStream& ssPeers)\n+std::optional<bilingual_str> LoadAddrman(const std::vector<bool>& asmap, const ArgsManager& args, std::unique_ptr<CAddrMan>& addrman)\n {\n-    return DeserializeDB(ssPeers, addr, false);\n+    auto check_addrman = std::clamp<int32_t>(args.GetArg(\"-checkaddrman\", DEFAULT_ADDRMAN_CONSISTENCY_CHECKS), 0, 1000000);\n+    addrman = std::make_unique<CAddrMan>(asmap, /* deterministic */ false, /* consistency_check_ratio */ check_addrman);\n+\n+    // Load addresses from peers.dat\n+    int64_t nStart = GetTimeMillis();\n+    const auto path_addr{args.GetDataDirNet() / \"peers.dat\"};\n+    try {\n+        DeserializeFileDB(path_addr, *addrman, CLIENT_VERSION);\n+        LogPrintf(\"Loaded %i addresses from peers.dat  %dms\\n\", addrman->size(), GetTimeMillis() - nStart);\n+    } catch (const DbNotFoundError&) {\n+        // Addrman can be in an inconsistent state after failure, reset it\n+        addrman = std::make_unique<CAddrMan>(asmap, /* deterministic */ false, /* consistency_check_ratio */ check_addrman);\n+        LogPrintf(\"Creating peers.dat because it was not found\\n\");\n+        DumpPeerAddresses(args, *addrman);\n+    } catch (const std::exception& e) {\n+        addrman = nullptr;\n+        return strprintf(_(\"Addrman invalid or corrupt (%s). If you believe this is a bug, please report it to %s. As a workaround you can move the database (%s) out of the way (rename, move, or delete) to use a fresh one on the next start.\"),",
    "path": "src/addrdb.cpp",
    "position": null,
    "original_position": 129,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "faa75278d076874194073a6cb3974f45de051ffc",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks, done",
    "created_at": "2021-09-07T09:07:15Z",
    "updated_at": "2021-09-07T09:07:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703326325",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703326325"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703326325"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703326325/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 202,
    "side": "RIGHT",
    "in_reply_to_id": 703021771
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703326500",
    "pull_request_review_id": 747732899,
    "id": 703326500,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMzMyNjUwMA==",
    "diff_hunk": "@@ -170,24 +170,39 @@ bool CBanDB::Read(banmap_t& banSet)\n     return true;\n }\n \n-CAddrDB::CAddrDB()\n-{\n-    pathAddr = gArgs.GetDataDirNet() / \"peers.dat\";\n-}\n-\n-bool CAddrDB::Write(const CAddrMan& addr)\n+bool DumpPeerAddresses(const ArgsManager& args, const CAddrMan& addr)\n {\n+    const auto pathAddr = args.GetDataDirNet() / \"peers.dat\";\n     return SerializeFileDB(\"peers\", pathAddr, addr, CLIENT_VERSION);\n }\n \n-bool CAddrDB::Read(CAddrMan& addr)\n+void ReadFromStream(CAddrMan& addr, CDataStream& ssPeers)\n {\n-    return DeserializeFileDB(pathAddr, addr, CLIENT_VERSION);\n+    DeserializeDB(ssPeers, addr, false);\n }\n \n-bool CAddrDB::Read(CAddrMan& addr, CDataStream& ssPeers)\n+std::optional<bilingual_str> LoadAddrman(const std::vector<bool>& asmap, const ArgsManager& args, std::unique_ptr<CAddrMan>& addrman)\n {\n-    return DeserializeDB(ssPeers, addr, false);\n+    auto check_addrman = std::clamp<int32_t>(args.GetArg(\"-checkaddrman\", DEFAULT_ADDRMAN_CONSISTENCY_CHECKS), 0, 1000000);\n+    addrman = std::make_unique<CAddrMan>(asmap, /* deterministic */ false, /* consistency_check_ratio */ check_addrman);\n+\n+    // Load addresses from peers.dat\n+    int64_t nStart = GetTimeMillis();\n+    const auto path_addr{args.GetDataDirNet() / \"peers.dat\"};\n+    try {\n+        DeserializeFileDB(path_addr, *addrman, CLIENT_VERSION);\n+        LogPrintf(\"Loaded %i addresses from peers.dat  %dms\\n\", addrman->size(), GetTimeMillis() - nStart);\n+    } catch (const DbNotFoundError&) {\n+        // Addrman can be in an inconsistent state after failure, reset it\n+        addrman = std::make_unique<CAddrMan>(asmap, /* deterministic */ false, /* consistency_check_ratio */ check_addrman);\n+        LogPrintf(\"Creating peers.dat because it was not found\\n\");",
    "path": "src/addrdb.cpp",
    "position": null,
    "original_position": 125,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "faa75278d076874194073a6cb3974f45de051ffc",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good catch, done",
    "created_at": "2021-09-07T09:07:28Z",
    "updated_at": "2021-09-07T09:07:28Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703326500",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703326500"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703326500"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703326500/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 198,
    "side": "RIGHT",
    "in_reply_to_id": 703023866
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703561784",
    "pull_request_review_id": 748046806,
    "id": 703561784,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMzU2MTc4NA==",
    "diff_hunk": "@@ -52,6 +47,9 @@ class CBanDB\n     bool Read(banmap_t& banSet);\n };\n \n+/** Returns an error string on failure */",
    "path": "src/addrdb.h",
    "position": 25,
    "original_position": 35,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "fa7003f949f21a0ba81388caff1ff986d8b43eed",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "fa035c1 suggestion if you retouch\r\n```suggestion\r\n/** Load addresses from peers.dat into addrman. Returns an error string on failure */\r\n```",
    "created_at": "2021-09-07T14:26:35Z",
    "updated_at": "2021-09-07T15:54:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703561784",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703561784"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703561784"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703561784/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 50,
    "original_line": 50,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703562958",
    "pull_request_review_id": 748046806,
    "id": 703562958,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMzU2Mjk1OA==",
    "diff_hunk": "@@ -1200,20 +1200,9 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n             LogPrintf(\"Using /16 prefix for IP bucketing\\n\");\n         }\n \n-        auto check_addrman = std::clamp<int32_t>(args.GetArg(\"-checkaddrman\", DEFAULT_ADDRMAN_CONSISTENCY_CHECKS), 0, 1000000);\n-        node.addrman = std::make_unique<CAddrMan>(asmap, /* deterministic */ false, /* consistency_check_ratio */ check_addrman);\n-\n-        // Load addresses from peers.dat",
    "path": "src/init.cpp",
    "position": 7,
    "original_position": 7,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "fa7003f949f21a0ba81388caff1ff986d8b43eed",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "fa035c1 perhaps keep this comment",
    "created_at": "2021-09-07T14:27:53Z",
    "updated_at": "2021-09-07T15:54:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703562958",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703562958"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703562958"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703562958/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1206,
    "original_line": 1206,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703641121",
    "pull_request_review_id": 748153651,
    "id": 703641121,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMzY0MTEyMQ==",
    "diff_hunk": "@@ -1200,20 +1200,9 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n             LogPrintf(\"Using /16 prefix for IP bucketing\\n\");\n         }\n \n-        auto check_addrman = std::clamp<int32_t>(args.GetArg(\"-checkaddrman\", DEFAULT_ADDRMAN_CONSISTENCY_CHECKS), 0, 1000000);\n-        node.addrman = std::make_unique<CAddrMan>(asmap, /* deterministic */ false, /* consistency_check_ratio */ check_addrman);\n-\n-        // Load addresses from peers.dat",
    "path": "src/init.cpp",
    "position": 7,
    "original_position": 7,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "fa7003f949f21a0ba81388caff1ff986d8b43eed",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think it is important to document the file name in init.cpp, so I removed it",
    "created_at": "2021-09-07T16:00:15Z",
    "updated_at": "2021-09-07T16:00:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703641121",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703641121"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703641121"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703641121/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1206,
    "original_line": 1206,
    "side": "LEFT",
    "in_reply_to_id": 703562958
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703642840",
    "pull_request_review_id": 748155883,
    "id": 703642840,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMzY0Mjg0MA==",
    "diff_hunk": "@@ -52,6 +47,9 @@ class CBanDB\n     bool Read(banmap_t& banSet);\n };\n \n+/** Returns an error string on failure */",
    "path": "src/addrdb.h",
    "position": 25,
    "original_position": 35,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "fa7003f949f21a0ba81388caff1ff986d8b43eed",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think other modules care much about the exact file name, so I didn't mention it, as it is self-documented in the addrdb implementation file (cpp) already. And the \"Load addresses\" part should already be clear from the function name.",
    "created_at": "2021-09-07T16:02:24Z",
    "updated_at": "2021-09-07T16:02:24Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703642840",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703642840"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703642840"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703642840/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 50,
    "original_line": 50,
    "side": "RIGHT",
    "in_reply_to_id": 703561784
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/705182050",
    "pull_request_review_id": 750137483,
    "id": 705182050,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNTE4MjA1MA==",
    "diff_hunk": "@@ -54,30 +61,29 @@ def run_test(self):\n         self.log.info(\"Check that addrman from future cannot be read\")\n         self.stop_node(0)\n         write_addrman(peers_dat, lowest_compatible=111)\n-        with self.nodes[0].assert_debug_log([\n-                f'ERROR: DeserializeDB: Deserialize or I/O error - Unsupported format of addrman database: 1. It is compatible with formats >=111, but the maximum supported by this version of {self.config[\"environment\"][\"PACKAGE_NAME\"]} is 3.',\n-                \"Recreating peers.dat\",\n-        ]):\n-            self.start_node(0)\n-        assert_equal(self.nodes[0].getnodeaddresses(), [])\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=init_error(\n+                \"Unsupported format of addrman database: 1. It is compatible with \"\n+                \"formats >=111, but the maximum supported by this version of \"\n+                f\"{self.config['environment']['PACKAGE_NAME']} is 3.: (.+)\"",
    "path": "test/functional/feature_addrman.py",
    "position": 35,
    "original_position": 35,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is somewhat confusing or designates a corrupted file, not one from the future. How could the file be format=1 and only be compatible with formats larger than 111? If the above is changed as:\r\n\r\n```diff\r\n-write_addrman(peers_dat, lowest_compatible=111)\r\n+write_addrman(peers_dat, format=115, lowest_compatible=111)\r\n```\r\n\r\nit will be a bit more realistic.\r\n\r\nFeel free to ignore as out of the scope of this PR, given that a similar message is already in `master`.",
    "created_at": "2021-09-09T10:02:57Z",
    "updated_at": "2021-09-09T10:05:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r705182050",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/705182050"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r705182050"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/705182050/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": 66,
    "original_start_line": 66,
    "start_side": "RIGHT",
    "line": 68,
    "original_line": 68,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/705219600",
    "pull_request_review_id": 750187897,
    "id": 705219600,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNTIxOTYwMA==",
    "diff_hunk": "@@ -54,30 +61,29 @@ def run_test(self):\n         self.log.info(\"Check that addrman from future cannot be read\")\n         self.stop_node(0)\n         write_addrman(peers_dat, lowest_compatible=111)\n-        with self.nodes[0].assert_debug_log([\n-                f'ERROR: DeserializeDB: Deserialize or I/O error - Unsupported format of addrman database: 1. It is compatible with formats >=111, but the maximum supported by this version of {self.config[\"environment\"][\"PACKAGE_NAME\"]} is 3.',\n-                \"Recreating peers.dat\",\n-        ]):\n-            self.start_node(0)\n-        assert_equal(self.nodes[0].getnodeaddresses(), [])\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=init_error(\n+                \"Unsupported format of addrman database: 1. It is compatible with \"\n+                \"formats >=111, but the maximum supported by this version of \"\n+                f\"{self.config['environment']['PACKAGE_NAME']} is 3.: (.+)\"",
    "path": "test/functional/feature_addrman.py",
    "position": 35,
    "original_position": 35,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Instead of \"fixing\" the test, I think rejecting formats that are less than lowest_compatible seems like a good sanity check. Though, this would be an unrelated fix in a separate pull:\r\n\r\n```diff\r\ndiff --git a/src/addrman.cpp b/src/addrman.cpp\r\nindex 174b3a654c..bcffe64de3 100644\r\n--- a/src/addrman.cpp\r\n+++ b/src/addrman.cpp\r\n@@ -243,7 +243,7 @@ void CAddrMan::Unserialize(Stream& s_)\r\n     uint8_t compat;\r\n     s >> compat;\r\n     const uint8_t lowest_compatible = compat - INCOMPATIBILITY_BASE;\r\n-    if (lowest_compatible > FILE_FORMAT) {\r\n+    if (format < lowest_compatible || lowest_compatible > FILE_FORMAT) {\r\n         throw std::ios_base::failure(strprintf(\r\n             \"Unsupported format of addrman database: %u. It is compatible with formats >=%u, \"\r\n             \"but the maximum supported by this version of %s is %u.\",\r\n",
    "created_at": "2021-09-09T10:58:59Z",
    "updated_at": "2021-09-09T10:59:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r705219600",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/705219600"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r705219600"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/705219600/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": 66,
    "original_start_line": 66,
    "start_side": "RIGHT",
    "line": 68,
    "original_line": 68,
    "side": "RIGHT",
    "in_reply_to_id": 705182050
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/705236701",
    "pull_request_review_id": 750210838,
    "id": 705236701,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNTIzNjcwMQ==",
    "diff_hunk": "@@ -54,30 +61,29 @@ def run_test(self):\n         self.log.info(\"Check that addrman from future cannot be read\")\n         self.stop_node(0)\n         write_addrman(peers_dat, lowest_compatible=111)\n-        with self.nodes[0].assert_debug_log([\n-                f'ERROR: DeserializeDB: Deserialize or I/O error - Unsupported format of addrman database: 1. It is compatible with formats >=111, but the maximum supported by this version of {self.config[\"environment\"][\"PACKAGE_NAME\"]} is 3.',\n-                \"Recreating peers.dat\",\n-        ]):\n-            self.start_node(0)\n-        assert_equal(self.nodes[0].getnodeaddresses(), [])\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=init_error(\n+                \"Unsupported format of addrman database: 1. It is compatible with \"\n+                \"formats >=111, but the maximum supported by this version of \"\n+                f\"{self.config['environment']['PACKAGE_NAME']} is 3.: (.+)\"",
    "path": "test/functional/feature_addrman.py",
    "position": 35,
    "original_position": 35,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "+1, maybe each condition deserves its own error message.",
    "created_at": "2021-09-09T11:25:25Z",
    "updated_at": "2021-09-09T11:25:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r705236701",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/705236701"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r705236701"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/705236701/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": 66,
    "original_start_line": 66,
    "start_side": "RIGHT",
    "line": 68,
    "original_line": 68,
    "side": "RIGHT",
    "in_reply_to_id": 705182050
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706094821",
    "pull_request_review_id": 751297873,
    "id": 706094821,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjA5NDgyMQ==",
    "diff_hunk": "@@ -176,15 +176,32 @@ bool DumpPeerAddresses(const ArgsManager& args, const CAddrMan& addr)\n     return SerializeFileDB(\"peers\", pathAddr, addr, CLIENT_VERSION);\n }\n \n-bool ReadPeerAddresses(const ArgsManager& args, CAddrMan& addr)\n+void ReadFromStream(CAddrMan& addr, CDataStream& ssPeers)\n {\n-    const auto pathAddr = args.GetDataDirNet() / \"peers.dat\";\n-    return DeserializeFileDB(pathAddr, addr, CLIENT_VERSION);\n+    DeserializeDB(ssPeers, addr, false);\n }\n \n-bool ReadFromStream(CAddrMan& addr, CDataStream& ssPeers)\n+std::optional<bilingual_str> LoadAddrman(const std::vector<bool>& asmap, const ArgsManager& args, std::unique_ptr<CAddrMan>& addrman)\n {\n-    return DeserializeDB(ssPeers, addr, false);\n+    auto check_addrman = std::clamp<int32_t>(args.GetArg(\"-checkaddrman\", DEFAULT_ADDRMAN_CONSISTENCY_CHECKS), 0, 1000000);\n+    addrman = std::make_unique<CAddrMan>(asmap, /* deterministic */ false, /* consistency_check_ratio */ check_addrman);\n+\n+    int64_t nStart = GetTimeMillis();\n+    const auto path_addr{args.GetDataDirNet() / \"peers.dat\"};\n+    try {\n+        DeserializeFileDB(path_addr, *addrman, CLIENT_VERSION);\n+        LogPrintf(\"Loaded %i addresses from peers.dat  %dms\\n\", addrman->size(), GetTimeMillis() - nStart);\n+    } catch (const DbNotFoundError&) {\n+        // Addrman can be in an inconsistent state after failure, reset it",
    "path": "src/addrdb.cpp",
    "position": 111,
    "original_position": 111,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Just to clarify that, strictly, this isn't needed. `DbNotFoundError` means that the file wasn't found, so addrman shouldn't be touched at all.\r\n\r\nDoes anyone have opinions on whether to remove it or not?",
    "created_at": "2021-09-10T11:06:50Z",
    "updated_at": "2021-09-10T11:06:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r706094821",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706094821"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r706094821"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706094821/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 195,
    "original_line": 195,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706108958",
    "pull_request_review_id": 751316153,
    "id": 706108958,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjEwODk1OA==",
    "diff_hunk": "@@ -176,15 +176,32 @@ bool DumpPeerAddresses(const ArgsManager& args, const CAddrMan& addr)\n     return SerializeFileDB(\"peers\", pathAddr, addr, CLIENT_VERSION);\n }\n \n-bool ReadPeerAddresses(const ArgsManager& args, CAddrMan& addr)\n+void ReadFromStream(CAddrMan& addr, CDataStream& ssPeers)\n {\n-    const auto pathAddr = args.GetDataDirNet() / \"peers.dat\";\n-    return DeserializeFileDB(pathAddr, addr, CLIENT_VERSION);\n+    DeserializeDB(ssPeers, addr, false);\n }\n \n-bool ReadFromStream(CAddrMan& addr, CDataStream& ssPeers)\n+std::optional<bilingual_str> LoadAddrman(const std::vector<bool>& asmap, const ArgsManager& args, std::unique_ptr<CAddrMan>& addrman)\n {\n-    return DeserializeDB(ssPeers, addr, false);\n+    auto check_addrman = std::clamp<int32_t>(args.GetArg(\"-checkaddrman\", DEFAULT_ADDRMAN_CONSISTENCY_CHECKS), 0, 1000000);\n+    addrman = std::make_unique<CAddrMan>(asmap, /* deterministic */ false, /* consistency_check_ratio */ check_addrman);\n+\n+    int64_t nStart = GetTimeMillis();\n+    const auto path_addr{args.GetDataDirNet() / \"peers.dat\"};\n+    try {\n+        DeserializeFileDB(path_addr, *addrman, CLIENT_VERSION);\n+        LogPrintf(\"Loaded %i addresses from peers.dat  %dms\\n\", addrman->size(), GetTimeMillis() - nStart);\n+    } catch (const DbNotFoundError&) {\n+        // Addrman can be in an inconsistent state after failure, reset it",
    "path": "src/addrdb.cpp",
    "position": 111,
    "original_position": 111,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "But we need to distinguish somehow this from the other error case, so that we don't signal an error to the caller in this case?",
    "created_at": "2021-09-10T11:34:09Z",
    "updated_at": "2021-09-10T11:34:09Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r706108958",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706108958"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r706108958"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706108958/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 195,
    "original_line": 195,
    "side": "RIGHT",
    "in_reply_to_id": 706094821
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706111057",
    "pull_request_review_id": 751318758,
    "id": 706111057,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjExMTA1Nw==",
    "diff_hunk": "@@ -176,15 +176,32 @@ bool DumpPeerAddresses(const ArgsManager& args, const CAddrMan& addr)\n     return SerializeFileDB(\"peers\", pathAddr, addr, CLIENT_VERSION);\n }\n \n-bool ReadPeerAddresses(const ArgsManager& args, CAddrMan& addr)\n+void ReadFromStream(CAddrMan& addr, CDataStream& ssPeers)\n {\n-    const auto pathAddr = args.GetDataDirNet() / \"peers.dat\";\n-    return DeserializeFileDB(pathAddr, addr, CLIENT_VERSION);\n+    DeserializeDB(ssPeers, addr, false);\n }\n \n-bool ReadFromStream(CAddrMan& addr, CDataStream& ssPeers)\n+std::optional<bilingual_str> LoadAddrman(const std::vector<bool>& asmap, const ArgsManager& args, std::unique_ptr<CAddrMan>& addrman)\n {\n-    return DeserializeDB(ssPeers, addr, false);\n+    auto check_addrman = std::clamp<int32_t>(args.GetArg(\"-checkaddrman\", DEFAULT_ADDRMAN_CONSISTENCY_CHECKS), 0, 1000000);\n+    addrman = std::make_unique<CAddrMan>(asmap, /* deterministic */ false, /* consistency_check_ratio */ check_addrman);\n+\n+    int64_t nStart = GetTimeMillis();\n+    const auto path_addr{args.GetDataDirNet() / \"peers.dat\"};\n+    try {\n+        DeserializeFileDB(path_addr, *addrman, CLIENT_VERSION);\n+        LogPrintf(\"Loaded %i addresses from peers.dat  %dms\\n\", addrman->size(), GetTimeMillis() - nStart);\n+    } catch (const DbNotFoundError&) {\n+        // Addrman can be in an inconsistent state after failure, reset it",
    "path": "src/addrdb.cpp",
    "position": 111,
    "original_position": 111,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I meant recreating the addrman can be skipped, because it wasn't touched. Saves two lines of code:\r\n\r\n```diff\r\ndiff --git a/src/addrdb.cpp b/src/addrdb.cpp\r\nindex 1e73750ce3..a86f4c3789 100644\r\n--- a/src/addrdb.cpp\r\n+++ b/src/addrdb.cpp\r\n@@ -192,8 +192,6 @@ std::optional<bilingual_str> LoadAddrman(const std::vector<bool>& asmap, const A\r\n         DeserializeFileDB(path_addr, *addrman, CLIENT_VERSION);\r\n         LogPrintf(\"Loaded %i addresses from peers.dat  %dms\\n\", addrman->size(), GetTimeMillis() - nStart);\r\n     } catch (const DbNotFoundError&) {\r\n-        // Addrman can be in an inconsistent state after failure, reset it\r\n-        addrman = std::make_unique<CAddrMan>(asmap, /* deterministic */ false, /* consistency_check_ratio */ check_addrman);\r\n         LogPrintf(\"Creating peers.dat because the file was not found (%s)\\n\", path_addr);\r\n         DumpPeerAddresses(args, *addrman);\r\n     } catch (const std::exception& e) {\r\n",
    "created_at": "2021-09-10T11:37:57Z",
    "updated_at": "2021-09-10T11:37:57Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r706111057",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706111057"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r706111057"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706111057/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 195,
    "original_line": 195,
    "side": "RIGHT",
    "in_reply_to_id": 706094821
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706124074",
    "pull_request_review_id": 751335100,
    "id": 706124074,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjEyNDA3NA==",
    "diff_hunk": "@@ -176,15 +176,32 @@ bool DumpPeerAddresses(const ArgsManager& args, const CAddrMan& addr)\n     return SerializeFileDB(\"peers\", pathAddr, addr, CLIENT_VERSION);\n }\n \n-bool ReadPeerAddresses(const ArgsManager& args, CAddrMan& addr)\n+void ReadFromStream(CAddrMan& addr, CDataStream& ssPeers)\n {\n-    const auto pathAddr = args.GetDataDirNet() / \"peers.dat\";\n-    return DeserializeFileDB(pathAddr, addr, CLIENT_VERSION);\n+    DeserializeDB(ssPeers, addr, false);\n }\n \n-bool ReadFromStream(CAddrMan& addr, CDataStream& ssPeers)\n+std::optional<bilingual_str> LoadAddrman(const std::vector<bool>& asmap, const ArgsManager& args, std::unique_ptr<CAddrMan>& addrman)\n {\n-    return DeserializeDB(ssPeers, addr, false);\n+    auto check_addrman = std::clamp<int32_t>(args.GetArg(\"-checkaddrman\", DEFAULT_ADDRMAN_CONSISTENCY_CHECKS), 0, 1000000);\n+    addrman = std::make_unique<CAddrMan>(asmap, /* deterministic */ false, /* consistency_check_ratio */ check_addrman);\n+\n+    int64_t nStart = GetTimeMillis();\n+    const auto path_addr{args.GetDataDirNet() / \"peers.dat\"};\n+    try {\n+        DeserializeFileDB(path_addr, *addrman, CLIENT_VERSION);\n+        LogPrintf(\"Loaded %i addresses from peers.dat  %dms\\n\", addrman->size(), GetTimeMillis() - nStart);\n+    } catch (const DbNotFoundError&) {\n+        // Addrman can be in an inconsistent state after failure, reset it",
    "path": "src/addrdb.cpp",
    "position": 111,
    "original_position": 111,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This would leave the unique_ptr empty and not signal error to the caller. So the caller will continue, possibly dereferencing the empty unique_ptr, leading to undefined behavior?",
    "created_at": "2021-09-10T12:01:21Z",
    "updated_at": "2021-09-10T12:01:21Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r706124074",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706124074"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r706124074"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706124074/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 195,
    "original_line": 195,
    "side": "RIGHT",
    "in_reply_to_id": 706094821
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706135880",
    "pull_request_review_id": 751350494,
    "id": 706135880,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjEzNTg4MA==",
    "diff_hunk": "@@ -176,15 +176,32 @@ bool DumpPeerAddresses(const ArgsManager& args, const CAddrMan& addr)\n     return SerializeFileDB(\"peers\", pathAddr, addr, CLIENT_VERSION);\n }\n \n-bool ReadPeerAddresses(const ArgsManager& args, CAddrMan& addr)\n+void ReadFromStream(CAddrMan& addr, CDataStream& ssPeers)\n {\n-    const auto pathAddr = args.GetDataDirNet() / \"peers.dat\";\n-    return DeserializeFileDB(pathAddr, addr, CLIENT_VERSION);\n+    DeserializeDB(ssPeers, addr, false);\n }\n \n-bool ReadFromStream(CAddrMan& addr, CDataStream& ssPeers)\n+std::optional<bilingual_str> LoadAddrman(const std::vector<bool>& asmap, const ArgsManager& args, std::unique_ptr<CAddrMan>& addrman)\n {\n-    return DeserializeDB(ssPeers, addr, false);\n+    auto check_addrman = std::clamp<int32_t>(args.GetArg(\"-checkaddrman\", DEFAULT_ADDRMAN_CONSISTENCY_CHECKS), 0, 1000000);\n+    addrman = std::make_unique<CAddrMan>(asmap, /* deterministic */ false, /* consistency_check_ratio */ check_addrman);\n+\n+    int64_t nStart = GetTimeMillis();\n+    const auto path_addr{args.GetDataDirNet() / \"peers.dat\"};\n+    try {\n+        DeserializeFileDB(path_addr, *addrman, CLIENT_VERSION);\n+        LogPrintf(\"Loaded %i addresses from peers.dat  %dms\\n\", addrman->size(), GetTimeMillis() - nStart);\n+    } catch (const DbNotFoundError&) {\n+        // Addrman can be in an inconsistent state after failure, reset it",
    "path": "src/addrdb.cpp",
    "position": 111,
    "original_position": 111,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The pointer is initialized in the beginning of the function. Otherwise `DumpPeerAddresses(args, *addrman);` wouldn't work either.",
    "created_at": "2021-09-10T12:21:59Z",
    "updated_at": "2021-09-10T12:21:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r706135880",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706135880"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r706135880"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706135880/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 195,
    "original_line": 195,
    "side": "RIGHT",
    "in_reply_to_id": 706094821
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706162067",
    "pull_request_review_id": 751385186,
    "id": 706162067,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjE2MjA2Nw==",
    "diff_hunk": "@@ -176,15 +176,32 @@ bool DumpPeerAddresses(const ArgsManager& args, const CAddrMan& addr)\n     return SerializeFileDB(\"peers\", pathAddr, addr, CLIENT_VERSION);\n }\n \n-bool ReadPeerAddresses(const ArgsManager& args, CAddrMan& addr)\n+void ReadFromStream(CAddrMan& addr, CDataStream& ssPeers)\n {\n-    const auto pathAddr = args.GetDataDirNet() / \"peers.dat\";\n-    return DeserializeFileDB(pathAddr, addr, CLIENT_VERSION);\n+    DeserializeDB(ssPeers, addr, false);\n }\n \n-bool ReadFromStream(CAddrMan& addr, CDataStream& ssPeers)\n+std::optional<bilingual_str> LoadAddrman(const std::vector<bool>& asmap, const ArgsManager& args, std::unique_ptr<CAddrMan>& addrman)\n {\n-    return DeserializeDB(ssPeers, addr, false);\n+    auto check_addrman = std::clamp<int32_t>(args.GetArg(\"-checkaddrman\", DEFAULT_ADDRMAN_CONSISTENCY_CHECKS), 0, 1000000);\n+    addrman = std::make_unique<CAddrMan>(asmap, /* deterministic */ false, /* consistency_check_ratio */ check_addrman);\n+\n+    int64_t nStart = GetTimeMillis();\n+    const auto path_addr{args.GetDataDirNet() / \"peers.dat\"};\n+    try {\n+        DeserializeFileDB(path_addr, *addrman, CLIENT_VERSION);\n+        LogPrintf(\"Loaded %i addresses from peers.dat  %dms\\n\", addrman->size(), GetTimeMillis() - nStart);\n+    } catch (const DbNotFoundError&) {\n+        // Addrman can be in an inconsistent state after failure, reset it",
    "path": "src/addrdb.cpp",
    "position": 111,
    "original_position": 111,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Removal LGTM. Built with the suggested diff and tested.",
    "created_at": "2021-09-10T13:01:42Z",
    "updated_at": "2021-09-10T13:01:42Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r706162067",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706162067"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r706162067"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706162067/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 195,
    "original_line": 195,
    "side": "RIGHT",
    "in_reply_to_id": 706094821
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706167815",
    "pull_request_review_id": 751392930,
    "id": 706167815,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjE2NzgxNQ==",
    "diff_hunk": "@@ -176,15 +176,32 @@ bool DumpPeerAddresses(const ArgsManager& args, const CAddrMan& addr)\n     return SerializeFileDB(\"peers\", pathAddr, addr, CLIENT_VERSION);\n }\n \n-bool ReadPeerAddresses(const ArgsManager& args, CAddrMan& addr)\n+void ReadFromStream(CAddrMan& addr, CDataStream& ssPeers)\n {\n-    const auto pathAddr = args.GetDataDirNet() / \"peers.dat\";\n-    return DeserializeFileDB(pathAddr, addr, CLIENT_VERSION);\n+    DeserializeDB(ssPeers, addr, false);\n }\n \n-bool ReadFromStream(CAddrMan& addr, CDataStream& ssPeers)\n+std::optional<bilingual_str> LoadAddrman(const std::vector<bool>& asmap, const ArgsManager& args, std::unique_ptr<CAddrMan>& addrman)\n {\n-    return DeserializeDB(ssPeers, addr, false);\n+    auto check_addrman = std::clamp<int32_t>(args.GetArg(\"-checkaddrman\", DEFAULT_ADDRMAN_CONSISTENCY_CHECKS), 0, 1000000);\n+    addrman = std::make_unique<CAddrMan>(asmap, /* deterministic */ false, /* consistency_check_ratio */ check_addrman);\n+\n+    int64_t nStart = GetTimeMillis();\n+    const auto path_addr{args.GetDataDirNet() / \"peers.dat\"};\n+    try {\n+        DeserializeFileDB(path_addr, *addrman, CLIENT_VERSION);\n+        LogPrintf(\"Loaded %i addresses from peers.dat  %dms\\n\", addrman->size(), GetTimeMillis() - nStart);\n+    } catch (const DbNotFoundError&) {\n+        // Addrman can be in an inconsistent state after failure, reset it",
    "path": "src/addrdb.cpp",
    "position": 111,
    "original_position": 111,
    "commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "original_commit_id": "fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> The pointer is initialized in the beginning of the function\r\n\r\nah, well, then it is ok. ACK.",
    "created_at": "2021-09-10T13:09:47Z",
    "updated_at": "2021-09-10T13:09:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r706167815",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706167815"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22762#discussion_r706167815"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22762"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706167815/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 195,
    "original_line": 195,
    "side": "RIGHT",
    "in_reply_to_id": 706094821
  }
]