DrahtBot,2021-08-21 21:56:37,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22937](https://github.com/bitcoin/bitcoin/pull/22937) (refactor: Add fs::PathToString, fs::PathFromString, u8string, u8p",https://github.com/bitcoin/bitcoin/pull/22762#issuecomment-903181009,903181009,
prayank23,2021-08-24 17:18:12,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22762#issuecomment-904829923,904829923,
jonatack,2021-09-03 10:40:17,"Concept ACK.\n\nLike other open pulls to change or fix addrman behavior, it might be good to have functional/regression test coverage in place first.",https://github.com/bitcoin/bitcoin/pull/22762#issuecomment-912441771,912441771,
prayank23,2021-09-07 19:05:49,"Tested on Pop!_OS and everything works as expected and mentioned in PR description.\n\n### Master Branch:\n\n_peers.dat_ is replaced with a new file if it is corrupt or other issues.\n\n\n<details>\n  <summary>Details</summary>\n\n![image](https://user-images.githubusercontent.com/13405205/132393914-755fd969-1874-4abb-8654-bc267e722b76.png)\n\n![image](https://user-images.githubusercon",https://github.com/bitcoin/bitcoin/pull/22762#issuecomment-914552140,914552140,
MarcoFalke,2021-09-09 07:25:07,Rebased (only change is in tests),https://github.com/bitcoin/bitcoin/pull/22762#issuecomment-915833083,915833083,
jonatack,2021-09-09 08:44:33,"Code review re-ACK fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae per `git range-diff eb1f570 fa59c6d fa55c3` and verified the new tests fail on master, except ""Check mocked addrman is valid"", as expected",https://github.com/bitcoin/bitcoin/pull/22762#issuecomment-915886858,915886858,
prayank23,2021-09-09 12:44:00,"tACK https://github.com/bitcoin/bitcoin/commit/fa55c3dc1b4bbdc6a53bd11fa6c0b2ec6bbb64ae\n\nnit: Will be better if error message was printed only once https://github.com/bitcoin/bitcoin/pull/22762#issuecomment-914552140",https://github.com/bitcoin/bitcoin/pull/22762#issuecomment-916057388,916057388,
MarcoFalke,2021-09-09 12:50:19,"> nit: Will be better if error message was printed only once #22762 (comment)\n\nInitErrors are printed to the debug log and stderr. I think it makes sense to print them to both instead of only one.",https://github.com/bitcoin/bitcoin/pull/22762#issuecomment-916061849,916061849,
sipa,2021-10-25 15:50:41,"I'm not sure it's entirely desirable to require user intervention when downgrading. When there is actual corruption, this may make sense as it's a sign of a deeper problem, but wiping peers.dat when downgrading to an incompatible version seems entirely expected to me.",https://github.com/bitcoin/bitcoin/pull/22762#issuecomment-951063826,951063826,
vasild,2021-08-24 11:53:16,"I would expect `LoadAddrman()` to return, eh... addrman, no? Like `Foo x = LoadFoo();`. Consider this (or ignore it):\n\n```cpp\nstd::unique_ptr<CAddrMan> LoadAddrman(const ArgsManager& args, bilingual_str& error);\n\nbilingual_str error;\nnode.addrman = LoadAddrman(args, error);\nif (!node.addrman) {\n    return InitError(error);\n}\n```",https://github.com/bitcoin/bitcoin/pull/22762#discussion_r694778282,694778282,src/addrdb.cpp
vasild,2021-08-24 12:01:10,"nit: there is no _re_-creating if the file is missing:\n\n```suggestion\n        LogPrintf(""Creating peers.dat because it was not found\n"");\n```\n\nor just ""Creating peers.dat"" or ""peers.dat not found, creating an empty one""",https://github.com/bitcoin/bitcoin/pull/22762#discussion_r694783657,694783657,src/addrdb.cpp
vasild,2021-08-24 12:07:13,"The string argument is excessive. Maybe inherit `DbNotFoundError` from `std::exception` and use `throw DbNotFoundError;`? Or, I guess, the proper C++ way to do that is:\n\n```cpp\ntry {\n    throw std::system_error(std::make_error_code(std::errc::no_such_file_or_directory));\n} catch (const std::exception& e) {\n    auto se = dynamic_cast<const std::system_error*>(&e);\n    if (se != nullpt",https://github.com/bitcoin/bitcoin/pull/22762#discussion_r694787503,694787503,src/addrdb.cpp
MarcoFalke,2021-08-26 08:53:28,"This would make the code more verbose. In general I rather standardize error handling how it is done in rust, which the current code is closer to than yours, I think.",https://github.com/bitcoin/bitcoin/pull/22762#discussion_r696430107,696430107,src/addrdb.cpp
MarcoFalke,2021-08-26 09:03:08,"Thanks, fixed",https://github.com/bitcoin/bitcoin/pull/22762#discussion_r696438029,696438029,src/addrdb.cpp
MarcoFalke,2021-08-26 09:03:43,"Thanks, removed `""""`.",https://github.com/bitcoin/bitcoin/pull/22762#discussion_r696438462,696438462,src/addrdb.cpp
vasild,2021-08-27 09:27:17,nit: `{}` is not necessary,https://github.com/bitcoin/bitcoin/pull/22762#discussion_r697292858,697292858,src/addrdb.cpp
MarcoFalke,2021-09-01 15:58:03,"Not for me:\n\n```\naddrdb.cpp:174:15: error: 'DbNotFoundError' does not refer to a value\n        throw DbNotFoundError;\n              ^\n",https://github.com/bitcoin/bitcoin/pull/22762#discussion_r700352453,700352453,src/addrdb.cpp
vasild,2021-09-02 05:58:10,"ah, oh, yes of course, sorry for the noise",https://github.com/bitcoin/bitcoin/pull/22762#discussion_r700768194,700768194,src/addrdb.cpp
jonatack,2021-09-06 16:45:28,fa9aed72 while fixing the addrman includes may as well do these too: https://github.com/bitcoin/bitcoin/pull/22740#issuecomment-911461646,https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703008705,703008705,src/addrman.h
jonatack,2021-09-06 16:57:19,"fa63ebb21 `CAddrDB` removed in this commit; update these references \n```diff\n--- a/src/test/addrman_tests.cpp\n+++ b/src/test/addrman_tests.cpp\n@@ -1002,7 +1002,7 @@ BOOST_AUTO_TEST_CASE(addrman_evictionworks)\n     BOOST_CHECK(addrman.SelectTriedCollision().ToString() == ""[::]:0"");\n }\n \n-BOOST_AUTO_TEST_CASE(caddrdb_read)\n+BOOST_AUTO_TEST_CASE(load_addrman)\n {\n     CAddrManUnc",https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703012605,703012605,src/test/addrman_tests.cpp
jonatack,2021-09-06 17:29:57,"faa75278d076874194073a6cb397 suggestions\n```suggestion\n        return strprintf(_(""Invalid or corrupt peers.dat (%s). If you believe this is a bug, please report it to %s. As a workaround, you can move the file (%s) out of the way (rename, move, or delete) and bitcoind will create a new one on the next start.""),\n```",https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703021771,703021771,src/addrdb.cpp
jonatack,2021-09-06 17:37:30,faa75278d076874194073a6cb3974f45de051ffc Perhaps also log to the user the location where the file was expected to be (as is currently the case).,https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703023866,703023866,src/addrdb.cpp
MarcoFalke,2021-09-07 09:06:55,"Thanks, done",https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703326048,703326048,src/addrman.h
MarcoFalke,2021-09-07 09:07:05,"Thanks, done",https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703326206,703326206,src/test/addrman_tests.cpp
MarcoFalke,2021-09-07 09:07:15,"Thanks, done",https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703326325,703326325,src/addrdb.cpp
MarcoFalke,2021-09-07 09:07:28,"Good catch, done",https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703326500,703326500,src/addrdb.cpp
jonatack,2021-09-07 14:26:35,"fa035c1 suggestion if you retouch\n```suggestion\n/** Load addresses from peers.dat into addrman. Returns an error string on failure */\n```",https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703561784,703561784,src/addrdb.h
jonatack,2021-09-07 14:27:53,fa035c1 perhaps keep this comment,https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703562958,703562958,src/init.cpp
MarcoFalke,2021-09-07 16:00:15,"I don't think it is important to document the file name in init.cpp, so I removed it",https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703641121,703641121,src/init.cpp
MarcoFalke,2021-09-07 16:02:24,"I don't think other modules care much about the exact file name, so I didn't mention it, as it is self-documented in the addrdb implementation file (cpp) already. And the ""Load addresses"" part should already be clear from the function name.",https://github.com/bitcoin/bitcoin/pull/22762#discussion_r703642840,703642840,src/addrdb.h
vasild,2021-09-09 10:02:57,"This is somewhat confusing or designates a corrupted file, not one from the future. How could the file be format=1 and only be compatible with formats larger than 111? If the above is changed as:\n\n```diff\n-write_addrman(peers_dat, lowest_compatible=111)\n+write_addrman(peers_dat, format=115, lowest_compatible=111)\n```\n\nit will be a bit more realistic.\n\nFeel free to ignore as out o",https://github.com/bitcoin/bitcoin/pull/22762#discussion_r705182050,705182050,test/functional/feature_addrman.py
MarcoFalke,2021-09-09 10:58:59,"Instead of ""fixing"" the test, I think rejecting formats that are less than lowest_compatible seems like a good sanity check. Though, this would be an unrelated fix in a separate pull:\n\n```diff\ndiff --git a/src/addrman.cpp b/src/addrman.cpp\nindex 174b3a654c..bcffe64de3 100644\n--- a/src/addrman.cpp\n+++ b/src/addrman.cpp\n@@ -243,7 +243,7 @@ void CAddrMan::Unserialize(Stream& s_)\n     ",https://github.com/bitcoin/bitcoin/pull/22762#discussion_r705219600,705219600,test/functional/feature_addrman.py
vasild,2021-09-09 11:25:25,"+1, maybe each condition deserves its own error message.",https://github.com/bitcoin/bitcoin/pull/22762#discussion_r705236701,705236701,test/functional/feature_addrman.py
MarcoFalke,2021-09-10 11:06:50,"Just to clarify that, strictly, this isn't needed. `DbNotFoundError` means that the file wasn't found, so addrman shouldn't be touched at all.\n\nDoes anyone have opinions on whether to remove it or not?",https://github.com/bitcoin/bitcoin/pull/22762#discussion_r706094821,706094821,src/addrdb.cpp
vasild,2021-09-10 11:34:09,"But we need to distinguish somehow this from the other error case, so that we don't signal an error to the caller in this case?",https://github.com/bitcoin/bitcoin/pull/22762#discussion_r706108958,706108958,src/addrdb.cpp
MarcoFalke,2021-09-10 11:37:57,"I meant recreating the addrman can be skipped, because it wasn't touched. Saves two lines of code:\n\n```diff\ndiff --git a/src/addrdb.cpp b/src/addrdb.cpp\nindex 1e73750ce3..a86f4c3789 100644\n--- a/src/addrdb.cpp\n+++ b/src/addrdb.cpp\n@@ -192,8 +192,6 @@ std::optional<bilingual_str> LoadAddrman(const std::vector<bool>& asmap, const A\n         DeserializeFileDB(path_addr, *addrman, CLIE",https://github.com/bitcoin/bitcoin/pull/22762#discussion_r706111057,706111057,src/addrdb.cpp
vasild,2021-09-10 12:01:21,"This would leave the unique_ptr empty and not signal error to the caller. So the caller will continue, possibly dereferencing the empty unique_ptr, leading to undefined behavior?",https://github.com/bitcoin/bitcoin/pull/22762#discussion_r706124074,706124074,src/addrdb.cpp
MarcoFalke,2021-09-10 12:21:59,"The pointer is initialized in the beginning of the function. Otherwise `DumpPeerAddresses(args, *addrman);` wouldn't work either.",https://github.com/bitcoin/bitcoin/pull/22762#discussion_r706135880,706135880,src/addrdb.cpp
jonatack,2021-09-10 13:01:42,Removal LGTM. Built with the suggested diff and tested.,https://github.com/bitcoin/bitcoin/pull/22762#discussion_r706162067,706162067,src/addrdb.cpp
vasild,2021-09-10 13:09:47,"> The pointer is initialized in the beginning of the function\n\nah, well, then it is ok. ACK.",https://github.com/bitcoin/bitcoin/pull/22762#discussion_r706167815,706167815,src/addrdb.cpp
