mjdietzx,2021-05-26 14:45:58,"Thanks for the thorough review and suggestions @Sjors ! I've addressed all your feedback in my latest push.\n\n> This documentation and example also help illustrate where things could be made easier, e.g.:\n> \n> * having a wallet with just a seed, but no descriptors, and a way to ask it for an xpub\n\nI see the benefit of this - I found it tricky to extract a wallet's xpubs in bitcoin core ",https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-848831321,848831321,
Sjors,2021-05-26 15:11:15,"Eventually it would be nice if step (1) and (2) are trivial to do with RPC or standalone tools. And then hopefully also easy to add GUI support for them. E.g. a screen where you can share your xpub, copy-paste xpubs from your co-signers, set the threshold, etc. Standardisation is another issue.",https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-848853056,848853056,
mjdietzx,2021-05-26 16:37:56,"Any thoughts about me adding some caution/disclaimer text in the docs about the interoperability of this mulitsig with (external) common hardware wallets? Based on my testing so far it isn't as straightforward as just getting an xpub from your HW device and using that as a signer in the multisig. For example, ColdCard has some restrictions/checks (and a proprietary configuration text file for mult",https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-848929887,848929887,
Sjors,2021-05-26 17:44:46,"I think the ColdCard file format for communicating wallet info is essentially the Electrum format.\n\nAfaik with Trezor and Ledger it is a simple matter of getting an xpub (e.g. using HWI).\n\nIt's probably still most practical to use something Specter Desktop to configure multisig wallets. Once setup, spending can be done with just Bitcoin Core afaik.\n\nNote that for signing each device sh",https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-848987712,848987712,
mjdietzx,2021-05-26 18:10:38,"Thanks for the explanation and links, very helpful. I'll look into all of this more.\n\n> But you really should verify an address before receiving coins on it, not when you spend from it.\n\nI guess this last sentence is where I get caught up. By the time I try to sign a PSBT (as a multisig co-signer):\n\n  1. The watch-only multisig has funds I am trying to spend\n  2. I really care about ",https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-849007655,849007655,
Sjors,2021-05-26 18:14:07,"@mjdietzx one thing to worry about is an attacker modifying the change address to a 2-of-3, with two of his keys, and hold you ransom.",https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-849009869,849009869,
mjdietzx,2021-05-26 18:18:50,"> one thing to worry about is an attacker modifying the change address to a 2-of-3, with two of his keys, and hold you ransom.\n\nIsn't that checked against here, where every participant checks the PSBT w/ `decodepsbt` with their watch-only multisig before signing (step 6 in the docs this PR adds)? https://github.com/bitcoin/bitcoin/pull/22067/files#diff-94f52fa5de899f58d07aca5026545378bc3da616d",https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-849012877,849012877,
Sjors,2021-05-26 18:29:58,"Yes, but the reason you can do this check is because you imported the xpubs from other devices. That's what makes the setup tedious.",https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-849020305,849020305,
theStack,2021-06-09 13:44:08,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-857706769,857706769,
Rspigler,2021-06-28 20:21:52,"Thank you for working on this!\n\nI think this is a great first step, but ultimately we will need [BIP 129](https://github.com/bitcoin/bips/blob/master/bip-0129.mediawiki), [BIP 87](https://github.com/bitcoin/bips/blob/master/bip-0087.mediawiki), (possibly) [BIP 88](https://github.com/bitcoin/bips/blob/master/bip-0088.mediawiki), and [PSBT v2](https://github.com/bitcoin/bips/blob/master/bip-0370",https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-870010329,870010329,
mjdietzx,2021-07-14 20:39:54,"@Rspigler Thanks for the review, re point 2:\n> This isn't the proper way to write two descriptors (see here). I think using a descriptor template would be better.\n\nIs this better? https://github.com/bitcoin/bitcoin/pull/22067/files#diff-00ec9f97461f6bb94a37daf8069e5acf832ea4d5a31a8d7d4968c285d2fcac9bR144",https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-880193552,880193552,
mjdietzx,2021-07-14 20:42:07,@laanwj If you have a chance can you give this a quick review?,https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-880194710,880194710,
Rspigler,2021-07-15 01:09:50,"> `wsh(sortedmulti(<M>,XPUB1/**,XPUB2/**,…,XPUBN/**))` `/0/*,/1/*`\n\nYes, that is the proper template!\n\nHowever, now that I think about it again, since this is documenting the setup for Bitcoin Core which doesn't have support for templates yet, the directions should probably write out explicitly the importing of both descriptors separately - which is what users will have to do.  So somethin",https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-880312028,880312028,
mjdietzx,2021-07-15 14:21:40,"Good point @Rspigler I removed the descriptor templates, but fixed as you suggest: https://github.com/bitcoin/bitcoin/pull/22067/commits/911ed484515f324c82e3121c84ce91751fdd4949#diff-00ec9f97461f6bb94a37daf8069e5acf832ea4d5a31a8d7d4968c285d2fcac9bR144",https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-880735977,880735977,
Rspigler,2021-07-15 14:39:27,ACK d1ce7bb4fb1f8cd929e23eae7aa9dd0862e938f2 (doc changes; not yet fully comfortable with my understanding of the tests in Core).,https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-880749922,880749922,
OliverOffing,2021-08-06 13:18:33,ACK d1ce7bb (tests pass),https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-894254721,894254721,
mjdietzx,2021-08-16 05:45:00,"Thanks for the review @lsilva01\n\n> By using importdescriptors, it eliminates the need for descsum_create, so the test will only use node functions without an additional script for the checksum.\n\nGood idea, I just pushed this improvement 👍",https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-899239342,899239342,
achow101,2021-08-16 17:57:57,ACK e05cd0546a155afcd45c43ce730c4abecd40dfed,https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-899705236,899705236,
S3RK,2021-08-26 07:59:01,Started review,https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-906182636,906182636,
josibake,2021-09-01 06:51:34,"Concept ACK\n\nReading through the documentation, it sounds good. Also rebased and ran the new test. Setting aside time later today to try and follow your documentation step by step and will post some feedback (if any)",https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-909970312,909970312,
jonatack,2021-09-02 13:45:19,"Concept ACK, very nice.",https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-911701287,911701287,
michaelfolkson,2021-09-02 15:48:48,Concept ACK. Functional test is nice addition.,https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-911825975,911825975,
mjdietzx,2021-09-03 18:56:59,"@S3RK thank you for the review and great suggestions.\n\nBecause I feel this PR is already pretty far along and has a lot of reviews, I addressed your minor/refactor comments in an additional commit: f9479e4626f6b5126ff8cdab3a7e718c609429ef. I thought this made most sense, but I can squash it into 1f20501efce041d34e63ab9a11359bedf4a82cd5 (and the doc changes into 17dd6573008c8aca9fc0da9419225c85",https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-912744722,912744722,
S3RK,2021-09-16 16:20:45,"@mjdietzx thanks for addressing my nits. \n\nThe rest is just my opinion and I don't know what other contributors think about it.\n\nI understand that you want to keep things simple, but we shouldn't sacrifice safety for it. The key problem is separation of multisig metadata (i.e. descriptor with other xpubs and derivation paths) and the keys. These things are pointless on their own and I'm no",https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-921046020,921046020,
Rspigler,2021-09-21 04:48:59,I think how it is done currently with 2 wallets is better for same reasons as described [here](https://github.com/bitcoin/bitcoin/pull/22822#issuecomment-923618566),https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-923621140,923621140,
S3RK,2021-09-27 06:48:53,@Rspigler that's a good argument. I need to think about it more and will come back with a reply,https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-927580268,927580268,
S3RK,2021-10-07 07:20:54,"Code review ACK 9de0d94. Rspigler's argument convinced me that we should leave the workflow with two wallets. I assume using multisig with external signers is a popular use-case and it's important to keep compatibility.\n\nEdit@laanwj: removed @ from ACK message for merge",https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-937523555,937523555,
laanwj,2021-10-13 13:27:12,"Thanks for adding this example, and the test. I was initially confused by the need to use two wallets but I understand it.\n\nCode and documentation review ACK 9de0d94508828f5fdfaf688ccda5a91d38b32c58\n",https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-942307489,942307489,
hebasto,2021-10-18 19:50:56,"It looks some CI task fail: https://cirrus-ci.com/build/6343453790437376\n\nConflict with #23207?",https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-946111161,946111161,
hebasto,2021-10-18 21:07:51,"> It looks some CI task fail: https://cirrus-ci.com/build/6343453790437376\n> \n> Conflict with #23207?\n\nShould be fixed in #23303.",https://github.com/bitcoin/bitcoin/pull/22067#issuecomment-946166939,946166939,
Sjors,2021-05-26 13:13:00,"I believe you can omit `--descriptors` when this check is present, @achow101?",https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639712155,639712155,test/functional/wallet_multisig_descriptor_psbt.py
Sjors,2021-05-26 13:13:22,Nit: 2021,https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639712512,639712512,test/functional/wallet_multisig_descriptor_psbt.py
Sjors,2021-05-26 13:22:32,"""is to create a new descriptor wallet. Avoid reusing this wallet for any other purpose.""\n\nCould add a hint here on how to extract the xpub. Using `listdescriptors` and maybe pick the one from `pkh`, since you're least likely to accidentally reuse that (legacy addresses).",https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639720462,639720462,doc/descriptors.md
Sjors,2021-05-26 13:23:43,So they have to make a fresh watch-only wallet first.,https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639721497,639721497,doc/descriptors.md
Sjors,2021-05-26 13:24:18,`every participant checks that it gets the same addresses)` maybe move to step 3,https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639721973,639721973,doc/descriptors.md
Sjors,2021-05-26 13:25:01,(much easier in the GUI),https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639722630,639722630,doc/descriptors.md
Sjors,2021-05-26 13:25:32,"(or load psbt in the GUI, which takes care of 7 too)",https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639723123,639723123,doc/descriptors.md
mjdietzx,2021-05-26 14:47:23,"Just for my understanding, what are the practical drawbacks/risks of someone re-using this wallet for other purposes? To me it's not obvious why I shouldn't have a ""signer"" wallet that signs for a few multisigs and also has some of its own funds",https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639800354,639800354,doc/descriptors.md
Sjors,2021-05-26 15:08:51,It's bad for your privacy if (and only if) you share that xpub with co-signers. They'll be able to guess the single-signature wallet derivation and see your transactions. If the M-of-N is just you then it doesn't matter.,https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639821031,639821031,doc/descriptors.md
mjdietzx,2021-05-26 15:11:12,Ah OK got it - thanks!,https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639823159,639823159,doc/descriptors.md
sipa,2021-05-26 15:15:21,"If you have a wallet with just signers, this may not matter, but generally, if you have one wallet with multiple unrelated funds/descriptors imported, its balances will be the sum of all, with no way to separate them out. That may not be what you want.",https://github.com/bitcoin/bitcoin/pull/22067#discussion_r639827069,639827069,doc/descriptors.md
lsilva01,2021-05-30 02:10:12,"This line can be removed, can't it ?",https://github.com/bitcoin/bitcoin/pull/22067#discussion_r642006601,642006601,test/functional/wallet_multisig_descriptor_psbt.py
mjdietzx,2021-06-01 14:51:52,"This line is not strictly necessary. `base58_to_byte` will throw an exception if one of the provided `xpubs` checksum is invalid.\n\nBut at second glance this is confusing how I did it. I may get rid of it, or make it more obvious this is input validation",https://github.com/bitcoin/bitcoin/pull/22067#discussion_r643178119,643178119,test/functional/wallet_multisig_descriptor_psbt.py
mjdietzx,2021-07-14 20:35:04,I made this more clear in the code/comment: https://github.com/bitcoin/bitcoin/pull/22067/files#diff-94f52fa5de899f58d07aca5026545378bc3da616d4927d71435fa0224eda589bR56-R58,https://github.com/bitcoin/bitcoin/pull/22067#discussion_r669934862,669934862,test/functional/wallet_multisig_descriptor_psbt.py
lsilva01,2021-08-12 04:49:42,"nit: By using `getdescriptorinfo`, it eliminates the need for `descsum_create`, so the test will only use node functions without an additional script for the checksum.\n\n`from test_framework.descriptors import descsum_create` can also be removed.\n\n```suggestion\n            multisig = node.get_wallet_rpc(f""{self.name}_{i}"")\n            \n            external_desc = multisig.getdescripto",https://github.com/bitcoin/bitcoin/pull/22067#discussion_r687385260,687385260,test/functional/wallet_multisig_descriptor_psbt.py
S3RK,2021-08-26 06:53:52,nit: I think it'd be clearer if you just inline this function,https://github.com/bitcoin/bitcoin/pull/22067#discussion_r696342578,696342578,test/functional/wallet_multisig_descriptor_psbt.py
S3RK,2021-08-26 07:11:32,"nit: here and it other places you're repeating the convention like `self.nodes[i].get_wallet_rpc(f""participant_{i}"")` and `self.nodes[i].get_wallet_rpc({self.name}_{i})` to access i-th participant signer and multisig wallet. Not a huge fan of this approach\n\nI suggest creating all wallets in the begging of the test. This will also make it clearer that each party needs two separate wallets and t",https://github.com/bitcoin/bitcoin/pull/22067#discussion_r696353307,696353307,test/functional/wallet_multisig_descriptor_psbt.py
S3RK,2021-08-26 07:37:24,"To avoid address reuse you can also deactivate the descriptor. It won't generate any new addresses, but you will be still able to sign psbt with it.\n\nTo deactivate descriptor you need to re-import with setting `active: false`",https://github.com/bitcoin/bitcoin/pull/22067#discussion_r696371347,696371347,doc/descriptors.md
S3RK,2021-08-26 07:42:21,"Especially here, but in general in steps 5-7, it's not clear which one of two wallets you need to use for which command.\n\nMaybe split step 6 into two and mention in the begging which wallet you need to use.\n\nP.S. not relevant if you have just one wallet",https://github.com/bitcoin/bitcoin/pull/22067#discussion_r696375004,696375004,doc/descriptors.md
S3RK,2021-08-26 07:47:02,nit: should add `_check_psbt` call as well?,https://github.com/bitcoin/bitcoin/pull/22067#discussion_r696378428,696378428,test/functional/wallet_multisig_descriptor_psbt.py
mjdietzx,2021-09-03 14:16:07,I took this suggestion and added the improvement in https://github.com/bitcoin/bitcoin/pull/22067/commits/1f20501efce041d34e63ab9a11359bedf4a82cd5. Marking this resolved,https://github.com/bitcoin/bitcoin/pull/22067#discussion_r701926637,701926637,test/functional/wallet_multisig_descriptor_psbt.py
mjdietzx,2021-09-03 18:50:36,Done in f9479e4626f6b5126ff8cdab3a7e718c609429ef,https://github.com/bitcoin/bitcoin/pull/22067#discussion_r702102887,702102887,test/functional/wallet_multisig_descriptor_psbt.py
mjdietzx,2021-09-03 18:50:43,Done in f9479e4626f6b5126ff8cdab3a7e718c609429ef,https://github.com/bitcoin/bitcoin/pull/22067#discussion_r702102933,702102933,test/functional/wallet_multisig_descriptor_psbt.py
mjdietzx,2021-09-03 18:50:53,Done in f9479e4626f6b5126ff8cdab3a7e718c609429ef,https://github.com/bitcoin/bitcoin/pull/22067#discussion_r702103004,702103004,doc/descriptors.md
mjdietzx,2021-09-03 18:50:59,Done in f9479e4626f6b5126ff8cdab3a7e718c609429ef,https://github.com/bitcoin/bitcoin/pull/22067#discussion_r702103040,702103040,test/functional/wallet_multisig_descriptor_psbt.py
hebasto,2021-11-07 13:27:39,typo: justs ==> just,https://github.com/bitcoin/bitcoin/pull/22067#discussion_r744258501,744258501,test/functional/wallet_multisig_descriptor_psbt.py
