[
  {
    "sha": "6c800fe4f946d883359923f61ca6cbb4cdaf0243",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YzgwMGZlNGY5NDZkODgzMzU5OTIzZjYxY2E2Y2JiNGNkYWYwMjQz",
    "commit": {
      "author": {
        "name": "kiwigb",
        "email": "kiwigb@localhost.localdomain",
        "date": "2014-09-23T08:01:17Z"
      },
      "committer": {
        "name": "kiwigb",
        "email": "kiwigb@localhost.localdomain",
        "date": "2014-10-08T00:35:57Z"
      },
      "message": "Remove pkg.m4 script.",
      "tree": {
        "sha": "32492c9cb39e334c1c1f135118ee413dcdeaabc7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/32492c9cb39e334c1c1f135118ee413dcdeaabc7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6c800fe4f946d883359923f61ca6cbb4cdaf0243",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c800fe4f946d883359923f61ca6cbb4cdaf0243",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6c800fe4f946d883359923f61ca6cbb4cdaf0243",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c800fe4f946d883359923f61ca6cbb4cdaf0243/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "7c6cbff0e52d4b69fd823426341a4d62d29b2c16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c6cbff0e52d4b69fd823426341a4d62d29b2c16",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7c6cbff0e52d4b69fd823426341a4d62d29b2c16"
      }
    ],
    "stats": {
      "total": 221,
      "additions": 0,
      "deletions": 221
    },
    "files": [
      {
        "sha": "ef80dd4040c545d969a16bb0243d72d3f342fcf2",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c800fe4f946d883359923f61ca6cbb4cdaf0243/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c800fe4f946d883359923f61ca6cbb4cdaf0243/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=6c800fe4f946d883359923f61ca6cbb4cdaf0243",
        "patch": "@@ -17,13 +17,6 @@ AH_TOP([#ifndef BITCOIN_CONFIG_H])\n AH_TOP([#define BITCOIN_CONFIG_H])\n AH_BOTTOM([#endif //BITCOIN_CONFIG_H])\n \n-# This m4 will only be used if a system copy cannot be found. This is helpful\n-# on systems where autotools are installed but the pkg-config macros are not in\n-# a default location. It is currently used for building on OSX where autotools\n-# are preinstalled but pkg-config comes from macports or homebrew. It should\n-# probably be removed when building on <= 10.6 is no longer supported.\n-m4_include([pkg.m4])\n-\n dnl faketime breaks configure and is only needed for make. Disable it here.\n unset FAKETIME\n "
      },
      {
        "sha": "c5b26b52e6cdb5891332f7e87addae9306ba7107",
        "filename": "pkg.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 214,
        "changes": 214,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7c6cbff0e52d4b69fd823426341a4d62d29b2c16/pkg.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7c6cbff0e52d4b69fd823426341a4d62d29b2c16/pkg.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/pkg.m4?ref=7c6cbff0e52d4b69fd823426341a4d62d29b2c16",
        "patch": "@@ -1,214 +0,0 @@\n-# pkg.m4 - Macros to locate and utilise pkg-config.            -*- Autoconf -*-\n-# serial 1 (pkg-config-0.24)\n-# \n-# Copyright \u00a9 2004 Scott James Remnant <scott@netsplit.com>.\n-#\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2 of the License, or\n-# (at your option) any later version.\n-#\n-# This program is distributed in the hope that it will be useful, but\n-# WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-# General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n-#\n-# As a special exception to the GNU General Public License, if you\n-# distribute this file as part of a program that contains a\n-# configuration script generated by Autoconf, you may include it under\n-# the same distribution terms that you use for the rest of that program.\n-\n-# PKG_PROG_PKG_CONFIG([MIN-VERSION])\n-# ----------------------------------\n-AC_DEFUN([PKG_PROG_PKG_CONFIG],\n-[m4_pattern_forbid([^_?PKG_[A-Z_]+$])\n-m4_pattern_allow([^PKG_CONFIG(_(PATH|LIBDIR|SYSROOT_DIR|ALLOW_SYSTEM_(CFLAGS|LIBS)))?$])\n-m4_pattern_allow([^PKG_CONFIG_(DISABLE_UNINSTALLED|TOP_BUILD_DIR|DEBUG_SPEW)$])\n-AC_ARG_VAR([PKG_CONFIG], [path to pkg-config utility])\n-AC_ARG_VAR([PKG_CONFIG_PATH], [directories to add to pkg-config's search path])\n-AC_ARG_VAR([PKG_CONFIG_LIBDIR], [path overriding pkg-config's built-in search path])\n-\n-if test \"x$ac_cv_env_PKG_CONFIG_set\" != \"xset\"; then\n-\tAC_PATH_TOOL([PKG_CONFIG], [pkg-config])\n-fi\n-if test -n \"$PKG_CONFIG\"; then\n-\t_pkg_min_version=m4_default([$1], [0.9.0])\n-\tAC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])\n-\tif $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then\n-\t\tAC_MSG_RESULT([yes])\n-\telse\n-\t\tAC_MSG_RESULT([no])\n-\t\tPKG_CONFIG=\"\"\n-\tfi\n-fi[]dnl\n-])# PKG_PROG_PKG_CONFIG\n-\n-# PKG_CHECK_EXISTS(MODULES, [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n-#\n-# Check to see whether a particular set of modules exists.  Similar\n-# to PKG_CHECK_MODULES(), but does not set variables or print errors.\n-#\n-# Please remember that m4 expands AC_REQUIRE([PKG_PROG_PKG_CONFIG])\n-# only at the first occurence in configure.ac, so if the first place\n-# it's called might be skipped (such as if it is within an \"if\", you\n-# have to call PKG_CHECK_EXISTS manually\n-# --------------------------------------------------------------\n-AC_DEFUN([PKG_CHECK_EXISTS],\n-[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\n-if test -n \"$PKG_CONFIG\" && \\\n-    AC_RUN_LOG([$PKG_CONFIG --exists --print-errors \"$1\"]); then\n-  m4_default([$2], [:])\n-m4_ifvaln([$3], [else\n-  $3])dnl\n-fi])\n-\n-# _PKG_CONFIG([VARIABLE], [COMMAND], [MODULES])\n-# ---------------------------------------------\n-m4_define([_PKG_CONFIG],\n-[if test -n \"$$1\"; then\n-    pkg_cv_[]$1=\"$$1\"\n- elif test -n \"$PKG_CONFIG\"; then\n-    PKG_CHECK_EXISTS([$3],\n-                     [pkg_cv_[]$1=`$PKG_CONFIG --[]$2 \"$3\" 2>/dev/null`\n-\t\t      test \"x$?\" != \"x0\" && pkg_failed=yes ],\n-\t\t     [pkg_failed=yes])\n- else\n-    pkg_failed=untried\n-fi[]dnl\n-])# _PKG_CONFIG\n-\n-# _PKG_SHORT_ERRORS_SUPPORTED\n-# -----------------------------\n-AC_DEFUN([_PKG_SHORT_ERRORS_SUPPORTED],\n-[AC_REQUIRE([PKG_PROG_PKG_CONFIG])\n-if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then\n-        _pkg_short_errors_supported=yes\n-else\n-        _pkg_short_errors_supported=no\n-fi[]dnl\n-])# _PKG_SHORT_ERRORS_SUPPORTED\n-\n-\n-# PKG_CHECK_MODULES(VARIABLE-PREFIX, MODULES, [ACTION-IF-FOUND],\n-# [ACTION-IF-NOT-FOUND])\n-#\n-#\n-# Note that if there is a possibility the first call to\n-# PKG_CHECK_MODULES might not happen, you should be sure to include an\n-# explicit call to PKG_PROG_PKG_CONFIG in your configure.ac\n-#\n-#\n-# --------------------------------------------------------------\n-AC_DEFUN([PKG_CHECK_MODULES],\n-[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\n-AC_ARG_VAR([$1][_CFLAGS], [C compiler flags for $1, overriding pkg-config])dnl\n-AC_ARG_VAR([$1][_LIBS], [linker flags for $1, overriding pkg-config])dnl\n-\n-pkg_failed=no\n-AC_MSG_CHECKING([for $1])\n-\n-_PKG_CONFIG([$1][_CFLAGS], [cflags], [$2])\n-_PKG_CONFIG([$1][_LIBS], [libs], [$2])\n-\n-m4_define([_PKG_TEXT], [Alternatively, you may set the environment variables $1[]_CFLAGS\n-and $1[]_LIBS to avoid the need to call pkg-config.\n-See the pkg-config man page for more details.])\n-\n-if test $pkg_failed = yes; then\n-   \tAC_MSG_RESULT([no])\n-        _PKG_SHORT_ERRORS_SUPPORTED\n-        if test $_pkg_short_errors_supported = yes; then\n-\t        $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs \"$2\" 2>&1`\n-        else \n-\t        $1[]_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs \"$2\" 2>&1`\n-        fi\n-\t# Put the nasty error message in config.log where it belongs\n-\techo \"$$1[]_PKG_ERRORS\" >&AS_MESSAGE_LOG_FD\n-\n-\tm4_default([$4], [AC_MSG_ERROR(\n-[Package requirements ($2) were not met:\n-\n-$$1_PKG_ERRORS\n-\n-Consider adjusting the PKG_CONFIG_PATH environment variable if you\n-installed software in a non-standard prefix.\n-\n-_PKG_TEXT])[]dnl\n-        ])\n-elif test $pkg_failed = untried; then\n-     \tAC_MSG_RESULT([no])\n-\tm4_default([$4], [AC_MSG_FAILURE(\n-[The pkg-config script could not be found or is too old.  Make sure it\n-is in your PATH or set the PKG_CONFIG environment variable to the full\n-path to pkg-config.\n-\n-_PKG_TEXT\n-\n-To get pkg-config, see <http://pkg-config.freedesktop.org/>.])[]dnl\n-        ])\n-else\n-\t$1[]_CFLAGS=$pkg_cv_[]$1[]_CFLAGS\n-\t$1[]_LIBS=$pkg_cv_[]$1[]_LIBS\n-        AC_MSG_RESULT([yes])\n-\t$3\n-fi[]dnl\n-])# PKG_CHECK_MODULES\n-\n-\n-# PKG_INSTALLDIR(DIRECTORY)\n-# -------------------------\n-# Substitutes the variable pkgconfigdir as the location where a module\n-# should install pkg-config .pc files. By default the directory is\n-# $libdir/pkgconfig, but the default can be changed by passing\n-# DIRECTORY. The user can override through the --with-pkgconfigdir\n-# parameter.\n-AC_DEFUN([PKG_INSTALLDIR],\n-[m4_pushdef([pkg_default], [m4_default([$1], ['${libdir}/pkgconfig'])])\n-m4_pushdef([pkg_description],\n-    [pkg-config installation directory @<:@]pkg_default[@:>@])\n-AC_ARG_WITH([pkgconfigdir],\n-    [AS_HELP_STRING([--with-pkgconfigdir], pkg_description)],,\n-    [with_pkgconfigdir=]pkg_default)\n-AC_SUBST([pkgconfigdir], [$with_pkgconfigdir])\n-m4_popdef([pkg_default])\n-m4_popdef([pkg_description])\n-]) dnl PKG_INSTALLDIR\n-\n-\n-# PKG_NOARCH_INSTALLDIR(DIRECTORY)\n-# -------------------------\n-# Substitutes the variable noarch_pkgconfigdir as the location where a\n-# module should install arch-independent pkg-config .pc files. By\n-# default the directory is $datadir/pkgconfig, but the default can be\n-# changed by passing DIRECTORY. The user can override through the\n-# --with-noarch-pkgconfigdir parameter.\n-AC_DEFUN([PKG_NOARCH_INSTALLDIR],\n-[m4_pushdef([pkg_default], [m4_default([$1], ['${datadir}/pkgconfig'])])\n-m4_pushdef([pkg_description],\n-    [pkg-config arch-independent installation directory @<:@]pkg_default[@:>@])\n-AC_ARG_WITH([noarch-pkgconfigdir],\n-    [AS_HELP_STRING([--with-noarch-pkgconfigdir], pkg_description)],,\n-    [with_noarch_pkgconfigdir=]pkg_default)\n-AC_SUBST([noarch_pkgconfigdir], [$with_noarch_pkgconfigdir])\n-m4_popdef([pkg_default])\n-m4_popdef([pkg_description])\n-]) dnl PKG_NOARCH_INSTALLDIR\n-\n-\n-# PKG_CHECK_VAR(VARIABLE, MODULE, CONFIG-VARIABLE,\n-# [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n-# -------------------------------------------\n-# Retrieves the value of the pkg-config variable for the given module.\n-AC_DEFUN([PKG_CHECK_VAR],\n-[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\n-AC_ARG_VAR([$1], [value of $3 for $2, overriding pkg-config])dnl\n-\n-_PKG_CONFIG([$1], [variable=\"][$3][\"], [$2])\n-AS_VAR_COPY([$1], [pkg_cv_][$1])\n-\n-AS_VAR_IF([$1], [\"\"], [$5], [$4])dnl\n-])# PKG_CHECK_VAR"
      }
    ]
  }
]