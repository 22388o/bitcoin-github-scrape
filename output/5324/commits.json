[
  {
    "sha": "72fb3d295ab14d7e6b876d709be23bae1289dab2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MmZiM2QyOTVhYjE0ZDdlNmI4NzZkNzA5YmUyM2JhZTEyODlkYWIy",
    "commit": {
      "author": {
        "name": "Michael Ford",
        "email": "fanquake@gmail.com",
        "date": "2014-11-20T02:19:29Z"
      },
      "committer": {
        "name": "Michael Ford",
        "email": "fanquake@gmail.com",
        "date": "2014-11-20T02:19:39Z"
      },
      "message": "Update comments in src/rpc* to be doxygen compatible",
      "tree": {
        "sha": "a29bf4a688ef02c7b7ceb99e89d259d0c237120f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a29bf4a688ef02c7b7ceb99e89d259d0c237120f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/72fb3d295ab14d7e6b876d709be23bae1289dab2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72fb3d295ab14d7e6b876d709be23bae1289dab2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/72fb3d295ab14d7e6b876d709be23bae1289dab2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72fb3d295ab14d7e6b876d709be23bae1289dab2/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b5d1b1092998bc95313856d535c632ea5a8f9104",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5d1b1092998bc95313856d535c632ea5a8f9104",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b5d1b1092998bc95313856d535c632ea5a8f9104"
      }
    ],
    "stats": {
      "total": 163,
      "additions": 83,
      "deletions": 80
    },
    "files": [
      {
        "sha": "7919fb1a0cb49f79e3013491ade7a8b6b350a300",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72fb3d295ab14d7e6b876d709be23bae1289dab2/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72fb3d295ab14d7e6b876d709be23bae1289dab2/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=72fb3d295ab14d7e6b876d709be23bae1289dab2",
        "patch": "@@ -1,6 +1,6 @@\n // Copyright (c) 2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2013 The Bitcoin developers\n-// Distributed under the MIT/X11 software license, see the accompanying\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"checkpoints.h\"\n@@ -468,7 +468,7 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n     return obj;\n }\n \n-/* Comparison function for sorting the getchaintips heads.  */\n+/** Comparison function for sorting the getchaintips heads.  */\n struct CompareBlocksByHeight\n {\n     bool operator()(const CBlockIndex* a, const CBlockIndex* b) const"
      },
      {
        "sha": "03ce9acbbf7bfe64f567201aa8b09403f4b5bcb1",
        "filename": "src/rpcclient.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72fb3d295ab14d7e6b876d709be23bae1289dab2/src/rpcclient.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72fb3d295ab14d7e6b876d709be23bae1289dab2/src/rpcclient.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcclient.cpp?ref=72fb3d295ab14d7e6b876d709be23bae1289dab2",
        "patch": "@@ -1,6 +1,6 @@\n // Copyright (c) 2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2013 The Bitcoin developers\n-// Distributed under the MIT/X11 software license, see the accompanying\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"rpcclient.h\"\n@@ -18,8 +18,8 @@ using namespace json_spirit;\n class CRPCConvertParam\n {\n public:\n-    std::string methodName;            // method whose params want conversion\n-    int paramIdx;                      // 0-based idx of param to convert\n+    std::string methodName;            //! method whose params want conversion\n+    int paramIdx;                      //! 0-based idx of param to convert\n };\n \n static const CRPCConvertParam vRPCConvertParams[] =\n@@ -116,7 +116,7 @@ CRPCConvertTable::CRPCConvertTable()\n \n static CRPCConvertTable rpcCvtTable;\n \n-// Convert strings to command-specific RPC representation\n+/** Convert strings to command-specific RPC representation */\n Array RPCConvertValues(const std::string &strMethod, const std::vector<std::string> &strParams)\n {\n     Array params;"
      },
      {
        "sha": "a91c2eb0332a0e1c0c81cde3183ab9f1cd57bcb8",
        "filename": "src/rpcclient.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72fb3d295ab14d7e6b876d709be23bae1289dab2/src/rpcclient.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72fb3d295ab14d7e6b876d709be23bae1289dab2/src/rpcclient.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcclient.h?ref=72fb3d295ab14d7e6b876d709be23bae1289dab2",
        "patch": "@@ -1,6 +1,6 @@\n // Copyright (c) 2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2013 The Bitcoin developers\n-// Distributed under the MIT/X11 software license, see the accompanying\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #ifndef BITCOIN_RPCCLIENT_H"
      },
      {
        "sha": "c3ffe38cc3eae072dcd75723d96966689a06c609",
        "filename": "src/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72fb3d295ab14d7e6b876d709be23bae1289dab2/src/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72fb3d295ab14d7e6b876d709be23bae1289dab2/src/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcdump.cpp?ref=72fb3d295ab14d7e6b876d709be23bae1289dab2",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2014 The Bitcoin developers\n-// Distributed under the MIT/X11 software license, see the accompanying\n+// Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"base58.h\""
      },
      {
        "sha": "81120ba9819e3390fc69a985db5a607303a9bdd7",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72fb3d295ab14d7e6b876d709be23bae1289dab2/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72fb3d295ab14d7e6b876d709be23bae1289dab2/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=72fb3d295ab14d7e6b876d709be23bae1289dab2",
        "patch": "@@ -1,6 +1,6 @@\n // Copyright (c) 2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2013 The Bitcoin developers\n-// Distributed under the MIT/X11 software license, see the accompanying\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"amount.h\"\n@@ -28,9 +28,11 @@\n using namespace json_spirit;\n using namespace std;\n \n-// Return average network hashes per second based on the last 'lookup' blocks,\n-// or from the last difficulty change if 'lookup' is nonpositive.\n-// If 'height' is nonnegative, compute the estimate at the time when a given block was found.\n+/**\n+ * Return average network hashes per second based on the last 'lookup' blocks,\n+ * or from the last difficulty change if 'lookup' is nonpositive.\n+ * If 'height' is nonnegative, compute the estimate at the time when a given block was found.\n+ */\n Value GetNetworkHashPS(int lookup, int height) {\n     CBlockIndex *pb = chainActive.Tip();\n "
      },
      {
        "sha": "90b9c99caa0ba45c45e98fdf87d237a56acff380",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72fb3d295ab14d7e6b876d709be23bae1289dab2/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72fb3d295ab14d7e6b876d709be23bae1289dab2/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=72fb3d295ab14d7e6b876d709be23bae1289dab2",
        "patch": "@@ -1,6 +1,6 @@\n // Copyright (c) 2010 Satoshi Nakamoto\n // Copyright (c) 2009-2014 The Bitcoin developers\n-// Distributed under the MIT/X11 software license, see the accompanying\n+// Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"base58.h\"\n@@ -30,7 +30,7 @@ using namespace std;\n \n /**\n  * @note Do not add or change anything in the information returned by this\n- * method. `getinfo` exists for backwards-compatibilty only. It combines\n+ * method. `getinfo` exists for backwards-compatibility only. It combines\n  * information from wildly different sources in the program, which is a mess,\n  * and is thus planned to be deprecated eventually.\n  *\n@@ -198,9 +198,9 @@ Value validateaddress(const Array& params, bool fHelp)\n     return ret;\n }\n \n-//\n-// Used by addmultisigaddress / createmultisig:\n-//\n+/**\n+ * Used by addmultisigaddress / createmultisig:\n+ */\n CScript _createmultisig_redeemScript(const Array& params)\n {\n     int nRequired = params[0].get_int();"
      },
      {
        "sha": "6ddbd62fca8a34439d05ba8cee80ecc5382b150f",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72fb3d295ab14d7e6b876d709be23bae1289dab2/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72fb3d295ab14d7e6b876d709be23bae1289dab2/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=72fb3d295ab14d7e6b876d709be23bae1289dab2",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2014 The Bitcoin developers\n-// Distributed under the MIT/X11 software license, see the accompanying\n+// Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"rpcserver.h\""
      },
      {
        "sha": "2f7c491f3d4148aed233e93162a6ece1e53b5686",
        "filename": "src/rpcprotocol.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72fb3d295ab14d7e6b876d709be23bae1289dab2/src/rpcprotocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72fb3d295ab14d7e6b876d709be23bae1289dab2/src/rpcprotocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcprotocol.cpp?ref=72fb3d295ab14d7e6b876d709be23bae1289dab2",
        "patch": "@@ -1,6 +1,6 @@\n // Copyright (c) 2010 Satoshi Nakamoto\n // Copyright (c) 2009-2014 The Bitcoin developers\n-// Distributed under the MIT/X11 software license, see the accompanying\n+// Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"rpcprotocol.h\"\n@@ -30,15 +30,15 @@ using namespace boost;\n using namespace boost::asio;\n using namespace json_spirit;\n \n-// Number of bytes to allocate and read at most at once in post data\n+//! Number of bytes to allocate and read at most at once in post data\n const size_t POST_READ_SIZE = 256 * 1024;\n \n-//\n-// HTTP protocol\n-//\n-// This ain't Apache.  We're just using HTTP header for the length field\n-// and to be compatible with other JSON-RPC implementations.\n-//\n+/**\n+ * HTTP protocol\n+ * \n+ * This ain't Apache.  We're just using HTTP header for the length field\n+ * and to be compatible with other JSON-RPC implementations.\n+ */\n \n string HTTPPost(const string& strMsg, const map<string,string>& mapRequestHeaders)\n {\n@@ -246,15 +246,15 @@ int ReadHTTPMessage(std::basic_istream<char>& stream, map<string,\n     return HTTP_OK;\n }\n \n-//\n-// JSON-RPC protocol.  Bitcoin speaks version 1.0 for maximum compatibility,\n-// but uses JSON-RPC 1.1/2.0 standards for parts of the 1.0 standard that were\n-// unspecified (HTTP errors and contents of 'error').\n-//\n-// 1.0 spec: http://json-rpc.org/wiki/specification\n-// 1.2 spec: http://jsonrpc.org/historical/json-rpc-over-http.html\n-// http://www.codeproject.com/KB/recipes/JSON_Spirit.aspx\n-//\n+/**\n+ * JSON-RPC protocol.  Bitcoin speaks version 1.0 for maximum compatibility,\n+ * but uses JSON-RPC 1.1/2.0 standards for parts of the 1.0 standard that were\n+ * unspecified (HTTP errors and contents of 'error').\n+ * \n+ * 1.0 spec: http://json-rpc.org/wiki/specification\n+ * 1.2 spec: http://jsonrpc.org/historical/json-rpc-over-http.html\n+ * http://www.codeproject.com/KB/recipes/JSON_Spirit.aspx\n+ */\n \n string JSONRPCRequest(const string& strMethod, const Array& params, const Value& id)\n {"
      },
      {
        "sha": "a3213381765736e262a3352633ecafb7d3d19863",
        "filename": "src/rpcprotocol.h",
        "status": "modified",
        "additions": 36,
        "deletions": 36,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72fb3d295ab14d7e6b876d709be23bae1289dab2/src/rpcprotocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72fb3d295ab14d7e6b876d709be23bae1289dab2/src/rpcprotocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcprotocol.h?ref=72fb3d295ab14d7e6b876d709be23bae1289dab2",
        "patch": "@@ -1,6 +1,6 @@\n // Copyright (c) 2010 Satoshi Nakamoto\n // Copyright (c) 2009-2014 The Bitcoin developers\n-// Distributed under the MIT/X11 software license, see the accompanying\n+// Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #ifndef BITCOIN_RPCPROTOCOL_H\n@@ -19,7 +19,7 @@\n #include \"json/json_spirit_utils.h\"\n #include \"json/json_spirit_writer_template.h\"\n \n-// HTTP status codes\n+//! HTTP status codes\n enum HTTPStatusCode\n {\n     HTTP_OK                    = 200,\n@@ -30,56 +30,56 @@ enum HTTPStatusCode\n     HTTP_INTERNAL_SERVER_ERROR = 500,\n };\n \n-// Bitcoin RPC error codes\n+//! Bitcoin RPC error codes\n enum RPCErrorCode\n {\n-    // Standard JSON-RPC 2.0 errors\n+    //! Standard JSON-RPC 2.0 errors\n     RPC_INVALID_REQUEST  = -32600,\n     RPC_METHOD_NOT_FOUND = -32601,\n     RPC_INVALID_PARAMS   = -32602,\n     RPC_INTERNAL_ERROR   = -32603,\n     RPC_PARSE_ERROR      = -32700,\n \n-    // General application defined errors\n-    RPC_MISC_ERROR                  = -1,  // std::exception thrown in command handling\n-    RPC_FORBIDDEN_BY_SAFE_MODE      = -2,  // Server is in safe mode, and command is not allowed in safe mode\n-    RPC_TYPE_ERROR                  = -3,  // Unexpected type was passed as parameter\n-    RPC_INVALID_ADDRESS_OR_KEY      = -5,  // Invalid address or key\n-    RPC_OUT_OF_MEMORY               = -7,  // Ran out of memory during operation\n-    RPC_INVALID_PARAMETER           = -8,  // Invalid, missing or duplicate parameter\n-    RPC_DATABASE_ERROR              = -20, // Database error\n-    RPC_DESERIALIZATION_ERROR       = -22, // Error parsing or validating structure in raw format\n-    RPC_VERIFY_ERROR                = -25, // General error during transaction or block submission\n-    RPC_VERIFY_REJECTED             = -26, // Transaction or block was rejected by network rules\n-    RPC_VERIFY_ALREADY_IN_CHAIN     = -27, // Transaction already in chain\n-    RPC_IN_WARMUP                   = -28, // Client still warming up\n+    //! General application defined errors\n+    RPC_MISC_ERROR                  = -1,  //! std::exception thrown in command handling\n+    RPC_FORBIDDEN_BY_SAFE_MODE      = -2,  //! Server is in safe mode, and command is not allowed in safe mode\n+    RPC_TYPE_ERROR                  = -3,  //! Unexpected type was passed as parameter\n+    RPC_INVALID_ADDRESS_OR_KEY      = -5,  //! Invalid address or key\n+    RPC_OUT_OF_MEMORY               = -7,  //! Ran out of memory during operation\n+    RPC_INVALID_PARAMETER           = -8,  //! Invalid, missing or duplicate parameter\n+    RPC_DATABASE_ERROR              = -20, //! Database error\n+    RPC_DESERIALIZATION_ERROR       = -22, //! Error parsing or validating structure in raw format\n+    RPC_VERIFY_ERROR                = -25, //! General error during transaction or block submission\n+    RPC_VERIFY_REJECTED             = -26, //! Transaction or block was rejected by network rules\n+    RPC_VERIFY_ALREADY_IN_CHAIN     = -27, //! Transaction already in chain\n+    RPC_IN_WARMUP                   = -28, //! Client still warming up\n \n-    // Aliases for backward compatibility\n+    //! Aliases for backward compatibility\n     RPC_TRANSACTION_ERROR           = RPC_VERIFY_ERROR,\n     RPC_TRANSACTION_REJECTED        = RPC_VERIFY_REJECTED,\n     RPC_TRANSACTION_ALREADY_IN_CHAIN= RPC_VERIFY_ALREADY_IN_CHAIN,\n \n-    // P2P client errors\n-    RPC_CLIENT_NOT_CONNECTED        = -9,  // Bitcoin is not connected\n-    RPC_CLIENT_IN_INITIAL_DOWNLOAD  = -10, // Still downloading initial blocks\n-    RPC_CLIENT_NODE_ALREADY_ADDED   = -23, // Node is already added\n-    RPC_CLIENT_NODE_NOT_ADDED       = -24, // Node has not been added before\n+    //! P2P client errors\n+    RPC_CLIENT_NOT_CONNECTED        = -9,  //! Bitcoin is not connected\n+    RPC_CLIENT_IN_INITIAL_DOWNLOAD  = -10, //! Still downloading initial blocks\n+    RPC_CLIENT_NODE_ALREADY_ADDED   = -23, //! Node is already added\n+    RPC_CLIENT_NODE_NOT_ADDED       = -24, //! Node has not been added before\n \n-    // Wallet errors\n-    RPC_WALLET_ERROR                = -4,  // Unspecified problem with wallet (key not found etc.)\n-    RPC_WALLET_INSUFFICIENT_FUNDS   = -6,  // Not enough funds in wallet or account\n-    RPC_WALLET_INVALID_ACCOUNT_NAME = -11, // Invalid account name\n-    RPC_WALLET_KEYPOOL_RAN_OUT      = -12, // Keypool ran out, call keypoolrefill first\n-    RPC_WALLET_UNLOCK_NEEDED        = -13, // Enter the wallet passphrase with walletpassphrase first\n-    RPC_WALLET_PASSPHRASE_INCORRECT = -14, // The wallet passphrase entered was incorrect\n-    RPC_WALLET_WRONG_ENC_STATE      = -15, // Command given in wrong wallet encryption state (encrypting an encrypted wallet etc.)\n-    RPC_WALLET_ENCRYPTION_FAILED    = -16, // Failed to encrypt the wallet\n-    RPC_WALLET_ALREADY_UNLOCKED     = -17, // Wallet is already unlocked\n+    //! Wallet errors\n+    RPC_WALLET_ERROR                = -4,  //! Unspecified problem with wallet (key not found etc.)\n+    RPC_WALLET_INSUFFICIENT_FUNDS   = -6,  //! Not enough funds in wallet or account\n+    RPC_WALLET_INVALID_ACCOUNT_NAME = -11, //! Invalid account name\n+    RPC_WALLET_KEYPOOL_RAN_OUT      = -12, //! Keypool ran out, call keypoolrefill first\n+    RPC_WALLET_UNLOCK_NEEDED        = -13, //! Enter the wallet passphrase with walletpassphrase first\n+    RPC_WALLET_PASSPHRASE_INCORRECT = -14, //! The wallet passphrase entered was incorrect\n+    RPC_WALLET_WRONG_ENC_STATE      = -15, //! Command given in wrong wallet encryption state (encrypting an encrypted wallet etc.)\n+    RPC_WALLET_ENCRYPTION_FAILED    = -16, //! Failed to encrypt the wallet\n+    RPC_WALLET_ALREADY_UNLOCKED     = -17, //! Wallet is already unlocked\n };\n \n-//\n-// IOStream device that speaks SSL but can also speak non-SSL\n-//\n+/**\n+ * IOStream device that speaks SSL but can also speak non-SSL\n+ */\n template <typename Protocol>\n class SSLIOStreamDevice : public boost::iostreams::device<boost::iostreams::bidirectional> {\n public:"
      },
      {
        "sha": "25734f49305d2bc77bb2ba66202fabadd8d0c569",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72fb3d295ab14d7e6b876d709be23bae1289dab2/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72fb3d295ab14d7e6b876d709be23bae1289dab2/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=72fb3d295ab14d7e6b876d709be23bae1289dab2",
        "patch": "@@ -1,6 +1,6 @@\n // Copyright (c) 2010 Satoshi Nakamoto\n // Copyright (c) 2009-2014 The Bitcoin developers\n-// Distributed under the MIT/X11 software license, see the accompanying\n+// Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"base58.h\""
      },
      {
        "sha": "7395fc23c6cccd2a7185717fe3f4c0026d819c24",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72fb3d295ab14d7e6b876d709be23bae1289dab2/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72fb3d295ab14d7e6b876d709be23bae1289dab2/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=72fb3d295ab14d7e6b876d709be23bae1289dab2",
        "patch": "@@ -40,12 +40,13 @@ void StartRPCThreads();\n  * If real RPC threads have already been started this is a no-op.\n  */\n void StartDummyRPCThread();\n-/* Stop RPC threads */\n+/** Stop RPC threads */\n void StopRPCThreads();\n-/* Query whether RPC is running */\n+/** Query whether RPC is running */\n bool IsRPCRunning();\n \n-/* Set the RPC warmup status.  When this is done, all RPC calls will error out\n+/** \n+ * Set the RPC warmup status.  When this is done, all RPC calls will error out\n  * immediately with RPC_IN_WARMUP.\n  */\n void SetRPCWarmupStatus(const std::string& newStatus);"
      },
      {
        "sha": "d2d14ad9f4022af3ecda708baf4abd874d740782",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72fb3d295ab14d7e6b876d709be23bae1289dab2/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72fb3d295ab14d7e6b876d709be23bae1289dab2/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=72fb3d295ab14d7e6b876d709be23bae1289dab2",
        "patch": "@@ -1,6 +1,6 @@\n // Copyright (c) 2010 Satoshi Nakamoto\n // Copyright (c) 2009-2014 The Bitcoin developers\n-// Distributed under the MIT/X11 software license, see the accompanying\n+// Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"amount.h\""
      }
    ]
  }
]