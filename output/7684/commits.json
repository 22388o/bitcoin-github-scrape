[
  {
    "sha": "fa3a81af18347a1d3fed41aa89ee643cbf0e7abc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTNhODFhZjE4MzQ3YTFkM2ZlZDQxYWE4OWVlNjQzY2JmMGU3YWJj",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-01-19T16:47:55Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-03-14T14:49:33Z"
      },
      "message": "[tests] Extend util_ParseMoney test case",
      "tree": {
        "sha": "4c6831ff69556eb7abd83fc6a71db2f3e6d3df77",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4c6831ff69556eb7abd83fc6a71db2f3e6d3df77"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa3a81af18347a1d3fed41aa89ee643cbf0e7abc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa3a81af18347a1d3fed41aa89ee643cbf0e7abc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa3a81af18347a1d3fed41aa89ee643cbf0e7abc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa3a81af18347a1d3fed41aa89ee643cbf0e7abc/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9f33dba05c01ecc5c56eb1284ab7d64d42f55171",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f33dba05c01ecc5c56eb1284ab7d64d42f55171",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9f33dba05c01ecc5c56eb1284ab7d64d42f55171"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b99f952a0dbc41948344d4795c39595e67232d83",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa3a81af18347a1d3fed41aa89ee643cbf0e7abc/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa3a81af18347a1d3fed41aa89ee643cbf0e7abc/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=fa3a81af18347a1d3fed41aa89ee643cbf0e7abc",
        "patch": "@@ -200,6 +200,8 @@ BOOST_AUTO_TEST_CASE(util_ParseMoney)\n     BOOST_CHECK_EQUAL(ret, COIN*10);\n     BOOST_CHECK(ParseMoney(\"1.00\", ret));\n     BOOST_CHECK_EQUAL(ret, COIN);\n+    BOOST_CHECK(ParseMoney(\"1\", ret));\n+    BOOST_CHECK_EQUAL(ret, COIN);\n     BOOST_CHECK(ParseMoney(\"0.1\", ret));\n     BOOST_CHECK_EQUAL(ret, COIN/10);\n     BOOST_CHECK(ParseMoney(\"0.01\", ret));\n@@ -219,6 +221,9 @@ BOOST_AUTO_TEST_CASE(util_ParseMoney)\n \n     // Attempted 63 bit overflow should fail\n     BOOST_CHECK(!ParseMoney(\"92233720368.54775808\", ret));\n+\n+    // Parsing negative amounts must fail\n+    BOOST_CHECK(!ParseMoney(\"-1\", ret));\n }\n \n BOOST_AUTO_TEST_CASE(util_IsHex)"
      }
    ]
  },
  {
    "sha": "fad7dc8a6c0ca9c067a249cf8896dd2e64703e48",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWQ3ZGM4YTZjMGNhOWMwNjdhMjQ5Y2Y4ODk2ZGQyZTY0NzAzZTQ4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-01-16T22:14:49Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-03-14T15:20:59Z"
      },
      "message": "[qa] wallet: speed up tests",
      "tree": {
        "sha": "791009ceefacd686627c82a02da4cfde4296a50c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/791009ceefacd686627c82a02da4cfde4296a50c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fad7dc8a6c0ca9c067a249cf8896dd2e64703e48",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad7dc8a6c0ca9c067a249cf8896dd2e64703e48",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fad7dc8a6c0ca9c067a249cf8896dd2e64703e48",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad7dc8a6c0ca9c067a249cf8896dd2e64703e48/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa3a81af18347a1d3fed41aa89ee643cbf0e7abc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa3a81af18347a1d3fed41aa89ee643cbf0e7abc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa3a81af18347a1d3fed41aa89ee643cbf0e7abc"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 0,
      "deletions": 4
    },
    "files": [
      {
        "sha": "3cd495deb60924a1082dcad8b22484a5f25d4568",
        "filename": "qa/rpc-tests/wallet.py",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad7dc8a6c0ca9c067a249cf8896dd2e64703e48/qa/rpc-tests/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad7dc8a6c0ca9c067a249cf8896dd2e64703e48/qa/rpc-tests/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.py?ref=fad7dc8a6c0ca9c067a249cf8896dd2e64703e48",
        "patch": "@@ -267,10 +267,6 @@ def run_test (self):\n             stop_nodes(self.nodes)\n             wait_bitcoinds()\n             self.nodes = start_nodes(3, self.options.tmpdir, [[m]] * 3)\n-            connect_nodes_bi(self.nodes,0,1)\n-            connect_nodes_bi(self.nodes,1,2)\n-            connect_nodes_bi(self.nodes,0,2)\n-            self.sync_all()\n             assert_equal(balance_nodes, [self.nodes[i].getbalance() for i in range(3)])\n \n "
      }
    ]
  },
  {
    "sha": "fa8cd46f39778925eaf2caf812cccd9fb8503368",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYThjZDQ2ZjM5Nzc4OTI1ZWFmMmNhZjgxMmNjY2Q5ZmI4NTAzMzY4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-01-04T12:54:23Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-03-14T15:45:04Z"
      },
      "message": "[qa] Move create_tx() to util.py",
      "tree": {
        "sha": "68084803ac7bc2da9317b68b0aba11556315d5a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/68084803ac7bc2da9317b68b0aba11556315d5a1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa8cd46f39778925eaf2caf812cccd9fb8503368",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8cd46f39778925eaf2caf812cccd9fb8503368",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa8cd46f39778925eaf2caf812cccd9fb8503368",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8cd46f39778925eaf2caf812cccd9fb8503368/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fad7dc8a6c0ca9c067a249cf8896dd2e64703e48",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad7dc8a6c0ca9c067a249cf8896dd2e64703e48",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fad7dc8a6c0ca9c067a249cf8896dd2e64703e48"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 16,
      "deletions": 32
    },
    "files": [
      {
        "sha": "5e9856e5d43186c32f4e84221870e1afc0ca467b",
        "filename": "qa/rpc-tests/mempool_reorg.py",
        "status": "modified",
        "additions": 5,
        "deletions": 13,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8cd46f39778925eaf2caf812cccd9fb8503368/qa/rpc-tests/mempool_reorg.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8cd46f39778925eaf2caf812cccd9fb8503368/qa/rpc-tests/mempool_reorg.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_reorg.py?ref=fa8cd46f39778925eaf2caf812cccd9fb8503368",
        "patch": "@@ -25,14 +25,6 @@ def setup_network(self):\n         self.is_network_split = False\n         self.sync_all()\n \n-    def create_tx(self, from_txid, to_address, amount):\n-        inputs = [{ \"txid\" : from_txid, \"vout\" : 0}]\n-        outputs = { to_address : amount }\n-        rawtx = self.nodes[0].createrawtransaction(inputs, outputs)\n-        signresult = self.nodes[0].signrawtransaction(rawtx)\n-        assert_equal(signresult[\"complete\"], True)\n-        return signresult[\"hex\"]\n-\n     def run_test(self):\n         start_count = self.nodes[0].getblockcount()\n \n@@ -52,9 +44,9 @@ def run_test(self):\n         # and make sure the mempool code behaves correctly.\n         b = [ self.nodes[0].getblockhash(n) for n in range(101, 105) ]\n         coinbase_txids = [ self.nodes[0].getblock(h)['tx'][0] for h in b ]\n-        spend_101_raw = self.create_tx(coinbase_txids[1], node1_address, 49.99)\n-        spend_102_raw = self.create_tx(coinbase_txids[2], node0_address, 49.99)\n-        spend_103_raw = self.create_tx(coinbase_txids[3], node0_address, 49.99)\n+        spend_101_raw = create_tx(self.nodes[0], coinbase_txids[1], node1_address, 49.99)\n+        spend_102_raw = create_tx(self.nodes[0], coinbase_txids[2], node0_address, 49.99)\n+        spend_103_raw = create_tx(self.nodes[0], coinbase_txids[3], node0_address, 49.99)\n \n         # Create a block-height-locked transaction which will be invalid after reorg\n         timelock_tx = self.nodes[0].createrawtransaction([{\"txid\": coinbase_txids[0], \"vout\": 0}], {node0_address: 49.99})\n@@ -71,8 +63,8 @@ def run_test(self):\n         assert_raises(JSONRPCException, self.nodes[0].sendrawtransaction, timelock_tx)\n \n         # Create 102_1 and 103_1:\n-        spend_102_1_raw = self.create_tx(spend_102_id, node1_address, 49.98)\n-        spend_103_1_raw = self.create_tx(spend_103_id, node1_address, 49.98)\n+        spend_102_1_raw = create_tx(self.nodes[0], spend_102_id, node1_address, 49.98)\n+        spend_103_1_raw = create_tx(self.nodes[0], spend_103_id, node1_address, 49.98)\n \n         # Broadcast and mine 103_1:\n         spend_103_1_id = self.nodes[0].sendrawtransaction(spend_103_1_raw)"
      },
      {
        "sha": "0ba46e6f51e8a7579651c2f846b37f0e0889fe83",
        "filename": "qa/rpc-tests/mempool_resurrect_test.py",
        "status": "modified",
        "additions": 2,
        "deletions": 10,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8cd46f39778925eaf2caf812cccd9fb8503368/qa/rpc-tests/mempool_resurrect_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8cd46f39778925eaf2caf812cccd9fb8503368/qa/rpc-tests/mempool_resurrect_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_resurrect_test.py?ref=fa8cd46f39778925eaf2caf812cccd9fb8503368",
        "patch": "@@ -21,14 +21,6 @@ def setup_network(self):\n         self.nodes.append(start_node(0, self.options.tmpdir, args))\n         self.is_network_split = False\n \n-    def create_tx(self, from_txid, to_address, amount):\n-        inputs = [{ \"txid\" : from_txid, \"vout\" : 0}]\n-        outputs = { to_address : amount }\n-        rawtx = self.nodes[0].createrawtransaction(inputs, outputs)\n-        signresult = self.nodes[0].signrawtransaction(rawtx)\n-        assert_equal(signresult[\"complete\"], True)\n-        return signresult[\"hex\"]\n-\n     def run_test(self):\n         node0_address = self.nodes[0].getnewaddress()\n         # Spend block 1/2/3's coinbase transactions\n@@ -43,13 +35,13 @@ def run_test(self):\n \n         b = [ self.nodes[0].getblockhash(n) for n in range(1, 4) ]\n         coinbase_txids = [ self.nodes[0].getblock(h)['tx'][0] for h in b ]\n-        spends1_raw = [ self.create_tx(txid, node0_address, 49.99) for txid in coinbase_txids ]\n+        spends1_raw = [ create_tx(self.nodes[0], txid, node0_address, 49.99) for txid in coinbase_txids ]\n         spends1_id = [ self.nodes[0].sendrawtransaction(tx) for tx in spends1_raw ]\n \n         blocks = []\n         blocks.extend(self.nodes[0].generate(1))\n \n-        spends2_raw = [ self.create_tx(txid, node0_address, 49.98) for txid in spends1_id ]\n+        spends2_raw = [ create_tx(self.nodes[0], txid, node0_address, 49.98) for txid in spends1_id ]\n         spends2_id = [ self.nodes[0].sendrawtransaction(tx) for tx in spends2_raw ]\n \n         blocks.extend(self.nodes[0].generate(1))"
      },
      {
        "sha": "507b5ff416409f60af55bc579c1a8c74aeba6ba3",
        "filename": "qa/rpc-tests/mempool_spendcoinbase.py",
        "status": "modified",
        "additions": 1,
        "deletions": 9,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8cd46f39778925eaf2caf812cccd9fb8503368/qa/rpc-tests/mempool_spendcoinbase.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8cd46f39778925eaf2caf812cccd9fb8503368/qa/rpc-tests/mempool_spendcoinbase.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_spendcoinbase.py?ref=fa8cd46f39778925eaf2caf812cccd9fb8503368",
        "patch": "@@ -26,14 +26,6 @@ def setup_network(self):\n         self.nodes.append(start_node(0, self.options.tmpdir, args))\n         self.is_network_split = False\n \n-    def create_tx(self, from_txid, to_address, amount):\n-        inputs = [{ \"txid\" : from_txid, \"vout\" : 0}]\n-        outputs = { to_address : amount }\n-        rawtx = self.nodes[0].createrawtransaction(inputs, outputs)\n-        signresult = self.nodes[0].signrawtransaction(rawtx)\n-        assert_equal(signresult[\"complete\"], True)\n-        return signresult[\"hex\"]\n-\n     def run_test(self):\n         chain_height = self.nodes[0].getblockcount()\n         assert_equal(chain_height, 200)\n@@ -44,7 +36,7 @@ def run_test(self):\n         # is too immature to spend.\n         b = [ self.nodes[0].getblockhash(n) for n in range(101, 103) ]\n         coinbase_txids = [ self.nodes[0].getblock(h)['tx'][0] for h in b ]\n-        spends_raw = [ self.create_tx(txid, node0_address, 49.99) for txid in coinbase_txids ]\n+        spends_raw = [ create_tx(self.nodes[0], txid, node0_address, 49.99) for txid in coinbase_txids ]\n \n         spend_101_id = self.nodes[0].sendrawtransaction(spends_raw[0])\n "
      },
      {
        "sha": "ce3102988a1b9de75b5945540869affdafc84a28",
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8cd46f39778925eaf2caf812cccd9fb8503368/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8cd46f39778925eaf2caf812cccd9fb8503368/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=fa8cd46f39778925eaf2caf812cccd9fb8503368",
        "patch": "@@ -493,6 +493,14 @@ def gen_return_txouts():\n         txouts = txouts + script_pubkey\n     return txouts\n \n+def create_tx(node, coinbase, to_address, amount):\n+    inputs = [{ \"txid\" : coinbase, \"vout\" : 0}]\n+    outputs = { to_address : amount }\n+    rawtx = node.createrawtransaction(inputs, outputs)\n+    signresult = node.signrawtransaction(rawtx)\n+    assert_equal(signresult[\"complete\"], True)\n+    return signresult[\"hex\"]\n+\n def create_lots_of_big_transactions(node, txouts, utxos, fee):\n     addr = node.getnewaddress()\n     txids = []"
      }
    ]
  },
  {
    "sha": "fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWQ4Y2ZiODkzYWMwYmE4M2M2ZmMyMzY3YWRlNTViZmU0ZmE3NWY2",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-12-22T09:43:46Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-03-14T15:45:18Z"
      },
      "message": "[qa] mininode: Add and use CONSTs",
      "tree": {
        "sha": "c57254ebedc80db63737f4e52840bd8e9ee9b298",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c57254ebedc80db63737f4e52840bd8e9ee9b298"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa8cd46f39778925eaf2caf812cccd9fb8503368",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8cd46f39778925eaf2caf812cccd9fb8503368",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa8cd46f39778925eaf2caf812cccd9fb8503368"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 16,
      "deletions": 17
    },
    "files": [
      {
        "sha": "84f941da33f6dd44dbee326e89c5755cf21a5ccf",
        "filename": "qa/rpc-tests/bip68-sequence.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6/qa/rpc-tests/bip68-sequence.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6/qa/rpc-tests/bip68-sequence.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip68-sequence.py?ref=fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6",
        "patch": "@@ -13,7 +13,6 @@\n from test_framework.mininode import *\n from test_framework.blocktools import *\n \n-COIN = 100000000\n SEQUENCE_LOCKTIME_DISABLE_FLAG = (1<<31)\n SEQUENCE_LOCKTIME_TYPE_FLAG = (1<<22) # this means use time (0 means height)\n SEQUENCE_LOCKTIME_GRANULARITY = 9 # this is a bit-shift"
      },
      {
        "sha": "daad312d363907aae3984887cbb8de24509e87a0",
        "filename": "qa/rpc-tests/invalidblockrequest.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6/qa/rpc-tests/invalidblockrequest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6/qa/rpc-tests/invalidblockrequest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidblockrequest.py?ref=fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6",
        "patch": "@@ -78,8 +78,8 @@ def get_tests(self):\n         self.block_time += 1\n \n         # chr(81) is OP_TRUE\n-        tx1 = create_transaction(self.block1.vtx[0], 0, chr(81), 50*100000000)\n-        tx2 = create_transaction(tx1, 0, chr(81), 50*100000000)\n+        tx1 = create_transaction(self.block1.vtx[0], 0, chr(81), 50 * COIN)\n+        tx2 = create_transaction(tx1, 0, chr(81), 50 * COIN)\n \n         block2.vtx.extend([tx1, tx2])\n         block2.hashMerkleRoot = block2.calc_merkle_root()\n@@ -103,7 +103,7 @@ def get_tests(self):\n         '''\n         block3 = create_block(self.tip, create_coinbase(height), self.block_time)\n         self.block_time += 1\n-        block3.vtx[0].vout[0].nValue = 100*100000000 # Too high!\n+        block3.vtx[0].vout[0].nValue = 100 * COIN # Too high!\n         block3.vtx[0].sha256=None\n         block3.vtx[0].calc_sha256()\n         block3.hashMerkleRoot = block3.calc_merkle_root()"
      },
      {
        "sha": "8fe471ccd318bc21e0bba70bcc686e6f33322e6e",
        "filename": "qa/rpc-tests/invalidtxrequest.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6/qa/rpc-tests/invalidtxrequest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6/qa/rpc-tests/invalidtxrequest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidtxrequest.py?ref=fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6",
        "patch": "@@ -63,7 +63,7 @@ def get_tests(self):\n \n         # chr(100) is OP_NOTIF\n         # Transaction will be rejected with code 16 (REJECT_INVALID)\n-        tx1 = create_transaction(self.block1.vtx[0], 0, chr(100), 50*100000000 - 12000)\n+        tx1 = create_transaction(self.block1.vtx[0], 0, chr(100), 50 * COIN - 12000)\n         yield TestInstance([[tx1, RejectResult(16, 'mandatory-script-verify-flag-failed')]])\n \n         # TODO: test further transactions..."
      },
      {
        "sha": "da1e98dc33df0a2faeb6b01ffd11bea7ae91f799",
        "filename": "qa/rpc-tests/listtransactions.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6/qa/rpc-tests/listtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6/qa/rpc-tests/listtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/listtransactions.py?ref=fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6",
        "patch": "@@ -7,7 +7,7 @@\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-from test_framework.mininode import CTransaction\n+from test_framework.mininode import CTransaction, COIN\n import cStringIO\n import binascii\n \n@@ -192,7 +192,7 @@ def get_unconfirmed_utxo_entry(node, txid_to_match):\n \n         # Replace tx3, and check that tx4 becomes unknown\n         tx3_b = tx3_modified\n-        tx3_b.vout[0].nValue -= 0.004*100000000 # bump the fee\n+        tx3_b.vout[0].nValue -= 0.004 * COIN # bump the fee\n         tx3_b = binascii.hexlify(tx3_b.serialize()).decode('utf-8')\n         tx3_b_signed = self.nodes[0].signrawtransaction(tx3_b)['hex']\n         txid_3b = self.nodes[0].sendrawtransaction(tx3_b_signed, True)"
      },
      {
        "sha": "2517bed4706ed76609df7945acd9d7659de6f89d",
        "filename": "qa/rpc-tests/maxuploadtarget.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6/qa/rpc-tests/maxuploadtarget.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6/qa/rpc-tests/maxuploadtarget.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/maxuploadtarget.py?ref=fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6",
        "patch": "@@ -176,7 +176,7 @@ def run_test(self):\n         getdata_request.inv.append(CInv(2, big_old_block))\n \n         max_bytes_per_day = 200*1024*1024\n-        daily_buffer = 144 * 1000000\n+        daily_buffer = 144 * MAX_BLOCK_SIZE\n         max_bytes_available = max_bytes_per_day - daily_buffer\n         success_count = max_bytes_available / old_block_size\n "
      },
      {
        "sha": "6109cb026ceae33a94a1f92578ad9594bbac80ce",
        "filename": "qa/rpc-tests/mempool_packages.py",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6/qa/rpc-tests/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6/qa/rpc-tests/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_packages.py?ref=fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6",
        "patch": "@@ -59,13 +59,12 @@ def run_test(self):\n         descendant_count = 1\n         descendant_fees = 0\n         descendant_size = 0\n-        SATOSHIS = 100000000\n \n         for x in reversed(chain):\n             assert_equal(mempool[x]['descendantcount'], descendant_count)\n             descendant_fees += mempool[x]['fee']\n             assert_equal(mempool[x]['modifiedfee'], mempool[x]['fee'])\n-            assert_equal(mempool[x]['descendantfees'], SATOSHIS*descendant_fees)\n+            assert_equal(mempool[x]['descendantfees'], descendant_fees * COIN)\n             descendant_size += mempool[x]['size']\n             assert_equal(mempool[x]['descendantsize'], descendant_size)\n             descendant_count += 1\n@@ -78,7 +77,7 @@ def run_test(self):\n         descendant_fees = 0\n         for x in reversed(chain):\n             descendant_fees += mempool[x]['fee']\n-            assert_equal(mempool[x]['descendantfees'], SATOSHIS*descendant_fees+1000)\n+            assert_equal(mempool[x]['descendantfees'], descendant_fees * COIN + 1000)\n \n         # Adding one more transaction on to the chain should fail.\n         try:\n@@ -106,7 +105,7 @@ def run_test(self):\n             descendant_fees += mempool[x]['fee']\n             if (x == chain[-1]):\n                 assert_equal(mempool[x]['modifiedfee'], mempool[x]['fee']+satoshi_round(0.00002))\n-            assert_equal(mempool[x]['descendantfees'], SATOSHIS*descendant_fees+2000)\n+            assert_equal(mempool[x]['descendantfees'], descendant_fees * COIN + 2000)\n \n         # TODO: check that node1's mempool is as expected\n "
      },
      {
        "sha": "5064667053857099d0849a4b527134b34d4400bf",
        "filename": "qa/rpc-tests/prioritise_transaction.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6/qa/rpc-tests/prioritise_transaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6/qa/rpc-tests/prioritise_transaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/prioritise_transaction.py?ref=fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6",
        "patch": "@@ -9,8 +9,8 @@\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n+from test_framework.mininode import COIN\n \n-COIN = 100000000\n \n class PrioritiseTransactionTest(BitcoinTestFramework):\n "
      },
      {
        "sha": "eded24f4053953339581258406a1bf8c5d4dc2d8",
        "filename": "qa/rpc-tests/replace-by-fee.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6/qa/rpc-tests/replace-by-fee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6/qa/rpc-tests/replace-by-fee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/replace-by-fee.py?ref=fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6",
        "patch": "@@ -13,7 +13,6 @@\n from test_framework.mininode import *\n import binascii\n \n-COIN = 100000000\n MAX_REPLACEMENT_LIMIT = 100\n \n def satoshi_round(amount):"
      },
      {
        "sha": "b075f69c4751c2b269bd78eb727b1228a00e8632",
        "filename": "qa/rpc-tests/test_framework/blocktools.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6/qa/rpc-tests/test_framework/blocktools.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6/qa/rpc-tests/test_framework/blocktools.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/blocktools.py?ref=fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6",
        "patch": "@@ -45,7 +45,7 @@ def create_coinbase(height, pubkey = None):\n     coinbase.vin.append(CTxIn(COutPoint(0, 0xffffffff), \n                 ser_string(serialize_script_num(height)), 0xffffffff))\n     coinbaseoutput = CTxOut()\n-    coinbaseoutput.nValue = 50*100000000\n+    coinbaseoutput.nValue = 50 * COIN\n     halvings = int(height/150) # regtest\n     coinbaseoutput.nValue >>= halvings\n     if (pubkey != None):"
      },
      {
        "sha": "934d0c7a7557a228db0f5ab92f3b850238a8c10d",
        "filename": "qa/rpc-tests/test_framework/mininode.py",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6/qa/rpc-tests/test_framework/mininode.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6/qa/rpc-tests/test_framework/mininode.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/mininode.py?ref=fad8cfb893ac0ba83c6fc2367ade55bfe4fa75f6",
        "patch": "@@ -38,6 +38,8 @@\n MAX_INV_SZ = 50000\n MAX_BLOCK_SIZE = 1000000\n \n+COIN = 100000000L # 1 btc in satoshis\n+\n # Keep our own socket map for asyncore, so that we can track disconnects\n # ourselves (to workaround an issue with closing an asyncore socket when \n # using select)\n@@ -377,7 +379,7 @@ def serialize(self):\n \n     def __repr__(self):\n         return \"CTxOut(nValue=%i.%08i scriptPubKey=%s)\" \\\n-            % (self.nValue // 100000000, self.nValue % 100000000,\n+            % (self.nValue // COIN, self.nValue % COIN,\n                binascii.hexlify(self.scriptPubKey))\n \n \n@@ -426,7 +428,7 @@ def calc_sha256(self):\n     def is_valid(self):\n         self.calc_sha256()\n         for tout in self.vout:\n-            if tout.nValue < 0 or tout.nValue > 21000000L * 100000000L:\n+            if tout.nValue < 0 or tout.nValue > 21000000 * COIN:\n                 return False\n         return True\n "
      }
    ]
  }
]