[
  {
    "sha": "8734c856f85cb506fa97596383dd7e7b9edd7e03",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NzM0Yzg1NmY4NWNiNTA2ZmE5NzU5NjM4M2RkN2U3YjllZGQ3ZTAz",
    "commit": {
      "author": {
        "name": "Jeffrey Czyz",
        "email": "jkczyz@gmail.com",
        "date": "2019-10-22T17:06:02Z"
      },
      "committer": {
        "name": "Jeffrey Czyz",
        "email": "jkczyz@gmail.com",
        "date": "2019-10-22T20:44:51Z"
      },
      "message": "Replace the LogPrint function with a macro\n\nCalling LogPrint with a category that is not enabled results in\nevaluating the remaining function arguments, which may be arbitrarily\ncomplex (and possibly expensive) expressions. Defining LogPrint as a\nmacro prevents this unnecessary expression evaluation.\n\nThis is a partial revert of #14209. The decision to revert is discussed\nin #16688, which adds verbose logging for validation event notification.",
      "tree": {
        "sha": "aa176beeb597fdb711ebca78f3e3a545beb4c9d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aa176beeb597fdb711ebca78f3e3a545beb4c9d5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8734c856f85cb506fa97596383dd7e7b9edd7e03",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8734c856f85cb506fa97596383dd7e7b9edd7e03",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8734c856f85cb506fa97596383dd7e7b9edd7e03",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8734c856f85cb506fa97596383dd7e7b9edd7e03/comments",
    "author": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b499d8576f30d13dfe9000852afe47ee1c28cfbe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b499d8576f30d13dfe9000852afe47ee1c28cfbe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b499d8576f30d13dfe9000852afe47ee1c28cfbe"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 8,
      "deletions": 7
    },
    "files": [
      {
        "sha": "e37c0c823b732d86ba558dfd342b808cd199c33d",
        "filename": "src/logging.h",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8734c856f85cb506fa97596383dd7e7b9edd7e03/src/logging.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8734c856f85cb506fa97596383dd7e7b9edd7e03/src/logging.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.h?ref=8734c856f85cb506fa97596383dd7e7b9edd7e03",
        "patch": "@@ -155,12 +155,13 @@ static inline void LogPrintf(const char* fmt, const Args&... args)\n     }\n }\n \n-template <typename... Args>\n-static inline void LogPrint(const BCLog::LogFlags& category, const Args&... args)\n-{\n-    if (LogAcceptCategory((category))) {\n-        LogPrintf(args...);\n-    }\n-}\n+// Use a macro instead of a function for conditional logging to prevent\n+// evaluating arguments when logging for the category is not enabled.\n+#define LogPrint(category, ...)              \\\n+    do {                                     \\\n+        if (LogAcceptCategory((category))) { \\\n+            LogPrintf(__VA_ARGS__);          \\\n+        }                                    \\\n+    } while (0)\n \n #endif // BITCOIN_LOGGING_H"
      }
    ]
  }
]