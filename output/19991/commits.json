[
  {
    "sha": "b3273cf4039d26e66ae58a8acb9d865461618d54",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMzI3M2NmNDAzOWQyNmU2NmFlNThhOGFjYjlkODY1NDYxNjE4ZDU0",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-22T10:42:47Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-29T06:59:43Z"
      },
      "message": "net: Use network byte order for in_addr.s_addr\n\nIt is documented in the ip(7) manual page.",
      "tree": {
        "sha": "4b0da60dce8c396a6434bea91ba0ea37eda30dbf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4b0da60dce8c396a6434bea91ba0ea37eda30dbf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b3273cf4039d26e66ae58a8acb9d865461618d54",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl9y218ACgkQQQEIES5+\nqB9FXg//YJC4M3DwxlBncpelYnSagqGTYNdqPs1ISpLHqrJdobs01+LcLBsbALAD\nsQ6e51esVYsecsjeQ8EG0wpPtsSbEI9tNTG9vtCFry1jXSEpd0T0B3OTchihnmQX\nOODQPEqRmjgW8pgktVXJXBf8II9WgcoMcgtW/ayLq4rDuRB8uSB9MTZ6eWJF4QZa\nanbhodTmBCddxw3glZeushnkgr1OcyMxPyYk+x8Rac5nOF6KM+w5enFyGWW1tp6O\nZA5kjd4OVc5VmgNhRWLsfJalzg4rLtnXmEJyvbW9RpjasJC6jGRuJlShu1ADgeBi\nznuktBAy9Zj2jcbCNIyUF7ugx546UzbhIbkuqiXSQWZuh4utYY0pB/4kM7PcB9MU\nNrgkmznkgk6F2VS/4Byrk/tKzuhcd/gkwajEjDH2GdEk87YuMxrWNrOAH5zAmJtM\nl9IsoCjdP93QCeiG0Y0c9X0ouNIsLA0VtIj64tjl65fAWDpnnyguEfgZoSpU9Qbr\n9OoOAmeQDO7s8XymGgpnOhBd6D+hIdGlTiEs1J8r/umYaRfc2qavKx0cR/u7kN28\nRKfZT1TZm1ym6iRKa8dRgM8t5pSHBs4mlAa4Q4QV/tod/c9lfBY0o/6U8JaqoP0K\nSPv/EnYAOq6nwqAzV4Yp3xrdDEcf0N6AEsgZS1fZ5mfR/92oZhU=\n=6wSz\n-----END PGP SIGNATURE-----",
        "payload": "tree 4b0da60dce8c396a6434bea91ba0ea37eda30dbf\nparent 7ea649946daa421ed7dfa478cbb0bcf2de3cc2f8\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1600771367 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1601362783 +0300\n\nnet: Use network byte order for in_addr.s_addr\n\nIt is documented in the ip(7) manual page.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b3273cf4039d26e66ae58a8acb9d865461618d54",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b3273cf4039d26e66ae58a8acb9d865461618d54",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b3273cf4039d26e66ae58a8acb9d865461618d54/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7ea649946daa421ed7dfa478cbb0bcf2de3cc2f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7ea649946daa421ed7dfa478cbb0bcf2de3cc2f8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7ea649946daa421ed7dfa478cbb0bcf2de3cc2f8"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "856a1b390dfd4888f27ccb75d708678261dc3cb0",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b3273cf4039d26e66ae58a8acb9d865461618d54/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b3273cf4039d26e66ae58a8acb9d865461618d54/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=b3273cf4039d26e66ae58a8acb9d865461618d54",
        "patch": "@@ -2322,7 +2322,7 @@ bool CConnman::InitBinds(const std::vector<CService>& binds, const std::vector<N\n     }\n     if (binds.empty() && whiteBinds.empty()) {\n         struct in_addr inaddr_any;\n-        inaddr_any.s_addr = INADDR_ANY;\n+        inaddr_any.s_addr = htonl(INADDR_ANY);\n         struct in6_addr inaddr6_any = IN6ADDR_ANY_INIT;\n         fBound |= Bind(CService(inaddr6_any, GetListenPort()), BF_NONE, NetPermissionFlags::PF_NONE);\n         fBound |= Bind(CService(inaddr_any, GetListenPort()), !fBound ? BF_REPORT_ERROR : BF_NONE, NetPermissionFlags::PF_NONE);"
      }
    ]
  },
  {
    "sha": "a5266d4546c444cfd6d36cb63d2df52ce9e689e2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNTI2NmQ0NTQ2YzQ0NGNmZDZkMzZjYjYzZDJkZjUyY2U5ZTY4OWUy",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-24T18:11:48Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-29T06:59:51Z"
      },
      "message": "net: Add alternative port for onion service\n\nThis change allows to distinguish incoming Tor connections from others.",
      "tree": {
        "sha": "8dea4e5279318b6c43488f9817fea5a9667d48e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8dea4e5279318b6c43488f9817fea5a9667d48e9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a5266d4546c444cfd6d36cb63d2df52ce9e689e2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl9y22cACgkQQQEIES5+\nqB+Wiw/6AuDMonBAIcuUOPxA792qbO8I0CFEoyqfZFOLZe24oRfv2GDl8ve00d3C\nTrVJ7L28D0ZVjswfifNIOUkEMMbEuV4Ap4FrCrq/V+XyEfMm5mG8hOO19mNgY+mY\nZk1kOVQmBiomjFDcQYvQdX973qmpbI6eVC0LM4EV9bV6Xl4+czRH0n7Ot9G/tW7N\n6ANNEWgNzgETToo5L0/OFgYOTkyoUxuWp3bfeoY3KQYHJ2/whpX8KR7me4tJfEWt\nu0vz7c3OmLNNziKxXfq9/dXDxEPCAP08oO1RPjaKVQrmd2g7e9UqWpumhFqljkFx\n1+LX2HBEB5hsM3Ib1eh38tu5/lXkC/pjab49fGYFz22FgFMEOwSBYyvTW3GvrpVs\nst4t9jwtY6nDaYtglUwgB1IlQF2OxBHPJ8gN2hJBSjtPq6AMEPk8O8FbvPHObAq1\n3kD/2mSAON48j0v8lrUvX97QXsFWAZWDzQZA0+mT9Q1XjVl6KMq90Y8cnfmP3sEx\n8KkC8v5dpsuZcLeBktLp439GrXhYfFQfKzc1jFKr2hP7D36jma1gAXQuIlpqtidZ\nBHx8GVyG/xZuBRnL25QSsZtGBlVoa+z1XDHqbVgHUAOIMIzA6SlLXz9VkzkA8uQ/\nLahAhcf2pkDjSVtdSQfBEKbDeSCxQDpyCmqgIo6N3B7SIWkwqck=\n=w0WO\n-----END PGP SIGNATURE-----",
        "payload": "tree 8dea4e5279318b6c43488f9817fea5a9667d48e9\nparent b3273cf4039d26e66ae58a8acb9d865461618d54\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1600971108 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1601362791 +0300\n\nnet: Add alternative port for onion service\n\nThis change allows to distinguish incoming Tor connections from others.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5266d4546c444cfd6d36cb63d2df52ce9e689e2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a5266d4546c444cfd6d36cb63d2df52ce9e689e2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5266d4546c444cfd6d36cb63d2df52ce9e689e2/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b3273cf4039d26e66ae58a8acb9d865461618d54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b3273cf4039d26e66ae58a8acb9d865461618d54",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b3273cf4039d26e66ae58a8acb9d865461618d54"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 12,
      "deletions": 5
    },
    "files": [
      {
        "sha": "603969aaea044101bab40c01deb913308fdc88b1",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5266d4546c444cfd6d36cb63d2df52ce9e689e2/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5266d4546c444cfd6d36cb63d2df52ce9e689e2/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=a5266d4546c444cfd6d36cb63d2df52ce9e689e2",
        "patch": "@@ -37,16 +37,20 @@ const CBaseChainParams& BaseParams()\n     return *globalChainBaseParams;\n }\n \n+/**\n+ * Port numbers for incoming Tor connections (8334, 18334, 38334, 18445) have\n+ * been chosen arbitrarily to keep ranges of used ports tight.\n+ */\n std::unique_ptr<CBaseChainParams> CreateBaseChainParams(const std::string& chain)\n {\n     if (chain == CBaseChainParams::MAIN) {\n-        return MakeUnique<CBaseChainParams>(\"\", 8332);\n+        return MakeUnique<CBaseChainParams>(\"\", 8332, 8334);\n     } else if (chain == CBaseChainParams::TESTNET) {\n-        return MakeUnique<CBaseChainParams>(\"testnet3\", 18332);\n+        return MakeUnique<CBaseChainParams>(\"testnet3\", 18332, 18334);\n     } else if (chain == CBaseChainParams::SIGNET) {\n-        return MakeUnique<CBaseChainParams>(\"signet\", 38332);\n+        return MakeUnique<CBaseChainParams>(\"signet\", 38332, 38334);\n     } else if (chain == CBaseChainParams::REGTEST) {\n-        return MakeUnique<CBaseChainParams>(\"regtest\", 18443);\n+        return MakeUnique<CBaseChainParams>(\"regtest\", 18443, 18445);\n     }\n     throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n }"
      },
      {
        "sha": "f34df4bfdc224c2e73c9a8d2b4bb016f98d45566",
        "filename": "src/chainparamsbase.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5266d4546c444cfd6d36cb63d2df52ce9e689e2/src/chainparamsbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5266d4546c444cfd6d36cb63d2df52ce9e689e2/src/chainparamsbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.h?ref=a5266d4546c444cfd6d36cb63d2df52ce9e689e2",
        "patch": "@@ -27,12 +27,15 @@ class CBaseChainParams\n \n     const std::string& DataDir() const { return strDataDir; }\n     int RPCPort() const { return nRPCPort; }\n+    uint16_t OnionServiceTargetPort() const { return m_onion_service_target_port; }\n \n     CBaseChainParams() = delete;\n-    CBaseChainParams(const std::string& data_dir, int rpc_port) : nRPCPort(rpc_port), strDataDir(data_dir) {}\n+    CBaseChainParams(const std::string& data_dir, int rpc_port, uint16_t onion_service_target_port)\n+        : nRPCPort(rpc_port), m_onion_service_target_port(onion_service_target_port), strDataDir(data_dir) {}\n \n private:\n     int nRPCPort;\n+    const uint16_t m_onion_service_target_port;\n     std::string strDataDir;\n };\n "
      }
    ]
  },
  {
    "sha": "fdd3ae4d264f26f87009879838dec035db5a7aed",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZGQzYWU0ZDI2NGYyNmY4NzAwOTg3OTgzOGRlYzAzNWRiNWE3YWVk",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-24T18:16:03Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-29T06:59:52Z"
      },
      "message": "net, refactor: Refactor CBaseChainParams::RPCPort function",
      "tree": {
        "sha": "74ba7e28cf7e6ede89f97940d24ff536c0df3733",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/74ba7e28cf7e6ede89f97940d24ff536c0df3733"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fdd3ae4d264f26f87009879838dec035db5a7aed",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl9y22gACgkQQQEIES5+\nqB9dnQ/+Oyr8LyJySlxvEExVTKYZEULgkL//vvWa5lMNI4cATPbtD/roKjRjdMd3\nNuW3WhJUzEywyXMsxaSwKPW9HmHtF0VZJsrX1MukKkXku09ABVxUZdlbHZZEOZ9C\ncIlDwDetdjniTFFPBbuTIKMawK7lTfDgeZm1TKWIcaB3u+i4hLPErx6FXsE4DoMA\nUyZY3CHEbz/PRewpLgHsNJokUjen9mGWL4SODeAeSxhdrC+tvCMh5HdceEWWDAN2\n4hd/9F5KcXRm35bhsPHbvnj1BTaTCPoIwlym0GC9mtjSDfhutWUUxQ8DYb3LBjKw\nltb7De3adLAAWE6zKFrVh0J9lD5j8BcO5x5Gdg89BOffwqH7B4v2CnR/9vtquq+1\naPHO3yr+UJ13xVMawN3Qe5iSrBbgv4WY4ZJunoK92k/nftQZUBJOhZDCm9hZzgVB\nNS8MuREsFQ5rCY8e4S52eS3HiR2KlpKR1f0uth5sSqEFrv4a/b6uqI1mjGXYZtY1\nka9a6YtqpCHU2KELmpX4eot2H07LgjBcB6sTS0x414n/pAyZQWnf6xGZOin3Z5rQ\nelTU4TfuH79Dn7EhZrRS8/5QNPPO6zrnwHGBuPGdRbLT49qs9U2WFk3P7c7oLqOm\nJ77Ns3dmudNBzb3id+VsbO547acGm86SKDWY9K7hlwwGO8MBIqI=\n=bqiQ\n-----END PGP SIGNATURE-----",
        "payload": "tree 74ba7e28cf7e6ede89f97940d24ff536c0df3733\nparent a5266d4546c444cfd6d36cb63d2df52ce9e689e2\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1600971363 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1601362792 +0300\n\nnet, refactor: Refactor CBaseChainParams::RPCPort function\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fdd3ae4d264f26f87009879838dec035db5a7aed",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fdd3ae4d264f26f87009879838dec035db5a7aed",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fdd3ae4d264f26f87009879838dec035db5a7aed/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a5266d4546c444cfd6d36cb63d2df52ce9e689e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5266d4546c444cfd6d36cb63d2df52ce9e689e2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a5266d4546c444cfd6d36cb63d2df52ce9e689e2"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "9b4ae2f7abe8b4b192cd998ae5c50fc67b79276f",
        "filename": "src/chainparamsbase.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fdd3ae4d264f26f87009879838dec035db5a7aed/src/chainparamsbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fdd3ae4d264f26f87009879838dec035db5a7aed/src/chainparamsbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.h?ref=fdd3ae4d264f26f87009879838dec035db5a7aed",
        "patch": "@@ -26,15 +26,15 @@ class CBaseChainParams\n     ///@}\n \n     const std::string& DataDir() const { return strDataDir; }\n-    int RPCPort() const { return nRPCPort; }\n+    uint16_t RPCPort() const { return m_rpc_port; }\n     uint16_t OnionServiceTargetPort() const { return m_onion_service_target_port; }\n \n     CBaseChainParams() = delete;\n-    CBaseChainParams(const std::string& data_dir, int rpc_port, uint16_t onion_service_target_port)\n-        : nRPCPort(rpc_port), m_onion_service_target_port(onion_service_target_port), strDataDir(data_dir) {}\n+    CBaseChainParams(const std::string& data_dir, uint16_t rpc_port, uint16_t onion_service_target_port)\n+        : m_rpc_port(rpc_port), m_onion_service_target_port(onion_service_target_port), strDataDir(data_dir) {}\n \n private:\n-    int nRPCPort;\n+    const uint16_t m_rpc_port;\n     const uint16_t m_onion_service_target_port;\n     std::string strDataDir;\n };"
      }
    ]
  },
  {
    "sha": "e3f07851f02857b4844fccb2e91070c5cd3aad4d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplM2YwNzg1MWYwMjg1N2I0ODQ0ZmNjYjJlOTEwNzBjNWNkM2FhZDRk",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-24T19:28:29Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-29T06:59:52Z"
      },
      "message": "refactor: Rename TorController::target to m_tor_control_center\n\n`target` is a proper name for the onion service target address and port.\nThis change is required for the following commit.",
      "tree": {
        "sha": "954d0863150e6f4d0f176cb86ef3467f869256f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/954d0863150e6f4d0f176cb86ef3467f869256f4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e3f07851f02857b4844fccb2e91070c5cd3aad4d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl9y22gACgkQQQEIES5+\nqB9uNBAAtT0ZkRo71T9vqpUpKh6RASMKRZchs/uKQBSx7TG8V37XuJl+ccdJweYJ\ndyDgTUkwUFMCaWaDajcZL5nCBxibU8un82ZJDjDWwMy2QTWVed+4ERcSLmRjQeoW\nMpW4bTu1drCwnW13a1HtF4Gt8C+ePCamnuSz+rWHKdd0UV3uMwmaoNiTooNJtO6w\niHKAT5M7uZWKyS5kWKRVylJotFJn4beY51xCUjBOpvss5ozKqJOG9bCtiL++lDzl\nC4f4v5rSYtZnr31qkVKBuBZiQrZ5QQdPg9VKqIAHqOyfeJcxUKqLCbjz3zkS0hcS\nTVtG67R0ArFpoU7f6Hoe/w+bz3Y+qmrwwrEDoV1VG6F61qYwwx4cTfZm+xFev7eS\n+In2C7NaM8+0ztoRM8lrPOyeymYPtCUV3AoQqxIhtsUtfntHKP0CySzlWA1NkOmA\nN3EXqewwELST8qCN0FEiqagOQ9YApxBBpN3IWmViW/+/LfIdTxfmgrwAvVy/8Mvc\nJ3bWp6C/SubEDUmPrcJlgy5UWLnWma0Nm3IBn2hx+5q4akVK305b4NfehCdRrVle\nkVQk+8nntxNE6zO62BOAGx4e/l+i/W7H9ygPbisHt7tPkKQ4ZoFPdGAfCoxVH4c3\nctZUgi9KA7An/dVgizG0/P1U/kTqbOGnG/nS2R4aMlYFxEvuMPM=\n=52Ic\n-----END PGP SIGNATURE-----",
        "payload": "tree 954d0863150e6f4d0f176cb86ef3467f869256f4\nparent fdd3ae4d264f26f87009879838dec035db5a7aed\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1600975709 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1601362792 +0300\n\nrefactor: Rename TorController::target to m_tor_control_center\n\n`target` is a proper name for the onion service target address and port.\nThis change is required for the following commit.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3f07851f02857b4844fccb2e91070c5cd3aad4d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e3f07851f02857b4844fccb2e91070c5cd3aad4d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3f07851f02857b4844fccb2e91070c5cd3aad4d/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fdd3ae4d264f26f87009879838dec035db5a7aed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fdd3ae4d264f26f87009879838dec035db5a7aed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fdd3ae4d264f26f87009879838dec035db5a7aed"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 17,
      "deletions": 17
    },
    "files": [
      {
        "sha": "34293c9700b6714b625d2bb1e8f793bd68e85a60",
        "filename": "src/torcontrol.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3f07851f02857b4844fccb2e91070c5cd3aad4d/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3f07851f02857b4844fccb2e91070c5cd3aad4d/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=e3f07851f02857b4844fccb2e91070c5cd3aad4d",
        "patch": "@@ -81,12 +81,12 @@ class TorControlConnection\n \n     /**\n      * Connect to a Tor control port.\n-     * target is address of the form host:port.\n+     * tor_control_center is address of the form host:port.\n      * connected is the handler that is called when connection is successfully established.\n      * disconnected is a handler that is called when the connection is broken.\n      * Return true on success.\n      */\n-    bool Connect(const std::string &target, const ConnectionCB& connected, const ConnectionCB& disconnected);\n+    bool Connect(const std::string& tor_control_center, const ConnectionCB& connected, const ConnectionCB& disconnected);\n \n     /**\n      * Disconnect from Tor control port.\n@@ -193,16 +193,16 @@ void TorControlConnection::eventcb(struct bufferevent *bev, short what, void *ct\n     }\n }\n \n-bool TorControlConnection::Connect(const std::string &target, const ConnectionCB& _connected, const ConnectionCB&  _disconnected)\n+bool TorControlConnection::Connect(const std::string& tor_control_center, const ConnectionCB& _connected, const ConnectionCB& _disconnected)\n {\n     if (b_conn)\n         Disconnect();\n-    // Parse target address:port\n+    // Parse tor_control_center address:port\n     struct sockaddr_storage connect_to_addr;\n     int connect_to_addrlen = sizeof(connect_to_addr);\n-    if (evutil_parse_sockaddr_port(target.c_str(),\n+    if (evutil_parse_sockaddr_port(tor_control_center.c_str(),\n         (struct sockaddr*)&connect_to_addr, &connect_to_addrlen)<0) {\n-        LogPrintf(\"tor: Error parsing socket address %s\\n\", target);\n+        LogPrintf(\"tor: Error parsing socket address %s\\n\", tor_control_center);\n         return false;\n     }\n \n@@ -215,9 +215,9 @@ bool TorControlConnection::Connect(const std::string &target, const ConnectionCB\n     this->connected = _connected;\n     this->disconnected = _disconnected;\n \n-    // Finally, connect to target\n+    // Finally, connect to tor_control_center\n     if (bufferevent_socket_connect(b_conn, (struct sockaddr*)&connect_to_addr, connect_to_addrlen) < 0) {\n-        LogPrintf(\"tor: Error connecting to address %s\\n\", target);\n+        LogPrintf(\"tor: Error connecting to address %s\\n\", tor_control_center);\n         return false;\n     }\n     return true;\n@@ -410,7 +410,7 @@ static bool WriteBinaryFile(const fs::path &filename, const std::string &data)\n class TorController\n {\n public:\n-    TorController(struct event_base* base, const std::string& target);\n+    TorController(struct event_base* base, const std::string& tor_control_center);\n     ~TorController();\n \n     /** Get name of file to store private key in */\n@@ -420,7 +420,7 @@ class TorController\n     void Reconnect();\n private:\n     struct event_base* base;\n-    std::string target;\n+    const std::string m_tor_control_center;\n     TorControlConnection conn;\n     std::string private_key;\n     std::string service_id;\n@@ -450,18 +450,18 @@ class TorController\n     static void reconnect_cb(evutil_socket_t fd, short what, void *arg);\n };\n \n-TorController::TorController(struct event_base* _base, const std::string& _target):\n+TorController::TorController(struct event_base* _base, const std::string& tor_control_center):\n     base(_base),\n-    target(_target), conn(base), reconnect(true), reconnect_ev(0),\n+    m_tor_control_center(tor_control_center), conn(base), reconnect(true), reconnect_ev(0),\n     reconnect_timeout(RECONNECT_TIMEOUT_START)\n {\n     reconnect_ev = event_new(base, -1, 0, reconnect_cb, this);\n     if (!reconnect_ev)\n         LogPrintf(\"tor: Failed to create event for reconnection: out of memory?\\n\");\n     // Start connection attempts immediately\n-    if (!conn.Connect(_target, std::bind(&TorController::connected_cb, this, std::placeholders::_1),\n+    if (!conn.Connect(m_tor_control_center, std::bind(&TorController::connected_cb, this, std::placeholders::_1),\n          std::bind(&TorController::disconnected_cb, this, std::placeholders::_1) )) {\n-        LogPrintf(\"tor: Initiating connection to Tor control port %s failed\\n\", _target);\n+        LogPrintf(\"tor: Initiating connection to Tor control port %s failed\\n\", m_tor_control_center);\n     }\n     // Read service private key if cached\n     std::pair<bool,std::string> pkf = ReadBinaryFile(GetPrivateKeyFile());\n@@ -696,7 +696,7 @@ void TorController::disconnected_cb(TorControlConnection& _conn)\n     if (!reconnect)\n         return;\n \n-    LogPrint(BCLog::TOR, \"tor: Not connected to Tor control port %s, trying to reconnect\\n\", target);\n+    LogPrint(BCLog::TOR, \"tor: Not connected to Tor control port %s, trying to reconnect\\n\", m_tor_control_center);\n \n     // Single-shot timer for reconnect. Use exponential backoff.\n     struct timeval time = MillisToTimeval(int64_t(reconnect_timeout * 1000.0));\n@@ -710,9 +710,9 @@ void TorController::Reconnect()\n     /* Try to reconnect and reestablish if we get booted - for example, Tor\n      * may be restarting.\n      */\n-    if (!conn.Connect(target, std::bind(&TorController::connected_cb, this, std::placeholders::_1),\n+    if (!conn.Connect(m_tor_control_center, std::bind(&TorController::connected_cb, this, std::placeholders::_1),\n          std::bind(&TorController::disconnected_cb, this, std::placeholders::_1) )) {\n-        LogPrintf(\"tor: Re-initiating connection to Tor control port %s failed\\n\", target);\n+        LogPrintf(\"tor: Re-initiating connection to Tor control port %s failed\\n\", m_tor_control_center);\n     }\n }\n "
      }
    ]
  },
  {
    "sha": "57f17e57c8c410e10c16a46f7372c0ea8b7dd467",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1N2YxN2U1N2M4YzQxMGUxMGMxNmE0NmY3MzcyYzBlYThiN2RkNDY3",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-24T19:40:05Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-10-01T16:00:07Z"
      },
      "message": "net: Pass onion service target to Tor controller",
      "tree": {
        "sha": "3ac9a2e8f4cde956b30d72daacdcd2436e82249d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3ac9a2e8f4cde956b30d72daacdcd2436e82249d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/57f17e57c8c410e10c16a46f7372c0ea8b7dd467",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl91/QcACgkQQQEIES5+\nqB8Fpg//WRbWB9cqIJh/8lVIUkuAwPqYF4Tsgzml49yzZ+Web7ZfaCudCOws2eDn\nqdjgxTR+pqgjhrgPfYsMZB+enLfnb8h0HvSfD/uSnQ7lXO4w0C4qYtxtiEhZjo4M\nKUi4tIh4HlmFprvJloDTFm/V8aUxCW+o+FexLnHMV+RGhxmSBSLuoRV2VnveeqA1\nUqc9/YIHBkA4BiH9P16J5ukyDTHju3f2QaaVM1kGxE7wClr8SrQ0uPNsC73CFj4Z\n7ZLy/IR+r4/iIZ8vy0vm/nYfkj8EESeRBF5Kn8YLTQgXOddbS/W7xAsWMwauZW3g\n5nQMwFYcbBi40SHjNo1B2LtCv2H8syMJQefy7CVXrYd7+28513vN2XY1MCCA5x9I\nXKedIku0UHMEtp8p3wLBRRwTLwRKeMXmJ3cj++9M3BIQn3FH4T3KVz7nkW53zDv7\nZRZSz3vvWTpXmxXMLfdthVi0YfZOV/WeVc6HIkkwoCN8gVXMw+rHteda003ah9tJ\nLLJsNc/+zj2ks8pvjHfM6e2hYogh/ntJ09ptBCBBIqkpgwD93g5oqkoD6RD4NqSe\nUiV2aDR9eH7JbAuInAIGx8KLJX4Q9X+6TZOpI3nM7Iz8QWpNTPcSNGG7Xitbd6xZ\nZQv67LMjID6+yJ4n1pM7nn61kf7ybuM3DXGWnerNSB2EPIViTSY=\n=IpJb\n-----END PGP SIGNATURE-----",
        "payload": "tree 3ac9a2e8f4cde956b30d72daacdcd2436e82249d\nparent e3f07851f02857b4844fccb2e91070c5cd3aad4d\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1600976405 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1601568007 +0300\n\nnet: Pass onion service target to Tor controller\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57f17e57c8c410e10c16a46f7372c0ea8b7dd467",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/57f17e57c8c410e10c16a46f7372c0ea8b7dd467",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57f17e57c8c410e10c16a46f7372c0ea8b7dd467/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e3f07851f02857b4844fccb2e91070c5cd3aad4d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3f07851f02857b4844fccb2e91070c5cd3aad4d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e3f07851f02857b4844fccb2e91070c5cd3aad4d"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 33,
      "deletions": 14
    },
    "files": [
      {
        "sha": "74d30b07339329b8d234caee2ffabea724db7314",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57f17e57c8c410e10c16a46f7372c0ea8b7dd467/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57f17e57c8c410e10c16a46f7372c0ea8b7dd467/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=57f17e57c8c410e10c16a46f7372c0ea8b7dd467",
        "patch": "@@ -1912,7 +1912,7 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n     LogPrintf(\"nBestHeight = %d\\n\", chain_active_height);\n \n     if (args.GetBoolArg(\"-listenonion\", DEFAULT_LISTEN_ONION))\n-        StartTorControl();\n+        StartTorControl(DefaultOnionServiceTarget());\n \n     Discover();\n "
      },
      {
        "sha": "666e7a37a597921ccc42e6994fc5702293234c6c",
        "filename": "src/torcontrol.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 12,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57f17e57c8c410e10c16a46f7372c0ea8b7dd467/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57f17e57c8c410e10c16a46f7372c0ea8b7dd467/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=57f17e57c8c410e10c16a46f7372c0ea8b7dd467",
        "patch": "@@ -3,13 +3,16 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <chainparams.h>\n #include <torcontrol.h>\n-#include <util/strencodings.h>\n-#include <netbase.h>\n+\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <crypto/hmac_sha256.h>\n #include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <util/strencodings.h>\n #include <util/system.h>\n-#include <crypto/hmac_sha256.h>\n \n #include <vector>\n #include <deque>\n@@ -410,7 +413,7 @@ static bool WriteBinaryFile(const fs::path &filename, const std::string &data)\n class TorController\n {\n public:\n-    TorController(struct event_base* base, const std::string& tor_control_center);\n+    TorController(struct event_base* base, const std::string& tor_control_center, const CService& target);\n     ~TorController();\n \n     /** Get name of file to store private key in */\n@@ -428,6 +431,7 @@ class TorController\n     struct event *reconnect_ev;\n     float reconnect_timeout;\n     CService service;\n+    const CService m_target;\n     /** Cookie for SAFECOOKIE auth */\n     std::vector<uint8_t> cookie;\n     /** ClientNonce for SAFECOOKIE auth */\n@@ -450,10 +454,11 @@ class TorController\n     static void reconnect_cb(evutil_socket_t fd, short what, void *arg);\n };\n \n-TorController::TorController(struct event_base* _base, const std::string& tor_control_center):\n+TorController::TorController(struct event_base* _base, const std::string& tor_control_center, const CService& target):\n     base(_base),\n     m_tor_control_center(tor_control_center), conn(base), reconnect(true), reconnect_ev(0),\n-    reconnect_timeout(RECONNECT_TIMEOUT_START)\n+    reconnect_timeout(RECONNECT_TIMEOUT_START),\n+    m_target(target)\n {\n     reconnect_ev = event_new(base, -1, 0, reconnect_cb, this);\n     if (!reconnect_ev)\n@@ -536,7 +541,7 @@ void TorController::auth_cb(TorControlConnection& _conn, const TorControlReply&\n             private_key = \"NEW:RSA1024\"; // Explicitly request RSA1024 - see issue #9214\n         // Request onion service, redirect port.\n         // Note that the 'virtual' port is always the default port to avoid decloaking nodes using other ports.\n-        _conn.Command(strprintf(\"ADD_ONION %s Port=%i,127.0.0.1:%i\", private_key, Params().GetDefaultPort(), GetListenPort()),\n+        _conn.Command(strprintf(\"ADD_ONION %s Port=%i,%s\", private_key, Params().GetDefaultPort(), m_target.ToStringIPPort()),\n             std::bind(&TorController::add_onion_cb, this, std::placeholders::_1, std::placeholders::_2));\n     } else {\n         LogPrintf(\"tor: Authentication failed\\n\");\n@@ -731,14 +736,14 @@ void TorController::reconnect_cb(evutil_socket_t fd, short what, void *arg)\n static struct event_base *gBase;\n static std::thread torControlThread;\n \n-static void TorControlThread()\n+static void TorControlThread(CService onion_service_target)\n {\n-    TorController ctrl(gBase, gArgs.GetArg(\"-torcontrol\", DEFAULT_TOR_CONTROL));\n+    TorController ctrl(gBase, gArgs.GetArg(\"-torcontrol\", DEFAULT_TOR_CONTROL), onion_service_target);\n \n     event_base_dispatch(gBase);\n }\n \n-void StartTorControl()\n+void StartTorControl(CService onion_service_target)\n {\n     assert(!gBase);\n #ifdef WIN32\n@@ -752,7 +757,9 @@ void StartTorControl()\n         return;\n     }\n \n-    torControlThread = std::thread(std::bind(&TraceThread<void (*)()>, \"torcontrol\", &TorControlThread));\n+    torControlThread = std::thread(&TraceThread<std::function<void()>>, \"torcontrol\", [onion_service_target] {\n+        TorControlThread(onion_service_target);\n+    });\n }\n \n void InterruptTorControl()\n@@ -773,3 +780,10 @@ void StopTorControl()\n         gBase = nullptr;\n     }\n }\n+\n+CService DefaultOnionServiceTarget()\n+{\n+    struct in_addr onion_service_target;\n+    onion_service_target.s_addr = htonl(INADDR_LOOPBACK);\n+    return {onion_service_target, BaseParams().OnionServiceTargetPort()};\n+}"
      },
      {
        "sha": "71a6960e5421f89ed40fb4d76ae032b47dc80773",
        "filename": "src/torcontrol.h",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57f17e57c8c410e10c16a46f7372c0ea8b7dd467/src/torcontrol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57f17e57c8c410e10c16a46f7372c0ea8b7dd467/src/torcontrol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.h?ref=57f17e57c8c410e10c16a46f7372c0ea8b7dd467",
        "patch": "@@ -8,12 +8,17 @@\n #ifndef BITCOIN_TORCONTROL_H\n #define BITCOIN_TORCONTROL_H\n \n+#include <string>\n+\n+class CService;\n \n extern const std::string DEFAULT_TOR_CONTROL;\n static const bool DEFAULT_LISTEN_ONION = true;\n \n-void StartTorControl();\n+void StartTorControl(CService onion_service_target);\n void InterruptTorControl();\n void StopTorControl();\n \n+CService DefaultOnionServiceTarget();\n+\n #endif /* BITCOIN_TORCONTROL_H */"
      }
    ]
  },
  {
    "sha": "92bd3c1da48d17c8ba20349e18ad19051614bc1a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MmJkM2MxZGE0OGQxN2M4YmEyMDM0OWUxOGFkMTkwNTE2MTRiYzFh",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-29T15:02:44Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-10-01T16:00:10Z"
      },
      "message": "net, refactor: Move AddLocal call one level up\n\nThis change simplifies the following commit.",
      "tree": {
        "sha": "686b17d2a3b7d8f8ca2af3730edefa0e32bb6f97",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/686b17d2a3b7d8f8ca2af3730edefa0e32bb6f97"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/92bd3c1da48d17c8ba20349e18ad19051614bc1a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl91/QoACgkQQQEIES5+\nqB9twhAAm/8prmPOh0QvDaSZHKoD6ZLS7R5igw4ks0ozX8rM4B7RBDgF4N/RcaK8\nEp8tOPgoJ3KSbpE5iQvqIjQPICifOx+EBunGMzYOnZfi1HwbU2UYF78dEkAVJgJs\noqhdETRHRKSWkAm07WNcCB1Ggn5yLdo9ReGJXzxEXa7AEvxtQzbzFZ0G/4LRL3kE\nHvp3xybOtPcu/amakyx14rqX/l4mPou1VcxVEHj3AEFNwtyWIda4bExX4AcsX1Ol\n3OPwD2iIGUCoKN+ecvanQ6QJzDWvEkAPqKvJy5ruLKzNbtOTgWy9YM+XtuYxp2gq\nrwA6oUv3lscCyMSaEnLCGb5R4CgnKXRztRjlHE2VRsyHzmNiPrlFWs8JydvIJXRq\nKeRrfNmDsKVos8pSxQRob5Dhf+IrpkZt3ddBbsBdAK6Ce1JfKk8Kfr5dKlPLH31p\nAjRaVrHCH/KYykYyEezJ0egg8vpEG0F6FnNdjtMIOIUSaSCYbRrZG/ky21r+OmGk\nr8Z0XBhAXRdzwfEtbhCAT4VdtiGnQn97klXe+7IsfxgsR/vkS1DJ2ZCHtYeGXc27\nbmwJwN11hVOiB+SeEbPff5PAXq3wp0a2IRnUa/LOESkNrC+8eKIe9vu6oCKJA0N4\nWrhz1Wg73vymCaQqZ0vD5WjIpopTk63RjANfZGmJP3aGHJcxQVs=\n=Jqiw\n-----END PGP SIGNATURE-----",
        "payload": "tree 686b17d2a3b7d8f8ca2af3730edefa0e32bb6f97\nparent 57f17e57c8c410e10c16a46f7372c0ea8b7dd467\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1601391764 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1601568010 +0300\n\nnet, refactor: Move AddLocal call one level up\n\nThis change simplifies the following commit.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92bd3c1da48d17c8ba20349e18ad19051614bc1a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/92bd3c1da48d17c8ba20349e18ad19051614bc1a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92bd3c1da48d17c8ba20349e18ad19051614bc1a/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "57f17e57c8c410e10c16a46f7372c0ea8b7dd467",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57f17e57c8c410e10c16a46f7372c0ea8b7dd467",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/57f17e57c8c410e10c16a46f7372c0ea8b7dd467"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 5,
      "deletions": 4
    },
    "files": [
      {
        "sha": "0d906ec573ac2c9f0fc726d7022c3dd52d74ce81",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/92bd3c1da48d17c8ba20349e18ad19051614bc1a/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/92bd3c1da48d17c8ba20349e18ad19051614bc1a/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=92bd3c1da48d17c8ba20349e18ad19051614bc1a",
        "patch": "@@ -2211,10 +2211,6 @@ bool CConnman::BindListenPort(const CService& addrBind, bilingual_str& strError,\n     }\n \n     vhListenSocket.push_back(ListenSocket(hListenSocket, permissions));\n-\n-    if (addrBind.IsRoutable() && fDiscover && (permissions & PF_NOBAN) == 0)\n-        AddLocal(addrBind, LOCAL_BIND);\n-\n     return true;\n }\n \n@@ -2308,6 +2304,11 @@ bool CConnman::Bind(const CService &addr, unsigned int flags, NetPermissionFlags\n         }\n         return false;\n     }\n+\n+    if (addr.IsRoutable() && fDiscover && (permissions & PF_NOBAN) == 0) {\n+        AddLocal(addr, LOCAL_BIND);\n+    }\n+\n     return true;\n }\n "
      }
    ]
  },
  {
    "sha": "bb145c9050203b3f3d8bff10fb3bba31da51adb1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYjE0NWM5MDUwMjAzYjNmM2Q4YmZmMTBmYjNiYmEzMWRhNTFhZGIx",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-29T15:03:43Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-10-01T16:19:20Z"
      },
      "message": "net: Extend -bind config option with optional network type",
      "tree": {
        "sha": "4e300b08d593fed7fd274e30aa35062c08bfb563",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e300b08d593fed7fd274e30aa35062c08bfb563"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb145c9050203b3f3d8bff10fb3bba31da51adb1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl92AYgACgkQQQEIES5+\nqB82OQ//ZcfdJQ63CABElvtI3g+K9KkDlEmmvJG87aao6rqd2UsFL9Lna8CB6MyH\neKWyk5CU22myy+ZO4JP5udGzi0poMRnOA0VcZDDbkrqLM3VE9zZKC5F10H6GTY7j\nw0eH0X+xPs76yYUOMjILkI7xewO0A7/dDmnA5TgLl7+4b6+34ARYazbJZwaOpcpQ\nG9x5I3vRaXb2xdG/3S/LajnvK7P5RBSsbhBQS15Zk3iT5k8ltTA8Hur99kG3X4td\nfd0UnaEfJQVef4kLw8h+CmlOsIDgiJPrLxlekApVyzlApYsK3CjJ8WDqPZRsOHZw\numZNYGtmdul4xdfAKvkwVNWFnEkPVAbf41FYiyEZTLXIfA/+nf09VUCu+NMOoFxg\nPmp8qaiWm42B8QdVKskIMZbtjjAfWYRcUEvLKVDnFHqj8AC+7H5TZwJActLZ6SAb\nbwQ8pz8wQsp5fkfPmGufsY9AabpJIwdAUK/fWknhIUTFQX6XzV0DPUICR3QKPU9n\n23BBq6A/aY4pvQN4DEBzX2tTvnTDpKh8go7rkoPYMNpcIS9MW3OJfmeC6s8bLxvJ\njPvN/98vsRgfCVatNDKgENBeHKU/4jN5Fu1OS3k1fd3w8aB89HfX0RTEg+edQq8K\nZ9KwJ2oDJO1UXAHWaGDMux0OqIWwYiRMaXdCKkKglt04U8A+zkk=\n=YRZR\n-----END PGP SIGNATURE-----",
        "payload": "tree 4e300b08d593fed7fd274e30aa35062c08bfb563\nparent 92bd3c1da48d17c8ba20349e18ad19051614bc1a\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1601391823 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1601569160 +0300\n\nnet: Extend -bind config option with optional network type\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb145c9050203b3f3d8bff10fb3bba31da51adb1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bb145c9050203b3f3d8bff10fb3bba31da51adb1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb145c9050203b3f3d8bff10fb3bba31da51adb1/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "92bd3c1da48d17c8ba20349e18ad19051614bc1a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92bd3c1da48d17c8ba20349e18ad19051614bc1a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/92bd3c1da48d17c8ba20349e18ad19051614bc1a"
      }
    ],
    "stats": {
      "total": 67,
      "additions": 54,
      "deletions": 13
    },
    "files": [
      {
        "sha": "773e23d084f6d9a7346fa053a73e11c1d4743817",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 9,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb145c9050203b3f3d8bff10fb3bba31da51adb1/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb145c9050203b3f3d8bff10fb3bba31da51adb1/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=bb145c9050203b3f3d8bff10fb3bba31da51adb1",
        "patch": "@@ -441,7 +441,7 @@ void SetupServerArgs(NodeContext& node)\n     argsman.AddArg(\"-addnode=<ip>\", \"Add a node to connect to and attempt to keep the connection open (see the `addnode` RPC command help for more info). This option can be specified multiple times to add multiple nodes.\", ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-asmap=<file>\", strprintf(\"Specify asn mapping used for bucketing of the peers (default: %s). Relative paths will be prefixed by the net-specific datadir location.\", DEFAULT_ASMAP_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-bantime=<n>\", strprintf(\"Default duration (in seconds) of manually configured bans (default: %u)\", DEFAULT_MISBEHAVING_BANTIME), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n-    argsman.AddArg(\"-bind=<addr>\", \"Bind to given address and always listen on it. Use [host]:port notation for IPv6\", ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::CONNECTION);\n+    argsman.AddArg(\"-bind=<addr>[:<port>][=onion]\", strprintf(\"Bind to given address and always listen on it (default: 0.0.0.0). Use [host]:port notation for IPv6. Append =onion to tag any incoming connections to that address and port as incoming Tor connections (default: 127.0.0.1:%u=onion, testnet: 127.0.0.1:%u=onion, signet: 127.0.0.1:%u=onion, regtest: 127.0.0.1:%u=onion)\", defaultBaseParams->OnionServiceTargetPort(), testnetBaseParams->OnionServiceTargetPort(), signetBaseParams->OnionServiceTargetPort(), regtestBaseParams->OnionServiceTargetPort()), ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-connect=<ip>\", \"Connect only to the specified node; -noconnect disables automatic connections (the rules for this peer are the same as for -addnode). This option can be specified multiple times to connect to multiple nodes.\", ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-discover\", \"Discover own IP addresses (default: 1 when listening and no -externalip or -proxy)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-dns\", strprintf(\"Allow DNS lookups for -addnode, -seednode and -connect (default: %u)\", DEFAULT_NAME_LOOKUP), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n@@ -1911,9 +1911,6 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n     }\n     LogPrintf(\"nBestHeight = %d\\n\", chain_active_height);\n \n-    if (args.GetBoolArg(\"-listenonion\", DEFAULT_LISTEN_ONION))\n-        StartTorControl(DefaultOnionServiceTarget());\n-\n     Discover();\n \n     // Map ports with UPnP\n@@ -1940,13 +1937,39 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n     connOptions.nMaxOutboundLimit = nMaxOutboundLimit;\n     connOptions.m_peer_connect_timeout = peer_connect_timeout;\n \n-    for (const std::string& strBind : args.GetArgs(\"-bind\")) {\n-        CService addrBind;\n-        if (!Lookup(strBind, addrBind, GetListenPort(), false)) {\n-            return InitError(ResolveErrMsg(\"bind\", strBind));\n+    for (const std::string& bind_arg : args.GetArgs(\"-bind\")) {\n+        CService bind_addr;\n+        const size_t index = bind_arg.rfind('=');\n+        if (index == std::string::npos) {\n+            if (Lookup(bind_arg, bind_addr, GetListenPort(), false)) {\n+                connOptions.vBinds.push_back(bind_addr);\n+                continue;\n+            }\n+        } else {\n+            const std::string network_type = bind_arg.substr(index + 1);\n+            if (network_type == \"onion\") {\n+                const std::string truncated_bind_arg = bind_arg.substr(0, index);\n+                if (Lookup(truncated_bind_arg, bind_addr, BaseParams().OnionServiceTargetPort(), false)) {\n+                    connOptions.onion_binds.push_back(bind_addr);\n+                    continue;\n+                }\n+            }\n         }\n-        connOptions.vBinds.push_back(addrBind);\n+        return InitError(ResolveErrMsg(\"bind\", bind_arg));\n     }\n+\n+    if (connOptions.onion_binds.empty()) {\n+        connOptions.onion_binds.push_back(DefaultOnionServiceTarget());\n+    }\n+\n+    if (args.GetBoolArg(\"-listenonion\", DEFAULT_LISTEN_ONION)) {\n+        const auto bind_addr = connOptions.onion_binds.front();\n+        if (connOptions.onion_binds.size() > 1) {\n+            InitWarning(strprintf(_(\"More than one onion bind address is provided. Using %s for the automatically created Tor onion service.\"), bind_addr.ToStringIPPort()));\n+        }\n+        StartTorControl(bind_addr);\n+    }\n+\n     for (const std::string& strBind : args.GetArgs(\"-whitebind\")) {\n         NetWhitebindPermissions whitebind;\n         bilingual_str error;"
      },
      {
        "sha": "7f575b66c6fcc7ba793ffead7509f03f3dcd77b9",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 3,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb145c9050203b3f3d8bff10fb3bba31da51adb1/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb145c9050203b3f3d8bff10fb3bba31da51adb1/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=bb145c9050203b3f3d8bff10fb3bba31da51adb1",
        "patch": "@@ -84,6 +84,11 @@ enum BindFlags {\n     BF_NONE         = 0,\n     BF_EXPLICIT     = (1U << 0),\n     BF_REPORT_ERROR = (1U << 1),\n+    /**\n+     * Do not call AddLocal() for our special addresses, e.g., for incoming\n+     * Tor connections, to prevent gossiping them over the network.\n+     */\n+    BF_DONT_ADVERTISE = (1U << 2),\n };\n \n // The set of sockets cannot be modified while waiting\n@@ -2305,14 +2310,17 @@ bool CConnman::Bind(const CService &addr, unsigned int flags, NetPermissionFlags\n         return false;\n     }\n \n-    if (addr.IsRoutable() && fDiscover && (permissions & PF_NOBAN) == 0) {\n+    if (addr.IsRoutable() && fDiscover && !(flags & BF_DONT_ADVERTISE) && !(permissions & PF_NOBAN)) {\n         AddLocal(addr, LOCAL_BIND);\n     }\n \n     return true;\n }\n \n-bool CConnman::InitBinds(const std::vector<CService>& binds, const std::vector<NetWhitebindPermissions>& whiteBinds)\n+bool CConnman::InitBinds(\n+    const std::vector<CService>& binds,\n+    const std::vector<NetWhitebindPermissions>& whiteBinds,\n+    const std::vector<CService>& onion_binds)\n {\n     bool fBound = false;\n     for (const auto& addrBind : binds) {\n@@ -2328,6 +2336,11 @@ bool CConnman::InitBinds(const std::vector<CService>& binds, const std::vector<N\n         fBound |= Bind(CService(inaddr6_any, GetListenPort()), BF_NONE, NetPermissionFlags::PF_NONE);\n         fBound |= Bind(CService(inaddr_any, GetListenPort()), !fBound ? BF_REPORT_ERROR : BF_NONE, NetPermissionFlags::PF_NONE);\n     }\n+\n+    for (const auto& addr_bind : onion_binds) {\n+        fBound |= Bind(addr_bind, BF_EXPLICIT | BF_DONT_ADVERTISE, NetPermissionFlags::PF_NONE);\n+    }\n+\n     return fBound;\n }\n \n@@ -2346,7 +2359,7 @@ bool CConnman::Start(CScheduler& scheduler, const Options& connOptions)\n         nMaxOutboundCycleStartTime = 0;\n     }\n \n-    if (fListen && !InitBinds(connOptions.vBinds, connOptions.vWhiteBinds)) {\n+    if (fListen && !InitBinds(connOptions.vBinds, connOptions.vWhiteBinds, connOptions.onion_binds)) {\n         if (clientInterface) {\n             clientInterface->ThreadSafeMessageBox(\n                 _(\"Failed to listen on any port. Use -listen=0 if you want this.\"),"
      },
      {
        "sha": "905fa5d06cde784aa2bb5d3f7d0c640fc393a242",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb145c9050203b3f3d8bff10fb3bba31da51adb1/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb145c9050203b3f3d8bff10fb3bba31da51adb1/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=bb145c9050203b3f3d8bff10fb3bba31da51adb1",
        "patch": "@@ -209,6 +209,7 @@ class CConnman\n         std::vector<NetWhitelistPermissions> vWhitelistedRange;\n         std::vector<NetWhitebindPermissions> vWhiteBinds;\n         std::vector<CService> vBinds;\n+        std::vector<CService> onion_binds;\n         bool m_use_addrman_outgoing = true;\n         std::vector<std::string> m_specified_outgoing;\n         std::vector<std::string> m_added_nodes;\n@@ -406,7 +407,11 @@ class CConnman\n \n     bool BindListenPort(const CService& bindAddr, bilingual_str& strError, NetPermissionFlags permissions);\n     bool Bind(const CService& addr, unsigned int flags, NetPermissionFlags permissions);\n-    bool InitBinds(const std::vector<CService>& binds, const std::vector<NetWhitebindPermissions>& whiteBinds);\n+    bool InitBinds(\n+        const std::vector<CService>& binds,\n+        const std::vector<NetWhitebindPermissions>& whiteBinds,\n+        const std::vector<CService>& onion_binds);\n+\n     void ThreadOpenAddedConnections();\n     void AddAddrFetch(const std::string& strDest);\n     void ProcessAddrFetch();"
      }
    ]
  },
  {
    "sha": "96571b3d4cb4cda0fd3d5a457ae4a12f615de82b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NjU3MWIzZDRjYjRjZGEwZmQzZDVhNDU3YWU0YTEyZjYxNWRlODJi",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-29T15:04:21Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-10-01T16:19:43Z"
      },
      "message": "doc: Update onion service target port numbers in tor.md",
      "tree": {
        "sha": "07935f31be2f45becdbf334fbafd7f519e60108d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/07935f31be2f45becdbf334fbafd7f519e60108d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/96571b3d4cb4cda0fd3d5a457ae4a12f615de82b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl92AZ8ACgkQQQEIES5+\nqB9z3g/+K262EJkZZM+Ln3087nQG0snUYQI/eyRN6wZzkDwHL2BkjhS9rHsnROEM\np2cMCKdA4uym0pTeP8L5nnI655m4I+nr9joS6U8nKiBkzGmtYpQCteaeV5TLBvW7\nA0lBotgBpPjC/Bllcup58gnTtUb/eWIIBq9CYoBBHyovDKJeIgQyx4NlPrElwmMu\nVLJRI3LTtZuUPG/Q0OK5n2kgWs1PrgEZyAAm28fuBedLN7/ZPuIiE5XXjqO2Vg3s\nn/kCBaqAiLeN4wZABvMWzmOlpCG8VxBEIxn0QWXznwglJSQZq5ESml81GnobbGcX\nynaO+QkgZ0IhOBIG6OV4FMwSlwUGAgjuMjN58mzWUcti+G/yLC7BJqHEWVp86iPW\nL4F8cBFwQlpeKjSidoLpKeKqrMyxWryFh6ijqpgCOoxGynpT08zKGhHTLvNt3j9a\nIdC0WpSTskfnZ4MJcW6NsN4z23J1KxLZePj9w4e/Ni7gah5+YwwvHK2fFejB6K2t\nK8VVamMyqbdYg0klNC6FFaEJm/y+wKfy6mmHjGcBMiz/VlEStdN6wlAIgHSpoV/r\nqMIs9V/oL/5CG2UZ0Kbn1cb7ATQ2ugP/C2L9nIGAFw6kM/pGNtxnpQy8D8zo81ed\nV8xk/CoUH1j/kqG4h2ZyvL7/nNufHluaJ4D9spcvKQQt+a/ZkbU=\n=27+6\n-----END PGP SIGNATURE-----",
        "payload": "tree 07935f31be2f45becdbf334fbafd7f519e60108d\nparent bb145c9050203b3f3d8bff10fb3bba31da51adb1\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1601391861 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1601569183 +0300\n\ndoc: Update onion service target port numbers in tor.md\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96571b3d4cb4cda0fd3d5a457ae4a12f615de82b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/96571b3d4cb4cda0fd3d5a457ae4a12f615de82b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96571b3d4cb4cda0fd3d5a457ae4a12f615de82b/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bb145c9050203b3f3d8bff10fb3bba31da51adb1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb145c9050203b3f3d8bff10fb3bba31da51adb1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bb145c9050203b3f3d8bff10fb3bba31da51adb1"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 5,
      "deletions": 4
    },
    "files": [
      {
        "sha": "12b5f70245357ed8261b1e2b582d3c753eedd793",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96571b3d4cb4cda0fd3d5a457ae4a12f615de82b/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96571b3d4cb4cda0fd3d5a457ae4a12f615de82b/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=96571b3d4cb4cda0fd3d5a457ae4a12f615de82b",
        "patch": "@@ -45,11 +45,12 @@ config file): *Needed for Tor version 0.2.7.0 and older versions of Tor only. Fo\n versions of Tor see [Section 3](#3-automatically-listen-on-tor).*\n \n \tHiddenServiceDir /var/lib/tor/bitcoin-service/\n-\tHiddenServicePort 8333 127.0.0.1:8333\n-\tHiddenServicePort 18333 127.0.0.1:18333\n+\tHiddenServicePort 8333 127.0.0.1:8334\n+\tHiddenServicePort 18333 127.0.0.1:18334\n \n-The directory can be different of course, but (both) port numbers should be equal to\n-your bitcoind's P2P listen port (8333 by default).\n+The directory can be different of course, but virtual port numbers should be equal to\n+your bitcoind's P2P listen port (8333 by default), and target addresses and ports\n+should be equal to binding address and port for inbound Tor connections (127.0.0.1:8334 by default).\n \n \t-externalip=X   You can tell bitcoin about its publicly reachable address using\n \t                this option, and this can be a .onion address. Given the above"
      }
    ]
  }
]