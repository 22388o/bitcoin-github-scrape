Zero-1729,2021-07-29 01:02:19,"Concept ACK, but agree with @fanquake's [comment](https://github.com/bitcoin/bitcoin/pull/22570/files#r678734212) regarding `LogPrintf()` and adding a terminal newline.",https://github.com/bitcoin/bitcoin/pull/22570#issuecomment-888720082,888720082,
DrahtBot,2021-07-29 03:39:44,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #22375 by MarcoFalke\n* #22362 by MarcoFalke\n* #22140 by jonatack\n* #21283 by achow101\n* #20233 by jnewbery\n\nIf you c",https://github.com/bitcoin/bitcoin/pull/22570#issuecomment-888776153,888776153,
practicalswift,2021-07-29 08:41:46,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22570#issuecomment-888925230,888925230,
MarcoFalke,2021-07-29 10:08:59,"> Just to confirm that my understanding is correct: if this is merged now in master, it will be included in 23.0 but not in 22.1, right?\n\nYes, the pull request is to the `master` branch. 22.x is a different branch: https://github.com/bitcoin/bitcoin/tree/22.x",https://github.com/bitcoin/bitcoin/pull/22570#issuecomment-888987556,888987556,
vasild,2021-07-30 08:47:34,"Further cleanup is possible:\n\nhttps://github.com/bitcoin/bitcoin/blob/787296eb6744b15ab693c053e4030ff68dfc95e0/src/test/fuzz/banman.cpp#L55\n\nhttps://github.com/bitcoin/bitcoin/blob/787296eb6744b15ab693c053e4030ff68dfc95e0/src/test/fuzz/banman.cpp#L117",https://github.com/bitcoin/bitcoin/pull/22570#issuecomment-889741474,889741474,
Zero-1729,2021-07-30 09:30:36,re-ACK fa1eddb1a3d1319ddc3643b6f34fe2014de32764,https://github.com/bitcoin/bitcoin/pull/22570#issuecomment-889767013,889767013,
laanwj,2021-08-02 10:43:03,"Not a big fan of the huge whitespace change in the last commit, but otherwise\nconcept and code review ACK fa1eddb1a3d1319ddc3643b6f34fe2014de32764",https://github.com/bitcoin/bitcoin/pull/22570#issuecomment-890923290,890923290,
MarcoFalke,2021-08-02 14:20:41,Release notes for 23.0 added in #22603,https://github.com/bitcoin/bitcoin/pull/22570#issuecomment-891068358,891068358,
MarcoFalke,2021-08-07 08:23:57,Looks like we can re-enable the disabled assert again due to the removal of the code here: #22657 ,https://github.com/bitcoin/bitcoin/pull/22570#issuecomment-894624066,894624066,
fanquake,2021-07-29 00:16:26,`All calls to LogPrintf() and LogPrint() should be terminated with \n`,https://github.com/bitcoin/bitcoin/pull/22570#discussion_r678734212,678734212,src/addrdb.cpp
MarcoFalke,2021-07-29 06:35:52,"Thanks, fixed.",https://github.com/bitcoin/bitcoin/pull/22570#discussion_r678865530,678865530,src/addrdb.cpp
vasild,2021-07-29 07:09:12,"I think this should read 22.0 instead of 23.0 because already in 22.0 we ignore `banlist.dat` if `banlist.json` is present during read and only write to `banlist.json`.\n\n```suggestion\n`banlist.dat`  | Stores the addresses/subnets of banned nodes; superseded by `banlist.json` in 22.0 and completely ignored in 23.0 | [PR #20966](https://github.com/bitcoin/bitcoin/pull/20966), [PR #22570](https",https://github.com/bitcoin/bitcoin/pull/22570#discussion_r678884122,678884122,doc/files.md
vasild,2021-07-29 07:59:25,"The `dirty` argument can be removed.\n\nThere is just one caller of this method and if this method returns `false`, then the caller would ignore the value set in `Read()` and would set the dirty flag to `true` regardless. The only reason for the `dirty` flag was if `Read()` returns `true` and would set `dirty` to `true`. This was done to force json creation if only `banlist.dat` existed and was ",https://github.com/bitcoin/bitcoin/pull/22570#discussion_r678917238,678917238,src/addrdb.cpp
vasild,2021-07-29 08:02:11,"nit:\n\n```suggestion\n        LogPrintf(""%s ignored because it can only be read by "" PACKAGE_NAME "" version 22.x or older. Remove %s to silence this warning.\n"", m_banlist_dat, m_banlist_dat);\n```\n\nOr maybe remove `CBanDB::m_banlist_dat` and hardcode the string `""banlist.dat""` here since it is only used here.",https://github.com/bitcoin/bitcoin/pull/22570#discussion_r678919223,678919223,src/addrdb.cpp
vasild,2021-07-29 09:48:04,"This is the whitespace fixup that was dropped as a standalone change in https://github.com/bitcoin/bitcoin/pull/22562. Here it is combined with some other changes that touch those files.\n\n`netaddress.h` is not fully clang-formatted. Running `clang-format -i netaddress.h` produces the following diff:\n\n<details>\n<summary>format diff</summary>\n\n```diff\ndiff --git i/src/netaddress.h w/",https://github.com/bitcoin/bitcoin/pull/22570#discussion_r679000178,679000178,src/netaddress.h
MarcoFalke,2021-07-29 10:13:22,"I need the full path for `fs::exists(m_banlist_dat)`, so I am going to keep as is for now.",https://github.com/bitcoin/bitcoin/pull/22570#discussion_r679018983,679018983,src/addrdb.cpp
MarcoFalke,2021-07-29 10:16:40,"The `dirty` argument is used to not write the json file again if it was read successfully and nothing needed to be swept. Happy to drop it, as it simplifies and writing the json once per startup shouldn't cost too much.",https://github.com/bitcoin/bitcoin/pull/22570#discussion_r679021220,679021220,src/addrdb.cpp
MarcoFalke,2021-07-29 10:27:23,"Thanks, taken. Couldn't get a scripted-diff working, but happy to take if you find one.",https://github.com/bitcoin/bitcoin/pull/22570#discussion_r679028024,679028024,src/netaddress.h
vasild,2021-07-29 10:28:00,"Yes, since `Read()` does not do any sweeping its return value is enough to tell whether the read was successful or not. Or, in other words - with this PR it is not possible `Read()` to return `true` and set its second argument (`dirty`) to `true`.\n\nSomething like this should work (not tested):\n```diff\ndiff --git i/src/addrdb.cpp w/src/addrdb.cpp\nindex fbffd5c959..c3e224ee83 100644\n--- ",https://github.com/bitcoin/bitcoin/pull/22570#discussion_r679028420,679028420,src/addrdb.cpp
MarcoFalke,2021-07-29 10:44:21,"Thanks, will pick the patch. It is almost correct ðŸ¥²:\n\n\n```\n==4031966== Conditional jump or move depends on uninitialised value(s)\n==4031966==    at 0x46011B: BanMan::DumpBanlist() (banman.cpp:44)\n==4031966==    by 0x45E962: BanMan::BanMan(boost::filesystem::path, CClientUIInterface*, long) (banman.cpp:32)\n==4031966==    by 0x15C119: make_unique<BanMan, boost::filesystem::path, CClien",https://github.com/bitcoin/bitcoin/pull/22570#discussion_r679038691,679038691,src/addrdb.cpp
vasild,2021-07-29 10:50:28,"```\ncommit f8a3771957cb1d4d202cd7e3173edfbbeed2657e\nParent: faaf9e930d94328c6be42516beab817d45d847f1\nAuthor:     Vasil Dimov <vd@FreeBSD.org>\nAuthorDate: Thu Jul 29 12:39:49 2021 +0200\nCommit:     Vasil Dimov <vd@FreeBSD.org>\nCommitDate: Thu Jul 29 12:39:49 2021 +0200\n\n\n    scripted-diff: violate guidelines\n    \n    -BEGIN VERIFY SCRIPT-\n    clang-format -i src/netaddress.h",https://github.com/bitcoin/bitcoin/pull/22570#discussion_r679042528,679042528,src/netaddress.h
vasild,2021-07-29 10:53:31,"Oh, why did you had to run valgrind on this? It was perfectly safe before that...",https://github.com/bitcoin/bitcoin/pull/22570#discussion_r679044442,679044442,src/addrdb.cpp
