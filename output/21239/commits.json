[
  {
    "sha": "c090a3e9238ba2df07875b4708e908d8dca4ed9b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMDkwYTNlOTIzOGJhMmRmMDc4NzViNDcwOGU5MDhkOGRjYTRlZDli",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-01-29T19:26:12Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-05-13T19:41:56Z"
      },
      "message": "Makefile.am: use APP_DIST_DIR instead of hard-coding dist",
      "tree": {
        "sha": "84c55332f516a8c4ba213d95aa890ef169ec7322",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/84c55332f516a8c4ba213d95aa890ef169ec7322"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c090a3e9238ba2df07875b4708e908d8dca4ed9b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c090a3e9238ba2df07875b4708e908d8dca4ed9b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c090a3e9238ba2df07875b4708e908d8dca4ed9b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c090a3e9238ba2df07875b4708e908d8dca4ed9b/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b34bf2b42caaee7c8714c1229e877128916d914a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b34bf2b42caaee7c8714c1229e877128916d914a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b34bf2b42caaee7c8714c1229e877128916d914a"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "d84dab184275708849bdcf03c631650a1a2d8938",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c090a3e9238ba2df07875b4708e908d8dca4ed9b/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c090a3e9238ba2df07875b4708e908d8dca4ed9b/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=c090a3e9238ba2df07875b4708e908d8dca4ed9b",
        "patch": "@@ -149,7 +149,7 @@ $(APP_DIST_DIR)/Applications:\n $(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt\n \n $(OSX_TEMP_ISO): $(APP_DIST_EXTRAS)\n-\t$(XORRISOFS) -D -l -V \"$(OSX_VOLNAME)\" -no-pad -r -dir-mode 0755 -o $@ dist -- $(if $(SOURCE_DATE_EPOCH),-volume_date all_file_dates =$(SOURCE_DATE_EPOCH))\n+\t$(XORRISOFS) -D -l -V \"$(OSX_VOLNAME)\" -no-pad -r -dir-mode 0755 -o $@ $(APP_DIST_DIR) -- $(if $(SOURCE_DATE_EPOCH),-volume_date all_file_dates =$(SOURCE_DATE_EPOCH))\n \n $(OSX_DMG): $(OSX_TEMP_ISO)\n \t$(DMG) dmg \"$<\" \"$@\""
      }
    ]
  },
  {
    "sha": "0a2176d47767972e4cd5ed302c1dbeedece1708b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYTIxNzZkNDc3Njc5NzJlNGNkNWVkMzAyYzFkYmVlZGVjZTE3MDhi",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-02-04T23:58:26Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-05-13T19:41:56Z"
      },
      "message": "guix: Reindent existing manifest.scm",
      "tree": {
        "sha": "f6b6c139af2447f6ae9a79a0e2068923fac9eb4b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f6b6c139af2447f6ae9a79a0e2068923fac9eb4b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0a2176d47767972e4cd5ed302c1dbeedece1708b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a2176d47767972e4cd5ed302c1dbeedece1708b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0a2176d47767972e4cd5ed302c1dbeedece1708b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a2176d47767972e4cd5ed302c1dbeedece1708b/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c090a3e9238ba2df07875b4708e908d8dca4ed9b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c090a3e9238ba2df07875b4708e908d8dca4ed9b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c090a3e9238ba2df07875b4708e908d8dca4ed9b"
      }
    ],
    "stats": {
      "total": 84,
      "additions": 42,
      "deletions": 42
    },
    "files": [
      {
        "sha": "3d9d689e1f81cac996dbc48506c303e82cd10590",
        "filename": "contrib/guix/manifest.scm",
        "status": "modified",
        "additions": 42,
        "deletions": 42,
        "changes": 84,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0a2176d47767972e4cd5ed302c1dbeedece1708b/contrib/guix/manifest.scm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0a2176d47767972e4cd5ed302c1dbeedece1708b/contrib/guix/manifest.scm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/manifest.scm?ref=0a2176d47767972e4cd5ed302c1dbeedece1708b",
        "patch": "@@ -52,28 +52,28 @@ we link against libssp.so, and thus will ensure that this works properly.\n Taken from:\n http://www.linuxfromscratch.org/hlfs/view/development/chapter05/gcc-pass1.html\"\n   (package\n-   (inherit xgcc)\n-   (arguments\n-    (substitute-keyword-arguments (package-arguments xgcc)\n-      ((#:make-flags flags)\n-       `(cons \"gcc_cv_libc_provides_ssp=yes\" ,flags))))))\n+    (inherit xgcc)\n+    (arguments\n+     (substitute-keyword-arguments (package-arguments xgcc)\n+       ((#:make-flags flags)\n+        `(cons \"gcc_cv_libc_provides_ssp=yes\" ,flags))))))\n \n (define (make-gcc-rpath-link xgcc)\n   \"Given a XGCC package, return a modified package that replace each instance of\n -rpath in the default system spec that's inserted by Guix with -rpath-link\"\n   (package\n-   (inherit xgcc)\n-   (arguments\n-    (substitute-keyword-arguments (package-arguments xgcc)\n-      ((#:phases phases)\n-       `(modify-phases ,phases\n-          (add-after 'pre-configure 'replace-rpath-with-rpath-link\n-            (lambda _\n-              (substitute* (cons \"gcc/config/rs6000/sysv4.h\"\n-                                 (find-files \"gcc/config\"\n-                                             \"^gnu-user.*\\\\.h$\"))\n-                ((\"-rpath=\") \"-rpath-link=\"))\n-              #t))))))))\n+    (inherit xgcc)\n+    (arguments\n+     (substitute-keyword-arguments (package-arguments xgcc)\n+       ((#:phases phases)\n+        `(modify-phases ,phases\n+           (add-after 'pre-configure 'replace-rpath-with-rpath-link\n+             (lambda _\n+               (substitute* (cons \"gcc/config/rs6000/sysv4.h\"\n+                                  (find-files \"gcc/config\"\n+                                              \"^gnu-user.*\\\\.h$\"))\n+                 ((\"-rpath=\") \"-rpath-link=\"))\n+               #t))))))))\n \n (define (make-cross-toolchain target\n                               base-gcc-for-libc\n@@ -127,18 +127,18 @@ chain for \" target \" development.\"))\n       (license (package-license xgcc)))))\n \n (define* (make-bitcoin-cross-toolchain target\n-                                  #:key\n-                                  (base-gcc-for-libc gcc-7)\n-                                  (base-kernel-headers linux-libre-headers-5.4)\n-                                  (base-libc glibc)  ; glibc 2.31\n-                                  (base-gcc (make-gcc-rpath-link gcc-8)))\n+                                       #:key\n+                                       (base-gcc-for-libc gcc-7)\n+                                       (base-kernel-headers linux-libre-headers-5.4)\n+                                       (base-libc glibc)  ; glibc 2.31\n+                                       (base-gcc (make-gcc-rpath-link gcc-8)))\n   \"Convenience wrapper around MAKE-CROSS-TOOLCHAIN with default values\n desirable for building Bitcoin Core release binaries.\"\n   (make-cross-toolchain target\n-                   base-gcc-for-libc\n-                   base-kernel-headers\n-                   base-libc\n-                   base-gcc))\n+                        base-gcc-for-libc\n+                        base-kernel-headers\n+                        base-libc\n+                        base-gcc))\n \n (define (make-gcc-with-pthreads gcc)\n   (package-with-extra-configure-variable gcc \"--enable-threads\" \"posix\"))\n@@ -177,22 +177,22 @@ chain for \" target \" development.\"))\n \n (define-public font-tuffy\n   (package\n-   (name \"font-tuffy\")\n-   (version \"20120614\")\n-   (source\n-    (origin\n-     (method url-fetch)\n-     (uri (string-append \"http://tulrich.com/fonts/tuffy-\" version \".tar.gz\"))\n-     (file-name (string-append name \"-\" version \".tar.gz\"))\n-     (sha256\n-      (base32\n-       \"02vf72bgrp30vrbfhxjw82s115z27dwfgnmmzfb0n9wfhxxfpyf6\"))))\n-   (build-system font-build-system)\n-   (home-page \"http://tulrich.com/fonts/\")\n-   (synopsis \"The Tuffy Truetype Font Family\")\n-   (description\n-    \"Thatcher Ulrich's first outline font design. He started with the goal of producing a neutral, readable sans-serif text font. There are lots of \\\"expressive\\\" fonts out there, but he wanted to start with something very plain and clean, something he might want to actually use. \")\n-   (license license:public-domain)))\n+    (name \"font-tuffy\")\n+    (version \"20120614\")\n+    (source\n+     (origin\n+       (method url-fetch)\n+       (uri (string-append \"http://tulrich.com/fonts/tuffy-\" version \".tar.gz\"))\n+       (file-name (string-append name \"-\" version \".tar.gz\"))\n+       (sha256\n+        (base32\n+         \"02vf72bgrp30vrbfhxjw82s115z27dwfgnmmzfb0n9wfhxxfpyf6\"))))\n+    (build-system font-build-system)\n+    (home-page \"http://tulrich.com/fonts/\")\n+    (synopsis \"The Tuffy Truetype Font Family\")\n+    (description\n+     \"Thatcher Ulrich's first outline font design. He started with the goal of producing a neutral, readable sans-serif text font. There are lots of \\\"expressive\\\" fonts out there, but he wanted to start with something very plain and clean, something he might want to actually use. \")\n+    (license license:public-domain)))\n \n (define-public lief\n   (package"
      }
    ]
  },
  {
    "sha": "bac2690e6f683fcedb883fe1d32f3c33c628a141",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYWMyNjkwZTZmNjgzZmNlZGI4ODNmZTFkMzJmM2MzM2M2MjhhMTQx",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-02-05T00:09:02Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-05-13T19:41:56Z"
      },
      "message": "guix: Package codesigning tools",
      "tree": {
        "sha": "d1eeb65c542d548a6a2cb8594b9065783cab42b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d1eeb65c542d548a6a2cb8594b9065783cab42b8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bac2690e6f683fcedb883fe1d32f3c33c628a141",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bac2690e6f683fcedb883fe1d32f3c33c628a141",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bac2690e6f683fcedb883fe1d32f3c33c628a141",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bac2690e6f683fcedb883fe1d32f3c33c628a141/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0a2176d47767972e4cd5ed302c1dbeedece1708b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a2176d47767972e4cd5ed302c1dbeedece1708b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0a2176d47767972e4cd5ed302c1dbeedece1708b"
      }
    ],
    "stats": {
      "total": 353,
      "additions": 351,
      "deletions": 2
    },
    "files": [
      {
        "sha": "27b6ae86aeaedccf1b2a26fbec479f29fb3c6bc9",
        "filename": "contrib/guix/manifest.scm",
        "status": "modified",
        "additions": 338,
        "deletions": 2,
        "changes": 340,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bac2690e6f683fcedb883fe1d32f3c33c628a141/contrib/guix/manifest.scm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bac2690e6f683fcedb883fe1d32f3c33c628a141/contrib/guix/manifest.scm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/manifest.scm?ref=bac2690e6f683fcedb883fe1d32f3c33c628a141",
        "patch": "@@ -4,12 +4,14 @@\n              (gnu packages base)\n              (gnu packages bash)\n              (gnu packages bison)\n+             (gnu packages certs)\n              (gnu packages cdrom)\n              (gnu packages check)\n              (gnu packages cmake)\n              (gnu packages commencement)\n              (gnu packages compression)\n              (gnu packages cross-base)\n+             (gnu packages curl)\n              (gnu packages file)\n              (gnu packages gawk)\n              (gnu packages gcc)\n@@ -23,7 +25,9 @@\n              (gnu packages perl)\n              (gnu packages pkg-config)\n              (gnu packages python)\n+             (gnu packages python-web)\n              (gnu packages shells)\n+             (gnu packages tls)\n              (gnu packages version-control)\n              (guix build-system font)\n              (guix build-system gnu)\n@@ -217,6 +221,337 @@ chain for \" target \" development.\"))\n parse, modify and abstract ELF, PE and MachO formats.\")\n    (license license:asl2.0)))\n \n+(define osslsigncode\n+  (package\n+    (name \"osslsigncode\")\n+    (version \"2.0\")\n+    (source (origin\n+              (method url-fetch)\n+              (uri (string-append \"https://github.com/mtrojnar/\"\n+                                  name \"/archive/\" version \".tar.gz\"))\n+              (sha256\n+               (base32\n+                \"0byri6xny770wwb2nciq44j5071122l14bvv65axdd70nfjf0q2s\"))))\n+    (build-system gnu-build-system)\n+    (native-inputs\n+     `((\"pkg-config\" ,pkg-config)\n+       (\"autoconf\" ,autoconf)\n+       (\"automake\" ,automake)\n+       (\"libtool\" ,libtool)))\n+    (inputs\n+     `((\"openssl\" ,openssl)))\n+    (arguments\n+     `(#:configure-flags\n+       `(\"--without-gsf\"\n+         \"--without-curl\"\n+         \"--disable-dependency-tracking\")))\n+    (home-page \"https://github.com/mtrojnar/osslsigncode\")\n+    (synopsis \"Authenticode signing and timestamping tool\")\n+    (description \"osslsigncode is a small tool that implements part of the\n+functionality of the Microsoft tool signtool.exe - more exactly the Authenticode\n+signing and timestamping. But osslsigncode is based on OpenSSL and cURL, and\n+thus should be able to compile on most platforms where these exist.\")\n+    (license license:gpl3+))) ; license is with openssl exception\n+\n+(define-public python-asn1crypto\n+  (package\n+    (name \"python-asn1crypto\")\n+    (version \"1.4.0\")\n+    (source\n+     (origin\n+       (method git-fetch)\n+       (uri (git-reference\n+             (url \"https://github.com/wbond/asn1crypto\")\n+             (commit version)))\n+       (file-name (git-file-name name version))\n+       (sha256\n+        (base32\n+         \"19abibn6jw20mzi1ln4n9jjvpdka8ygm4m439hplyrdfqbvgm01r\"))))\n+    (build-system python-build-system)\n+    (arguments\n+     '(#:phases\n+       (modify-phases %standard-phases\n+         (replace 'check\n+           (lambda _\n+             (invoke \"python\" \"run.py\" \"tests\"))))))\n+    (home-page \"https://github.com/wbond/asn1crypto\")\n+    (synopsis \"ASN.1 parser and serializer in Python\")\n+    (description \"asn1crypto is an ASN.1 parser and serializer with definitions\n+for private keys, public keys, certificates, CRL, OCSP, CMS, PKCS#3, PKCS#7,\n+PKCS#8, PKCS#12, PKCS#5, X.509 and TSP.\")\n+    (license license:expat)))\n+\n+(define-public python-elfesteem\n+  (let ((commit \"87bbd79ab7e361004c98cc8601d4e5f029fd8bd5\"))\n+    (package\n+      (name \"python-elfesteem\")\n+      (version (git-version \"0.1\" \"1\" commit))\n+      (source\n+       (origin\n+         (method git-fetch)\n+         (uri (git-reference\n+               (url \"https://github.com/LRGH/elfesteem\")\n+               (commit commit)))\n+         (file-name (git-file-name name commit))\n+         (sha256\n+          (base32\n+           \"1nyvjisvyxyxnd0023xjf5846xd03lwawp5pfzr8vrky7wwm5maz\"))))\n+      (build-system python-build-system)\n+      ;; There are no tests, but attempting to run python setup.py test leads to\n+      ;; PYTHONPATH problems, just disable the test\n+      (arguments '(#:tests? #f))\n+      (home-page \"https://github.com/LRGH/elfesteem\")\n+      (synopsis \"ELF/PE/Mach-O parsing library\")\n+      (description \"elfesteem parses ELF, PE and Mach-O files.\")\n+      (license license:lgpl2.1))))\n+\n+(define-public python-oscrypto\n+  (package\n+    (name \"python-oscrypto\")\n+    (version \"1.2.1\")\n+    (source\n+     (origin\n+       (method git-fetch)\n+       (uri (git-reference\n+             (url \"https://github.com/wbond/oscrypto\")\n+             (commit version)))\n+       (file-name (git-file-name name version))\n+       (sha256\n+        (base32\n+         \"1d4d8s4z340qhvb3g5m5v3436y3a71yc26wk4749q64m09kxqc3l\"))\n+       (patches (search-our-patches \"oscrypto-hard-code-openssl.patch\"))))\n+    (build-system python-build-system)\n+    (native-search-paths\n+     (list (search-path-specification\n+            (variable \"SSL_CERT_FILE\")\n+            (file-type 'regular)\n+            (separator #f)                ;single entry\n+            (files '(\"etc/ssl/certs/ca-certificates.crt\")))))\n+\n+    (propagated-inputs\n+     `((\"python-asn1crypto\" ,python-asn1crypto)\n+       (\"openssl\" ,openssl)))\n+    (arguments\n+     `(#:phases\n+       (modify-phases %standard-phases\n+         (add-after 'unpack 'hard-code-path-to-libscrypt\n+           (lambda* (#:key inputs #:allow-other-keys)\n+             (let ((openssl (assoc-ref inputs \"openssl\")))\n+               (substitute* \"oscrypto/__init__.py\"\n+                 ((\"@GUIX_OSCRYPTO_USE_OPENSSL@\")\n+                  (string-append openssl \"/lib/libcrypto.so\" \",\" openssl \"/lib/libssl.so\")))\n+               #t)))\n+         (add-after 'unpack 'disable-broken-tests\n+           (lambda _\n+             ;; This test is broken as there is no keyboard interrupt.\n+             (substitute* \"tests/test_trust_list.py\"\n+               ((\"^(.*)class TrustListTests\" line indent)\n+                (string-append indent\n+                               \"@unittest.skip(\\\"Disabled by Guix\\\")\\n\"\n+                               line)))\n+             (substitute* \"tests/test_tls.py\"\n+               ((\"^(.*)class TLSTests\" line indent)\n+                (string-append indent\n+                               \"@unittest.skip(\\\"Disabled by Guix\\\")\\n\"\n+                               line)))\n+             #t))\n+         (replace 'check\n+           (lambda _\n+             (invoke \"python\" \"run.py\" \"tests\")\n+             #t)))))\n+    (home-page \"https://github.com/wbond/oscrypto\")\n+    (synopsis \"Compiler-free Python crypto library backed by the OS\")\n+    (description \"oscrypto is a compilation-free, always up-to-date encryption library for Python.\")\n+    (license license:expat)))\n+\n+(define-public python-oscryptotests\n+  (package (inherit python-oscrypto)\n+    (name \"python-oscryptotests\")\n+    (arguments\n+     `(#:tests? #f\n+       #:phases\n+       (modify-phases %standard-phases\n+         (add-after 'unpack 'hard-code-path-to-libscrypt\n+           (lambda* (#:key inputs #:allow-other-keys)\n+             (chdir \"tests\")\n+             #t)))))))\n+\n+(define-public python-certvalidator\n+  (let ((commit \"e5bdb4bfcaa09fa0af355eb8867d00dfeecba08c\"))\n+    (package\n+      (name \"python-certvalidator\")\n+      (version (git-version \"0.1\" \"1\" commit))\n+      (source\n+       (origin\n+         (method git-fetch)\n+         (uri (git-reference\n+               (url \"https://github.com/achow101/certvalidator\")\n+               (commit commit)))\n+         (file-name (git-file-name name commit))\n+         (sha256\n+          (base32\n+           \"18pvxkvpkfkzgvfylv0kx65pmxfcv1hpsg03cip93krfvrrl4c75\"))))\n+      (build-system python-build-system)\n+      (propagated-inputs\n+       `((\"python-asn1crypto\" ,python-asn1crypto)\n+         (\"python-oscrypto\" ,python-oscrypto)\n+         (\"python-oscryptotests\", python-oscryptotests))) ;; certvalidator tests import oscryptotests\n+      (arguments\n+       `(#:phases\n+         (modify-phases %standard-phases\n+           (add-after 'unpack 'disable-broken-tests\n+             (lambda _\n+               (substitute* \"tests/test_certificate_validator.py\"\n+                 ((\"^(.*)class CertificateValidatorTests\" line indent)\n+                  (string-append indent\n+                                 \"@unittest.skip(\\\"Disabled by Guix\\\")\\n\"\n+                                 line)))\n+               (substitute* \"tests/test_crl_client.py\"\n+                 ((\"^(.*)def test_fetch_crl\" line indent)\n+                  (string-append indent\n+                                 \"@unittest.skip(\\\"Disabled by Guix\\\")\\n\"\n+                                 line)))\n+               (substitute* \"tests/test_ocsp_client.py\"\n+                 ((\"^(.*)def test_fetch_ocsp\" line indent)\n+                  (string-append indent\n+                                 \"@unittest.skip(\\\"Disabled by Guix\\\")\\n\"\n+                                 line)))\n+               (substitute* \"tests/test_registry.py\"\n+                 ((\"^(.*)def test_build_paths\" line indent)\n+                  (string-append indent\n+                                 \"@unittest.skip(\\\"Disabled by Guix\\\")\\n\"\n+                                 line)))\n+               (substitute* \"tests/test_validate.py\"\n+                 ((\"^(.*)def test_revocation_mode_hard\" line indent)\n+                  (string-append indent\n+                                 \"@unittest.skip(\\\"Disabled by Guix\\\")\\n\"\n+                                 line)))\n+               #t))\n+           (replace 'check\n+             (lambda _\n+               (invoke \"python\" \"run.py\" \"tests\")\n+               #t)))))\n+      (home-page \"https://github.com/wbond/certvalidator\")\n+      (synopsis \"Python library for validating X.509 certificates and paths\")\n+      (description \"certvalidator is a Python library for validating X.509\n+certificates or paths. Supports various options, including: validation at a\n+specific moment in time, whitelisting and revocation checks.\")\n+      (license license:expat))))\n+\n+(define-public python-requests-2.25.1\n+  (package (inherit python-requests)\n+    (version \"2.25.1\")\n+    (source (origin\n+              (method url-fetch)\n+              (uri (pypi-uri \"requests\" version))\n+              (sha256\n+               (base32\n+                \"015qflyqsgsz09gnar69s6ga74ivq5kch69s4qxz3904m7a3v5r7\"))))))\n+\n+(define-public python-altgraph\n+  (package\n+    (name \"python-altgraph\")\n+    (version \"0.17\")\n+    (source\n+     (origin\n+       (method git-fetch)\n+       (uri (git-reference\n+             (url \"https://github.com/ronaldoussoren/altgraph\")\n+             (commit (string-append \"v\" version))))\n+       (file-name (git-file-name name version))\n+       (sha256\n+        (base32\n+         \"09sm4srvvkw458pn48ga9q7ykr4xlz7q8gh1h9w7nxpf001qgpwb\"))))\n+    (build-system python-build-system)\n+    (home-page \"https://github.com/ronaldoussoren/altgraph\")\n+    (synopsis \"Python graph (network) package\")\n+    (description \"altgraph is a fork of graphlib: a graph (network) package for\n+constructing graphs, BFS and DFS traversals, topological sort, shortest paths,\n+etc. with graphviz output.\")\n+    (license license:expat)))\n+\n+\n+(define-public python-macholib\n+  (package\n+    (name \"python-macholib\")\n+    (version \"1.14\")\n+    (source\n+     (origin\n+       (method git-fetch)\n+       (uri (git-reference\n+             (url \"https://github.com/ronaldoussoren/macholib\")\n+             (commit (string-append \"v\" version))))\n+       (file-name (git-file-name name version))\n+       (sha256\n+        (base32\n+         \"0aislnnfsza9wl4f0vp45ivzlc0pzhp9d4r08700slrypn5flg42\"))))\n+    (build-system python-build-system)\n+    (propagated-inputs\n+     `((\"python-altgraph\" ,python-altgraph)))\n+    (arguments\n+     '(#:phases\n+       (modify-phases %standard-phases\n+         (add-after 'unpack 'disable-broken-tests\n+           (lambda _\n+             ;; This test is broken as there is no keyboard interrupt.\n+             (substitute* \"macholib_tests/test_command_line.py\"\n+               ((\"^(.*)class TestCmdLine\" line indent)\n+                (string-append indent\n+                               \"@unittest.skip(\\\"Disabled by Guix\\\")\\n\"\n+                               line)))\n+             (substitute* \"macholib_tests/test_dyld.py\"\n+               ((\"^(.*)def test_\\\\S+_find\" line indent)\n+                (string-append indent\n+                               \"@unittest.skip(\\\"Disabled by Guix\\\")\\n\"\n+                               line))\n+               ((\"^(.*)def testBasic\" line indent)\n+                (string-append indent\n+                               \"@unittest.skip(\\\"Disabled by Guix\\\")\\n\"\n+                               line))\n+               )\n+             #t)))))\n+    (home-page \"https://github.com/ronaldoussoren/macholib\")\n+    (synopsis \"Python library for analyzing and editing Mach-O headers\")\n+    (description \"macholib is a Macho-O header analyzer and editor. It's\n+typically used as a dependency analysis tool, and also to rewrite dylib\n+references in Mach-O headers to be @executable_path relative. Though this tool\n+targets a platform specific file format, it is pure python code that is platform\n+and endian independent.\")\n+    (license license:expat)))\n+\n+(define-public python-signapple\n+  (let ((commit \"4ff1c1754e37042c002a3f6375c47fd931f2030b\"))\n+    (package\n+      (name \"python-signapple\")\n+      (version (git-version \"0.1\" \"1\" commit))\n+      (source\n+       (origin\n+         (method git-fetch)\n+         (uri (git-reference\n+               (url \"https://github.com/dongcarl/signapple\")\n+               (commit commit)))\n+         (file-name (git-file-name name commit))\n+         (sha256\n+          (base32\n+           \"043czyzfm04rcx5xsp59vsppla3vm5g45dbp1npy2hww4066rlnh\"))))\n+      (build-system python-build-system)\n+      (propagated-inputs\n+       `((\"python-asn1crypto\" ,python-asn1crypto)\n+         (\"python-oscrypto\" ,python-oscrypto)\n+         (\"python-certvalidator\" ,python-certvalidator)\n+         (\"python-elfesteem\" ,python-elfesteem)\n+         (\"python-requests\" ,python-requests-2.25.1)\n+         (\"python-macholib\" ,python-macholib)\n+         (\"libcrypto\" ,openssl)))\n+      ;; There are no tests, but attempting to run python setup.py test leads to\n+      ;; problems, just disable the test\n+      (arguments '(#:tests? #f))\n+      (home-page \"https://github.com/achow101/signapple\")\n+      (synopsis \"Mach-O binary signature tool\")\n+      (description \"signapple is a Python tool for creating, verifying, and\n+inspecting signatures in Mach-O binaries.\")\n+      (license license:expat))))\n+\n (packages->manifest\n  (append\n   (list ;; The Basics\n@@ -262,9 +597,10 @@ parse, modify and abstract ELF, PE and MachO formats.\")\n            ;; Windows\n            (list zip\n                  (make-mingw-pthreads-cross-toolchain \"x86_64-w64-mingw32\")\n-                 (make-nsis-with-sde-support nsis-x86_64)))\n+                 (make-nsis-with-sde-support nsis-x86_64)\n+                 osslsigncode))\n           ((string-contains target \"-linux-\")\n            (list (make-bitcoin-cross-toolchain target)))\n           ((string-contains target \"darwin\")\n-           (list clang-toolchain-10 binutils imagemagick libtiff librsvg font-tuffy cmake xorriso))\n+           (list clang-toolchain-10 binutils imagemagick libtiff librsvg font-tuffy cmake xorriso python-signapple))\n           (else '())))))"
      },
      {
        "sha": "32027f2d09af17199011cd04a6db62e0a92cdcfc",
        "filename": "contrib/guix/patches/oscrypto-hard-code-openssl.patch",
        "status": "added",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bac2690e6f683fcedb883fe1d32f3c33c628a141/contrib/guix/patches/oscrypto-hard-code-openssl.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bac2690e6f683fcedb883fe1d32f3c33c628a141/contrib/guix/patches/oscrypto-hard-code-openssl.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/patches/oscrypto-hard-code-openssl.patch?ref=bac2690e6f683fcedb883fe1d32f3c33c628a141",
        "patch": "@@ -0,0 +1,13 @@\n+diff --git a/oscrypto/__init__.py b/oscrypto/__init__.py\n+index eb27313..371ab24 100644\n+--- a/oscrypto/__init__.py\n++++ b/oscrypto/__init__.py\n+@@ -302,3 +302,8 @@ def load_order():\n+         'oscrypto._win.tls',\n+         'oscrypto.tls',\n+     ]\n++\n++\n++paths = '@GUIX_OSCRYPTO_USE_OPENSSL@'.split(',')\n++assert len(paths) == 2, 'Value for OSCRYPTO_USE_OPENSSL env var must be two paths separated by a comma'\n++use_openssl(*paths)"
      }
    ]
  },
  {
    "sha": "38eb91eb0616ed6dbe34c23e11588d130fef07f8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOGViOTFlYjA2MTZlZDZkYmUzNGMyM2UxMTU4OGQxMzBmZWYwN2Y4",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-02-05T00:09:48Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-05-13T19:41:56Z"
      },
      "message": "guix: Add codesigning functionality",
      "tree": {
        "sha": "869218b5fc6ba22433d22398d7be8e79d0ccf6f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/869218b5fc6ba22433d22398d7be8e79d0ccf6f5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/38eb91eb0616ed6dbe34c23e11588d130fef07f8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38eb91eb0616ed6dbe34c23e11588d130fef07f8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/38eb91eb0616ed6dbe34c23e11588d130fef07f8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38eb91eb0616ed6dbe34c23e11588d130fef07f8/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bac2690e6f683fcedb883fe1d32f3c33c628a141",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bac2690e6f683fcedb883fe1d32f3c33c628a141",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bac2690e6f683fcedb883fe1d32f3c33c628a141"
      }
    ],
    "stats": {
      "total": 505,
      "additions": 500,
      "deletions": 5
    },
    "files": [
      {
        "sha": "69c244a6fa302799af93ab89f85bb5d62e5c0b5e",
        "filename": "contrib/guix/guix-build",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/38eb91eb0616ed6dbe34c23e11588d130fef07f8/contrib/guix/guix-build",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/38eb91eb0616ed6dbe34c23e11588d130fef07f8/contrib/guix/guix-build",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/guix-build?ref=38eb91eb0616ed6dbe34c23e11588d130fef07f8",
        "patch": "@@ -267,20 +267,20 @@ for host in $HOSTS; do\n     make -C \"${PWD}/depends\" -j\"$JOBS\" download-\"$(host_to_commonname \"$host\")\" ${V:+V=1} ${SOURCES_PATH:+SOURCES_PATH=\"$SOURCES_PATH\"}\n done\n \n-# Usage: outdir_for_host HOST\n+# Usage: outdir_for_host HOST SUFFIX\n #\n #   HOST: The current platform triple we're building for\n #\n outdir_for_host() {\n-    echo \"${OUTDIR_BASE}/${1}\"\n+    echo \"${OUTDIR_BASE}/${1}${2:+-${2}}\"\n }\n \n-# Usage: profiledir_for_host HOST COMMAND\n+# Usage: profiledir_for_host HOST SUFFIX\n #\n #   HOST: The current platform triple we're building for\n #\n profiledir_for_host() {\n-    echo \"${PROFILES_BASE}/${2}-${1}\"\n+    echo \"${PROFILES_BASE}/${1}${2:+-${2}}\"\n }\n \n \n@@ -412,7 +412,7 @@ EOF\n                                  --keep-failed \\\n                                  --fallback \\\n                                  --link-profile \\\n-                                 --root=\"$(profiledir_for_host \"${HOST}\" build)\" \\\n+                                 --root=\"$(profiledir_for_host \"${HOST}\")\" \\\n                                  ${SUBSTITUTE_URLS:+--substitute-urls=\"$SUBSTITUTE_URLS\"} \\\n                                  ${ADDITIONAL_GUIX_COMMON_FLAGS} ${ADDITIONAL_GUIX_ENVIRONMENT_FLAGS} \\\n                                  -- env HOST=\"$host\" \\"
      },
      {
        "sha": "62853dbf4da888022555cc0d9baa8ed3cd3ee0f1",
        "filename": "contrib/guix/guix-codesign",
        "status": "added",
        "additions": 392,
        "deletions": 0,
        "changes": 392,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/38eb91eb0616ed6dbe34c23e11588d130fef07f8/contrib/guix/guix-codesign",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/38eb91eb0616ed6dbe34c23e11588d130fef07f8/contrib/guix/guix-codesign",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/guix-codesign?ref=38eb91eb0616ed6dbe34c23e11588d130fef07f8",
        "patch": "@@ -0,0 +1,392 @@\n+#!/usr/bin/env bash\n+export LC_ALL=C\n+set -e -o pipefail\n+\n+# Source the common prelude, which:\n+#   1. Checks if we're at the top directory of the Bitcoin Core repository\n+#   2. Defines a few common functions and variables\n+#\n+# shellcheck source=libexec/prelude.bash\n+source \"$(dirname \"${BASH_SOURCE[0]}\")/libexec/prelude.bash\"\n+\n+\n+###################\n+## SANITY CHECKS ##\n+###################\n+\n+################\n+# Required non-builtin commands should be invocable\n+################\n+\n+check_tools cat mkdir git guix\n+\n+################\n+# Required env vars should be non-empty\n+################\n+\n+cmd_usage() {\n+    cat <<EOF\n+Synopsis:\n+\n+    env DETACHED_SIGS_REPO=<path/to/bitcoin-detached-sigs> \\\\\n+      ./contrib/guix/guix-codesign\n+\n+EOF\n+}\n+\n+if [ -z \"$DETACHED_SIGS_REPO\" ]; then\n+    cmd_usage\n+    exit 1\n+fi\n+\n+################\n+# GUIX_BUILD_OPTIONS should be empty\n+################\n+#\n+# GUIX_BUILD_OPTIONS is an environment variable recognized by guix commands that\n+# can perform builds. This seems like what we want instead of\n+# ADDITIONAL_GUIX_COMMON_FLAGS, but the value of GUIX_BUILD_OPTIONS is actually\n+# _appended_ to normal command-line options. Meaning that they will take\n+# precedence over the command-specific ADDITIONAL_GUIX_<CMD>_FLAGS.\n+#\n+# This seems like a poor user experience. Thus we check for GUIX_BUILD_OPTIONS's\n+# existence here and direct users of this script to use our (more flexible)\n+# custom environment variables.\n+if [ -n \"$GUIX_BUILD_OPTIONS\" ]; then\n+cat << EOF\n+Error: Environment variable GUIX_BUILD_OPTIONS is not empty:\n+  '$GUIX_BUILD_OPTIONS'\n+\n+Unfortunately this script is incompatible with GUIX_BUILD_OPTIONS, please unset\n+GUIX_BUILD_OPTIONS and use ADDITIONAL_GUIX_COMMON_FLAGS to set build options\n+across guix commands or ADDITIONAL_GUIX_<CMD>_FLAGS to set build options for a\n+specific guix command.\n+\n+See contrib/guix/README.md for more details.\n+EOF\n+exit 1\n+fi\n+\n+################\n+# The codesignature git worktree should not be dirty\n+################\n+\n+if ! git -C \"$DETACHED_SIGS_REPO\" diff-index --quiet HEAD -- && [ -z \"$FORCE_DIRTY_WORKTREE\" ]; then\n+    cat << EOF\n+ERR: The DETACHED CODESIGNATURE git worktree is dirty, which may lead to broken builds.\n+\n+     Aborting...\n+\n+Hint: To make your git worktree clean, You may want to:\n+      1. Commit your changes,\n+      2. Stash your changes, or\n+      3. Set the 'FORCE_DIRTY_WORKTREE' environment variable if you insist on\n+         using a dirty worktree\n+EOF\n+    exit 1\n+fi\n+\n+################\n+# Build directories should not exist\n+################\n+\n+# Default to building for all supported HOSTs (overridable by environment)\n+export HOSTS=\"${HOSTS:-x86_64-w64-mingw32 x86_64-apple-darwin18}\"\n+\n+# Usage: distsrc_for_host HOST\n+#\n+#   HOST: The current platform triple we're building for\n+#\n+distsrc_for_host() {\n+    echo \"${DISTSRC_BASE}/distsrc-${VERSION}-${1}-codesigned\"\n+}\n+\n+# Accumulate a list of build directories that already exist...\n+hosts_distsrc_exists=\"\"\n+for host in $HOSTS; do\n+    if [ -e \"$(distsrc_for_host \"$host\")\" ]; then\n+        hosts_distsrc_exists+=\" ${host}\"\n+    fi\n+done\n+\n+if [ -n \"$hosts_distsrc_exists\" ]; then\n+# ...so that we can print them out nicely in an error message\n+cat << EOF\n+ERR: Build directories for this commit already exist for the following platform\n+     triples you're attempting to build, probably because of previous builds.\n+     Please remove, or otherwise deal with them prior to starting another build.\n+\n+     Aborting...\n+\n+Hint: To blow everything away, you may want to use:\n+\n+  $ ./contrib/guix/guix-clean\n+\n+Specifically, this will remove all files without an entry in the index,\n+excluding the SDK directory, the depends download cache, the depends built\n+packages cache, the garbage collector roots for Guix environments, and the\n+output directory.\n+EOF\n+for host in $hosts_distsrc_exists; do\n+    echo \"     ${host} '$(distsrc_for_host \"$host\")'\"\n+done\n+exit 1\n+else\n+    mkdir -p \"$DISTSRC_BASE\"\n+fi\n+\n+\n+################\n+# Unsigned tarballs SHOULD exist\n+################\n+\n+# Usage: outdir_for_host HOST SUFFIX\n+#\n+#   HOST: The current platform triple we're building for\n+#\n+outdir_for_host() {\n+    echo \"${OUTDIR_BASE}/${1}${2:+-${2}}\"\n+}\n+\n+\n+unsigned_tarball_for_host() {\n+    case \"$1\" in\n+        *mingw*)\n+            echo \"$(outdir_for_host \"$1\")/${DISTNAME}-win-unsigned.tar.gz\"\n+            ;;\n+        *darwin*)\n+            echo \"$(outdir_for_host \"$1\")/${DISTNAME}-osx-unsigned.tar.gz\"\n+            ;;\n+        *)\n+            exit 1\n+            ;;\n+    esac\n+}\n+\n+# Accumulate a list of build directories that already exist...\n+hosts_unsigned_tarball_missing=\"\"\n+for host in $HOSTS; do\n+    if [ ! -e \"$(unsigned_tarball_for_host \"$host\")\" ]; then\n+        hosts_unsigned_tarball_missing+=\" ${host}\"\n+    fi\n+done\n+\n+if [ -n \"$hosts_unsigned_tarball_missing\" ]; then\n+    # ...so that we can print them out nicely in an error message\n+    cat << EOF\n+ERR: Unsigned tarballs do not exist\n+...\n+\n+EOF\n+for host in $hosts_unsigned_tarball_missing; do\n+    echo \"     ${host} '$(unsigned_tarball_for_host \"$host\")'\"\n+done\n+exit 1\n+fi\n+\n+################\n+# Check that we can connect to the guix-daemon\n+################\n+\n+cat << EOF\n+Checking that we can connect to the guix-daemon...\n+\n+Hint: If this hangs, you may want to try turning your guix-daemon off and on\n+      again.\n+\n+EOF\n+if ! guix gc --list-failures > /dev/null; then\n+    cat << EOF\n+\n+ERR: Failed to connect to the guix-daemon, please ensure that one is running and\n+     reachable.\n+EOF\n+    exit 1\n+fi\n+\n+# Developer note: we could use `guix repl` for this check and run:\n+#\n+#     (import (guix store)) (close-connection (open-connection))\n+#\n+# However, the internal API is likely to change more than the CLI invocation\n+\n+\n+#########\n+# SETUP #\n+#########\n+\n+# Determine the maximum number of jobs to run simultaneously (overridable by\n+# environment)\n+JOBS=\"${JOBS:-$(nproc)}\"\n+\n+# Determine the reference time used for determinism (overridable by environment)\n+SOURCE_DATE_EPOCH=\"${SOURCE_DATE_EPOCH:-$(git log --format=%at -1)}\"\n+\n+# Execute \"$@\" in a pinned, possibly older version of Guix, for reproducibility\n+# across time.\n+time-machine() {\n+    # shellcheck disable=SC2086\n+    guix time-machine --url=https://github.com/dongcarl/guix.git \\\n+         --commit=490e39ff303f4f6873a04bfb8253755bdae1b29c \\\n+         --cores=\"$JOBS\" \\\n+         --keep-failed \\\n+         --fallback \\\n+         ${SUBSTITUTE_URLS:+--substitute-urls=\"$SUBSTITUTE_URLS\"} \\\n+         ${ADDITIONAL_GUIX_COMMON_FLAGS} ${ADDITIONAL_GUIX_TIMEMACHINE_FLAGS} \\\n+         -- \"$@\"\n+}\n+\n+# Make sure an output directory exists for our builds\n+OUTDIR_BASE=\"${OUTDIR_BASE:-${VERSION_BASE}/output}\"\n+mkdir -p \"$OUTDIR_BASE\"\n+\n+# Usage: profiledir_for_host HOST SUFFIX\n+#\n+#   HOST: The current platform triple we're building for\n+#\n+profiledir_for_host() {\n+    echo \"${PROFILES_BASE}/${1}${2:+-${2}}\"\n+}\n+\n+#########\n+# BUILD #\n+#########\n+\n+# Function to be called when codesigning for host ${1} and the user interrupts\n+# the codesign\n+int_trap() {\n+cat << EOF\n+** INT received while codesigning ${1}, you may want to clean up the relevant\n+   work directories (e.g. distsrc-*) before recodesigning\n+\n+Hint: To blow everything away, you may want to use:\n+\n+  $ ./contrib/guix/guix-clean\n+\n+Specifically, this will remove all files without an entry in the index,\n+excluding the SDK directory, the depends download cache, the depends built\n+packages cache, the garbage collector roots for Guix environments, and the\n+output directory.\n+EOF\n+}\n+\n+# Deterministically build Bitcoin Core\n+# shellcheck disable=SC2153\n+for host in $HOSTS; do\n+\n+    # Display proper warning when the user interrupts the build\n+    trap 'int_trap ${host}' INT\n+\n+    (\n+        # Required for 'contrib/guix/manifest.scm' to output the right manifest\n+        # for the particular $HOST we're building for\n+        export HOST=\"$host\"\n+\n+        # shellcheck disable=SC2030\n+cat << EOF\n+INFO: Codesigning ${VERSION:?not set} for platform triple ${HOST:?not set}:\n+      ...using reference timestamp: ${SOURCE_DATE_EPOCH:?not set}\n+      ...from worktree directory: '${PWD}'\n+          ...bind-mounted in container to: '/bitcoin'\n+      ...in build directory: '$(distsrc_for_host \"$HOST\")'\n+          ...bind-mounted in container to: '$(DISTSRC_BASE=/distsrc-base && distsrc_for_host \"$HOST\")'\n+      ...outputting in: '$(outdir_for_host \"$HOST\" codesigned)'\n+          ...bind-mounted in container to: '$(OUTDIR_BASE=/outdir-base && outdir_for_host \"$HOST\" codesigned)'\n+      ...using detached signatures in: '${DETACHED_SIGS_REPO:?not set}'\n+          ...bind-mounted in container to: '/detached-sigs'\n+EOF\n+\n+\n+        # Run the build script 'contrib/guix/libexec/build.sh' in the build\n+        # container specified by 'contrib/guix/manifest.scm'.\n+        #\n+        # Explanation of `guix environment` flags:\n+        #\n+        #   --container        run command within an isolated container\n+        #\n+        #     Running in an isolated container minimizes build-time differences\n+        #     between machines and improves reproducibility\n+        #\n+        #   --pure             unset existing environment variables\n+        #\n+        #     Same rationale as --container\n+        #\n+        #   --no-cwd           do not share current working directory with an\n+        #                      isolated container\n+        #\n+        #     When --container is specified, the default behavior is to share\n+        #     the current working directory with the isolated container at the\n+        #     same exact path (e.g. mapping '/home/satoshi/bitcoin/' to\n+        #     '/home/satoshi/bitcoin/'). This means that the $PWD inside the\n+        #     container becomes a source of irreproducibility. --no-cwd disables\n+        #     this behaviour.\n+        #\n+        #   --share=SPEC       for containers, share writable host file system\n+        #                      according to SPEC\n+        #\n+        #   --share=\"$PWD\"=/bitcoin\n+        #\n+        #                     maps our current working directory to /bitcoin\n+        #                     inside the isolated container, which we later cd\n+        #                     into.\n+        #\n+        #     While we don't want to map our current working directory to the\n+        #     same exact path (as this introduces irreproducibility), we do want\n+        #     it to be at a _fixed_ path _somewhere_ inside the isolated\n+        #     container so that we have something to build. '/bitcoin' was\n+        #     chosen arbitrarily.\n+        #\n+        #   ${SOURCES_PATH:+--share=\"$SOURCES_PATH\"}\n+        #\n+        #                     make the downloaded depends sources path available\n+        #                     inside the isolated container\n+        #\n+        #     The isolated container has no network access as it's in a\n+        #     different network namespace from the main machine, so we have to\n+        #     make the downloaded depends sources available to it. The sources\n+        #     should have been downloaded prior to this invocation.\n+        #\n+        #  ${SUBSTITUTE_URLS:+--substitute-urls=\"$SUBSTITUTE_URLS\"}\n+        #\n+        #                     fetch substitute from SUBSTITUTE_URLS if they are\n+        #                     authorized\n+        #\n+        #    Depending on the user's security model, it may be desirable to use\n+        #    substitutes (pre-built packages) from servers that the user trusts.\n+        #    Please read the README.md in the same directory as this file for\n+        #    more information.\n+        #\n+        # shellcheck disable=SC2086,SC2031\n+        time-machine environment --manifest=\"${PWD}/contrib/guix/manifest.scm\" \\\n+                                 --container \\\n+                                 --pure \\\n+                                 --no-cwd \\\n+                                 --share=\"$PWD\"=/bitcoin \\\n+                                 --share=\"$DISTSRC_BASE\"=/distsrc-base \\\n+                                 --share=\"$OUTDIR_BASE\"=/outdir-base \\\n+                                 --share=\"$DETACHED_SIGS_REPO\"=/detached-sigs \\\n+                                 --expose=\"$(git rev-parse --git-common-dir)\" \\\n+                                 --expose=\"$(git -C \"$DETACHED_SIGS_REPO\" rev-parse --git-common-dir)\" \\\n+                                 ${SOURCES_PATH:+--share=\"$SOURCES_PATH\"} \\\n+                                 --cores=\"$JOBS\" \\\n+                                 --keep-failed \\\n+                                 --fallback \\\n+                                 --link-profile \\\n+                                 --root=\"$(profiledir_for_host \"${HOST}\" codesigned)\" \\\n+                                 ${SUBSTITUTE_URLS:+--substitute-urls=\"$SUBSTITUTE_URLS\"} \\\n+                                 ${ADDITIONAL_GUIX_COMMON_FLAGS} ${ADDITIONAL_GUIX_ENVIRONMENT_FLAGS} \\\n+                                 -- env HOST=\"$host\" \\\n+                                        DISTNAME=\"$DISTNAME\" \\\n+                                        JOBS=\"$JOBS\" \\\n+                                        SOURCE_DATE_EPOCH=\"${SOURCE_DATE_EPOCH:?unable to determine value}\" \\\n+                                        ${V:+V=1} \\\n+                                        ${SOURCES_PATH:+SOURCES_PATH=\"$SOURCES_PATH\"} \\\n+                                        DISTSRC=\"$(DISTSRC_BASE=/distsrc-base && distsrc_for_host \"$HOST\")\" \\\n+                                        OUTDIR=\"$(OUTDIR_BASE=/outdir-base && outdir_for_host \"$HOST\" codesigned)\" \\\n+                                        DIST_ARCHIVE_BASE=/outdir-base/dist-archive \\\n+                                        DETACHED_SIGS_REPO=/detached-sigs \\\n+                                        UNSIGNED_TARBALL=\"$(OUTDIR_BASE=/outdir-base && unsigned_tarball_for_host \"$HOST\")\" \\\n+                                      bash -c \"cd /bitcoin && bash contrib/guix/libexec/codesign.sh\"\n+    )\n+\n+done"
      },
      {
        "sha": "46b42a571274bdbba719469de665a4aa31ea38c6",
        "filename": "contrib/guix/libexec/codesign.sh",
        "status": "added",
        "additions": 103,
        "deletions": 0,
        "changes": 103,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/38eb91eb0616ed6dbe34c23e11588d130fef07f8/contrib/guix/libexec/codesign.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/38eb91eb0616ed6dbe34c23e11588d130fef07f8/contrib/guix/libexec/codesign.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/libexec/codesign.sh?ref=38eb91eb0616ed6dbe34c23e11588d130fef07f8",
        "patch": "@@ -0,0 +1,103 @@\n+#!/usr/bin/env bash\n+export LC_ALL=C\n+set -e -o pipefail\n+export TZ=UTC\n+\n+# Although Guix _does_ set umask when building its own packages (in our case,\n+# this is all packages in manifest.scm), it does not set it for `guix\n+# environment`. It does make sense for at least `guix environment --container`\n+# to set umask, so if that change gets merged upstream and we bump the\n+# time-machine to a commit which includes the aforementioned change, we can\n+# remove this line.\n+#\n+# This line should be placed before any commands which creates files.\n+umask 0022\n+\n+if [ -n \"$V\" ]; then\n+    # Print both unexpanded (-v) and expanded (-x) forms of commands as they are\n+    # read from this file.\n+    set -vx\n+    # Set VERBOSE for CMake-based builds\n+    export VERBOSE=\"$V\"\n+fi\n+\n+# Check that required environment variables are set\n+cat << EOF\n+Required environment variables as seen inside the container:\n+    UNSIGNED_TARBALL: ${UNSIGNED_TARBALL:?not set}\n+    DETACHED_SIGS_REPO: ${DETACHED_SIGS_REPO:?not set}\n+    DIST_ARCHIVE_BASE: ${DIST_ARCHIVE_BASE:?not set}\n+    DISTNAME: ${DISTNAME:?not set}\n+    HOST: ${HOST:?not set}\n+    SOURCE_DATE_EPOCH: ${SOURCE_DATE_EPOCH:?not set}\n+    DISTSRC: ${DISTSRC:?not set}\n+    OUTDIR: ${OUTDIR:?not set}\n+EOF\n+\n+ACTUAL_OUTDIR=\"${OUTDIR}\"\n+OUTDIR=\"${DISTSRC}/output\"\n+\n+git_head_version() {\n+    local recent_tag\n+    if recent_tag=\"$(git -C \"$1\" describe --exact-match HEAD 2> /dev/null)\"; then\n+        echo \"${recent_tag#v}\"\n+    else\n+        git -C \"$1\" rev-parse --short=12 HEAD\n+    fi\n+}\n+\n+CODESIGNATURE_GIT_ARCHIVE=\"${DIST_ARCHIVE_BASE}/${DISTNAME}-codesignatures-$(git_head_version \"$DETACHED_SIGS_REPO\").tar.gz\"\n+\n+# Create the codesignature tarball if not already there\n+if [ ! -e \"$CODESIGNATURE_GIT_ARCHIVE\" ]; then\n+    mkdir -p \"$(dirname \"$CODESIGNATURE_GIT_ARCHIVE\")\"\n+    git -C \"$DETACHED_SIGS_REPO\" archive --output=\"$CODESIGNATURE_GIT_ARCHIVE\" HEAD\n+fi\n+\n+mkdir -p \"$OUTDIR\"\n+cat << EOF > \"$OUTDIR\"/inputs.SHA256SUMS\n+$(sha256sum \"$UNSIGNED_TARBALL\" | cut -d' ' -f1)  inputs/$(basename \"$UNSIGNED_TARBALL\")\n+$(sha256sum \"$CODESIGNATURE_GIT_ARCHIVE\" | cut -d' ' -f1)  inputs/$(basename \"$CODESIGNATURE_GIT_ARCHIVE\")\n+EOF\n+\n+mkdir -p \"$DISTSRC\"\n+(\n+    cd \"$DISTSRC\"\n+\n+    tar -xf \"$UNSIGNED_TARBALL\"\n+\n+    mkdir -p codesignatures\n+    tar -C codesignatures -xf \"$CODESIGNATURE_GIT_ARCHIVE\"\n+\n+    case \"$HOST\" in\n+        *mingw*)\n+            find \"$PWD\" -name \"*-unsigned.exe\" | while read -r infile; do\n+                infile_base=\"$(basename \"$infile\")\"\n+\n+                # Codesigned *-unsigned.exe and output to OUTDIR\n+                osslsigncode attach-signature \\\n+                                 -in \"$infile\" \\\n+                                 -out \"${OUTDIR}/${infile_base/-unsigned}\" \\\n+                                 -sigin codesignatures/win/\"$infile_base\".pem\n+            done\n+            ;;\n+        *darwin*)\n+            # Apply detached codesignatures to dist/ (in-place)\n+            signapple apply dist/Bitcoin-Qt.app codesignatures/osx/dist\n+\n+            # Make an uncompressed DMG from dist/\n+            xorrisofs -D -l -V \"$(< osx_volname)\" -no-pad -r -dir-mode 0755 \\\n+                      -o uncompressed.dmg \\\n+                      dist \\\n+                      -- -volume_date all_file_dates =\"$SOURCE_DATE_EPOCH\"\n+\n+            # Compress uncompressed.dmg and output to OUTDIR\n+            ./dmg dmg uncompressed.dmg \"${OUTDIR}/${DISTNAME}-osx-signed.dmg\"\n+            ;;\n+        *)\n+            exit 1\n+            ;;\n+    esac\n+)  # $DISTSRC\n+\n+mv --no-target-directory \"$OUTDIR\" \"$ACTUAL_OUTDIR\""
      }
    ]
  },
  {
    "sha": "ee0a67c32a8861eab650bf8894af06807578eba0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZTBhNjdjMzJhODg2MWVhYjY1MGJmODg5NGFmMDY4MDc1NzhlYmEw",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-05-13T19:26:52Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-05-13T19:41:56Z"
      },
      "message": "codesigning: Use SHA256 as digest for osslsigncode (Windows)",
      "tree": {
        "sha": "e88f5a04b2e60530fce0a0918999f456b071f8ef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e88f5a04b2e60530fce0a0918999f456b071f8ef"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee0a67c32a8861eab650bf8894af06807578eba0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee0a67c32a8861eab650bf8894af06807578eba0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ee0a67c32a8861eab650bf8894af06807578eba0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee0a67c32a8861eab650bf8894af06807578eba0/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "38eb91eb0616ed6dbe34c23e11588d130fef07f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38eb91eb0616ed6dbe34c23e11588d130fef07f8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/38eb91eb0616ed6dbe34c23e11588d130fef07f8"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "29802e622ed12908cc38404f9e675b50cb3837e2",
        "filename": "contrib/windeploy/detached-sig-create.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee0a67c32a8861eab650bf8894af06807578eba0/contrib/windeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee0a67c32a8861eab650bf8894af06807578eba0/contrib/windeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/windeploy/detached-sig-create.sh?ref=ee0a67c32a8861eab650bf8894af06807578eba0",
        "patch": "@@ -25,7 +25,7 @@ CERTFILE=\"win-codesign.cert\"\n mkdir -p \"${OUTSUBDIR}\"\n basename -a $(ls -1 \"${SRCDIR}\"/*-unsigned.exe) | while read UNSIGNED; do\n   echo Signing \"${UNSIGNED}\"\n-  \"${OSSLSIGNCODE}\" sign -certs \"${CERTFILE}\" -t \"${TIMESERVER}\" -in \"${SRCDIR}/${UNSIGNED}\" -out \"${WORKDIR}/${UNSIGNED}\" \"$@\"\n+  \"${OSSLSIGNCODE}\" sign -certs \"${CERTFILE}\" -t \"${TIMESERVER}\" -h sha256 -in \"${SRCDIR}/${UNSIGNED}\" -out \"${WORKDIR}/${UNSIGNED}\" \"$@\"\n   \"${OSSLSIGNCODE}\" extract-signature -pem -in \"${WORKDIR}/${UNSIGNED}\" -out \"${OUTSUBDIR}/${UNSIGNED}.pem\" && rm \"${WORKDIR}/${UNSIGNED}\"\n done\n "
      }
    ]
  },
  {
    "sha": "ee883201cf134952284632e9e9ae72bf1c8c792f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZTg4MzIwMWNmMTM0OTUyMjg0NjMyZTllOWFlNzJiZjFjOGM3OTJm",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-05-19T17:47:58Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-05-19T19:29:10Z"
      },
      "message": "guix: repro: Sort find output in libtool for gcc-8\n\nOtherwise the resulting .a static libraries (e.g. libstdc++.a) will not\nbe reproducible and end up making the Bitcoin binaries non-reproducible\nas well.\n\nSee: https://reproducible-builds.org/docs/archives/#gnu-libtool",
      "tree": {
        "sha": "831e6ff65c2fb47c84fdb75570a50e694a434c64",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/831e6ff65c2fb47c84fdb75570a50e694a434c64"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee883201cf134952284632e9e9ae72bf1c8c792f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee883201cf134952284632e9e9ae72bf1c8c792f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ee883201cf134952284632e9e9ae72bf1c8c792f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee883201cf134952284632e9e9ae72bf1c8c792f/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ee0a67c32a8861eab650bf8894af06807578eba0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee0a67c32a8861eab650bf8894af06807578eba0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ee0a67c32a8861eab650bf8894af06807578eba0"
      }
    ],
    "stats": {
      "total": 400,
      "additions": 398,
      "deletions": 2
    },
    "files": [
      {
        "sha": "d2bc789b60cdc99219fe8c0290d713e22a22f2c2",
        "filename": "contrib/guix/manifest.scm",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee883201cf134952284632e9e9ae72bf1c8c792f/contrib/guix/manifest.scm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee883201cf134952284632e9e9ae72bf1c8c792f/contrib/guix/manifest.scm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/manifest.scm?ref=ee883201cf134952284632e9e9ae72bf1c8c792f",
        "patch": "@@ -130,12 +130,16 @@ chain for \" target \" development.\"))\n       (home-page (package-home-page xgcc))\n       (license (package-license xgcc)))))\n \n+(define base-gcc\n+  (package-with-extra-patches gcc-8\n+    (search-our-patches \"gcc-8-sort-libtool-find-output.patch\")))\n+\n (define* (make-bitcoin-cross-toolchain target\n                                        #:key\n                                        (base-gcc-for-libc gcc-7)\n                                        (base-kernel-headers linux-libre-headers-5.4)\n                                        (base-libc glibc)  ; glibc 2.31\n-                                       (base-gcc (make-gcc-rpath-link gcc-8)))\n+                                       (base-gcc (make-gcc-rpath-link base-gcc)))\n   \"Convenience wrapper around MAKE-CROSS-TOOLCHAIN with default values\n desirable for building Bitcoin Core release binaries.\"\n   (make-cross-toolchain target\n@@ -153,7 +157,7 @@ desirable for building Bitcoin Core release binaries.\"\n          (pthreads-xlibc mingw-w64-x86_64-winpthreads)\n          (pthreads-xgcc (make-gcc-with-pthreads\n                          (cross-gcc target\n-                                    #:xgcc (make-ssp-fixed-gcc gcc-8)\n+                                    #:xgcc (make-ssp-fixed-gcc base-gcc)\n                                     #:xbinutils xbinutils\n                                     #:libc pthreads-xlibc))))\n     ;; Define a meta-package that propagates the resulting XBINUTILS, XLIBC, and"
      },
      {
        "sha": "1dfe3ba132b679caf268e5d5022341ad92c6dc67",
        "filename": "contrib/guix/patches/gcc-8-sort-libtool-find-output.patch",
        "status": "added",
        "additions": 392,
        "deletions": 0,
        "changes": 392,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee883201cf134952284632e9e9ae72bf1c8c792f/contrib/guix/patches/gcc-8-sort-libtool-find-output.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee883201cf134952284632e9e9ae72bf1c8c792f/contrib/guix/patches/gcc-8-sort-libtool-find-output.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/patches/gcc-8-sort-libtool-find-output.patch?ref=ee883201cf134952284632e9e9ae72bf1c8c792f",
        "patch": "@@ -0,0 +1,392 @@\n+diff --git a/gcc/configure b/gcc/configure\n+index 97ba7d7d69c..e37a96f0c0c 100755\n+--- a/gcc/configure\n++++ b/gcc/configure\n+@@ -19720,20 +19720,20 @@ if test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n+ \t      prelink_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n+-\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | $NL2SP`\"'\n++\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n+ \t      old_archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n+-\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | $NL2SP`~\n++\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n+ \t\t$RANLIB $oldlib'\n+ \t      archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+ \t      archive_expsym_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n+ \t      ;;\n+ \t    *) # Version 6 and above use weak symbols\n+ \t      archive_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+diff --git a/libcc1/configure b/libcc1/configure\n+index f53a121611c..5740ca90cab 100755\n+--- a/libcc1/configure\n++++ b/libcc1/configure\n+@@ -12221,20 +12221,20 @@ if test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n+ \t      prelink_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n+-\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | $NL2SP`\"'\n++\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n+ \t      old_archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n+-\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | $NL2SP`~\n++\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n+ \t\t$RANLIB $oldlib'\n+ \t      archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+ \t      archive_expsym_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n+ \t      ;;\n+ \t    *) # Version 6 and above use weak symbols\n+ \t      archive_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+diff --git a/libffi/configure b/libffi/configure\n+index 790a291011f..54b1ac18306 100755\n+--- a/libffi/configure\n++++ b/libffi/configure\n+@@ -12661,20 +12661,20 @@ if test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n+ \t      prelink_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n+-\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | $NL2SP`\"'\n++\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n+ \t      old_archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n+-\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | $NL2SP`~\n++\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n+ \t\t$RANLIB $oldlib'\n+ \t      archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+ \t      archive_expsym_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n+ \t      ;;\n+ \t    *) # Version 6 and above use weak symbols\n+ \t      archive_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+diff --git a/libgo/config/libtool.m4 b/libgo/config/libtool.m4\n+index f7005947454..8a84417b828 100644\n+--- a/libgo/config/libtool.m4\n++++ b/libgo/config/libtool.m4\n+@@ -6010,20 +6010,20 @@ if test \"$_lt_caught_CXX_error\" != yes; then\n+ \t      _LT_TAGVAR(prelink_cmds, $1)='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n+-\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | $NL2SP`\"'\n++\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n+ \t      _LT_TAGVAR(old_archive_cmds, $1)='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n+-\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | $NL2SP`~\n++\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n+ \t\t$RANLIB $oldlib'\n+ \t      _LT_TAGVAR(archive_cmds, $1)='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+ \t      _LT_TAGVAR(archive_expsym_cmds, $1)='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n+ \t      ;;\n+ \t    *) # Version 6 and above use weak symbols\n+ \t      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+diff --git a/libgo/config/ltmain.sh b/libgo/config/ltmain.sh\n+index ce66b44906a..0f81c401407 100644\n+--- a/libgo/config/ltmain.sh\n++++ b/libgo/config/ltmain.sh\n+@@ -2917,7 +2917,7 @@ func_extract_archives ()\n+ \t    darwin_file=\n+ \t    darwin_files=\n+ \t    for darwin_file in $darwin_filelist; do\n+-\t      darwin_files=`find unfat-$$ -name $darwin_file -print | $NL2SP`\n++\t      darwin_files=`find unfat-$$ -name $darwin_file -print | sort | $NL2SP`\n+ \t      $LIPO -create -output \"$darwin_file\" $darwin_files\n+ \t    done # $darwin_filelist\n+ \t    $RM -rf unfat-$$\n+@@ -2932,7 +2932,7 @@ func_extract_archives ()\n+         func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n+ \t;;\n+       esac\n+-      my_oldobjs=\"$my_oldobjs \"`find $my_xdir -name \\*.$objext -print -o -name \\*.lo -print | $NL2SP`\n++      my_oldobjs=\"$my_oldobjs \"`find $my_xdir -name \\*.$objext -print -o -name \\*.lo -print | sort | $NL2SP`\n+     done\n+ \n+     func_extract_archives_result=\"$my_oldobjs\"\n+diff --git a/libhsail-rt/configure b/libhsail-rt/configure\n+index a4fcc10c1f9..8e671229fcd 100755\n+--- a/libhsail-rt/configure\n++++ b/libhsail-rt/configure\n+@@ -12244,20 +12244,20 @@ if test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n+ \t      prelink_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n+-\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | $NL2SP`\"'\n++\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n+ \t      old_archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n+-\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | $NL2SP`~\n++\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n+ \t\t$RANLIB $oldlib'\n+ \t      archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+ \t      archive_expsym_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n+ \t      ;;\n+ \t    *) # Version 6 and above use weak symbols\n+ \t      archive_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+diff --git a/libitm/configure b/libitm/configure\n+index dbf386db434..29d4f10611f 100644\n+--- a/libitm/configure\n++++ b/libitm/configure\n+@@ -13067,20 +13067,20 @@ if test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n+ \t      prelink_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n+-\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | $NL2SP`\"'\n++\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n+ \t      old_archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n+-\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | $NL2SP`~\n++\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n+ \t\t$RANLIB $oldlib'\n+ \t      archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+ \t      archive_expsym_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n+ \t      ;;\n+ \t    *) # Version 6 and above use weak symbols\n+ \t      archive_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+diff --git a/liboffloadmic/configure b/liboffloadmic/configure\n+index f873716991b..7aa9186b10e 100644\n+--- a/liboffloadmic/configure\n++++ b/liboffloadmic/configure\n+@@ -12379,20 +12379,20 @@ if test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n+ \t      prelink_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n+-\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | $NL2SP`\"'\n++\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n+ \t      old_archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n+-\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | $NL2SP`~\n++\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n+ \t\t$RANLIB $oldlib'\n+ \t      archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+ \t      archive_expsym_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n+ \t      ;;\n+ \t    *) # Version 6 and above use weak symbols\n+ \t      archive_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+diff --git a/liboffloadmic/plugin/configure b/liboffloadmic/plugin/configure\n+index c031eb3e7fa..67fc7368f21 100644\n+--- a/liboffloadmic/plugin/configure\n++++ b/liboffloadmic/plugin/configure\n+@@ -12086,20 +12086,20 @@ if test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n+ \t      prelink_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n+-\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | $NL2SP`\"'\n++\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n+ \t      old_archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n+-\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | $NL2SP`~\n++\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n+ \t\t$RANLIB $oldlib'\n+ \t      archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+ \t      archive_expsym_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n+ \t      ;;\n+ \t    *) # Version 6 and above use weak symbols\n+ \t      archive_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+diff --git a/libsanitizer/configure b/libsanitizer/configure\n+index 4695bc7d4f7..cb7d25c07e6 100755\n+--- a/libsanitizer/configure\n++++ b/libsanitizer/configure\n+@@ -13308,20 +13308,20 @@ if test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n+ \t      prelink_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n+-\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | $NL2SP`\"'\n++\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n+ \t      old_archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n+-\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | $NL2SP`~\n++\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n+ \t\t$RANLIB $oldlib'\n+ \t      archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+ \t      archive_expsym_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n+ \t      ;;\n+ \t    *) # Version 6 and above use weak symbols\n+ \t      archive_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+diff --git a/libstdc++-v3/configure b/libstdc++-v3/configure\n+index 61457e940ec..21ef1f61e41 100755\n+--- a/libstdc++-v3/configure\n++++ b/libstdc++-v3/configure\n+@@ -13087,20 +13087,20 @@ if test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n+ \t      prelink_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n+-\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | $NL2SP`\"'\n++\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n+ \t      old_archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n+-\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | $NL2SP`~\n++\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n+ \t\t$RANLIB $oldlib'\n+ \t      archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+ \t      archive_expsym_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n+ \t      ;;\n+ \t    *) # Version 6 and above use weak symbols\n+ \t      archive_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+diff --git a/libtool.m4 b/libtool.m4\n+index 24d13f34409..940faaa161d 100644\n+--- a/libtool.m4\n++++ b/libtool.m4\n+@@ -6005,20 +6005,20 @@ if test \"$_lt_caught_CXX_error\" != yes; then\n+ \t      _LT_TAGVAR(prelink_cmds, $1)='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n+-\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | $NL2SP`\"'\n++\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n+ \t      _LT_TAGVAR(old_archive_cmds, $1)='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n+-\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | $NL2SP`~\n++\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n+ \t\t$RANLIB $oldlib'\n+ \t      _LT_TAGVAR(archive_cmds, $1)='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+ \t      _LT_TAGVAR(archive_expsym_cmds, $1)='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n+ \t      ;;\n+ \t    *) # Version 6 and above use weak symbols\n+ \t      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+diff --git a/libvtv/configure b/libvtv/configure\n+index a197f750453..31ab3a0637b 100755\n+--- a/libvtv/configure\n++++ b/libvtv/configure\n+@@ -13339,20 +13339,20 @@ if test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n+ \t      prelink_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n+-\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | $NL2SP`\"'\n++\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n+ \t      old_archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n+-\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | $NL2SP`~\n++\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n+ \t\t$RANLIB $oldlib'\n+ \t      archive_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+ \t      archive_expsym_cmds_CXX='tpldir=Template.dir~\n+ \t\trm -rf $tpldir~\n+ \t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n+-\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n++\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n+ \t      ;;\n+ \t    *) # Version 6 and above use weak symbols\n+ \t      archive_cmds_CXX='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n+diff --git a/ltmain.sh b/ltmain.sh\n+index 9503ec85d70..79f9ba89af5 100644\n+--- a/ltmain.sh\n++++ b/ltmain.sh\n+@@ -2917,7 +2917,7 @@ func_extract_archives ()\n+ \t    darwin_file=\n+ \t    darwin_files=\n+ \t    for darwin_file in $darwin_filelist; do\n+-\t      darwin_files=`find unfat-$$ -name $darwin_file -print | $NL2SP`\n++\t      darwin_files=`find unfat-$$ -name $darwin_file -print | sort | $NL2SP`\n+ \t      $LIPO -create -output \"$darwin_file\" $darwin_files\n+ \t    done # $darwin_filelist\n+ \t    $RM -rf unfat-$$\n+@@ -2932,7 +2932,7 @@ func_extract_archives ()\n+         func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n+ \t;;\n+       esac\n+-      my_oldobjs=\"$my_oldobjs \"`find $my_xdir -name \\*.$objext -print -o -name \\*.lo -print | $NL2SP`\n++      my_oldobjs=\"$my_oldobjs \"`find $my_xdir -name \\*.$objext -print -o -name \\*.lo -print | sort | $NL2SP`\n+     done\n+ \n+     func_extract_archives_result=\"$my_oldobjs\""
      }
    ]
  }
]