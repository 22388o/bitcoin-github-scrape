DrahtBot,2019-09-17 00:55:16,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18530 (Add test for -blocksonly and -whitelistforcerelay param interaction by glowang)\n\nIf you consider this pull reque",https://github.com/bitcoin/bitcoin/pull/16890#issuecomment-532013608,532013608,
sdaftuar,2019-09-17 13:18:41,"I'm not sure I understand the thinking here -- should we also disallow transacting if in blocksonly mode?  It's not clear to me that hiding the fee estimation results but allowing the wallet to transact is a useful user experience.\n\nI see the original issue has to do with a lightning wallet that is using our fee estimates under the hood; perhaps we should instead expose the blocksonly setting ",https://github.com/bitcoin/bitcoin/pull/16890#issuecomment-532216705,532216705,
darosior,2019-09-17 16:24:23,"> I'm not sure I understand the thinking here -- should we also disallow transacting if in blocksonly mode? It's not clear to me that hiding the fee estimation results but allowing the wallet to transact is a useful user experience.\n\nSince the `estimatesmartfee` command returns an estimation based on relayed transaction, if we don't relay (or rather stop relaying) the estimation will be wrong ",https://github.com/bitcoin/bitcoin/pull/16890#issuecomment-532295813,532295813,
sdaftuar,2019-09-17 16:51:40,"> I think this should be handled on our side as we expose an inaccurate information.\n\nIf this is a substantial problem, then I would think we should take action to protect our own wallet users as well (rather than hide the results of what our fee estimation would do!).",https://github.com/bitcoin/bitcoin/pull/16890#issuecomment-532306026,532306026,
darosior,2019-09-17 20:48:24,"Yes that's preferable and also what I wanted to do instead of this PR.\nHowever I don't see how we could give an accurate estimation without an updated mempool ? If you have an idea I'd be happy to work on this.\n\nI thought about median fees in the last `n` blocks but in the case that a lot of transactions are mined with unnecessary high fees that would give inaccurate estimation and contribut",https://github.com/bitcoin/bitcoin/pull/16890#issuecomment-532395734,532395734,
promag,2019-09-18 13:52:23,"> However I don't see how we could give an accurate estimation without an updated mempool\n\nCould just fail? There's already the error ""Insufficient data or no feerate found"" so looks like we could add ""Expired data"" or something like that - this would affect wallets too.",https://github.com/bitcoin/bitcoin/pull/16890#issuecomment-532694319,532694319,
darosior,2019-09-18 16:04:17,"> > However I don't see how we could give an accurate estimation without an updated mempool\n> \n> Could just fail? There's already the error ""Insufficient data or no feerate found"" so looks like we could add ""Expired data"" or something like that - this would affect wallets too.\n\nYes, that's why I ended up submitting this :-)",https://github.com/bitcoin/bitcoin/pull/16890#issuecomment-532753311,532753311,
DrahtBot,2020-05-21 14:17:02,<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).,https://github.com/bitcoin/bitcoin/pull/16890#issuecomment-632111499,632111499,
jnewbery,2020-09-29 08:59:05,Should this be closed? I think it's no longer needed now that #18766 is open.,https://github.com/bitcoin/bitcoin/pull/16890#issuecomment-700567189,700567189,
darosior,2020-09-29 09:01:13,"Absolutely, i thought i added a magical ""closes xxx"" link in #18766 .\n\nAnyways, thanks for the reminder!",https://github.com/bitcoin/bitcoin/pull/16890#issuecomment-700568510,700568510,
promag,2019-09-17 07:24:36,"nit, add braces or single line.",https://github.com/bitcoin/bitcoin/pull/16890#discussion_r325016288,325016288,src/rpc/mining.cpp
