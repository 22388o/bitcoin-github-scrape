[
  {
    "sha": "86c3f8db0bf64693313a81d5fe92ef603499030a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NmMzZjhkYjBiZjY0NjkzMzEzYTgxZDVmZTkyZWY2MDM0OTkwMzBh",
    "commit": {
      "author": {
        "name": "Johnson Lau",
        "email": "jl2012@xbt.hk",
        "date": "2016-09-11T18:03:55Z"
      },
      "committer": {
        "name": "Johnson Lau",
        "email": "jl2012@xbt.hk",
        "date": "2016-09-13T03:35:14Z"
      },
      "message": "Remove createwitnessaddress\n\nThis RPC command is unsafe as it will return an address even if the script is invalid.",
      "tree": {
        "sha": "3233fb49876f6740ff9e46d5bd4a89bfc2af39e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3233fb49876f6740ff9e46d5bd4a89bfc2af39e6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/86c3f8db0bf64693313a81d5fe92ef603499030a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/86c3f8db0bf64693313a81d5fe92ef603499030a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/86c3f8db0bf64693313a81d5fe92ef603499030a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/86c3f8db0bf64693313a81d5fe92ef603499030a/comments",
    "author": {
      "login": "jl2012",
      "id": 8403418,
      "node_id": "MDQ6VXNlcjg0MDM0MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8403418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jl2012",
      "html_url": "https://github.com/jl2012",
      "followers_url": "https://api.github.com/users/jl2012/followers",
      "following_url": "https://api.github.com/users/jl2012/following{/other_user}",
      "gists_url": "https://api.github.com/users/jl2012/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jl2012/subscriptions",
      "organizations_url": "https://api.github.com/users/jl2012/orgs",
      "repos_url": "https://api.github.com/users/jl2012/repos",
      "events_url": "https://api.github.com/users/jl2012/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jl2012/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jl2012",
      "id": 8403418,
      "node_id": "MDQ6VXNlcjg0MDM0MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8403418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jl2012",
      "html_url": "https://github.com/jl2012",
      "followers_url": "https://api.github.com/users/jl2012/followers",
      "following_url": "https://api.github.com/users/jl2012/following{/other_user}",
      "gists_url": "https://api.github.com/users/jl2012/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jl2012/subscriptions",
      "organizations_url": "https://api.github.com/users/jl2012/orgs",
      "repos_url": "https://api.github.com/users/jl2012/repos",
      "events_url": "https://api.github.com/users/jl2012/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jl2012/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2a0836f6d5e7c1d7e97bedb0e0ea33dcaf981f77",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a0836f6d5e7c1d7e97bedb0e0ea33dcaf981f77",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2a0836f6d5e7c1d7e97bedb0e0ea33dcaf981f77"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 0,
      "deletions": 38
    },
    "files": [
      {
        "sha": "5afcf6353c731fbd8d65882011338135cdf8db05",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 38,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/86c3f8db0bf64693313a81d5fe92ef603499030a/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/86c3f8db0bf64693313a81d5fe92ef603499030a/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=86c3f8db0bf64693313a81d5fe92ef603499030a",
        "patch": "@@ -321,43 +321,6 @@ UniValue createmultisig(const UniValue& params, bool fHelp)\n     return result;\n }\n \n-UniValue createwitnessaddress(const UniValue& params, bool fHelp)\n-{\n-    if (fHelp || params.size() < 1 || params.size() > 1)\n-    {\n-        string msg = \"createwitnessaddress \\\"script\\\"\\n\"\n-            \"\\nCreates a witness address for a particular script.\\n\"\n-            \"It returns a json object with the address and witness script.\\n\"\n-\n-            \"\\nArguments:\\n\"\n-            \"1. \\\"script\\\"       (string, required) A hex encoded script\\n\"\n-\n-            \"\\nResult:\\n\"\n-            \"{\\n\"\n-            \"  \\\"address\\\":\\\"multisigaddress\\\",  (string) The value of the new address (P2SH of witness script).\\n\"\n-            \"  \\\"witnessScript\\\":\\\"script\\\"      (string) The string value of the hex-encoded witness script.\\n\"\n-            \"}\\n\"\n-        ;\n-        throw runtime_error(msg);\n-    }\n-\n-    if (!IsHex(params[0].get_str())) {\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Script must be hex-encoded\");\n-    }\n-\n-    std::vector<unsigned char> code = ParseHex(params[0].get_str());\n-    CScript script(code.begin(), code.end());\n-    CScript witscript = GetScriptForWitness(script);\n-    CScriptID witscriptid(witscript);\n-    CBitcoinAddress address(witscriptid);\n-\n-    UniValue result(UniValue::VOBJ);\n-    result.push_back(Pair(\"address\", address.ToString()));\n-    result.push_back(Pair(\"witnessScript\", HexStr(witscript.begin(), witscript.end())));\n-\n-    return result;\n-}\n-\n UniValue verifymessage(const UniValue& params, bool fHelp)\n {\n     if (fHelp || params.size() != 3)\n@@ -493,7 +456,6 @@ static const CRPCCommand commands[] =\n     { \"control\",            \"getinfo\",                &getinfo,                true  }, /* uses wallet if enabled */\n     { \"util\",               \"validateaddress\",        &validateaddress,        true  }, /* uses wallet if enabled */\n     { \"util\",               \"createmultisig\",         &createmultisig,         true  },\n-    { \"util\",               \"createwitnessaddress\",   &createwitnessaddress,   true  },\n     { \"util\",               \"verifymessage\",          &verifymessage,          true  },\n     { \"util\",               \"signmessagewithprivkey\", &signmessagewithprivkey, true  },\n "
      }
    ]
  }
]