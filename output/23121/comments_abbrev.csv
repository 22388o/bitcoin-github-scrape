glozow,2021-09-28 17:33:33,"Further motivation:\n\n(1) The restriction of only allowing confirmed UTXOs for funding a fee-bump doesn't necessarily help our mempool validation logic, but hurts users trying to fee-bump their transactions. If the original transaction's output value isn't sufficient to fund a fee-bump and/or all of the user's other UTXOs are unconfirmed, they might not be able to fee bump. Wallet developers al",https://github.com/bitcoin/bitcoin/pull/23121#issuecomment-929475999,929475999,
DrahtBot,2021-09-28 18:05:12,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22867](https://github.com/bitcoin/bitcoin/pull/22867) (test: Extend test coverage of BIP125 and document confusing/incon",https://github.com/bitcoin/bitcoin/pull/23121#issuecomment-929498773,929498773,
ariard,2021-09-29 00:07:04,"@glozow @jnewbery If you think this discovery has safety implications, have you done a responsible disclosure of this defect not only to the maintainers of this project but also potentially affected ecosystem stakeholders e.g maintainers of other full-nodes implementations ?\n\n-------------------\n\nGood finding! IIUC, the bypass trick relies on extending the set of replaced transactions with",https://github.com/bitcoin/bitcoin/pull/23121#issuecomment-929711645,929711645,
glozow,2021-09-29 14:16:43,"> If you think this discovery has safety implications, have you done a responsible disclosure of this defect not only to the maintainers of this project but also potentially affected ecosystem stakeholders e.g maintainers of other full-nodes implementations ?\n\n@ariard I didn't think this is a safety issue for Bitcoin nodes, just a limitation that we no longer have. The ""trick"" isn't completely",https://github.com/bitcoin/bitcoin/pull/23121#issuecomment-930220389,930220389,
darosior,2021-09-29 14:27:22,"> Coupled with the strategy mentioned above, they can reduce the ancestor score of this transaction, thereby pinning it\n\nYes.\n\n> You can re-RBF it, but might need to pay more fees. scream\n\nYes, and they can do that again and again (paying more fee at each iteration though so it's a limiting factor). Since nodes will accept any of the low-feerate package or the higher-feerate one it's a",https://github.com/bitcoin/bitcoin/pull/23121#issuecomment-930230217,930230217,
glozow,2021-09-29 14:51:30,"I don't suppose it's reasonable to recommend opting out of RBF for now? In any case, I think we need to add this ancestor score checking before we try to do full RBF, since it would leave all `ANYONECANPAY`-signed transactions vulnerable to this pinning attack.",https://github.com/bitcoin/bitcoin/pull/23121#issuecomment-930252121,930252121,
t-bast,2021-09-30 07:12:53,Concept ACK,https://github.com/bitcoin/bitcoin/pull/23121#issuecomment-930901338,930901338,
prayank23,2021-09-30 10:14:01,"> @glozow @jnewbery If you think this discovery has safety implications, have you done a responsible disclosure of this defect not only to the maintainers of this project but also potentially affected ecosystem stakeholders e.g maintainers of other full-nodes implementations ?\n\n> @ariard I didn't think this is a safety issue for Bitcoin nodes, just slightly incentive-incompatible behavior. The",https://github.com/bitcoin/bitcoin/pull/23121#issuecomment-931186706,931186706,
ariard,2021-09-30 17:29:20,"@glozow \n\nFor public records, before to open this PR, have you informed Bitcoin Core maintainers of your discovery yes or no ?\n\n----------------------------------\n\nI think by the past this project have always been careful about leveling the field in the miners block race (e.g [ASICBOOST](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-April/013996.html)) and I think defect",https://github.com/bitcoin/bitcoin/pull/23121#issuecomment-931521654,931521654,
luke-jr,2021-10-03 18:36:52,"1. Policy is a per-node and per-miner decision. What they choose should never be a security concern to anyone else - if it is, the ""someone else"" has the security flaw, not the node/miner imposing the policy. The ""something else"" in question should be fixed regardless of what policy nodes/miners choose.\n2. If policies were based on what is good for the network, Bitcoin Core wouldn't make blocks ",https://github.com/bitcoin/bitcoin/pull/23121#issuecomment-933003261,933003261,
glozow,2021-10-04 13:33:14,"> @glozow For public records, before to open this PR, have you informed Bitcoin Core maintainers of your discovery yes or no ?\n\nNo, because this is not a security vulnerability or even a bug in Bitcoin Core. A disclosure that boils down to ""if your transaction is signed with ANYONECANPAY and opts in to RBF, anyone can pay to RBF it. Our mempool evaluates its fees according to the rules specifi",https://github.com/bitcoin/bitcoin/pull/23121#issuecomment-933491274,933491274,
ariard,2021-10-04 21:00:28,"@luke-jr\n\nSure, I think it's one stand to recommend users or downstream projects to minimize assumptions on node policies, as it's ultimately not (and can't be) uniform on the p2p network. But I would say it's another thinking when we find a defect or bug in our code behavior, of which correctness signaling is present (AFAICT bip125, including the rule 2, is present in `doc/bips.md`). Without ",https://github.com/bitcoin/bitcoin/pull/23121#issuecomment-933850746,933850746,
meshcollider,2021-10-05 07:47:11,"User @prayank23 is having difficulty commenting on this PR for some reason, so I am relaying his comments/questions from IRC:\n\n> Two questions for PR author:\n> 1. Unconfirmed UTXO are discouraged in Core. Does this PR change default behaviour? Context: https://github.com/bitcoin-core/gui/issues/242\n> 2. Why do you think it's not a bug if attacker can confirm a tx with less fee rate by repl",https://github.com/bitcoin/bitcoin/pull/23121#issuecomment-934154169,934154169,
glozow,2021-10-22 13:50:17,rebased and added documentation for our RBF policy + difference with BIP125,https://github.com/bitcoin/bitcoin/pull/23121#issuecomment-949650522,949650522,
glozow,2021-11-09 20:37:04,Rebased,https://github.com/bitcoin/bitcoin/pull/23121#issuecomment-964522620,964522620,
t-bast,2021-11-10 10:49:00,"nit:\n\n```suggestion\n        tx.vin[i].prevout.n = input_indices[i];\n```\n\nI'm not sure it's worth having this mechanism of fallback to `0` but only for the last inputs, it's a bit confusing.\nMaybe just making `input_indices` completely optional (in which case you'd use `0` for all inputs) is better?\nAnd if it's provided then it should be provided for all inputs.\nIn that case it wo",https://github.com/bitcoin/bitcoin/pull/23121#discussion_r746469903,746469903,src/test/rbf_tests.cpp
t-bast,2021-11-10 10:55:10,"Would it be worth documenting the CPFP carve-out rule (in the `doc` folder, similarly to RBF)?\nEspecially now that it does require no new unconfirmed inputs which RBF doesn't?\nIt can be done in a separate PR though.",https://github.com/bitcoin/bitcoin/pull/23121#discussion_r746474581,746474581,src/validation.cpp
